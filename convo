/**
 * convo-web-app - v2016.04.12.03 - 2016-04-12
 * https://sapp.convo.com/webapp
 *
 * Copyright (c) 2016 Junaid Khan
 * Licensed MIT <https://raw.github.com/ngbp/ngbp/master/LICENSE>
 */

!function(a, b, c) {
    function d(b) {
        if (!b.getBoundingClientRect)
            return !0;
        var c = b.getBoundingClientRect()
          , d = $(a).height()
          , e = c.bottom - c.top;
        return !(c.top > d || c.top + e < 0)
    }
    function e(a, b, c) {
        var d;
        return function() {
            var e = this
              , f = arguments
              , g = function() {
                d = null ,
                c || a.apply(e, f)
            }
              , h = c && !d;
            clearTimeout(d),
            d = setTimeout(g, b),
            h && a.apply(e, f)
        }
    }
    Date.now();
    a.console.debug = a.console.debug || a.console.log,
    b.module("convoApp", ["ngAnimate", "ngSanitize", "templates-app", "templates-common", "ui.sortable", "ui.bootstrap", "perfect_scrollbar", "pasvaz.bindonce", "ngTagsInput"]).config(["$tooltipProvider", function(a) {
        a.setTriggers({
            showTooltip: "hideTooltip",
            showEmojiPopover: "hideEmojiPopover",
            showGiphyPopover: "hideGiphyPopover"
        })
    }
    ]).controller("AppCtrl", ["$scope", "$rootScope", "config", "$location", "Login", "Groups", "Users", "accountInfo", "userInfo", "AppLinks", "datetimeService", "authService", "serverPingService", "awsService", "chatAppContext", "chatUsersManager", "InAppNotifications", "appStateInfo", "rtcNotificationManager", "appTitleManager", "connectivity", "ServerComm", "utils", "accountDataService", "settingsService", "Feed", "appTabs", "localStore", "Filters", "$q", "crossBrowserCompatibility", "appsInfo", "logger", "importMacContacts", "emojiDataService", "preloadService", "filterInfo", "loginResponseData", "FilterTypes", "linksClickHistory", "$timeout", "resourcesTabsManager", "premiumUpgradeBannerService", function(c, d, e, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T) {
        function U() {
            var a = null ;
            try {
                z.isIE() && (a = localStorage.getItem("restricted_location_hash"))
            } catch (b) {
                J.error("Error occured while hash reading from localstore")
            }
            return a
        }
        function V() {
            try {
                localStorage.removeItem("restricted_location_hash")
            } catch (a) {
                J.error("Error occured while removing temp-hash localstore.")
            }
        }
        function W(a) {
            c.current_view = a
        }
        function X(a) {
            J.debug("AppCtrl: handleSignInResponseData(): START"),
            O.set(a),
            d.login_data = a;
            for (var b, c = a.user_accounts, h = a.account_id, o = 0; o < c.length; o++)
                if (c[o].account_id === h) {
                    b = c[o];
                    break
                }
            A.initialize(),
            k.initAccountInfo(b, c),
            l.initUserInfo(a.user, b, d.login_data.is_administration_mode),
            q.setAwsData(a.aws_data);
            var u = {};
            u[a.user.user_id] = {
                accessible: !0,
                name: a.user.first_name + " " + a.user.last_name,
                profile_image_type: a.user.profile_image_type,
                profile_image_version: a.user.profile_image_version
            },
            C.setUsers(u);
            var w = parseInt(a.time.timestamp)
              , y = ba ? (Date.now() - ba) / 2 : 0;
            n.init(w + y),
            ca ? (J.debug("AppCtrl: handleSignInResponseData(): redirecting to redirectUrl"),
            g.path(ca.path).search(ca.search).hash(ca.hash)) : (J.debug("AppCtrl: handleSignInResponseData(): no redirectUrl"),
            g.path("/feed").search({}).hash("title=My Feed")),
            C.cachedFeedData = a.feedData,
            D.initializeThisTab(Y),
            i.getGroups(),
            j.getUsers().then(function(a) {
                p.init(),
                t.initialize()
            }),
            i.initRTC(),
            B.initialize(l.getUserId()),
            B.getGeneralSettings().then(function(a) {
                e.IS_NATIVE && nativeCommBridge.setGeneralSettings(JSON.stringify(a))
            });
            var z = 10
              , F = 1
              , G = E.readData("bosh_server_sub_domain_index");
            if (G && G.data) {
                var H = G.data;
                "number" == typeof H && H >= 1 && z >= H && (F = H)
            }
            E.writeData("bosh_server_sub_domain_index", F + 1);
            var I = e.XMPP_SERVER
              , H = I.indexOf(".")
              , I = I.substring(0, H) + F + I.slice(H);
            if (console.error("BOSH DOMAIN: " + I),
            r.connectConnectionManager(a.account_id, a.user, d.login_data.xmpp_session_token, e.XMPP_DOMAIN, I, e.SECURE_COMM, x, e.IS_NATIVE),
            r.connect(a.account_id, a.user, d.login_data.xmpp_session_token, null , null , e.SECURE_COMM, x),
            r.setServices(D, J, l),
            s.setAppUsersService(j),
            v.connect(),
            v.addListener(f.chatsdk.ChatEvents.CONNECTED, function() {
                J.log("rtcNotificationManager CONNECTED")
            }),
            e.IS_NATIVE && nativeCommBridge.signIn(JSON.stringify(a)),
            K.setProperties({
                display_import_users_nag: a.display_import_users_nag,
                display_import_users_nag_count: a.display_import_users_nag_count
            }),
            setTimeout(function() {
                L.loadAssets(),
                M.loadFonts(),
                M.loadImages()
            }, 5e3),
            J.debug("AppCtrl: handleSignInResponseData(): END"),
            null  != a.show_upgrade_success_tooltip) {
                var N = g.path()
                  , P = g.search()
                  , Q = g.hash()
                  , R = m.urlToLink(N, P, Q, " ");
                if (R.type == m.RESOURCE_LINK && 19 == R.resourcePath.appInstance.uid) {
                    var U = function() {
                        S.off("homeTabSelected", U),
                        T.showUpgradeSuccessTooltip()
                    }
                    ;
                    S.on("homeTabSelected", U),
                    g.path("/feed").search({}).hash("")
                }
            }
        }
        var Y = z.generateUniqueId();
        d.clientInstanceId = Y,
        y.setClientInstanceId(Y),
        J.setClientInstanceId(Y),
        a.com_convo.config.sendAllLogsToServer && J.sendAllLogsToServer(),
        d.$on("upgrade-to-permium", function(a) {
            a.stopPropagation(),
            g.url(m.linkToUrl(m.newResourceLink("19", [{
                type: "17",
                uid: 0
            }], null , "Upgrade"), !0).slice(1))
        }),
        J.debug("AppCtrl: START" + (a.com_convo.config.sendAllLogsToServer ? ": sendAllLogsToServer" : "")),
        nativeCommBridge.initializeApp(),
        x.initialize(),
        u.initialize(),
        w.initialize();
        var Z, $ = "login_view", _ = "main_view", aa = a.com_convo.sessionData.isSignedIn, ba = null , ca = !1, da = !0;
        J.debug("AppCtrl: Initializations done: isSignedIn: " + aa),
        c.current_view = null ,
        d.filterInfo = N;
        var ea = g.path();
        J.debug("AppCtrl: path: " + ea + ", search: " + b.toJson(g.search()) + ", hash: " + g.hash()),
        "/login" != ea && "/" != ea && "/logout" != ea && "" != ea && (ca = {
            path: ea,
            search: g.search(),
            hash: g.hash()
        }),
        aa ? (J.debug("AppCtrl: calling handleSignInResponseData(): data length: " + a.com_convo.sessionData.signInResponseDataJSON.length),
        X(JSON.parse(a.com_convo.sessionData.signInResponseDataJSON))) : g.path("/login").search({}).hash(""),
        c.$on("$locationChangeStart", function(a) {
            var d = g.path()
              , e = g.search()
              , f = g.hash();
            J.log("$locationChangeStart: path: " + d + ", search: " + b.toJson(e) + ", hash: " + f);
            var h;
            da && (h = U()),
            Z = m.urlToLink(d, e, f, h),
            c.locationAppLink = Z;
            var i = Z;
            if (i) {
                if (!da && u.isAppInCompactView() && i.type == m.RESOURCE_LINK && (4 == i.resourcePath.appInstance.uid || 6 == i.resourcePath.appInstance.uid)) {
                    var j = Q.pop();
                    if (j && -1 !== j.classList.indexOf("open-in-compact-view")) {
                        a.preventDefault();
                        var k = i.resourcePath.hierarchy[0]
                          , l = m.linkToUrl(m.newFilterLink(F.newANDFiltersChain([F.newFilter(P.POST, JSON.stringify({
                            rid: k.uid,
                            rt: k.type
                        }))]), i.title), !0);
                        R(function() {
                            g.url(l.slice(1))
                        }, 0)
                    }
                }
            } else
                a.preventDefault(),
                J.error("AppCtrl.$locationChangeStart: Unrecognized url: " + g.absUrl()),
                R(function() {
                    g.url("/feed")
                }, 0)
        }),
        c.$on("$locationChangeSuccess", function(a) {
            J.debug("AppCtrl: $locationChangeSuccess: START");
            var b = Z;
            J.debug("AppCtrl.$locationChangeSuccess: isChrome: " + z.isChrome()),
            J.debug("AppCtrl.$locationChangeSuccess: link: type=" + b.type + ", action=" + b.action + ", title=" + b.title);
            var c = null ;
            if (b.type == m.ACTION_LINK || b.type == m.ACTION_LINK_FLEX_FORMAT)
                da && (V(),
                da = !1),
                "show_login_view" === b.action ? c = $ : "show_feed" === b.action ? (c = _,
                d.filterInfo.filterApplied = !1,
                d.filterInfo.filterLink = null ,
                d.$broadcast("filterChange")) : "show_logout_view" === b.action || "editNotificationsSettings" === b.action && g.url(I.getNotificationsSettingsViewUrl().slice(1));
            else if (b.type == m.FILTER_LINK) {
                c = _;
                var f = !1
                  , h = !1;
                if (b.filter) {
                    var k = F.hasAnyFromOrToFilters(b.filter.filters);
                    k && (f = !0,
                    k.toFilters.length > 0 && (h = !0))
                }
                if (f || h) {
                    d.filterInfo.waitingForServerDataBeforeEvaluatingTheFilter = !0;
                    var l;
                    l = f && h ? G.all([j.getUsers(), i.getGroups()]) : f ? j.getUsers() : i.getGroups(),
                    l["finally"](function() {
                        d.filterInfo.waitingForServerDataBeforeEvaluatingTheFilter = !1;
                        var a;
                        if (da && (a = U()),
                        b = m.urlToLink(g.path(), g.search(), g.hash(), a),
                        b && b.type == m.FILTER_LINK) {
                            var c = !0;
                            if (b.filter && 1 === b.filter.filters.length && F.isGroupFilter(b.filter.filters[0])) {
                                var e = b.filter.filters[0].value
                                  , f = i.getGroup(e);
                                if (f) {
                                    if ("PROFILE" === f.get("type")) {
                                        var h = j.getUser(f.get("created_by"));
                                        h && (b = m.newFilterLink(F.newANDFiltersChain([F.newFromFilter(h.id, h.get("email")), b.filter.filters[0]]), h.getFullName()))
                                    }
                                } else
                                    d.filterInfo.waitingForServerDataBeforeEvaluatingTheFilter = !0,
                                    c = !1,
                                    i.getGroupFromServerIfNotAvailableLocally(e)["finally"](function() {
                                        d.filterInfo.waitingForServerDataBeforeEvaluatingTheFilter = !1;
                                        var a;
                                        da && (a = U(),
                                        V(),
                                        da = !1),
                                        b = m.urlToLink(g.path(), g.search(), g.hash(), a),
                                        b && b.type == m.FILTER_LINK && (d.filterInfo.filterApplied = !0,
                                        d.filterInfo.filterLink = b,
                                        d.$broadcast("filterChange"),
                                        b.title && w.setAppTitle(b.title))
                                    })
                            } else if (b.filter) {
                                var k = F.hasAnyUserFilter(b.filter.filters);
                                if (k) {
                                    d.filterInfo.waitingForServerDataBeforeEvaluatingTheFilter = !0,
                                    c = !1;
                                    for (var l = [], n = 0; n < k.length; n++)
                                        l.push(j.getUserFromServerIfNotAvailableLocally(k[n].value));
                                    G.all(l)["finally"](function() {
                                        d.filterInfo.waitingForServerDataBeforeEvaluatingTheFilter = !1;
                                        var a;
                                        da && (a = U(),
                                        V(),
                                        da = !1),
                                        b = m.urlToLink(g.path(), g.search(), g.hash(), a),
                                        b && b.type == m.FILTER_LINK && (d.filterInfo.filterApplied = !0,
                                        d.filterInfo.filterLink = b,
                                        d.$broadcast("filterChange"),
                                        b.title && w.setAppTitle(b.title))
                                    })
                                }
                            }
                            c && (d.filterInfo.filterApplied = !0,
                            d.filterInfo.filterLink = b,
                            d.$broadcast("filterChange"),
                            b.title && w.setAppTitle(b.title),
                            da && (V(),
                            da = !1))
                        } else
                            da && (V(),
                            da = !1)
                    })
                } else
                    da && (V(),
                    da = !1),
                    d.filterInfo.filterApplied = !0,
                    d.filterInfo.filterLink = b,
                    d.$broadcast("filterChange")
            } else
                b.type == m.RESOURCE_LINK && (da && (V(),
                da = !1),
                c = _,
                ca && (d.redirectToLink = b,
                ca = null ),
                d.$broadcast("resourceLinkChange", b));
            if (b.title && w.setAppTitle(b.title),
            W(c),
            e.IS_NATIVE) {
                var n = {};
                n.title = decodeURIComponent(b.title) || "",
                n.url = g.absUrl(),
                nativeCommBridge.locationChanged(JSON.stringify(n))
            }
        }),
        c.destroyAppView = function() {
            W(null ),
            c.$$phase || c.$digest()
        }
        ,
        c.onLoginFormSubmit = function(a, b) {
            ba = Date.now();
            var c = h.signIn(a, b);
            return c.success(function(a, b) {
                1 == a.type && X(a.data)
            }),
            c
        }
    }
    ]);
    var f = f || {};
    f.chatsdk = f.chatsdk || {},
    f.chatsdk.EventDispatcher = function() {
        this._callbacks = {},
        this._callsList = []
    }
    ,
    f.chatsdk.EventDispatcher.prototype.dispatch = function(a, b) {
        this._callbacks[a] && this._callbacks[a].fire(b)
    }
    ,
    f.chatsdk.EventDispatcher.prototype.addListener = function(a, b) {
        function c(a) {
            d._callbacks[a] || (d._callbacks[a] = $.Callbacks());
            var c = b
              , e = function(a) {
                var b = a;
                try {
                    c.call(this, b)
                } catch (d) {
                    console.error(d.stack)
                }
            }
            ;
            d._callsList.push({
                call: c,
                closure: e
            }),
            d._callbacks[a].add(e)
        }
        var d = this;
        if ("[object Array]" === Object.prototype.toString.call(a))
            for (var e = a.length, f = 0; e > f; f++)
                c(a[f]);
        else
            c(a)
    }
    ,
    f.chatsdk.EventDispatcher.prototype.removeListener = function(a, b) {
        function c(a) {
            if (d._callbacks[a]) {
                var c = d._callsList.map(function(a) {
                    return a.call
                }).indexOf(b);
                c > -1 && (d._callbacks[a].remove(d._callsList[c].closure),
                d._callsList.splice(c, 1))
            }
        }
        var d = this;
        if ("[object Array]" === Object.prototype.toString.call(a))
            for (var e = a.length, f = 0; e > f; f++)
                c(a[f]);
        else
            c(a)
    }
    ,
    b.module("convoApp").factory("accountDataService", ["AccountDataChangeNotification", "AccountDataChangeNotificationType", "RTCNotification", "$injector", function(a, b, c, d) {
        function e() {
            i = d.get("rtcNotificationManager"),
            i.addListener(f.rtc.PubsubEvents.NOTIFICATION_RECEIVE, function(a) {
                if (a.notification.type == c.ACCOUNT_DATA_CHANGED_WEB) {
                    console.log("RECEIVED: RTCNotification.ACCOUNT_DATA_CHANGED_WEB");
                    var d = a.notification.data;
                    d.type == b.GROUP_MODIFIED ? h.trigger("groupModifiedByRemoteUser", d.data) : d.type == b.GROUP_DELETED ? h.trigger("groupDeletedByRemoteUser", d.data) : d.type == b.USERS_INVITED_TO_GROUP ? h.trigger("usersInvitedToGroupByRemoteUser", d.data) : d.type == b.USER_REMOVED_FROM_GROUP ? h.trigger("userRemovedFromGroupByRemoteUser", d.data) : d.type == b.GROUP_JOIN_REQ_STATUS_UPDATED ? h.trigger("groupJoinReqStatusUpdatedByRemoteUser", d.data) : d.type == b.GROUP_JOIN_REQ_SENT ? h.trigger("groupJoinReqSentByRemoteUser", d.data) : d.type == b.USER_REMOVED_FROM_ACCOUNT && h.trigger("userRemovedFromNetworkByRemoteUser", d.data)
                }
            })
        }
        function g(b, d) {
            var e = new c;
            e.type = c.ACCOUNT_DATA_CHANGED_WEB,
            e.data = new a(b,d),
            i.send(e),
            console.log("SENT: RTCNotification.ACCOUNT_DATA_CHANGED_WEB")
        }
        var h = {};
        _.extend(h, Backbone.Events);
        var i;
        return h.initialize = e,
        h.sendAccountDataChangeNotification = g,
        h
    }
    ]),
    b.module("convoApp").factory("accountInfo", ["config", "ServerComm", function(b, c) {
        function d(a, b) {
            B = a,
            C = b,
            v = B.account_id,
            w = B.account_name,
            x = B.image_type,
            y = B.image_version,
            D = B.account_level,
            E = B.creation_date,
            z = B.domain_pairs;
            for (var c = 0; c < z.length; c++)
                if (z[c].type === F) {
                    A = z[c];
                    break
                }
            u = B.revision
        }
        function e(a) {
            u != a && (console.log("JK: triggering accountDataRevisionNoChanged event: old/new rev numbers: " + u + "/" + a),
            u = a,
            t.trigger("accountDataRevisionNoChanged"))
        }
        function f(a) {
            var b = c.putx("accounts/info", {
                account_id: v,
                account_name: a
            });
            return b.then(function() {
                w = a,
                t.trigger("accountNameUpdated")
            }),
            b
        }
        function g() {
            return v
        }
        function h() {
            return D
        }
        function i() {
            return E
        }
        function j(a) {
            x = a
        }
        function k(a) {
            y = a,
            t.trigger("accountImageVersionUpdated")
        }
        function l() {
            return b.AWS_FILE_DIR_BASE + v + "/account-images/thumbnails/" + v + "-thumbnail-" + y + ".jpg"
        }
        function m() {
            return w
        }
        function n() {
            return z
        }
        function o() {
            return A
        }
        function p() {
            return x
        }
        function q() {
            for (var a = [{
                accountId: v,
                accountName: w,
                isLoggedIntoAccount: !0,
                isCompanyAccount: "GUEST" !== B.user_role
            }], b = 0; b < C.length; b++) {
                var c = C[b];
                c.account_id !== v && "ACTIVE" === c.account_status && a.push({
                    accountId: c.account_id,
                    accountName: c.account_name,
                    isLoggedIntoAccount: !1,
                    isCompanyAccount: "GUEST" !== c.user_role
                })
            }
            return a = _.sortBy(a, "accountName")
        }
        function r() {
            return a.enableFeedPollLoggingOnAllAccounts || v === H
        }
        function s() {
            return v === G
        }
        var t = {};
        _.extend(t, Backbone.Events);
        var u, v, w, x, y, z, A, B, C, D, E, F = "PRI", G = "w_88bac084-aee8-102b-bfae-a1ae858f3e89", H = "acc-28db3576-55a0-11e0-87d6-123138005841";
        return a.enableFeedPollLoggingOnAllAccounts = !1,
        t.ACCOUNT_LEVELS = {
            PREMIUM: "PREMIUM",
            STARTER: "STARTER"
        },
        t.initAccountInfo = d,
        t.setAccountDataRevisionNo = e,
        t.updateAccountName = f,
        t.getAccountId = g,
        t.getAccountImageUrl = l,
        t.getAccountName = m,
        t.getAccountCreationDate = i,
        t.getAccountLevel = h,
        t.getAccountDomains = n,
        t.getPrimaryAccountDomain = o,
        t.getAccountImageType = p,
        t.getUserAccountsListForNetworkSwitchingMenu = q,
        t.updateNetworkImageType = j,
        t.updateNetworkImageVersion = k,
        t.isTNWAccount = r,
        t.isConvoAccount = s,
        t
    }
    ]),
    b.module("convoApp").factory("AccountDataChangeNotification", [function() {
        return function(a, b, c, d) {
            this.type = a,
            this.data = b,
            this.revisionNo = c,
            this.revisionIncrement = d
        }
    }
    ]),
    b.module("convoApp").constant("AccountDataChangeNotificationType", {
        USER_REMOVED_FROM_ACCOUNT: 13,
        USERS_INVITED_TO_GROUP: 2,
        USER_REMOVED_FROM_GROUP: 9,
        GROUP_MODIFIED: 7,
        GROUP_DELETED: 8,
        GROUP_JOIN_REQ_STATUS_UPDATED: 100,
        GROUP_JOIN_REQ_SENT: 101
    }),
    b.module("convoApp").factory("AppLinks", ["config", "accountInfo", "FiltersQueryTransformer", "Filters", "utils", function(a, b, d, e, f) {
        function g(a) {
            var b = "/apps"
              , c = []
              , d = [];
            b += "/" + a.resourcePath.appInstance.uid;
            for (var e = a.resourcePath.hierarchy, f = 0; f < e.length; f++) {
                var g, h = e[f];
                g = "6" === h.type ? "messages" : "4" === h.type ? "links" : "IMAGE" === h.type ? "images" : "DOC" === h.type ? "files" : "9" === h.type ? "settings" : "22" === h.type ? "groups" : "11" === h.type ? "users" : "100" === h.type ? "integrations" : "26" === h.type ? "groupsDirectory" : h.type,
                b += "/" + g + "/" + h.uid
            }
            return a.collaborationInfo && a.collaborationInfo.commentId && c.push(["comment", a.collaborationInfo.commentId]),
            a.commentFileId && c.push(["file", a.commentFileId]),
            a.commentFileFormat && c.push(["file_format", a.commentFileFormat]),
            a.data && a.data.resource_type && c.push(["resource_type", a.data.resource_type]),
            a.view && d.push(["view", a.view]),
            {
                url_path: b,
                url_search: c,
                url_hash: d
            }
        }
        function h(a) {
            var b = "/feed"
              , c = []
              , e = [];
            return a.filter && c.push(["q", d.filtersToQuery(a.filter.filters)]),
            {
                url_path: b,
                url_search: c,
                url_hash: e
            }
        }
        function i(a) {
            var b = "/home"
              , c = [["act", a.action]]
              , d = [];
            return {
                url_path: b,
                url_search: c,
                url_hash: d
            }
        }
        function j(a, b, c, d, e) {
            if (d.length < 7 || 0 == d[4].length || 0 == d[5].length || 0 == d[6].length)
                return null ;
            var f, g, h, i, j, k, l, m = [], o = !1;
            f = d[4],
            "5" == f && (o = !0,
            f = "6");
            var p = n(c);
            k = p.title || e || "",
            l = p.view || "";
            for (var r = d.slice(5), s = Math.floor(r.length / 2), t = 0; s > t; t++) {
                var u = 2 * t
                  , v = r[u]
                  , w = r[u + 1];
                "notes" == v ? v = "messages" : "note" == v && (v = "message");
                var x;
                x = "message" == v || "messages" == v ? "6" : "link" == v || "links" == v ? "4" : "image" == v || "images" == v ? "images" : "file" === v || "files" === v ? "files" : "settings" == v ? "9" : "groups" == v ? "22" : "users" == v ? "11" : "integrations" == v ? "100" : "groupsDirectory" == v ? "26" : v,
                o && "messages" == v && (w = "MSG_" + w),
                null  != x && null  != w && m.push({
                    uid: w,
                    type: x
                })
            }
            return b && (b.comment && (h = b.comment),
            b.file && (i = b.file),
            b.file_format && (j = b.file_format),
            b.resource_type && (g = b.resource_type)),
            q.newResourceLink(f, m, h, k, g, l, i, j)
        }
        function k(a, b, c, f) {
            var g, h, i = !0, j = n(c);
            if (j.title ? g = j.title : f && (g = f),
            b && b.q) {
                var k = b.q
                  , l = d.queryToFilters(k);
                l.length > 0 && (j.filter_value && (l[0].value = j.filter_value),
                h = e.newANDFiltersChain(l, g),
                g || (g = k),
                i = !1)
            }
            return i && (h = null ,
            g || (g = "News feed")),
            q.newFilterLink(h, g)
        }
        function l(a, b, c, d) {
            var e, f;
            b && (e = b.act);
            var g = n(c);
            return g.title ? f = g.title : d && (f = d),
            q.newActionLink_flexFormat(e, f)
        }
        function m(a) {
            for (var b = "", c = 0; c < a.length; c++)
                b += "&" + a[c][0],
                "boolean" != typeof a[c][1] && (b += "=" + encodeURIComponent(a[c][1]));
            return b && (b = b.slice(1)),
            b
        }
        function n(a) {
            for (var b = {}, c = a.split("&"), d = 0; d < c.length; d++) {
                var e = c[d].split("=");
                e.length >= 2 ? b[e[0]] = e.slice(1).join("=") : b[e[0]] = !0
            }
            return b
        }
        function o(a) {
            var b = a.replace(new RegExp("^convo:","i"), "")
              , c = ""
              , d = {}
              , e = ""
              , f = b.indexOf("?")
              , g = b.indexOf("#");
            if (c = b.substring(0, b.indexOf("?")) || b.substring(0, b.indexOf("#")) || b,
            -1 != f) {
                var h = decodeURIComponent(b.substring(f + 1, -1 != g ? g : b.length));
                d = n(h)
            }
            return -1 != g && (e = decodeURIComponent(b.substring(g + 1))),
            {
                urlPath: c,
                queryParams: d,
                hash: e
            }
        }
        var p = "v1"
          , q = {
            RESOURCE_LINK: "resourceLink",
            FILTER_LINK: "filterLink",
            ACTION_LINK: "actionLink",
            ACTION_LINK_FLEX_FORMAT: "actionLink_flexFormat",
            resolveUrlParts: o,
            urlParamsStrToObj: n,
            newResourceLink: function(a, b, d, e, f, g, h, i) {
                var j = {
                    type: q.RESOURCE_LINK,
                    title: e,
                    view: g
                };
                return j.resourcePath = {},
                j.resourcePath.hierarchy = b,
                j.resourcePath.appInstance = {
                    uid: a,
                    type: "APPINSTANCE"
                },
                e && (j.resourcePath.appInstance.title = e),
                d && (j.collaborationInfo = {
                    commentId: d
                }),
                h && (j.commentFileId = h),
                i && (j.commentFileFormat = i),
                f !== c && (j.data = {
                    resource_type: f
                }),
                j
            },
            newFilterLink: function(a, b) {
                var c = {
                    type: q.FILTER_LINK,
                    filter: a,
                    title: b
                };
                return c
            },
            newActionLink: function(a, b) {
                var c = {
                    type: q.ACTION_LINK,
                    action: a,
                    title: b
                };
                return c
            },
            newActionLink_flexFormat: function(a, b) {
                var c = {
                    type: q.ACTION_LINK_FLEX_FORMAT,
                    action: a,
                    title: b
                };
                return c
            },
            areEqual_filterLink: function(a, b) {
                return a || b ? a && b || a == b ? void 0 : !1 : !0
            },
            parseUrl: function(a) {
                var b = !0
                  , c = f.getAppUrlRegex1()
                  , d = a.replace(c, "#");
                if (d == a) {
                    var e = f.getAppUrlRegex2();
                    -1 == a.search(e) && (b = !1)
                }
                if (!b)
                    return null ;
                var g = d.indexOf("#");
                if (-1 == g)
                    return null ;
                var h = o(d.substr(g + 1));
                return this.urlToLink(h.urlPath || "", h.queryParams || {}, h.hash || "")
            },
            linkToUrl: function(a, c) {
                if (a.type == q.ACTION_LINK)
                    return "#/" + a.action;
                var d = "#/" + p + "/" + b.getAccountId()
                  , e = null ;
                a.type == q.RESOURCE_LINK ? e = g(a) : a.type == q.FILTER_LINK ? e = h(a) : a.type == q.ACTION_LINK_FLEX_FORMAT && (e = i(a));
                var f = "#";
                if (e && (e.url_path && (d += e.url_path),
                e.url_search.length > 0 && (d += "?" + m(e.url_search)),
                e.url_hash.length > 0 && (d += "#" + m(e.url_hash),
                f = "&")),
                c && a.title) {
                    var j;
                    try {
                        j = encodeURIComponent(a.title)
                    } catch (k) {
                        console.log("appLinks.linkToUrl(): title encoding failed. title: " + a.title)
                    }
                    j && (d += f + "title=" + encodeURIComponent(a.title),
                    f = "&")
                }
                return a.view && (d += f + "view=" + encodeURIComponent(a.view),
                f = "&"),
                d
            },
            linkToConvoColonUrl: function(a, b) {
                return "convo:" + q.linkToUrl(a, b).slice(1)
            },
            urlToLink: function(a, b, c, d) {
                var e = null 
                  , f = a.split("/");
                return f.length >= 2 && f.length <= 3 ? "feed" == f[1] ? e = q.newActionLink("show_feed", "My Feed") : "login" == f[1] ? e = q.newActionLink("show_login_view") : "logout" == f[1] ? e = q.newActionLink("show_logout_view") : "editNotificationsSettings" == f[1] && (e = q.newActionLink("editNotificationsSettings")) : f.length >= 4 && "v1" == f[1] && ("feed" == f[3] ? e = k(a, b, c, d) : "apps" == f[3] ? e = j(a, b, c, f, d) : "home" == f[3] && (e = l(a, b, c, d))),
                e
            },
            getFilterUrlForFilterStr: function(a) {
                return "/" + p + "/" + b.getAccountId() + "/feed?q=" + encodeURIComponent(a)
            },
            readResourceId: function(a) {
                for (var b, c = /([^\/])+/g, d = {}, e = []; null  != (b = c.exec(a)); )
                    b.index == c.lastIndex && c.lastIndex++,
                    e.push(b[0]);
                return d.accountId = e[1],
                d.noteId = e[5],
                d.itemId = e[7],
                d
            }
        };
        return q
    }
    ]),
    b.module("convoApp").directive("cnvCustomContextMenu", ["AppLinks", function(a) {
        return {
            restrict: "A",
            compile: function(a, b, c) {
                return function(a, b, c, d) {
                    function e(a) {
                        return !0
                    }
                    $(b).on("contextmenu", "a", e),
                    a.$on("$destroy", function() {
                        $(b).off("contextmenu", "a", e)
                    })
                }
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvHandleConvoColonLinks", ["$location", "nativeCommBridge", "config", "utils", "mixpanelService", "AppLinks", "linksClickHistory", function(b, c, d, e, f, g, h) {
        return {
            restrict: "A",
            priority: 0,
            compile: function(b, i, j) {
                return function(b, i, j, k) {
                    function l(a) {
                        return a && 0 !== a.indexOf("javascript:") && "#" != a ? !0 : !1
                    }
                    function m(b) {
                        function e(a) {
                            var c = g.parseUrl(a);
                            if (c && c.type === g.RESOURCE_LINK && ("4" == c.resourcePath.appInstance.uid || "6" == c.resourcePath.appInstance.uid)) {
                                var d = g.parseUrl(location.href)
                                  , e = !1;
                                if (d.resourcePath && d.resourcePath.hierarchy[0] && c.resourcePath && c.resourcePath.hierarchy[0] && d.resourcePath.hierarchy[0].uid === c.resourcePath.hierarchy[0].uid && (e = !0),
                                !e) {
                                    var h = {};
                                    "_blank" === j || b.ctrlKey === !0 || b.metaKey === !0 ? h.In = "New Tab" : h.In = "Existing Tab",
                                    $(b.target).closest(".title-text").length ? h.From = "Newsfeed" : $(b.target).closest(".cnv-notif-dropdown").length ? h.From = "Notification Center" : h.From = "Post Reference",
                                    f.trackEvent(f.OPENED_POST, h)
                                }
                            }
                        }
                        var h, i = b.currentTarget.href, j = b.currentTarget.getAttribute("target") || "", k = !1, m = l(i);
                        return i && 0 !== i.indexOf("javascript:") && "_blank" !== j ? (h = i.replace(q, "#"),
                        h === i && 0 !== i.search(r) ? ($(b.currentTarget).attr("target", "_blank"),
                        j = "_blank") : h !== i ? ($(b.currentTarget).attr("href", h).addClass("convo-to-webapp-url"),
                        e(i)) : e(i)) : (k = !1,
                        h = i),
                        l && $(b.currentTarget).parent().hasClass("chat-msg-cont") && (0 === i.search(q) || 0 === i.search(r) ? f.trackEvent(f.OPEN_CONVO_LINK_IN_CHAT) : f.trackEvent(f.OPEN_EXTERNAL_LINK_IN_CHAT),
                        (-1 !== i.indexOf(d.APPEARIN_VIDEO_CALL_DIRECT_LINK_PREFIX) || -1 !== i.indexOf(d.ROOM_VIDEO_CALL_DIRECT_LINK_PREFIX) || -1 !== i.indexOf(d.GOOGLE_HANGOUTS_CONVO_APP_LINK_PREFIX)) && f.trackEvent(f.CLICKED_VIDEO_CALL, {
                            Participants: b.currentTarget.getAttribute("data-participants-count")
                        })),
                        d.IS_NATIVE && b.metaKey === !0 && m && (c.openInDefaultBrowser(h),
                        k = !0),
                        k ? (b.preventDefault(),
                        b.stopPropagation(),
                        !1) : ($(b.currentTarget).closest("*[contentEditable=true]").length && m && ("_blank" === j || b.ctrlKey === !0 || b.metaKey === !0) && 2 != d.IS_NATIVE && 2 != d.IS_MENULET && a.open(h, j),
                        !0)
                    }
                    function n(a) {
                        p(a)
                    }
                    function o(a) {
                        e.isIE() && p(a);
                        var b = $(a.currentTarget);
                        h.push(b.attr("href"), b.attr("class"))
                    }
                    function p(a) {
                        var b = a.currentTarget.href
                          , c = b.replace(q, "#");
                        return c !== b && $(a.currentTarget).attr("href", c).addClass("convo-to-webapp-url"),
                        !0
                    }
                    var q = e.getAppUrlRegex1()
                      , r = e.getAppUrlRegex2();
                    $(i).on("click", "a", m),
                    $(i).on("contextmenu", "a", n),
                    $(i).on("mousedown", "a", o),
                    b.$on("$destroy", function() {
                        $(i).off("click", "a", m),
                        $(i).off("contextmenu", "a", n),
                        $(i).off("mousedown", "a", o)
                    })
                }
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvOpenNotesInFlexApp", ["config", function(b) {
        return {
            restrict: "A",
            priority: 1,
            compile: function(c, d, e) {
                return function(c, d, e, f) {
                    function g(c) {
                        var d = c.currentTarget.href
                          , e = d.search(/#\/v1\/.+\/apps\/6\//i);
                        if (-1 == e)
                            return !0;
                        var f = b.FLEX_APP_URL + d.slice(e);
                        return a.open(f),
                        c.preventDefault(),
                        c.stopPropagation(),
                        !1
                    }
                    $(d).on("click", "a", g),
                    c.$on("$destroy", function() {
                        $(d).off("click", "a", g)
                    })
                }
            }
        }
    }
    ]),
    b.module("convoApp").factory("appsInfo", ["AppLinks", "Note", "Link", "accountInfo", "userInfo", function(a, b, c, d, e) {
        var f = {}
          , g = {
            home: {
                title: "Home",
                directiveName: "cnv-home",
                supportsComments: !1,
                getItemDataFromServer: !1,
                isResourceAccessible: function(a) {
                    return !0
                }
            },
            6: {
                title: "Notes",
                directiveName: "cnv-notes-app",
                supportsComments: !0,
                getItemDataFromServer: !0,
                getItemDataServerCall: b.getNote,
                isResourceAccessible: function(a) {
                    return !0
                }
            },
            4: {
                title: "Web Link",
                directiveName: "cnv-links-app",
                supportsComments: !0,
                getItemDataFromServer: !0,
                getItemDataServerCall: c.getLinkDetails,
                isResourceAccessible: function(a) {
                    return !0
                }
            },
            12: {
                title: "Settings",
                directiveName: "cnv-settings",
                supportsComments: !1,
                getItemDataFromServer: !1,
                isResourceAccessible: function(a) {
                    var b = !0;
                    return a.resourcePath.hierarchy[1] && "networkInformation" == a.resourcePath.hierarchy[1].type && (e.isAdmin() || "PREMIUM" != d.getAccountLevel() || (b = !1)),
                    b
                }
            },
            9: {
                title: "Manage Group",
                directiveName: "cnv-group-settings",
                supportsComments: !1,
                getItemDataFromServer: !1,
                isResourceAccessible: function(a) {
                    return !0
                }
            },
            13: {
                title: "Manage Users",
                directiveName: "cnv-users-directory",
                supportsComments: !1,
                getItemDataFromServer: !1,
                isResourceAccessible: function(a) {
                    return !0
                }
            },
            100: {
                title: "Integrations",
                directiveName: "cnv-integrations-directory",
                supportsComments: !1,
                getItemDataFromServer: !1,
                isResourceAccessible: function(a) {
                    return !0
                }
            },
            22: {
                title: "Groups Directory",
                directiveName: "cnv-groups-directory",
                supportsComments: !1,
                getItemDataFromServer: !1,
                isResourceAccessible: function(a) {
                    return !0
                }
            },
            19: {
                title: "Premium Upgrade",
                directiveName: "cnv-premium-upgrade",
                supportsComments: !1,
                getItemDataFromServer: !1,
                isResourceAccessible: function(a) {
                    return !0
                }
            }
        };
        return f.getAppInfo = function(a) {
            return g[a]
        }
        ,
        f.getNotificationsSettingsViewUrl = function() {
            var b = a.newResourceLink("12", [{
                type: "9",
                uid: 0
            }, {
                type: "notificationsSettings",
                uid: 0
            }], null , "Notification Settings");
            return a.linkToUrl(b, !0)
        }
        ,
        f
    }
    ]),
    b.module("convoApp").directive("cnvAppCont", ["$compile", "appsInfo", "rtcNotificationManager", "RTCNotification", "$q", function(a, b, c, d, e) {
        return {
            restrict: "AE",
            priority: 0,
            scope: !1,
            compile: function(c, d, e) {
                return function(c, d, e, f) {
                    var g, h = b.getAppInfo(c.tab.appInstanceId), i = null  != h;
                    g = i ? "<" + h.directiveName + "></" + h.directiveName + ">" : "<div></div>",
                    g += "<ng-include ng-if='view === 2 || view === 3' src=\"'apps/templates/resourceNotAvailable.tpl.html'\"></ng-include>";
                    var j = a(g)(c);
                    d.append(j)
                }
            },
            controller: ["$scope", "itemService", "ItemsConstants", "ServerErrorCodes", "alertsService", "bannerService", "Likes", "config", "nativeCommBridge", "$rootScope", "userInfo", function(a, c, d, g, h, i, j, k, l, m, n) {
                function o() {
                    return T ? S.isResourceAccessible(a.tab.resourceLink) ? (a.view = V.DEFAULT,
                    S.getItemDataFromServer && H(),
                    a.galleryCtrl = new W.initialize,
                    void (R.resourceLink && R.resourceLink.resourcePath && R.resourceLink.resourcePath.hierarchy && (2 == R.resourceLink.resourcePath.hierarchy.length || 1 == R.resourceLink.resourcePath.hierarchy.length && R.resourceLink.commentFileId) && (a.galleryCtrl.active = !0))) : void O(!1) : void h.alertModal("App Not Supported", "The app that opens this type of post is currently not supported.", "Go Back", function() {
                        N()
                    }, !0, !0)
                }
                function p(b) {
                    if (!S.isResourceAccessible(a.tab.resourceLink))
                        return void O(!1);
                    if (aa.initialized && aa.navigate && aa.navigate(b),
                    2 == R.resourceLink.resourcePath.hierarchy.length || 1 == R.resourceLink.resourcePath.hierarchy.length && R.resourceLink.commentFileId)
                        a.galleryCtrl.active = !0,
                        a.galleryCtrl.initialized && a.galleryCtrl.initialize();
                    else if (a.galleryCtrl.active && a.tab.resourceLink.collaborationInfo && 6 == a.tab.appInstanceId)
                        var c = a.$on("deactivate_gallery", function(a) {
                            a.stopPropagation(),
                            c(),
                            W.destroy()
                        });
                    else
                        W.destroy();
                    S.getItemDataFromServer && (Y && E(),
                    B())
                }
                function q(b) {
                    console.log("tab activated"),
                    a.$broadcast("activated", b),
                    aa.initialized && aa.activated && aa.activated(b)
                }
                function r() {
                    console.log("tab deactivated"),
                    a.$broadcast("deactivated"),
                    aa.initialized && aa.deactivated && aa.deactivated()
                }
                function s(a) {
                    return T && aa.initialized && aa.okToClose ? aa.okToClose(a) : !0
                }
                function t() {
                    T && (aa.initialized && aa.closing && aa.closing(),
                    S.getItemDataFromServer && I())
                }
                function u(a) {
                    console.log(">>>>>>>>>>>>>>> onItemDataReceivedFromServer"),
                    aa.itemDataReceivedFromServer && (aa.itemDataReceivedFromServer(a),
                    k.IS_NATIVE && l.noteAppActivated(a.item.title))
                }
                function v(a) {
                    console.log(">>>>>>>>>>>>>>> onItemDataPolledFromServer"),
                    aa.itemDataPolledFromServer && aa.itemDataPolledFromServer(a)
                }
                function w() {
                    if (ca)
                        return Z;
                    if (ca = !0,
                    a.tab.hasOwnProperty("localDetailsObject")) {
                        var b = e.defer();
                        Z = b.promise,
                        setTimeout(function() {
                            b.resolve(a.tab.localDetailsObject)
                        }, 0)
                    } else
                        Z = S.getItemDataServerCall(R.resourceId)["finally"](function() {
                            ca = !1
                        });
                    return Z
                }
                function x() {
                    y()
                }
                function y() {
                    $ = setTimeout(function() {
                        w().then(function(a) {
                            !U && M(a.data, !0) && (v(a.data.data),
                            y())
                        }, function() {
                            U || y()
                        })
                    }, ba)
                }
                function z() {
                    var a = w();
                    return a.then(function(a) {
                        !U && M(a.data, !0) && v(a.data.data)
                    }),
                    a
                }
                function A() {
                    clearTimeout($)
                }
                function B() {
                    var b = [a.tab.resourceLink.resourcePath.hierarchy[0].uid];
                    2 == a.tab.resourceLink.resourcePath.hierarchy.length && b.push(a.tab.resourceLink.resourcePath.hierarchy[1].uid);
                    var c = j.getLikeInfo(null , b.join(","), R.resourceId, R.appInstanceId, 0);
                    c.then(function(a, b) {
                        !U && aa.initialized && aa.setItemLikesInfo && aa.setItemLikesInfo(a),
                        U || C()
                    })
                }
                function C() {
                    Y = setTimeout(function() {
                        var b = [a.tab.resourceLink.resourcePath.hierarchy[0].uid];
                        2 == a.tab.resourceLink.resourcePath.hierarchy.length && b.push(a.tab.resourceLink.resourcePath.hierarchy[1].uid),
                        j.getLikeInfo(null , b.join(","), R.resourceId, R.appInstanceId, 0).then(function(a, b) {
                            !U && aa.initialized && aa.setItemLikesInfo && aa.setItemLikesInfo(a),
                            U || C()
                        })
                    }, ba)
                }
                function D() {
                    var b = [a.tab.resourceLink.resourcePath.hierarchy[0].uid];
                    2 == a.tab.resourceLink.resourcePath.hierarchy.length && b.push(a.tab.resourceLink.resourcePath.hierarchy[1].uid);
                    var c = j.getLikeInfo(null , b.join(","), R.resourceId, R.appInstanceId, 0);
                    c.then(function(a, b) {
                        !U && aa.initialized && aa.setItemLikesInfo && aa.setItemLikesInfo(a)
                    })
                }
                function E() {
                    Y && clearTimeout(Y)
                }
                function F() {
                    Q = f.rtc.RTCFactory.getRTCManager(R.appInstanceId + "_" + R.resourceId),
                    Q.addListener(f.rtc.PubsubEvents.CHANGE_RECEIVED, L),
                    Q.connect()
                }
                function G() {
                    Q && (Q.removeListener(f.rtc.PubsubEvents.CHANGE_RECEIVED, L),
                    f.rtc.RTCFactory.releaseRTCManager(R.appInstanceId + "_" + R.resourceId),
                    Q = null )
                }
                function H() {
                    var a = w().then(function(a) {
                        return !U && M(a.data, !1) && (u(a.data.data),
                        x()),
                        a
                    }, function(a) {
                        O(!1)
                    });
                    X.getItemDataFromServerPromise = a,
                    F(),
                    B(),
                    X.rtcManager = Q
                }
                function I() {
                    A(),
                    E(),
                    G(),
                    U = !0
                }
                function J() {
                    var a = c.moveToTrash(R.appInstanceId, R.resourceId);
                    return i.showBanner_promise(a, "Moving to trash...", "Moved to trash", "Error... click here to try again", !1, !1, a),
                    a
                }
                function K() {
                    var b = c.deletePermanently(R.appInstanceId, R.resourceId);
                    return i.showBanner_promise(b, "Deleting permanently...", "Deleted", "Error... click here to try again", !1, !1, b),
                    b.then(function() {
                        a.$emit("closeTab", R)
                    }),
                    b
                }
                function L(a) {
                    var b = a.data;
                    b.type === d.ITEM_DELETED_PERMANENTLY ? P() : b.type === d.ITEM_MOVED_TO_TRASH ? aa.initialized && aa.onItemMovedToTrashByRemoteUser && aa.onItemMovedToTrashByRemoteUser() : b.type === d.ITEM_RESTORED ? aa.initialized && aa.onItemRestoredByRemoteUser && aa.onItemRestoredByRemoteUser() : b.type === d.ITEM_SHARING_INFO_UPDATED ? aa.initialized && aa.onItemSharingInfoUpdatedByRemoteUser && aa.onItemSharingInfoUpdatedByRemoteUser(b.data) : b.type === d.ITEM_TAGS_UPDATED ? aa.initialized && aa.onItemTagsUpdatedByRemoteUser && aa.onItemTagsUpdatedByRemoteUser(b.data) : b.type === d.ITEM_UPDATED_2 ? aa.initialized && aa.onItemUpdatedByRemoteUser && aa.onItemUpdatedByRemoteUser(b.data) : b.type === d.ITEM_PERMISSION_CHANGED && z().then(function() {
                        aa.initialized && aa.onItemPermissionsUpdatedByRemoteUser && aa.onItemPermissionsUpdatedByRemoteUser(b.data)
                    })
                }
                function M(a, b) {
                    var c = !0;
                    return 0 === a.type && (c = !1,
                    a.errorCode === g.RESOURCE_NOT_ACCESSIBLE && O(b)),
                    c
                }
                function N(b) {
                    a.$emit("closeTab", R)
                }
                function O(b) {
                    a.view = V.INACCESSIBLE
                }
                function P() {
                    n.isAdminMode() ? z() : (I(),
                    a.view = V.DELETED_PERMANENTLY)
                }
                var Q, R = a.tab, S = b.getAppInfo(R.appInstanceId), T = null  != S, U = !1, V = {
                    DEFAULT: 1,
                    INACCESSIBLE: 2,
                    DELETED_PERMANENTLY: 3,
                    APP_NOT_SUPPORTED: 4
                }, W = {
                    initialize: function() {
                        var a = {};
                        return a.active = !1,
                        a.initialized = !1,
                        _.extend(a, Backbone.Events),
                        a
                    },
                    destroy: function() {
                        a.galleryCtrl.initialized && (a.galleryCtrl.active = !1,
                        a.galleryCtrl.off(),
                        a.galleryCtrl = new W.initialize,
                        m.$emit("SnippetArrow:destroyAll"))
                    }
                }, X = R.appContCtrl;
                X.navigate = p,
                X.activated = q,
                X.deactivated = r,
                X.okToClose = s,
                X.closing = t,
                X.appCtrl = {
                    initialized: !1
                },
                X.initialized = !0;
                var Y, Z, $, aa = X.appCtrl, ba = 3e4, ca = !1;
                X.immediatePollForItemData = z,
                X.immediatePollForItemLikesInfo = D,
                X.moveItemToTrash = J,
                X.deleteItemPermanently = K,
                o()
            }
            ]
        }
    }
    ]),
    b.module("convoApp").factory("chatService", ["userInfo", function(a) {
        function b(a, b, c, d, e, f) {
            m = a,
            n = b,
            o = c,
            p = d,
            q = e,
            r = f
        }
        function c(a, b) {
            m(a, b)
        }
        function d(a, b) {
            n(a, b)
        }
        function e(a) {
            o(a)
        }
        function g(a, b, c, d) {
            p(a, b, c, d)
        }
        function h(a, b, c, d, e) {
            q(a, b, c, d, e)
        }
        function i(a) {
            r(a)
        }
        function j(b) {
            return a.isAdminMode() && !b.isThisUserIsInParticipants()
        }
        function k(b) {
            return a.isAdminMode() && !b.isThisUserIsInParticipants() && b.chatType == f.chatsdk.ChatType.P2P
        }
        function l() {
            return a.isAdminMode()
        }
        var m, n, o, p, q, r;
        return {
            init: b,
            openChatWithUser: c,
            focusChatOnMessageReceivedClicked: d,
            openChatWithUserId: e,
            openChatFromId: g,
            openSearchedChat: h,
            searchResults: i,
            isAdminModeONAndThisUserIsNotInChatParticipants: j,
            isAdminModeON: l,
            isAdminModeONAndThisUserIsNotInChatParticipantsAndIsP2PChat: k
        }
    }
    ]),
    b.module("convoApp").directive("cnvChatSettingsPanel", ["settingsService", "chatManager", "chatUsersManager", "ServerComm", "$q", function(a, c, d, e, g) {
        return {
            link: function(b, c, d) {
                var e;
                $(".chkNotification").click(function() {
                    $(this).find(".btn").toggleClass("active"),
                    $(this).find(".btn-primary").size() > 0 && $(this).find(".btn").toggleClass("btn-primary"),
                    $(this).find(".btn").toggleClass("btn-default-transparent-font"),
                    0 == b.curNoti ? (b.curNoti = 1,
                    e = a.bitON(b.notify_incoming_chats, a.DESKTOP),
                    a.saveSettingByName(a.GENERAL_SETTING___NOTIFY_INCOMING_CHATS, e),
                    b.notify_incoming_chats = e) : 1 == b.curNoti && (b.curNoti = 0,
                    e = a.bitOFF(b.notify_incoming_chats, a.DESKTOP),
                    a.saveSettingByName(a.GENERAL_SETTING___NOTIFY_INCOMING_CHATS, e),
                    b.notify_incoming_chats = e)
                }),
                $(".chkSound").click(function() {
                    $(this).find(".btn").toggleClass("active"),
                    $(this).find(".btn-primary").size() > 0 && $(this).find(".btn").toggleClass("btn-primary"),
                    $(this).find(".btn").toggleClass("btn-default-transparent-font"),
                    0 == b.curSound ? (b.curSound = 1,
                    a.saveSettingByName(a.GENERAL_SETTING___PLAY_CHAT_NOTIFICATION_SOUND, 28)) : 1 == b.curSound && (b.curSound = 0,
                    a.saveSettingByName(a.GENERAL_SETTING___PLAY_CHAT_NOTIFICATION_SOUND, 0))
                })
            },
            controller: ["$scope", "$element", function(c, g) {
                function h(a) {
                    return e.post("user", a).success(function(c, d) {
                        return s ? b.extend(s, a) : s = c,
                        s
                    })
                }
                function i() {
                    var a = {};
                    return a[r.METHOD] = "getUserStatus",
                    h(a)
                }
                function j(a) {
                    return e.post("user", a).success(function(c, d) {
                        return b.extend(s, a),
                        s
                    })
                }
                function k(a) {
                    var b = {};
                    return b[r.METHOD] = "updateUserStatus",
                    b[r.NEW_STATUS] = a,
                    j(b)
                }
                function l() {
                    "Busy" == c.curStatus && (d.setThisUserCustomStatus(f.chatsdk.UserStatus.AVAILABLE),
                    c.curStatus = "Available",
                    c.statusInt = 1,
                    k(c.statusInt),
                    c.$emit("presenceChanged")),
                    c.$broadcast("render")
                }
                function m() {
                    "Available" == c.curStatus && (d.setThisUserCustomStatus(f.chatsdk.UserStatus.BUSY),
                    c.curStatus = "Busy",
                    c.statusInt = 2,
                    k(c.statusInt),
                    c.$emit("presenceChanged")),
                    c.$broadcast("render")
                }
                function n() {
                    "Availability" == c.sortStatus && (c.sortStatus = "Recent Activity",
                    a.saveSettingByName(a.GENERAL_SETTING___SORT_CHAT_LIST_BY, "RECENT_ACTIVITY")),
                    c.$broadcast("render")
                }
                function o() {
                    "Recent Activity" == c.sortStatus && (c.sortStatus = "Availability",
                    a.saveSettingByName(a.GENERAL_SETTING___SORT_CHAT_LIST_BY, "PRESENCE")),
                    c.$broadcast("render")
                }
                c.curStatus = "Available",
                c.sortStatus = "Recent Activity";
                var p = !1
                  , q = !1;
                c.initialized = !1;
                var r = {};
                r.METHOD = "method",
                r.NEW_STATUS = "user_status";
                var s;
                i().then(function(a) {
                    1 == a.data.data ? (d.setThisUserCustomStatus(f.chatsdk.UserStatus.AVAILABLE),
                    c.curStatus = "Available",
                    c.statusInt = 1,
                    c.$emit("presenceChanged")) : 2 == a.data.data && (d.setThisUserCustomStatus(f.chatsdk.UserStatus.BUSY),
                    c.curStatus = "Busy",
                    c.statusInt = 2,
                    c.$emit("presenceChanged")),
                    p = !0,
                    p && q && (c.initialized = !0),
                    c.$broadcast("render")
                }),
                c.$on("updateSettingsStatus", function(a, b) {
                    1 == b ? (d.setThisUserCustomStatus(f.chatsdk.UserStatus.AVAILABLE),
                    c.curStatus = "Available",
                    c.statusInt = 1) : 2 == b && (d.setThisUserCustomStatus(f.chatsdk.UserStatus.BUSY),
                    c.curStatus = "Busy",
                    c.statusInt = 2),
                    c.$broadcast("render")
                }),
                c.closeSettingsPanel = function() {
                    c.$emit("chatSortStatus", c.sortStatus),
                    c.$emit("closeSettingsPanel", c.sortStatus)
                }
                ,
                a.getChatSettings(!0).then(function(b) {
                    b.notify_incoming_chats && (a.isBitONOFF(parseInt(b.notify_incoming_chats), a.DESKTOP) ? c.curNoti = 1 : ($(".chkNotification").trigger("click"),
                    c.curNoti = 0),
                    c.notify_incoming_chats = parseInt(b.notify_incoming_chats)),
                    b.play_sound_on_notification && (a.isBitONOFF(parseInt(b.play_sound_on_notification), a.DESKTOP) ? c.curSound = 1 : ($(".chkSound").trigger("click"),
                    c.curSound = 0),
                    c.play_sound_on_notification = parseInt(b.play_sound_on_notification)),
                    "RECENT_ACTIVITY" == b.sort_chat_list_by ? (c.sortStatus = "Recent Activity",
                    c.$emit("chatSortStatus", c.sortStatus)) : (c.sortStatus = "Availability",
                    c.$emit("chatSortStatus", c.sortStatus)),
                    q = !0,
                    p && q && (c.initialized = !0),
                    c.$broadcast("render")
                }),
                c.statusOptions = {},
                c.statusOptions.type = "chat",
                c.statusOptions.align = "right",
                c.statusOptions.options = [{
                    label: "Available",
                    callback: l
                }, {
                    label: "Busy",
                    callback: m
                }],
                c.sortStatus || (c.sortStatus = "Recent Activity"),
                c.sortOptions = {},
                c.sortOptions.type = "chat",
                c.sortOptions.align = "right",
                c.sortOptions.options = [{
                    label: "Recent Activity",
                    callback: n
                }, {
                    label: "Availability",
                    callback: o
                }],
                c.$broadcast("render")
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvChatUserList", ["chatUsersManager", "chatManager", "settingsService", "ServerComm", "alertsService", "Users", "bannerService", "$compile", "userInfo", "mixpanelService", "Contacts", function(a, c, d, e, g, h, i, j, k, l, m) {
        return {
            link: function(g, h, i) {
                function j(a) {
                    h.scrollTop(0)
                }
                function m(a) {
                    return e.post("user", a).success(function(c, d) {
                        return r ? b.extend(r, a) : r = c,
                        r
                    })
                }
                function n() {
                    var a = {};
                    return a[q.METHOD] = "getUserStatus",
                    m(a)
                }
                function o() {
                    g.showTeammates = !0,
                    g.users = null ,
                    g.chatList = null ,
                    g.users = a.getUsers(),
                    g.usersCount = g.users.length,
                    g.showingList = 20,
                    g.$broadcast("render"),
                    h.scrollTop(0),
                    h.perfectScrollbar("update")
                }
                function p() {
                    g.showTeammates = !1,
                    g.users = null ,
                    g.chatList = null ,
                    g.populateChatList(),
                    g.populateUserList(),
                    h.scrollTop(0),
                    h.perfectScrollbar("update")
                }
                g.showTeammates = !1,
                g.showInviteTeamMateLink = !0,
                g.showingList = 20,
                setInterval(function() {
                    g.$broadcast("render_date")
                }, 6e4),
                h.parent().on({
                    mousewheel: function(a) {
                        a.preventDefault(),
                        a.stopPropagation()
                    }
                }),
                k.on("userInfo:adminModeChanged", j),
                g.$on("$destroy", function() {
                    k.off("userInfo:adminModeChanged", j)
                });
                var q = {};
                q.METHOD = "method",
                q.NEW_STATUS = "user_status";
                var r;
                n().then(function(b) {
                    1 == b.data.data ? a.setThisUserCustomStatus(f.chatsdk.UserStatus.AVAILABLE) : 2 == b.data.data && a.setThisUserCustomStatus(f.chatsdk.UserStatus.BUSY)
                }),
                d.getChatSettings(!0).then(function(a) {
                    "RECENT_ACTIVITY" == a.sort_chat_list_by ? p() : o()
                }),
                g.$on("listStatus", function(a, b) {
                    "Availability" == b ? o() : p()
                }),
                $(".inputSearchBar").blur(),
                setTimeout(function() {
                    $(".inputSearchBar").on("blur", function() {
                        "" == $(".inputSearchBar").val() ? g.isFilteredView && (g.userSelectedIndex = -1,
                        g.isFilteredView = !1,
                        g.showTeammates ? (g.users = a.getUsers(),
                        g.usersCount = g.users.length,
                        g.showingList = 20,
                        h.scrollTop(0),
                        g.showInviteTeamMateLink = !1) : (g.populateChatList(),
                        g.populateUserList(),
                        h.scrollTop(0))) : h.scrollTop(0),
                        h.perfectScrollbar("update"),
                        g.$broadcast("render"),
                        g.$digest()
                    })
                }, 0),
                g.openChatWindow = function(a, b) {
                    g.showTeammates ? (g.isSearchView && l.trackEvent(l.SEARCH_FOR_TEAMMATES, {
                        From: "Chats List"
                    }),
                    l.trackEvent(l.TAP_ON_TEAMMATE)) : (g.isSearchView && l.trackEvent(l.SEARCH_FOR_CHATS, {
                        From: "Chats List"
                    }),
                    l.trackEvent(l.TAP_ON_CHAT));
                    var d;
                    b.chatId ? d = b : (d = c.startChatWithUser(b),
                    d._user = b),
                    "" != $(".inputSearchBar").val() && ($(".inputSearchBar").val(""),
                    $(".inputSearchBar").blur(),
                    h.scrollTop(0)),
                    g.$emit("opeNewChatWindow", d),
                    a.stopImmediatePropagation(),
                    a.preventDefault()
                }
                ,
                g.$on("openNewChatWindow", function() {
                    var a;
                    g.showTeammates ? g.users[g.userSelectedIndex].chatId ? a = g.users[g.userSelectedIndex] : (a = c.startChatWithUser(g.users[g.userSelectedIndex]),
                    a._user = g.users[g.userSelectedIndex]) : g.chatList[g.userSelectedIndex].chatId ? a = g.chatList[g.userSelectedIndex] : (a = c.startChatWithUser(g.chatList[g.userSelectedIndex]),
                    a._user = g.chatList[g.userSelectedIndex]),
                    "" != $(".inputSearchBar").val() && ($(".inputSearchBar").val(""),
                    $(".inputSearchBar").blur(),
                    h.scrollTop(0)),
                    g.$emit("opeNewChatWindow", a)
                }),
                g.$on("loadMoreTeammates", function() {
                    g.showTeammates && h.scrollTop() + 56 >= h[0].scrollHeight - h.height() && (g.showingList + 20 < g.users.length ? (g.showingList += 20,
                    g.showInviteTeamMateLink = !1) : (g.users.length,
                    g.showInviteTeamMateLink = !0),
                    g.usersCount = g.showingList,
                    g.scrollPos = h.scrollTop(),
                    g.$broadcast("render"))
                }),
                mouseOnItem = function(a) {
                    g.isFilteredView && (g.userSelectedIndex = $(a).index(),
                    g.$broadcast("render"))
                }
                ,
                $(".inputSearchBar").on("input", function(b) {
                    h.scrollTop(0),
                    g.showInviteTeamMateLink = !1,
                    (a.getUsers().length || c.getChats().length) && (g.showTeammates ? a.getUsers().length && (s(b),
                    h.perfectScrollbar("update")) : (t(b),
                    h.perfectScrollbar("update")))
                });
                var s = function(b) {
                    $(b.target).val() ? (g.isFilteredView = !0,
                    g.users = a.getFilteredUserList($(b.target).val(), !1),
                    g.usersCount = g.users.length,
                    g.users.length > 20 ? g.showingList = 20 : g.showingList = g.users.length,
                    g.userSelectedIndex = 0,
                    g.$digest()) : (g.users = a.getUsers(),
                    g.usersCount = g.users.length,
                    g.users.length > 20 ? g.showingList = 20 : g.showingList = g.users.length,
                    g.userSelectedIndex = 0,
                    g.$digest()),
                    g.users.length ? g.showInviteTeamMateLink = !1 : g.showInviteTeamMateLink = !0,
                    g.$broadcast("render")
                }
                  , t = function(b) {
                    if ($(b.target).val()) {
                        g.isFilteredView = !0,
                        g.users = a.getFilteredUserList($(b.target).val(), !0);
                        var d = c.chatsForFilteredUsers(g.users);
                        g.chatList = d.chats.concat(d.users),
                        g.usersCount = g.chatList.length,
                        g.chatList.length > 20 ? g.showingList = 20 : g.showingList = g.chatList.length,
                        g.userSelectedIndex = 0,
                        g.$digest(),
                        g.$broadcast("render")
                    } else
                        g.showingList = 0,
                        g.scrollPos = 0,
                        g.populateChatList(),
                        g.populateUserList()
                }
                ;
                setTimeout(function() {
                    h.scroll(function() {
                        g.showTeammates ? Math.ceil(h.scrollTop()) >= h[0].scrollHeight - h.height() && (g.showingList + 20 < g.users.length ? (g.showingList += 20,
                        g.showInviteTeamMateLink = !1) : (g.showingList = g.users.length,
                        g.showInviteTeamMateLink = !0),
                        g.usersCount = g.showingList,
                        g.scrollPos = h.scrollTop()) : Math.ceil(h.scrollTop()) >= h[0].scrollHeight - h.height() ? g.isFilteredView ? g.chatList.length > g.showingList + 20 ? g.showingList += 20 : g.showingList = g.chatList.length : g.showingList == g.chatList.length ? (c.loadOlderChats() ? g.chatUserListSpinner = !0 : c.canLoadOlderChats() || (g.chatUserListSpinner = !0,
                        g.populateUserList(),
                        g.showInviteTeamMateLink = !0),
                        g.scrollPos = h.scrollTop()) : g.chatList.length > g.showingList + 20 ? g.showingList += 20 : g.showingList = g.chatList.length : 0 == h.scrollTop() && (g.chatList.length > 40 && (g.showingList = 40,
                        g.showInviteTeamMateLink = !1,
                        setTimeout(function() {
                            h.perfectScrollbar("update")
                        }, 10)),
                        g.scrollPos = 0),
                        g.$digest(),
                        g.$broadcast("render")
                    })
                }, 0)
            },
            controller: ["$scope", "$element", function(b, d) {
                function e(e) {
                    b.users = e.users,
                    o = !0,
                    (p || c.getChats().length) && (b.showTeammates ? b.users = a.getUsers() : (b.populateChatList(),
                    b.populateUserList()),
                    setTimeout(function() {
                        b.openedCachedChats || (b.$emit("openCachedChats"),
                        b.openedCachedChats = !0),
                        d.perfectScrollbar({
                            suppressScrollX: !0
                        })
                    }, 10)),
                    b.$emit("userManagerConnected")
                }
                function g(c) {
                    p = !0,
                    o && (b.showTeammates ? b.users = a.getUsers() : (b.populateChatList(),
                    b.populateUserList()),
                    setTimeout(function() {
                        b.openedCachedChats || (b.$emit("openCachedChats"),
                        b.openedCachedChats = !0),
                        d.perfectScrollbar({
                            suppressScrollX: !0
                        })
                    }, 10))
                }
                function h(c) {
                    p = !0,
                    o && !b.chatList.length && (b.showTeammates ? b.users = a.getUsers() : (b.populateChatList(),
                    b.populateUserList()),
                    b.openedCachedChats || (b.$emit("openCachedChats"),
                    b.openedCachedChats = !0)),
                    setTimeout(function() {
                        d.perfectScrollbar({
                            suppressScrollX: !0
                        })
                    }, 10)
                }
                function i(c) {
                    o && (b.showTeammates ? b.users = a.getUsers() : (b.populateChatList(),
                    b.populateUserList())),
                    b.$broadcast("render_date"),
                    b.$broadcast("render")
                }
                function j(c) {
                    b.Users = a.getUsers(),
                    b.$broadcast("render"),
                    b.$emit("presenceChanged", c.users, c.status)
                }
                function l(a) {
                    b.populateChatList(),
                    1 !== a.chats.length && a.chats.length || b.populateUserList()
                }
                function n() {}
                var o, p;
                b.isThisUserGuestUser = k.isGuestUser(),
                b.populateChatList = function() {
                    if (o && (p || c.getChats().length)) {
                        for (var e = c.getChats(), g = 0; g < e.length; g++)
                            e[g].chatType != f.chatsdk.ChatType.P2P || e[g]._user ? e[g].chatType == f.chatsdk.ChatType.GROUP : e[g]._user = a.getUserById(e[g].getOtherParticipant(e[g].thisUser.userId).userId);
                        e.length && (b.showInviteTeamMateLink = !1),
                        b.chatList = e,
                        b.usersCount = b.chatList.length,
                        b.showingList ? b.chatList.length > b.showingList + 20 ? b.showingList += 20 : b.showingList = b.chatList.length : b.chatList.length > 20 ? b.showingList = 20 : b.showingList = b.chatList.length,
                        b.chatUserListSpinner = !1,
                        b.$$phase || b.$digest(),
                        b.$broadcast("render"),
                        b.scrollPos && d.scrollTop(b.scrollPos),
                        d.perfectScrollbar("update")
                    }
                }
                ,
                b.populateUserList = function() {
                    if (o && (p || c.getChats().length) && !c.canLoadOlderChats()) {
                        b.users = a.getUsers();
                        var e = c.chatsForFilteredUsers(b.users);
                        b.chatList = e.chats.concat(e.users),
                        b.usersCount = b.chatList.length,
                        b.chatList ? b.showingList ? b.showingList + 20 < b.chatList.length ? (b.showingList += 20,
                        b.showInviteTeamMateLink = !1) : (b.showingList = b.chatList.length,
                        b.showInviteTeamMateLink = !0) : b.chatList.length > b.showingList + 20 ? (b.showingList += 20,
                        b.showInviteTeamMateLink = !1) : b.showingList = b.chatList.length : b.showInviteTeamMateLink = !0,
                        b.$$phase || b.$digest(),
                        b.chatUserListSpinner && (b.chatUserListSpinner = !1),
                        b.$broadcast("render"),
                        d.perfectScrollbar("update")
                    }
                }
                ,
                b.getIdForTrackBy = function(a) {
                    return a.chatId ? a.chatId : a.userId
                }
                ,
                b.openInviteTeammatesModal = function() {
                    m.initContactsInviteModal({
                        include_off_domain: !1,
                        origin: "Chat_List",
                        invite_via: "Invite_Dialog"
                    })
                }
                ;
                var q = function(a) {
                    b.$broadcast("render"),
                    b.$broadcast("chatUpdated", a.chat.chatId)
                }
                ;
                c.addListener(f.chatsdk.ChatEvents.CHATS_REFRESHED, g),
                c.addListener(f.chatsdk.ChatEvents.CHATS_CACHE_REFRESHED, h),
                c.addListener([f.chatsdk.ChatEvents.CHAT_ADDED, f.chatsdk.ChatEvents.CHAT_MOVED], i),
                a.addListener(f.chatsdk.ChatEvents.PRESENCE_CHANGED, j),
                c.addListener(f.chatsdk.ChatEvents.CHATS_ADDED, l),
                c.addListener(f.chatsdk.ChatEvents.CHAT_LOADED, n),
                c.addListener(f.chatsdk.ChatEvents.CHAT_UPDATED, q),
                a.isConnected() && e({
                    users: a.getUsers()
                }),
                a.addListener(f.chatsdk.ChatEvents.CONNECTED, e),
                b.$on("$destroy", function() {
                    a.removeListener(f.chatsdk.ChatEvents.CONNECTED, e),
                    c.removeListener(f.chatsdk.ChatEvents.CHATS_REFRESHED, g),
                    c.removeListener(f.chatsdk.ChatEvents.CHATS_CACHE_REFRESHED, h),
                    c.removeListener([f.chatsdk.ChatEvents.CHAT_ADDED, f.chatsdk.ChatEvents.CHAT_MOVED], i),
                    a.removeListener(f.chatsdk.ChatEvents.PRESENCE_CHANGED, j),
                    c.removeListener(f.chatsdk.ChatEvents.CHATS_ADDED, l),
                    c.removeListener(f.chatsdk.ChatEvents.CHAT_LOADED, n),
                    c.removeListener(f.chatsdk.ChatEvents.CHAT_UPDATED, q)
                })
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvChatUsersWindow", ["settingsService", "mixpanelService", "userInfo", "loader", "onboardingService", "config", function(b, c, d, e, f, g) {
        return {
            restrict: "E",
            scope: !0,
            templateUrl: "chat/client/chatUsersWindow/templates/cnvChatUsersWindow.tpl.html",
            link: function(h, i, j) {
                function k() {
                    e.loadScript(e.SCRIPTS.INTERCOM_IO_API).then(function() {
                        var b = setInterval(function() {
                            if (0 !== $("#intercom-io-btn").length) {
                                clearInterval(b),
                                a.Intercom("boot", {
                                    app_id: g.INTERCOM_IO_APP_ID,
                                    email: d.getEmail(),
                                    user_id: d.getUserId(),
                                    created_at: Math.floor(Date.now() / 1e3),
                                    widget: {
                                        activator: "#intercom-io-btn"
                                    }
                                });
                                var c = setInterval(function() {
                                    0 !== $("body > .intercom-container").length && (clearInterval(c),
                                    f.on("cnvOnboarding:feedOnboardingStateChange", function() {
                                        l()
                                    }),
                                    l())
                                }, 1e3)
                            }
                        }, 5e3)
                    })
                }
                function l() {
                    f.getFeedOnboardingState() ? ($("#intercom-io-btn").css("visibility", "hidden"),
                    $("body > .intercom-container").hide()) : ($("#intercom-io-btn").css("visibility", "visible"),
                    $("body > .intercom-container").show())
                }
                function m() {
                    var b = $(".chatUserListHeader").offset()
                      , c = $(a).height();
                    $("#intercom-container #intercom-launcher").css("bottom", c - b.top - 7)
                }
                h.userSelectedIndex = -1,
                h.intercomIOBtnHref = "mailto:" + g.INTERCOM_IO_APP_ID + "@incoming.intercom.io",
                h.removeText = function(a) {
                    if (h.isSearchView)
                        if (27 == a.which)
                            h.userSelectedIndex = -1,
                            $(".inputSearchBar").val(""),
                            $(".inputSearchBar").blur();
                        else if (38 == a.which) {
                            a.preventDefault(),
                            h.userSelectedIndex > 0 ? h.userSelectedIndex-- : h.userSelectedIndex = -1;
                            var b = 56 * h.userSelectedIndex;
                            $("#chatUserList").scrollTop() > 0 && ($("#chatUserList").scrollTop() < b && b < $("#chatUserList").scrollTop() + $("#chatUserList").height() || $("#chatUserList").scrollTop($("#chatUserList").scrollTop() - 61)),
                            h.$broadcast("render")
                        } else if (40 == a.which) {
                            if (a.preventDefault(),
                            h.usersCount - 1 > h.userSelectedIndex) {
                                h.userSelectedIndex++;
                                var b = 61 * h.userSelectedIndex + 61;
                                $("#chatUserList").scrollTop() < b && b < $("#chatUserList").scrollTop() + $("#chatUserList").height() || $("#chatUserList").scrollTop($("#chatUserList").scrollTop() + 61)
                            } else
                                h.$broadcast("loadMoreTeammates");
                            h.$broadcast("render")
                        } else
                            13 == a.which && (h.$broadcast("openNewChatWindow"),
                            h.userSelectedIndex = -1,
                            a.stopImmediatePropagation(),
                            a.preventDefault(),
                            h.showTeammates ? (c.trackEvent(c.SEARCH_FOR_TEAMMATES, {
                                From: "Chats List"
                            }),
                            c.trackEvent(c.TAP_ON_TEAMMATE)) : (c.trackEvent(c.SEARCH_FOR_CHATS, {
                                From: "Chats List"
                            }),
                            c.trackEvent(c.TAP_ON_CHAT)))
                }
                ;
                var n = function(a) {
                    "" == $(".inputSearchBar").val() ? (h.isSearchView = !1,
                    h.$broadcast("render")) : (h.isSearchView = !0,
                    h.$broadcast("render"))
                }
                ;
                $(".inputSearchBar").on("input", n);
                var o = function() {
                    "" == $(".inputSearchBar").val() && (h.isSearchView = !1,
                    h.$broadcast("render")),
                    h.setWindFocus(!1)
                }
                ;
                $(".inputSearchBar").on("blur", o);
                var p = function(a) {
                    h.setWindFocus(!0)
                }
                ;
                $(".inputSearchBar").on("focus", p),
                h.setWindFocus = function(a) {
                    a ? (h.listWindInFocus = !0,
                    i.find(".chatUserListHeader").css("background", "#2b2b2b")) : (h.listWindInFocus = !1,
                    h.isMinimized || i.find(".chatUserListHeader").css("background", "#727272"))
                }
                ,
                h.closeTeammatesView = function(a) {
                    $(".inputSearchBar").val(""),
                    $(".inputSearchBar").blur(),
                    h.userSelectedIndex = -1
                }
                ,
                h.showSettingsPanel = function() {
                    h.showingSettingPanel = !0,
                    h.$broadcast("render")
                }
                ,
                h.$on("closeSettingsPanel", function() {
                    h.showingSettingPanel = !1,
                    setTimeout(function() {
                        h.$broadcast("render"),
                        i.find("#chatUserList").perfectScrollbar("update")
                    }, 0)
                }),
                h.$on("chatSortStatus", function(a, b) {
                    h.$broadcast("listStatus", b)
                }),
                b.on("sortChatListBySettingUpdatedByRemoteUser", function(a) {
                    a = "RECENT_ACTIVITY" === a ? "Recent Activity" : "Availability",
                    h.$broadcast("listStatus", a)
                }),
                h.$on("adjustWindPosOnMin", function(a, b) {
                    m()
                }),
                h.$on("$destroy", function() {
                    $(".inputSearchBar").off("input", n),
                    $(".inputSearchBar").off("focus", p),
                    $(".inputSearchBar").off("blur", o)
                }),
                k(),
                h.$on("chatWindowResize", m),
                h.$broadcast("render")
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvGroupChatAvatar", ["chatUsersManager", "chatManager", "userIdToImgUrlFilter", "userImgUrlFilter", "utils", function(a, b, c, d, e) {
        return {
            link: function(b, c, d) {
                b.populateChatAvatar = function() {
                    var c = b.$eval(d.participants)
                      , e = b.$eval(d.source);
                    if (b.userArr = [],
                    c)
                        for (var g in c)
                            if ("Feed" == e) {
                                var h = a.getUserById(c[g].published_to);
                                h && b.userArr.push(h)
                            } else if (c[g].status == f.chatsdk.ParticipantStatus.JOINED) {
                                var h = a.getUserById(g);
                                h || (h = a.getInaccessibleUserById(g)),
                                h && b.userArr.push(h)
                            }
                    b.emptyChatUser = null ,
                    b.show2images = !1,
                    b.show3images = !1,
                    b.showCounter = !1,
                    0 == b.userArr.length && (b.emptyChatUser = a.getThisUser()),
                    2 == b.userArr.length && (b.show2images = !0),
                    3 == b.userArr.length && (b.show3images = !0),
                    b.userArr.length > 4 && (b.showCounter = !0),
                    setTimeout(function() {
                        b.$broadcast("refreshImage"),
                        b.$broadcast("render")
                    }, 0)
                }
                ,
                b.populateChatAvatar()
            },
            controller: ["$scope", "$element", "$attrs", function(a, b, c) {
                a.$on("chatUpdated", function(b, c) {
                    a.chat.chatId == c && a.populateChatAvatar()
                })
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvChatWindow", ["$compile", "chatManager", "msgListRenderer", "chatUsersManager", "utils", "UploadService", "$filter", "appStateInfo", "appTabs", "mixpanelService", "$q", "atMentionsListProvider", "localStore", "$rootScope", "Users", "chatService", function(b, c, d, e, g, h, i, j, k, l, m, n, o, p, q, r) {
        return {
            link: function(b, d, i) {
                function l(a) {
                    b.isSearch && (b.isSearch = !1),
                    a = [a];
                    for (var d in a)
                        a[d].noteId = b.chatObj.chatId;
                    b.$broadcast("enqueueFile", a),
                    c.sendFilesInChat(b.chatObj, a[0]),
                    b.$$phase || b.$digest(),
                    b.$broadcast("render"),
                    b.scrollChatMessageListContainerToBottom()
                }
                setTimeout(function() {
                    b.isMinimized ? b.$on("adjustWindPosOnMin", b.handlingOnBoardingMessage) : b.handlingOnBoardingMessage()
                }, 0),
                b.$on("adjustWindPosOnMin", b.adjustWindPosOnMin),
                b.appInFoucs = j.appHasFocus();
                var m, n, o, p, r, s = [];
                b.isChatMessageListScrolledToBottom = !0,
                b.CHAT_WINDOW_HEADER_FOCUSED_COLOR = "#2b2b2b",
                b.CHAT_WINDOW_HEADER_BLURRED_COLOR = "#727272",
                b.CHAT_WINDOW_HEADER_HIGHLIGHTED_DARK_COLOR = "#025b7e",
                b.CHAT_WINDOW_HEADER_HIGHLIGHTED_LIGHT_COLOR = "#389dcc",
                _.keys(b.chatObj.participants).length > 0 && !b.chatService.isAdminModeON() && b.disabledChat && b.chatObj.chatType == f.chatsdk.ChatType.P2P && e.getUserById(b.chatObj.getOtherParticipant().userId) && (b.disabledChat = !1),
                setTimeout(function() {
                    m = $(".chatMessageWindow", d),
                    n = $(".messageInputBar", d),
                    o = $(".chatWindowHeader", d),
                    p = $(".attachmentButton", d),
                    m.on("scroll", w),
                    n.on("resize", z),
                    b.initChatState(),
                    t(),
                    b.$broadcast("render"),
                    d.find(".emoji-popup-btn").on("setFocusOnHideEmojiPopover", function(a) {
                        b.setWindFocus(!0)
                    })
                }, 0),
                b.initChatState = function() {
                    b.disabledChat ? (n.attr("disabled", !0),
                    n.css("background", "#EBEBE4"),
                    n.css("opacity", "1"),
                    p.attr("disabled", !0),
                    b.setWindFocus(!1),
                    b.textEditorCtrl.disable()) : (n.attr("disabled", !1),
                    n.css("background", "#FFFFFF"),
                    p.attr("disabled", !1),
                    b.textEditorCtrl.enable(),
                    b.composingStarted(),
                    b.getUnsentChatMessageOnceOnInitialize())
                }
                ,
                b.$on("renderAtScope", function(a, c) {
                    b.$broadcast("render"),
                    b.$broadcast("userInvitedOrLeft"),
                    b.disabledChat ? (n.attr("disabled", !0),
                    n.css("background", "#EBEBE4"),
                    n.css("opacity", "1"),
                    p.attr("disabled", !0),
                    b.textEditorCtrl.disable()) : (n.attr("disabled", !1),
                    n.css("background", "#FFFFFF"),
                    p.attr("disabled", !1),
                    c && b.textEditorCtrl.enable(!1))
                }),
                b.scrollChatMessageListContainerToBottom = function(a) {
                    m[0].scrollHeight > m.height() ? a >= 0 ? (m.scrollTop(a),
                    b.isChatMessageListScrolledToBottom = !1) : (m.scrollTop(m[0].scrollHeight),
                    b.isChatMessageListScrolledToBottom = !0) : b.checkIfThereAnyChatGifMsgBubbleInViewAndPlay()
                }
                ,
                b.blurTextEditor = function() {
                    b.textEditorCtrl.blur()
                }
                ,
                b.setWindFocus = function(a, e, f, g) {
                    !a || b.disabledChat || b.isMinimized ? (b.isChatWindowFocused = !1,
                    b.hasUnread || b.isMinimized || d.find(".chatWindowHeader").css("background", b.CHAT_WINDOW_HEADER_BLURRED_COLOR),
                    c.chatLostFocus(b.chatObj),
                    g || (b.currentFocusedChatWindow.chatWindScope = null ),
                    k.isThisTabLastActiveTab() || b.textEditorCtrl.blur(),
                    e || k.dispatchTabsEvent2("setWindFocusOut", {
                        tabId: b.tabId,
                        chatId: b.chatId,
                        isFocus: a,
                        dntClearCurrentFocusedChatWind: g
                    }, !0)) : (f || b.textEditorCtrl.focus(),
                    setTimeout(function() {
                        b.isChatWindowFocused = !0
                    }, 0),
                    b.hasUnread = !1,
                    b.unread = !1,
                    c.chatGainedFocus(b.chatObj),
                    b.currentFocusedChatWindow.chatWindScope = b,
                    b.chatObj.unreadCount > 0 && c.chatRead(b.chatObj),
                    b.blink(d.find(".chatWindowHeader"), 0, 0),
                    d.find(".chatWindowHeader").css("background", b.CHAT_WINDOW_HEADER_FOCUSED_COLOR),
                    e || k.dispatchTabsEvent2("setWindFocus", {
                        tabId: b.tabId,
                        chatId: b.chatId,
                        isFocus: a
                    }, !0)),
                    b.howManyInView()
                }
                ,
                b.$on("setWindInFocus", function(a, c) {
                    b.chatObj.chatId == c && $(d).is(":visible") && b.setWindFocus(!0)
                }),
                b.$on("isWindInFocus", function(a, c) {
                    b.chatObj.chatId == c && b.$emit("returnIsFocus", c, b.isChatWindowFocused)
                }),
                b.$on("emitWIndFocus", function(a) {
                    b.$emit("returnIsFocus", b.chatObj.chatId, b.isChatWindowFocused)
                }),
                b.files = [],
                b.filesUploadManagerCtrl = {
                    initialized: !1,
                    templateType: "chat",
                    filesArrayObj: b.files
                },
                b.insertOptionsCtrl = {
                    onFileSelected: l
                };
                var t = function() {
                    var a = g.generateUniqueCharId();
                    d.find("div input[type=file]").attr("id", a);
                    var e = {
                        id: "#" + a,
                        uploadFrom: "chat-window",
                        dropZoneId: "#_" + b.msgWinId,
                        pasteZoneId: "#" + b.chatId
                    };
                    r = h.init(e),
                    b.fileInputContext = r.context,
                    r.input_element.on("cnvchange", function(a, d) {
                        d && d.event && (d.event == h.EVENT_FILE_SELECTED ? b.insertOptionsCtrl.onFileSelected(d.file) : (b.insertOptionsCtrl.onChange(d),
                        c.onFileDataChanged(d.file)))
                    })
                }
                ;
                b.$on("fileRemovedClicked", function(a, d) {
                    c.cancelMessageInChat(d, b.chatObj)
                }),
                b.isSearch && (b.searchCountStr = b.chatObj.searchInfo.getCurrentMatchIndex() + 1 + " of " + b.chatObj.searchInfo.getMatchCount());
                var u = function(a, b) {
                    a.find(".cnv-spinner").show();
                    var c = a.find(".original-gif");
                    c[0].complete ? setTimeout(function() {
                        c.show(),
                        b.remove(),
                        a.find(".cnv-spinner").remove(),
                        a.find(".gif-badge").slideUp(300)
                    }, 4e3) : c.load(function() {
                        c.show(),
                        b.remove(),
                        a.find(".cnv-spinner").remove(),
                        a.find(".gif-badge").slideUp(300)
                    })
                }
                  , v = 30;
                b.checkIfThereAnyChatGifMsgBubbleInViewAndPlay = _.debounce(function() {
                    for (var a = $("img.gif-placeholder", d), b = m.offset().top, c = m.offset().top + m.height(), e = 0; e < a.length; e++) {
                        var f = $(a[e]).parents(".chat-message-bubble")
                          , g = f.offset().top;
                        g + v >= b && c >= g + v && u(f, $(a[e]))
                    }
                }, 200),
                b.giphyObject = {
                    searchText: "",
                    actionType: ""
                };
                var w = function() {
                    b.isSearch || (b.messageListSpinner || 0 != m.scrollTop() || b.isMinimized || (b.winHeight = m[0].scrollHeight,
                    c.loadOlderMessagesInChat(b.chatObj) && (b.messageListSpinner = !0,
                    b.$broadcast("render"))),
                    m[0].scrollHeight <= Math.ceil(m.scrollTop()) + m.height() && d.find(".newMsgReceived").hide(),
                    m[0].scrollHeight <= Math.ceil(m.scrollTop()) + m.height() ? b.isChatMessageListScrolledToBottom = !0 : b.isChatMessageListScrolledToBottom = !1),
                    b.checkIfThereAnyChatGifMsgBubbleInViewAndPlay(),
                    b.howManyInView()
                }
                  , x = function(a) {
                    a.preventDefault(),
                    a.stopPropagation()
                }
                  , y = function(c) {
                    "" == a.getSelection().toString() && ($(c.target).closest(b.textEditorCtrl.getContainerElement()).length ? b.setWindFocus(!0, null , !0) : b.setWindFocus(!0))
                }
                  , z = function() {
                    b.fromMin || m.scrollTop(m[0].scrollHeight)
                }
                ;
                d.on("mousewheel", x),
                d.on("mouseup", y),
                b.onAttachFileBtnClick = function() {
                    g.fireEvent($(".messageInputBar .inputHide", d)[0], "click")
                }
                ,
                b.showNewMessagesReceived = function() {
                    $(".newMsgReceived", d).hide(),
                    b.isSearch && (b.isSearch = !1),
                    b.$broadcast("render"),
                    m.perfectScrollbar("update"),
                    b.scrollChatMessageListContainerToBottom(),
                    b.setWindFocus(!0)
                }
                ,
                b.$on("$destroy", function() {
                    m.off("scroll", w),
                    n.off("resize", z),
                    d.off("mousewheel", x),
                    d.off("mouseup", y)
                }),
                b.openGiphyPopUp = function() {
                    d.find("#iShowGiphyPopup").trigger("showGiphyPopover")
                }
                ,
                b.addGiphyClass = function() {
                    d.find("#iShowGiphyPopup").addClass("chatWindowGiphy")
                }
                ,
                b.addVideoCallClass = function() {
                    d.find(".videoCallCamera").addClass("chatVideoCallDropdown")
                }
                ,
                b.howManyInView = function() {
                    setTimeout(function() {
                        var a = m.offset().top
                          , c = m.offset().top + m.height()
                          , e = {};
                        if (a > 0)
                            for (var f = 0; f < b.chatObj.messages.length; f++) {
                                var g = b.chatObj.messages[f];
                                if (g.fileInfo) {
                                    var h = d.find(".video" + g.fileInfo.fileId);
                                    if (d.find(".progress-bar").length) {
                                        e[g.fileInfo.fileId] = !0;
                                        continue
                                    }
                                    if (0 == h.length)
                                        continue;var i = h.offset().top
                                      , j = h.height();
                                    i + j >= a && c >= i && (e[g.fileInfo.fileId] = !0)
                                }
                            }
                        e != s && (s = e,
                        b.$broadcast("cnvNoteGallery:reloadThumbnailsHorizontal", e),
                        b.$broadcast("cnvNoteGallery:reloadThumbnails", e))
                    }, 0)
                }
                ,
                b.onUsersForChatInitialized = function() {
                    b.disabledChat && _.keys(b.chatObj.participants).length > 0 && !b.chatService.isAdminModeON() && b.chatObj.chatType == f.chatsdk.ChatType.P2P && e.getUserById(b.chatObj.getOtherParticipant().userId) && (b.disabledChat = !1,
                    n.attr("disabled", !1),
                    n.css("background", "#FFFFFF"),
                    p.attr("disabled", !1),
                    b.textEditorCtrl.enable(),
                    b.$broadcast("render"),
                    b.$broadcast("changeChatOptions"),
                    b.$$phase || b.$digest(),
                    A(),
                    console.log("data received for usersForChatInitialized event."))
                }
                ;
                var A = function() {
                    q.off("usersForChatInitialized", b.onUsersForChatInitialized),
                    console.log("stop listening for usersForChatInitialized event.")
                }
                ;
                _.keys(b.chatObj.participants).length > 0 && b.disabledChat && b.chatObj.chatType == f.chatsdk.ChatType.P2P && !e.getUserById(b.chatObj.getOtherParticipant().userId) && (q.on("usersForChatInitialized", b.onUsersForChatInitialized),
                console.log("listening for usersForChatInitialized event."));
                var B = function() {
                    if (b.disabledChat = !1,
                    b.disableChatSearchControls = !1,
                    b.chatService.isAdminModeON() ? (console.log("-->ChatWindow.disabling chat on admin mode on and this user is not in chat participants."),
                    b.disabledChat = !0,
                    b.$broadcast("changeChatOptions")) : (b.chatObj.participants[b.chatObj.thisUser.userId].status == f.chatsdk.ParticipantStatus.LEFT && (b.disabledChat = !0,
                    b.$broadcast("changeChatOptions")),
                    e.getUserById(b.chatObj.getOtherParticipant().userId) || b.chatObj.chatType != f.chatsdk.ChatType.P2P || (console.log("-->ChatWindow.disabling P2P chat (CHAT_INFO_RECV)" + e.getUserById(b.chatObj.getOtherParticipant().userId)),
                    b.disabledChat = !0,
                    b.$broadcast("changeChatOptions"))),
                    b.initChatState(),
                    !b.chatObj._user && b.chatObj.chatType == f.chatsdk.ChatType.P2P)
                        for (var a in b.chatObj.participants)
                            b.chatObj.thisUser.userId != a && (b.chatObj._user = e.getUserById(a));
                    b.$broadcast("render"),
                    b.$broadcast("refreshImage"),
                    b.$broadcast("userInvitedOrLeft"),
                    b.$broadcast("changeChatOptions"),
                    b.$$phase || b.$digest()
                }
                  , C = f.chatsdk.ChatEvents;
                b.chatObj.addListener(C.CHAT_INFO_RECV, B),
                b.$on("$destroy", function() {
                    b.chatObj.removeListener(C.CHAT_INFO_RECV, B)
                })
            },
            controller: ["$scope", "$element", "appearinVideoCallService", "roomVideoCallService", "googleHangoutsService", "logger", function(a, b, h, o, q, s) {
                function t(b) {
                    b && !a.isMinimized && a.chatObj.composingParticipants.length ? a.composingStarted() : a.showingcomposing && W()
                }
                function u() {
                    setTimeout(function() {
                        !a.hasUnread && 0 == a.chatObj.unreadCount && a.openedFromUserAction ? a.setWindFocus(!0, a.fromOtherTab) : a.setWindFocus(!1)
                    }, 0),
                    a.textEditorCtrl.captureEvents.on("text-change", function() {
                        var b = a.textEditorCtrl.getEditorText();
                        if (b = b.trim(),
                        fa && (clearTimeout(fa),
                        fa = null ),
                        b.length > 0)
                            if (ea(a.textEditorCtrl.getEditorHtmlText()),
                            da = (Date.now() - ca) / 1e3,
                            fa = setTimeout(function() {
                                1 == a.composing && (c.composingPaused(a.chatObj),
                                a.composing = !1),
                                ga && (clearTimeout(ga),
                                ga = null )
                            }, L),
                            a.composing)
                                a.composing && da >= 10 && (console.log("sending typing notification again..."),
                                c.composingStarted(a.chatObj),
                                ca = Date.now());
                            else {
                                if (ga)
                                    return;
                                ga = setTimeout(function() {
                                    c.composingStarted(a.chatObj),
                                    a.composing = !0,
                                    ca = Date.now()
                                }, K)
                            }
                        else
                            ea(""),
                            ga && (clearTimeout(ga),
                            ga = null ),
                            a.composing = !1,
                            c.composingPaused(a.chatObj)
                    })
                }
                function v(a, b, c, d, e) {
                    return b ? "\n" : c ? "" : d ? "" : e ? "\n" : void 0
                }
                function w() {
                    a.appInFoucs = !0,
                    a.isChatWindowFocused && (a.chatObj.unreadCount && c.chatRead(a.chatObj),
                    c.chatGainedFocus(a.chatObj))
                }
                function x() {
                    a.appInFoucs = !1
                }
                function y(b) {
                    b.tabId != a.tabId && b.chatId == a.chatId && a.setWindFocus(b.isFocus, !0)
                }
                function z(b) {
                    k.isThisTabLastActiveTab() || b.chatId == a.chatId && a.setWindFocus(b.isFocus, !0, !0, b.dntClearCurrentFocusedChatWind)
                }
                function A(b) {
                    b.tabId != a.tabId && b.chatId === a.chatId && (b.muted ? c.muteChat(a.chatObj, !1) : c.unMuteChat(a.chatObj, !1),
                    a.$broadcast("changeChatOptions"),
                    a.$emit("chatMuteStatusChanged"))
                }
                function B(b) {
                    b.tabId !== a.tabId && b.chatId === a.chatId && (a.textEditorCtrl.setContent(b.unsentMessageText),
                    a.textEditorCtrl.setSelection(b.rangeSelection, "user"))
                }
                function C(b) {
                    b.tabId !== a.tabId && b.chatId === a.chatId && k.dispatchTabsEvent2("displayUnsentChatMessageOnceOnInitialize", {
                        tabId: a.tabId,
                        chatId: a.chatId,
                        unsentMessageText: a.textEditorCtrl.getEditorHtmlText(),
                        rangeSelection: a.textEditorCtrl.getSelection()
                    })
                }
                function D(b) {
                    b.tabId !== a.tabId && b.chatId === a.chatId && (a.textEditorCtrl.setContent(b.unsentMessageText),
                    a.textEditorCtrl.setSelection(b.rangeSelection, "user"),
                    E())
                }
                function E() {
                    k.removeTabsEventListener2("displayUnsentChatMessageOnceOnInitialize", D)
                }
                function F(a) {
                    console.log("search Started")
                }
                function G(b) {
                    0 !== _.keys(a.chatObj.participants).length && a.isSearch && (a.chatObj.searchInfo.messages = d.renderLast20(M, M.thisUser.userId, M.getOtherParticipant().lastSeenMessageSequenceNumber, !0, !0),
                    a.searchCountStr = a.chatObj.searchInfo.getCurrentMatchIndex() + 1 + " of " + a.chatObj.searchInfo.getMatchCount(),
                    a.$broadcast("render"),
                    setTimeout(function() {
                        a.scrollHighlightedSearch(),
                        $("#" + a.msgWinId).perfectScrollbar("update")
                    }, 100))
                }
                function H(b) {
                    0 !== _.keys(a.chatObj.participants).length && a.isSearch && (a.chatObj.searchInfo.messages = d.renderLast20(M, M.thisUser.userId, M.getOtherParticipant().lastSeenMessageSequenceNumber, !0, !0),
                    a.searchCountStr = a.chatObj.searchInfo.getCurrentMatchIndex() + 1 + " of " + a.chatObj.searchInfo.getMatchCount(),
                    a.$broadcast("render"),
                    setTimeout(function() {
                        a.scrollHighlightedSearch(),
                        $("#" + a.msgWinId).perfectScrollbar("update")
                    }, 100))
                }
                function I(b) {
                    a.isSearch && (a.chatObj.searchInfo.messages = d.renderLast20(M, M.thisUser.userId, M.getOtherParticipant().lastSeenMessageSequenceNumber, !0, !0),
                    a.$broadcast("render"))
                }
                function J(b) {
                    a.closeSearch()
                }
                var K = 2e3
                  , L = 15e3
                  , M = a.chatObj
                  , N = null ;
                a.chatService = r;
                var O = function(b) {
                    a.chatObj.messages = d.updateTimeStamp(M.messages, b.message),
                    a.$broadcast("render"),
                    b.message.type == f.chatsdk.MessageType.MESSAGE && b.message.fileInfo && a.checkIfThereAnyChatGifMsgBubbleInViewAndPlay()
                }
                  , P = function(b) {
                    var c = Date.now();
                    console.log("-->PREF:UI messageSentInChat Start: " + c),
                    a.chatObj.chatId == b.chat.chatId && (a.chatObj = b.chat,
                    a.chatObj.messages = d.msgSentOnly(b.chat, a.chatObj.thisUser.userId),
                    b.message.fileInfo && (a.chatObj.messages[a.chatObj.messages.length - 1].fileInfo.file = a.files[a.files.length - 1]),
                    (b.message.type == f.chatsdk.MessageType.LEFT || b.message.type == f.chatsdk.MessageType.INVITE) && (b.message.type == f.chatsdk.MessageType.LEFT && b.message.senderId == M.thisUser.userId && (a.disabledChat = !0,
                    a.$broadcast("changeChatOptions")),
                    a.$broadcast("renderAtScope"))),
                    a.$broadcast("render"),
                    console.log("-->PREF:UI messageSentInChat End: " + Date.now() + " delta " + (Date.now() - c))
                }
                  , Q = function() {
                    0 !== _.keys(a.chatObj.participants).length && (a.messageListSpinner = !1,
                    a.$broadcast("render"),
                    a.chatObj.messages = d.renderLast20(M, a.chatObj.thisUser.userId, M.getOtherParticipant().lastSeenMessageSequenceNumber),
                    a.$broadcast("render"),
                    s.logLocally_errorOnServer("3)chatHistoryMessagesIssue: chatWindow.historyLoaded : title :" + a.chatObj.getTitle() + " thisUserId :" + a.chatObj.thisUser.userId + " chatID : " + a.chatObj.chatId + " messagesCount : " + a.chatObj.messages.length),
                    setTimeout(function() {
                        if (a.winHeight) {
                            var c = b.find(".chatMessageWindow")[0].scrollHeight - a.winHeight;
                            a.scrollChatMessageListContainerToBottom(c)
                        } else
                            a.scrollChatMessageListContainerToBottom()
                    }, 0))
                }
                  , R = function(c) {
                    var e = M.getOtherParticipant().lastSeenMessageSequenceNumber;
                    a.chatObj.messages = d.renderSeen(M.messages, a.chatObj.thisUser.userId, e),
                    a.$broadcast("render"),
                    a.isChatWindowFocused || a.isMinimized ? b.find(".chatWindowHeader").css("background", a.CHAT_WINDOW_HEADER_FOCUSED_COLOR) : b.find(".chatWindowHeader").css("background", a.CHAT_WINDOW_HEADER_BLURRED_COLOR),
                    $("#" + a.msgWinId).scrollTop() + $("#" + a.msgWinId).height() + 20 >= $("#" + a.msgWinId)[0].scrollHeight && a.scrollChatMessageListContainerToBottom()
                }
                  , S = function(c) {
                    if (0 !== _.keys(a.chatObj.participants).length) {
                        var e = M.getOtherParticipant().lastSeenMessageSequenceNumber;
                        a.chatObj.messages = d.renderSeen(M.messages, a.chatObj.thisUser.userId, e),
                        a.$broadcast("render"),
                        a.chatObj.unreadCount ? b.find(".chatWindowHeader").css("background", a.CHAT_WINDOW_HEADER_HIGHLIGHTED_DARK_COLOR) : a.isChatWindowFocused || a.isMinimized ? b.find(".chatWindowHeader").css("background", a.CHAT_WINDOW_HEADER_FOCUSED_COLOR) : b.find(".chatWindowHeader").css("background", a.CHAT_WINDOW_HEADER_BLURRED_COLOR)
                    }
                }
                  , T = function() {
                    0 == a.chatObj.unreadCount && (a.hasUnread = !1,
                    a.blink(b.find(".chatWindowHeader"), 0, 0),
                    a.isChatWindowFocused || a.isMinimized ? b.find(".chatWindowHeader").css("background", a.CHAT_WINDOW_HEADER_FOCUSED_COLOR) : b.find(".chatWindowHeader").css("background", a.CHAT_WINDOW_HEADER_BLURRED_COLOR)),
                    a.$broadcast("render"),
                    a.$emit("unReadCountChanged", a.chatObj.chatId)
                }
                  , U = function(e) {
                    if (0 !== _.keys(a.chatObj.participants).length) {
                        a.chatObj.messages.length > 0 && !a.chatObj.messages[0]._view && (a.chatObj.messages = d.renderLast20(a.chatObj, a.chatObj.thisUser.userId, a.chatObj.getOtherParticipant().lastSeenMessageSequenceNumber));
                        var g = Date.now();
                        console.log("-->PREF:UI messageReceive Start: " + g);
                        var h = e.message;
                        a.chatObj = M,
                        a.chatObj.messages.length > 0 && (a.chatObj.messages = d.msgReceiveOnly(M, M.thisUser.userId)),
                        a.isMinimized ? (e.message.type != f.chatsdk.MessageType.MESSAGE || e.message.senderId == M.thisUser.userId || e.message.skipNotification || a.chatObj.isMuted || b.find(".chatWindowHeader").css("background", a.CHAT_WINDOW_HEADER_HIGHLIGHTED_DARK_COLOR),
                        a.unread = !0,
                        a.isChatWindowFocused = !1) : a.showUnread = !1,
                        a.isChatWindowFocused ? a.appInFoucs && c.messageRead(h, M) : e.message.skipNotification || e.message.type == f.chatsdk.MessageType.MESSAGE && e.message.senderId != M.thisUser.userId && (a.chatObj.isMuted || (b.find(".chatWindowHeader").css("background", a.CHAT_WINDOW_HEADER_HIGHLIGHTED_DARK_COLOR),
                        a.blink(b.find(".chatWindowHeader"), 7, 800)),
                        a.hasUnread = !0);
                        var i;
                        (e.message.type == f.chatsdk.MessageType.LEFT || e.message.type == f.chatsdk.MessageType.INVITE) && (a.chatService.isAdminModeON() || e.message.type != f.chatsdk.MessageType.LEFT || e.message.senderId != M.thisUser.userId ? a.chatService.isAdminModeON() || e.message.type != f.chatsdk.MessageType.INVITE || M.participants[M.thisUser.userId].status != f.chatsdk.ParticipantStatus.JOINED || (a.disabledChat = !1,
                        i = !0,
                        a.$broadcast("changeChatOptions")) : (a.disabledChat = !0,
                        a.$broadcast("changeChatOptions")),
                        a.$broadcast("render"),
                        a.$broadcast("userInvitedOrLeft")),
                        a.showNewMessageBar = !1,
                        e.message.type != f.chatsdk.MessageType.LEFT && e.message.senderId != M.thisUser.userId && (!a.isChatMessageListScrolledToBottom || a.isSearch) && (a.showNewMessageBar = !0),
                        a.isMinimized ? a.renderRequired = !0 : (e.message.type != f.chatsdk.MessageType.MESSAGE ? i ? a.$broadcast("renderAtScope", !0) : a.$broadcast("renderAtScope") : a.$broadcast("render"),
                        a.renderRequired = !1),
                        a.showNewMessageBar ? a.showNewMessageBar && e.message.senderId != M.thisUser.userId && setTimeout(function() {
                            b.find(".newMsgReceived").show()
                        }, 0) : a.scrollChatMessageListContainerToBottom(),
                        $("#" + a.msgWinId).perfectScrollbar("update"),
                        console.log("-->PREF:UI messageReceive End: " + Date.now() + " delta " + (Date.now() - g))
                    }
                }
                  , V = function(c) {
                    0 !== _.keys(a.chatObj.participants).length && (a.messageListSpinner = !1,
                    a.chatObj.messages = d.renderLast20(M, a.chatObj.thisUser.userId, M.getOtherParticipant().lastSeenMessageSequenceNumber, !0),
                    a.$broadcast("render"),
                    setTimeout(function() {
                        if (a.winHeight) {
                            var c = b.find(".chatMessageWindow")[0].scrollHeight - a.winHeight;
                            a.scrollChatMessageListContainerToBottom(c)
                        } else
                            a.scrollChatMessageListContainerToBottom();
                        b.find(".newMsgReceived").hide()
                    }, 0))
                }
                ;
                a.composingStarted = function() {
                    var b = Date.now();
                    if (console.log("-->PREF:UI composingStarted Start: " + b),
                    !a.isMinimized && k.isThisTabLastActiveTab() && M.composingParticipants.length) {
                        a.composingUsers = [],
                        a.showingcomposing = !0;
                        for (var c = M.composingParticipants.length > 3 ? 3 : M.composingParticipants.length, d = M.composingParticipants.length - c, f = d + c, g = d; f > g; g++)
                            e.getUserById(M.composingParticipants[g].userId) ? a.composingUsers.push(e.getUserById(M.composingParticipants[g].userId)) : e.getInaccessibleUserById(M.composingParticipants[g].userId) && a.composingUsers.push(e.getInaccessibleUserById(M.composingParticipants[g].userId));
                        Math.ceil($("#" + a.msgWinId).scrollTop()) + $("#" + a.msgWinId).height() >= $("#" + a.msgWinId)[0].scrollHeight ? a.isComposingScroll = !0 : a.isComposingScroll = !1,
                        a.$broadcast("render"),
                        a.isComposingScroll && (a.scrollChatMessageListContainerToBottom(),
                        $("#" + a.msgWinId).perfectScrollbar("update"))
                    }
                    console.log("-->PREF:UI composingStarted End: " + Date.now() + " delta " + (Date.now() - b))
                }
                ;
                var W = function() {
                    var c = Date.now();
                    if (console.log("-->PREF:UI composingEnded Start: " + c),
                    !a.isMinimized && k.isThisTabLastActiveTab()) {
                        if (a.composingUsers = [],
                        M.composingParticipants.length) {
                            for (var d = M.composingParticipants.length > 3 ? 3 : M.composingParticipants.length, g = M.composingParticipants.length - d, h = g + d, i = g; h > i; i++)
                                e.getUserById(M.composingParticipants[i].userId) ? a.composingUsers.push(e.getUserById(M.composingParticipants[i].userId)) : e.getInaccessibleUserById(M.composingParticipants[i].userId) && a.composingUsers.push(e.getInaccessibleUserById(M.composingParticipants[i].userId));
                            Math.ceil($("#" + a.msgWinId).scrollTop()) + $("#" + a.msgWinId).height() >= $("#" + a.msgWinId)[0].scrollHeight && (a.scrollChatMessageListContainerToBottom($("#" + a.msgWinId)[0].scrollHeight - (46 * a.composingUsers.length + $("#" + a.msgWinId).height())),
                            $("#" + a.msgWinId).perfectScrollbar("update"),
                            a.scrollChatMessageListContainerToBottom())
                        } else
                            Math.ceil($("#" + a.msgWinId).scrollTop()) + $("#" + a.msgWinId).height() >= $("#" + a.msgWinId)[0].scrollHeight && (a.scrollChatMessageListContainerToBottom($("#" + a.msgWinId)[0].scrollHeight - (b.find("#composingMessage").height() + $("#" + a.msgWinId).height())),
                            $("#" + a.msgWinId).perfectScrollbar("update"),
                            a.scrollChatMessageListContainerToBottom());
                        a.showingcomposing = !1,
                        a.chatObj.participants[M.thisUser.userId].status != f.chatsdk.ParticipantStatus.LEFT && a.$broadcast("render")
                    }
                    if (a.isMinimized && (a.composingUsers = [],
                    M.composingParticipants.length))
                        for (var d = M.composingParticipants.length > 3 ? 3 : M.composingParticipants.length, g = M.composingParticipants.length - d, h = g + d, i = g; h > i; i++)
                            e.getUserById(M.composingParticipants[i].userId) ? a.composingUsers.push(e.getUserById(M.composingParticipants[i].userId)) : e.getInaccessibleUserById(M.composingParticipants[i].userId) && a.composingUsers.push(e.getInaccessibleUserById(M.composingParticipants[i].userId));
                    console.log("-->PREF:UI composingEnd End: " + Date.now() + " delta " + (Date.now() - c))
                }
                ;
                k.on("thisTabLastActiveChanged", t);
                var X = function() {
                    a.scrollChatMessageListContainerToBottom($("#" + a.msgWinId)[0].scrollHeight - (138 + $("#" + a.msgWinId).height())),
                    a.$broadcast("render"),
                    $("#" + a.msgWinId).perfectScrollbar("update")
                }
                  , Y = function(b) {
                    var c = new Image;
                    b.message.fileInfo.thumbnailName && (c.src = i("getNoteThumbnailPath")(b.message.fileInfo, a.chatObj.chatId),
                    c.onload = function() {
                        b.message.fileInfo.file.localUrl = c.src;
                        for (var d = 0; d < a.files.length; d++)
                            a.files[d].fileId == b.message.fileInfo.file.fileId && (a.files[d].localUrl = c.src);
                        a.$broadcast("render"),
                        a.$digest(),
                        setTimeout(function() {
                            a.howManyInView()
                        }, 0)
                    }
                    )
                }
                  , Z = function(b) {
                    a.$broadcast("render")
                }
                ;
                a.resendMessage = function(b) {
                    c.reSendMessageInChat(b, a.chatObj),
                    a.$broadcast("render"),
                    l.trackEvent(l.RETRY_A_FAILED_CHAT)
                }
                ;
                var aa, ba = function() {
                    a.$broadcast("changeChatOptions"),
                    k.dispatchTabsEvent2("muteStatusChanged", {
                        tabId: a.tabId,
                        chatId: a.chatId,
                        muted: a.chatObj.isMuted
                    }, !0),
                    a.$emit("chatMuteStatusChanged")
                }
                ;
                a.blink = function(b, c, d) {
                    (c > 0 || 0 > c) && ("rgb(2, 91, 126)" == $(b).css("background-color") ? $(b).css("background", a.CHAT_WINDOW_HEADER_HIGHLIGHTED_LIGHT_COLOR) : $(b).css("background", a.CHAT_WINDOW_HEADER_HIGHLIGHTED_DARK_COLOR)),
                    aa && clearTimeout(aa),
                    (c > 0 || 0 > c) && (aa = setTimeout(function() {
                        a.blink(b, c, d)
                    }, d),
                    c -= 1)
                }
                ,
                a.getUnsentChatMessageOnceOnInitialize = function() {
                    k.dispatchTabsEvent2("getUnsentChatMessageOnceOnInitialize", {
                        tabId: a.tabId,
                        chatId: a.chatId
                    })
                }
                ;
                var ca, da, ea = function(b) {
                    k.dispatchTabsEvent2("displayUnsentChatMessage", {
                        tabId: a.tabId,
                        chatId: a.chatId,
                        unsentMessageText: b,
                        rangeSelection: a.textEditorCtrl.getSelection()
                    })
                }
                , fa = null , ga = null , ha = {
                    min: 25,
                    max: 120
                }, ia = {};
                a.textEditorCtrl = {},
                a.textEditorCtrl.initialized = !1,
                a.textEditorCtrl.initialHtmlText = "",
                a.textEditorCtrl.height = ha,
                a.textEditorCtrl.captureEvents = ia,
                a.textEditorCtrl.editorInitialized = u;
                var ja = /(<\/div><div>)|(<div>)|(<\/div>)|(<br>)/gi;
                a.sendVideoCallLink = function(b) {
                    a.onTextEditorSubmitOnEnter(b)
                }
                ,
                a.onTextEditorSubmitOnEnter = function(d) {
                    var e = Date.now();
                    if (console.log("-->PREF:UI onTextEditorSubmitOnEnter Start: " + e),
                    a.isSearch && (a.isSearch = !1),
                    d)
                        c.sendMessage(d, a.chatObj),
                        l.trackEvent(l.CHATS_SEND_MESSAGE),
                        ga && (clearTimeout(ga),
                        ga = null ),
                        setTimeout(function() {
                            b.find(".chatMessageWindow").scrollTop(b.find(".chatMessageWindow")[0].scrollHeight),
                            $("#" + a.msgWinId).perfectScrollbar("update")
                        }, 30);
                    else {
                        ea("");
                        var f = a.textEditorCtrl.getEditorText();
                        f = f.trim(),
                        "" != f && (f = a.textEditorCtrl.getEditorHtmlText().replace(/<p><\/p>/gi, "<div></div>").replace(ja, v).replace(/<p>\s*<\/p>/gi, "").replace(/(?!<\s*[a-z][a-z0-9]*.*\s)(class\s*=\s*"[a-z0-9-\s*]*\")(?=[^<>]*>)/gi, "").replace(/&nbsp;/g, " ").trim()),
                        "" == f || /^\s*$/.test(f) || (c.sendMessage(f, a.chatObj),
                        ga && (clearTimeout(ga),
                        ga = null ),
                        clearTimeout(fa),
                        a.composing = !1,
                        setTimeout(function() {
                            a.textEditorCtrl.clearContent(),
                            b.find(".chatMessageWindow").scrollTop(b.find(".chatMessageWindow")[0].scrollHeight),
                            $("#" + a.msgWinId).perfectScrollbar("update")
                        }, 30),
                        l.trackEvent(l.CHATS_SEND_MESSAGE))
                    }
                    console.log("-->PREF:UI onTextEditorSubmitOnEnter End: " + Date.now() + " delta " + (Date.now() - e))
                }
                ,
                a.onFocusOut = function(b) {
                    a.isMinimizing || !a.isMinimized && a.isChatWindowFocused && a.setWindFocus(!1)
                }
                ,
                a.onFocus = function() {
                    console.log("focus"),
                    a.isMinimizing || a.isMinimized || a.setWindFocus(!0)
                }
                ,
                a.onEscKeyPressInTextEditor = function() {
                    a.textEditorCtrl.getEditorText() && (ea(""),
                    a.textEditorCtrl.clearContent()),
                    1 == a.composing && (ga && (clearTimeout(ga),
                    ga = null ),
                    c.composingPaused(a.chatObj),
                    a.composing = !1)
                }
                ,
                a.moveToNextSearch = function(b) {
                    b ? a.chatObj.searchInfo.moveToNextMatch() : a.chatObj.searchInfo.moveToPreviousMatch(),
                    a.searchCountStr = a.chatObj.searchInfo.getCurrentMatchIndex() + 1 + " of " + a.chatObj.searchInfo.getMatchCount(),
                    a.$broadcast("render"),
                    a.scrollHighlightedSearch()
                }
                ,
                a.scrollHighlightedSearch = function() {
                    if (b.find(".highlight").position()) {
                        var c = b.find(".highlight").position().top
                          , d = $("#" + a.msgWinId).height() / 2
                          , e = 0;
                        e = $("#" + a.msgWinId).scrollTop() + c,
                        e = e - d + b.find(".highlight").height() / 2,
                        a.scrollChatMessageListContainerToBottom(e)
                    }
                }
                ,
                a.loadMoreMessages = function(b, c) {
                    a.chatObj.searchInfo.loadMoreMessages(b, c)
                }
                ,
                a.closeSearch = function() {
                    a.isSearch = !1,
                    a.$broadcast("render"),
                    setTimeout(function() {
                        a.scrollChatMessageListContainerToBottom(1),
                        $("#" + a.msgWinId).perfectScrollbar("update"),
                        a.scrollChatMessageListContainerToBottom()
                    }, 0)
                }
                ,
                a.getShareWithDropdownItems = function(a, b) {
                    var c = m.defer()
                      , d = [];
                    return "@" == b ? d = n.queryAvailableCommands(a, 5, n.sources.CHAT) : ":" == b && (d = n.queryEmojiData(a, 5)),
                    c.resolve(d),
                    c.promise
                }
                ,
                a.OnCommandExecuted = function(b, c) {
                    if ("Giphy" === b.label)
                        setTimeout(function() {
                            N = a.textEditorCtrl.getSelection(),
                            a.giphyObject = {
                                searchText: c,
                                actionType: "command"
                            },
                            a.openGiphyPopUp()
                        }, 0);
                    else if ("Hangouts" === b.label)
                        q.startGoogleHangouts(a.chatObj.participants).then(function(b) {
                            a.sendVideoCallLink("🎥 Join me in a Google Hangout video call: <a href='" + b.url + "'>Join now!</a>"),
                            l.trackEvent(l.SENT_VIDEO_CALL, {
                                Type: "Google+ Hangouts",
                                Participants: _.keys(a.chatObj.participants).length
                            })
                        });
                    else if ("Appear.in" === b.label)
                        h.generateAppearinVideoCallLink().then(function(b) {
                            a.sendVideoCallLink("🎥 Join me in an appear.in video call: <a href='" + b.directLink + "'>" + b.roomName + "</a>"),
                            l.trackEvent(l.SENT_VIDEO_CALL, {
                                Type: "Appear",
                                Participants: _.keys(a.chatObj.participants).length
                            })
                        });
                    else if ("Room" === b.label) {
                        var d = o.generateRoomVideoCallLink();
                        a.sendVideoCallLink("🎥 Join me in a Room video call. <a href='" + d + "'>Join now!</a>"),
                        l.trackEvent(l.SENT_VIDEO_CALL, {
                            Type: "Room",
                            Participants: _.keys(a.chatObj.participants).length
                        })
                    }
                }
                ,
                a.$on("giphyPopupClosed", function() {
                    document.activeElement.classList.contains("ql-editor") || "INPUT" == document.activeElement.nodeName || (N ? (a.textEditorCtrl.setSelection(N),
                    N = null ) : a.textEditorCtrl.focus())
                }),
                a.handlingOnBoardingMessage = function(b) {
                    setTimeout(function() {
                        a.addGiphyClass(),
                        a.addVideoCallClass(),
                        p.$broadcast("showGiphyChatTooltip"),
                        p.$broadcast("showVideoCallChatTooltip")
                    }, 250)
                }
                ,
                a.hideOnBoardingMessage = function(a) {
                    setTimeout(function() {
                        g.fireEvent(document.body, "mouseup")
                    }, 0)
                }
                ,
                a.adjustWindPosOnMin = function() {
                    var b = new Event("recalculateAutocompletePosition");
                    document.dispatchEvent(b),
                    a.howManyInView()
                }
                ,
                a.$on("hideChatWindow", function(b, c) {
                    c == a.chatId && a.adjustWindPosOnMin()
                });
                var ka = f.chatsdk.ChatEvents;
                c.addListener(ka.MESSAGE_SENT_IN_CHAT, P),
                M.addListener(ka.SENT_MSG_RECEIVED_AT_SERVER, O),
                M.addListener(ka.MESSAGE_RECEIVED, U),
                M.addListener(ka.HISTORY_LOADED, Q),
                M.addListener(ka.MESSAGE_READ, R),
                M.addListener(ka.CHAT_UPDATED, S),
                M.addListener([ka.UNREAD_COUNT_CHANGED, ka.CHAT_READ], T),
                M.addListener(ka.NEWER_MESSAGES_LOADED, V),
                M.addListener(ka.COMPOSING_STARTED, a.composingStarted),
                M.addListener(ka.COMPOSING_ENDED, W),
                M.addListener(ka.MESSAGE_REMOVED, X),
                M.addListener(ka.FILE_UPLOADED, Y),
                M.addListener(ka.SENT_MSG_FAILED, Z),
                M.addListener(ka.MUTE_STATUS_CHANGED, ba),
                M.addListener(ka.SEARCH_STARTED, F),
                M.addListener(ka.MATCH_FETCH_COMPLETE, H),
                M.addListener(ka.SEARCH_MATCHES_RECEIVED, G),
                M.addListener(ka.LOADED_MORE_MSGS, I),
                M.addListener(ka.SEARCH_ENDED, J),
                j.on("appFocus", w),
                j.on("appBlur", x),
                k.addTabsEventListener2("setWindFocus", y),
                k.addTabsEventListener2("setWindFocusOut", z),
                k.addTabsEventListener2("muteStatusChanged", A),
                k.addTabsEventListener2("displayUnsentChatMessage", B),
                k.addTabsEventListener2("getUnsentChatMessageOnceOnInitialize", C),
                k.addTabsEventListener2("displayUnsentChatMessageOnceOnInitialize", D),
                a.$on("$destroy", function() {
                    c.removeListener(ka.MESSAGE_SENT_IN_CHAT, P),
                    M.removeListener(ka.SENT_MSG_RECEIVED_AT_SERVER, O),
                    M.removeListener(ka.MESSAGE_RECEIVED, U),
                    M.removeListener(ka.HISTORY_LOADED, Q),
                    M.removeListener(ka.MESSAGE_READ, R),
                    M.removeListener(ka.CHAT_UPDATED, S),
                    M.removeListener(ka.UNREAD_COUNT_CHANGED, T),
                    M.removeListener(ka.NEWER_MESSAGES_LOADED, V),
                    M.removeListener(ka.COMPOSING_STARTED, a.composingStarted),
                    M.removeListener(ka.COMPOSING_ENDED, W),
                    M.removeListener(ka.MESSAGE_REMOVED, X),
                    M.removeListener(ka.FILE_UPLOADED, Y),
                    M.removeListener(ka.SENT_MSG_FAILED, Z),
                    M.removeListener(ka.MUTE_STATUS_CHANGED, ba),
                    M.removeListener(ka.SEARCH_STARTED, F),
                    M.removeListener(ka.MATCH_FETCH_COMPLETE, H),
                    M.removeListener(ka.SEARCH_MATCHES_RECEIVED, G),
                    M.removeListener(ka.LOADED_MORE_MSGS, I),
                    M.removeListener(ka.SEARCH_ENDED, J),
                    c.chatClosed(M),
                    k.off("thisTabLastActiveChanged", t),
                    j.off("appFocus", w),
                    j.off("appBlur", x),
                    k.removeTabsEventListener2("setWindFocus", y),
                    k.removeTabsEventListener2("setWindFocusOut", z),
                    k.removeTabsEventListener2("muteStatusChanged", A),
                    k.removeTabsEventListener2("displayUnsentChatMessage", B),
                    k.removeTabsEventListener2("getUnsentChatMessageOnceOnInitialize", C),
                    k.removeTabsEventListener2("displayUnsentChatMessageOnceOnInitialize", D)
                }),
                a.getPrivateP2PChatTitle = function() {
                    return "Private chat"
                }
            }
            ]
        }
    }
    ]).directive("scrollMsgWinBot", function() {
        return {
            link: function(a, b, c) {
                var d = new MutationObserver(function(b) {
                    b.forEach(function(b) {
                        if (b.oldValue && b.oldValue.indexOf("height") > 0) {
                            var c = b.oldValue[b.oldValue.indexOf("height") + 8] + b.oldValue[b.oldValue.indexOf("height") + 9];
                            c && c != b.target.clientHeight && $("#" + a.msgWinId).length && $("#" + a.msgWinId).scrollTop($("#" + a.msgWinId)[0].scrollHeight)
                        }
                    })
                }
                );
                d.observe(b[0], {
                    attributes: !0,
                    attributeOldValue: !0,
                    subtree: !1,
                    attributeFilter: ["style"]
                })
            }
        }
    }).directive("cnvChatCloseClick", function() {
        return {
            link: function(a, b, c) {
                b.on("mousedown", function(b) {
                    a.$emit("closeChatWindow", c.cnvChatCloseClick),
                    b.preventDefault(),
                    b.stopPropagation()
                })
            }
        }
    }),
    b.module("convoApp").directive("cnvAddUserInChat", ["chatManager", "chatUsersManager", "appTabs", function(a, b, c) {
        return {
            link: function(d, e, g) {
                e.find(".addUserList").scroll(function() {
                    e.find(".addUserList").scrollTop() >= e.find(".addUserList")[0].scrollHeight - e.find(".addUserList").height() && (d.addListShowingUsers + 20 < d.users.length ? d.addListShowingUsers += 20 : d.addListShowingUsers = d.users.length,
                    d.$digest()),
                    0 == e.find(".addUserList").scrollTop() && (d.addListShowingUsers = 20,
                    d.$digest())
                }),
                e.find(".userSearchBar").on("input", function(a) {
                    if ($(a.target).val()) {
                        d.addUserSelectedIndex = 0,
                        d.users = b.getFilteredUserList($(a.target).val());
                        for (var c = [], g = 0; g < d.users.length; g++)
                            d.users[g].userId in d.chatObj.participants ? d.chatObj.participants[d.users[g].userId].status != f.chatsdk.ParticipantStatus.JOINED && c.push(d.users[g]) : c.push(d.users[g]);
                        d.users = c,
                        d.addListShowingUsers = d.users.length,
                        d.$digest(),
                        d.$broadcast("render")
                    } else {
                        d.users = b.getUsers();
                        for (var c = [], g = 0; g < d.users.length; g++)
                            d.users[g].userId in d.chatObj.participants || c.push(d.users[g]);
                        d.users = c,
                        d.addListShowingUsers = 20,
                        d.$broadcast("render"),
                        d.$digest()
                    }
                    e.find(".addUserList").perfectScrollbar("update"),
                    e.find(".addUserList").scrollTop(0)
                }),
                d.inviteThisUserToChat = function(g, h) {
                    if (d.chatObj.chatType == f.chatsdk.ChatType.P2P) {
                        var i = [];
                        i.push(g),
                        b.getUserById(d.chatObj.getOtherParticipant().userId) && i.push(b.getUserById(d.chatObj.getOtherParticipant().userId));
                        var j = a.startChatWithUsers(i);
                        setTimeout(function() {
                            d.$emit("opeNewChatWindow", j)
                        }, 0)
                    } else if (d.chatObj.chatType == f.chatsdk.ChatType.GROUP) {
                        var i = [];
                        i.push(g),
                        a.inviteUsersInChat(i, d.chatObj),
                        h || 0 !== d.chatObj.lastMessageSequenceNumber || c.dispatchTabsEvent2("addUserToGroupChat", {
                            chatId: d.chatObj.chatId,
                            userId: g.userId
                        }),
                        d.$emit("renderAtScope"),
                        d.isSearch ? d.closeSearch() : setTimeout(function() {
                            d.scrollChatMessageListContainerToBottom(),
                            $("#" + d.msgWinId).perfectScrollbar("update")
                        }, 0)
                    }
                    d.$emit("saveHistoryLS"),
                    e.find(".userSearchBar").blur()
                }
                ,
                d.userSearchBarKeyDown = function(a) {
                    if (27 == a.which)
                        e.find(".userSearchBar").blur(),
                        d.$broadcast("render");
                    else if (38 == a.which) {
                        a.preventDefault(),
                        d.addUserSelectedIndex > 0 && d.addUserSelectedIndex--;
                        var b = 24 * d.addUserSelectedIndex;
                        $(".addUserList").scrollTop() > 0 && ($(".addUserList").scrollTop() < b && b < $(".addUserList").scrollTop() + $(".addUserList").height() || $(".addUserList").scrollTop($(".addUserList").scrollTop() - 24)),
                        d.$broadcast("render")
                    } else if (40 == a.which) {
                        a.preventDefault(),
                        d.addListShowingUsers - 1 > d.addUserSelectedIndex && d.addUserSelectedIndex++;
                        var b = 24 * d.addUserSelectedIndex + 64;
                        $(".addUserList").scrollTop() < b && b < $(".addUserList").scrollTop() + $(".addUserList").height() || $(".addUserList").scrollTop($(".addUserList").scrollTop() + 24),
                        d.$broadcast("render")
                    } else
                        13 == a.which && d.inviteThisUserToChat(d.users[d.addUserSelectedIndex])
                }
                ,
                d.mouseOnItem = function(a) {
                    d.addUserSelectedIndex = a,
                    d.$broadcast("render")
                }
                ,
                e.find(".userSearchBar").on("blur", function(a) {
                    console.log("add user blur"),
                    d.showUserListToAdd = !1,
                    d.addUserSelectedIndex = -1,
                    $(a.target).val(""),
                    d.users = b.getUsers(),
                    d.$broadcast("render"),
                    e.find(".addUserList").perfectScrollbar("update")
                })
            },
            controller: ["$scope", "$element", function(a, d) {
                function e(c) {
                    c.chatId === a.chatObj.chatId && a.inviteThisUserToChat(b.getUserById(c.userId), !0)
                }
                c.addTabsEventListener2("addUserToGroupChat", e),
                a.$on("$destroy", function() {
                    c.removeTabsEventListener2("addUserToGroupChat", e)
                })
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvChatActionBar", ["chatUsersManager", "chatManager", "AppLinks", "FiltersQueryTransformer", "$location", "resourcesTabsManager", function(a, b, c, d, e, g) {
        return {
            link: function(h, i, j) {
                h.showUserList = function() {
                    if (h.showUserListToAdd)
                        h.showUserListToAdd = !1,
                        h.$broadcast("render");
                    else if (!h.disabledChat) {
                        h.showUserListToAdd = !0,
                        h.addListShowingUsers = 20,
                        h.addUserSelectedIndex = -1;
                        var b = [];
                        h.users = a.getUsers();
                        for (var c = 0; c < h.users.length; c++)
                            h.users[c].userId in h.chatObj.participants ? h.chatObj.participants[h.users[c].userId].status != f.chatsdk.ParticipantStatus.JOINED && b.push(h.users[c]) : b.push(h.users[c]);
                        h.users = b,
                        h.setWindFocus(!1),
                        h.$broadcast("render"),
                        i.find(".addUserList").scrollTop(0),
                        i.find(".addUserList").perfectScrollbar({
                            suppressScrollX: !0
                        }),
                        i.find(".userSearchBar").focus(),
                        i.find(".userSearchBar").focus()
                    }
                }
                ,
                h.closeVideoCallDropdown = function() {
                    $(".vidCallOptionsDropdown", i).length && (h.showVidCallDropdown = !1,
                    h.$broadcast("render"))
                }
                ,
                h.$on("cnvEventBinding::click", function(a, b) {
                    h.closeVideoCallDropdown()
                }),
                h.showVideoCallOptions = function() {
                    h.disabledChat || setTimeout(function() {
                        h.showVidCallDropdown = !0,
                        h.$broadcast("render"),
                        h.setWindFocus(!1),
                        h.blurTextEditor()
                    }, 0)
                }
                ,
                h.canShareChat = function() {
                    return _.keys(h.chatObj.participants).length > 0
                }
                ,
                h.$on("changeChatOptions", function(i) {
                    if (h.chatOptions = {},
                    h.MuteUnMuteStr = "",
                    h.chatOptions.type = "chat",
                    h.chatObj.isMuted ? h.MuteUnMuteStr = "Unmute chat" : h.MuteUnMuteStr = "Mute chat",
                    h.chatOptions.align = "right",
                    h.chatObj.chatType == f.chatsdk.ChatType.GROUP)
                        if (h.disabledChat) {
                            var j = function() {
                                g.switchToHomeTab(k)
                            }
                            ;
                            h.chatOptions.options = [{
                                label: "Share this chat",
                                callback: j
                            }];
                            var k = function() {
                                for (var a, b, c = h.chatObj.messages, d = "Chat with " + h.chatObj.getTitle(), e = "", g = 0; g < c.length; g++)
                                    c[g].type == f.chatsdk.MessageType.MESSAGE && (a = "<b>" + h.chatObj.participants[c[g].senderId].name + "</b>",
                                    b = "<p>" + c[g].messageText + "</p> <br/>",
                                    e += a + b);
                                console.log(e),
                                $(".dummy-text-area").trigger("onCustomClick", [e, d])
                            }
                        } else {
                            var j = function() {
                                g.switchToHomeTab(k)
                            }
                              , k = function() {
                                for (var a, b, c = h.chatObj.messages, d = "Chat with " + h.chatObj.getTitle(), e = "", g = 0; g < c.length; g++)
                                    c[g].type == f.chatsdk.MessageType.MESSAGE && (a = "<b>" + h.chatObj.participants[c[g].senderId].name + "</b>",
                                    b = "<p>" + c[g].messageText + "</p> <br/>",
                                    e += a + b);
                                console.log(e),
                                $(".dummy-text-area").trigger("onCustomClick", [e, d])
                            }
                              , l = function() {
                                b.leaveChat(h.chatObj),
                                setTimeout(function() {
                                    h.scrollChatMessageListContainerToBottom()
                                }, 0),
                                h.chatOptions.options = [{
                                    label: "Share this chat",
                                    callback: j
                                }]
                            }
                              , m = function() {
                                h.chatObj.isMuted ? b.unMuteChat(h.chatObj, !0) : b.muteChat(h.chatObj, !0)
                            }
                            ;
                            h.chatOptions.options = [{
                                label: "Share this chat",
                                callback: j
                            }, {
                                label: h.MuteUnMuteStr,
                                callback: m
                            }, {
                                label: "Leave chat",
                                callback: l
                            }]
                        }
                    else if (h.chatObj.chatType == f.chatsdk.ChatType.P2P) {
                        var j = function() {
                            g.switchToHomeTab(k)
                        }
                          , k = function() {
                            for (var a, b, c = h.chatObj.messages, d = "Chat with " + h.chatObj.getTitle(), e = "", g = 0; g < c.length; g++)
                                c[g].type == f.chatsdk.MessageType.MESSAGE && (a = "<b>" + h.chatObj.participants[c[g].senderId].name + "</b>",
                                b = "<p>" + c[g].messageText + "</p> <br/>",
                                e += a + b);
                            console.log(e),
                            $(".dummy-text-area").trigger("onCustomClick", [e, d])
                        }
                          , n = function() {
                            var b = null 
                              , f = a.getUserById(h.chatObj.getOtherParticipant().userId)
                              , g = f.email
                              , i = "from:'" + g + "'";
                            try {
                                b = d.queryToFilters(i)
                            } catch (j) {
                                b = null 
                            }
                            if (b && 0 != b.length) {
                                var k = d.filtersToQuery(b);
                                e.url(c.getFilterUrlForFilterStr(k))
                            } else
                                e.url("/feed")
                        }
                          , m = function() {
                            h.chatObj.isMuted ? b.unMuteChat(h.chatObj, !0) : b.muteChat(h.chatObj, !0)
                        }
                        ;
                        h.chatService.isAdminModeON() ? h.chatOptions.options = [{
                            label: "Share this chat",
                            callback: j
                        }] : h.chatOptions.options = [{
                            label: "Share this chat",
                            callback: j
                        }, {
                            label: "View profile",
                            callback: n
                        }, {
                            label: h.MuteUnMuteStr,
                            callback: m
                        }]
                    }
                    h.$broadcast("render")
                }),
                h.$broadcast("changeChatOptions")
            },
            controller: ["$scope", "$element", function(a, b) {}
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvParticipantList", ["chatUsersManager", function(a) {
        return {
            link: function(a, b, c) {
                a.$broadcast("userInvitedOrLeft"),
                a.showParticipantsList = function() {
                    a.showingParticipantList ? (a.showingParticipantList = !1,
                    a.$broadcast("render")) : (a.showingParticipantList = !0,
                    a.setWindFocus(!1),
                    a.$broadcast("render"),
                    b.find(".participantList").scrollTop(0),
                    b.find(".participantList").perfectScrollbar({
                        suppressScrollX: !0
                    }),
                    b.find(".participantList").focus(),
                    b.find(".participantList").focus())
                }
                ,
                b.find(".participantList").on("focus", function() {
                    a.showingParticipantList = !0,
                    a.$broadcast("render")
                }),
                b.find(".participantList").on("blur", function() {
                    a.showingParticipantList = !1,
                    a.$broadcast("render")
                })
            },
            controller: ["$scope", "$element", function(b, c) {
                b.$on("userInvitedOrLeft", function() {
                    if (0 !== _.keys(b.chatObj.participants).length) {
                        var c, d = 0;
                        b.users = a.getUsers(),
                        b.showingParticipantList = !1;
                        for (c in b.chatObj.participants)
                            b.chatObj.participants.hasOwnProperty(c) && b.chatObj.participants[c].status == f.chatsdk.ParticipantStatus.JOINED && d++;
                        b.chatService.isAdminModeONAndThisUserIsNotInChatParticipants(b.chatObj) || b.chatObj.participants[b.chatObj.thisUser.userId].status != f.chatsdk.ParticipantStatus.LEFT || d++,
                        b.usersAvatar = [],
                        b.participantLen = d;
                        var e, g = 0;
                        if (d >= 5) {
                            for (var h = 0; h < b.users.length; h++)
                                if (b.users[h].userId in b.chatObj.participants && 5 > g)
                                    b.chatObj.participants[b.users[h].userId].status == f.chatsdk.ParticipantStatus.JOINED && (b.usersAvatar.push(b.users[h]),
                                    g++);
                                else if (g >= 5)
                                    break
                        } else
                            for (var h = 0; h < b.users.length; h++)
                                b.users[h].userId in b.chatObj.participants && b.chatObj.participants[b.users[h].userId].status == f.chatsdk.ParticipantStatus.JOINED && (e = b.users[h],
                                e.displayName = e.getDisplayName(),
                                b.usersAvatar.push(e),
                                g++);
                        if (5 > g)
                            for (var h in b.chatObj.participants) {
                                for (var i, j = 0; j < b.usersAvatar.length; j++)
                                    b.usersAvatar[j].userId == b.chatObj.participants[h].userId && (i = !0);
                                if (i || b.chatObj.participants[h].userId == b.chatObj.thisUser.userId || b.chatObj.participants[h].status != f.chatsdk.ParticipantStatus.JOINED || a.getInaccessibleUserById(b.chatObj.participants[h].userId) && (e = a.getInaccessibleUserById(b.chatObj.participants[h].userId),
                                e.displayName = e.getDisplayName(),
                                b.usersAvatar.push(e),
                                g++),
                                i = !1,
                                g >= 5)
                                    break
                            }
                        b.participantsList = [];
                        for (var h = 0; h < b.users.length; h++)
                            b.users[h].userId in b.chatObj.participants && b.chatObj.participants[b.users[h].userId].status == f.chatsdk.ParticipantStatus.JOINED && (e = b.users[h],
                            e.displayName = e.getDisplayName(),
                            b.participantsList.push(e));
                        for (var h in b.chatObj.participants) {
                            for (var k, j = 0; j < b.participantsList.length; j++)
                                b.participantsList[j].userId == b.chatObj.participants[h].userId && (k = !0);
                            k || b.chatObj.participants[h].userId == b.chatObj.thisUser.userId || b.chatObj.participants[h].status != f.chatsdk.ParticipantStatus.JOINED || a.getInaccessibleUserById(b.chatObj.participants[h].userId) && (e = a.getInaccessibleUserById(b.chatObj.participants[h].userId),
                            e.displayName = e.getDisplayName(),
                            b.participantsList.push(e)),
                            k = !1
                        }
                        b.participantsList.length > 5 && b.usersAvatar.pop(),
                        b.$broadcast("render")
                    }
                })
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvVideoCallOptionsInChat", [function() {
        return {
            restrict: "E",
            scope: !0,
            templateUrl: "chat/client/chatWindow/templates/cnvVideoCallOptionsInChat.tpl.html",
            link: function(a, b, c) {
                var d = function(b) {
                    27 == b.keyCode && a.closeVideoCallDropdown()
                }
                ;
                $(document).on("keydown", d),
                a.$on("$destroy", function() {
                    $(document).off("keydown", d)
                })
            },
            controller: ["$scope", "appearinVideoCallService", "roomVideoCallService", "googleHangoutsService", "mixpanelService", function(a, b, c, d, e) {
                a.startGoogleHangouts = function() {
                    d.startGoogleHangouts(a.chatObj.participants).then(function(b) {
                        a.sendVideoCallLink("🎥 Join me in a Google Hangout video call: <a href='" + b.url + "' data-participants-count='" + _.keys(a.chatObj.participants).length + "'>Join now!</a>"),
                        e.trackEvent(e.SENT_VIDEO_CALL, {
                            Type: "Google+ Hangouts",
                            Participants: _.keys(a.chatObj.participants).length
                        })
                    })
                }
                ,
                a.startAppearin = function() {
                    b.generateAppearinVideoCallLink().then(function(b) {
                        a.sendVideoCallLink("🎥 Join me in an appear.in video call: <a href='" + b.directLink + "' data-participants-count='" + _.keys(a.chatObj.participants).length + "'>" + b.roomName + "</a>"),
                        e.trackEvent(e.SENT_VIDEO_CALL, {
                            Type: "Appear",
                            Participants: _.keys(a.chatObj.participants).length
                        })
                    })
                }
                ,
                a.startRoom = function(b) {
                    var d = c.generateRoomVideoCallLink();
                    a.sendVideoCallLink("🎥 Join me in a Room video call. <a href='" + d + "' data-participants-count='" + _.keys(a.chatObj.participants).length + "'>Join now!</a>"),
                    e.trackEvent(e.SENT_VIDEO_CALL, {
                        Type: "Room",
                        Participants: _.keys(a.chatObj.participants).length
                    })
                }
            }
            ]
        }
    }
    ]),
    b.module("convoApp").factory("msgListRenderer", ["datetimeService", "chatUsersManager", function(a, b) {
        return {
            msgSentOnly: function(b, c) {
                var d = b.messages
                  , e = d.length - 1;
                if (d[e].type == f.chatsdk.MessageType.MESSAGE) {
                    if (!d[e]._view)
                        if (d[e]._view = {
                            otherUserWithImg: 0,
                            otherUserWithoutImg: 0,
                            thisUserWithImg: 0,
                            thisUserWithoutImg: 0,
                            _user: null ,
                            showUserName: 0,
                            time: 0,
                            showDate: 0,
                            dateToShow: null ,
                            seen: 0,
                            left: 0,
                            invite: 0,
                            messageToDisplay: null ,
                            messageText: null 
                        },
                        d[e]._view.messageText = d[e].messageText.replace(/\n/gi, "<br>"),
                        d[e].fileInfo && d[e].fileInfo.fileId && (d[e].fileInfo.ver = 3,
                        d[e].fileInfo.thumbnail_name = d[e].fileInfo.thumbnailName),
                        d[e].senderId == c && (d[e]._view.thisUserWithoutImg = 1,
                        d[e - 1] && (d[e - 1]._view.showUserName = 1)),
                        d[e]._view.time = a.getTimeFormatHmma(d[e].getTimestamp()),
                        d[e - 1]) {
                            if (a.isDayDiff(d[e].getTimestamp(), d[e - 1].getTimestamp())) {
                                d[e]._view.showDate = 1,
                                d[e]._view.dateToShow = a.dateSeparatorFromCurrentTime(d[e].getTimestamp());
                                for (var g = 0, h = e - 1; h > -1; h--) {
                                    if (2 == g) {
                                        g = 0;
                                        break
                                    }
                                    1 == d[h]._view.showDate && (d[h]._view.dateToShow = a.dateSeparatorFromCurrentTime(d[h].getTimestamp()),
                                    g++)
                                }
                            }
                        } else
                            d[e]._view.showDate = 1,
                            d[e]._view.dateToShow = a.dateSeparatorFromCurrentTime(d[e].getTimestamp())
                } else if (d[e].type == f.chatsdk.MessageType.INVITE) {
                    var i = d[e].invitees[d[e].messageText];
                    d[e]._view = {
                        invite: 1,
                        messageToDisplay: "You have invited " + i
                    },
                    d[e - 1] && a.isDayDiff(d[e].getTimestamp(), d[e - 1].getTimestamp()) && (d[e]._view.showDate = 1,
                    d[e]._view.dateToShow = a.dateSeparatorFromCurrentTime(d[e].getTimestamp()))
                } else if (d[e].type == f.chatsdk.MessageType.LEFT) {
                    if (d[e].senderId == c) {
                        var i = d[e].invitees[d[e].messageText];
                        d[e]._view = {
                            invite: 1,
                            messageToDisplay: "You have left this chat. "
                        }
                    }
                    d[e - 1] && a.isDayDiff(d[e].getTimestamp(), d[e - 1].getTimestamp()) && (d[e]._view.showDate = 1,
                    d[e]._view.dateToShow = a.dateSeparatorFromCurrentTime(d[e].getTimestamp()))
                }
                return d
            },
            msgReceiveOnly: function(c, d) {
                var e = c.messages
                  , g = e.length - 1;
                if (e[g].type == f.chatsdk.MessageType.MESSAGE) {
                    if (!e[g]._view)
                        if (e[g]._view = {
                            otherUserWithImg: 0,
                            otherUserWithoutImg: 0,
                            thisUserWithImg: 0,
                            thisUserWithoutImg: 0,
                            _user: null ,
                            showUserName: 0,
                            time: 0,
                            showDate: 0,
                            dateToShow: null ,
                            seen: 0,
                            left: 0,
                            invite: 0,
                            messageToDisplay: null ,
                            messageText: null 
                        },
                        e[g]._view.messageText = e[g].messageText.replace(/\n/gi, "<br>"),
                        e[g].fileInfo && e[g].fileInfo.fileId && (e[g].fileInfo.ver = 3,
                        e[g].fileInfo.thumbnail_name = e[g].fileInfo.thumbnailName),
                        e[g].senderId != d ? (e[g]._view.otherUserWithImg = 1,
                        b.getUserById(e[g].senderId) ? e[g]._view._user = b.getUserById(e[g].senderId) : b.getInaccessibleUserById(e[g].senderId) ? e[g]._view._user = b.getInaccessibleUserById(e[g].senderId) : (e[g]._view._user = c.participants[e[g].senderId],
                        e[g]._view._user.displayName = e[g]._view._user.name)) : e[g].senderId == d && (e[g]._view.otherUserWithImg = 0,
                        e[g]._view.thisUserWithoutImg = 1),
                        e[g]._view.time = a.getTimeFormatHmma(e[g].getTimestamp()),
                        e[g - 1]) {
                            if (e[g].senderId != e[g - 1].senderId && (e[g]._view.showUserName = 1),
                            e[g - 1].senderId != e[g].senderId && e[g - 1].senderId != d && (e[g - 1]._view.showUserName = 1,
                            e[g]._view.showUserName = 1),
                            e[g - 1].senderId == e[g].senderId && e[g].senderId != d && (e[g]._view.otherUserWithImg = 0,
                            e[g]._view.otherUserWithoutImg = 1,
                            e[g]._view.showUserName = 1,
                            e[g - 1]._view.showUserName = 0),
                            e[g - 1].type != f.chatsdk.MessageType.MESSAGE && e[g - 1].senderId != d && e[g].senderId != d && (e[g]._view.otherUserWithImg = 1,
                            e[g]._view.otherUserWithoutImg = 0),
                            a.isDayDiff(e[g].getTimestamp(), e[g - 1].getTimestamp())) {
                                e[g]._view.showDate = 1,
                                e[g]._view.dateToShow = a.dateSeparatorFromCurrentTime(e[g].getTimestamp());
                                for (var h = 0, i = g - 1; i > -1; i--) {
                                    if (2 == h) {
                                        h = 0;
                                        break
                                    }
                                    1 == e[i]._view.showDate && (e[i]._view.dateToShow = a.dateSeparatorFromCurrentTime(e[i].getTimestamp()),
                                    h++)
                                }
                            }
                        } else
                            e[g]._view.showDate = 1,
                            e[g]._view.dateToShow = a.dateSeparatorFromCurrentTime(e[g].getTimestamp());
                    for (var g = e.length - 1; g > -1; g--)
                        e[g]._view && (e[g].getSequenceNumber() == c.getOtherParticipant().lastSeenMessageSequenceNumber ? e[g]._view.seen = 1 : 1 == e[g]._view.seen && e[g].getSequenceNumber() != c.getOtherParticipant().lastSeenMessageSequenceNumber && (e[g]._view.seen = 0))
                } else if (e[g].type == f.chatsdk.MessageType.LEFT) {
                    if (e[g].senderId == d)
                        e[g]._view = {
                            invite: 1,
                            messageToDisplay: "You have left this chat. "
                        };
                    else {
                        var j = " ";
                        j = b.getUserById(e[g].senderId) ? b.getUserById(e[g].senderId).getDisplayName() : b.getInaccessibleUserById(e[g].senderId) ? b.getInaccessibleUserById(e[g].senderId).getDisplayName() : c.participants[e[g].senderId].name,
                        e[g]._view = {
                            left: 1,
                            messageToDisplay: j + " has left this chat."
                        }
                    }
                    e[g - 1] && a.isDayDiff(e[g].getTimestamp(), e[g - 1].getTimestamp()) && (e[g]._view.showDate = 1,
                    e[g]._view.dateToShow = a.dateSeparatorFromCurrentTime(e[g].getTimestamp()))
                } else if (e[g].type == f.chatsdk.MessageType.INVITE) {
                    if (e[g].senderId == d) {
                        var k = e[g].invitees[e[g].messageText];
                        e[g]._view = {
                            invite: 1,
                            messageToDisplay: "You have invited " + k
                        }
                    } else {
                        var l = "";
                        l = b.getUserById(e[g].senderId) ? b.getUserById(e[g].senderId).getDisplayName() : b.getInaccessibleUserById(e[g].senderId) ? b.getInaccessibleUserById(e[g].senderId).getDisplayName() : c.participants[e[g].senderId].name;
                        var k = e[g].invitees[e[g].messageText];
                        e[g].messageText == d && (k = "You"),
                        e[g]._view = {
                            invite: 1,
                            messageToDisplay: l + " has invited " + k
                        }
                    }
                    e[g - 1] && a.isDayDiff(e[g].getTimestamp(), e[g - 1].getTimestamp()) && (e[g]._view.showDate = 1,
                    e[g]._view.dateToShow = a.dateSeparatorFromCurrentTime(e[g].getTimestamp()))
                }
                return e
            },
            updateTimeStamp: function(b, c) {
                for (var d = b.length - 1; d > -1; d--)
                    if (b[d]._view && c.messageId == b[d].messageId) {
                        b[d]._view.time = a.getTimeFormatHmma(b[d].getTimestamp());
                        break
                    }
                return b
            },
            renderLast20: function(c, d, e, g, h) {
                var i, j = 21;
                i = h ? c.searchInfo.messages : c.messages,
                i.length < j && (j = i.length),
                g && (j = i.length);
                for (var k = j - 1; k > -1; k--)
                    i[k]._view = {
                        otherUserWithImg: 0,
                        otherUserWithoutImg: 0,
                        thisUserWithImg: 0,
                        thisUserWithoutImg: 0,
                        _user: null ,
                        showUserName: 0,
                        time: 0,
                        showDate: 0,
                        dateToShow: null ,
                        seen: 0,
                        left: 0,
                        invite: 0,
                        messageToDisplay: null ,
                        messageText: null 
                    };
                for (var k = j - 1; k > -1; k--)
                    if (i[k].type == f.chatsdk.MessageType.MESSAGE)
                        i[k]._view.messageText = i[k].messageText.replace(/\n/gi, "<br>"),
                        i[k].fileInfo && i[k].fileInfo.fileId && (i[k].fileInfo.ver = 3,
                        i[k].fileInfo.thumbnail_name = i[k].fileInfo.thumbnailName),
                        i[k].senderId == d ? (i[k]._view.thisUserWithoutImg = 1,
                        i[k - 1] && i[k - 1].senderId != d && (i[k - 1]._view.showUserName = 1)) : i[k].senderId != d && (i[k]._view.otherUserWithImg = 1,
                        b.getUserById(i[k].senderId) ? (i[k]._view._user = b.getUserById(i[k].senderId),
                        i[k]._view._user.displayName = i[k]._view._user.getDisplayName()) : b.getInaccessibleUserById(i[k].senderId) ? (i[k]._view._user = b.getInaccessibleUserById(i[k].senderId),
                        i[k]._view._user.displayName = i[k]._view._user.getDisplayName()) : (i[k]._view._user = c.participants[i[k].senderId],
                        i[k]._view._user.displayName = i[k]._view._user.name),
                        i[k - 1] && (i[k - 1].senderId == i[k].senderId && (i[k]._view.otherUserWithImg = 0,
                        i[k]._view.otherUserWithoutImg = 1),
                        i[k - 1].senderId != i[k].senderId && i[k - 1].senderId != d && (i[k - 1]._view.showUserName = 1),
                        i[k - 1].type != f.chatsdk.MessageType.MESSAGE && i[k - 1].senderId != d && (i[k]._view.otherUserWithImg = 1,
                        i[k]._view.otherUserWithoutImg = 0,
                        i[k + 1] && i[k + 1].senderId == i[k].senderId ? i[k]._view.showUserName = 0 : i[k]._view.showUserName = 1),
                        i[k + 1] && i[k + 1].type != f.chatsdk.MessageType.MESSAGE && (i[k]._view.showUserName = 1)),
                        i[k + 1] || i[k].senderId == d || (i[k]._view.showUserName = 1)),
                        i[k]._view.time = a.getTimeFormatHmma(i[k].getTimestamp()),
                        i[k - 1] ? (a.isDayDiff(i[k].getTimestamp(), i[k - 1].getTimestamp()) && (i[k]._view.showDate = 1,
                        i[k]._view.dateToShow = a.dateSeparatorFromCurrentTime(i[k].getTimestamp())),
                        h && i[k].getSequenceNumber() - i[k - 1].getSequenceNumber() > 1 && (i[k]._view.showLoadMoreMessages = !0,
                        i[k]._view.fromSeqNo = i[k - 1].getSequenceNumber() + 1,
                        i[k]._view.toSeqNo = i[k].getSequenceNumber() - 1)) : (i[k]._view.showDate = 1,
                        i[k]._view.dateToShow = a.dateSeparatorFromCurrentTime(i[k].getTimestamp())),
                        i[k].getSequenceNumber() == e ? i[k]._view.seen = 1 : 1 == i[k]._view.seen && i[k].getSequenceNumber() != e && (i[k]._view.seen = 0);
                    else if (i[k].type == f.chatsdk.MessageType.INVITE) {
                        if (i[k].senderId == d) {
                            var l = i[k].messageText.split(",")
                              , m = "";
                            m += i[k].invitees[l[0]],
                            l[0] == d && (m = "You"),
                            l.length > 1 && (m += " and " + (l.length - 1) + " others"),
                            i[k]._view = {
                                invite: 1,
                                messageToDisplay: "You have invited " + m
                            }
                        } else {
                            var n = " ";
                            n = b.getUserById(i[k].senderId) ? b.getUserById(i[k].senderId).getDisplayName() : b.getInaccessibleUserById(i[k].senderId) ? b.getInaccessibleUserById(i[k].senderId).getDisplayName() : c.participants[i[k].senderId].name;
                            var l = i[k].messageText.split(",")
                              , m = "";
                            m += l[0] == d ? "You" : i[k].invitees[l[0]],
                            l.length > 1 && (m += " and " + (l.length - 1) + " others"),
                            i[k]._view = {
                                invite: 1,
                                messageToDisplay: n + " has invited " + m
                            }
                        }
                        i[k - 1] && a.isDayDiff(i[k].getTimestamp(), i[k - 1].getTimestamp()) && (i[k]._view.showDate = 1,
                        i[k]._view.dateToShow = a.dateSeparatorFromCurrentTime(i[k].getTimestamp()))
                    } else if (i[k].type == f.chatsdk.MessageType.LEFT) {
                        var o = " ";
                        d == i[k].senderId ? (o = "You",
                        i[k]._view = {
                            left: 1,
                            messageToDisplay: o + " have left this chat."
                        }) : (o = b.getUserById(i[k].senderId) ? b.getUserById(i[k].senderId).getDisplayName() : b.getInaccessibleUserById(i[k].senderId) ? b.getInaccessibleUserById(i[k].senderId).getDisplayName() : c.participants[i[k].senderId].name,
                        i[k]._view = {
                            left: 1,
                            messageToDisplay: o + " has left this chat."
                        }),
                        i[k - 1] && a.isDayDiff(i[k].getTimestamp(), i[k - 1].getTimestamp()) && (i[k]._view.showDate = 1,
                        i[k]._view.dateToShow = a.dateSeparatorFromCurrentTime(i[k].getTimestamp()))
                    }
                return i
            },
            renderSeen: function(a, b, c) {
                for (var d = a.length - 1; d > -1; d--)
                    a[d]._view && (a[d].getSequenceNumber() == c ? a[d]._view.seen = 1 : 1 == a[d]._view.seen && a[d].getSequenceNumber() != c && (a[d]._view.seen = 0));
                return a
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvChatManager", ["$compile", "utils", "chatManager", "UserProfileImage", "chatUsersManager", "msgListRenderer", "desktopNotificationsService", "chatService", "localStore", "appStateInfo", "appTitleManager", "userInfo", "appTabs", "settingsService", "mixpanelService", "config", "logger", function(b, d, e, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
        return {
            link: function(r, u, v) {
                function w() {
                    if (r.windWidth != a.innerWidth && a.innerWidth > 700)
                        if (r.windWidth = a.innerWidth,
                        r.isLoadedFromLocalStore)
                            r.isLoadedFromLocalStore = !1;
                        else {
                            var b, c = r.windWidth - r.newWindowPosFrmBuddyList - 30;
                            if (r.dockedWind.length ? r.dockedWind.length > 1 ? (b = parseInt(r.multiDockPos.substring(0, r.multiDockPos.length - 2)) + 70,
                            c -= 70) : 1 == r.dockedWind.length && (b = parseInt(r.dockedWind[r.dockedWind.length - 1].xPosition.substring(0, r.dockedWind[r.dockedWind.length - 1].xPosition.length - 2)) + 342,
                            c -= 35) : r.chatWindows.length && !r.dockedWind.length && (b = parseInt(r.chatWindows[r.chatWindows.length - 1].xPosition.substring(0, r.chatWindows[r.chatWindows.length - 1].xPosition.length - 2)) + r.chatWindowDefaultSize + r.spaceInWindows),
                            b) {
                                c -= 20;
                                var d = parseInt(c / r.chatWindowDefaultSize);
                                r.chatWindows.length > d && (r.isDockingNeeded(b + 20) && K(d * (r.chatWindowDefaultSize + r.spaceInWindows) + r.newWindowPosFrmBuddyList, !0),
                                L()),
                                r.chatWindows.length < d && r.dockedWind.length && (H(),
                                J())
                            }
                        }
                    if (r.windHeight != r.getVisibleBrowserHeight())
                        if (r.windHeight < r.getVisibleBrowserHeight())
                            r.windHeight = r.getVisibleBrowserHeight();
                        else if (r.windHeight > r.getVisibleBrowserHeight() && r.getVisibleBrowserHeight() > r.chatDefaultHeight && (r.windHeight = r.getVisibleBrowserHeight(),
                        r.getVisibleBrowserHeight() > r.chatDefaultHeight)) {
                            for (var e = 0; e < r.chatWindows.length; e++)
                                $("#" + r.chatWindows[e].id).height() > r.getVisibleBrowserHeight() && $("#" + r.chatWindows[e].id).height(r.getVisibleBrowserHeight());
                            $("#chatUserListMainWindow").height() > r.getVisibleBrowserHeight() && $("#chatUserListMainWindow").height(r.getVisibleBrowserHeight()),
                            r.saveHistoryInLocalStore()
                        }
                }
                function x(a) {
                    for (var b = 0; b < r.chatWindows.length; b++)
                        r.chatWindows[b].childScope.$destroy(),
                        $("#" + r.chatWindows[b].id).parent().remove(),
                        r.$broadcast("render");
                    r.chatWindows = [];
                    for (var b = 0; b < r.dockedWind.length; b++)
                        r.dockedWind[b].childScope.$destroy(),
                        $("#" + r.dockedWind[b].id).parent().remove(),
                        r.$broadcast("render");
                    r.dockedWind = [],
                    r.saveHistoryInLocalStore(),
                    r.$broadcast("render")
                }
                if (r.chatWindows = [],
                r.dockedWind = [],
                r.chatAlreadyOpened = 0,
                r.chatWindowDefaultSize = 300,
                r.chatDefaultHeight = 349,
                r.buddyListWidth = 260,
                r.maxWindowHeight = a.innerHeight - 59,
                r.newWindowPosFrmBuddyList = r.buddyListWidth + 20,
                r.spaceInWindows = 6,
                r.windHeight = r.getVisibleBrowserHeight(),
                r.tabId = d.generateUniqueId(),
                r.appInFoucs = !0,
                a.Audio) {
                    var y = new Audio("assets/sounds/chat_audio." + (s.IS_NATIVE ? "wav" : "mp3"));
                    s.on("clientTypeUpdated", function() {
                        y = new Audio("assets/sounds/chat_audio." + (s.IS_NATIVE ? "wav" : "mp3"))
                    })
                }
                r.chatsToBlinkInTab = [];
                var z = "chatsHistory"
                  , A = 4;
                r.chatHistory = [],
                r.localStoreLoaded = !1,
                r.currentFocusedChatWindow = {
                    chatWindScope: null 
                },
                r.$on("openCachedChats", function() {
                    var a = l.readData(z);
                    if (a && a.version == A - 1 && l.writeData(z, [], A - 1),
                    a && a.version == A ? r.chatHistory = a.data : r.chatHistory = [],
                    r.chatHistory.length) {
                        console.log("==total count of local store" + r.chatHistory.length),
                        r.isLoadedFromLocalStore = !0;
                        for (var b = 0; b < r.chatHistory.length; b++)
                            if (r.chatHistory[b].chatId || "chatList" != r.chatHistory[b].name) {
                                var c = e.getChat(r.chatHistory[b].chatId);
                                c ? (console.log("==opening chat from getchat " + c.getTitle() + " " + r.chatHistory[b].isMinimized + " " + r.chatHistory[b].isDocked + " " + r.chatHistory[b].height),
                                c.chatType == f.chatsdk.ChatType.P2P && (h.getUserById(c.getOtherParticipant(c.thisUser.userId).userId) ? c._user = h.getUserById(c.getOtherParticipant(c.thisUser.userId).userId) : h.getInaccessibleUserById(c.getOtherParticipant(c.thisUser.userId).userId) && (c._user = h.getInaccessibleUserById(c.getOtherParticipant(c.thisUser.userId).userId))),
                                r.$broadcast("opeNewChatWindow", c, !0, {
                                    isMinimized: r.chatHistory[b].isMinimized,
                                    isDocked: r.chatHistory[b].isDocked
                                }, !1, !1, r.chatHistory[b].height)) : (console.log("==opening chat from openchatfromId " + r.chatHistory[b].isMinimized + " " + r.chatHistory[b].isDocked + " " + r.chatHistory[b].height),
                                e.openChatFromId(r.chatHistory[b].chatId, r.chatHistory[b].chatType, null , r.chatHistory[b].chatParticipants, {
                                    fromLocalStore: !0,
                                    isMinimized: r.chatHistory[b].isMinimized,
                                    isDocked: r.chatHistory[b].isDocked,
                                    height: r.chatHistory[b].height
                                }))
                            } else
                                r.chatHistory[b].isMinimized || r.$broadcast("maxChatList", r.chatHistory[b].height)
                    }
                    r.localStoreLoaded = !0
                }),
                r.$on("userManagerConnected", function() {
                    r.$broadcast("render"),
                    r.$broadcast("refreshImage")
                }),
                r.thisUser = h.getThisUser(),
                k.init(function(a, b) {
                    if (a) {
                        var d = e.startChatWithUser(a);
                        d._user = a,
                        r.$broadcast("opeNewChatWindow", d, c, c, c, c, c, b)
                    }
                }, function(a, b) {
                    a && r.$broadcast("opeNewChatWindow", a, c, c, c, c, c, b),
                    b && r.$emit("videoPlayback:MinimizeVideo")
                }, function(a) {
                    if (a) {
                        var b = h.getUserById(a)
                          , c = e.startChatWithUser(b);
                        c._user = b,
                        r.$broadcast("opeNewChatWindow", c)
                    }
                }, function(a, b, c, d) {
                    e.openChatFromId(a, b, c, d)
                }, function(a, b, c, d, f) {
                    e.openChatInSearch(a, b, c, null , d, f),
                    r.searchMatcingInfo = d
                }, function(a) {
                    e.chatSearchResultsReceived(a)
                });
                var B = function(a) {
                    r.$broadcast("render_date");
                    var b = a.chat
                      , c = a.message;
                    r.chatAlreadyOpened = !1,
                    b.chatType != f.chatsdk.ChatType.P2P || b.hasOwnProperty("_user") || (b._user = h.getUserById(b.getOtherParticipant(b.thisUser.userId).userId));
                    for (var d = 0; d < r.chatWindows.length; d++)
                        if (b.chatId == r.chatWindows[d].chatId) {
                            r.chatAlreadyOpened = !0;
                            break
                        }
                    for (var d = 0; d < r.dockedWind.length; d++)
                        if (b.chatId == r.dockedWind[d].chatId) {
                            r.chatAlreadyOpened = !0;
                            break
                        }
                    if (!r.chatAlreadyOpened && !c.skipNotification)
                        if (b.isMuted)
                            r.$broadcast("render");
                        else if (r.localStoreLoaded) {
                            var b = a.chat
                              , c = a.message;
                            e.chatOpened(b);
                            var g = r.$new();
                            C(b, g, !0, !1)
                        } else {
                            var i = l.readData(z);
                            if (i && i.version == A - 1 && l.writeData(z, [], A - 1),
                            i && i.version == A && (r.chatHistory = i.data,
                            r.chatHistory.length)) {
                                for (var k, d = 1; d < r.chatHistory.length; d++)
                                    if (r.chatHistory[d].chatId == b.chatId) {
                                        k = !0;
                                        break
                                    }
                                if (!k) {
                                    var s = {};
                                    s.chatId = b.chatId,
                                    s.isMinimized = !1,
                                    s.name = b.getTitle(),
                                    s.chatType = b.chatType,
                                    s.chatParticipants = _.values(b.participants),
                                    r.chatHistory.splice(1, 0, s),
                                    l.writeData(z, r.chatHistory, A)
                                }
                            }
                        }
                    if (!b.isMuted && b.participants[b.thisUser.userId].lastSeenMessageSequenceNumber < a.message._sequenceNumber && j.showChatNotification(b),
                    q.getChatSettings().then(function(d) {
                        d.play_sound_on_notification && q.isBitONOFF(parseInt(d.play_sound_on_notification), q.DESKTOP) && b.participants[c.senderId].userId != o.user_id && !b.isMuted && p.isThisTabLastActiveTab() && !a.message.skipNotification && a.message.type == f.chatsdk.MessageType.MESSAGE && y && y.play()
                    }),
                    b.participants[c.senderId].userId != o.user_id && !b.isMuted && b.participants[b.thisUser.userId].lastSeenMessageSequenceNumber < a.message._sequenceNumber) {
                        var t = b.participants[c.senderId].name.split(" ")[0] + " says...";
                        if (!m.appHasFocus() || !m.isAppActivated() || m.isAppInShortIdleState())
                            if (_.findWhere(r.chatsToBlinkInTab, {
                                chatObj: b
                            })) {
                                var u = _.indexOf(r.chatsToBlinkInTab, _.findWhere(r.chatsToBlinkInTab, {
                                    chatObj: b
                                }));
                                _.contains(r.chatsToBlinkInTab[u].titles, t) || r.chatsToBlinkInTab[u].titles.push(t)
                            } else
                                r.chatsToBlinkInTab.push({
                                    chatObj: b,
                                    titles: [t]
                                });
                        n.toggleAppTitleWith(t)
                    }
                }
                ;
                e.addListener(f.chatsdk.ChatEvents.MESSAGE_RECEIVED, B),
                r.$on("opeNewChatWindow", function(a, b, c, d, g, i, j, k) {
                    var l = Date.now();
                    console.log("-->PREF:UI OpenChat Start: " + l);
                    var m;
                    if (!b._user && b.chatType == f.chatsdk.ChatType.P2P)
                        for (var n in b.participants)
                            b.thisUser.userId != n && (b._user = h.getUserById(n));
                    i || c || !k && !r.appInFoucs || (console.log("^^^^emiting open"),
                    p.dispatchTabsEvent2("openChatWindow", {
                        tabId: r.tabId,
                        chatId: b.chatId,
                        chatType: b.chatType,
                        users: b.participants,
                        user: m
                    })),
                    r.chatAlreadyOpened = !1;
                    for (var o = 0; o < r.chatWindows.length; o++)
                        if (b.chatId == r.chatWindows[o].chatId) {
                            r.chatAlreadyOpened = !0;
                            break
                        }
                    for (var o = 0; o < r.dockedWind.length; o++)
                        if (b.chatId == r.dockedWind[o].chatId) {
                            r.chatAlreadyOpened = !0;
                            break
                        }
                    if (r.chatAlreadyOpened) {
                        for (var q = !1, o = 0; o < r.chatWindows.length; o++)
                            if (b.chatId == r.chatWindows[o].chatId) {
                                r.$broadcast("maxChatWin", r.chatWindows[o].id, !0, g),
                                q = !0;
                                break
                            }
                        if (r.dockedWind.length && !q) {
                            for (var s = r.chatWindows.pop(), o = 0; o < r.dockedWind.length; o++)
                                if (r.dockedWind[o].chatId == b.chatId) {
                                    r.dockedWind[o].isActive || (e.chatOpened(r.dockedWind[o].childScope.chatObj),
                                    r.dockedWind[o].isActive = !0),
                                    s.xPosition != r.dockedWind[o].xPosition && (r.dockedWind[o].xPosition = s.xPosition,
                                    r.dockedWind[o].childScope.xPosition = s.childScope.xPosition);
                                    var t = s.xPosition;
                                    if (t = parseInt(t.substring(0, t.length - 2)),
                                    r.isDockingNeeded(t + r.chatWindowDefaultSize) && Math.ceil($("#" + s.id).width()) < r.chatWindowDefaultSize) {
                                        $("#" + s.id).parent().hide(),
                                        r.chatWindows.splice(r.chatWindows.length - 1, 0, r.dockedWind[o]);
                                        var u = r.dockedWind[o].id;
                                        r.dockedWind.splice(o, 1),
                                        r.dockedWind.push(s),
                                        $("#" + u).parent().show(),
                                        r.$broadcast("maxChatWin", u, !0, g)
                                    } else
                                        $("#" + s.id).parent().hide(),
                                        r.chatWindows.push(r.dockedWind[o]),
                                        r.dockedWind.splice(o, 1),
                                        r.dockedWind.push(s),
                                        $("#" + r.chatWindows[r.chatWindows.length - 1].id).parent().show(),
                                        r.$broadcast("maxChatWin", r.chatWindows[r.chatWindows.length - 1].id, !0, g);
                                    var v = r.chatWindows[r.chatWindows.length - 1].xPosition;
                                    v = parseInt(v.substring(0, v.length - 2)),
                                    J(v + $("#" + r.chatWindows[r.chatWindows.length - 1].id).width() + r.spaceInWindows, !0);
                                    break
                                }
                            r.$broadcast("unReadCountChanged"),
                            r.$broadcast("render")
                        }
                    } else {
                        r.chatManagerConnected && e.chatOpened(b);
                        var w = r.$new();
                        C(b, w, !1, c, d, g, j, i)
                    }
                    console.log("-->PREF:UI OpenChat End: " + Date.now() + " delta " + (Date.now() - l))
                });
                var C = function(a, c, d, j, l, m, n, o) {
                    var p = Date.now();
                    console.log("-->PREF:UI OpenChat making UI Start: " + p),
                    c.chatId = "c" + a.chatId,
                    c.msgWinId = "m" + a.chatId,
                    c.tabId = r.tabId,
                    n && (c.verticalHeight = n),
                    c.xPosition || (c.xPosition = r.newWindowPosFrmBuddyList + "px"),
                    t.logLocally_errorOnServer("cnvChatManager.openChatWindow : chatID : " + a.chatId + " messagesCount : " + a.messages.length),
                    _.keys(a.participants).length > 0 && a.messages.length > 0 && (a.messages = i.renderLast20(a, a.thisUser.userId, a.getOtherParticipant().lastSeenMessageSequenceNumber, !0)),
                    _.keys(a.participants).length > 0 && m && (a.searchInfo.messages = i.renderLast20(a, a.thisUser.userId, a.getOtherParticipant().lastSeenMessageSequenceNumber, !0, !0)),
                    _.keys(a.participants).length > 0 && k.isAdminModeON() && (console.log("-->CnvChatManager.disabling chat on admin mode on and this user is not in chat participants."),
                    c.disabledChat = !0,
                    r.$broadcast("changeChatOptions")),
                    _.keys(a.participants).length > 0 && !k.isAdminModeON() && a.participants[a.thisUser.userId].status == f.chatsdk.ParticipantStatus.LEFT && (console.log("-->CnvChatManager.disabling chat (LEFT)."),
                    c.disabledChat = !0,
                    r.$broadcast("changeChatOptions")),
                    _.keys(a.participants).length > 0 && !k.isAdminModeON() && !h.getUserById(a.getOtherParticipant().userId) && a.chatType == f.chatsdk.ChatType.P2P && (console.log("-->ChatSDKUI:CnvChatManager.disabling P2P chat (P2P) " + h.getUserById(a.getOtherParticipant().userId)),
                    console.log(a),
                    c.disabledChat = !0,
                    r.$broadcast("changeChatOptions")),
                    0 === _.keys(a.participants).length && m && (console.log("-->CnvChatManager.disabling chat (SEARCH)"),
                    c.disabledChat = !0,
                    c.disableChatSearchControls = !0,
                    r.$broadcast("changeChatOptions")),
                    c.chatObj = a,
                    a.unreadCount > 0 && (c.hasUnread = !0),
                    c.isMinimized = !1,
                    c.isSearch = m,
                    c.scrollToBot = !0,
                    d || j ? c.openedFromUserAction = !1 : (c.isChatWindowFocused = !0,
                    c.openedFromUserAction = !0),
                    o ? c.fromOtherTab = !0 : c.fromOtherTab = !1,
                    c.imgSize = g.PROFILE_IMAGE_SIZE_32x32;
                    var q = [];
                    q.id = c.chatId,
                    q.msgWinId = c.msgWinId,
                    q.xPosition = c.xPosition,
                    q.chatId = a.chatId,
                    l ? (q.isMinimized = l.isMinimized,
                    q.isDocked = l.isDocked) : (q.isMinimized = !1,
                    q.isDocked = !1),
                    q.childScope = c;
                    var s = {};
                    if (j)
                        q.isDocked ? (q.childScope.scrollToBot = !0,
                        r.dockedWind.push(q)) : r.chatWindows.push(q);
                    else {
                        s.chatId = a.chatId,
                        s.isMinimized = !1,
                        s.name = a.getTitle();
                        var v = -1;
                        if (r.chatWindows.length)
                            for (var w = r.chatWindows.length - 1; w >= 0 && !(Math.ceil($("#" + r.chatWindows[w].childScope.chatId).width()) + 5 >= r.chatWindowDefaultSize); w--)
                                v = w;
                        if (v > -1) {
                            var x = r.chatWindows[v].xPosition;
                            x = parseInt(x.substring(0, x.length - 2)),
                            r.chatWindows.splice(v, 0, q)
                        } else if (r.chatWindows.length) {
                            var x = r.chatWindows[r.chatWindows.length - 1].xPosition;
                            if (x = parseInt(x.substring(0, x.length - 2)),
                            r.$broadcast("isWindInFocus", r.chatWindows[r.chatWindows.length - 1].chatId),
                            r.chatWindows[r.chatWindows.length - 1].childScope.isChatWindowFocused && !j && d && r.isDockingNeeded(x + r.chatWindowDefaultSize)) {
                                q.childScope.dntShow = !0,
                                r.chatWindows.push(q);
                                var y = r.chatWindows[r.chatWindows.length - 1].chatId;
                                setTimeout(function() {
                                    r.$broadcast("setWindInFocus", y)
                                }, 1e3)
                            } else
                                r.isDockingNeeded(x + r.chatWindowDefaultSize) ? r.chatWindows.splice(r.chatWindows.length - 1, 0, q) : r.chatWindows.push(q)
                        } else
                            r.chatWindows.push(q)
                    }
                    var z = b("<div ng-include=\"'chat/client/chatWindow/templates/chatWindow.tpl.html'\"></div>")(c);
                    d ? $(z).insertAfter(u.find(".multipleDockedWind")) : u.append(z),
                    r.$$phase || r.$digest(),
                    l && l.isMinimized && c.$broadcast("miniChatWin", c.chatId),
                    r.resetWindowsPosition(),
                    r.$broadcast("render"),
                    d || j || l || a.unreadCount > 0 && (e.chatRead(a),
                    r.$broadcast("setWindInFocus", c.chatObj.chatId)),
                    n && !l.isMinimized && (n < r.chatDefaultHeight && (n = r.chatDefaultHeight),
                    r.$broadcast("maxChatWin", q.id),
                    c.verticalHeight = n,
                    $("#" + c.chatId).height(n)),
                    c.showNewMessageBar = !1,
                    $("#" + c.chatId).find(".newMsgReceived").hide(),
                    r.$broadcast("render"),
                    setTimeout(function() {
                        $("#" + c.msgWinId).scrollTop($("#" + c.msgWinId).prop("scrollHeight")),
                        $("#" + c.msgWinId).perfectScrollbar({
                            suppressScrollX: !0
                        })
                    }, 0),
                    j || o || r.saveHistoryInLocalStore(),
                    console.log("-->PREF:UI OpenChat making UI End: " + Date.now() + " delta " + (Date.now() - p))
                }
                ;
                r.$on("returnIsFocus", function(a, b, c) {
                    for (var d = 0; d < r.chatWindows.length; d++)
                        r.chatWindows[d].chatId == b ? r.chatWindows[d].childScope.isChatWindowFocused = c : r.chatWindows[d].childScope.isChatWindowFocused = !1
                }),
                r.onCloseChatWindow = function(a, b, c, e) {
                    var f = Date.now();
                    if (console.log("-->PREF:UI CloseChat Start: " + f),
                    e || p.dispatchTabsEvent2("closeChatWindow", {
                        tabId: r.tabId,
                        chatId: b,
                        closingDockedChat: c
                    }),
                    c) {
                        var g;
                        r.chatWindows.length ? (g = r.chatWindows[r.chatWindows.length - 1].xPosition,
                        g = parseInt(g.substring(0, g.length - 2))) : g = r.newWindowPosFrmBuddyList;
                        for (var h = 0; h < r.dockedWind.length; h++)
                            r.dockedWind[h].id == b && (r.chatWindows.push(r.dockedWind[h]),
                            r.dockedWind.splice(h, 1));
                        J(g),
                        r.$broadcast("render")
                    } else
                        r.dockedWind.length && H();
                    for (var h = 0; h < r.chatWindows.length; h++)
                        if (r.chatWindows[h].id == b) {
                            r.$broadcast("isWindInFocus", r.chatWindows[h].chatId),
                            r.chatWindows[h].childScope.isChatWindowFocused && setTimeout(function() {
                                r.chatWindows[r.chatWindows.length - 1] && r.$broadcast("setWindInFocus", r.chatWindows[r.chatWindows.length - 1].chatId)
                            }, 100),
                            r.chatWindows[h].childScope.$destroy(),
                            r.chatWindows.splice(h, 1);
                            break
                        }
                    $("#" + b).parent().remove(),
                    r.resetWindowsPosition(),
                    r.$broadcast("render"),
                    e || r.saveHistoryInLocalStore(),
                    console.log("-->PREF:UI CloseChat End: " + Date.now() + " delta " + (Date.now() - f)),
                    setTimeout(function() {
                        d.fireEvent(document.body, "mouseup")
                    }, 0);
                    var a = new Event("recalculateAutocompletePosition");
                    document.dispatchEvent(a)
                }
                ,
                r.$on("closeChatWindow", r.onCloseChatWindow),
                r.$on("presenceChanged", function(a, b, c) {
                    if (r.$broadcast("render"),
                    b)
                        for (var d = 0; d < b.length; d++)
                            b[d].userId == r.thisUser.userId && (r.thisUserStatus = b[d].presenceStatus,
                            r.$broadcast("updateSettingsStatus", b[d].presenceStatus));
                    ("UPDATED" === c || "CONNECTED" === c) && j.showUserStatusNotifications(b)
                }),
                r.$on("$destroy", function() {
                    e.removeListener(f.chatsdk.ChatEvents.MESSAGE_RECEIVED, B),
                    o.off("userInfo:adminModeChanged", x)
                }),
                r.usersCount = 20;
                var D, E = function() {
                    for (var a = 0, b = !1, c = 0; c < r.dockedWind.length; c++)
                        a += r.dockedWind[c].childScope.chatObj.unreadCount,
                        !r.dockedWind[c].childScope.chatObj.isMuted && r.dockedWind[c].childScope.chatObj.unreadCount > 0 && (b = !0);
                    a > 0 && b ? u.find(".multipleDockedWind").css("background", "#025b7e") : 0 === a && (r.blink(u.find(".multipleDockedWind"), 0, 0),
                    u.find(".multipleDockedWind").css("background", "#2b2b2b")),
                    r.unreadCounts = a
                }
                ;
                r.$on("unReadCountChanged", function(a, b) {
                    for (var c = 0, d = !1, e = !1, f = !1, g = 0; g < r.dockedWind.length; g++)
                        c += r.dockedWind[g].childScope.chatObj.unreadCount,
                        !r.dockedWind[g].childScope.chatObj.isMuted && r.dockedWind[g].childScope.chatObj.unreadCount > 0 && (f = !0),
                        b == r.dockedWind[g].childScope.chatObj.chatId && (d = r.dockedWind[g].childScope.chatObj.isMuted,
                        e = !0,
                        r.dockedWind[g].childScope.chatObj.unreadCount > 0 && (D = r.dockedWind[g],
                        r.dockedWind.splice(g, 1),
                        r.dockedWind.push(D),
                        J(),
                        r.saveHistoryInLocalStore()));
                    for (var h = 0; h < r.chatsToBlinkInTab.length; h++)
                        if (0 == r.chatsToBlinkInTab[h].chatObj.unreadCount) {
                            n.clearToggleTitle(r.chatsToBlinkInTab[h].titles),
                            r.chatsToBlinkInTab.splice(h, 1);
                            for (var h = 0; h < r.chatsToBlinkInTab.length; h++)
                                r.chatsToBlinkInTab[h].chatObj.unreadCount > 0 && n.toggleAppTitleWithTitles(r.chatsToBlinkInTab[h].titles);
                            break
                        }
                    c > 0 && e ? d ? u.find(".multipleDockedWind").css("background", "#2b2b2b") : r.blink(u.find(".multipleDockedWind"), 7, 800) : 0 !== c && f || (r.blink(u.find(".multipleDockedWind"), 0, 0),
                    u.find(".multipleDockedWind").css("background", "")),
                    r.unreadCounts = c,
                    r.$broadcast("render")
                });
                var F;
                r.blink = function(a, b, c) {
                    (b > 0 || 0 > b) && ("rgb(2, 91, 126)" == $(a).css("background-color") ? $(a).css("background", "#389dcc") : $(a).css("background", "#025b7e")),
                    F && clearTimeout(F),
                    (b > 0 || 0 > b) && (F = setTimeout(function() {
                        r.blink(a, b, c)
                    }, c),
                    b -= 1)
                }
                ,
                r.$on("saveMinimizedHistory", function(a, b, c) {
                    for (var d = 0; d < r.chatWindows.length; d++)
                        if (r.chatWindows[d].childScope.chatObj.chatId == b) {
                            r.chatWindows[d].isMinimized = c;
                            break
                        }
                    r.saveHistoryInLocalStore()
                }),
                r.$on("saveHistoryLS", function() {
                    r.saveHistoryInLocalStore()
                }),
                r.saveHistoryInLocalStore = function() {
                    if (p.isThisTabLastActiveTab()) {
                        r.chatHistory = [];
                        var a = {};
                        if (a.name = "chatList",
                        a.height = Math.ceil($("#chatUserListMainWindow").height()) + 1,
                        Math.ceil($("#chatUserListMainWindow").height()) < r.chatDefaultHeight ? a.isMinimized = !0 : a.isMinimized = !1,
                        r.chatHistory.push(a),
                        r.chatWindows.length)
                            for (var b = 0; b < r.chatWindows.length; b++)
                                if (!k.isAdminModeON()) {
                                    var c = {};
                                    c.chatId = r.chatWindows[b].childScope.chatObj.chatId,
                                    $("#" + r.chatWindows[b].childScope.chatId).width() && (r.chatWindows[b].isMinimized || Math.ceil($("#" + r.chatWindows[b].childScope.chatId).height()) < r.chatDefaultHeight) ? c.isMinimized = !0 : c.isMinimized = !1,
                                    c.name = r.chatWindows[b].childScope.chatObj.getTitle(),
                                    c.chatType = r.chatWindows[b].childScope.chatObj.chatType,
                                    c.chatParticipants = _.values(r.chatWindows[b].childScope.chatObj.participants),
                                    c.height = Math.ceil($("#" + r.chatWindows[b].childScope.chatId).height()),
                                    r.chatHistory.push(c)
                                }
                        if (r.dockedWind.length)
                            for (var b = 0; b < r.dockedWind.length; b++)
                                if (!k.isAdminModeON()) {
                                    var c = {};
                                    c.chatId = r.dockedWind[b].childScope.chatObj.chatId,
                                    c.isMinimized = !0,
                                    c.name = r.dockedWind[b].childScope.chatObj.getTitle(),
                                    c.chatType = r.dockedWind[b].childScope.chatObj.chatType,
                                    c.chatParticipants = _.values(r.dockedWind[b].childScope.chatObj.participants),
                                    c.isDocked = !0,
                                    r.chatHistory.push(c)
                                }
                        l.writeData(z, r.chatHistory, A)
                    }
                }
                ,
                r.resetWindowsPosition = function() {
                    if (r.chatWindows.length) {
                        r.chatWindows[0].childScope.xPosition = $("#chatUserListMainWindow").width() + 16 + "px",
                        r.chatWindows[0].xPosition = $("#chatUserListMainWindow").width() + 16 + "px",
                        $("#" + r.chatWindows[0].id).parent().show(),
                        $("#" + r.chatWindows[0].id).show();
                        for (var a = 1; a < r.chatWindows.length; a++) {
                            var b = r.chatWindows[a - 1].xPosition;
                            b = parseInt(b.substring(0, b.length - 2)),
                            $("#" + r.chatWindows[a - 1].id).width() ? (r.chatWindows[a].childScope.xPosition = b + $("#" + r.chatWindows[a - 1].id).width() + r.spaceInWindows + "px",
                            r.chatWindows[a].xPosition = b + $("#" + r.chatWindows[a - 1].id).width() + r.spaceInWindows + "px",
                            $("#" + r.chatWindows[a].id).parent().show(),
                            $("#" + r.chatWindows[a].id).show()) : (r.chatWindows[a].childScope.xPosition = b + r.chatWindowDefaultSize + r.spaceInWindows + "px",
                            r.chatWindows[a].xPosition = b + r.chatWindowDefaultSize + r.spaceInWindows + "px",
                            $("#" + r.chatWindows[a].id).parent().show(),
                            $("#" + r.chatWindows[a].id).show())
                        }
                        var c = r.chatWindows[r.chatWindows.length - 1].xPosition;
                        if (c = parseInt(c.substring(0, c.length - 2)),
                        r.isDockingNeeded(c)) {
                            I();
                            for (var a = 1; a < r.chatWindows.length; a++) {
                                var b = r.chatWindows[a - 1].xPosition;
                                b = parseInt(b.substring(0, b.length - 2)),
                                $("#" + r.chatWindows[a - 1].id).width() ? (r.chatWindows[a].childScope.xPosition = b + $("#" + r.chatWindows[a - 1].id).width() + r.spaceInWindows + "px",
                                r.chatWindows[a].xPosition = b + $("#" + r.chatWindows[a - 1].id).width() + r.spaceInWindows + "px",
                                $("#" + r.chatWindows[a].id).parent().show(),
                                $("#" + r.chatWindows[a].id).show()) : (r.chatWindows[a].childScope.xPosition = b + r.chatWindowDefaultSize + r.spaceInWindows + "px",
                                r.chatWindows[a].xPosition = b + r.chatWindowDefaultSize + r.spaceInWindows + "px",
                                $("#" + r.chatWindows[a].id).parent().show(),
                                $("#" + r.chatWindows[a].id).show())
                            }
                            r.$broadcast("render")
                        } else if (G(c + $("#" + r.chatWindows[r.chatWindows.length - 1].id).width()) && r.dockedWind.length) {
                            H();
                            for (var a = 1; a < r.chatWindows.length; a++) {
                                var b = r.chatWindows[a - 1].xPosition;
                                b = parseInt(b.substring(0, b.length - 2)),
                                $("#" + r.chatWindows[a - 1].id).width() ? (r.chatWindows[a].childScope.xPosition = b + $("#" + r.chatWindows[a - 1].id).width() + r.spaceInWindows + "px",
                                r.chatWindows[a].xPosition = b + $("#" + r.chatWindows[a - 1].id).width() + r.spaceInWindows + "px",
                                $("#" + r.chatWindows[a].id).parent().show(),
                                $("#" + r.chatWindows[a].id).show()) : (r.chatWindows[a].childScope.xPosition = b + r.chatWindowDefaultSize + r.spaceInWindows + "px",
                                r.chatWindows[a].xPosition = b + r.chatWindowDefaultSize + r.spaceInWindows + "px",
                                $("#" + r.chatWindows[a].id).parent().show(),
                                $("#" + r.chatWindows[a].id).show())
                            }
                        }
                        r.dockedWind.length && r.chatWindows.length && J()
                    }
                    if (r.dockedWind.length)
                        for (var d = 0; d < r.dockedWind.length; d++)
                            r.$broadcast("hideChatWindow", r.dockedWind[d].childScope.chatId),
                            $("#" + r.dockedWind[d].childScope.chatId).parent().hide(),
                            r.dockedWind[d].childScope.dntShow = !0
                }
                ,
                r.$on("adjustWindPosOnMin", function(a) {
                    r.chatWindows.length && (r.resetWindowsPosition(),
                    r.$broadcast("render"))
                }),
                r.isDockingNeeded = function(b) {
                    var c = a.innerWidth - (r.chatWindowDefaultSize + 10);
                    return c -= 80,
                    b >= c ? !0 : !1
                }
                ;
                var G = function(b) {
                    var c = a.innerWidth - (r.chatWindowDefaultSize + 10);
                    return c -= 100,
                    c > b ? !0 : !1
                }
                  , H = function() {
                    if (r.dockedWind.length) {
                        console.log("undock");
                        var a = r.dockedWind.pop();
                        $("#" + a.id).parent().show(),
                        $("#" + a.id).show(),
                        r.$broadcast("maxChatWin", a.id),
                        a.isActive || (e.chatOpened(a.childScope.chatObj),
                        a.isActive = !0);
                        var b;
                        if (r.chatWindows.length ? (b = r.chatWindows[r.chatWindows.length - 1].xPosition,
                        b = parseInt(b.substring(0, b.length - 2)) + $("#" + r.chatWindows[r.chatWindows.length - 1].id).width() + r.spaceInWindows) : b = r.newWindowPosFrmBuddyList,
                        a.xPosition = b + "px",
                        a.childScope.xPosition = b + "px",
                        r.chatWindows.push(a),
                        r.chatWindows.length && G(parseInt(r.chatWindows[r.chatWindows.length - 1].xPosition.substring(0, r.chatWindows[r.chatWindows.length - 1].xPosition.length - 2)) + $("#" + r.chatWindows[r.chatWindows.length - 1].id).width()))
                            return r.$broadcast("render"),
                            void H();
                        r.$broadcast("render"),
                        r.dockedWind.length && $(".chatListDocked").perfectScrollbar("update")
                    }
                }
                  , I = function() {
                    if (r.chatWindows.length) {
                        r.dockedWind.push(r.chatWindows.pop());
                        for (var a = 0; a < r.dockedWind.length; a++)
                            r.dockedWind[a].childScope.dntShow = !1,
                            r.$broadcast("hideChatWindow", r.dockedWind[a].childScope.chatId),
                            $("#" + r.dockedWind[a].childScope.chatId).parent().hide(),
                            r.dockedWind[a].childScope.dntShow = !0;
                        if (r.chatWindows.length && r.isDockingNeeded(parseInt(r.chatWindows[r.chatWindows.length - 1].xPosition.substring(0, r.chatWindows[r.chatWindows.length - 1].xPosition.length - 2)) + $("#" + r.chatWindows[r.chatWindows.length - 1]).width()))
                            return void I()
                    }
                }
                  , J = function() {
                    if (r.dockedWind.length) {
                        var a;
                        r.chatWindows.length ? (a = r.chatWindows[r.chatWindows.length - 1].xPosition,
                        a = parseInt(a.substring(0, a.length - 2)),
                        a += $("#" + r.chatWindows[r.chatWindows.length - 1].id).width() ? $("#" + r.chatWindows[r.chatWindows.length - 1].id).width() + r.spaceInWindows : r.chatWindowDefaultSize + r.spaceInWindows) : a = 280,
                        r.dockedChatObj = r.dockedWind[r.dockedWind.length - 1].childScope.chatObj,
                        r.multiDockPos = a + "px",
                        r.dockedChatObj.chatType == f.chatsdk.ChatType.P2P && setTimeout(function() {
                            r.$broadcast("refreshImage")
                        }, 0),
                        E(),
                        r.$broadcast("render")
                    }
                }
                ;
                $(a).resize(w);
                var K = function(b, c) {
                    if (r.chatWindows.length) {
                        r.dockedWind.push(r.chatWindows.pop());
                        for (var d = 0; d < r.dockedWind.length; d++)
                            $("#" + r.dockedWind[d].childScope.chatId).parent().hide();
                        J(),
                        r.chatWindows.length && parseInt(r.chatWindows[r.chatWindows.length - 1].xPosition.substring(0, r.chatWindows[r.chatWindows.length - 1].xPosition.length - 2)) + $("#" + r.chatWindows[r.chatWindows.length - 1].id).width() > 80 * a.innerWidth / 100 && K(parseInt(r.chatWindows[r.chatWindows.length - 1].xPosition.substring(0, r.chatWindows[r.chatWindows.length - 1].xPosition.length - 2)), c)
                    }
                }
                  , L = function(a, b) {
                    for (var c = 1; c < r.chatWindows.length; c++) {
                        var d = r.chatWindows[c - 1].xPosition;
                        d = parseInt(d.substring(0, d.length - 2)),
                        r.chatWindows[c].childScope.xPosition = d + $("#" + r.chatWindows[c - 1].id).width() + r.spaceInWindows + "px",
                        r.chatWindows[c].xPosition = d + $("#" + r.chatWindows[c - 1].id).width() + r.spaceInWindows + "px"
                    }
                    if (r.$broadcast("render"),
                    r.dockedWind.length && r.chatWindows.length) {
                        var d = r.newWindowPosFrmBuddyList;
                        d = r.chatWindows[r.chatWindows.length - 1].xPosition,
                        d = parseInt(d.substring(0, d.length - 2));
                        var e;
                        a ? (e = d + $("#" + r.chatWindows[r.chatWindows.length - 1].id).width() + r.chatWindowDefaultSize + 2 * r.spaceInWindows,
                        J(e, !0, b)) : (e = d + $("#" + r.chatWindows[r.chatWindows.length - 1].id).width() + r.spaceInWindows,
                        J(e, !0))
                    }
                }
                ;
                r.$on("MainCtrl::appSwitchedToCompactSize", function() {
                    console.log("cnvChatManager: handle app switch to compact size"),
                    w()
                }),
                r.$on("MainCtrl::appSwitchedToDefaultSize", function() {
                    console.log("cnvChatManager: handle app switch to default size"),
                    w()
                }),
                o.on("userInfo:adminModeChanged", x)
            },
            controller: ["$scope", "$element", "$rootScope", function(b, c, d) {
                m.appHasFocus() ? e.appFocusGained() : e.appFocusLost();
                var g = function() {
                    t.logLocally_errorOnServer("userId: " + o.user_id + " tabId: " + d.clientInstanceId + " cnvChatManager.appLongIdle"),
                    h.onUserIdle(),
                    b.userIdle = !0
                }
                ;
                m.isAppInLongIdleState() && g(),
                b.getVisibleBrowserHeight = function() {
                    return a.document.body.clientHeight - 60
                }
                ;
                var i = function(a) {
                    a.chat.searchInfo ? b.$broadcast("opeNewChatWindow", a.chat, !1, !1, !0) : a.meta ? b.$broadcast("opeNewChatWindow", a.chat, a.meta.fromLocalStore, {
                        isMinimized: a.meta.isMinimized,
                        isDocked: a.meta.isDocked
                    }, !1, !1, a.meta.height) : b.$broadcast("opeNewChatWindow", a.chat)
                }
                  , j = function() {
                    if (b.chatManagerConnected = !0,
                    b.chatWindows.length) {
                        for (var a = 0; a < b.chatWindows.length; a++)
                            e.chatOpened(b.chatWindows[a].childScope.chatObj),
                            b.chatWindows[a].isActive = !0;
                        for (var a = 0; a < b.chatWindows.length; a++)
                            b.$broadcast("isWindInFocus", b.chatWindows[a].id),
                            b.chatWindows[a].childScope.isChatWindowFocused && b.$broadcast("setWindInFocus", b.chatWindows[a].id)
                    }
                }
                  , k = function(a) {
                    if (b.chatManagerConnected = !1,
                    b.chatWindows.length)
                        for (var c = 0; c < b.chatWindows.length; c++)
                            b.chatWindows[c].isActive = !1;
                    if (b.dockedWind.length)
                        for (var c = 0; c < b.dockedWind.length; c++)
                            b.dockedWind[c].isActive = !1
                }
                  , l = function(a) {
                    for (var c = 0; c < b.dockedWind.length; c++)
                        if (b.dockedWind[c].childScope.chatObj.chatId == a.chat.chatId) {
                            b.$broadcast("unReadCountChanged", a.chat.chatId);
                            break
                        }
                }
                ;
                b.$on("chatMuteStatusChanged", function() {
                    b.$broadcast("render")
                }),
                e.addListener(f.chatsdk.ChatEvents.CHAT_STARTED, i),
                e.addListener(f.chatsdk.ChatEvents.CONNECTED, j),
                e.addListener(f.chatsdk.ChatEvents.DISCONNECTED, k),
                e.addListener([f.chatsdk.ChatEvents.CHAT_UPDATED, f.chatsdk.ChatEvents.CHAT_MOVED, f.chatsdk.ChatEvents.CHAT_ADDED], l),
                b.$on("$destroy", function() {
                    e.removeListener(f.chatsdk.ChatEvents.CHAT_STARTED, i),
                    e.removeListener(f.chatsdk.ChatEvents.CONNECTED, j),
                    e.removeListener(f.chatsdk.ChatEvents.DISCONNECTED, k),
                    e.removeListener([f.chatsdk.ChatEvents.CHAT_UPDATED, f.chatsdk.ChatEvents.CHAT_MOVED, f.chatsdk.ChatEvents.CHAT_ADDED], l)
                }),
                m.on("appFocus", function() {
                    e.appFocusGained(),
                    b.appInFoucs = !0,
                    b.chatsToBlinkInTab = [],
                    b.currentFocusedChatWindow.chatWindScope && b.currentFocusedChatWindow.chatWindScope.setWindFocus(!0)
                }),
                m.on("appBlur", function() {
                    e.appFocusLost(),
                    b.appInFoucs = !1
                }),
                m.on("appLongIdle", function() {
                    g()
                }),
                m.on("appLongIdleHeartbeat", function() {
                    b.thisUserStatus != f.chatsdk.UserStatus.IDLE && (t.logLocally_errorOnServer("userId: " + o.user_id + " tabId: " + d.clientInstanceId + " cnvChatManager.appLongIdleHeartbeat"),
                    h.onUserIdle())
                }),
                m.on("appShortIdle", function() {
                    e.appFocusLost(),
                    p.isThisTabLastActiveTab() && b.currentFocusedChatWindow.chatWindScope && b.currentFocusedChatWindow.chatWindScope.setWindFocus(!1, !1, !1, !0)
                }),
                m.on("appActivate", function() {
                    e.appFocusGained(),
                    setTimeout(function() {
                        b.currentFocusedChatWindow.chatWindScope && b.currentFocusedChatWindow.chatWindScope.setWindFocus(!0)
                    }, 100)
                }),
                m.on("appDeactivate", function() {
                    e.appFocusLost(),
                    b.currentFocusedChatWindow.chatWindScope && b.currentFocusedChatWindow.chatWindScope.setWindFocus(!1, !1, !1, !0)
                }),
                m.on("appActive", function() {
                    h.onUserNonIdle(),
                    b.userIdle = !1,
                    e.appFocusGained(),
                    b.currentFocusedChatWindow.chatWindScope && b.currentFocusedChatWindow.chatWindScope.setWindFocus(!0)
                }),
                p.addTabsEventListener2("openChatWindow", function(a) {
                    if (console.log("==open window"),
                    a.tabId != b.tabId && b.localStoreLoaded) {
                        var c = e.getChat(a.chatId);
                        if (c)
                            console.log("==opening window"),
                            b.$broadcast("opeNewChatWindow", c, !1, !1, !1, !0);
                        else {
                            var d = [];
                            for (var f in a.users)
                                a.users.hasOwnProperty(f) && (h.getUserById(f) ? d.push(h.getUserById(f)) : h.getInaccessibleUserById(f) && d.push(h.getInaccessibleUserById(f)));
                            e.openChatFromId(a.chatId, a.chatType, null , d)
                        }
                    }
                }),
                p.addTabsEventListener2("closeChatWindow", function(a) {
                    a.tabId != b.tabId && b.localStoreLoaded && b.onCloseChatWindow(null , a.chatId, a.closingDockedChat, !0)
                }),
                p.addTabsEventListener2("showDockedWin", function(a) {
                    if (a.tabId != b.tabId && b.localStoreLoaded)
                        for (var c = 0; c < b.dockedWind.length; c++)
                            if (b.dockedWind[c].chatId == a.chatId) {
                                b.showDockedChat(null , a.chatId, !0);
                                break
                            }
                }),
                p.addTabsEventListener2("windowResize", function(a) {
                    if (b.localStoreLoaded)
                        if ("chatList" == a.chatId) {
                            var c;
                            b.$broadcast("maxChatWin", c, !0),
                            a.height > b.getVisibleBrowserHeight() ? $("#chatUserListMainWindow").height(b.getVisibleBrowserHeight()) : $("#chatUserListMainWindow").height(a.height)
                        } else
                            Math.ceil($("#" + a.chatId).height()) >= b.chatDefaultHeight && a.height >= b.chatDefaultHeight && (a.height > b.getVisibleBrowserHeight() ? b.$broadcast("setChatWindowHeight", a.chatId, b.getVisibleBrowserHeight()) : b.$broadcast("setChatWindowHeight", a.chatId, a.height))
                })
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvMinimizer", ["appTabs", "chatUsersManager", "mixpanelService", function(b, c, d) {
        return {
            link: function(e, f, g) {
                e.windDefaultHeight = 350,
                e.isMinimized = !1,
                e.minimizedWidth = "166px",
                e.chatWindowDefaultSize = "302px",
                e.chatListDefaultWidth = "260px",
                f.hasClass("chatUserListHeader") && (f.siblings().slideToggle(0),
                f.parent().find("#intercom-io-btn").css("display", "block"),
                e.verticalHeight = f.parent().height(),
                f.parent().css("height", f.height()),
                f.parent().css("width", e.minimizedWidth),
                f.find(".btnMinimize").hide(),
                f.css("background", "#2b2b2b"),
                e.isMinimized = !0);
                var h = function(c) {
                    if (e.isMinimizedToAvatar)
                        e.$emit("openingDockedWindow", e.chatId);
                    else if (e.isMinimized) {
                        var g = Date.now();
                        console.log("-->PREF:UI Maximize Start: " + g),
                        f.siblings().slideDown(0),
                        a.innerHeight > e.windDefaultHeight && e.verticalHeight > a.innerHeight ? e.verticalHeight = a.innerHeight - 59 : a.innerHeight < e.windDefaultHeight && (e.verticalHeight = e.windDefaultHeight),
                        e.verticalHeight < e.windDefaultHeight && (e.verticalHeight = e.windDefaultHeight),
                        f.hasClass("chatWindowHeader") && f.parent().css("width", e.chatWindowDefaultSize),
                        f.parent().css("height", e.verticalHeight),
                        e.isMinimized = !1,
                        e.showUnread = !1,
                        "function" == typeof e.handlingOnBoardingMessage && e.handlingOnBoardingMessage(),
                        f.find(".btnMinimize").show(),
                        f.find(".btnClose").show(),
                        f.find(".userProfileName").show(),
                        f.find(".userProfileName").css("width", ""),
                        f.hasClass("chatWindowHeader") && (e.scrollPos && !e.scrollToBot ? f.siblings(".chatMessageWindow").scrollTop(e.scrollPos) : e.chatObj.unreadCount > 0 ? setTimeout(function() {
                            f.siblings(".chatMessageWindow").scrollTop(f.siblings(".chatMessageWindow")[0].scrollHeight)
                        }, 10) : f.siblings(".chatMessageWindow").scrollTop(f.siblings(".chatMessageWindow")[0].scrollHeight),
                        e.chatObj.unreadCount > 0 && !e.scrollToBot && (f.parent().find(".newMsgReceived").show(),
                        e.blink(f.find(".chatWindowHeader"), 0, 0)),
                        e.setWindFocus(!0, !0),
                        e.$emit("adjustWindPosOnMin"),
                        e.$emit("saveMinimizedHistory", e.chatObj.chatId, !1),
                        e.disabledChat || f.css("background", "#2b2b2b"),
                        e.$broadcast("render")),
                        f.hasClass("chatUserListHeader") && (f.parent().css("width", e.chatListDefaultWidth),
                        e.$emit("saveMinimizedHistory"),
                        e.$emit("adjustWindPosOnMin"),
                        f.parent().find(".inputSearchBar").focus(),
                        d.trackEvent(d.OPEN_CHATS_LIST)),
                        b.dispatchTabsEvent2("chatMax", {
                            tabId: e.tabId,
                            chatWindId: e.chatId
                        }, !0),
                        console.log("-->PREF:UI Maximize End: " + Date.now() + " delta " + (Date.now() - g))
                    } else {
                        var g = Date.now();
                        console.log("-->PREF:UI Minimize Start: " + g),
                        f.hasClass("chatWindowHeader") && (e.scrollPos = Math.ceil(f.siblings(".chatMessageWindow").scrollTop()),
                        e.scrollPos + f.siblings(".chatMessageWindow").height() >= f.siblings(".chatMessageWindow")[0].scrollHeight ? e.scrollToBot = !0 : e.scrollToBot = !1,
                        e.setWindFocus(!1)),
                        f.siblings().slideUp(0),
                        f.parent().find("#intercom-io-btn").css("display", "block"),
                        e.verticalHeight = f.parent().height(),
                        f.parent().css("height", f.height()),
                        e.isMinimized = !0,
                        e.showUnread = !0,
                        "function" == typeof e.hideOnBoardingMessage && e.hideOnBoardingMessage(),
                        e.textEditorCtrl && e.textEditorCtrl.blur(),
                        f.parent().css("width", e.minimizedWidth),
                        e.$emit("adjustWindPosOnMin"),
                        f.hasClass("chatWindowHeader") ? e.$emit("saveMinimizedHistory", e.chatObj.chatId, !0) : e.$emit("saveMinimizedHistory"),
                        f.find(".btnMinimize").hide(),
                        e.hasUnread ? f.css("background", "#025b7e") : f.css("background", "#2b2b2b"),
                        b.dispatchTabsEvent2("chatMin", {
                            tabId: e.tabId,
                            chatWindId: e.chatId
                        }, !0),
                        console.log("-->PREF:UI Minimize End: " + Date.now() + " delta " + (Date.now() - g))
                    }
                    e.fromMin = !0,
                    setTimeout(function() {
                        e.fromMin = !1
                    }, 500),
                    e.$broadcast("render"),
                    c.preventDefault(),
                    c.stopPropagation()
                }
                ;
                f.on("mousedown", h),
                b.addTabsEventListener2("chatMin", function(a) {
                    a.tabId != e.tabId && c.getUsers().length && e.$broadcast("miniChatWin", a.chatWindId)
                }),
                e.$on("miniChatWin", function(a, b) {
                    b == e.chatId && (e.isMinimized || (f.hasClass("chatWindowHeader") && (e.scrollPos = Math.ceil(f.siblings(".chatMessageWindow").scrollTop()),
                    e.scrollPos + f.siblings(".chatMessageWindow").height() >= f.siblings(".chatMessageWindow")[0].scrollHeight ? e.scrollToBot = !0 : e.scrollToBot = !1,
                    e.setWindFocus(!1)),
                    f.siblings().slideUp(0),
                    f.parent().find("#intercom-io-btn").css("display", "block"),
                    e.verticalHeight = f.parent().height(),
                    f.parent().css("height", f.height()),
                    e.textEditorCtrl && e.textEditorCtrl.blur(),
                    e.isMinimized = !0,
                    e.showUnread = !0,
                    setTimeout(function() {
                        "function" == typeof e.hideOnBoardingMessage && e.hideOnBoardingMessage()
                    }, 0),
                    f.hasClass("chatWindowHeader") && e.setWindFocus(!1),
                    f.parent().css("width", e.minimizedWidth),
                    e.$emit("adjustWindPosOnMin", f.parent().attr("id")),
                    f.find(".btnMinimize").hide(),
                    e.hasUnread ? f.css("background", "#025b7e") : f.css("background", "#2b2b2b")))
                }),
                b.addTabsEventListener2("chatMax", function(a) {
                    a.tabId != e.tabId && c.getUsers().length && e.$broadcast("maxChatWin", a.chatWindId, !0)
                }),
                e.$on("maxChatWin", function(b, c, d, g) {
                    c == e.chatId && (e.dntShow = !1,
                    g && (e.isSearch = !0,
                    e.isAlreadyOpenedToSearch = !0),
                    d && (f.siblings().slideDown(0),
                    a.innerHeight > e.windDefaultHeight && e.verticalHeight > a.innerHeight ? e.verticalHeight = a.innerHeight - 59 : a.innerHeight < e.windDefaultHeight && (e.verticalHeight = e.windDefaultHeight),
                    e.verticalHeight < e.windDefaultHeight && (e.verticalHeight = e.windDefaultHeight),
                    f.parent().css("height", e.verticalHeight),
                    e.showUnread = !1,
                    e.isMinimized = !1,
                    "function" == typeof e.handlingOnBoardingMessage && e.handlingOnBoardingMessage(),
                    f.hasClass("chatWindowHeader") && (f.parent().css("width", e.chatWindowDefaultSize),
                    e.$emit("adjustWindPosOnMin"),
                    e.$broadcast("render"),
                    e.scrollPos && !e.scrollToBot ? f.siblings(".chatMessageWindow").scrollTop(e.scrollPos) : f.siblings(".chatMessageWindow").scrollTop(f.siblings(".chatMessageWindow")[0].scrollHeight),
                    e.chatObj.unreadCount > 0 && !e.scrollToBot && (f.parent().find(".newMsgReceived").show(),
                    e.blink(f.find(".chatWindowHeader"), 0, 0))),
                    e.textEditorCtrl && d ? (f.css("background", "#2b2b2b"),
                    e.setWindFocus(!0, !0)) : e.hasUnread ? f.css("background", "#025b7e") : f.css("background", "#727272"),
                    f.find(".btnMinimize").show(),
                    f.find(".btnClose").show(),
                    f.find(".userProfileName").show()),
                    f.hasClass("chatUserListHeader") && (f.parent().css("width", e.chatListDefaultWidth),
                    e.$emit("adjustWindPosOnMin"),
                    f.parent().find(".inputSearchBar").focus()),
                    e.fromMin = !0,
                    setTimeout(function() {
                        e.fromMin = !1
                    }, 500),
                    e.$broadcast("render"))
                }),
                e.$on("maxChatList", function(b, c) {
                    f.hasClass("chatUserListHeader") && (f.siblings().slideDown(0),
                    a.innerHeight > e.windDefaultHeight && c > a.innerHeight ? e.verticalHeight = a.innerHeight - 59 : a.innerHeight < e.windDefaultHeight && (e.verticalHeight = e.windDefaultHeight),
                    e.verticalHeight < e.windDefaultHeight && (e.verticalHeight = e.windDefaultHeight),
                    c < e.windDefaultHeight && (c = e.windDefaultHeight),
                    f.parent().css("height", c),
                    e.isMinimized = !1,
                    e.showUnread = !1,
                    f.parent().css("width", e.chatListDefaultWidth),
                    f.find(".btnMinimize").show(),
                    f.find(".btnClose").show(),
                    f.find(".userProfileName").show(),
                    f.find(".userProfileName").css("width", ""),
                    f.parent().css("width", "260px"),
                    e.$emit("adjustWindPosOnMin"),
                    f.parent().find(".inputSearchBar").focus())
                }),
                e.$on("minChatList", function(a) {
                    f.hasClass("chatUserListHeader") && (f.siblings().slideToggle(0),
                    f.parent().find("#intercom-io-btn").css("display", "block"),
                    e.verticalHeight = f.parent().height(),
                    f.parent().css("height", f.height()),
                    f.parent().css("width", e.minimizedWidth),
                    f.find(".btnMinimize").hide(),
                    f.css("background", "#2b2b2b"),
                    e.$emit("adjustWindPosOnMin"),
                    e.isMinimized = !0)
                }),
                e.$on("setChatWindowHeight", function(a, b, c) {
                    b != e.chatId || e.isMinimized || (f.parent().css("height", c),
                    e.verticalHeight = c)
                }),
                e.$on("hideChatWindow", function(a, b) {
                    b != e.chatId || e.dntShow || (e.dntShow = !0,
                    e.isMinimized || (f.hasClass("chatWindowHeader") && (e.scrollPos = Math.ceil(f.siblings(".chatMessageWindow").scrollTop()),
                    e.scrollPos + f.siblings(".chatMessageWindow").height() >= f.siblings(".chatMessageWindow")[0].scrollHeight ? e.scrollToBot = !0 : e.scrollToBot = !1),
                    f.siblings().slideUp(0),
                    f.parent().find("#intercom-io-btn").css("display", "block"),
                    e.verticalHeight = f.parent().height(),
                    f.parent().css("height", f.height()),
                    e.isMinimized = !0,
                    "function" == typeof e.hideOnBoardingMessage && e.hideOnBoardingMessage(),
                    e.showUnread = !0,
                    e.setWindFocus(!1),
                    f.parent().css("width", e.minimizedWidth),
                    f.find(".btnMinimize").hide(),
                    e.hasUnread ? f.css("background", "#025b7e") : f.css("background", "#2b2b2b")))
                }),
                e.$on("$destroy", function() {
                    f.off("mousedown", h)
                })
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvResizer", ["$document", "appTabs", function(b, c) {
        return function(d, e, f) {
            function g(b) {
                if ("vertical" == f.cnvResizer) {
                    var c = b.clientY
                      , e = a.innerHeight
                      , g = e - c;
                    f.resizerMax = d.getVisibleBrowserHeight(),
                    d.chatId || (f.resizerMax -= 59),
                    f.resizerMin || (f.resizerMin = 351),
                    f.resizerMax && g < f.resizerMax && g >= f.resizerMin ? $("#" + f.resizerBottom).css({
                        height: g + "px"
                    }) : g > f.resizerMax ? $("#" + f.resizerBottom).css({
                        height: f.resizerMax + "px"
                    }) : g < f.resizerMin && $("#" + f.resizerBottom).css({
                        height: f.resizerMin + "px"
                    }),
                    d.$emit("chatWindowResize")
                }
            }
            function h() {
                d.chatId == f.resizerBottom ? (d.verticalHeight = $("#" + f.resizerBottom).height() + 1,
                c.dispatchTabsEvent2("windowResize", {
                    chatId: d.chatId,
                    height: d.verticalHeight
                }, !0),
                d.$emit("saveHistoryLS")) : "chatUserListMainWindow" == f.resizerBottom && (c.dispatchTabsEvent2("windowResize", {
                    chatId: "chatList",
                    height: $("#" + f.resizerBottom).height()
                }, !0),
                d.$emit("saveHistoryLS")),
                b.unbind("mousemove", g),
                b.unbind("mouseup", h)
            }
            var i = function(a) {
                a.preventDefault(),
                b.on("mousemove", g),
                b.on("mouseup", h)
            }
            ;
            e.on("mousedown", i),
            d.$on("$destroy", function() {
                e.off("mousedown", i)
            })
        }
    }
    ]),
    b.module("convoApp").directive("cnvDockedChatWindows", ["appTabs", "chatManager", function(a, b) {
        return {
            restrict: "E",
            scope: !1,
            templateUrl: "chat/client/dockedChatWindows/templates/cnvDockedChatWindows.tpl.html",
            link: function(c, d, e) {
                c.showDockedChat = function(d, e, g) {
                    var h;
                    g || a.dispatchTabsEvent2("showDockedWin", {
                        tabId: c.tabId,
                        chatId: e
                    }, !0),
                    c.showingChatListDocked = !1;
                    for (var i = 0; i < c.chatWindows.length; i++)
                        c.chatWindows[i].chatId == e && (h = !0);
                    if (c.chatWindows.length && !h) {
                        var j = c.chatWindows.length - 1
                          , k = c.chatWindows[j].xPosition;
                        for (k = parseInt(k.substring(0, k.length - 2)); c.isDockingNeeded(k); )
                            c.chatWindows[j] && (j--,
                            k = c.chatWindows[j].xPosition,
                            k = parseInt(k.substring(0, k.length - 2)));
                        var l;
                        if (j != c.chatWindows.length - 1) {
                            l = c.chatWindows[j];
                            for (var i = c.chatWindows.length - 1; i > j; i--)
                                c.dockedWind.push(c.chatWindows[i]),
                                c.chatWindows.splice(i, 1);
                            c.chatWindows.splice(j, 1)
                        } else
                            l = c.chatWindows.pop();
                        c.$broadcast("hideChatWindow", l.id),
                        $("#" + l.id).parent().hide();
                        for (var i = 0; i < c.dockedWind.length; i++)
                            if (c.dockedWind[i].chatId == e) {
                                l.xPosition != c.dockedWind[i].xPosition && (c.dockedWind[i].xPosition = l.xPosition,
                                c.dockedWind[i].childScope.xPosition = l.childScope.xPosition),
                                c.chatWindows.push(c.dockedWind[i]),
                                c.dockedWind[i].isActive || (b.chatOpened(c.dockedWind[i].childScope.chatObj),
                                c.dockedWind[i].isActive = !0),
                                c.dockedWind.splice(i, 1),
                                $("#" + c.chatWindows[c.chatWindows.length - 1].id).parent().show(),
                                $("#" + c.chatWindows[c.chatWindows.length - 1].id).show(),
                                c.chatWindows[c.chatWindows.length - 1].isMinimized = !1,
                                c.chatWindows[c.chatWindows.length - 1].isMinimized = !1,
                                c.$broadcast("maxChatWin", c.chatWindows[c.chatWindows.length - 1].id, !0),
                                c.dockedWind.push(l);
                                var m = c.chatWindows[c.chatWindows.length - 1].xPosition;
                                m = parseInt(m.substring(0, m.length - 2)),
                                c.resetWindowsPosition();
                                break
                            }
                        f(),
                        c.$broadcast("render"),
                        g || c.saveHistoryInLocalStore
                    }
                    d && (d.stopImmediatePropagation(),
                    d.preventDefault())
                }
                ,
                c.closeDockedChat = function(a, b) {
                    c.$broadcast("closeChatWindow", b, !0),
                    c.showingChatListDocked = !1,
                    $(".chatListDocked").perfectScrollbar("update"),
                    f(),
                    c.$broadcast("render"),
                    a.stopPropagation()
                }
                ;
                var f = function() {
                    for (var a = 0, b = !1, e = 0; e < c.dockedWind.length; e++)
                        a += c.dockedWind[e].childScope.chatObj.unreadCount,
                        !c.dockedWind[e].childScope.chatObj.isMuted && c.dockedWind[e].childScope.chatObj.unreadCount > 0 && (b = !0);
                    a > 0 && b ? d.find(".multipleDockedWind").css("background", "#025b7e") : 0 === a && (c.blink(d.find(".multipleDockedWind"), 0, 0),
                    d.find(".multipleDockedWind").css("background", "#2b2b2b")),
                    c.unreadCounts = a
                }
                ;
                c.showChatListDocked = function() {
                    c.showingChatListDocked = !0,
                    c.$broadcast("render");
                    var a = $(".chatListDocked", d);
                    c.unreadCounts > 0 && a.scrollTop() != a[0].scrollHeight && a.scrollTop(a[0].scrollHeight),
                    a.perfectScrollbar({
                        suppressScrollX: !0
                    }),
                    a.focus()
                }
                ;
                var g = function(a) {
                    a.preventDefault(),
                    a.stopPropagation()
                }
                ;
                $(".multipleDockedWind").on("mousewheel", g);
                var h = function() {
                    c.showingChatListDocked = !0,
                    c.$broadcast("render")
                }
                  , i = function() {
                    c.showingChatListDocked = !1,
                    c.$broadcast("render")
                }
                ;
                d.find(".chatListDocked").on("focus", h),
                d.find(".chatListDocked").on("blur", i),
                c.$on("$destroy", function() {
                    d.find(".chatListDocked").off("focus", h),
                    d.find(".chatListDocked").off("blur", i),
                    $(".multipleDockedWind").off("mousewheel", g)
                })
            }
        }
    }
    ]);
    var f = f || {};
    f.chatsdk = f.chatsdk || {},
    f.chatsdk.ChatContextFactory = function() {
        function a() {
            return new f.chatsdk.ChatContext
        }
        var b;
        return {
            getChatContext: function() {
                return b || (b = a()),
                b
            }
        }
    }(),
    f.chatsdk.ChatContext = function() {
        var a = f.chatsdk;
        this.timestampManager = new a.TimestampManager,
        this.connectionManager = new a.ConnectionManager,
        this.messagesDiskManager = new a.MessagesDiskManager,
        this.callsManager = new a.XMPPCallsManager(this.connectionManager),
        this.usersManager = new a.UserManager(this.callsManager,this.timestampManager),
        this.localStoreManager = new a.LocalStoreManager(this.messagesDiskManager),
        this.chatManager = new a.ChatManager(this.usersManager,this.timestampManager,this.callsManager,this.messagesDiskManager,this.localStoreManager),
        this.usersManager.addListener(a.ChatEvents.CONNECTED, this.chatManager.usersUpdated),
        f.rtc.RTCFactory.init(this.callsManager, this.timestampManager)
    }
    ,
    b.module("convoApp").factory("chatAppContext", ["$rootScope", function(a) {
        return {
            connect: function(a, b, c, d, e, g, h) {
                var i = f.chatsdk.ChatContextFactory.getChatContext();
                i.usersManager.setThisUser(b),
                i.messagesDiskManager.init(a, b.user_id),
                i.localStoreManager.init(a, i.usersManager)
            },
            connectConnectionManager: function(a, b, c, d, e, g, h, i) {
                var j = f.chatsdk.ChatContextFactory.getChatContext();
                j.connectionManager.connect(a, b.user_id, c, d, e, g, h, i)
            },
            disconnect: function() {
                var a = f.chatsdk.ChatContextFactory.getChatContext();
                a.connectionManager.logout(),
                a.chatManager.destroy(),
                a.usersManager.destroy(),
                a.callsManager.destroy(),
                a.localStoreManager.destroy()
            },
            setServices: function(b, c, d) {
                var e = f.chatsdk.ChatContextFactory.getChatContext();
                e.localStoreManager.appTabsService = b,
                f.chatsdk.ChatUtils.userInfoService = d,
                e.connectionManager.logger = c,
                e.connectionManager.clientInstanceId = a.clientInstanceId,
                e.connectionManager.uId = d.user_id
            }
        }
    }
    ]).factory("chatManager", [function() {
        return f.chatsdk.ChatContextFactory.getChatContext().chatManager
    }
    ]).factory("chatUsersManager", ["Users", function(a) {
        return f.chatsdk.ChatContextFactory.getChatContext().usersManager
    }
    ]);
    var f = f || {};
    f.chatsdk = f.chatsdk || {},
    f.chatsdk.XMPPCallsManager = function(a) {
        var b = f.chatsdk
          , c = b.ChatEvents
          , d = (b.Constants.TAG,
        b.Constants.XMLNS)
          , e = this;
        b.EventDispatcher.call(this),
        this.MAX_RETRY_COUNT = 7,
        this.RETRY_TIME_INTERVAL = 7e3,
        this._connectionManager = a,
        this._packetIdToPacketMap = {},
        this._packetsInfo = [],
        this.timerId = null ,
        this.pubsubManager = new f.rtc.PubsubManager(this,this._connectionManager),
        this._connectionManager.addListener(c.CONNECTED, function() {
            try {
                e.onXMPPConnected()
            } catch (a) {
                console.error(a.stack)
            }
        }),
        this._connectionManager.addListener(c.DISCONNECTED, function() {
            try {
                e.onXMPPDisconnected()
            } catch (a) {
                console.error(a.stack)
            }
        }),
        this.userIdToPresenceMap = {},
        this.sendIQ = function(a, b, c, d, e, f) {
            if (a && b) {
                if (c) {
                    var g = {
                        packetId: b,
                        packet: a,
                        retryCount: 0,
                        sentTimestamp: (new Date).getTime(),
                        callback: d,
                        errCallback: e,
                        timeout: f
                    };
                    this._packetIdToPacketMap[b] = g,
                    this._packetsInfo.push(g),
                    this.checkTimerStartRequired()
                }
                this._connectionManager.sendIQ(a, d, e, f)
            } else
                console.log("ConvoChat:XMPPCallsManager:sendIq", "Unable to send iq packet, incomplete information")
        }
        ,
        this.sendMessage = function(a, b, c, d) {
            if (a && b) {
                if (c && !this._packetIdToPacketMap.hasOwnProperty(b)) {
                    var e = {
                        packetId: b,
                        packet: a,
                        retryCount: 0,
                        sentTimestamp: (new Date).getTime()
                    };
                    this._packetIdToPacketMap[b] = e,
                    this._packetsInfo.push(e),
                    this.checkTimerStartRequired()
                }
                this._connectionManager.sendPacket(a)
            } else
                console.log("ConvoChat:XMPPCallsManager:sendIq", "Unable to send iq packet, incomplete information")
        }
        ,
        this.subscribe = function(a, b, c) {
            this.pubsubManager.subscribe(a, b, c)
        }
        ,
        this.unsubscribe = function(a, b, c) {
            this.pubsubManager.unsubscribe(a, b, c)
        }
        ,
        this.publishItem = function(a, b, c, d) {
            this.pubsubManager.publishItem(a, b, c, d)
        }
        ,
        this.removeItem = function(a, b, c, d) {
            this.pubsubManager.removeItem(a, b, c, d)
        }
        ,
        this.remove = function(a, b, c) {
            this.pubsubManager.remove(a, b, c)
        }
        ,
        this.checkTimerStartRequired = function() {
            this.timerId || (this.timerId = setInterval(function() {
                e.onRetryTimer()
            }, this.RETRY_TIME_INTERVAL))
        }
        ,
        this.stopRetryTimerIfRequired = function() {
            this.timerId && !this._packetsInfo.length && (clearInterval(this.timerId),
            this.timerId = null )
        }
        ,
        this.onXMPPConnected = function() {
            this.attachHandlers(),
            this._packetsInfo.length && this.onRetryTimer(!0),
            this.dispatch(c.CONNECTED)
        }
        ,
        this.attachHandlers = function() {
            this._connectionManager.addHandler(function(a) {
                try {
                    e.removePacketFromRetryQueue(a.getAttribute("id")),
                    e.dispatch(c.ROSTER_RECEIVED, a)
                } catch (b) {
                    console.error(b.stack)
                }
                return !0
            }, d.ROSTER, "iq", "result"),
            this._connectionManager.addHandler(function(a) {
                try {
                    e.removePacketFromRetryQueue(a.getAttribute("id")),
                    e.dispatch(c.PRESENCE_RECEIVED, a)
                } catch (b) {
                    console.error(b.stack)
                }
                return !0
            }, d.PRESENCE_BATCHED, "message"),
            this._connectionManager.addHandler(function(a) {
                try {
                    e.removePacketFromRetryQueue(a.getAttribute("id")),
                    e.onMessageReceived(a)
                } catch (b) {
                    console.error(b.stack)
                }
                return !0
            }, d.CONVO_MESSAGE, "message"),
            this._connectionManager.addHandler(function(a) {
                try {
                    e.removePacketFromRetryQueue(a.getAttribute("id")),
                    e.onChatsQueryReceived(a)
                } catch (b) {
                    console.error(b.stack)
                }
                return !0
            }, d.HISTORY_CHATS, "iq", "result"),
            this._connectionManager.addHandler(function(a) {
                try {
                    e.removePacketFromRetryQueue(a.getAttribute("id")),
                    e.dispatch(c.CHAT_INFO_RECEIVED, a)
                } catch (b) {
                    console.error(b.stack)
                }
                return !0
            }, d.CHAT_INFO, "iq", "result"),
            this._connectionManager.addHandler(function(a) {
                try {
                    e._connectionManager.logger.logLocally_errorOnServer("2)chatHistoryMessagesIssue: chat history messages packet received packetId : " + a.getAttribute("id")),
                    e.removePacketFromRetryQueue(a.getAttribute("id")),
                    e.onMessageQueryReceived(a)
                } catch (b) {
                    console.error(b.stack)
                }
                return !0
            }, d.HISTORY_MESSAGES, "iq", "result"),
            this._connectionManager.addHandler(function(a) {
                try {
                    e.removePacketFromRetryQueue(a.getAttribute("id")),
                    e.onChatReadQueryReceived(a)
                } catch (b) {
                    console.error(b.stack)
                }
                return !0
            }, d.CHAT_READ, "iq", "result"),
            this._connectionManager.addHandler(function(a) {
                try {
                    e.removePacketFromRetryQueue(a.getAttribute("id")),
                    e.dispatch(c.HEARTBEAT_RECEIVED, {
                        query: a,
                        iqId: a.getAttribute("id")
                    })
                } catch (b) {
                    console.error(b.stack)
                }
                return !0
            }, d.HEARTBEAT, "iq", "result"),
            this._connectionManager.addHandler(function(a) {
                try {
                    e.removePacketFromRetryQueue(a.getAttribute("id")),
                    e.dispatch(c.RECENT_CHATS_RECEIVED, {
                        query: a,
                        iqId: a.getAttribute("id")
                    })
                } catch (b) {
                    console.error(b.stack)
                }
                return !0
            }, d.RECENT_CHATS, "iq", "result"),
            this._connectionManager.addHandler(function(a) {
                try {
                    e.removePacketFromRetryQueue(a.getAttribute("id")),
                    e.dispatch(c.MUTE_STATUS_CHANGED, a)
                } catch (b) {
                    console.error(b.stack)
                }
                return !0
            }, d.CHAT_MUTE, "iq", "result"),
            this._connectionManager.addHandler(function(a) {
                try {
                    e.removePacketFromRetryQueue(a.getAttribute("id"))
                } catch (b) {
                    console.error(b.stack)
                }
                return !0
            }, null , "iq", "result")
        }
        ,
        this.onXMPPDisconnected = function() {
            this.dispatch(c.DISCONNECTED)
        }
        ,
        this.getDomain = function() {
            return this._connectionManager.getDomain()
        }
        ,
        this.getJid = function() {
            return this._connectionManager.getJid()
        }
        ,
        this.isRetryingMessageWithId = function(a) {
            return this._packetIdToPacketMap[a]
        }
        ,
        this.removePacketFromRetryQueue = function(a) {
            if (this._packetIdToPacketMap[a]) {
                delete this._packetIdToPacketMap[a];
                var b = this._packetsInfo.map(function(a) {
                    return a.packetId
                }).indexOf(a);
                this._packetsInfo.splice(b, 1),
                this.stopRetryTimerIfRequired()
            }
        }
        ,
        this.onMessageReceived = function(a) {
            this.dispatch(c.MESSAGE_RECEIVED, a)
        }
        ,
        this.onChatsQueryReceived = function(a) {
            this.dispatch(c.CHAT_HISTORY_RECEIVED, a)
        }
        ,
        this.onMessageQueryReceived = function(a) {
            this.dispatch(c.MESSAGE_HISTORY_RECEIVED, {
                query: a,
                iqId: a.id
            })
        }
        ,
        this.onChatReadQueryReceived = function(a) {
            this.dispatch(c.CHAT_READ, {
                query: a
            })
        }
        ,
        this.isConnected = function() {
            return this._connectionManager.isConnected()
        }
        ,
        this.onRetryTimer = function(a) {
            if (console.log("RetryTimer tick tock"),
            !this._connectionManager.isConnected())
                return void console.log("onRetryTimer: xmpp is not connected");
            for (var b, d = (new Date).getTime(), e = {}, f = this._packetsInfo.length, g = 0; f > g; ++g) {
                b = this._packetsInfo[g];
                var h = b.sentTimestamp
                  , i = b.packetId;
                if (a || d - h >= this.RETRY_TIME_INTERVAL) {
                    var j = b.packet
                      , k = j.nodeTree.nodeName
                      , l = b.retryCount;
                    if (l < this.MAX_RETRY_COUNT) {
                        if ("message" == k) {
                            var m = $(j.nodeTree).find("convo-message");
                            m.length && ("message" === m.attr("message_type") && m.attr("message_type", "message_retry"),
                            console.log("retrying message with id:" + i),
                            this._connectionManager.sendPacket(j))
                        } else
                            "iq" == k ? (console.log("retrying iq with id:" + i),
                            this._connectionManager.sendIQ(j, b.callback, b.errback, b.timeout)) : (console.log("retrying " + k + " with id:" + i),
                            this._connectionManager.sendPacket(j));
                        b.sentTimestamp = d,
                        ++b.retryCount
                    } else
                        "message" == k ? (this.dispatch(c.MESSAGE_SEND_FAILED, j.tree()),
                        e[i] = !0,
                        console.log("message sending failed msgId:" + i)) : "iq" == k && ($(j.nodeTree).find("query[xmlns='convo:chat:history:messages']").length ? (this._connectionManager.logger.logLocally_errorOnServer("FINAL)chatHistoryMessagesIssue: chat history messages fetch failed packetId : " + i),
                        this.dispatch(c.MESSAGES_IQ_FAILED, j.tree()),
                        console.log("messages fetch failed packetId:" + i)) : (this.dispatch(c.CHATS_IQ_FAILED, j.tree()),
                        console.log("chat(s) fetch failed packetId:" + i)),
                        e[i] = !0)
                }
            }
            var n;
            for (var o in e)
                this._packetIdToPacketMap.hasOwnProperty(o) && (delete this._packetIdToPacketMap[o],
                n = !0);
            for (var p = f - 1; p >= 0; --p)
                b = this._packetsInfo[p],
                e[b.packetId] && this._packetsInfo.splice(p, 1);
            n && this.stopRetryTimerIfRequired()
        }
        ,
        this.destroy = function() {
            this._packetIdToPacketMap = {};
            for (var a; this._packetsInfo.length > 0; )
                a = this._packetsInfo.pop(),
                delete this._packetIdToPacketMap[a.packetId]
        }
    }
    ,
    f.chatsdk.XMPPCallsManager.prototype = new f.chatsdk.EventDispatcher,
    f.chatsdk.XMPPCallsManager.prototype.constructor = f.chatsdk.XMPPCallsManager;
    var f = f || {};
    f.chatsdk = f.chatsdk || {},
    f.chatsdk.ChatFilesManager = function(a, b) {
        var c = f.chatsdk
          , a = a
          , d = {};
        this.onFileLoaded = function(b, e) {
            if (console.log("=============onFileLoaded ========= "),
            b) {
                var f = new c.MessageFileInfo(e,!0);
                f.fileId = e.serverFileId,
                f.isUploading = !0;
                var g = a.sendMessage(f.name, b, f);
                g && g.fileInfo && g.fileInfo.isUploading && (d[e.fileUploadName] || (d[e.fileUploadName] = {
                    chat: b,
                    msg: g
                }))
            }
        }
        ,
        this.cancelUploadsInChat = function(a) {
            var b, e = [];
            for (var f in d)
                b = d[f],
                b && b.chat && a.chatId == b.chat.chatId && e.push(b);
            for (var g, h = e.length, i = 0; h > i; i++)
                b = e[i],
                g = b.msg,
                g && g.fileInfo && g.fileInfo.status != c.FileStatus.FS_SUCCESS && (delete d[g.fileInfo.fileNameId],
                g.fileInfo.status = c.FileStatus.FS_ERROR,
                a.cancelMessage(g))
        }
        ,
        this.onFileDataChanged = function(b) {
            var e, g, h;
            console.log("=============uploadFileVO.status ========= " + status),
            b.status == c.FileStatus.FS_SUCCESS || b.status == c.FileStatus.FS_CONVERSION_FAILED ? isNaN(b.serverFileId) || (h = d[b.fileUploadName],
            h && (delete d[b.fileUploadName],
            g = h.msg,
            e = h.chat,
            g.fileInfo && (g.fileInfo.isUploading = !1,
            g.fileInfo.type = b.type,
            g.fileInfo.fileFormat = b.fileFormat,
            g.fileInfo.fileId = b.serverFileId,
            g.fileInfo.size = b.size,
            g.fileInfo.width = b.width,
            g.fileInfo.height = b.height,
            g.fileInfo.originalName = b.originalName,
            g.fileInfo.thumbnailName = b.thumbnailName,
            g.fileInfo.thumbnail_name = b.thumbnailName,
            g.fileInfo.itemId = e.chatId,
            g.fileInfo.availablePreviews = b.available_previews,
            g.fileInfo.previewName = b.preview_name,
            g.fileInfo.noOfPages = b.no_of_pages,
            a.reSendMessageInChat(g, e),
            f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && e.dispatch(c.ChatEvents.FILE_UPLOADED, {
                message: g
            })))) : (b.status == c.FileStatus.FS_ERROR || b.status == c.FileStatus.FS_CONVERSION_REQ_FAILED) && (b.uploadProgress = 0,
            b.previousProgress = 0,
            h = d[b.fileUploadName],
            h && (g = h.msg,
            e = h.chat,
            e && g && a.markMessageFailedInChat(g, e)))
        }
        ,
        this.cancelMessage = function(a, b) {
            var c = a.fileInfo;
            c && delete d[c.fileNameId]
        }
    }
    ;
    var f = f || {};
    f.chatsdk = f.chatsdk || {},
    f.chatsdk.ChatManager = function(a, b, c, d, e) {
        function g(a, b) {
            f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && h.dispatch(f.chatsdk.ChatEvents.CHAT_STARTED, {
                chat: a,
                meta: b
            })
        }
        f.chatsdk.EventDispatcher.call(this);
        var h = this;
        this.DEFAULT_XMPP_COMPOSING_DELAY = 2e4,
        this.KDispatchIntervalTenSecs = 1e4,
        this.chats = [],
        this.unreadChatsCount = 0,
        this.usersManager = a;
        var i = new f.chatsdk.XMPPChatService(this.usersManager,this,b,c,this,d,e);
        this.searchKeyword = null ,
        this.isComposingTimerRunning = !1,
        this.loadedFromCache = !1,
        this.chatsTable = {},
        this.startChatWithUser = function(a) {
            return i.startChatWithUser(a)
        }
        ,
        this.openChatFromId = function(a, b, c, d, e) {
            var f = i.openChatFromId(a, b, c, d);
            g(f, e)
        }
        ,
        this.chatsForFilteredUsers = function(a) {
            return i.chatsForFilteredUsers(a)
        }
        ,
        this.openChatInSearch = function(a, b, c, d, e, f) {
            var h = i.openChatInSearch(a, b, c, d, e, f);
            g(h)
        }
        ,
        this.getUnreadChatsCount = function() {
            return i.getUnreadChatsCount()
        }
        ,
        this.chatSearchResultsReceived = function(a) {
            i.chatSearchResultsReceived(a)
        }
        ,
        this.startChatWithUsers = function(a) {
            return i.startChatWithUsers(a)
        }
        ,
        this.sendMessage = function(a, b) {
            b.isInSearch() && this.searchEnded(b, "newMessage"),
            i.sendMessage(a, b)
        }
        ,
        this.reSendMessageInChat = function(a, b) {
            i.reSendMessageInChat(a, b)
        }
        ,
        this.muteChat = function(a, b) {
            i.muteChat(a, b)
        }
        ,
        this.unMuteChat = function(a, b) {
            i.unMuteChat(a, b)
        }
        ,
        this.chatGainedFocus = function(a) {
            i.chatGainedFocus(a)
        }
        ,
        this.chatLostFocus = function(a) {
            i.chatLostFocus(a)
        }
        ,
        this.appFocusGained = function() {
            i.appFocusGained()
        }
        ,
        this.appFocusLost = function() {
            i.appFocusLost()
        }
        ,
        this.getChats = function() {
            return i._chats
        }
        ,
        this.chatOpened = function(a) {
            i.chatOpened(a)
        }
        ,
        this.chatRestored = function(a) {
            i.chatRestored(a)
        }
        ,
        this.getChat = function(a) {
            return i.getChat(a)
        }
        ,
        this.chatClosed = function(a) {
            i.chatClosed(a)
        }
        ,
        this.loadOlderMessagesInChat = function(a) {
            return i.loadOlderMessagesInChat(a)
        }
        ,
        this.loadOlderChats = function() {
            return i.loadOlderChats()
        }
        ,
        this.canLoadOlderChats = function() {
            return i.canLoadOlderChats()
        }
        ,
        this.chatRead = function(a) {
            i.chatRead(a)
        }
        ,
        this.messageRead = function(a, b) {
            i.messageRead(a, b)
        }
        ,
        this.inviteUsersInChat = function(a, b) {
            i.inviteUsersInChat(a, b)
        }
        ,
        this.updateParticipantsInChat = function(a, b) {
            i.updateParticipantsInChat(a, b)
        }
        ,
        this.getService = function() {
            return i
        }
        ,
        this.leaveChat = function(a) {
            i.leaveChat(a)
        }
        ,
        this.sendFilesInChat = function(a, b) {
            a.isInSearch() && this.searchEnded(a, "newMessage"),
            i.sendFilesInChat(a, b)
        }
        ,
        this.usersUpdated = function() {
            i.usersUpdated()
        }
        ,
        this.onFileDataChanged = function(a) {
            i.onFileDataChanged(a)
        }
        ,
        this.searchEnded = function(a, b) {
            i.searchEnded(a, b)
        }
        ,
        this.cancelMessageInChat = function(a, b) {
            i.cancelMessageInChat(a, b)
        }
        ,
        this.composingStarted = function(a) {
            i.composingStarted(a)
        }
        ,
        this.composingPaused = function(a) {
            i.composingPaused(a)
        }
        ,
        this.destroy = function() {
            i.destroy()
        }
    }
    ,
    f.chatsdk.ChatManager.prototype = new f.chatsdk.EventDispatcher,
    f.chatsdk.ChatManager.prototype.constructor = f.chatsdk.ChatManager;
    var f = f || {};
    f.chatsdk = f.chatsdk || {},
    f.chatsdk.ChatSearchManager = function(a, b) {
        function c(a, b) {
            var c = d.chatIdToChatMap[a];
            c && c.searchInfo && c.searchInfo.matchesReceived(b)
        }
        this.messagesLoader = a,
        this.chatIdToChatMap = b;
        var d = this;
        this.startSearchInChat = function(a) {
            a.isInSearch && a.searchInfo.start()
        }
        ,
        this.fetchMessages = function(a, b, c) {
            return this.messagesLoader.loadMessagesInChat(a, b, c, !0, !0)
        }
        ,
        this.onChatSearchResultsReceived = function(a) {
            if (a) {
                for (var b, d = a.chat_id, e = a.chatResults, f = [], g = e.length, h = 0; g > h; h++)
                    b = e[h],
                    f.push({
                        sequenceNumber: parseInt(b.seq_no),
                        messageId: b.msg_id
                    });
                c(d, f)
            }
        }
    }
    ;
    var f = f || {};
    f.chatsdk = f.chatsdk || {},
    f.chatsdk.ChatLocalStore = function(a, b, c) {
        function d(a) {
            u.setItem(m + a.chatId, a)
        }
        function e(a) {
            return u.hasItem(n + a)
        }
        function g(a) {
            return u.getItem(n + a)
        }
        function h(a, b) {
            return u.setItem(n + a, b)
        }
        function i(a, b) {
            if ("participants" === a) {
                var c, d = {};
                if (b)
                    for (var e in b)
                        b.hasOwnProperty(e) && (c = s.getUserById(e),
                        c || s.addInaccessibleUser(e, b[e].name),
                        d[e] = (new l.ChatParticipant).initialize(b[e]));
                b = d
            }
            return b
        }
        function j(a) {
            var b = g(a.chatId);
            if (b && b.length) {
                for (var c, d, e = b.length, f = [], h = 0; e > h; h++)
                    c = b[h],
                    d = (new l.ChatMessage).initialize(c),
                    d.invitees = c.invitees,
                    f.push(d);
                l.ChatUtils.sortMessages(f);
                var i = t.processFailedMessages(f, a);
                a.prependMessages(i)
            }
        }
        function k(a) {
            var b = [];
            if (a && a.length)
                for (var c, d = a.length, e = 0; d > e; e++)
                    c = (new l.Chat).initialize(a[e]),
                    c.thisUser = s.getThisUser(),
                    j(c),
                    b.push(c);
            return b
        }
        var l = f.chatsdk
          , m = ".chats."
          , n = ".messages."
          , o = 20
          , p = 20
          , q = 1
          , r = 2
          , s = a
          , t = c
          , u = b;
        this.selectChat = function(a) {
            return u.getItem(m + a)
        }
        ,
        this.selectAllChats = function(a) {
            function b(b) {
                if (0 === b.indexOf(c)) {
                    var d = u.getItem(b, !0, a);
                    return d.chatId ? d : (u.removeItem(b, !0),
                    null )
                }
            }
            var c = u.forgeKey(m);
            return u.getAllItems(b)
        }
        ,
        this.selectAllTypedChatsWithMessages = function() {
            var a = this.selectAllChats(i);
            return k(a)
        }
        ,
        this.updateChatAndMessagesIfRequired = function(a) {
            if (!a)
                throw new Error("Chat can not be null");
            var b = 0
              , c = this.selectChat(a.chatId)
              , f = a.messages;
            if (!c || c.lastMessageSequenceNumber < a.lastMessageSequenceNumber)
                d(a),
                c || (b = q),
                f && f.length && h(a.chatId, a.messages);
            else if (c.lastMessageSequenceNumber === a.lastMessageSequenceNumber && ((a.unreadCount < c.unreadCount || a.isMuted != c.isMuted) && (d(a),
            b = r),
            f && f.length > 0))
                if (e(a.chatId)) {
                    var i = g(a.chatId);
                    f.length > i.length && i.length < p && h(a.chatId, f)
                } else
                    h(a.chatId, f);
            return b
        }
        ,
        this.removeChat = function(a) {
            u.removeItem(m + a),
            u.removeItem(n + a)
        }
        ,
        this.truncateChats = function() {
            var a = this.selectAllChats();
            if (l.ChatUtils.sortChats(a),
            a && a.length > o)
                for (l.ChatUtils.sortChats(a); a.length > o; )
                    this.removeChat(a.pop().chatId)
        }
        ,
        this.saveAllChats = function(a) {
            for (var b = a ? a.length : 0, c = !1, d = !1, e = 0, f = 0; b > f; f++)
                e = this.updateChatAndMessagesIfRequired(a[f]),
                1 === e ? c = !0 : 2 === e && (d = !0);
            return c && this.truncateChats(),
            c || d
        }
    }
    ;
    var f = f || {};
    f.chatsdk = f.chatsdk || {},
    f.chatsdk.ChatsDiskManager = function(a) {
        function b() {
            if (!k || !j)
                throw new Error("Not Initialized Exception, Please provide user ID and account ID");
            return "com.convo.chat." + j + "." + k.userId + ".chats"
        }
        function c() {
            return b() + ".hb.timestamp"
        }
        function d() {
            p && localStorage.setItem(c(), p)
        }
        function e(a) {
            a && localStorage.setItem(b(), JSON.stringify(a))
        }
        function g(a, b) {
            switch (a) {
            case "messages":
                var c, d = [];
                if (b)
                    for (var e = b.length, f = 0; e > f; f++)
                        c = (new i.ChatMessage).initialize(b[f]),
                        c.invitees = b[f].invitees,
                        d.push(c);
                i.ChatUtils.sortMessages(d),
                b = d;
                break;
            case "participants":
                var g, h = {};
                if (b)
                    for (var j in b)
                        b.hasOwnProperty(j) && (g = n.getUserById(j),
                        g || n.addInaccessibleUser(j, b[j].name),
                        h[j] = (new i.ChatParticipant).initialize(b[j]));
                b = h
            }
            return b
        }
        function h(a) {
            var b = a.chats
              , c = a.unreadChatsCount;
            if (b) {
                for (var d, e, g = [], h = b.length, j = 0; h > j; j++) {
                    e = b[j],
                    d = (new f.chatsdk.Chat).initialize(e);
                    for (var l, m = e.messages.length, n = 0; m > n; n++)
                        l = e.messages[n],
                        d.messagesMap[l.messageId] || (d.messagesMap[l.messageId] = l,
                        d.messages.push(l));
                    d.thisUser = k,
                    g.push(d)
                }
                o.dispatch(i.ChatEvents.CHATS_REFRESHED, {
                    chats: g,
                    unreadChatsCount: c
                })
            }
        }
        var i = f.chatsdk;
        i.EventDispatcher.call(this);
        var j, k, l = 20, m = 20, n = a, o = this, p = 0;
        this.init = function(a, b) {
            j = a,
            k = b,
            this.loadFromLocalStore()
        }
        ,
        this.saveChats = function(a, b) {
            if (a) {
                for (var c = a.length, f = [], g = 0; c > g; g++) {
                    var h = a[g];
                    if (!(f.length > l) || h.isOpened) {
                        var j = h.messages;
                        if (h = h.copy(),
                        j) {
                            for (var k = [], n = j.length, o = n - 1; o >= 0 && k.length <= m; o--) {
                                var p = j[o];
                                p.fileInfo ? p.fileInfo.fileId && (p.fileInfo.file = null ,
                                k.push(p)) : k.push(p)
                            }
                            k.length > 0 ? (i.ChatUtils.sortMessages(k),
                            h.messages = k,
                            h.minSequenceNumber = k[0].getSequenceNumber(),
                            f.push(h)) : h.lastMessageSequenceNumber > 0 && f.push(h)
                        } else
                            h.lastMessageSequenceNumber > 0 && f.push(h)
                    }
                }
                f.length && (e({
                    chats: f,
                    unreadChatsCount: b
                }),
                d())
            }
        }
        ,
        this.setPreviousHeartBeatTimestamp = function(a) {
            a && (p = a)
        }
        ,
        this.getPreviousHeartBeatTimestamp = function() {
            return localStorage.getItem(c()) || 0
        }
        ,
        this.loadFromLocalStore = function() {
            var a, c = localStorage.getItem(b());
            try {
                a = JSON.parse(c, g)
            } catch (d) {
                console.log("ChatsDiskManager.loadFromLocalStore: JSON.parse error: " + d.message)
            }
            a && h(a)
        }
    }
    ,
    f.chatsdk.ChatsDiskManager.prototype = new f.chatsdk.EventDispatcher,
    f.chatsdk.ChatsDiskManager.prototype.constructor = f.chatsdk.ChatsDiskManager;
    var f = f || {};
    f.chatsdk = f.chatsdk || {},
    f.chatsdk.ChatsLoader = function(a, b, c, d, e, g, h) {
        function i(a, b) {
            var c = j.ChatUtils.generateUniqueId()
              , d = $iq({
                to: n.getConvoChatJid(),
                type: "set",
                id: c
            }).c(k.QUERY, {
                xmlns: l.CHAT_MUTE
            }).c(k.CHAT, {
                id: a.chatId,
                action: b
            });
            n.xmppCallsManager.sendIQ(d, c, !0)
        }
        var j = f.chatsdk
          , k = j.Constants.TAG
          , l = j.Constants.XMLNS
          , m = 20;
        this.CHATS_FETCH_PAGE_SIZE = 20,
        this.CHAT_FETCH_PAGE_SIZE = 20,
        this._canLoadMoreChats = !1,
        this.KDispatchIntervalFiveSecs = 5e3,
        this._convoChatJid = null ,
        this.fetchChatsCallInprogress = !1,
        this.fetchCallFromIndex = 0,
        this.fetchCallToIndex = 0,
        this.chatIdToChatMap = b,
        this._unreadChatsCount = 0,
        this.delegates = [],
        this.messagesDiskManager = g,
        this.xmppCallsManager = e;
        var n = this;
        this.xmppCallsManager.addListener(j.ChatEvents.CHAT_HISTORY_RECEIVED, function(a) {
            n.processReceivedChats(a)
        }),
        this.xmppCallsManager.addListener(j.ChatEvents.CHAT_READ, function(a) {
            n.processChatMarkRead(a)
        }),
        this.xmppCallsManager.addListener(j.ChatEvents.MUTE_STATUS_CHANGED, function(a) {
            n.processMuteChangeForQuery(a)
        }),
        this.xmppCallsManager.addListener(j.ChatEvents.CHAT_INFO_RECEIVED, function(a) {
            if (a) {
                var b = $(a).find(k.CHAT)[0];
                if (b) {
                    var c = n.processChatXML(b, !0, !0);
                    n.processChatInfoReceived(c)
                }
            }
        }),
        this.xmppCallsManager.addListener(j.ChatEvents.CHATS_IQ_FAILED, function(a) {
            n.callsManagerChatsIqFailed(a)
        }),
        this.deltaFetcher = h,
        this.deltaFetcher.addListener(j.ChatEvents.HEARTBEAT_RECEIVED, function(a) {
            n.deltaFetcherReceivedChatsXML(a.chatsXML, a.updatedChats, a.hasRecentChats)
        }),
        this.deltaFetcher.addListener(j.ChatEvents.UNREAD_COUNT_CHANGED, function(a) {
            n.updateUnreadChatsCount(a)
        }),
        this.timestampManager = c,
        this.usersManager = a,
        this.chatManager = d,
        this.fetchTime = 0,
        this.startChatWithUser = function(a) {
            var b = a.userId
              , c = this.xmppCallsManager.getJid()
              , d = j.ChatUtils.generateChatId(c, b)
              , e = this.chatIdToChatMap[d];
            if (!e) {
                e = new j.Chat;
                var f = this.usersManager.getThisUser();
                e.setInfo(d, a.getDisplayName(), null , j.ChatType.P2P, 0, 0, 0, !1, f),
                e.addParticipant(new j.ChatParticipant(a.userId,a.getDisplayName(),j.ParticipantStatus.JOINED,0,this.timestampManager.UTCTimestamp())),
                e.addParticipant(new j.ChatParticipant(f.userId,f.getDisplayName(),j.ParticipantStatus.JOINED,0,this.timestampManager.UTCTimestamp())),
                this.chatIdToChatMap[e.chatId] = e,
                this.loadChat(d)
            }
            return e
        }
        ,
        this.startChatWithUsers = function(a) {
            if (!a || 0 === a.length)
                return console.log("startChatWithUsers: users array is null or empty."),
                null ;
            if (1 === a.length)
                return console.log("startChatWithUsers: only 1 user in users array, starting p2p chat instead."),
                this.startChatWithUser(a[0]);
            var b = j.ChatUtils.generateUniqueId();
            console.log("startChatWithUsers: chat.chatId:" + b);
            var c = this.chatIdToChatMap[b];
            if (!c) {
                var d = this.usersManager.getThisUser();
                c = new j.Chat,
                c.setInfo(b, null , null , j.ChatType.GROUP, 0, 0, 0, !1, d);
                var e = this.timestampManager.UTCTimestamp();
                c.addParticipant(new j.ChatParticipant(d.userId,d.getDisplayName(),j.ParticipantStatus.JOINED,0,e)),
                a.forEach(function(a) {
                    c.addParticipant(new j.ChatParticipant(a.userId,a.getDisplayName(),j.ParticipantStatus.JOINED,0,e))
                }),
                this.chatIdToChatMap[b] = c
            }
            return c
        }
        ,
        this.addDelegate = function(a) {
            this.delegates.push(a)
        }
        ,
        this.chatsCacheRefreshed = function(a) {
            a && a.length >= this.CHATS_FETCH_PAGE_SIZE && (this._canLoadMoreChats = !0)
        }
        ,
        this.refreshChats = function() {
            var a = !1;
            return this.fetchChatsCallInprogress || (a = !0,
            this.fetchCallFromIndex = 0,
            this.fetchCallToIndex = this.CHATS_FETCH_PAGE_SIZE,
            this.fetchChats(!0)),
            a
        }
        ,
        this.fetchChats = function(a) {
            this.fetchChatsCallInprogress = !0;
            var b = j.ChatUtils.generateUniqueId()
              , c = {
                xmlns: l.HISTORY_CHATS
            };
            a && (c["basic-info"] = "true",
            this.fetchTime = (new Date).getTime());
            var d = this
              , e = $iq({
                to: d.getConvoChatJid(),
                type: "get",
                id: b
            }).c(k.QUERY, c).c(k.RANGE, {
                from_index: d.fetchCallFromIndex,
                to_index: d.fetchCallToIndex
            });
            this.xmppCallsManager.sendIQ(e, b, !0)
        }
        ,
        this.processDeltaFetcherChatXML = function(a, b, c, d) {
            var e = this.processChatXML(a, c, d)
              , f = $(a).find(k.MESSAGES);
            return f.length && this.delegates.forEach(function(a) {
                "function" == typeof a.chatsLoaderReceiveHeartBeatXMLMessagesForChat && a.chatsLoaderReceiveHeartBeatXMLMessagesForChat(f, e, b)
            }),
            e
        }
        ,
        this.updateUnreadChatsCount = function(a) {
            this.delegates.forEach(function(b) {
                "function" == typeof b.chatsLoaderReceivedUnreadChatsCount && b.chatsLoaderReceivedUnreadChatsCount(a)
            })
        }
        ,
        this.deltaFetcherReceivedChatsXML = function(a, b, c) {
            var d = !1
              , e = [];
            c && a.length === m && (d = !0,
            this._canLoadMoreChats = !0),
            a.length && a.find("chat").each(function() {
                var a = $(this)
                  , b = n.processDeltaFetcherChatXML(a, c, !d, !0);
                d && e.push(b)
            }),
            b.length && b.find("chat").each(function() {
                var a = $(this)
                  , b = n.processDeltaFetcherChatXML(a, c, !0, !1);
                d && e.push(b)
            }),
            d && this.delegates.forEach(function(a) {
                "function" == typeof a.chatsLoaderChatsRefreshed && a.chatsLoaderChatsRefreshed(e)
            })
        }
        ,
        this.processReceivedChats = function(a) {
            a = $(a);
            var b = a.find("basic-info");
            b && (b = $(b),
            this.timestampManager.initializeIfRequired(parseInt(b.attr("timestamp")), this.fetchTime),
            this.delegates.forEach(function(a) {
                "function" == typeof a.chatsLoaderReceivedUnreadChatsCount && a.chatsLoaderReceivedUnreadChatsCount(b.attr("unread_chats_count"))
            }, this));
            var c = 0 === this.fetchCallFromIndex && this.fetchCallToIndex === this.CHATS_FETCH_PAGE_SIZE
              , d = 0
              , e = []
              , f = []
              , g = this
              , h = a.find("chats")[0];
            if (!h)
                return console.warn("error in chats loading"),
                void (this.fetchChatsCallInprogress = !1);
            $(h).find(k.CHAT).each(function() {
                var a = $(this);
                d++;
                var b, c, h = a.attr("id"), i = a.attr("last_message_time"), k = a.attr("unread_count"), l = j.ChatUtils.unescape(a.attr("last_message")), m = a.attr("title"), n = "chat" === a.attr("type") ? j.ChatType.P2P : j.ChatType.GROUP, o = "true" === a.attr("mute"), p = a.attr("sequence_number"), q = g.chatIdToChatMap[h];
                q ? (c = !1,
                (q.lastMessageTimestamp != i || q.unreadCount != k || q.lastMessageSequenceNumber != p || q.isMuted != o) && (q.unreadCount != k && f.push(q),
                q.update(m, l, k, i, o),
                q.lastMessageSequenceNumber = p),
                b = a.find("participants")[0],
                b && g.processParticipantsForChat(b, q, c)) : (c = !0,
                q = new j.Chat,
                q.setInfo(h, m, l, n, k, i, p, o, g.usersManager.getThisUser()),
                b = a.find("participants")[0],
                b && g.processParticipantsForChat(b, q, c),
                g.chatIdToChatMap[q.chatId] = q),
                e.push(q)
            }),
            this._canLoadMoreChats = d >= this.CHATS_FETCH_PAGE_SIZE,
            j.ChatUtils.sortChats(e);
            var i = this.delegates.length;
            if (c)
                for (var l = 0; i > l; l++) {
                    var m = this.delegates[l];
                    "function" == typeof m.chatsLoaderChatsRefreshed && m.chatsLoaderChatsRefreshed(e, f)
                }
            else
                for (var l = 0; i > l; l++) {
                    var m = this.delegates[l];
                    "function" == typeof m.chatsLoaderChatsLoaded && m.chatsLoaderChatsLoaded(e, f)
                }
            this.fetchChatsCallInprogress = !1
        }
        ,
        this.processChatMarkRead = function(a) {
            var b = $(a).find(k.CHAT);
            if (b.length) {
                var c = b.attr("id");
                console.log("processChatMarkRead: chat.chatId:" + c);
                var d = this.chatIdToChatMap[c];
                if (d) {
                    var e = d.participantForId(this.usersManager.getThisUser().userId);
                    if (e && (e.lastSeenMessageSequenceNumber = d.lastMessageSequenceNumber),
                    d.unreadCount > 0)
                        for (var f = this.delegates.length, g = 0; f > g; g++) {
                            var h = this.delegates[g];
                            "function" == typeof h.chatsLoaderChatMarkedRead && h.chatsLoaderChatMarkedRead(d)
                        }
                }
            } else
                console.log("processChatMarkRead: chatElement not found")
        }
        ,
        this.muteChat = function(a, b) {
            null  == a || a.isMuted || a.isMuteStatusUpdateInProgress || (b ? (a.isMuteStatusUpdateInProgress = !0,
            i(a, j.MuteAction.MUTE)) : a.isMuted = !0)
        }
        ,
        this.unMuteChat = function(a, b) {
            null  != a && a.isMuted && !a.isMuteStatusUpdateInProgress && (b ? (a.isMuteStatusUpdateInProgress = !0,
            i(a, j.MuteAction.UNMUTE)) : a.isMuted = !1)
        }
        ,
        this.processMuteChangeForQuery = function(a) {
            if (!a)
                return null ;
            var b, c, d = $(a).find(k.CHAT);
            if (d.length && (b = d.attr("id"),
            c = d.attr("action")),
            b) {
                var e = this.chatIdToChatMap[b];
                if (e) {
                    e.isMuteStatusUpdateInProgress = !1;
                    var f = !1;
                    e.isMuted && c == j.MuteAction.UNMUTE ? (e.isMuted = !1,
                    f = !0) : e.isMuted || c != j.MuteAction.MUTE || (e.isMuted = !0,
                    f = !0),
                    f && this.delegates.forEach(function(a) {
                        "function" == typeof a.chatsLoaderUpdatedChatMuteStatus && a.chatsLoaderUpdatedChatMuteStatus(e)
                    })
                }
            }
        }
        ,
        this.processParticipantsForChat = function(a, b, c) {
            var d = this;
            a = $(a),
            a.find("participant").each(function() {
                var a, e = $(this), f = e.attr("id"), g = d.usersManager.getUserById(f);
                g || (g = d.usersManager.addInaccessibleUser(f, e.attr("name")));
                var h = g.getDisplayName()
                  , i = "joined" == e.attr("status") ? j.ParticipantStatus.JOINED : j.ParticipantStatus.LEFT
                  , k = parseInt(e.attr("last_seen_message_sequence_number"))
                  , l = parseInt(e.attr("status_timestamp"));
                c ? (a = new j.ChatParticipant(f,h,i,k,l),
                b.addParticipant(a)) : (a = b.participantForId(f),
                a ? a.update(h, i, k, l) : (a = new j.ChatParticipant(f,h,i,k,l),
                b.addParticipant(a)))
            })
        }
        ,
        this.getConvoChatJid = function() {
            return this._convoChatJid || (this._convoChatJid = "convochat@" + this.xmppCallsManager.getDomain()),
            this._convoChatJid
        }
        ,
        this.loadChat = function(a) {
            var b = j.ChatUtils.generateUniqueId()
              , c = $iq({
                to: n.getConvoChatJid(),
                type: "get",
                id: b
            }).c(k.QUERY, {
                xmlns: l.CHAT_INFO
            }).c(k.CHAT, {
                id: a
            });
            this.xmppCallsManager.sendIQ(c, b, !0)
        }
        ,
        this.appFocusGained = function() {
            var a = j.ChatUtils.generateUniqueId()
              , b = $iq({
                to: "convop@" + this.xmppCallsManager.getDomain(),
                type: "set",
                id: a
            }).c(k.QUERY, {
                xmlns: l.FOCUS_GAIN
            });
            this.xmppCallsManager.sendIQ(b, a, !0)
        }
        ,
        this.appFocusLost = function() {
            var a = j.ChatUtils.generateUniqueId()
              , b = $iq({
                to: "convop@" + this.xmppCallsManager.getDomain(),
                type: "set",
                id: a
            }).c(k.QUERY, {
                xmlns: l.FOCUS_LOSE
            });
            this.xmppCallsManager.sendIQ(b, a, !0)
        }
        ,
        this.processChatXML = function(a, b, c) {
            a = $(a);
            var d, e = a.attr("id"), f = a.attr("last_message_timestamp") || a.attr("last_message_time");
            if (f) {
                var g = parseInt(f)
                  , h = parseInt(a.attr("unread_count"))
                  , i = j.ChatUtils.unescape(a.attr("last_message"))
                  , k = a.attr("title")
                  , l = "chat" == a.attr("type") ? j.ChatType.P2P : j.ChatType.GROUP
                  , m = "true" == a.attr("mute")
                  , n = parseInt(a.attr("sequence_number"));
                console.log("processChatXML: chat.chatId:" + e);
                var o, p;
                if (d = this.chatIdToChatMap[e],
                d ? ((d.lastMessageTimestamp != g || d.unreadCount != h || d.lastMessageSequenceNumber != n || d.isMuted != m) && (p = d.unreadCount != h,
                d.update(k, i, h, g, m),
                d.lastMessageSequenceNumber = n),
                o = a.find("participants")[0],
                o && this.processParticipantsForChat(o, d, !1)) : c && (d = new j.Chat,
                d.setInfo(e, k, i, l, h, g, n, m, this.usersManager.getThisUser()),
                o = a.find("participants")[0],
                o && this.processParticipantsForChat(o, d, !0),
                this.chatIdToChatMap[d.chatId] = d),
                b && d)
                    for (var q = this.delegates.length, r = 0; q > r; r++) {
                        var s = this.delegates[r];
                        "function" == typeof s.chatsLoaderLoadedChat && s.chatsLoaderLoadedChat(d, null , p, c)
                    }
            }
            return d
        }
        ,
        this.processChatInfoReceived = function(a) {
            for (var b = this.delegates.length, c = 0; b > c; c++) {
                var d = this.delegates[c];
                "function" == typeof d.chatInfoReceived && d.chatInfoReceived(a)
            }
        }
        ,
        this.loadMoreChatsFromIndex = function(a) {
            var b = !1;
            return console.log("loadMoreChatsFromIndex: fromIndex:" + a + ",fetchChatsCallInprogress:" + this.fetchChatsCallInprogress),
            this.fetchChatsCallInprogress || (b = !0,
            this.fetchCallFromIndex = a,
            this.fetchCallToIndex = this.fetchCallFromIndex + this.CHATS_FETCH_PAGE_SIZE,
            this.fetchChats(!1)),
            b
        }
        ,
        this.canLoadMoreChats = function() {
            return this._canLoadMoreChats
        }
        ,
        this.processChatMarkReadFailedForQuery = function(a) {
            var b = $(a).find(k.CHAT);
            if (b.length) {
                var c = b.attr("id");
                console.log("processChatMarkReadFailedForQuery: chat.chatId:" + c);
                var d = this.chatIdToChatMap[c];
                if (d)
                    for (var e = this.delegates.length, f = 0; e > f; f++) {
                        var g = this.delegates[f];
                        "function" == typeof g.chatsLoaderMarkChatReadFailed && g.chatsLoaderMarkChatReadFailed(d)
                    }
            } else
                console.log("processChatMarkReadFailedForQuery: chatElement not found")
        }
        ,
        this.processChatLoadFailedForQuery = function(a) {
            var b = $(a).find(k.CHAT);
            if (b.length) {
                var c = b.attr("id");
                if (console.log("processChatLoadFailedForQuery: chat.chatId:" + c),
                c)
                    for (var d = this.delegates.length, e = 0; d > e; e++) {
                        var f = this.delegates[e];
                        "function" == typeof f.chatsLoaderChatLoadFailedForId && f.chatsLoaderChatLoadFailedForId(c)
                    }
            } else
                console.log("processChatLoadFailedForQuery: chatElement not found")
        }
        ,
        this.processMuteFailedForQuery = function(a) {
            var b = $(a).find(k.CHAT);
            if (b.length) {
                var c = b.attr("id");
                console.log("processChatLoadFailedForQuery: chat.chatId:" + c);
                var d = this.chatIdToChatMap[c];
                if (d) {
                    d.isMuteStatusUpdateInProgress = !1;
                    for (var e = this.delegates.length, f = 0; e > f; f++) {
                        var g = this.delegates[f];
                        "function" == typeof g.chatsLoaderMuteChatFailed && g.chatsLoaderMuteChatFailed(d)
                    }
                }
            } else
                console.log("processChatLoadFailedForQuery: chatElement not found")
        }
        ,
        this.chatRead = function(a) {
            if (console.log("chatRead: chat.chatId:" + a.chatId + ",unreadCount:" + a.unreadCount),
            a.unreadCount > 0) {
                var b = this
                  , c = j.ChatUtils.generateUniqueId()
                  , d = $iq({
                    to: b.getConvoChatJid(),
                    type: "set",
                    id: c
                }).c(k.QUERY, {
                    xmlns: l.CHAT_READ
                }).c(k.CHAT, {
                    id: a.chatId
                });
                e.sendIQ(d, c, !0)
            }
        }
        ,
        this.callsManagerChatsIqFailed = function(a) {
            if ($(a.nodeTree).find("query[xmlns='" + l.HISTORY_CHATS + "']")[0]) {
                this.fetchChatsCallInprogress = !1;
                for (var b = this.delegates.length, c = 0; b > c; c++) {
                    var d = this.delegates[c];
                    "function" == typeof d.chatsLoaderChatsLoadFailed && d.chatsLoaderChatsLoadFailed()
                }
            } else
                $(a.nodeTree).find("query[xmlns='" + l.CHAT_READ + "']")[0] ? this.processChatMarkReadFailedForQuery($(a.nodeTree).find("query[xmlns='" + l.CHAT_READ + "']")[0]) : $(a.nodeTree).find("query[xmlns='" + l.CHAT_INFO + "']")[0] ? this.processChatLoadFailedForQuery($(a.nodeTree).find("query[xmlns='" + l.CHAT_INFO + "']")[0]) : $(a.nodeTree).find("query[xmlns='" + l.CHAT_MUTE + "']")[0] && this.processMuteFailedForQuery($(a.nodeTree).find("query[xmlns='" + l.CHAT_MUTE + "']")[0])
        }
    }
    ;
    var f = f || {};
    f.chatsdk = f.chatsdk || {},
    f.chatsdk.CnvLocalStore = function(a, b) {
        var c, d = a, e = b;
        this.forgeKey = function(a) {
            if (!c) {
                if (!e || !d)
                    throw new Error("Not Initialized Exception, Please provide user ID and account ID");
                c = "com.convo.chat." + d + "." + e.userId
            }
            return c + (a ? a : "")
        }
        ,
        this.setItem = function(a, b) {
            b && ("string" != typeof b && (b = JSON.stringify(b)),
            localStorage.setItem(this.forgeKey(a), b))
        }
        ,
        this.removeItem = function(a, b) {
            localStorage.removeItem(b ? a : this.forgeKey(a))
        }
        ,
        this.getItem = function(a, b, c) {
            var d, e = localStorage.getItem(b ? a : this.forgeKey(a));
            try {
                d = JSON.parse(e, c)
            } catch (f) {
                console.log("loadFromLocalStore: JSON.parse error: " + f.message),
                d = e
            }
            return d
        }
        ,
        this.getAllItems = function(a) {
            var b = [];
            for (var c in localStorage)
                if (localStorage.hasOwnProperty(c)) {
                    var d = a(c);
                    d && b.push(d)
                }
            return b
        }
        ,
        this.hasItem = function(a) {
            return localStorage.hasOwnProperty(this.forgeKey(a))
        }
    }
    ;
    var f = f || {};
    f.chatsdk = f.chatsdk || {},
    f.chatsdk.LocalStoreManager = function(a) {
        function b() {
            t && t > j.getItem(p) && j.setItem(p, t)
        }
        function c(a) {
            if (a) {
                for (var c = a.length, d = [], f = 0; c > f; f++) {
                    var g = a[f];
                    if (!(d.length > l) || g.isOpened) {
                        var h = g.messages;
                        if (g = g.copy(),
                        h) {
                            for (var j = [], k = h.length, n = k - 1; n >= 0 && j.length < m; n--) {
                                var o = h[n];
                                o.getSequenceNumber() > 0 && (j.splice(0, 0, o),
                                o.fileInfo && (o.fileInfo.file = null ))
                            }
                            j.length > 0 ? (e.ChatUtils.sortMessages(j),
                            g.messages = j,
                            g.minSequenceNumber = j[0].getSequenceNumber(),
                            d.push(g)) : g.lastMessageSequenceNumber > 0 && d.push(g)
                        } else
                            g.lastMessageSequenceNumber > 0 && d.push(g)
                    }
                }
                d.length && i.saveAllChats(d) && b()
            }
        }
        function d() {
            var a = _.values(u)
              , b = new e.ProfileClock("LocalStoreManager.cacheCall for " + (a ? a.length : 0) + " chat(s)");
            c(a),
            u = {},
            k = null ,
            b.end()
        }
        var e = f.chatsdk;
        e.EventDispatcher.call(this);
        var g, h, i, j, k, l = 20, m = 20, n = 1e4, o = 8e3, p = ".hb.timestamp", q = ".unread_chats_count_v2", r = a, s = this, t = 0, u = {};
        this.appTabsService = null ;
        var v = !0;
        this.init = function(a, b) {
            h = a,
            g = b,
            j = new e.CnvLocalStore(h,g.getThisUser()),
            i = new e.ChatLocalStore(g,j,r),
            u = {},
            k && (clearTimeout(k),
            k = null ),
            v = !1,
            this.loadFromLocalStore()
        }
        ,
        this.destroy = function() {
            v = !0,
            h = null ,
            g = null ,
            j = null ,
            i = null ,
            u = {},
            k && (clearTimeout(k),
            k = null )
        }
        ,
        this.chatsUpdated = function(a, b) {
            if (a && a.length && !v) {
                for (var c, f = a.length, g = !1, h = 0; f > h; h++)
                    c = a[h],
                    e.ChatUtils.isAdminModeONAndOrThisUserIsNotInChatParticipants(c) || u.hasOwnProperty(c.chatId) || (u[c.chatId] = c,
                    g = !0);
                if (g)
                    if (b)
                        clearTimeout(k),
                        k = null ,
                        d();
                    else if (!k) {
                        var i = this.appTabsService && this.appTabsService.isThisTabLastActiveTab() ? o : n;
                        k = setTimeout(d, i)
                    }
            }
        }
        ,
        this.setPreviousHeartBeatTimestamp = function(a) {
            a && !v && (t = a)
        }
        ,
        this.getPreviousHeartBeatTimestamp = function() {
            return v ? 0 : (t || (t = j.getItem(p) || 0),
            t)
        }
        ,
        this.updateUnreadChatsCount = function(a) {
            if (!v) {
                var b = this.selectUnreadChatsCount();
                b !== a && j.setItem(q, a)
            }
        }
        ,
        this.selectUnreadChatsCount = function() {
            return v ? 0 : j.getItem(q)
        }
        ,
        this.loadFromLocalStore = function() {
            if (!v) {
                var a = new e.ProfileClock("LocalStoreManager.loadFromLocalStore")
                  , b = i.selectAllTypedChatsWithMessages();
                s.dispatch(e.ChatEvents.CHATS_CACHE_REFRESHED, {
                    chats: b,
                    unreadChatsCount: this.selectUnreadChatsCount()
                }),
                a.end()
            }
        }
    }
    ,
    f.chatsdk.LocalStoreManager.prototype = new f.chatsdk.EventDispatcher,
    f.chatsdk.LocalStoreManager.prototype.constructor = f.chatsdk.LocalStoreManager;
    var f = f || {};
    f.chatsdk = f.chatsdk || {},
    f.chatsdk.ConnectionManager = function() {
        function b(a) {
            a !== x && (x = a)
        }
        function c() {
            console.log("Strophe is connecting."),
            b(Strophe.Status.CONNECTING),
            A = setTimeout(function() {
                n.isConnected() || (y && y.reset(),
                P())
            }, r)
        }
        function d() {
            A && (clearTimeout(A),
            A = null )
        }
        function e() {
            console.warn("Strophe is disconnected."),
            d();
            var a = x !== Strophe.Status.DISCONNECTING;
            y && y.reset();
            var c = x;
            b(Strophe.Status.DISCONNECTED),
            c !== Strophe.Status.DISCONNECTED && c !== Strophe.Status.CONNECTING && c !== s && n.dispatch(f.chatsdk.ChatEvents.DISCONNECTED),
            k.isConnected() && a && P()
        }
        function g() {
            return console.log("Strophe is connected."),
            d(),
            y ? (B = q,
            x = Strophe.Status.CONNECTED,
            l = !0,
            void n.dispatch(f.chatsdk.ChatEvents.CONNECTED)) : void (k && k.isConnected() && R())
        }
        function h() {
            J || (y && y.authenticated ? (console.log("Strophe is still CONNECTED, ConnectivityUp"),
            b(Strophe.Status.CONNECTED),
            l = !1,
            n.dispatch(f.chatsdk.ChatEvents.CONNECTED)) : y && y.connected || (console.log("Strophe is DISCONNECTED, ConnectivityUp"),
            P(!0)))
        }
        function i() {
            J || n.isConnected() && (b(Strophe.Status.DISCONNECTED),
            console.log("Strophe is DISCONNECTED, Dispatching DISCONNECTED because ConnectivityDown"),
            n.dispatch(f.chatsdk.ChatEvents.DISCONNECTED))
        }
        f.chatsdk.EventDispatcher.call(this);
        var j, k, l = !1, m = "bosh", n = this, o = "socket", p = 6e4, q = 1e3, r = 3e4, s = 9, t = "http", u = "https", v = !1, w = null , x = Strophe.Status.DISCONNECTED, y = null , z = null , A = null , B = q, C = null , D = null , E = null , F = 20, G = 1, H = !1, I = !0, J = !1;
        $(a).unload(function() {
            n.disconnect(!0)
        });
        var K = function() {
            y && (n.disconnect(),
            y = null ,
            w = null ,
            console.log("Connection Disposed"),
            console.log(M()))
        }
          , L = function() {
            (!H || w && w !== m) && I ? I && w !== m && (y = new Strophe.Connection(C),
            w = m) : w = o
        }
          , M = function() {
            if ("function" == typeof Error.captureStackTrace) {
                var a = {};
                return Error.captureStackTrace(a, M),
                a.stack
            }
            return "Error.captureStackTrace not supported."
        }
          , N = function() {
            z = null ,
            x === s && (k && k.isConnected() ? R() : b(Strophe.Status.DISCONNECTED))
        }
          , O = function(a) {
            return k && !k.isConnected() ? void b(Strophe.Status.DISCONNECTED) : (b(s),
            z && clearTimeout(z),
            void (a ? (B = q,
            N()) : (B *= 2,
            B >= p && (B = q),
            z = setTimeout(N, B))))
        }
          , P = function(a) {
            K(),
            O(a)
        }
          , Q = function(a) {
            try {
                switch (a) {
                case Strophe.Status.CONNECTING:
                    c();
                    break;
                case Strophe.Status.AUTHENTICATING:
                    console.log("Strophe is AUTHENTICATING.");
                    break;
                case Strophe.Status.AUTHFAIL:
                    console.warn("Strophe AUTHFAIL.");
                    break;
                case Strophe.Status.ERROR:
                    console.warn("Strophe ERROR.");
                    break;
                case Strophe.Status.ATTACHED:
                    console.log("Strophe is ATTACHED.");
                    break;
                case Strophe.Status.DISCONNECTING:
                    console.log("Strophe is disconnecting."),
                    v = !1;
                    break;
                case Strophe.Status.DISCONNECTED:
                case Strophe.Status.CONNFAIL:
                    e();
                    break;
                case Strophe.Status.CONNECTED:
                    g()
                }
            } catch (b) {
                console.error(b.stack)
            }
        }
          , R = function() {
            J || (L(),
            y.connect(D, E, Q, F, G, null ))
        }
        ;
        this.disconnect = function(a) {
            x !== Strophe.Status.CONNECTING && y.connected ? x === Strophe.Status.CONNECTED && (x = Strophe.Status.DISCONNECTING,
            y.disconnect()) : (y.reset(),
            x = Strophe.Status.DISCONNECTED)
        }
        ,
        this.logout = function() {
            K(),
            j = null ,
            J = !0
        }
        ,
        this.logger = null ,
        this.clientInstanceId = null ,
        this.uId,
        this.connect = function(a, b, c, d, e, g, l, m) {
            x !== Strophe.Status.CONNECTED && x === Strophe.Status.DISCONNECTED && (J = !1,
            j = d,
            D = f.chatsdk.ChatUtils.makeJid(a, b, j, m),
            C = (g ? u : t) + "://" + e + "/http-bind/",
            E = c,
            k || (k = l,
            k.on("up", h),
            k.on("down", i)),
            k.isConnected() && R())
        }
        ,
        this.isConnected = function() {
            return x === Strophe.Status.CONNECTED
        }
        ,
        this.sendPacket = function(a) {
            this.isConnected() && y.send(a)
        }
        ,
        this.sendIQ = function(a, b, c, d) {
            if (this.isConnected()) {
                var e = a.nodeTree.nodeName;
                "presence" == e && this.logger && this.logger.logLocally_errorOnServer("userId: " + this.uId + " tabId: " + this.clientInstanceId + " " + a),
                y.sendIQ(a, b, c, d)
            }
        }
        ,
        this.getDomain = function() {
            if (j)
                return j;
            throw new Error("Domain is null")
        }
        ,
        this.getJid = function() {
            return y ? y.jid : null 
        }
        ,
        this.addHandler = function(a, b, c, d, e, f) {
            l && y.addHandler(a, b, c, d, e, f)
        }
    }
    ,
    f.chatsdk.ConnectionManager.prototype = new f.chatsdk.EventDispatcher,
    f.chatsdk.ConnectionManager.prototype.constructor = f.chatsdk.ConnectionManager;
    var f = f || {};
    f.chatsdk = f.chatsdk || {},
    f.chatsdk.DeltaFetcher = function(a, b, c, d) {
        function e(a, b) {
            var c, d = $iq({
                to: t(),
                type: "get",
                id: a
            }).c(h.QUERY, {
                xmlns: b ? i.RECENT_CHATS : i.HEARTBEAT,
                last_timestamp: m.getPreviousHeartBeatTimestamp(),
                basic_info: !0
            });
            b && (d.c(h.CHATS),
            c = $build(h.CHATS_FOR_STATUS_UPDATE));
            for (var e in n)
                if (n.hasOwnProperty(e)) {
                    var f = n[e];
                    f.lastMessageTimestamp > m.getPreviousHeartBeatTimestamp() && d.c(h.CHAT, {
                        id: f.chatId,
                        sequence_number: f.lastMessageSequenceNumber
                    }).up(),
                    b && (f.unreadCount > 0 || f.chatType === g.ChatType.P2P && Object.keys(f.participants).length > 0 && f.getOtherParticipant().lastSeenMessageSequenceNumber < f.lastMessageSequenceNumber) && c.c(h.CHAT, {
                        id: f.chatId
                    }).up()
                }
            return b && (d.up(),
            d.cnode(c.tree())),
            d
        }
        var g = f.chatsdk;
        g.EventDispatcher.call(this);
        var h = g.Constants.TAG
          , i = g.Constants.XMLNS
          , j = 6e4
          , k = d
          , l = a
          , m = this;
        l.addListener(g.ChatEvents.HEARTBEAT_RECEIVED, function(a) {
            m.callsManagerReceivedHeartbeatQuery(a.query, !1)
        }),
        l.addListener(g.ChatEvents.RECENT_CHATS_RECEIVED, function(a) {
            m.callsManagerReceivedHeartbeatQuery(a.query, !0)
        });
        var n = c
          , o = b
          , p = null 
          , q = null 
          , r = 0
          , s = 0;
        this.setPreviousHeartBeatTimestamp = function(a) {
            s = a,
            k.setPreviousHeartBeatTimestamp(a)
        }
        ,
        this.getPreviousHeartBeatTimestamp = function() {
            return s || (s = k.getPreviousHeartBeatTimestamp()),
            s
        }
        ,
        this.startHeartBeat = function() {
            if (console.log("startHeartBeat"),
            p)
                console.log("heartbeat timer already running");
            else {
                this.setPreviousHeartBeatTimestamp(o.UTCTimestamp());
                var a = this;
                p = setInterval(function() {
                    console.log("Heartbeat Timer Tick"),
                    a.sendHeartbeat()
                }, j),
                console.log("heartbeat timer started")
            }
        }
        ,
        this.stopHeartBeat = function() {
            console.log("stopHeartBeat"),
            p && (clearInterval(p),
            p = null )
        }
        ,
        this.fetchRecentChats = function() {
            if (this.getPreviousHeartBeatTimestamp() > 0) {
                console.log("Fetching Recent Chats");
                var a = g.ChatUtils.generateUniqueId()
                  , b = e(a, !0);
                return r = (new Date).getTime(),
                l.sendIQ(b, a, !0),
                !0
            }
            return !1
        }
        ;
        var t = function() {
            return q || (q = "convochat@" + l.getDomain()),
            q
        }
        ;
        this.sendHeartbeat = function() {
            console.log("sendHeartbeat");
            var a = g.ChatUtils.generateUniqueId()
              , b = e(a, !1);
            l.sendIQ(b, a, !1)
        }
        ,
        this.callsManagerReceivedHeartbeatQuery = function(a, b) {
            b && this.startHeartBeat();
            var c = $(a)
              , d = c.find("basic-info");
            if (d.length) {
                var e = parseInt(d.attr("timestamp"));
                o.initializeIfRequired(e, r),
                this.setPreviousHeartBeatTimestamp(e);
                var f = parseInt(d.attr("unread_chats_count"));
                this.dispatch(g.ChatEvents.UNREAD_COUNT_CHANGED, f)
            }
            var i = c.find(h.CHATS)
              , j = c.find(h.CHATS_FOR_STATUS_UPDATE);
            i.length && this.dispatch(g.ChatEvents.HEARTBEAT_RECEIVED, {
                chatsXML: i,
                updatedChats: j,
                hasRecentChats: b
            })
        }
    }
    ,
    f.chatsdk.DeltaFetcher.prototype = new f.chatsdk.EventDispatcher,
    f.chatsdk.DeltaFetcher.prototype.constructor = f.chatsdk.DeltaFetcher;
    var f = f || {};
    f.chatsdk = f.chatsdk || {},
    f.chatsdk.MessagesDiskManager = function(a, b) {
        function c() {
            if (!k || !i)
                throw new Error("Not Initialized Exception, Please provide user ID and account ID");
            return "com.convo.chat." + i + "." + k + ".failed_messages"
        }
        function d(a, b, c) {
            var d = _.findWhere(b, {
                messageId: a.messageId
            });
            return d && d.sequenceNumber > 0 ? void j.deleteMessageWithIdForChatId(a.messageId, c) : void b.push(a)
        }
        function e() {
            m && localStorage.setItem(c(), JSON.stringify(m))
        }
        function g() {
            var a, b = localStorage.getItem(c());
            try {
                a = JSON.parse(b)
            } catch (d) {
                console.log("MessagesDiskManager.loadFromLocalStore: JSON.parse error: " + d.message)
            }
            m = a ? h(a) : {},
            n = !0
        }
        function h(a) {
            var b = {};
            for (var c in a)
                if (a.hasOwnProperty(c)) {
                    var d = []
                      , e = a[c];
                    e && e.length && e.forEach(function(a) {
                        d.push((new l.ChatMessage).initialize(a))
                    }),
                    b[c] = d
                }
            return b
        }
        var i = a
          , j = this
          , k = b
          , l = f.chatsdk;
        l.MessagesDiskManager.FAILED_MSGS_LSO_VERSION = 1;
        var m = {}
          , n = !1;
        this.init = function(a, b) {
            i = a,
            k = b
        }
        ,
        this.getMessagesForChatId = function(a) {
            return n || g(),
            m[a]
        }
        ,
        this.processFailedMessages = function(a, b) {
            var c = j.getMessagesForChatId(b.chatId);
            if (c && c.length && a.length) {
                var e = a.concat()
                  , f = 1 != a[0].getSequenceNumber()
                  , g = a[0].getTimestamp()
                  , h = 0
                  , i = 0
                  , k = 0;
                return b.messages && b.messages.length ? k = b.messages[0].getTimestamp() : i = a[a.length - 1].getTimestamp(),
                h = Math.max(k, i),
                c.forEach(function(a) {
                    var c = a.getTimestamp();
                    c >= g ? (h >= c || 0 == b.maxSequenceNumber || c > k) && d(a, e, b.chatId) : f || d(a, e, b.chatId)
                }),
                e
            }
            return a
        }
        ,
        this.saveMessageForChatId = function(a, b) {
            if (a && b) {
                n || g();
                var c = m[b];
                c || (c = [],
                m[b] = c);
                for (var d = !1, f = c.length, h = 0; f > h; h++) {
                    var i = c[h];
                    if (i.messageId == a.messageId) {
                        d = !0;
                        break
                    }
                }
                d || (c.push(a),
                e())
            }
        }
        ,
        this.deleteMessageWithIdForChatId = function(a, b) {
            n || g();
            var c = m[b];
            if (c) {
                for (var d, f, h = c.length, i = 0; h > i; ++i)
                    if (d = c[i],
                    d.messageId == a) {
                        c.splice(i, 1),
                        f = !0;
                        break
                    }
                0 == c.length && delete m[b],
                f && e()
            }
        }
    }
    ;
    var f = f || {};
    f.chatsdk = f.chatsdk || {},
    f.chatsdk.MessagesLoader = function(a, b, c, d, e, g) {
        function h(a, b) {
            a.c(k.CONVO_FILE, {
                xmlns: l.CONVO_FILE,
                name: b.name,
                size: b.size,
                width: b.width || 0,
                height: b.height || 0,
                type: b.type,
                thumbnail_name: b.thumbnailName ? b.thumbnailName : "null",
                original_name: b.originalName,
                format: b.fileFormat,
                id: b.fileId,
                available_previews_x: b.availablePreviews,
                preview_name: b.previewName,
                number_of_pages: b.noOfPages
            })
        }
        function i(a) {
            if (!a)
                return null ;
            a = $(a);
            var b = new j.MessageFileInfo({
                name: j.ChatUtils.unescape(a.attr("name")),
                size: parseInt(a.attr("size")),
                width: parseInt(a.attr("width")),
                height: parseInt(a.attr("height")),
                type: a.attr("type"),
                thumbnailName: a.attr("thumbnail_name"),
                originalName: a.attr("original_name"),
                fileFormat: a.attr("format"),
                fileId: parseInt(a.attr("id")),
                availablePreviews: parseInt(a.attr("available_previews_x")),
                previewName: a.attr("preview_name"),
                noOfPages: a.attr("number_of_pages")
            });
            return b
        }
        f.chatsdk.MessagesLoader.MESSAGE_FETCH_PAGE_SIZE = 20,
        this.MESSAGE_FETCH_PAGE_SIZE = f.chatsdk.MessagesLoader.MESSAGE_FETCH_PAGE_SIZE;
        var j = f.chatsdk
          , k = j.Constants.TAG
          , l = j.Constants.XMLNS
          , m = {}
          , n = {}
          , o = j.ComposingStatus
          , p = j.MessageType
          , q = j.ChatType
          , r = j.ParticipantStatus
          , s = j.ChatUtils;
        this.chatIdToChatMap = d,
        this.usersManager = a,
        this.timestampManager = b,
        this.chatsLoader = c,
        this.chatsLoader.addDelegate(this),
        this.delegates = [],
        this.messagesDiskManager = g,
        this.xmppCallsManager = e,
        this.chatIdToCallsMap = {};
        var t = this;
        this.xmppCallsManager.addListener(j.ChatEvents.MESSAGE_RECEIVED, function(a) {
            t.callsManagerReceivedMessage(a)
        }),
        this.xmppCallsManager.addListener(j.ChatEvents.MESSAGE_SEND_FAILED, function(a) {
            t.callsManagerMessageSendFailed(a)
        }),
        this.xmppCallsManager.addListener(j.ChatEvents.MESSAGES_IQ_FAILED, function(a) {
            t.callsManagerMessagesIqFailedForFirstFetch(a)
        }),
        this.xmppCallsManager.addListener(j.ChatEvents.MESSAGE_HISTORY_RECEIVED, function(a) {
            t.processReceivedChatMessagesXML(a.query, a.iqId)
        }),
        this.sendMessage = function(a, b, c) {
            var d = null ;
            return b.participantForId(this.usersManager.getThisUser().userId).presenceStatus === r.LEFT ? null  : (b.chatType === q.P2P ? d = this.sendMessageInP2PChat(a, b, c) : b.chatType === q.GROUP && (d = this.sendMessageInGroupChat(a, b, c)),
            d)
        }
        ,
        this.sendMessageInP2PChat = function(a, b, c) {
            var d = new j.ChatMessage
              , e = this.usersManager.getThisUser();
            d.isRetrying = !0;
            var f = b.getOtherParticipant(e.userId)
              , g = s.generateUniqueId();
            if (d.setInfo(g, e.userId, a, p.MESSAGE, this.timestampManager.UTCTimestamp(), 0, c),
            d.isRetrying = !0,
            null  == c || c.status == j.FileStatus.FS_SUCCESS) {
                var i = $msg({
                    id: g,
                    to: this.getConvoChatJid(),
                    from: this.xmppCallsManager.getJid(),
                    type: q.toString(q.P2P)
                }).c(k.BODY).t(a).up().c(k.CONVO_MESSAGE, {
                    xmlns: l.CONVO_MESSAGE,
                    chat_id: b.chatId,
                    from_name: e.getDisplayName(),
                    message_type: p.toString(p.MESSAGE),
                    timestamp: d.getTimestamp(),
                    for_user_id: f.userId,
                    for_name: f.name
                }).up();
                d.fileInfo && h(i, c),
                this.xmppCallsManager.sendMessage(i, g, !0, d.messageText)
            }
            d.fileInfo || this.messagesDiskManager.saveMessageForChatId(d, b.chatId);
            for (var m = this.delegates.length, n = 0; m > n; n++) {
                var o = this.delegates[n];
                "function" == typeof o.messagesLoaderSentMessageInChat && o.messagesLoaderSentMessageInChat(d, b)
            }
            return d
        }
        ,
        this.sendMessageInGroupChat = function(a, b, c) {
            var d = this.usersManager.getThisUser()
              , e = new j.ChatMessage;
            if (e.setInfo(s.generateUniqueId(), d.userId, a, p.MESSAGE, this.timestampManager.UTCTimestamp(), 0, c),
            e.isRetrying = !0,
            !e.fileInfo || c.status == j.FileStatus.FS_SUCCESS) {
                var f = $msg({
                    id: e.messageId,
                    to: this.getConvoChatJid(),
                    from: this.xmppCallsManager.getJid(),
                    type: q.toString(q.GROUP)
                }).c(k.BODY).t(a).up().c(k.CONVO_MESSAGE, {
                    xmlns: l.CONVO_MESSAGE,
                    chat_id: b.chatId,
                    message_type: p.toString(p.MESSAGE),
                    timestamp: e.getTimestamp(),
                    from_name: d.getDisplayName()
                }).up();
                if (0 == b.lastMessageSequenceNumber) {
                    f.c(k.PARTICIPANTS, {
                        xmlns: l.PARTICIPANTS
                    });
                    for (var g in b.participants)
                        if (b.participants.hasOwnProperty(g)) {
                            var i = b.participants[g];
                            f.c(k.PARTICIPANT, {
                                id: i.userId,
                                name: i.name
                            }).up()
                        }
                    f.up()
                }
                e.fileInfo && h(f, c),
                console.log("sendMessageInGroupChat: message.messageId:" + e.messageId + ", chat.chatId:" + b.chatId),
                this.xmppCallsManager.sendMessage(f, e.messageId, !0, e.messageText)
            }
            for (var m = this.delegates.length, n = 0; m > n; n++) {
                var o = this.delegates[n];
                "function" == typeof o.messagesLoaderSentMessageInChat && o.messagesLoaderSentMessageInChat(e, b)
            }
            return e.fileInfo || this.messagesDiskManager.saveMessageForChatId(e, b.chatId),
            e
        }
        ,
        this.cancelMessageInChat = function(a, b) {
            this.messagesDiskManager.deleteMessageWithIdForChatId(a.messageId, b.chatId)
        }
        ,
        this.reSendMessageInChat = function(a, b, c) {
            var d = this.usersManager.getThisUser()
              , f = b.participantForId(d.userId);
            if (f.status != r.LEFT && (a.isRetrying = !0,
            a.setTimestamp(this.timestampManager.UTCTimestamp()),
            !a.fileInfo || !a.fileInfo.isUploading)) {
                var i = $msg({
                    id: a.messageId,
                    to: this.getConvoChatJid(),
                    from: this.xmppCallsManager.getJid(),
                    type: q.toString(q.P2P)
                }).c(k.BODY).t(a.messageText).up()
                  , j = {
                    xmlns: l.CONVO_MESSAGE,
                    chat_id: b.chatId,
                    from_name: d.getDisplayName(),
                    message_type: c ? p.toString(p.RETRY) : p.toString(p.MESSAGE),
                    timestamp: a.getTimestamp()
                };
                if (b.chatType == q.P2P) {
                    var m = b.getOtherParticipant();
                    j.for_user_id = m.userId,
                    j.for_name = m.name
                } else if (i.attrs({
                    type: q.toString(q.GROUP)
                }),
                0 == b.lastMessageSequenceNumber) {
                    i.c(k.PARTICIPANTS, {
                        xmlns: l.PARTICIPANTS
                    });
                    for (var n in b.participants)
                        if (b.participants.hasOwnProperty(n)) {
                            var o = b.participants[n];
                            i.c(k.PARTICIPANT, {
                                id: o.userId,
                                name: o.name
                            }).up()
                        }
                    i.up()
                }
                if (i.c(k.CONVO_MESSAGE, j).up(),
                a.fileInfo && !a.fileInfo.isUploading && h(i, a.fileInfo),
                e.sendMessage(i, a.messageId, !0, a.messageText),
                g.deleteMessageWithIdForChatId(a.messageId, b.chatId),
                a.fileInfo || g.saveMessageForChatId(a, b.chatId),
                c) {
                    a.clientTimestamp = a.getTimestamp(),
                    b.removeMessage(a);
                    for (var s = this.delegates.length, t = 0; s > t; t++) {
                        var u = this.delegates[t];
                        "function" == typeof u.messagesLoaderSentMessageInChat && u.messagesLoaderSentMessageInChat(a, b)
                    }
                }
            }
        }
        ,
        this.addDelegate = function(a) {
            this.delegates.push(a)
        }
        ,
        this.callsManagerReceivedMessage = function(a) {
            a = $(a);
            var b = a.find(k.CONVO_MESSAGE);
            if (!b.length)
                return void console.warn("callsManagerReceivedMessage: no convoMessageExtension found");
            var c = p.fromString(b.attr("message_type"));
            c == p.RECIPIENT_ACK ? (console.log("callsManagerReceivedMessage: message ack received"),
            this.xmppMessageAckReceived(a, b)) : a.attr("type") == q.toString(q.GROUP) ? (console.log("callsManagerReceivedMessage: group message received"),
            this.groupMessageReceived(a, b)) : c == p.MESSAGE ? (console.log("callsManagerReceivedMessage: p2p message received"),
            this.xmppMessageReceived(a, b)) : c == p.TYPING && (console.log("callsManagerReceivedMessage: composing received"),
            this.composingXMPPMessageReceived(a, b))
        }
        ,
        this.xmppMessageAckReceived = function(a, b) {
            var c = s.makeUserIdFromJid(a.attr("from"))
              , d = this.chatIdToChatMap[b.attr("chat_id")];
            if (d)
                if (console.log("xmppMessageAckReceived: chat.chatId:" + d.chatId + ", message.messageId:" + a.attr("id")),
                c == this.usersManager.getThisUser().userId)
                    for (var e = this.delegates.length, f = 0; e > f; f++) {
                        var g = this.delegates[f];
                        "function" == typeof g.messagesLoaderReceivedUnreadCountForChat && g.messagesLoaderReceivedUnreadCountForChat(d, b.attr("unread_count"))
                    }
                else if (d.chatType == q.P2P) {
                    var h = b.attr("sequence_number")
                      , i = d.participantForId(c);
                    if (i)
                        i.updateLastSeenMessageSequenceNumber(h);
                    else
                        try {
                            var j = this.usersManager.getUserById(c)
                              , k = j ? j.getDisplayName() : "UserNotFound";
                            console.error("xmppMessageAckReceived:" + k + ", userId:" + c + " not found in chat ID:" + d.chatId + ", Title:" + d.getTitle()),
                            console.error("Total users in users manager:" + this.usersManager.getUsers().length),
                            console.error("Participants in chat: " + JSON.stringify(_.values(d.participants)))
                        } catch (l) {
                            console.error(l.stack)
                        }
                    var m = d.messageForId(a.attr("id"));
                    if (m) {
                        0 == m.getSequenceNumber() && (console.log("xmppMessageAckReceived: message ack is not received but seen notification is received chat.chatId:" + d.chatId + ", message.messageId:" + a.attr("id") + ", seqNo:" + h),
                        m.setSequenceNumber(h),
                        this.xmppMessageReceived(a, b));
                        for (var e = this.delegates.length, f = 0; e > f; f++) {
                            var g = this.delegates[f];
                            "function" == typeof g.messagesLoaderMessageReadInChatByParticipant && g.messagesLoaderMessageReadInChatByParticipant(m, d, i)
                        }
                    }
                }
        }
        ,
        this.groupMessageReceived = function(a, b) {
            var c = p.fromString(b.attr("message_type"));
            if (c != p.INVITE && c != p.LEFT && c != p.MESSAGE)
                return void console.log("groupMessageReceived: cannot process message of type " + p.toString(c));
            var d, e, f = s.makeUserIdFromJid(a.attr("from")), g = this.usersManager.getUserById(f), h = g ? g.getDisplayName() : b.attr("from_name"), l = this.usersManager.getThisUser(), m = parseInt(b.attr("sequence_number")), n = "", o = b.attr("chat_id"), u = this.chatIdToChatMap[o], v = !1, w = this.timestampManager.UTCTimestamp(), x = parseInt(b.attr("timestamp"));
            if (u) {
                var y = u.participantForId(l.userId)
                  , z = u.participantForId(f);
                y || u.addParticipant(new j.ChatParticipant(l.userId,l.getDisplayName(),r.JOINED,0,w)),
                z || u.addParticipant(new j.ChatParticipant(f,h,r.JOINED,m,w)),
                f !== l.userId && t.usersManager.addInaccessibleUser(f, h)
            } else {
                v = !0,
                console.log("groupMessageReceived: chat does not exists creating new chat with chatId:" + o),
                u = new j.Chat,
                u.setInfo(o, null , null , q.GROUP, 0, x, m, !1, l);
                var A = a.find(k.PARTICIPANTS);
                if (A.length) {
                    var B = A.find(k.PARTICIPANT);
                    B.length && (console.log("groupMessageReceived: adding participants in newly created chat with chatId:" + o),
                    B.each(function() {
                        var a = $(this)
                          , b = a.attr("id");
                        d = t.usersManager.getUserById(b),
                        d || (d = t.usersManager.addInaccessibleUser(b, a.attr("name")));
                        var c = d.getDisplayName();
                        u.addParticipant(new j.ChatParticipant(b,c,r.JOINED,b === f ? m : 0,w))
                    }))
                } else
                    console.log("groupMessageReceived: need to load chat with chatId:" + o),
                    this.chatsLoader.loadChat(u.chatId),
                    e = !0,
                    u.addParticipant(new j.ChatParticipant(f,h,r.JOINED,m,w)),
                    f !== l.userId && (t.usersManager.addInaccessibleUser(f, h),
                    u.addParticipant(new j.ChatParticipant(l.userId,l.getDisplayName(),r.JOINED,0,w)));
                this.chatIdToChatMap[u.chatId] = u
            }
            var C = i(a.find(k.CONVO_FILE)[0]);
            C && (C.itemId = u.chatId);
            var D = a.attr("id")
              , E = u.messageForId(D)
              , F = null ;
            if (!E)
                if (c == p.INVITE) {
                    var G = a.find(k.INVITEES);
                    if (G.length) {
                        var H = G.find(k.INVITEE);
                        F = {},
                        H.each(function() {
                            var a = $(this)
                              , b = a.attr("id");
                            F[b] = a.attr("name"),
                            n = n ? n + "," + b : b
                        })
                    }
                } else
                    c == p.LEFT ? n = "left" : c == p.MESSAGE && (n = a.find(k.BODY).text());
            var I;
            E ? (E.isRetrying = !1,
            E = E.copy(),
            E.getSequenceNumber() != m && (E.setSequenceNumber(m),
            E.setTimestamp(x)),
            console.log("groupMessageReceived: message already exists message.messageId:" + E.messageId + ", chat.chatId:" + u.chatId)) : (I = !0,
            E = new j.ChatMessage,
            E.setInfo(D, f, n, c, x, m, C),
            E.invitees = F,
            E.clientTimestamp = this.timestampManager.UTCTimestamp(),
            console.log("groupMessageReceived: new message.messageId:" + E.messageId + ", chat.chatId:" + u.chatId)),
            v ? e ? u.addMessage(E) : this.processGroupMessage(E, u) : (this.processMessagesForMissedMessages([E], u),
            I || this.processGroupMessage(E, u))
        }
        ,
        this.processGroupMessage = function(a, b) {
            console.log("processGroupMessage: message.messageId:" + a.messageId + ", chat.chatId:" + b.chatId);
            var c = this.usersManager.getThisUser()
              , d = a.type == p.LEFT ? r.LEFT : r.JOINED
              , e = r.JOINED;
            if (a.senderId != c.userId) {
                if (!b.participantForId(a.senderId)) {
                    var f = this.usersManager.getUserById(a.senderId)
                      , h = f ? f.getDisplayName() : null ;
                    b.addParticipant(new j.ChatParticipant(a.senderId,h,d,a.getSequenceNumber(),a.getTimestamp()))
                }
            } else
                e = d;
            null  != b.participantForId(c.userId) || s.isAdminModeONAndOrThisUserIsNotInChatParticipants(b) || b.addParticipant(new j.ChatParticipant(c.userId,c.getDisplayName(),e,a.senderId === c.userId ? a.getSequenceNumber() : 0,a.getTimestamp())),
            b.updateLastMessageSequenceNumber(a.getSequenceNumber());
            var i = b.participantForId(a.senderId);
            i && i.updateLastSeenMessageSequenceNumber(a.getSequenceNumber());
            var k = b.messageForId(a.messageId);
            null  == k && (a.type == p.INVITE ? this.updateParticipantsForChatForInviteMessage(b, a, !0) : a.type == p.LEFT && this.updateParticipantsForChatForLeaveMessage(b, a, !0)),
            k ? k.getSequenceNumber() != a.getSequenceNumber && (k.setSequenceNumber(a.getSequenceNumber()),
            k.setTimestamp(a.getTimestamp()),
            this.delegates.forEach(function(a) {
                "function" == typeof a.messagesLoaderSentMessageReceivedAtServerInChat && a.messagesLoaderSentMessageReceivedAtServerInChat(k, b)
            }),
            n[b.chatId] = k.getSequenceNumber(),
            g.deleteMessageWithIdForChatId(k.messageId, b.chatId)) : (this.delegates.forEach(function(c) {
                "function" == typeof c.messagesLoaderReceivedMessageInChat && c.messagesLoaderReceivedMessageInChat(a, b)
            }),
            n[b.chatId] = a.getSequenceNumber())
        }
        ,
        this.updateParticipantsForChatForInviteMessage = function(a, b, c) {
            if (console.log("updateParticipantsForChatForInviteMessage: message.messageId:" + b.messageId + ", chat.chatId:" + a.chatId),
            b.type == p.INVITE && b.invitees) {
                var d;
                for (var e in b.invitees)
                    if (b.invitees.hasOwnProperty(e))
                        if (d = a.participantForId(e))
                            d.status == r.LEFT && (d.status = r.JOINED);
                        else {
                            var f = this.usersManager.getUserById(e)
                              , g = f ? f.getDisplayName() : b.invitees[e];
                            f || this.usersManager.addInaccessibleUser(e, g),
                            d = new j.ChatParticipant(e,g,r.JOINED,a.lastMessageSequenceNumber,b.getTimestamp()),
                            a.addParticipant(d)
                        }
                a.setTitle(null ),
                c && this.delegates.forEach(function(b) {
                    "function" == typeof b.messagesLoaderUpdatedChat && b.messagesLoaderUpdatedChat(a)
                })
            }
        }
        ,
        this.updateParticipantsForChatForLeaveMessage = function(a, b, c) {
            if (console.log("updateParticipantsForChatForLeaveMessage: message.messageId:" + b.messageId + ", chat.chatId:" + a.chatId),
            b.type == p.LEFT) {
                var d = a.participantForId(b.senderId);
                d && d.status != r.LEFT && (d.status = r.LEFT,
                a.participantEndedComposing(d),
                a.setTitle(null ),
                c && this.delegates.forEach(function(b) {
                    "function" == typeof b.messagesLoaderUpdatedChat && b.messagesLoaderUpdatedChat(a)
                }))
            }
        }
        ,
        this.xmppMessageReceived = function(a, b) {
            var c = b.attr("chat_id")
              , d = this.usersManager.getThisUser()
              , e = b.attr("for_user_id")
              , f = this.usersManager.getUserById(e)
              , g = f ? f.getDisplayName() : b.attr("for_name")
              , h = s.makeUserIdFromJid(a.attr("from"));
            f = this.usersManager.getUserById(h);
            var l = f ? f.getDisplayName() : b.attr("from_name")
              , m = this.chatIdToChatMap[c]
              , n = !1
              , o = a.find(k.BODY).text()
              , t = b.attr("timestamp")
              , u = parseInt(b.attr("sequence_number"));
            null  == m ? (m = new j.Chat,
            m.setInfo(c, null , null , q.P2P, 0, t, u, !1, d),
            m.addParticipant(new j.ChatParticipant(e,g,r.JOINED,0,t)),
            m.addParticipant(new j.ChatParticipant(h,l,r.JOINED,u,t)),
            this.chatIdToChatMap[m.chatId] = m,
            n = !0) : 0 === Object.keys(m.participants).length && (m.addParticipant(new j.ChatParticipant(e,g,r.JOINED,0,t)),
            m.addParticipant(new j.ChatParticipant(h,l,r.JOINED,u,t)));
            var v = i(a.find(k.CONVO_FILE)[0]);
            v && (v.itemId = m.chatId);
            var w = a.attr("id")
              , x = m.messageForId(w)
              , y = !1;
            x ? (x = x.copy(),
            x.getSequenceNumber() != u && (x.setSequenceNumber(u),
            x.setTimestamp(t))) : (y = !0,
            x = new j.ChatMessage,
            x.setInfo(w, h, o, p.MESSAGE, t, u, v),
            x.clientTimestamp = this.timestampManager.UTCTimestamp(),
            console.log("xmppMessageReceived: new message received: chat.chatId:" + m.chatId + ", message.messageId:" + x.messageId)),
            n ? this.processP2PMessage(x, m) : (this.processMessagesForMissedMessages([x], m),
            y || this.processP2PMessage(x, m))
        }
        ,
        this.composingXMPPMessageReceived = function(a, b) {
            var c = s.makeUserIdFromJid(a.attr("from"));
            if (c != this.usersManager.getThisUser.userId) {
                var d = b.attr("chat_id")
                  , e = o.fromString(b.attr("action"));
                e && (e = parseInt(e));
                var f = this.chatIdToChatMap[d];
                if (f) {
                    console.log("composingXMPPMessageReceived: chat.chatId:" + f.chatId);
                    var g = f.participantForId(c);
                    g && this.delegates.forEach(function(a) {
                        "function" == typeof a.messagesLoaderReceivedComposingMessageForChatFromParticipant && a.messagesLoaderReceivedComposingMessageForChatFromParticipant(f, g, e)
                    })
                }
            }
        }
        ,
        this.processP2PMessage = function(a, b) {
            console.log("ChatSDK:processP2PMessage: chat.chatId:" + b.chatId + ", message.messageId:" + a.messageId),
            b.updateLastMessageSequenceNumber(a.getSequenceNumber());
            var c = b.participantForId(a.senderId);
            c && c.updateLastSeenMessageSequenceNumber(a.getSequenceNumber());
            var d = b.messageForId(a.messageId);
            if (d) {
                if (d.getSequenceNumber() != a.getSequenceNumber()) {
                    d.setSequenceNumber(a.getSequenceNumber()),
                    d.setTimestamp(a.getTimestamp());
                    for (var e = this.delegates.length, f = 0; e > f; f++) {
                        var h = this.delegates[f];
                        "function" == typeof h.messagesLoaderSentMessageReceivedAtServerInChat && h.messagesLoaderSentMessageReceivedAtServerInChat(d, b)
                    }
                    n[b.chatId] = d.getSequenceNumber(),
                    g.deleteMessageWithIdForChatId(d.messageId, b.chatId)
                }
            } else {
                for (var e = this.delegates.length, f = 0; e > f; f++) {
                    var h = this.delegates[f];
                    "function" == typeof h.messagesLoaderReceivedMessageInChat && h.messagesLoaderReceivedMessageInChat(a, b)
                }
                n[b.chatId] = a.getSequenceNumber()
            }
        }
        ,
        this.chatOpened = function(a) {
            if (a.isLoadingInProgress)
                return void console.log("chatOpened: another loading is in progress for chat.chatId:" + a.chatId + ", isLoadingInProgress:true");
            console.log("chatOpened: chat.chatId:" + a.chatId + ", isLoadingInProgress:false");
            var b, c = s.generateUniqueId();
            if (s.isAdminModeON() || 0 == a.unreadCount || a.unreadCount <= this.MESSAGE_FETCH_PAGE_SIZE)
                b = {
                    from_index: 1,
                    to_index: t.MESSAGE_FETCH_PAGE_SIZE
                };
            else {
                var d = a.participantForId(this.usersManager.getThisUser().userId);
                b = {
                    from_sequence_number: d.lastSeenMessageSequenceNumber + 1,
                    to_sequence_number: a.lastMessageSequenceNumber
                }
            }
            var e = $iq({
                to: t.getConvoChatJid(),
                type: "get",
                id: c
            }).c(k.QUERY, {
                xmlns: l.HISTORY_MESSAGES
            }).c(k.CHAT, {
                id: a.chatId
            }).c(k.RANGE, b);
            this.xmppCallsManager.sendIQ(e, c, !0),
            a.isLoadingInProgress = !0,
            this.xmppCallsManager._connectionManager.logger.logLocally_errorOnServer("1)chatHistoryMessagesIssue: fetch chat history messages title :" + a.getTitle() + " thisUserId :" + a.thisUser.userId + " chatID : " + a.chatId + " packetId : " + c + " packet : " + e)
        }
        ,
        this.processReceivedChatMessagesXML = function(a, b) {
            var c, d = [];
            a = $(a),
            a.find(k.MESSAGE).each(function() {
                var a = $(this)
                  , b = $(a.find(k.CONVO_MESSAGE)[0]);
                c || (c = b.attr("chat_id"),
                console.log("processReceivedChatMessagesXML: chat.chatId:" + c));
                var e = a.attr("id")
                  , f = a.attr("from")
                  , g = s.makeUserIdFromJid(f)
                  , h = a.find(k.BODY).text()
                  , l = (b.attr("from_name"),
                parseInt(b.attr("sequence_number")))
                  , m = p.fromString(b.attr("message_type"))
                  , n = parseInt(b.attr("timestamp"))
                  , o = i(a.find(k.CONVO_FILE)[0]);
                o && (o.itemId = c);
                var q = new j.ChatMessage;
                if (q.setInfo(e, g, h, m, n, l, o),
                m == p.INVITE) {
                    var r = {};
                    a.find(k.INVITEE).each(function() {
                        var a = $(this);
                        r[a.attr("id")] = a.attr("name")
                    }),
                    q.invitees = r
                }
                d.push(q)
            });
            var e = c ? this.chatIdToChatMap[c] : null ;
            if (0 == d.length)
                return void (e && (e.isLoadingInProgress = !1));
            if (s.sortMessages(d),
            e)
                if (m[b]) {
                    delete m[b];
                    for (var f = this.delegates.length, g = 0; f > g; g++) {
                        var h = this.delegates[g];
                        "function" == typeof h.messagesLoaderLoadedHistoryMessagesInChat && h.messagesLoaderLoadedHistoryMessagesInChat(d, e, !0, b)
                    }
                } else {
                    var l = a.find(k.RANGE);
                    d[d.length - 1].sequenceNumber < e.minSequenceNumber || 0 == e.maxSequenceNumber || l.length && l.attr("from_index") && e.isFetchingRecentMessagesForMissedMessages ? this.processMessages(d, e, !0, !1, null ) : this.processMessagesForMissedMessages(d, e)
                }
        }
        ,
        this.inviteUsersInChat = function(a, b) {
            var c;
            if (b.chatType == q.GROUP && a && a.length) {
                var d = this.timestampManager.UTCTimestamp()
                  , f = this.usersManager.getThisUser();
                if (0 == b.lastMessageSequenceNumber && 0 == b.messages.length) {
                    var g;
                    a.forEach(function(a) {
                        g = b.participantForId(a.userId),
                        g ? g.status == r.LEFT && (g.status = r.JOINED,
                        g.statusTimestamp = d,
                        c = !0,
                        b.setTitle(null )) : (b.addParticipant(new j.ChatParticipant(a.userId,a.getDisplayName(),r.JOINED,0,d)),
                        c = !0)
                    }, this)
                } else {
                    var h = ""
                      , i = [];
                    a.forEach(function(a) {
                        g = b.participantForId(a.userId),
                        g && g.status != r.LEFT || (g ? (g.status = r.JOINED,
                        g.statusTimestamp = d,
                        b.setTitle(null )) : b.addParticipant(new j.ChatParticipant(a.userId,a.getDisplayName(),r.JOINED,0,d)),
                        c = !0,
                        h = h ? h + "," + a.userId : a.userId,
                        i.push({
                            id: a.userId,
                            name: a.getDisplayName()
                        }))
                    });
                    var m = new j.ChatMessage;
                    m.setInfo(s.generateUniqueId(), f.userId, h, p.INVITE, d, 0),
                    b.addMessage(m);
                    var n = {
                        xmlns: l.CONVO_MESSAGE,
                        chat_id: b.chatId,
                        message_type: p.toString(m.type),
                        timestamp: m.getTimestamp(),
                        from_name: f.getDisplayName()
                    }
                      , o = $msg({
                        id: m.messageId,
                        to: this.getConvoChatJid(),
                        from: this.xmppCallsManager.getJid(),
                        type: q.toString(q.GROUP)
                    }).c(k.BODY).t(m.messageText).up().c(k.CONVO_MESSAGE, n).up()
                      , t = {};
                    o.c(k.INVITEES),
                    i.forEach(function(a) {
                        o.c(k.INVITEE, a),
                        t[a.id] = a.name
                    }),
                    m.invitees = t,
                    e.sendMessage(o, m.messageId, !0),
                    this.delegates.forEach(function(a) {
                        "function" == typeof a.messagesLoaderSentMessageInChat && a.messagesLoaderSentMessageInChat(m, b)
                    })
                }
                this.delegates.forEach(function(a) {
                    "function" == typeof a.messagesLoaderUpdatedChat && a.messagesLoaderUpdatedChat(b)
                })
            }
        }
        ,
        this.leaveChat = function(a) {
            if (a.chatType != q.P2P) {
                var b = this.usersManager.getThisUser()
                  , c = a.participantForId(b.userId);
                if (c.status != r.LEFT) {
                    if (c.status = r.LEFT,
                    a.clearAllComposing(),
                    0 == a.lastMessageSequenceNumber && 0 == a.messages.length)
                        delete this.chatIdToChatMap[a.chatId];
                    else {
                        var d = new j.ChatMessage;
                        d.setInfo(s.generateUniqueId(), b.userId, "left", p.LEFT, this.timestampManager.UTCTimestamp(), 0),
                        a.addMessage(d);
                        var f = {
                            xmlns: l.CONVO_MESSAGE,
                            chat_id: a.chatId,
                            message_type: p.toString(d.type),
                            timestamp: d.getTimestamp(),
                            from_name: b.getDisplayName()
                        }
                          , g = $msg({
                            id: d.messageId,
                            to: this.getConvoChatJid(),
                            type: q.toString(q.GROUP)
                        }).c(k.BODY).t(d.messageText).up().c(k.CONVO_MESSAGE, f).up();
                        e.sendMessage(g, d.messageId, d.type),
                        this.delegates.forEach(function(b) {
                            "function" == typeof b.messagesLoaderSentMessageInChat && b.messagesLoaderSentMessageInChat(d, a)
                        })
                    }
                    this.delegates.forEach(function(b) {
                        "function" == typeof b.messagesLoaderUpdatedChat && b.messagesLoaderUpdatedChat(a)
                    })
                }
            }
        }
        ,
        this.markMessageFailedInChat = function(a, b) {
            if (b && a) {
                a.isSendingInProgress = !1;
                var c = b.messages.map(function(a) {
                    return a.messageId
                }).indexOf(a.messageId);
                if (-1 != c)
                    for (var d = this.delegates.length, e = 0; d > e; e++) {
                        var f = this.delegates[e];
                        "function" == typeof f.messagesLoaderMessageSendFailedAtIndexInChat && f.messagesLoaderMessageSendFailedAtIndexInChat(a, c, b)
                    }
            }
        }
        ,
        this.processMessages = function(a, b, c, d, e) {
            if (b) {
                console.log("processMessages: chat.chatId:" + b.chatId);
                var f;
                if (a && a.length && (f = a[a.length - 1].getSequenceNumber()),
                c)
                    a = this.messagesDiskManager.processFailedMessages(a, b),
                    this.delegates.forEach(function(c) {
                        "function" == typeof c.messagesLoaderLoadedHistoryMessagesInChat && c.messagesLoaderLoadedHistoryMessagesInChat(a, b, !1, null )
                    });
                else {
                    var g, h = 0;
                    if (d)
                        for (var i = a.length, j = i - 1; j >= 0; --j) {
                            g = a[j];
                            var k = this.usersManager.getThisUser().userId;
                            if (g.senderId == k || g.getSequenceNumber() <= b.maxSequenceNumber)
                                break;
                            (g.type == p.MESSAGE || g.type == p.INVITE && g.invitees[k]) && ++h
                        }
                    for (var l = this.delegates.length, j = 0; l > j; j++) {
                        var m = this.delegates[j];
                        "function" == typeof m.messagesLoaderLoadedNewerMessagesInChat && m.messagesLoaderLoadedNewerMessagesInChat(a, b, h)
                    }
                }
                n[b.chatId] = f,
                b.isLoadingInProgress = !1
            }
        }
        ,
        this.thisUserComposingInChat = function(a, b) {
            var c = s.generateUniqueId()
              , d = $msg({
                id: c,
                to: this.getConvoChatJid(),
                from: this.xmppCallsManager.getJid(),
                type: q.toString(q.P2P)
            }).c(k.CONVO_MESSAGE, {
                xmlns: l.CONVO_MESSAGE,
                chat_id: a.chatId,
                message_type: p.toString(p.TYPING),
                action: o.toString(b)
            });
            this.xmppCallsManager.sendMessage(d, c, !1)
        }
        ,
        this.getConvoChatJid = function() {
            return this._convoChatJid || (this._convoChatJid = "convochat@" + this.xmppCallsManager.getDomain()),
            this._convoChatJid
        }
        ,
        this.loadOlderMessagesInChat = function(a) {
            if (a.isLoadingInProgress)
                return console.log("loadOlderMessagesInChat: another loading is in progress for chat.chatId:" + a.chatId + ", isLoadingInProgress:true"),
                !1;
            var b = a.minSequenceNumber;
            if (b > 1) {
                a.isLoadingInProgress = !0;
                var c = Math.max(1, b - this.MESSAGE_FETCH_PAGE_SIZE)
                  , d = b - 1;
                this.loadMessagesInChat(a, c, d, !0, !1),
                console.log("loadOlderMessagesInChat: chat.chatId:" + a.chatId)
            }
            return a.isLoadingInProgress
        }
        ,
        this.loadMessagesInChat = function(a, b, c, d, e) {
            var f = s.generateUniqueId();
            b = Math.max(1, b);
            var g;
            g = d ? {
                from_sequence_number: b,
                to_sequence_number: c
            } : {
                from_index: 1,
                to_index: this.MESSAGE_FETCH_PAGE_SIZE
            };
            var h = $iq({
                to: t.getConvoChatJid(),
                type: "get",
                id: f
            }).c(k.QUERY, {
                xmlns: l.HISTORY_MESSAGES
            }).c(k.CHAT, {
                id: a.chatId
            }).c(k.RANGE, g);
            return this.xmppCallsManager.sendIQ(h, f, !0),
            e && (m[f] = !0),
            f
        }
        ,
        this.messageReadInChat = function(a, b) {
            if (a.senderId != this.usersManager.getThisUser().userId) {
                var c = {
                    xmlns: l.CONVO_MESSAGE,
                    chat_id: b.chatId,
                    message_type: p.toString.call(p, p.RECIPIENT_ACK),
                    timestamp: a.getTimestamp(),
                    sequence_number: a.getSequenceNumber()
                }
                  , d = q.toString(b.chatType);
                if (b.chatType == q.P2P) {
                    var e = b.getOtherParticipant();
                    c.for_user_id = e.userId,
                    c.for_name = e.name
                }
                var f = $msg({
                    id: a.messageId,
                    to: this.getConvoChatJid(),
                    from: this.xmppCallsManager.getJid(),
                    type: d
                }).c(k.CONVO_MESSAGE, c);
                this.xmppCallsManager.sendMessage(f, a.messageId, !0),
                console.log("messageReadInChat: message.messageId:" + a.messageId + ", chat.chatId:" + b.chatId)
            }
        }
        ,
        this.passMessagesInChat = function(a, b) {
            console.log("passMessagesInChat: chat.chatId:" + b.chatId);
            var c = []
              , d = [];
            a.forEach(function(a) {
                var e = b.messageForId(a.messageId);
                e && 0 != e.getSequenceNumber() || (c.push(a),
                (a.type == p.INVITE || a.type == p.LEFT) && d.push(a))
            }),
            c.length && this.addMessagesInChatWithInviteLeaveMessages(c, b, d),
            b.isLoadingInProgress = !1
        }
        ,
        this.addMessagesInChatWithInviteLeaveMessages = function(a, b, c) {
            console.log("addMessagesInChatWithInviteLeaveMessages: chat.chatId:" + b.chatId);
            var d = a.length
              , e = a[d - 1];
            if (d > 1 || e.getSequenceNumber() < b.lastMessageSequenceNumber) {
                var f = !1
                  , g = !1;
                e.getSequenceNumber() > b.lastMessageSequenceNumber && (0 == b.messages.length || 0 != b.messages[b.messages.length - 1].getSequenceNumber()) && (a.splice(d - 1, 1),
                f = !0),
                b.chatType == q.GROUP && c.length && (f && c[c.length - 1] == e && (c.splice(c.length - 1, 1),
                e.type == p.INVITE && e.invitees && e.invitees[this.usersManager.getThisUser().userId] && (g = !0)),
                c.forEach(function(a) {
                    a.type == p.INVITE ? this.updateParticipantsForChatForInviteMessage(b, a, !1) : a.type == p.LEFT && this.updateParticipantsForChatForLeaveMessage(b, a, !1)
                }, this)),
                e.getSequenceNumber() < b.minSequenceNumber ? this.processMessages(a, b, !0, !1, c) : f && !g ? this.processMessages(a, b, !1, !0, c) : this.processMessages(a, b, !1, !1, c),
                f && (b.chatType == q.GROUP ? this.processGroupMessage(e, b) : b.chatType == q.P2P && this.processP2PMessage(e, b))
            } else
                1 == d && (b.chatType == q.P2P ? this.processP2PMessage(a[0], b) : this.processGroupMessage(a[0], b))
        }
        ,
        this.addFetchCall = function(a, b, c, d) {
            this.sendFetchCallToServerForChat(d, a, b);
            var e = new f.chatsdk.MessagesFetchCall(c,a,b)
              , g = this.chatIdToCallsMap[d.chatId];
            g || (this.chatIdToCallsMap[d.chatId] = g = []),
            g.push(e)
        }
        ,
        this.sendFetchCallToServerForChat = function(a, b, c) {
            var d = s.generateUniqueId()
              , e = $iq({
                to: t.getConvoChatJid(),
                type: "get",
                id: d
            }).c(k.QUERY, {
                xmlns: l.HISTORY_MESSAGES
            }).c(k.CHAT, {
                id: a.chatId
            }).c(k.RANGE, {
                from_sequence_number: b,
                to_sequence_number: c
            });
            this.xmppCallsManager.sendIQ(e, d)
        }
        ,
        this.fetchChatMessagesforChat = function(a, b) {
            if (b || !a.isLoadingInProgress) {
                var c = !1
                  , d = 0
                  , e = 0;
                if (0 !== a.unreadCount && a.unreadCount > this.MESSAGE_FETCH_PAGE_SIZE) {
                    c = !0;
                    var f = a.participantForId(this.usersManager.getThisUser().userId);
                    d = f.lastSeenMessageSequenceNumber + 1,
                    e = a.lastMessageSequenceNumber
                }
                this.loadMessagesInChat(a, d, e, c, !1),
                a.isLoadingInProgress = !0
            }
        }
        ,
        this.processMessagesForMissedMessages = function(a, b) {
            if (!a || 0 == a.length || !b || b.isFetchingRecentMessagesForMissedMessages)
                return void console.log("processMessagesForMissedMessages: either chat is null or no messages to process");
            var c, d = a.length, e = this.chatIdToCallsMap[b.chatId], f = a[0].getSequenceNumber(), g = a[d - 1].getSequenceNumber();
            if (console.log("processMessagesForMissedMessages(start): chat.chatId:" + b.chatId + ", callsQueueLength:" + (e ? e.length : 0)),
            g < b.maxSequenceNumber && (!e || 0 == e.length) || b.maxSequenceNumber < 1)
                console.log("processMessagesForMissedMessages: chat.chatId:" + b.chatId + ". Messages received in result of history call, no need to check for missed messages"),
                this.passMessagesInChat(a, b);
            else if (e && 0 != e.length) {
                console.log("processMessagesForMissedMessages: there are one or more calls for this chat waiting for messages chat.chatId:" + b.chatId);
                for (var h, i, j = e.length, k = 0; j > k; k++) {
                    var l = e[k];
                    if (l.getMaxSequenceNoOfMessages() > f) {
                        h = l;
                        break
                    }
                }
                var m = !1;
                if (h || (c = e[j - 1],
                c.getMaxSequenceNoOfMessages() + 1 >= f && (h = c,
                m = !0,
                console.log("processMessagesForMissedMessages: messages added in last call chat.chatId:" + b.chatId))),
                h) {
                    console.log("processMessagesForMissedMessages: messages to be added in suitablecall chat.chatId:" + b.chatId);
                    var o = []
                      , p = [];
                    if (a.forEach(function(a) {
                        a.getSequenceNumber() <= h.getMaxSequenceNoOfMessages() || m ? o.push(a) : p.push(a)
                    }),
                    h.insertMessages(o),
                    p.length && !i) {
                        var q = e.map(function(a) {
                            a.getMaxSequenceNoOfMessages()
                        }).indexOf(h.getMaxSequenceNoOfMessages())
                          , r = q + 1;
                        r >= e.length && (r = q),
                        i = e[r],
                        i.insertMessages(p)
                    }
                    h.getMaxSequenceNoOfMessages() == e[0].getMaxSequenceNoOfMessages() && h.allMessagesReceived() && (console.log("processMessagesForMissedMessages: start dequeing chat.chatId:" + b.chatId),
                    this.startDequeingMessagesFromCallsForChat(b))
                } else
                    console.log("processMessagesForMissedMessages: no suitalbe call found sending another request :" + b.chatId + ", from_sequence_no:" + (c.getMaxSequenceNoOfMessages() + 1) + ", toSequenceNo:" + (f - 1)),
                    c = e[e.length - 1],
                    this.addFetchCall(c.getMaxSequenceNoOfMessages() + 1, f - 1, a, b)
            } else {
                var s = n[b.chatId];
                if (b.maxSequenceNumber + 1 < f && (!s || f > s + 1))
                    if (b.maxSequenceNumber + 50 < f && (!s || f > s + 50))
                        console.debug("Detected 50+ missed messages, will load top 20 only"),
                        b.isFetchingRecentMessagesForMissedMessages = !0,
                        a.length == this.MESSAGE_FETCH_PAGE_SIZE && g === b.lastMessageSequenceNumber ? this.processMessages(a, b, !0, !1, null ) : this.fetchChatMessagesforChat(b, !0);
                    else {
                        var t = b.maxSequenceNumber + 1
                          , u = f - 1;
                        console.log("processMessagesForMissedMessages: missing messages, addFetchCall, chat.chatId:" + b.chatId + ", from_sequence_no:" + t + ", toSequenceNo:" + u),
                        this.addFetchCall(t, u, a, b)
                    }
                else
                    console.log("processMessagesForMissedMessages: message in in sequence chat.chatId:" + b.chatId),
                    this.passMessagesInChat(a, b)
            }
            console.log("processMessagesForMissedMessages(end): chat.chatId:" + b.chatId + ", callsQueueLength:" + (e ? e.length : 0))
        }
        ,
        this.chatsLoaderReceiveHeartBeatXMLMessagesForChat = function(a, b, c) {
            if (a.length) {
                var d = [];
                a.find(k.MESSAGE).each(function() {
                    var a = $(this)
                      , c = a.find(k.CONVO_MESSAGE)
                      , e = a.attr("id")
                      , f = s.makeUserIdFromJid(a.attr("from"))
                      , g = a.find(k.BODY).text()
                      , h = (c.attr("from_name"),
                    parseInt(c.attr("sequence_number")))
                      , l = p.fromString(c.attr("message_type"))
                      , m = parseInt(c.attr("timestamp"))
                      , n = i(a.find(k.CONVO_FILE)[0]);
                    n && (n.itemId = b.chatId);
                    var o = new j.ChatMessage;
                    if (o.setInfo(e, f, g, l, m, h, n),
                    l == p.INVITE) {
                        var q = a.find(k.INVITEES);
                        if (q.length) {
                            var r = {};
                            q.find(k.INVITEE).each(function() {
                                var a = $(this);
                                r[a.attr("id")] = a.attr("name")
                            }),
                            o.invitees = r
                        }
                    }
                    d.push(o)
                });
                var e = d.length;
                if (e) {
                    s.sortMessages(d);
                    var f = d[e - 1];
                    f.skipUnreadCount = !0;
                    var g = this.usersManager.getThisUser().userId
                      , h = b.participantForId(g);
                    c && (f.senderId == g || f.getSequenceNumber() <= h.lastSeenMessageSequenceNumber) && (f.skipNotification = !0),
                    this.processMessagesForMissedMessages(d, b)
                }
            }
        }
        ,
        this.startDequeingMessagesFromCallsForChat = function(a) {
            var b = this.chatIdToCallsMap[a.chatId];
            if (b) {
                var c = []
                  , d = [];
                if (b.forEach(function(a) {
                    (a.allMessagesReceived() || a.hasFailedLoading) && (c = c.concat(a.messages),
                    d.push(a))
                }),
                c.length) {
                    this.passMessagesInChat(c, a);
                    var e;
                    d.forEach(function(a) {
                        e = b.map(function(a) {
                            return a.getMaxSequenceNoOfMessages()
                        }).indexOf(a.getMaxSequenceNoOfMessages()),
                        -1 != e && b.splice(e, 1)
                    })
                }
            }
        }
        ,
        this.callsManagerMessageSendFailed = function(a) {
            a = $(a);
            var b = a.find(k.CONVO_MESSAGE)
              , c = b.attr("chat_id")
              , d = a.attr("id");
            console.log("callsManagerMessageSendFailed: chat.chatId:" + c + ", message.messageId:" + d);
            var e = this.chatIdToChatMap[c];
            if (e) {
                var f = e.messageForId(d);
                if (f) {
                    f.isRetrying = !1;
                    var g = e.messages.map(function(a) {
                        return a.messageId
                    }).indexOf(d);
                    if (-1 != g)
                        for (var h = this.delegates.length, i = 0; h > i; i++) {
                            var j = this.delegates[i];
                            "function" == typeof j.messagesLoaderMessageSendFailedAtIndexInChat && j.messagesLoaderMessageSendFailedAtIndexInChat(f, g, e)
                        }
                }
            }
        }
        ,
        this.destroy = function() {
            n = {}
        }
        ,
        this.callsManagerMessagesIqFailedForFirstFetch = function(a) {
            if (!s.isAdminModeON()) {
                var b, c, d, e = $(a).find("query[xmlns='" + l.HISTORY_MESSAGES + "']").find("chat"), f = e.find("range"), g = e.attr("id"), h = f.attr("from_sequence_number"), i = f.attr("to_sequence_number"), j = f.attr("from_index"), k = f.attr("to_index");
                if (+h > 0 && +i > 0 ? b = !0 : +j > 0 && +k > 0 && (c = !0),
                console.log("callsManagerMessagesIqFailed: chat.chatId:" + g + ", isSquenceCall:" + b + ", isIndexCall:" + c),
                g && (c || b)) {
                    var m = this.chatIdToChatMap[g];
                    if (m) {
                        if (b) {
                            var n = m.participantForId(this.usersManager.getThisUser().userId);
                            +h === n.lastSeenMessageSequenceNumber + 1 && +i === m.lastMessageSequenceNumber && (d = !0)
                        } else
                            c && +k === this.MESSAGE_FETCH_PAGE_SIZE && 1 === +j && (d = !0);
                        if (d) {
                            m.isLoadingInProgress && (m.isLoadingInProgress = !1);
                            for (var o = this.delegates.length, p = 0; o > p; p++) {
                                var q = this.delegates[p];
                                "function" == typeof q.messagesLoaderFailedToLoadHistoryMessagesForChat && q.messagesLoaderFailedToLoadHistoryMessagesForChat(m)
                            }
                        }
                    }
                }
            }
        }
        ,
        this.callsManagerMessagesIqFailed = function(a) {
            var b, c, d = $(a).find("query[xmlns='" + l.HISTORY_MESSAGES + "']"), e = d.attr("chat_id"), f = d.attr("from_sequence_number"), g = d.attr("to_sequence_number"), h = d.attr("from_index"), i = d.attr("to_index");
            if (+f > 0 && +g > 0 ? b = !0 : +h > 0 && +i > 0 && (c = !0),
            console.log("callsManagerMessagesIqFailed: chat.chatId:" + e + ", isSquenceCall:" + b + ", isIndexCall:" + c),
            e && (c || b)) {
                var j = this.chatIdToChatMap[e];
                if (j) {
                    if (c || +g < j.minSequenceNumber)
                        for (var k = this.delegates.length, m = 0; k > m; m++) {
                            var n = this.delegates[m];
                            "function" == typeof n.messagesLoaderFailedToLoadHistoryMessagesForChat && n.messagesLoaderFailedToLoadHistoryMessagesForChat(j)
                        }
                    j.isLoadingInProgress && (j.isLoadingInProgress = !1)
                }
            }
        }
    }
    ,
    f.chatsdk.ComposingStatus = {
        COMPOSING_STARTED: 1,
        COMPOSING_ENDED: 2,
        fromString: function(a) {
            return "start" == a ? this.COMPOSING_STARTED : "stop" == a ? this.COMPOSING_ENDED : null 
        },
        toString: function(a) {
            return a == this.COMPOSING_STARTED ? "start" : a == this.COMPOSING_ENDED ? "stop" : null 
        }
    };
    var f = f || {};
    f.chatsdk = f.chatsdk || {},
    f.chatsdk.PresenceManager = function(a) {
        var b = this;
        this._callsManager = a,
        this.userIdToPresenceMap = {},
        this._callsManager.addListener(f.chatsdk.ChatEvents.CONNECTED, function(a) {
            setTimeout(function() {
                b.fetchRoster()
            }, 0)
        }),
        this._callsManager.addListener(f.chatsdk.ChatEvents.DISCONNECTED, function(a) {
            b.userIdToPresenceMap = {},
            b.dispatch(f.chatsdk.ChatEvents.DISCONNECTED)
        }),
        this._callsManager.addListener(f.chatsdk.ChatEvents.PRESENCE_RECEIVED, function(a) {
            b.onPresenceReceived(a, !1),
            b.dispatch(f.chatsdk.ChatEvents.PRESENCE_CHANGED)
        }),
        this._callsManager.addListener(f.chatsdk.ChatEvents.ROSTER_RECEIVED, function(a) {
            b.onPresenceReceived(a, !0),
            b.dispatch(f.chatsdk.ChatEvents.CONNECTED)
        })
    }
    ,
    f.chatsdk.PresenceManager.prototype = new f.chatsdk.EventDispatcher,
    f.chatsdk.PresenceManager.prototype.constructor = f.chatsdk.PresenceManager,
    f.chatsdk.PresenceManager.prototype.onPresenceReceived = function(a, b) {
        var c = f.chatsdk;
        b && (this.userIdToPresenceMap = {});
        var d = this;
        $(a).find("item").each(function() {
            var a = $(this)
              , b = 0
              , e = a.attr("type")
              , f = a.attr("value");
            if ("unavailable" === e)
                b = c.UserStatus.UNAVAILABLE;
            else if (f)
                switch (f) {
                case "available":
                    b = c.UserStatus.AVAILABLE;
                    break;
                case "away":
                    b = c.UserStatus.IDLE;
                    break;
                case "dnd":
                    b = c.UserStatus.BUSY
                }
            else
                b = c.UserStatus.AVAILABLE;
            d.userIdToPresenceMap[a.attr("user_id")] = {
                status: b,
                device: "mobile" === a.attr("device") ? c.UserDevice.MOBILE : c.UserDevice.DESKTOP
            }
        })
    }
    ,
    f.chatsdk.PresenceManager.prototype.fetchRoster = function() {
        var a = f.chatsdk.ChatUtils.generateUniqueId()
          , b = $iq({
            to: "convop@" + this._callsManager.getDomain(),
            type: "get",
            id: a
        }).c("query", {
            xmlns: "convo:jabber:iq:roster"
        });
        this._callsManager.sendIQ(b, a, !0)
    }
    ,
    f.chatsdk.PresenceManager.prototype.refreshPresence = function() {
        this.fetchRoster()
    }
    ,
    f.chatsdk.PresenceManager.prototype.getUserPresenceInfo = function(a) {
        var b = this.userIdToPresenceMap[a];
        return b ? b.status : -1
    }
    ,
    f.chatsdk.PresenceManager.prototype.changePresence = function(a) {
        var b, c = f.chatsdk, d = c.ChatUtils.generateUniqueId();
        switch (a) {
        case c.UserStatus.AVAILABLE:
            b = $pres({
                id: d
            });
            break;
        case c.UserStatus.BUSY:
            b = $pres({
                id: d
            }).c("show").t("dnd");
            break;
        case c.UserStatus.IDLE:
            b = $pres({
                id: d
            }).c("show").t("away");
            break;
        case c.UserStatus.UNAVAILABLE:
            b = $pres({
                id: d,
                type: "unavailable"
            })
        }
        this._callsManager.sendIQ(b, d, !1)
    }
    ,
    f.chatsdk.PresenceEvent = {
        PRESENCE_CHANGED: "presenceChanged",
        USER_ARRIVED: "usersArrived",
        USER_LEFT: "usersLeft"
    };
    var f = f || {};
    f.chatsdk = f.chatsdk || {},
    f.chatsdk.TimestampManager = function() {
        var a = 0
          , b = 0;
        this.UTCTimestamp = function() {
            var c = 0;
            return c = a ? a + ((new Date).getTime() - b) : (new Date).getTime()
        }
        ,
        this.initializeIfRequired = function(c, d) {
            0 == a && 0 == b && this.setTimestampAccordingToServerTimestamp(c, d)
        }
        ,
        this.update = function(c, d) {
            c > a && d > b && this.setTimestampAccordingToServerTimestamp(c, d)
        }
        ,
        this.setTimestampAccordingToServerTimestamp = function(c, d) {
            b = Math.ceil(((new Date).getTime() - d) / 2),
            a = c + b,
            b = (new Date).getTime()
        }
    }
    ;
    var f = f || {};
    f.chatsdk = f.chatsdk || {},
    f.chatsdk.UserDevice = {
        DESKTOP: 1,
        MOBILE: 2
    },
    f.chatsdk.UserStatus = {
        AVAILABLE: 1,
        BUSY: 2,
        IDLE: 3,
        UNAVAILABLE: 4
    },
    f.chatsdk.UserManager = function(a, b) {
        function c() {
            for (; p.length > 0; )
                p.pop()
        }
        function d(a) {
            var b;
            return q.hasOwnProperty(a) ? (b = q[a],
            delete q[a]) : r.hasOwnProperty(a) && (b = r[a],
            delete r[a]),
            b
        }
        function e(a, b) {
            for (var c = [], d = a.length, e = 0; d > e; e++) {
                var f = a[e];
                (null  != f.getDisplayName().match(b) || null  != f.email.match(b)) && c.push(f)
            }
            return c
        }
        function g(a, b) {
            var c = b || [];
            for (var d in r)
                if (r.hasOwnProperty(d)) {
                    var e = r[d];
                    null  != e.getDisplayName().match(a) && c.push(e)
                }
            return c
        }
        function h(a) {
            return a.replace(new RegExp("([{}()^$&.*?/+|[\\\\]|]|-)","g"), "\\$1")
        }
        var i = f.chatsdk
          , j = this
          , k = null 
          , l = i.UserStatus.AVAILABLE
          , m = b
          , n = !1
          , o = []
          , p = []
          , q = {}
          , r = {}
          , s = !1
          , t = []
          , u = ""
          , v = new f.chatsdk.PresenceManager(a);
        v.addListener(f.chatsdk.ChatEvents.CONNECTED, function() {
            j.onPresenceManagerIsConnected()
        }),
        v.addListener(f.chatsdk.ChatEvents.PRESENCE_CHANGED, function() {
            j.onPresenceChanged()
        }),
        v.addListener(f.chatsdk.ChatEvents.DISCONNECTED, function() {
            j.onPresenceManagerDisconnected()
        });
        var w = !1;
        this.dispose = function() {
            k = null ,
            n = !1,
            c(),
            q = {},
            r = {},
            l = i.UserStatus.AVAILABLE,
            o = [],
            t = [],
            u = ""
        }
        ,
        this.getThisUser = function() {
            return k
        }
        ,
        this.setThisUser = function(a) {
            k || (k = new f.chatsdk.User),
            k.setInfo(a),
            q[k.userId] = k
        }
        ,
        this.getUsers = function() {
            return p
        }
        ,
        this.getUserById = function(a) {
            return console.log("ChatSDK: userManager.getUserById: userId : " + a),
            console.log("ChatSDK: userManager.getUserById: _usersDictionary[userId] : " + q[a]),
            q[a]
        }
        ,
        this.setAppUsersService = function(a) {
            function b() {
                a.getBuddyUsers().then(function(b) {
                    a.fillRelevanciesInUsers().then(function() {
                        j.setUsers(b),
                        console.log("ChatSDK: userManager.setAppUsersService: usersCount : " + b.length),
                        console.log(b),
                        a.trigger("usersForChatInitialized")
                    })
                })
            }
            b(),
            a.on("usersUpdated", function() {
                b()
            })
        }
        ;
        var x = function() {
            p.length && p.sort(f.chatsdk.ChatUtils.usersComparator)
        }
          , y = function(a) {
            j.dispatch(f.chatsdk.ChatEvents.CONNECTED, {
                users: a
            }),
            console.log("ChatSDK: userManager.fireUserManagerConnected: usersCount : " + a.length),
            console.log(a)
        }
        ;
        this.setUsers = function(a) {
            var b, e, f = (a.length,
            {});
            c(),
            a.forEach(function(a) {
                e = a.get("user_id"),
                b = d(e),
                b || (b = new i.User),
                b.setInfoFromModel(a),
                f[e] = b,
                e !== k.userId && p.push(b)
            });
            for (e in q)
                q.hasOwnProperty(e) && (b = q[e],
                b.isAccessible = !1,
                r[e] = b);
            q = f,
            this.updateUsersPresenceStatus(),
            x(),
            s = !0,
            y(p)
        }
        ,
        this.addInaccessibleUser = function(a, b) {
            var c = r[a];
            if (!c) {
                if (c = new i.User,
                c.firstName = b,
                c.userId = a,
                c.isAccessible = !1,
                w) {
                    var d = v.userIdToPresenceMap[a];
                    d && (c.presenceStatus = d.status,
                    c.setDevice(d.device))
                }
                r[a] = c
            }
            return c
        }
        ,
        this.getInaccessibleUserById = function(a) {
            return r[a]
        }
        ;
        this.onUserIdle = function(a) {
            n = !0,
            w && v.changePresence(i.UserStatus.IDLE)
        }
        ,
        this.onUserNonIdle = function(a) {
            n = !1,
            w && (k.setDevice(i.UserDevice.DESKTOP),
            k.presenceStatus = l,
            v.changePresence(l))
        }
        ,
        this.removeUser = function(a) {
            var b = !1
              , c = p.map(function(a) {
                return a.userId
            }).indexOf(a.userId);
            return -1 !== c && (p.splice(c, 1),
            b = !0),
            b
        }
        ,
        this.getThisUserCustomStatus = function() {
            return l
        }
        ,
        this.setThisUserCustomStatus = function(a) {
            if (l !== a && (l = a,
            !n && w)) {
                var b = this.getThisUser();
                b.presenceStatus = a,
                b.customStatus = a,
                v.changePresence(l)
            }
        }
        ;
        var z = function(a, b) {
            j.dispatch(f.chatsdk.ChatEvents.PRESENCE_CHANGED, {
                users: a,
                status: b
            })
        }
        ;
        this.onPresenceChanged = function() {
            var a = this.updateUsersPresenceStatus();
            a && a.length > 0 && (x(),
            z(a, "UPDATED"))
        }
        ,
        this.disConnectUsers = function() {
            var a = [];
            k && k.presenceStatus !== i.UserStatus.UNAVAILABLE && (k.presenceStatus = i.UserStatus.UNAVAILABLE,
            a.push(k));
            for (var b = null , c = p.length, d = 0; c > d; d++)
                b = p[d],
                b.presenceStatus !== i.UserStatus.UNAVAILABLE && (b.presenceStatus = i.UserStatus.UNAVAILABLE,
                b.lastPingTime = m.UTCTimestamp(),
                a.push(b));
            for (var e in r)
                r.hasOwnProperty(e) && (b = r[e],
                b.presenceStatus !== i.UserStatus.UNAVAILABLE && (b.presenceStatus = i.UserStatus.UNAVAILABLE,
                b.lastPingTime = m.UTCTimestamp(),
                a.push(b)));
            x(),
            z(a, "DISCONNECTED")
        }
        ,
        this.onPresenceManagerIsConnected = function() {
            var a = n ? i.UserStatus.IDLE : l;
            w = !0,
            k.presenceStatus = a,
            v.changePresence(a);
            var b = this.updateUsersPresenceStatus();
            b.push(k),
            x(),
            z(b, "CONNECTED")
        }
        ,
        this.updateUsersPresenceStatus = function() {
            var a = [];
            if (v.userIdToPresenceMap) {
                var b = null ;
                for (var c in v.userIdToPresenceMap)
                    if (v.userIdToPresenceMap.hasOwnProperty(c)) {
                        var d = v.userIdToPresenceMap[c];
                        c != k.userId || n ? (b = q[c] || r[c],
                        b && (b.presenceStatus != d.status || b.getDevice() != d.device) && (b.presenceStatus = d.status,
                        b.setDevice(d.device),
                        d.status == i.UserStatus.UNAVAILABLE && (b.lastPingTime = m.UTCTimestamp()),
                        a.push(b))) : (k.presenceStatus = d.status,
                        k.setDevice(d.device),
                        a.push(k))
                    }
            }
            return a
        }
        ,
        this.onPresenceManagerDisconnected = function() {
            w = !1,
            this.disConnectUsers()
        }
        ;
        this.getUserIDFormUserEmail = function(a) {
            var b = this.getUserFormUserEmail(a);
            return b && b.userId ? b.userId : null 
        }
        ,
        this.getUserFormUserEmail = function(a) {
            if (!a)
                return null ;
            a = a.toLowerCase();
            for (var b = p.length, c = null , d = 0; b > d; d++)
                if (c = p[d],
                c.email.toLowerCase() === a)
                    return c;
            return null 
        }
        ,
        this.getFilteredUserList = function(a, b) {
            var c;
            a && (c = new RegExp("(([\\s,<>():@.])|^)(" + h(a) + ")","gi"));
            var d = e(p, c);
            return b ? g(c, d) : d
        }
        ,
        this.isConnected = function() {
            return s
        }
        ,
        this.destroy = function() {
            this.dispose()
        }
    }
    ,
    f.chatsdk.UserManager.prototype = new f.chatsdk.EventDispatcher,
    f.chatsdk.UserManager.prototype.constructor = f.chatsdk.UserManager;
    var f = f || {};
    f.chatsdk = f.chatsdk || {},
    f.chatsdk.XMPPChatService = function(b, c, d, e, g, h, i) {
        function j(a) {
            var b = new p.ProfileClock("XMPPChatService.chatsLoadedFromStore")
              , c = a.chats;
            v.updateUnreadChatsCount(a.unreadChatsCount);
            var d = c ? c.length : 0;
            if (console.log("ConvoChat:xmppChatService", "Chat History RefreshComplete"),
            d > 0) {
                v.localChatsMap = {};
                for (var e, g = 0; d > g; g++)
                    e = c[g],
                    v.localChatsMap[e.chatId] || (v._chats.push(e),
                    v.localChatsMap[e.chatId] = e),
                    v.sharedChatsMap[e.chatId] || (v.sharedChatsMap[e.chatId] = e);
                p.ChatUtils.sortChats(v._chats),
                v.chatsLoader.chatsCacheRefreshed(v._chats),
                f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && v.chatManager.dispatch(q.CHATS_CACHE_REFRESHED)
            }
            b.end()
        }
        function k() {
            var a, b = new p.ProfileClock("XMPPChatService.composingTimerTick"), c = v.timestampManager.UTCTimestamp(), d = [], e = !0;
            v._chats.forEach(function(b) {
                var f = b.composingParticipants.length;
                if (f > 0) {
                    d = [];
                    for (var g, h = 0; f > h; h++) {
                        if (g = b.composingParticipants[h],
                        a = b.composingParticipantsInfo[g.userId],
                        !(c - a > r)) {
                            e = !1;
                            break
                        }
                        d.push(g)
                    }
                    d.forEach(function(a) {
                        b.participantEndedComposing(a)
                    })
                }
            }),
            e && m(),
            b.end()
        }
        function l() {
            o || (o = setInterval(k, s))
        }
        function m() {
            o && (clearInterval(o),
            o = null )
        }
        function n() {
            v._chats.length && v.deltaFetcher.fetchRecentChats() || v.chatsLoader.refreshChats()
        }
        var o, p = f.chatsdk, q = p.ChatEvents, r = 15e3, s = 1e4;
        this.KDispatchIntervalFiveSecs = 5e3,
        this.usersManager = b,
        this.chatManager = g,
        this._unreadChatsCount = 0,
        this.sharedChatsMap = {},
        this.localChatsMap = {},
        this._chats = [];
        var t = i;
        this.deltaFetcher = new p.DeltaFetcher(e,d,this.sharedChatsMap,t),
        this.chatsLoader = new p.ChatsLoader(b,this.sharedChatsMap,d,g,e,h,this.deltaFetcher),
        this.chatsLoader.addDelegate(this),
        this.messagesLoader = new p.MessagesLoader(b,d,this.chatsLoader,this.sharedChatsMap,e,h),
        this.messagesLoader.addDelegate(this);
        var u = new p.ChatSearchManager(this.messagesLoader,this.sharedChatsMap);
        this.filesManager = new p.ChatFilesManager(this.messagesLoader,this.sharedChatsMap),
        this.xmppCallsManager = e;
        var v = this;
        this.xmppCallsManager.addListener(q.CONNECTED, function() {
            setTimeout(function() {
                v.onConnected()
            }, 0)
        }),
        this.xmppCallsManager.addListener(q.DISCONNECTED, function() {
            v.onDisconnected()
        }),
        this.timestampManager = d,
        this._selectedChat = null ,
        $(a).unload(function() {
            t.chatsUpdated(v._chats, !0)
        }),
        t.addListener(q.CHATS_CACHE_REFRESHED, j),
        this.updateUnreadChatsCount = function(a) {
            var b = new p.ProfileClock("XMPPChatService.updateUnreadChatsCount");
            this._unreadChatsCount != a && (this._unreadChatsCount = a >= 0 ? a : 0,
            f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && this.chatManager.dispatch(q.CHATS_UNREAD_COUNT_CHANGED, {
                unreadCount: this._unreadChatsCount
            }),
            t.updateUnreadChatsCount(a)),
            b.end()
        }
        ,
        this.getUnreadChatsCount = function() {
            return this._unreadChatsCount
        }
        ,
        this.usersUpdated = function() {
            var a = new p.ProfileClock("XMPPChatService.usersUpdated");
            this._chats.forEach(function(a) {
                a.resetTitle()
            }),
            a.end()
        }
        ,
        this.startChatWithUser = function(a) {
            var b = new p.ProfileClock("XMPPChatService.startChatWithUser")
              , c = this.chatsLoader.startChatWithUser(a);
            return b.end(),
            c
        }
        ,
        this.openChatFromId = function(a, b, c, d) {
            var e = new p.ProfileClock("XMPPChatService.openChatFromId")
              , f = this.sharedChatsMap[a];
            if (!f) {
                var g = this.usersManager.getThisUser();
                f = (new p.Chat).setInfo(a, null , null , b, 0, 0, 0, !1, g),
                this.sharedChatsMap[f.chatId] = f;
                for (var h, i, j, k = d.length, l = 0; k > l; l++)
                    h = d[l],
                    i = h.userId,
                    j = "function" == typeof h.getDisplayName ? h.getDisplayName() : h.name,
                    f.participantForId(i) || f.addParticipant(new p.ChatParticipant(i,j,p.ParticipantStatus.JOINED,0,0));
                this.chatsLoader.loadChat(a)
            }
            return this.searchEnded(f, null ),
            e.end(),
            f
        }
        ,
        this.openChatInSearch = function(a, b, c, d, e, g) {
            var h, i = new p.ProfileClock("XMPPChatService.openChatInSearch"), j = this.sharedChatsMap[a], k = {
                sequenceNumber: parseInt(e.seq_no),
                messageId: e.msg_id
            };
            if (!j) {
                var l = this.usersManager.getThisUser();
                j = (new p.Chat).setInfo(a, null , null , b, 0, 0, 0, !1, l);
                for (var m, n, o, r = g.length, s = 0; r > s; s++)
                    m = g[s],
                    n = m.userId,
                    o = "function" == typeof m.getDisplayName ? m.getDisplayName() : m.name,
                    j.participantForId(m.userId) || j.addParticipant(new p.ChatParticipant(n,o,p.ParticipantStatus.JOINED,0,0));
                this.sharedChatsMap[j.chatId] = j,
                h = !0,
                this.chatsLoader.loadChat(a)
            }
            if (j.searchInfo && (c != j.searchInfo.searchText ? this.searchEnded(j, null ) : (j.searchInfo.initialMatch = k,
            j.searchInfo.moveToMatch(k))),
            null  == j.searchInfo) {
                var t = new p.ChatSearchInfo(j,c,d,k,u,h);
                j.searchInfo = t,
                f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && j.dispatch(q.SEARCH_STARTED),
                u.startSearchInChat(j)
            }
            return i.end(),
            j
        }
        ,
        this.chatSearchResultsReceived = function(a) {
            var b = new p.ProfileClock("XMPPChatService.chatSearchResultsReceived");
            u.onChatSearchResultsReceived(a),
            b.end()
        }
        ,
        this.searchEnded = function(a, b) {
            var c = new p.ProfileClock("XMPPChatService.searchEnded");
            a.isInSearch() && (a.searchInfo = null ,
            f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && a.dispatch(q.SEARCH_ENDED, {
                reason: b
            })),
            c.end()
        }
        ,
        this.startChatWithUsers = function(a) {
            var b = new p.ProfileClock("XMPPChatService.startChatWithUsers")
              , c = this.chatsLoader.startChatWithUsers(a);
            return b.end(),
            c
        }
        ,
        this.sendMessage = function(a, b) {
            var c = new p.ProfileClock("XMPPChatService.sendMessage");
            this.messagesLoader.sendMessage(a, b, null ),
            c.end()
        }
        ,
        this.muteChat = function(a, b) {
            var c = new p.ProfileClock("XMPPChatService.muteChat");
            this.chatsLoader.muteChat(a, b),
            c.end()
        }
        ,
        this.unMuteChat = function(a, b) {
            var c = new p.ProfileClock("XMPPChatService.unMuteChat");
            this.chatsLoader.unMuteChat(a, b),
            c.end()
        }
        ,
        this.chatsLoaderUpdatedChatMuteStatus = function(a) {
            var b = new p.ProfileClock("XMPPChatService.chatsLoaderUpdatedChatMuteStatus");
            f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && (this.chatManager.dispatch(q.MUTE_STATUS_CHANGED, {
                chat: a
            }),
            a.dispatch(q.MUTE_STATUS_CHANGED)),
            t.chatsUpdated([a]),
            b.end()
        }
        ,
        this.reSendMessageInChat = function(a, b) {
            var c = new p.ProfileClock("XMPPChatService.reSendMessageInChat");
            this.isConnected() && this.messagesLoader.reSendMessageInChat(a, b, !0),
            c.end()
        }
        ,
        this.isConnected = function() {
            return this.xmppCallsManager.isConnected()
        }
        ,
        this.chatRestored = function(a) {
            this.sharedChatsMap[a.chatId] = a
        }
        ,
        this.messagesLoaderSentMessageInChat = function(a, b) {
            var c = new p.ProfileClock("XMPPChatService.messagesLoaderSentMessageInChat");
            console.log("SentMessageInChat:" + a.messageText + ", Timestamp:" + a.getTimestamp()),
            b.addMessage(a);
            var d = this._chats.map(function(a) {
                return a.chatId
            }).indexOf(b.chatId);
            0 > d ? (this._chats.splice(0, 0, b),
            this.localChatsMap[b.chatId] = b,
            f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && this.chatManager.dispatch(q.CHAT_ADDED, {
                chat: b,
                index: 0
            })) : d > 0 ? (this._chats.splice(d, 1),
            this._chats.splice(0, 0, b),
            f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && this.chatManager.dispatch(q.CHAT_MOVED, {
                chat: b,
                fromIndex: d,
                toIndex: 0
            })) : f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && this.chatManager.dispatch(q.CHAT_UPDATED, {
                chat: b,
                index: d
            }),
            f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && this.chatManager.dispatch(q.MESSAGE_SENT_IN_CHAT, {
                message: a,
                chat: b
            }),
            c.end()
        }
        ,
        this.messagesLoaderSentMessageReceivedAtServerInChat = function(a, b) {
            var c = new p.ProfileClock("XMPPChatService.messagesLoaderSentMessageReceivedAtServerInChat");
            console.log("messagesLoaderSentMessageReceivedAtServerInChat:" + a.messageText + ", Timestamp:" + a.getTimestamp() + ",  message.messageId:" + a.messageId + ", chat.chatId:" + b.chatId),
            b.messageUpdated(a),
            f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && b.dispatch(q.SENT_MSG_RECEIVED_AT_SERVER, {
                message: a
            }),
            t.chatsUpdated([b]),
            c.end()
        }
        ,
        this.messagesLoaderReceivedComposingMessageForChatFromParticipant = function(a, b, c) {
            var d = new p.ProfileClock("XMPPChatService.messagesLoaderReceivedComposingMessageForChatFromParticipant")
              , e = p.ComposingStatus;
            c == e.COMPOSING_STARTED ? (a.participantStartedComposing(b, this.timestampManager.UTCTimestamp()),
            l()) : c == e.COMPOSING_ENDED && a.participantEndedComposing(b),
            d.end()
        }
        ,
        this.messagesLoaderUpdatedChat = function(a) {
            var b = new p.ProfileClock("XMPPChatService.messagesLoaderUpdatedChat")
              , c = this._chats.map(function(a) {
                return a.chatId
            }).indexOf(a.chatId);
            f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && (this.chatManager.dispatch(q.CHAT_UPDATED, {
                chat: a,
                index: c
            }),
            a.dispatch(q.PARTICIPANTS_CHANGED)),
            t.chatsUpdated([a]),
            b.end()
        }
        ,
        this.messagesLoaderReceivedMessageInChat = function(a, b) {
            var c = new p.ProfileClock("XMPPChatService.messagesLoaderReceivedMessageInChat");
            if (console.log("messagesLoaderReceivedMessageInChat: message.messageId:" + a.messageId + ", chat.chatId:" + b.chatId),
            p.ChatUtils.isAdminModeONAndOrThisUserIsNotInChatParticipants(b))
                return void b.addMessage(a);
            if (b.addMessage(a)) {
                var d = !1
                  , e = this.usersManager.getThisUser().userId;
                if (!(a.skipUnreadCount || this._selectedChat && b.chatId === this._selectedChat.chatId || e == a.senderId))
                    if (a.type == p.MessageType.MESSAGE)
                        d = !0;
                    else if (a.type == p.MessageType.INVITE && a.invitees)
                        for (var g in a.invitees)
                            if (a.invitees.hasOwnProperty(g) && g == e) {
                                d = !0;
                                break
                            }
                if (d && (0 == b.unreadCount && this.updateUnreadChatsCount(this._unreadChatsCount + 1),
                b.updateUnreadCount(b.unreadCount + 1)),
                a.senderId !== this.usersManager.getThisUser().userId) {
                    var h = b.participantForId(a.senderId);
                    h && b.participantEndedComposing(h)
                }
                b.addMessage(a);
                var i = this._chats.map(function(a) {
                    return a.chatId
                }).indexOf(b.chatId);
                if (0 > i) {
                    var j = this.indexForChat(b);
                    console.log("ConvoChat:ChatManager:messageReceived", "Chat added at index:" + j),
                    this._chats.splice(j, 0, b),
                    this.localChatsMap[b.chatId] = b,
                    this.sharedChatsMap[b.chatId] || (this.sharedChatsMap[b.chatId] = b),
                    f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && this.chatManager.dispatch(q.CHAT_ADDED, {
                        chat: b,
                        index: j
                    })
                } else if (i > 0) {
                    this._chats.splice(i, 1);
                    var j = this.indexForChat(b);
                    i != j ? (this._chats.splice(j, 0, b),
                    console.log("ConvoChat:ChatManager:messageReceived", "Chat moved from index:" + i + " to index:" + j),
                    f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && this.chatManager.dispatch(q.CHAT_MOVED, {
                        chat: b,
                        fromIndex: i,
                        toIndex: j
                    })) : (this._chats.splice(i, 0, b),
                    console.log("ConvoChat:ChatManager:messageReceived", "Chat changed at index:" + i),
                    f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && this.chatManager.dispatch(q.CHAT_UPDATED, {
                        chat: b,
                        index: i
                    }))
                } else
                    f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && this.chatManager.dispatch(q.CHAT_UPDATED, {
                        chat: b,
                        index: i
                    });
                a.type != p.MessageType.LEFT && f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && this.chatManager.dispatch(q.MESSAGE_RECEIVED, {
                    chat: b,
                    message: a
                }),
                f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && b.dispatch(q.MESSAGE_RECEIVED, {
                    message: a
                }),
                t.chatsUpdated([b])
            }
            c.end()
        }
        ,
        this.indexForChat = function(a) {
            for (var b = new p.ProfileClock("XMPPChatService.indexForChat"), c = 0, d = this._chats.length; d > c && !(a.lastMessageTimestamp > this._chats[c].lastMessageTimestamp); c++)
                ;
            return b.end(),
            c
        }
        ,
        this.chatsLoaderReceivedUnreadChatsCount = function(a) {
            var b = new p.ProfileClock("XMPPChatService.chatsLoaderReceivedUnreadChatsCount");
            "undefined" != typeof a && a >= 0 && this.updateUnreadChatsCount(a),
            t.updateUnreadChatsCount(a),
            b.end()
        }
        ,
        this.chatsLoaderChatsRefreshed = function(a, b) {
            var c = new p.ProfileClock("XMPPChatService.chatsLoaderChatsRefreshed");
            this.deltaFetcher.startHeartBeat();
            var d = a.length;
            if (console.log("ConvoChat:xmppChatService", "Chat History RefreshComplete"),
            a && d > 0) {
                for (; this._chats.length > 0; )
                    this._chats.pop();
                this.localChatsMap = {};
                for (var e, g = 0; d > g; g++)
                    e = a[g],
                    this.localChatsMap[e.chatId] || (this._chats.push(e),
                    this.localChatsMap[e.chatId] = e),
                    this.sharedChatsMap[e.chatId] || (this.sharedChatsMap[e.chatId] = e)
            }
            console.log("ConvoChat:xmppChatService", "Notifying for Chat History Refresh Complete"),
            f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && this.chatManager.dispatch(q.CHATS_REFRESHED);
            var h = this;
            b && b.forEach(function(a) {
                h.unreadReadChatCountChanged(a)
            }),
            t.chatsUpdated(a),
            c.end()
        }
        ,
        this.chatsLoaderChatsLoaded = function(a, b) {
            for (var c, d = new p.ProfileClock("XMPPChatService.chatsLoaderChatsLoaded"), e = a.length, g = 0; e > g; ++g)
                c = a[g],
                this.localChatsMap[c.chatId] || (this._chats.push(c),
                this.localChatsMap[c.chatId] = c),
                this.sharedChatsMap[c.chatId] || (this.sharedChatsMap[c.chatId] = c);
            p.ChatUtils.sortChats(this._chats),
            f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && this.chatManager.dispatch(q.CHATS_ADDED, {
                chats: a
            });
            var h = this;
            b.forEach(function(a) {
                h.unreadReadChatCountChanged(a)
            }),
            d.end()
        }
        ,
        this.unreadReadChatCountChanged = function(a) {
            var b = new p.ProfileClock("XMPPChatService.unreadReadChatCountChanged");
            f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && this.chatManager.dispatch(q.CHAT_UNREAD_COUNT_CHANGED, {
                chat: a
            }),
            t.chatsUpdated([a]),
            b.end()
        }
        ,
        this.chatsForFilteredUsers = function(a) {
            var b = new p.ProfileClock("XMPPChatService.chatsForFilteredUsers")
              , c = {
                chats: [],
                users: []
            }
              , d = [];
            if (a && a.length && this._chats.length) {
                var e;
                a.forEach(function(a) {
                    e = !1,
                    this._chats.forEach(function(b) {
                        !d.hasOwnProperty(b.chatId) && b.participantForId(a.userId) && (d[b.chatId] = b,
                        b.chatType == f.chatsdk.ChatType.P2P && (e = !0))
                    }, this),
                    !e && a.isAccessible && c.users.push(a)
                }, this);
                for (var g in d)
                    d.hasOwnProperty(g) && c.chats.push(d[g]);
                p.ChatUtils.sortChats(c.chats)
            } else
                a.forEach(function(a) {
                    a.isAccessible && c.users.push(a)
                });
            return b.end(),
            c
        }
        ,
        this.messagesLoaderReceivedUnreadCountForChat = function(a, b) {
            var c = new p.ProfileClock("XMPPChatService.messagesLoaderReceivedUnreadCountForChat");
            -1 != b && a.unreadCount != b && (0 == a.unreadCount && b > 0 ? (a.updateUnreadCount(b),
            this.unreadReadChatCountChanged(a),
            this.updateUnreadChatsCount(this._unreadChatsCount + 1)) : a.unreadCount > 0 && 0 == b ? (a.updateUnreadCount(b),
            this.unreadReadChatCountChanged(a),
            this.updateUnreadChatsCount(this._unreadChatsCount - 1)) : (a.updateUnreadCount(b),
            this.unreadReadChatCountChanged(a))),
            t.chatsUpdated([a]),
            c.end()
        }
        ,
        this.messagesLoaderMessageReadInChatByParticipant = function(a, b, c) {
            var d = new p.ProfileClock("XMPPChatService.messagesLoaderMessageReadInChatByParticipant");
            console.log("messagesLoaderMessageReadInChatByParticipant: message.messageId:" + a.messageId + ", chat.chatId:" + b.chatId + ", participant.userId:" + c.userId),
            b.messageForId(a.messageId) && b.chatType == p.ChatType.P2P && (f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && b.dispatch(q.MESSAGE_READ, {
                message: a
            }),
            t.chatsUpdated([b])),
            d.end()
        }
        ,
        this.onConnected = function() {
            var a = new p.ProfileClock("XMPPChatService.onConnected+fetchRecentChats");
            n(),
            f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && this.chatManager.dispatch(q.CONNECTED),
            a.end()
        }
        ,
        this.onDisconnected = function() {
            var a = new p.ProfileClock("XMPPChatService.onDisconnected");
            f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && this.chatManager.dispatch(q.DISCONNECTED),
            this.deltaFetcher.stopHeartBeat(),
            a.end()
        }
        ,
        this.chatOpened = function(a) {
            var b = new p.ProfileClock("XMPPChatService.chatOpened");
            this.messagesLoader.chatOpened(a),
            b.end()
        }
        ,
        this.getChat = function(a) {
            return this.sharedChatsMap[a]
        }
        ,
        this.chatClosed = function(a) {
            var b = new p.ProfileClock("XMPPChatService.chatClosed");
            a.isOpened = !1,
            this.chatLostFocus(a),
            a.discardOldMessagesIfRequired(),
            b.end()
        }
        ,
        this.chatGainedFocus = function(a) {
            this._selectedChat = a
        }
        ,
        this.chatLostFocus = function(a) {
            this._selectedChat && this._selectedChat.chatId == a.chatId && (this._selectedChat = null )
        }
        ,
        this.appFocusGained = function() {
            var a = new p.ProfileClock("XMPPChatService.appFocusGained");
            this.chatsLoader.appFocusGained(),
            a.end()
        }
        ,
        this.appFocusLost = function() {
            var a = new p.ProfileClock("XMPPChatService.appFocusLost");
            this.chatsLoader.appFocusLost(),
            this._selectedChat = null ,
            a.end()
        }
        ,
        this.messagesLoaderLoadedNewerMessagesInChat = function(a, b, c) {
            var d = new p.ProfileClock("XMPPChatService.messagesLoaderLoadedNewerMessagesInChat");
            b.appendMessages(a),
            (!this._selectedChat || b.chatId !== this._selectedChat.chatId || b.isInSearch()) && c > 0 && (0 == b.unreadCount && this.updateUnreadChatsCount(this._unreadChatsCount + 1),
            b.updateUnreadCount(b.unreadCount + c),
            this.unreadReadChatCountChanged(b)),
            f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && b.dispatch(q.NEWER_MESSAGES_LOADED, {
                messages: a
            }),
            t.chatsUpdated([b]),
            d.end()
        }
        ,
        this.messagesLoaderLoadedHistoryMessagesInChat = function(a, b, c, d) {
            var e = new p.ProfileClock("XMPPChatService.messagesLoaderLoadedHistoryMessagesInChat");
            c ? b.searchInfo && b.searchInfo.addMessages(a, d) : (b.isFetchingRecentMessagesForMissedMessages && a.length && a[0].getSequenceNumber() >= b.minSequenceNumber && (b.isFetchingRecentMessagesForMissedMessages = !1,
            b.removeAllMessages(),
            console.debug("Removing old messages to insert top 20 messages")),
            b.prependMessages(a),
            f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && b.dispatch(q.HISTORY_LOADED),
            t.chatsUpdated([b])),
            e.end()
        }
        ,
        this.chatsLoaderLoadedChat = function(a, b, c, d) {
            var e = new p.ProfileClock("XMPPChatService.chatsLoaderLoadedChat");
            a.searchInfo && a.searchInfo.chatLoaded();
            var g;
            if (d && 1 == a.messages.length && a.chatType == p.ChatType.GROUP) {
                if (g = a.messages[0],
                g.type != p.MessageType.MESSAGE || this._selectedChat && a.chatId === this._selectedChat.chatId || this.usersManager.getThisUser().userId == g.senderId || a.unreadCount > 0 && (a.updateUnreadCount(a.unreadCount),
                c = !0,
                this.updateUnreadChatsCount(this._unreadChatsCount + 1)),
                g.type != p.MessageType.LEFT && f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && this.chatManager.dispatch(q.MESSAGE_RECEIVED, {
                    chat: a,
                    message: g
                }),
                f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && a.dispatch(q.MESSAGE_RECEIVED, {
                    message: g
                }),
                this.usersManager.getThisUser().userId != g.senderId) {
                    var h = a.participantForId(g.senderId);
                    h && a.participantEndedComposing(h)
                }
                c && this.unreadReadChatCountChanged(a)
            }
            this.chatLoadComplete(a, b, d),
            e.end()
        }
        ,
        this.chatLoadComplete = function(a, b, c) {
            if (!p.ChatUtils.isAdminModeONAndThisUserIsNotInChatParticipants(a)) {
                var d = new p.ProfileClock("XMPPChatService.chatLoadComplete")
                  , e = this._chats.map(function(a) {
                    return a.chatId
                }).indexOf(a.chatId);
                if (0 > e) {
                    if (c) {
                        var g = this.indexForChat(a);
                        this._chats.splice(g, 0, a),
                        this.localChatsMap[a.chatId] = a,
                        f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && this.chatManager.dispatch(q.CHAT_ADDED, {
                            chat: a,
                            index: 0
                        })
                    }
                } else {
                    this._chats.splice(e, 1);
                    var g = this.indexForChat(a);
                    e !== g ? (this._chats.splice(g, 0, a),
                    f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && this.chatManager.dispatch(q.CHAT_MOVED, {
                        chat: a,
                        fromIndex: e,
                        toIndex: g
                    })) : (this._chats.splice(e, 0, a),
                    f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && (this.chatManager.dispatch(q.CHAT_UPDATED, {
                        chat: a,
                        index: e
                    }),
                    a.dispatch(q.CHAT_UPDATED)))
                }
                this.sharedChatsMap[a.chatId] || (this.sharedChatsMap[a.chatId] = a),
                t.chatsUpdated([a]),
                d.end()
            }
        }
        ,
        this.loadOlderMessagesInChat = function(a) {
            var b = new p.ProfileClock("XMPPChatService.loadOlderMessagesInChat")
              , c = this.messagesLoader.loadOlderMessagesInChat(a);
            return b.end(),
            c
        }
        ,
        this.loadOlderChats = function() {
            var a = new p.ProfileClock("XMPPChatService.loadOlderChats")
              , b = this.canLoadOlderChats() && this.chatsLoader.loadMoreChatsFromIndex(this._chats.length);
            return a.end(),
            b
        }
        ,
        this.canLoadOlderChats = function() {
            var a = new p.ProfileClock("XMPPChatService.canLoadOlderChats")
              , b = this.chatsLoader.canLoadMoreChats();
            return a.end(),
            b
        }
        ,
        this.chatRead = function(a) {
            var b = new p.ProfileClock("XMPPChatService.chatRead");
            if (a.unreadCount > 0) {
                var c = a.messages.length;
                if (this.chatsLoader.chatRead(a),
                c > 0)
                    for (var d, e = c - 1; e >= 0; --e)
                        if (d = a.messages[e],
                        d.type == p.MessageType.MESSAGE && d.getSequenceNumber() > 0 && d.senderId != this.usersManager.getThisUser().userId) {
                            this.messageRead(d, a);
                            break
                        }
                a.unreadCount = 0,
                f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && (this.chatManager.dispatch(q.CHAT_READ, {
                    chat: a
                }),
                a.dispatch(q.CHAT_READ)),
                this.updateUnreadChatsCount(this._unreadChatsCount - 1)
            }
            t.chatsUpdated([a]),
            b.end()
        }
        ,
        this.chatsLoaderChatMarkedRead = function(a) {
            var b = new p.ProfileClock("XMPPChatService.chatsLoaderChatMarkedRead");
            a.unreadCount > 0 && (a.resetUnreadCount(),
            f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && a.dispatch(q.UNREAD_COUNT_CHANGED),
            this.unreadReadChatCountChanged(a),
            this.updateUnreadChatsCount(this._unreadChatsCount - 1)),
            b.end()
        }
        ,
        this.messageRead = function(a, b) {
            var c = new p.ProfileClock("XMPPChatService.messageRead");
            this.messagesLoader.messageReadInChat(a, b),
            c.end()
        }
        ,
        this.inviteUsersInChat = function(a, b) {
            var c = new p.ProfileClock("XMPPChatService.inviteUsersInChat");
            this.messagesLoader.inviteUsersInChat(a, b),
            c.end()
        }
        ,
        this.updateParticipantsInChat = function(a, b) {
            var c, d = this.timestampManager.UTCTimestamp();
            for (var e in a)
                if (a.hasOwnProperty(e)) {
                    var f = b.participantForId(e.userId);
                    if (!f) {
                        var g = "function" == typeof e.getDisplayName ? e.getDisplayName() : e.name;
                        b.addParticipant(new p.ChatParticipant(e.userId,g,p.ParticipantStatus.JOINED,0,d)),
                        c = !0
                    }
                }
            c && (b.setTitle(null ),
            b.dispatch(q.PARTICIPANTS_CHANGED))
        }
        ,
        this.leaveChat = function(a) {
            var b = new p.ProfileClock("XMPPChatService.leaveChat");
            this.filesManager.cancelUploadsInChat(a),
            this.messagesLoader.leaveChat(a),
            b.end()
        }
        ,
        this.sendFilesInChat = function(a, b) {
            var c = new p.ProfileClock("XMPPChatService.sendFilesInChat");
            this.filesManager.onFileLoaded(a, b),
            c.end()
        }
        ,
        this.onFileDataChanged = function(a) {
            var b = new p.ProfileClock("XMPPChatService.onFileDataChanged");
            this.filesManager.onFileDataChanged(a),
            b.end()
        }
        ,
        this.cancelMessageInChat = function(a, b) {
            var c = new p.ProfileClock("XMPPChatService.cancelMessageInChat");
            this.filesManager.cancelMessage(a, b),
            this.messagesLoader.cancelMessageInChat(a, b),
            b.cancelMessage(a),
            c.end()
        }
        ,
        this.composingStarted = function(a) {
            var b = new p.ProfileClock("XMPPChatService.composingStarted");
            this.messagesLoader.thisUserComposingInChat(a, f.chatsdk.ComposingStatus.COMPOSING_STARTED),
            b.end()
        }
        ,
        this.composingPaused = function(a) {
            var b = new p.ProfileClock("XMPPChatService.composingPaused");
            this.messagesLoader.thisUserComposingInChat(a, f.chatsdk.ComposingStatus.COMPOSING_ENDED),
            b.end()
        }
        ,
        this.messagesLoaderFailedToLoadHistoryMessagesForChat = function(a) {
            console.log("messagesLoaderFailedToLoadHistoryMessagesForChat"),
            this.chatOpened(a)
        }
        ,
        this.messagesLoaderMessageSendFailedAtIndexInChat = function(a, b, c) {
            var d = new p.ProfileClock("XMPPChatService.messagesLoaderMessageSendFailedAtIndexInChat");
            f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && c.dispatch(q.SENT_MSG_FAILED, {
                message: a,
                index: b
            }),
            d.end()
        }
        ,
        this.chatsLoaderChatLoadFailedForId = function(a) {}
        ,
        this.chatsLoaderChatsLoadFailed = function() {}
        ,
        this.chatsLoaderMarkChatReadFailed = function(a) {}
        ,
        this.chatsLoaderMuteChatFailed = function(a) {}
        ,
        this.chatInfoReceived = function(a) {
            a.dispatch(p.ChatEvents.CHAT_INFO_RECV)
        }
        ,
        this.destroy = function() {
            var a = new p.ProfileClock("XMPPChatService.destroy");
            for (m(),
            t.chatsUpdated(this._chats); this._chats.length > 0; )
                this._chats.pop();
            this.localChatsMap = {},
            this.messagesLoader.destroy(),
            a.end()
        }
    }
    ,
    Strophe.addConnectionPlugin("connectionmanager", {
        pingTime: 2e4,
        timeoutTime: 1e4,
        pingInterval: null ,
        connection: null ,
        totalRetries: 0,
        maxRetries: 2,
        pingInProgress: !1,
        init: function(a) {
            this.connection = a
        },
        statusChanged: function(a) {
            var b = this;
            switch (a) {
            case Strophe.Status.CONNECTED:
            case Strophe.Status.ATTACHED:
                clearInterval(this.pingInterval),
                this.pingInterval = setInterval(function() {
                    b.pingServer()
                }, this.pingTime);
                break;
            case Strophe.Status.DISCONNECTED:
                clearInterval(this.pingInterval)
            }
        },
        pingServer: function() {
            this.pingInProgress && this.disconnect();
            var a = this
              , b = $iq({
                id: "ping",
                type: "get",
                to: this.connection.domain
            }).c("ping", {
                xmlns: "urn:xmpp:ping"
            });
            this.connection.sendIQ(b, function() {
                a.callback()
            }, function() {
                a.requestTimedOut()
            }, this.timeoutTime)
        },
        requestTimedOut: function() {
            this.pingInProgress = !1,
            this.totalRetries++,
            this.totalRetries >= this.maxRetries && this.disconnect()
        },
        disconnect: function() {
            clearInterval(this.pingInterval),
            console.log(this.maxRetries + " pings failed, disconnecting from xmpp now"),
            this.connection.disconnect()
        },
        callback: function() {
            this.pingInProgress = !1,
            this.totalRetries = 0
        }
    });
    var f = f || {};
    f.chatsdk = f.chatsdk || {},
    f.chatsdk.ChatEvents = {
        PRESENCE_CHANGED: "presenceChanged",
        CONNECTED: "connected",
        DISCONNECTED: "disconnected",
        ROSTER_RECEIVED: "rosterReceived",
        PRESENCE_RECEIVED: "presenceReceived",
        CHAT_READ: "chtRead",
        HEARTBEAT_RECEIVED: "heartbeatRcvd",
        RECENT_CHATS_RECEIVED: "recentChtsRcvd",
        FILE_UPLOADED: "fileUploaded",
        MESSAGE_SENT: "messageSent",
        MESSAGE_RECEIVED: "msgRcvd",
        MESSAGE_REMOVED: "msgRmvd",
        CHAT_STARTED: "chatStrtd",
        CHAT_UNREAD_COUNT_CHANGED: "chtunrdcntchng",
        CHATS_UNREAD_COUNT_CHANGED: "chtsunrdcntchng",
        CHATS_REFRESHED: "chtsRefrshd",
        CHATS_CACHE_REFRESHED: "chtsCacheRefrshd",
        CHAT_HISTORY_RECEIVED: "chatHistoryRcvd",
        MESSAGE_HISTORY_RECEIVED: "msgHistoryRcvd",
        CHAT_INFO_RECEIVED: "chtInfoRcvd",
        CHAT_ADDED: "chatAdded",
        CHATS_ADDED: "chatsAdded",
        CHAT_MOVED: "chatMoved",
        CHAT_LOADED: "chatLoaded",
        MESSAGE_SENT_IN_CHAT: "messageSentInChat",
        CHATS_QUERY_RECEIVED: "chtsQryRcvd",
        MUTE_STATUS_CHANGED: "muteStatusChanged",
        UNREAD_COUNT_CHANGED: "unreadCntChngd",
        TITLE_CHANGED: "titleChngd",
        PARTICIPANTS_CHANGED: "prtcpntsChngd",
        CHAT_UPDATED: "chatUptd",
        LEFT: "left",
        JOINED: "joined",
        SENT_MSG_RECEIVED_AT_SERVER: "messageRcvdAtSrvr",
        MESSAGE_READ: "messageRead",
        HISTORY_LOADED: "historyLoaded",
        NEWER_MESSAGES_LOADED: "newMsgsLoaded",
        LOADING_STATUS_CHANGED: "lodngStusChng",
        COMPOSING_STARTED: "composingStarted",
        COMPOSING_ENDED: "composingEnded",
        SEARCH_STARTED: "srchStrtd",
        SEARCH_MATCHES_RECEIVED: "srchMtchsRcvd",
        MATCH_FETCH_COMPLETE: "mtchFtchCmplt",
        SEARCH_ENDED: "srchEnded",
        SENT_MSG_FAILED: "sentMsgFailed",
        LOADED_MORE_MSGS: "loadedMoreMsgs",
        MESSAGE_SEND_FAILED: "msgSndFail",
        MESSAGES_IQ_FAILED: "msgIqFail",
        CHATS_IQ_FAILED: "chtsIqFail"
    };
    var f = f || {};
    f.chatsdk = f.chatsdk || {},
    f.chatsdk.ChatUtils = {
        NODE_SEPERATOR: ";",
        generateUniqueId: function() {
            for (var a, b = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789", c = 30, d = "", e = b.length, f = 0; c > f; f += 1)
                a = Math.random() * e,
                d += b.charAt(a);
            return d.toLowerCase()
        },
        makeJid: function(a, b, c, d) {
            var e = d ? "/web2native-" : "/web2-";
            return a + this.NODE_SEPERATOR + b + "@" + c + e + this.generateUniqueId()
        },
        escape: function(a) {
            return a = _.escape(a),
            a.replace(/&#x27;/g, "&apos;")
        },
        unescape: function(a) {
            return a ? (a = a.replace(/&apos;/g, "'"),
            _.unescape(a)) : null 
        },
        usersComparator: function(a, b) {
            return a.compareTo(b)
        },
        compareMessageSequenceNumber: function(a, b) {
            return a.getSequenceNumber() < b.getSequenceNumber() ? -1 : a.getSequenceNumber() > b.getSequenceNumber() ? 1 : 0
        },
        sortMessages: function(a, b) {
            if (b)
                return a.sort(this.compareMessageSequenceNumber);
            var c = this;
            a.sort(function(a, b) {
                return a.clientTimestamp < b.clientTimestamp ? -1 : a.clientTimestamp > b.clientTimestamp ? 1 : c.compareMessageSequenceNumber(a, b)
            })
        },
        sortChats: function(a) {
            a.sort(function(a, b) {
                return a.lastMessageTimestamp < b.lastMessageTimestamp ? 1 : a.lastMessageTimestamp > b.lastMessageTimestamp ? -1 : 0
            })
        },
        generateChatId: function(a, b) {
            var c = null ;
            if (a && b) {
                var d = this.makeUserIdAndAccountIdFromJid(a);
                c = d[0];
                var e = d[1];
                c += e.localeCompare(b) < 0 ? e + b : b + e,
                c = $().crypt({
                    method: "sha1",
                    source: c
                })
            }
            return c.toLowerCase()
        },
        makeUserIdFromJid: function(a) {
            return this.makeUserIdAndAccountIdFromJid(a)[1]
        },
        makeAccountIdFromJid: function(a) {
            return this.makeUserIdAndAccountIdFromJid(a)[0]
        },
        makeUserIdAndAccountIdFromJid: function(a) {
            var b = a.split("@")[0];
            return b.split(this.NODE_SEPERATOR);
        },
        userInfoService: null ,
        isAdminModeONAndThisUserIsNotInChatParticipants: function(a) {
            return f.chatsdk.ChatUtils.userInfoService.isAdminMode() && !a.isThisUserIsInParticipants()
        },
        isAdminModeONAndOrThisUserIsNotInChatParticipants: function(a) {
            return f.chatsdk.ChatUtils.userInfoService.isAdminMode() && !a.isThisUserIsInParticipants() || !a.isThisUserIsInParticipants()
        },
        isAdminModeON: function() {
            return f.chatsdk.ChatUtils.userInfoService.isAdminMode()
        }
    };
    var f = f || {};
    f.chatsdk = f.chatsdk || {},
    f.chatsdk.Constants = {
        DISPATCH_EVENTS_TO_UI: !0,
        XMLNS: {
            CONVO_MESSAGE: "http://convo.com/xmpp/chat/message",
            PARTICIPANTS: "http://convo.com/xmpp/chat/message/participants",
            HISTORY_MESSAGES: "convo:chat:history:messages",
            HISTORY_CHATS: "convo:chat:history:chats",
            CONVO_FILE: "http://convo.com/xmpp/chat/file",
            CHAT_INFO: "convo:chat:info",
            CHAT_READ: "convo:chat:mark:read",
            CHAT_MUTE: "convo:chat:mute",
            FOCUS_GAIN: "convo:app:focus:gain",
            FOCUS_LOSE: "convo:app:focus:loose",
            HEARTBEAT: "convo:chat:heartbeat",
            RECENT_CHATS: "convo:chat:history:recent:chats",
            ROSTER: "convo:jabber:iq:roster",
            PRESENCE_BATCHED: "convo:presence:batched"
        },
        TAG: {
            CONVO_FILE: "convo-file",
            BODY: "body",
            CONVO_MESSAGE: "convo-message",
            PARTICIPANTS: "participants",
            PARTICIPANT: "participant",
            INVITEES: "invitees",
            INVITEE: "invitee",
            QUERY: "query",
            CHAT: "chat",
            CHATS: "chats",
            CHATS_FOR_STATUS_UPDATE: "chats-for-status-update",
            RANGE: "range",
            MESSAGE: "message",
            MESSAGES: "messages"
        }
    };
    var f = f || {};
    f.chatsdk = f.chatsdk || {},
    f.chatsdk.ProfileClock = function(a) {
        this.methodName = a,
        this.startDate = new Date
    }
    ,
    f.chatsdk.ProfileClock.prototype.end = function() {
        function a(a) {
            return a.getHours() + ":" + a.getMinutes() + ":" + a.getSeconds() + ":" + a.getMilliseconds()
        }
        var b = new Date
          , c = f.chatsdk.ProfileClock.TAG + this.methodName + " Start: " + a(this.startDate) + ", End:" + a(b) + ", Total:" + (b.getTime() - this.startDate.getTime()) + "ms";
        console.debug(c)
    }
    ,
    f.chatsdk.ProfileClock.TAG = "--> PERF.SDK:";
    var f = f || {};
    f.chatsdk = f.chatsdk || {},
    f.chatsdk.MuteAction = {
        MUTE: "mute",
        UNMUTE: "unmute"
    },
    f.chatsdk.ChatType = {
        P2P: 1,
        GROUP: 2,
        toString: function(a) {
            return a == this.P2P ? "chat" : a == this.GROUP ? "groupchat" : null 
        },
        fromString: function(a) {
            return "chat" == type ? this.P2P : "groupchat" == type ? this.GROUP : null 
        }
    },
    f.chatsdk.Chat = function() {
        f.chatsdk.EventDispatcher.call(this),
        this.isFetchingRecentMessagesForMissedMessages = !1,
        this.chatId = null ,
        this._title = null ,
        this._summeryText = null ,
        this.chatType = 0,
        this.unreadCount = 0,
        this.lastMessageTimestamp = 0,
        this.lastMessageSequenceNumber = 0,
        this.participants = {},
        this.thisUser = null ,
        this.messagesMap = {},
        this.messages = [],
        this.minSequenceNumber = 0,
        this.composingParticipants = [],
        this.composingParticipantsInfo = {},
        this.isMuted = !1,
        this.isMuteStatusUpdateInProgress = !1,
        this.isLoadingInProgress = !1,
        this.maxSequenceNumber = 0,
        this.searchInfo = null ,
        this.messageDraft = "",
        this.isOpened = !1
    }
    ,
    f.chatsdk.Chat.prototype = new f.chatsdk.EventDispatcher,
    f.chatsdk.Chat.prototype.constructor = f.chatsdk.Chat,
    f.chatsdk.Chat.prototype.setInfo = function(a, b, c, d, e, f, g, h, i) {
        return this.chatId = a,
        this._title = b,
        this.setSummeryText(c),
        this.chatType = d,
        this.unreadCount = +e,
        this.lastMessageTimestamp = +f,
        this.lastMessageSequenceNumber = +g,
        this.thisUser = i,
        this.isMuted = h,
        this
    }
    ,
    f.chatsdk.Chat.prototype.toJSON = function() {
        return {
            chatId: this.chatId,
            _summeryText: this._summeryText,
            chatType: this.chatType,
            unreadCount: this.unreadCount,
            lastMessageTimestamp: this.lastMessageTimestamp,
            lastMessageSequenceNumber: this.lastMessageSequenceNumber,
            isMuted: this.isMuted,
            participants: this.participants,
            messageDraft: this.messageDraft,
            minSequenceNumber: this.minSequenceNumber,
            maxSequenceNumber: this.maxSequenceNumber
        }
    }
    ,
    f.chatsdk.Chat.prototype.copy = function() {
        return (new f.chatsdk.Chat).initialize(this)
    }
    ,
    f.chatsdk.Chat.prototype.initialize = function(a) {
        if (!a.chatId)
            throw new Error("Chat id can not be null");
        return this.setInfo(a.chatId, a._title, a._summeryText, a.chatType, a.unreadCount, a.lastMessageTimestamp, a.lastMessageSequenceNumber, a.isMuted, a.thisUser),
        this.participants = a.participants,
        this.messageDraft = a.messageDraft,
        this.minSequenceNumber = a.minSequenceNumber,
        this.maxSequenceNumber = a.maxSequenceNumber,
        this
    }
    ,
    f.chatsdk.Chat.prototype.update = function(a, b, c, d, e) {
        this._title = a,
        this.setSummeryText(b),
        this.unreadCount = +c,
        this.isMuted = e,
        this.lastMessageTimestamp < +d && (this.lastMessageTimestamp = +d)
    }
    ,
    f.chatsdk.Chat.prototype.addParticipant = function(a) {
        a.userId && !this.participants[a.userId] && (this.participants[a.userId] = a,
        this._title = null )
    }
    ,
    f.chatsdk.Chat.prototype.participantForId = function(a) {
        return this.participants[a]
    }
    ,
    f.chatsdk.Chat.prototype.getOtherParticipant = function() {
        var a = null ;
        for (var b in this.participants)
            if (this.participants.hasOwnProperty(b) && b !== this.thisUser.userId) {
                a = this.participants[b];
                break
            }
        return a
    }
    ,
    f.chatsdk.Chat.prototype.isThisUserIsInParticipants = function() {
        var a = !1;
        for (var b in this.participants)
            if (this.participants.hasOwnProperty(b) && b === this.thisUser.userId) {
                a = !0;
                break
            }
        return a
    }
    ,
    f.chatsdk.Chat.prototype.addMessage = function(a) {
        var b = f.chatsdk
          , c = !1;
        return a && !this.messagesMap[a.messageId] && (this.messagesMap[a.messageId] = a,
        this.messages.push(a),
        c = !0,
        (a.type === b.MessageType.INVITE || a.type === b.MessageType.LEFT) && (this._title = null ),
        a.type === b.MessageType.MESSAGE && (this._summeryText = null ),
        this.updateSequenceNumbers(a.getSequenceNumber()),
        this.lastMessageTimestamp < a.getTimestamp() && (this.lastMessageTimestamp = a.getTimestamp())),
        c
    }
    ,
    f.chatsdk.Chat.prototype.removeMessage = function(a) {
        if (a && 0 != this.messages.length) {
            var b = this.messages.map(function(a) {
                return a.messageId
            }).indexOf(a.messageId);
            -1 !== b && (this.messages.splice(b, 1),
            delete this.messagesMap[a.messageId])
        }
    }
    ,
    f.chatsdk.Chat.prototype.removeAllMessages = function() {
        for (; this.messages.length > 0; )
            this.messages.pop();
        this.messagesMap = {},
        this.minSequenceNumber = 0,
        this.maxSequenceNumber = 0
    }
    ,
    f.chatsdk.Chat.prototype.prependMessages = function(a) {
        if (!a || 0 === a.length)
            return 0;
        var b, c = 0, d = a.length, e = !1, g = null , h = null ;
        if (d > 0)
            for (var i = 0, j = d - 1; j >= 0; --j) {
                b = a[j],
                b.getSequenceNumber() > 0 && (g ? g.getSequenceNumber() > b.getSequenceNumber() && (g = b) : g = b),
                h ? h.getSequenceNumber() < b.getSequenceNumber() && (h = b) : h = b;
                var k = this.messagesMap[b.messageId];
                if (k) {
                    if (b.clientTimestamp = k.clientTimestamp,
                    0 !== k.getSequenceNumber())
                        continue;this.removeMessage(k),
                    e = !0,
                    --c
                }
                this.messages.splice(i++, 0, b),
                this.messagesMap[b.messageId] = b,
                e = !0,
                ++c
            }
        return e && (f.chatsdk.ChatUtils.sortMessages(this.messages),
        this._summeryText = null ,
        g && this.updateSequenceNumbers(g.getSequenceNumber()),
        h && this.updateSequenceNumbers(h.getSequenceNumber()),
        b = this.messages[this.messages.length - 1],
        this.lastMessageTimestamp < b.getTimestamp() && (this.lastMessageTimestamp = b.getTimestamp())),
        c
    }
    ,
    f.chatsdk.Chat.prototype.appendMessages = function(a) {
        if (!a || 0 === a.length)
            return 0;
        var b, c = 0, d = a.length, e = !1, g = null , h = null ;
        if (d > 0)
            for (var i = 0; d > i; ++i) {
                b = a[i],
                b.getSequenceNumber() > 0 && (g ? g.getSequenceNumber() > b.getSequenceNumber() && (g = b) : g = b),
                h ? h.getSequenceNumber() < b.getSequenceNumber() && (h = b) : h = b;
                var j = this.messagesMap[b.messageId];
                if (j) {
                    if (b.clientTimestamp = j.clientTimestamp,
                    0 !== j.getSequenceNumber())
                        continue;this.removeMessage(j),
                    e = !0,
                    --c
                }
                this.messages.push(b),
                this.messagesMap[b.messageId] = b,
                e = !0,
                ++c
            }
        return e && (f.chatsdk.ChatUtils.sortMessages(this.messages),
        this._summeryText = null ,
        g && this.updateSequenceNumbers(g.getSequenceNumber()),
        this.updateSequenceNumbers(h.getSequenceNumber()),
        b = this.messages[this.messages.length - 1],
        this.lastMessageTimestamp < b.getTimestamp() && (this.lastMessageTimestamp = b.getTimestamp())),
        c
    }
    ,
    f.chatsdk.Chat.prototype.discardOldMessagesIfRequired = function() {
        var a = this.messages.length
          , b = 40;
        if (a > b) {
            for (var c = a - b; c >= 0; --c) {
                var d = this.messages[c];
                delete this.messagesMap[d.messageId]
            }
            this.messages.splice(0, a - b),
            this.minSequenceNumber = this.messages[0].getSequenceNumber()
        }
    }
    ,
    f.chatsdk.Chat.prototype.messageForId = function(a) {
        return this.messagesMap[a]
    }
    ,
    f.chatsdk.Chat.prototype.messageUpdated = function(a) {
        this.updateSequenceNumbers(a.getSequenceNumber()),
        this.lastMessageTimestamp < a.getTimestamp() && (this.lastMessageTimestamp = a.getTimestamp())
    }
    ,
    f.chatsdk.Chat.prototype.updateSequenceNumbers = function(a) {
        a && a > 0 && (this.minSequenceNumber || this.maxSequenceNumber ? this.minSequenceNumber > a ? this.minSequenceNumber = a : this.maxSequenceNumber < a && (this.maxSequenceNumber = a) : this.minSequenceNumber = this.maxSequenceNumber = a)
    }
    ,
    f.chatsdk.Chat.prototype.resetTitle = function() {
        this._title = null 
    }
    ,
    f.chatsdk.Chat.prototype.updateLastMessageSequenceNumber = function(a) {
        this.lastMessageSequenceNumber < a && (this.lastMessageSequenceNumber = a)
    }
    ,
    f.chatsdk.Chat.prototype.cancelMessage = function(a) {
        var b = !1
          , c = this.messages.length;
        if (null  != a) {
            for (var d = c - 1; d >= 0; d--) {
                var e = this.messages[d];
                if (e.messageId === a.messageId)
                    break
            }
            d >= 0 && (d == c - 1 && a.getTimestamp() == this.lastMessageTimestamp && (0 == d ? this.lastMessageTimestamp = 0 : this.lastMessageTimestamp = this.messages[d - 1].getTimestamp()),
            this.messages.splice(d, 1),
            delete this.messagesMap[a.messageId],
            f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && this.dispatch(f.chatsdk.ChatEvents.MESSAGE_REMOVED, {
                message: a
            }),
            b = !0)
        }
        return b
    }
    ,
    f.chatsdk.Chat.prototype.getTitle = function() {
        var a = !1
          , b = 0
          , c = f.chatsdk.ChatContextFactory.getChatContext().usersManager;
        if (!this._title) {
            var d = "";
            for (var e in this.participants)
                if (this.participants.hasOwnProperty(e)) {
                    var g = this.participants[e];
                    if (g.status == f.chatsdk.ParticipantStatus.JOINED)
                        if (g.userId === c.getThisUser().userId)
                            a = !0;
                        else if (b++,
                        3 > b)
                            if (d && (d += ", "),
                            this.chatType === f.chatsdk.ChatType.GROUP) {
                                if (null  != c) {
                                    var h = c.getUserById(g.userId);
                                    d += h && h.firstName ? h.firstName : g.name.split(" ")[0]
                                }
                            } else {
                                var h = c.getUserById(g.userId);
                                d = h ? h.getDisplayName() : g.name
                            }
                }
            b -= 2,
            b > 0 && (d += " +" + b),
            this._title = d
        }
        return this._title || (a ? this._title = "Group Chat" : this._title = "Empty Room"),
        this._title
    }
    ,
    f.chatsdk.Chat.prototype.setTitle = function(a) {
        this._title = a
    }
    ,
    f.chatsdk.Chat.prototype.getSummeryText = function() {
        if (!this._summeryText) {
            var a = this.messages.length;
            if (a > 0)
                for (var b = a - 1; b >= 0; --b) {
                    var c = this.messages[b];
                    if (c.type == f.chatsdk.MessageType.MESSAGE) {
                        this.setSummeryText(c.messageText);
                        break
                    }
                }
        }
        return this._summeryText
    }
    ,
    f.chatsdk.Chat.prototype.setSummeryText = function(a) {
        a && (a = a.replace(/(<P[\w\W]*?<\/P>)/gi, "\n"),
        a = a.replace(/<a.*>(.*)<\/a>/gi, "$1"),
        this._summeryText = f.chatsdk.ChatUtils.unescape(a))
    }
    ,
    f.chatsdk.Chat.prototype.isInSearch = function() {
        return null  != this.searchInfo
    }
    ,
    f.chatsdk.Chat.prototype.lastMessage = function() {
        var a = this.messages.length;
        return a > 0 ? this.messages[a - 1] : null 
    }
    ,
    f.chatsdk.Chat.prototype.hasMessages = function() {
        return this.messages.length > 0
    }
    ,
    f.chatsdk.Chat.prototype.lastPresentMessageTimeStamp = function() {
        var a = this.lastMessage();
        return a ? a.getTimestamp() : 0
    }
    ,
    f.chatsdk.Chat.prototype.participantEndedComposing = function(a) {
        if (this.participants[a.userId] && this.composingParticipantsInfo[a.userId]) {
            var b = this.composingParticipants.map(function(a) {
                return a.userId
            }).indexOf(a.userId);
            if (b >= 0)
                return this.composingParticipants.splice(b, 1),
                delete this.composingParticipantsInfo[a.userId],
                f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && this.dispatch(f.chatsdk.ChatEvents.COMPOSING_ENDED, {
                    participant: a
                }),
                !0
        }
        return !1
    }
    ,
    f.chatsdk.Chat.prototype.participantStartedComposing = function(a, b) {
        return this.participants[a.userId] && !this.composingParticipantsInfo[a.userId] ? (this.composingParticipants.push(a),
        this.composingParticipantsInfo[a.userId] = b,
        f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && this.dispatch(f.chatsdk.ChatEvents.COMPOSING_STARTED, {
            participant: a
        }),
        !0) : this.participants[a.userId] && this.composingParticipantsInfo[a.userId] ? (this.composingParticipantsInfo[a.userId] = b,
        !0) : !1
    }
    ,
    f.chatsdk.Chat.prototype.updateUnreadCount = function(a) {
        this.unreadCount = +a,
        f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && this.dispatch(f.chatsdk.ChatEvents.UNREAD_COUNT_CHANGED)
    }
    ,
    f.chatsdk.Chat.prototype.resetUnreadCount = function() {
        0 != this.unreadCount && (this.unreadCount = 0,
        f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && this.dispatch(f.chatsdk.ChatEvents.UNREAD_COUNT_CHANGED))
    }
    ,
    f.chatsdk.Chat.prototype.clearAllComposing = function() {
        return this.composingParticipants.length > 0 ? (this.composingParticipants = [],
        this.composingParticipantsInfo = {},
        f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && this.dispatch(f.chatsdk.ChatEvents.COMPOSING_ENDED),
        !0) : !1
    }
    ;
    var f = f || {};
    f.chatsdk = f.chatsdk || {},
    f.chatsdk.MessageType = {
        TYPING: 0,
        MESSAGE: 1,
        RECIPIENT_ACK: 2,
        INVITE: 3,
        LEFT: 4,
        RETRY: 5,
        fromString: function(a) {
            var b = null ;
            switch (a) {
            case "composing":
                b = this.TYPING;
                break;
            case "message":
                b = this.MESSAGE;
                break;
            case "recipient_ack":
                b = this.RECIPIENT_ACK;
                break;
            case "invite":
                b = this.INVITE;
                break;
            case "leave":
                b = this.LEFT;
                break;
            case "message_retry":
                b = this.RETRY
            }
            return b
        },
        toString: function(a) {
            var b = null ;
            switch (a) {
            case this.TYPING:
                b = "composing";
                break;
            case this.MESSAGE:
                b = "message";
                break;
            case this.RECIPIENT_ACK:
                b = "recipient_ack";
                break;
            case this.INVITE:
                b = "invite";
                break;
            case this.LEFT:
                b = "leave";
                break;
            case this.RETRY:
                b = "message_retry"
            }
            return b
        }
    },
    f.chatsdk.ChatMessage = function() {
        this.messageId = null ,
        this.skipNotification = !1,
        this.senderId = null ,
        this.messageText = null ,
        this._escapedMessageText = null ,
        this.type = null ,
        this._timestamp = 0,
        this.clientTimestamp = 0,
        this._sequenceNumber = 0,
        this.invitees = {},
        this.senderDevice = null ,
        this.fileIds = null ,
        this.skipUnreadCount = !1,
        this.isRetrying = !1,
        this.isLastValidMessageInChunk = null ,
        this.isFirstValidMessageInChunk = null ,
        this.htmlParsedMessageText = null ,
        this.parsedTimestamp = null ,
        this.parsedTimeStampForMessageDayWiseTime = null ,
        this.invitationString = null ,
        this.fileInfo = null 
    }
    ,
    f.chatsdk.ChatMessage.prototype.initialize = function(a) {
        var b = a.fileInfo ? new f.chatsdk.MessageFileInfo(a.fileInfo,!1) : null ;
        return this.setInfo(a.messageId, a.senderId, a.messageText, a.type, a._timestamp, a._sequenceNumber, b),
        this
    }
    ,
    f.chatsdk.ChatMessage.prototype.setInfo = function(a, b, c, d, e, f, g) {
        return this.messageId = a,
        this.senderId = b,
        this.messageText = c ? c.replace(/(<P[\w\W]*?<\/P>)/gi, "\n") : null ,
        this.type = d,
        this._timestamp = +e,
        this.clientTimestamp = +e,
        this._sequenceNumber = +f,
        this.fileInfo = g,
        this
    }
    ,
    f.chatsdk.ChatMessage.prototype.copy = function() {
        var a = new f.chatsdk.ChatMessage;
        return a.messageId = this.messageId,
        a.senderId = this.senderId,
        a.messageText = this.messageText,
        a.type = this.type,
        a._timestamp = this._timestamp,
        a.clientTimestamp = this.clientTimestamp,
        a._sequenceNumber = this._sequenceNumber,
        a.senderDevice = this.senderDevice,
        a.fileIds = this.fileIds,
        a.fileInfo = this.fileInfo,
        a
    }
    ,
    f.chatsdk.ChatMessage.prototype.getTimestamp = function() {
        return this._timestamp
    }
    ,
    f.chatsdk.ChatMessage.prototype.setTimestamp = function(a) {
        this._timestamp = a,
        this.clientTimestamp || (this.clientTimestamp = a),
        this.parsedTimestamp = this.parsedTimeStampForMessageDayWiseTime = null 
    }
    ,
    f.chatsdk.ChatMessage.prototype.getSequenceNumber = function() {
        return this._sequenceNumber
    }
    ,
    f.chatsdk.ChatMessage.prototype.setSequenceNumber = function(a) {
        this._sequenceNumber = +a,
        this._sequenceNumber > 0 && (this.isRetrying = !1)
    }
    ,
    f.chatsdk.ChatMessage.prototype.htmlParseMessageText = function() {
        !this.htmlParsedMessageText
    }
    ,
    f.chatsdk.ChatMessage.prototype.parseTimestamp = function() {
        !this.parsedTimestamp
    }
    ,
    f.chatsdk.ChatMessage.prototype.getUnEscapedMessageText = function() {
        var a = function(a) {
            return a = a.replace(/&apos;/g, "'"),
            _.unescape(a)
        }
        ;
        return this._escapedMessageText || (this._escapedMessageText = a(this.messageText)),
        this._escapedMessageText
    }
    ,
    f.chatsdk.ChatMessage.prototype.parseTimeStampForMessageDayWiseTime = function() {
        !this.parsedTimeStampForMessageDayWiseTime
    }
    ;
    var f = f || {};
    f.chatsdk = f.chatsdk || {},
    f.chatsdk.ParticipantStatus = {
        LEFT: "left",
        JOINED: "joined"
    },
    f.chatsdk.ChatParticipant = function(a, b, c, d, e) {
        this.userId = a,
        this.name = b,
        this.status = c,
        this.lastSeenMessageSequenceNumber = d,
        this.statusTimestamp = e
    }
    ,
    f.chatsdk.ChatParticipant.prototype.initialize = function(a) {
        return this.userId = a.userId,
        this.name = a.name,
        this.status = a.status,
        this.lastSeenMessageSequenceNumber = a.lastSeenMessageSequenceNumber,
        this.statusTimestamp = a.statusTimestamp,
        this
    }
    ,
    f.chatsdk.ChatParticipant.prototype.update = function(a, b, c, d) {
        this.name = a,
        this.status = b,
        this.updateLastSeenMessageSequenceNumber(c),
        this.statusTimestamp = d
    }
    ,
    f.chatsdk.ChatParticipant.prototype.updateLastSeenMessageSequenceNumber = function(a) {
        return this.lastSeenMessageSequenceNumber < a ? (this.lastSeenMessageSequenceNumber = a,
        !0) : !1
    }
    ;
    var f = f || {};
    f.chatsdk = f.chatsdk || {},
    f.chatsdk.ChatSearchInfo = function(a, b, c, d, e, f) {
        this.messages = [],
        this.matchedMessagesInfo = [],
        this._currentMatchIndex = -1,
        this._matchCount = 0,
        this.initialMatch = d,
        this.chat = a,
        this.searchTerms = c,
        this.fetchedMessagesSeqMap = {},
        this.fetchedMatches = {},
        this.searchManager = e,
        this.fetchingInProgressMap = {},
        this.callIdToMatchMap = {},
        this.chatNeedsLoad = f,
        this.searchText = b,
        this.requestedMatchIndex = -1,
        this.requestedSeqNo = 0,
        this.CONTEXT_COUNT = 2,
        this.searchMatchesReceived,
        this.requestdMatch
    }
    ,
    f.chatsdk.ChatSearchInfo.prototype.start = function() {
        this.chatNeedsLoad || (this.requestedSeqNo = this.initialMatch.sequenceNumber,
        this.fetchMatch(this.initialMatch))
    }
    ,
    f.chatsdk.ChatSearchInfo.prototype.chatLoaded = function() {
        this.chatNeedsLoad = !1,
        this.requestedSeqNo = this.initialMatch.sequenceNumber,
        this.fetchMatch(this.initialMatch),
        this.syncWithMatchesReceived()
    }
    ,
    f.chatsdk.ChatSearchInfo.prototype.getMatchSequenceNumbers = function(a) {
        var b = a.sequenceNumber;
        if (this.fetchedMatches[b])
            return null ;
        for (var c = b - this.CONTEXT_COUNT; b > c && (1 > c || this.fetchedMessagesSeqMap[c]); c++)
            ;
        for (var d = Math.min(b + this.CONTEXT_COUNT, this.chat.lastMessageSequenceNumber); d > b && this.fetchedMessagesSeqMap[d]; d--)
            ;
        return c == b && d == b && this.fetchedMessagesSeqMap[b] ? (this.fetchedMatches[b] = !0,
        null ) : [c, d]
    }
    ,
    f.chatsdk.ChatSearchInfo.prototype.addMessages = function(a, b) {
        var c = a.length;
        if (c >= 1) {
            for (var d, e = a.length, g = 0; e > g; g++)
                d = a[g],
                this.fetchedMessagesSeqMap[d.getSequenceNumber()] || (this.messages.push(d),
                this.fetchedMessagesSeqMap[d.getSequenceNumber()] = d);
            if (f.chatsdk.ChatUtils.sortMessages(this.messages),
            this.callIdToMatchMap[b]) {
                var h = this.callIdToMatchMap[b];
                this.fetchedMatches[h] = !0,
                delete this.fetchingInProgressMap[h],
                delete this.callIdToMatchMap[b],
                0 != this.requestedSeqNo && this.requestedSeqNo == h && (this.requestIsFetched(h),
                this.requestedSeqNo = 0)
            } else
                f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && this.chat.dispatch(f.chatsdk.ChatEvents.LOADED_MORE_MSGS)
        }
    }
    ,
    f.chatsdk.ChatSearchInfo.prototype.getSearchTermsText = function() {
        return this.searchText
    }
    ,
    f.chatsdk.ChatSearchInfo.prototype.matchesInfoFetched = function() {
        return this._currentMatchIndex > -1 && 0 != this._matchCount
    }
    ,
    f.chatsdk.ChatSearchInfo.prototype.getCurrentMatchIndex = function() {
        return this._currentMatchIndex
    }
    ,
    f.chatsdk.ChatSearchInfo.prototype.setCurrentMatchIndex = function(a) {
        this._currentMatchIndex = a
    }
    ,
    f.chatsdk.ChatSearchInfo.prototype.getMatchCount = function() {
        return this._matchCount
    }
    ,
    f.chatsdk.ChatSearchInfo.prototype.moveToPreviousMatch = function() {
        if (this._currentMatchIndex > 0 && this.requestedMatchIndex != this._currentMatchIndex - 1) {
            this.requestedMatchIndex = this._currentMatchIndex - 1;
            var a = this.matchedMessagesInfo[this.requestedMatchIndex];
            this.requestedSeqNo = a.sequenceNumber,
            this.fetchMatch(a)
        }
    }
    ,
    f.chatsdk.ChatSearchInfo.prototype.moveToNextMatch = function() {
        if (this._currentMatchIndex > -1 && this._currentMatchIndex < this._matchCount - 1 && this.requestedMatchIndex != this._currentMatchIndex + 1) {
            this.requestedMatchIndex = this._currentMatchIndex + 1;
            var a = this.matchedMessagesInfo[this.requestedMatchIndex];
            this.requestedSeqNo = a.sequenceNumber,
            this.fetchMatch(a)
        }
    }
    ,
    f.chatsdk.ChatSearchInfo.prototype.matchesReceived = function(a) {
        for (var b, c = a.length, d = 0; c > d; ++d)
            if (b = a[d],
            this.initialMatch.sequenceNumber == b.sequenceNumber) {
                this._currentMatchIndex = d;
                break
            }
        this._matchCount = c,
        this.matchedMessagesInfo = a,
        this.searchMatchesReceived = !0,
        this.syncWithMatchesReceived()
    }
    ,
    f.chatsdk.ChatSearchInfo.prototype.syncWithMatchesReceived = function() {
        !this.chatNeedsLoad && this.searchMatchesReceived && (f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && this.chat.dispatch(f.chatsdk.ChatEvents.SEARCH_MATCHES_RECEIVED),
        this.fetchRequestedMatchIfAny())
    }
    ,
    f.chatsdk.ChatSearchInfo.prototype.fetchMatch = function(a) {
        var b = a.sequenceNumber;
        if (this.fetchingInProgressMap[b])
            ;
        else {
            var c = this.getMatchSequenceNumbers(a);
            if (c) {
                this.fetchingInProgressMap[b] = !0;
                var d = this.searchManager.fetchMessages(this.chat, c[0], c[1]);
                this.callIdToMatchMap[d] = b
            } else
                this.requestedSeqNo == b && this.requestIsFetched(b)
        }
    }
    ,
    f.chatsdk.ChatSearchInfo.prototype.requestIsFetched = function(a) {
        var b = this.fetchedMessagesSeqMap[a];
        b && (this.requestedMatchIndex > -1 && (this._currentMatchIndex = this.requestedMatchIndex),
        event.message = b,
        f.chatsdk.Constants.DISPATCH_EVENTS_TO_UI && this.chat.dispatch(f.chatsdk.ChatEvents.MATCH_FETCH_COMPLETE, {
            message: b
        }))
    }
    ,
    f.chatsdk.ChatSearchInfo.prototype.isCurrentMatch = function(a) {
        if (0 == this._matchCount)
            return a.getSequenceNumber() == this.initialMatch.sequenceNumber;
        if (this._currentMatchIndex >= 0) {
            var b = this.matchedMessagesInfo[this._currentMatchIndex];
            if (b)
                return b.sequenceNumber == a.getSequenceNumber()
        }
        return !1
    }
    ,
    f.chatsdk.ChatSearchInfo.prototype.moveToMatch = function(a) {
        if (this._matchCount) {
            for (var b, c = 0; c < this._matchCount; ++c)
                if (b = this.matchedMessagesInfo[c],
                a.sequenceNumber == b.sequenceNumber) {
                    this.requestedMatchIndex = c;
                    break
                }
            this.requestedSeqNo = a.sequenceNumber,
            this.fetchMatch(a)
        } else
            this.requestdMatch = a
    }
    ,
    f.chatsdk.ChatSearchInfo.prototype.fetchRequestedMatchIfAny = function() {
        if (this.requestdMatch) {
            for (var a, b = 0; b < this._matchCount; ++b)
                if (a = this.matchedMessagesInfo[b],
                this.requestdMatch.sequenceNumber == a.sequenceNumber) {
                    this.requestedMatchIndex = b;
                    break
                }
            this.requestedSeqNo = this.requestdMatch.sequenceNumber,
            this.fetchMatch(this.requestdMatch),
            this.requestdMatch = null 
        }
    }
    ,
    f.chatsdk.ChatSearchInfo.prototype.loadMoreMessages = function(a, b) {
        if (b >= a) {
            var c = b - a > f.chatsdk.MessagesLoader.MESSAGE_FETCH_PAGE_SIZE ? a + f.chatsdk.MessagesLoader.MESSAGE_FETCH_PAGE_SIZE : b;
            this.searchManager.fetchMessages(this.chat, a, c)
        }
    }
    ;
    var f = f || {};
    f.chatsdk = f.chatsdk || {};
    var f = f || {};
    f.chatsdk = f.chatsdk || {},
    f.chatsdk.FileStatus = {
        FS_SUCCESS: "fscc",
        FS_ERROR: "fsuf",
        FS_CONVERSION_REQ_FAILED: "fscrf",
        FS_CONVERSION_FAILED: "fscf",
        FS_SELECTED: "fsw",
        FS_UPLOADING: "fsug",
        FS_WAITING: "fsw",
        FS_CONVERTING: "fscrs",
        THUMB_NOT_INITIALIZED: "THUMB_NOT_INITIALIZED",
        THUMB_LOADING: "THUMB_LOADING",
        THUMB_LOADED: "THUMB_LOADED",
        THUMB_ERROR: "THUMB_ERROR"
    },
    f.chatsdk.MessageFileInfo = function(a, b) {
        a && (b && a.name ? this.name = f.chatsdk.ChatUtils.escape(a.name) : this.name = a.name || null ,
        this.size = a.size || 0,
        this.fileExt = a.fileExt || null ,
        this.type = a.type || null ,
        this.fileId = a.fileId || null ,
        this.fileNameId = a.fileUploadName || a.fileNameId || null ,
        this.localUrl = a.localUrl || null ,
        this.status = a.status || null ,
        this.uploadProgress = a.uploadProgress || 0,
        this.isUploading = !1,
        this.availablePreviews = a.availablePreviews || 0,
        this.previewName = a.previewName || null ,
        this.noOfPages = a.noOfPages || "0",
        this.width = a.width || 0,
        this.height = a.height || 0,
        this.fileFormat = a.fileFormat || null ,
        this.originalName = a.originalName || null ,
        this.thumbnailName = "null" === a.thumbnailName || "undefined" === a.thumbnailName ? null  : a.thumbnailName,
        this.itemId = a.itemId || null )
    }
    ,
    f.chatsdk.MessageFileInfo.prototype.getName = function() {
        return f.chatsdk.ChatUtils.unescape(this.name)
    }
    ;
    var f = f || {};
    f.chatsdk = f.chatsdk || {},
    f.chatsdk.MessagesFetchCall = function(a, b, c) {
        this.messageIdToMessageMap = {},
        this.messages = [],
        this.minSequenceNoForCall = b,
        this.maxSequenceNoForCall = c,
        this.hasFailedLoading = !1,
        this.insertMessages(a)
    }
    ,
    f.chatsdk.MessagesFetchCall.prototype.getMinSequenceNoOfMessages = function() {
        return this.messages.length > 0 ? this.messages[0].getSequenceNumber() : 0
    }
    ,
    f.chatsdk.MessagesFetchCall.prototype.getMaxSequenceNoOfMessages = function() {
        var a = 0
          , b = this.messages.length;
        return b > 0 && (a = this.messages[b - 1].getSequenceNumber()),
        a > this.maxSequenceNoForCall ? a : this.maxSequenceNoForCall
    }
    ,
    f.chatsdk.MessagesFetchCall.prototype.insertMessages = function(a) {
        a && a.length > 0 && (a.forEach(function(a) {
            this.messageIdToMessageMap[a.messageId] || (this.messageIdToMessageMap[a.messageId] = a,
            this.messages.push(a))
        }, this),
        f.chatsdk.ChatUtils.sortMessages(this.messages, !0))
    }
    ,
    f.chatsdk.MessagesFetchCall.prototype.allMessagesReceived = function() {
        if (0 == this.messages.length)
            return !1;
        for (var a = !1, b = 0, c = !1, d = this.messages.length, e = 0; d > e; e++) {
            var f = this.messages[e];
            if (a) {
                if (f.getSequenceNumber() != b + 1)
                    break;
                if (f.getSequenceNumber() == this.maxSequenceNoForCall) {
                    c = !0;
                    break
                }
                b = f.getSequenceNumber()
            } else if (f.getSequenceNumber() == this.minSequenceNoForCall) {
                if (a = !0,
                f.getSequenceNumber() == this.maxSequenceNoForCall) {
                    c = !0;
                    break
                }
                b = f.getSequenceNumber()
            }
        }
        return c
    }
    ;
    var f = f || {};
    f.chatsdk = f.chatsdk || {},
    f.chatsdk.User = function() {
        this._hasMobile = 0,
        this.lastPingTime = 0,
        this.profileImageType = -1,
        this.profileImageVersion = -1,
        this.userId = "",
        this.email = "",
        this.firstName = "",
        this.lastName = "",
        this.isAccessible = !0,
        this.shortName = null ,
        this.img = null ,
        this.rank = 0,
        this.relevancy = 0,
        this.presenceStatus = f.chatsdk.UserStatus.UNAVAILABLE,
        this._device = null 
    }
    ,
    f.chatsdk.User.prototype.setInfo = function(a) {
        this.userId = a.user_id,
        this.firstName = a.first_name,
        this.lastName = a.last_name,
        this.email = a.email,
        this.profileImageType = a.profile_image_type,
        this.profileImageVersion = a.profile_image_version,
        this.setHasMobile(a.has_mobile),
        this.setLastPingTime(a.last_ping_time),
        this.relevancy = a.relevancy || 0,
        this.isAccessible = !0
    }
    ,
    f.chatsdk.User.prototype.setInfoFromModel = function(a) {
        this.userId = a.get("user_id"),
        this.firstName = a.get("first_name"),
        this.lastName = a.get("last_name"),
        this.email = a.get("email"),
        this.profileImageType = a.get("profile_image_type"),
        this.profileImageVersion = a.get("profile_image_version"),
        this.setHasMobile(a.get("has_mobile")),
        this.setLastPingTime(a.get("last_ping_time")),
        this.rank = a.get("rank") || 0,
        this.isAccessible = !0
    }
    ,
    f.chatsdk.User.prototype.getDisplayName = function() {
        var a = this.firstName || ""
          , b = this.lastName || "";
        return a + " " + b
    }
    ,
    f.chatsdk.User.prototype.setLastPingTime = function(a) {
        "string" == typeof a && (a = a.replace(/[-]/g, "/"),
        a = Date.parse(a + " GMT")),
        a && this.lastPingTime < a && (this.lastPingTime = a)
    }
    ,
    f.chatsdk.User.prototype.getLastPingTime = function() {
        return this.lastPingTime
    }
    ,
    f.chatsdk.User.prototype.setHasMobile = function(a) {
        !a || "0" === a && "1" === this.getHasMobile() || (this._hasMobile = "true" === a || "1" === a ? 1 : 0)
    }
    ,
    f.chatsdk.User.prototype.getHasMobile = function() {
        return this._hasMobile
    }
    ,
    f.chatsdk.User.prototype.setDevice = function(a) {
        a && (this._hasMobile = 1 === this._hasMobile || a === f.chatsdk.UserDevice.MOBILE ? 1 : 0,
        this._device = a)
    }
    ,
    f.chatsdk.User.prototype.getDevice = function() {
        return this._device
    }
    ,
    f.chatsdk.User.prototype.compareTo = function(a) {
        var b, c, d;
        return this.presenceStatus !== a.presenceStatus ? (b = this.presenceStatus,
        c = a.presenceStatus,
        d = c > b ? -1 : b === c ? 0 : 1) : (b = this.rank,
        c = a.rank,
        d = c > b ? 1 : b === c ? 0 : -1),
        d
    }
    ;
    var f = f || {};
    f.chatsdk = f.chatsdk || {},
    b.module("convoApp").constant("ServerErrorCodes", {
        AUTHENTICATION_ERROR: 10401,
        RESOURCE_NOT_ACCESSIBLE: 10403,
        SERVICE_ERROR: 10500,
        DATABASE_NOT_AVAILABLE: 10503,
        UPDATE_AVAILABLE: 11001,
        IMMEDIATE_UPDATE: 11002
    }),
    b.module("convoApp").factory("connectivity", [function() {
        function b() {
            f = a.Offline,
            f.options = {
                checkOnLoad: !0,
                interceptRequests: !1,
                reconnect: {
                    initialDelay: 1,
                    delay: 1
                },
                requests: !1,
                game: !1,
                checks: {
                    xhr: {
                        timeout: 1e3
                    }
                }
            },
            f.on("up", c),
            f.on("down", d),
            f.init(),
            g = "up" === f.state
        }
        function c() {
            console.log("net connection up"),
            g = !0,
            e.trigger("up")
        }
        function d() {
            console.log("net connection down"),
            g = !1,
            e.trigger("down")
        }
        var e = {};
        _.extend(e, Backbone.Events);
        var f, g;
        return e.initialize = b,
        e.isConnected = function() {
            return g
        }
        ,
        e
    }
    ]),
    b.module("convoApp").factory("ServerComm", ["$http", "$q", "config", "connectivity", "$location", function(a, b, d, e, f) {
        function g(a) {
            return 0 == a.indexOf("feed/") || 0 == a.indexOf("analytics/") || 0 == a.indexOf("tags/get") || 0 == a.indexOf("conversations/") || 0 == a.indexOf("chat/") || 0 == a.indexOf("tags/related")
        }
        function h(a, b) {
            return b ? d.FEED_REST_URL + a : d.REST_URL + a
        }
        function i(c, d) {
            if (I)
                return O;
            var e, f = d[0];
            if (g(f)) {
                d[0] = h(f, !0);
                var i = b.defer();
                e = i.promise,
                L && "feed/fetch" === f ? (L = !1,
                a[c].apply(null , d).then(function(a) {
                    y(),
                    i.resolve(a)
                }, function(a) {
                    i.reject(a),
                    L = !0
                })) : M ? j(i, c, d) : N.push({
                    defer: i,
                    method: c,
                    args: d,
                    isRequestX: !1
                })
            } else
                d[0] = h(f, !1),
                e = a[c].apply(null , d);
            return e.then(null , function(a) {
                401 === a.status ? (console.log(">>>>>>>>>> SESSION EXPIRED <<<<<<<<<< endpoint: " + f),
                J || (J = !0,
                C.trigger("sessionExpired"))) : 499 === a.status && (console.log(">>>>>>>>>> APP UPDATE AVAILABLE <<<<<<<<<< endpoint: " + f),
                K || (K = !0,
                C.trigger("appUpdateAvailable", a.data.client_version)))
            }),
            e
        }
        function j(b, c, d) {
            a[c].apply(null , d).then(function(a) {
                b.resolve(a)
            }, function(a) {
                b.reject(a)
            })
        }
        function k() {
            return i("get", arguments)
        }
        function l() {
            return i("post", arguments)
        }
        function m() {
            return i("put", arguments)
        }
        function n(a, c, d, e) {
            if (I)
                return O;
            var f, i;
            if (g(c)) {
                i = h(c, !0);
                var j = b.defer();
                f = j.promise,
                L && "feed/fetch" === c ? (L = !1,
                z(a, i, d, !1, e).then(function(a) {
                    y(),
                    j.resolve(a)
                }, function(a) {
                    j.reject(a),
                    L = !0
                })) : M ? o(j, a, i, d, e) : N.push({
                    defer: j,
                    method: a,
                    url: i,
                    data: d,
                    maxRetries: e,
                    isRequestX: !0
                })
            } else
                i = h(c, !1),
                f = z(a, i, d, !1, e);
            return f.then(null , function(a) {
                401 === a.status ? (console.log(">>>>>>>>>> SESSION EXPIRED <<<<<<<<<< endpoint: " + c),
                J || (J = !0,
                C.trigger("sessionExpired"))) : 499 === a.status && (console.log(">>>>>>>>>> APP UPDATE AVAILABLE <<<<<<<<<< endpoint: " + c),
                K || (K = !0,
                C.trigger("appUpdateAvailable", a.jqXHR.responseJSON.client_version)))
            }),
            f
        }
        function o(a, b, c, d, e) {
            z(b, c, d, !1, e).then(function(b) {
                a.resolve(b)
            }, function(b) {
                a.reject(b)
            })
        }
        function p(a, b) {
            return n("get", a, null , b)
        }
        function q(a, b, c) {
            return n("post", a, b, c)
        }
        function r(a, b, c) {
            return n("put", a, b, c)
        }
        function s(a, b, c) {
            return n("delete", a, b, c)
        }
        function t(a, b, d, e, f, i, j, k, l, m) {
            if (I)
                return void (i && i());
            var n = b;
            d || (n = h(b, g(b))),
            A(a, n, e, function(a, b, c) {
                f && f()
            }, function(a, c, d, e) {
                k || (401 === a.status ? (console.log(">>>>>>>>>> SESSION EXPIRED <<<<<<<<<< endpoint: " + b),
                J || (J = !0,
                C.trigger("sessionExpired"))) : 499 === a.status && (console.log(">>>>>>>>>> APP UPDATE AVAILABLE <<<<<<<<<< endpoint: " + b),
                K || (K = !0,
                C.trigger("appUpdateAvailable", a.responseJSON.client_version)))),
                i && i()
            }, !1, j, c, l, m)
        }
        function u(a, b, d, e, f) {
            return t("get", a, !1, c, b, d, e, f)
        }
        function v(a, b, c, d, e, f) {
            return t("post", a, !1, b, c, d, e, f)
        }
        function w(a, b, d, e) {
            return t("get", a, !0, c, b, d, e, !0)
        }
        function x(a, b, c, d, e, f, g) {
            return t("post", a, !0, b, e, f, g, !0, c, d)
        }
        function y() {
            M = !0;
            for (var a = N, b = 0, c = a.length; c > b; b++) {
                var d = a[b];
                d.isRequestX ? o(d.defer, d.method, d.url, d.data, d.maxRetries) : j(d.defer, d.method, d.args)
            }
            N = null ,
            C.trigger("firstFeedFetchCallResolved")
        }
        function z(a, c, d, e, f) {
            var g = b.defer();
            return A(a, c, d, function(a, b, c) {
                g.resolve({
                    data: a,
                    status: c.status,
                    statusText: b
                })
            }, function(a, b, c, d) {
                g.reject({
                    data: c,
                    status: a.status,
                    statusText: b,
                    customStatus: d,
                    jqXHR: a
                })
            }, e, f),
            g.promise
        }
        function A(a, b, d, f, g, h, i, j, k, l) {
            j === c && (j = 0),
            i === c && (i = 5),
            k === c && (k = "json"),
            l === c && (l = "application/json"),
            $.ajax({
                url: b,
                type: a,
                data: d ? JSON.stringify(d) : null ,
                dataType: k,
                contentType: l,
                timeout: 3e4,
                headers: H,
                success: function(a, b, c) {
                    f(a, b, c)
                },
                error: function(c, m, n) {
                    var o = c.status;
                    if (200 === o)
                        return void f(n, m, c);
                    if (e.isConnected() && 408 !== o && 500 !== o && 502 !== o && 503 !== o && 504 !== o && (0 !== o || "error" !== m && "timeout" !== m))
                        g(c, m, n, m);
                    else {
                        j++;
                        var p = !h && i > j
                          , q = "timeout" === m;
                        p && q && j >= 2 && (p = !1),
                        p ? q ? A(a, b, d, f, g, h, i, j, k, l) : setTimeout(function() {
                            A(a, b, d, f, g, h, i, j, k, l)
                        }, 5e3) : g(c, m, n, m)
                    }
                }
            })
        }
        function B(b) {
            D = b,
            a.defaults.headers.common[F] = D,
            a.defaults.headers.get[F] = D,
            H[F] = D
        }
        var C = {};
        _.extend(C, Backbone.Events);
        var D, E = "X-Convo-Client-Version", F = "X-Convo-Client-Id", G = "X-Convo-Client-Type", H = {}, I = !1, J = !1, K = !1, L = !0, M = !1, N = [], O = b.defer().promise;
        return O.success = function() {
            return O
        }
        ,
        O.error = function() {
            return O
        }
        ,
        a.defaults.headers.common[E] = d.APP_VERSION,
        a.defaults.headers.common[G] = d.CLIENT_TYPE,
        a.defaults.headers.get = {},
        a.defaults.headers.get[E] = d.APP_VERSION,
        a.defaults.headers.get[G] = d.CLIENT_TYPE,
        H[E] = d.APP_VERSION,
        H[G] = d.CLIENT_TYPE,
        d.on("clientTypeUpdated", function() {
            a.defaults.headers.common[G] = d.CLIENT_TYPE,
            a.defaults.headers.get[G] = d.CLIENT_TYPE,
            H[G] = d.CLIENT_TYPE
        }),
        C.updateClientVersionHeader = function(b) {
            a.defaults.headers.common[E] = b,
            a.defaults.headers.get[E] = b,
            H[E] = b
        }
        ,
        C.testAppUpdateResponse = function(a) {
            C.updateClientVersionHeader("2010101010"),
            "get" === a ? C.get("updates") : "getx" === a ? C.getx("updates") : "getr" === a && C.getr("updates")
        }
        ,
        C.testAppUpdateResponse_requestr_with_ignoreAppErrors = function() {
            C.updateClientVersionHeader("2010101010"),
            v("log", null , c, c, c, !0)
        }
        ,
        C.get = k,
        C.post = l,
        C.put = m,
        C.getx = p,
        C.postx = q,
        C.putx = r,
        C.deletex = s,
        C.getr = u,
        C.postr = v,
        C.getr_absurl = w,
        C.postr_absurl = x,
        C.setClientInstanceId = B,
        C.startBlockingRequests = function() {
            I = !0
        }
        ,
        C
    }
    ]),
    b.module("convoApp").directive("cnvCommentEditor", ["$timeout", "UploadService", "utils", "bannerService", "$filter", "$rootScope", function(a, b, c, d, e, f) {
        return {
            restrict: "E",
            priority: 0,
            scope: !0,
            templateUrl: "comments/commentEditor/cnvCommentEditor.tpl.html",
            compile: function(d, g, h) {
                return function(d, g, h, i) {
                    function j() {
                        return d.commentEditorCtrl.snippetData ? !0 : !1
                    }
                    function k(a) {
                        return {
                            initialized: !1,
                            templateType: "comment-attachment",
                            files: a
                        }
                    }
                    function l() {
                        return {}
                    }
                    function m() {
                        var a = {};
                        return n(a),
                        a
                    }
                    function n(a) {
                        a.controllers = {},
                        a.initialized = !1,
                        d.commentEditorCtrl.setAllowAttachments(j() ? !1 : !0)
                    }
                    function o(a) {
                        d.commentEditorCtrl.attachments.initialized ? d.$broadcast("enqueueFile", a) : (d.commentEditorCtrl.attachments.controllers.manager_controller = new k(a),
                        d.commentEditorCtrl.attachments.controllers.file_input_controller = new l,
                        d.commentEditorCtrl.attachments.initialized = !0,
                        d.commentEditorCtrl.setAllowAttachments(!1),
                        j() && (d.commentEditorCtrl.snippetData = null ),
                        d.$$phase || d.$digest())
                    }
                    function p(a, c) {
                        if (c && c.event)
                            if (c.event == b.EVENT_FILE_SELECTED) {
                                var e = [c.file];
                                d.active || d.onDummyTextAreaClick();
                                for (var f in e)
                                    e[f].noteId = d.commentEditorCtrl.getNoteId(),
                                    e[f].appInstanceId = d.commentEditorCtrl.getAppInstanceId(),
                                    e[f].conversationId = d.commentEditorCtrl.getCommentId(),
                                    e[f].uploadFrom = "comment-editor";
                                o(e),
                                d.textEditorCtrl && d.textEditorCtrl.focus()
                            } else
                                c.event == u ? o(c.files) : d.commentEditorCtrl.attachments.initialized && d.commentEditorCtrl.attachments.controllers.file_input_controller.onChange && (d.commentEditorCtrl.attachments.controllers.file_input_controller.onChange(c),
                                d.$$phase || d.$digest())
                    }
                    function q(a) {
                        var b = j()
                          , c = !1;
                        d.commentEditorCtrl.allowAttachments ? c = !0 : b = !0,
                        b && d.showSingltonMessageBanner(),
                        c || (a.preventDefault(),
                        a.stopImmediatePropagation())
                    }
                    function r(a) {
                        $(a.target).closest(".comment-action.gif-attachment").length && q(a)
                    }
                    function s(a) {
                        if (d.commentEditorCtrl.onFocus) {
                            var b = d.commentEditorCtrl.getCommentId();
                            d.commentEditorCtrl.onFocus(b),
                            d.focused = !0,
                            f.$emit("comment-editor-just-focused", b),
                            d.$broadcast("render")
                        }
                    }
                    function t(a, b) {
                        a.stopPropagation(),
                        d.active && b != d.commentEditorCtrl.getCommentId() && (d.focused = !1,
                        d.$broadcast("render"))
                    }
                    d.enableEmoji = d.$eval(h.enableEmoji);
                    var u = "ecfa";
                    d.focusEditor = function() {
                        a(function() {
                            d.textEditorCtrl && d.textEditorCtrl.focus()
                        }, 50)
                    }
                    ,
                    d.isClickOnEmojiPopover = function(a) {
                        return $(".popover").find(a.target).length > 0
                    }
                    ,
                    d.initWithFiles = function(a) {
                        for (var d = [], f = 0, h = a.length; h > f; f++) {
                            var i = c.copyObject(a[f]);
                            i.noteId = i.item_id,
                            i.appInstanceId = i.app_instance_id,
                            i.conversationId = i.conversation_uid,
                            i.uploadFrom = "comment-editor",
                            i.inEdit = !0,
                            i.localUrl = i.thumbnail_name ? e("getNoteThumbnailPath")(i, i.item_id, f, i.app_instance_id) : e("getFileIconByType")(i.type, 32),
                            i.status = b.FILE_STATUS_CONVERSION_COMPLETED,
                            i.noTitle = i.thumbnail_name ? !0 : !1,
                            d.push(i)
                        }
                        g.find(".comment-file-input").trigger("cnvchange", [{
                            event: u,
                            files: d
                        }])
                    }
                    ;
                    var v = {
                        id: "#" + c.generateUniqueCharId(),
                        dropZoneId: "#" + c.generateUniqueCharId(),
                        pasteZoneId: "#" + c.generateUniqueCharId(),
                        uploadAcknowledgement: function() {
                            return d.commentEditorCtrl.allowAttachments || d.showSingltonMessageBanner(),
                            d.commentEditorCtrl.allowAttachments
                        }
                    };
                    setTimeout(function() {
                        g.find(".comment-file-input").attr("id", v.id.slice(1)),
                        g.find(".attachment-drop-zone .dropzone-target").attr("id", v.dropZoneId.slice(1)),
                        g.find(".feed-comment-editor-cont").attr("id", v.pasteZoneId.slice(1)),
                        d.commentEditorCtrl.attachments = new m,
                        d.commentEditorCtrl.attachments.file_input_upload_context = b.init(v),
                        d.commentEditorCtrl.attachments.file_input_upload_context.input_element.on("cnvchange", p)
                    }, 0),
                    d._resetAttachmentControllers = function() {
                        d.commentEditorCtrl && n(d.commentEditorCtrl.attachments)
                    }
                    ,
                    d.openFileChooser = function() {
                        var a = j();
                        d.commentEditorCtrl.allowAttachments ? g.find(".comment-file-input").trigger("click") : a = !0,
                        a && d.showSingltonMessageBanner()
                    }
                    ,
                    d.triggerGiphyPopover = function() {
                        c.fireEvent(g[0].querySelector(".comment-action.gif-attachment #iShowGiphyPopup"), "click")
                    }
                    ;
                    var w = f.$on("comment-editor-just-focused", t);
                    g[0].addEventListener("click", r, !0),
                    g[0].addEventListener("focus", s, !0),
                    d.$on("$destroy", function() {
                        g[0].removeEventListener("click", r, !0),
                        g.find(".comment-file-input").off(),
                        w(),
                        d.$emit("comment-will-exit-from-edit")
                    })
                }
            },
            controller: ["$scope", "$q", "usersGroupsListProvider", "hashtagsProvider", "atMentionsListProvider", "utils", "onboardingService", "alertsService", function(a, b, c, f, g, h, i, j) {
                function k() {
                    var a = !1;
                    return p.active && (a = p.textEditorCtrl.initialized && p.textEditorCtrl.getEditorText().trim().length > 0,
                    !a && p.commentEditorCtrl.attachments.initialized && p.commentEditorCtrl.attachments.controllers.manager_controller.initialized && (p.commentEditorCtrl.attachments.controllers.manager_controller.isBusy() || p.commentEditorCtrl.attachments.controllers.manager_controller.getAllFiles().length) && (a = !0),
                    !a && p.commentEditorCtrl.snippetData && (a = !0)),
                    a
                }
                function l(a, b) {
                    return {
                        searchText: a || "",
                        actionType: b || ""
                    }
                }
                function m(a) {
                    u = p.commentEditorCtrl.comment_uid ? p.commentEditorCtrl.comment_uid : h.generateUniqueId(),
                    p.textEditorCtrl = {
                        initialized: !1,
                        initialHtmlText: a || "",
                        height: t
                    },
                    p.active = !0,
                    p.focused = !0,
                    p.onBoardingEnabled = i.getFeedOnboardingState(),
                    p.commentEditorCtrl.editorWillInitialized && p.commentEditorCtrl.editorWillInitialized(),
                    p.$broadcast("render")
                }
                function n() {
                    p.active = !1,
                    p.focused = !1,
                    p.commentEditorCtrl.snippetData = null ,
                    p.commentEditorCtrl.showAtMentionAlert = !1,
                    p.commentsHasBeenBlocked = !1,
                    p._resetAttachmentControllers(),
                    p.giphyObject = new l,
                    p.commentsInEditModeCurrentFocus.status = "new_comment",
                    p.$broadcast("render")
                }
                function o() {
                    i.checkState() && i.getFeedOnboardingState() ? p.onBoardingEnabled = !0 : p.onBoardingEnabled = !1,
                    p.$broadcast("render")
                }
                var p = a
                  , q = 5
                  , r = {
                    ALLOWED_STRING: "Drop files here",
                    NOT_ALLOWED_STRING: "You can add one attachment to comments at a time."
                }
                  , s = (p.commentEditorCtrl,
                null )
                  , t = p.commentEditorCtrl.height
                  , u = ""
                  , v = 0;
                p.giphyObject = new l,
                p.active = !1,
                p.focused = !1,
                p.alwaysActiveActionbar = "InAppCommentsPanel" === p.commentEditorCtrl.source ? !0 : !1,
                p.commentEditorCtrl.showAtMentionAlert = p.commentEditorCtrl.showAtMentionAlert || !1,
                p.dropzoneCtrl = {
                    message: r.ALLOWED_STRING
                },
                p.onBoardingEnabled = !1,
                p.commentsHasBeenBlocked = !1,
                i.on("cnvOnboarding:stateChange", o),
                i.on("cnvOnboarding:feedOnboardingStateChange", o),
                p.checkIfCommentingClosed = function() {
                    var a = !1;
                    return p.commentEditorCtrl.permissions.block && !p.commentEditorCtrl.permissions.disable ? k() ? p.commentsHasBeenBlocked = !0 : (a = !0,
                    p.commentsHasBeenBlocked = !1) : p.commentsHasBeenBlocked = !1,
                    a
                }
                ,
                p.onDummyTextAreaClick = function() {
                    m()
                }
                ,
                p.onEscKeyPressInTextEditor = function() {
                    p.commentEditorCtrl.disableEsc || (n(),
                    p.commentEditorCtrl.onEscInCommentEditorEditor && p.commentEditorCtrl.onEscInCommentEditorEditor())
                }
                ,
                p.onClickedOutsideWhenActive = function(a) {
                    p.commentEditorCtrl.clickOutsideExit || !p.active || 0 != k() || p.isClickOnEmojiPopover(a) || n()
                }
                ;
                var w = !1;
                p.onTextEditorSubmitOnEnter = function() {
                    var a = !0;
                    p.commentsHasBeenBlocked && !w && (w = !0,
                    a = !1,
                    j.alertModal("Convo", "You no longer have permissions to comment on this post.", "Ok", function() {
                        w = !1
                    }, !0, !0)),
                    a && p.commentEditorCtrl && p.commentEditorCtrl.onCommentEntered && p.commentEditorCtrl.onCommentEntered(p.textEditorCtrl.getEditorText(), p.textEditorCtrl.getEditorCleanHtmlText())
                }
                ,
                p.getShareWithDropdownItems = function(a, c, d) {
                    var e = b.defer()
                      , f = !1
                      , h = !0;
                    return "@" == c ? (!a && p.commentEditorCtrl.permissions && p.commentEditorCtrl.permissions.allowLegitAtMentions && (p.textEditorCtrl.getEditorText().trim().length && (p.commentEditorCtrl.showAtMentionAlert = !0),
                    h = !1,
                    f = !0),
                    h ? p.commentEditorCtrl.allowAttachments ? e.resolve(g.queryPublishableUsersGroupsAndCommands(a, d + q, g.sources.COMMENT, p.commentEditorCtrl.itemSharingInfoWithDropdownItems)) : e.resolve(g.queryPublishableUsersAndGroups(a, d + q, p.commentEditorCtrl.itemSharingInfoWithDropdownItems)) : e.resolve([])) : ":" == c && e.resolve(items = g.queryEmojiData(a)),
                    f && p.$broadcast("render"),
                    e.promise
                }
                ,
                p.getHashtags = function(a) {
                    var c = b.defer();
                    return c.resolve(f.getHashtagsDropdownItems(a)),
                    c.promise
                }
                ,
                p.onAtMentionAdded = function(a) {
                    v++,
                    p.commentEditorCtrl.permissions && p.commentEditorCtrl.permissions.allowLegitAtMentions ? p.commentEditorCtrl.showAtMentionAlert = !1 : p.commentEditorCtrl.showAtMentionAlert = !0,
                    p.$broadcast("render")
                }
                ,
                p.onAtMentionRemoved = function(a) {
                    v--,
                    0 >= v && (p.commentEditorCtrl.showAtMentionAlert = !1,
                    p.$broadcast("render"))
                }
                ,
                p.onSelectionRemoved = function(a) {
                    setTimeout(function() {
                        a && a.length || (v = 0,
                        p.commentEditorCtrl.showAtMentionAlert = !1,
                        p.$broadcast("render"))
                    }, 100)
                }
                ,
                p.removeCommentEditorSnippetData = function() {
                    p.commentEditorCtrl.commentEdit ? (p.commentEditorCtrl.attachContext = !1,
                    p.commentEditorCtrl.snippetData = null ,
                    p.commentEditorCtrl.setAllowAttachments(!0)) : p.removeCommentEditorSnippet()
                }
                ,
                p.editCommentRemoveEditorSnippet = function() {
                    p.commentEditorCtrl.commentEdit && (p.editCommentEditorCtrl.attachContext = !1)
                }
                ,
                p.onFocusOut = function() {
                    console.log("editor focusout."),
                    p.commentEditorCtrl && p.commentEditorCtrl.onFocusOut && p.commentEditorCtrl.onFocusOut()
                }
                ,
                p.onCommandExecuted = function(a, b) {
                    setTimeout(function() {
                        s = p.textEditorCtrl.getSelection(),
                        p.giphyObject = new l(b,"command"),
                        p.triggerGiphyPopover()
                    }, 0)
                }
                ,
                p.showSingltonMessageBanner = function() {
                    d.showBanner("You can add one attachment to comments at a time.", !1, !1, null , 3e3)
                }
                ,
                p.getEditCommentSnippetImage = function() {
                    var a = "";
                    if (p.commentEditorCtrl.snippetData.imageData)
                        a = p.commentEditorCtrl.snippetData.imageData;
                    else {
                        var b = p.commentData
                          , c = b.resource_link.collaboration_info.snippet_data.imageData;
                        a = c ? c : e("getSnippetImagePath")(b.resource_link.collaboration_info.snippet_data.data.fileName, b.uid)
                    }
                    return a
                }
                ,
                p.commentEditorCtrl.setAllowAttachments = function(a) {
                    p.commentEditorCtrl.allowAttachments = a,
                    p.dropzoneCtrl.message = p.commentEditorCtrl.allowAttachments === !1 ? r.NOT_ALLOWED_STRING : r.ALLOWED_STRING
                }
                ,
                p.commentEditorCtrl.getCommentId = function() {
                    return p.commentEditorCtrl.comment_uid ? p.commentEditorCtrl.comment_uid : u
                }
                ,
                p.commentEditorCtrl.clearContent = function() {
                    p.textEditorCtrl.clearContent(),
                    u = h.generateUniqueId(),
                    p.commentEditorCtrl.showAtMentionAlert = !1,
                    p._resetAttachmentControllers(),
                    p.$broadcast("render")
                }
                ,
                p.commentEditorCtrl.activate = function(b, c) {
                    return p.active ? void (c ? (p.textEditorCtrl.focus(),
                    b && p.textEditorCtrl.setContent(b, !0)) : p.textEditorCtrl.setContent(b)) : (m(b),
                    void ("$apply" != a.$root.$$phase && "$digest" != a.$root.$$phase && a.$digest()))
                }
                ,
                p.commentEditorCtrl.getContent = function() {
                    return p.textEditorCtrl.getEditorText()
                }
                ,
                p.commentEditorCtrl.setFocus = function() {
                    p.focusEditor()
                }
                ,
                p.commentEditorCtrl.getHtmlContent = function() {
                    return p.textEditorCtrl.getEditorHtmlText()
                }
                ,
                p.commentEditorCtrl.destroy = function() {
                    return p.textEditorCtrl.destroy
                }
                ,
                p.commentEditorCtrl.deactivate = function() {
                    n()
                }
                ,
                p.commentEditorCtrl.render = function() {
                    a.$broadcast("render")
                }
                ,
                p.$on("all-files-removed", function(a) {
                    a.stopPropagation(),
                    p._resetAttachmentControllers()
                }),
                p.$on("giphyPopupClosed", function() {
                    if (p.active)
                        if (s) {
                            var a = p.textEditorCtrl.getSelection();
                            a || p.textEditorCtrl.setSelection(s, "USER"),
                            s = null 
                        } else
                            p.textEditorCtrl.focus()
                }),
                function() {
                    p.commentEditorCtrl.instantLoad && m(p.commentEditorCtrl.initialText || ""),
                    p.commentEditorCtrl.attachedFiles && setTimeout(function() {
                        setTimeout(function() {
                            p.initWithFiles(p.commentEditorCtrl.attachedFiles)
                        }, 0)
                    }, 0),
                    p.commentEditorCtrl.initialized = !0,
                    p.commentEditorCtrl.trigger && p.commentEditorCtrl.trigger("initialized")
                }()
            }
            ]
        }
    }
    ]),
    b.module("convoApp").factory("Comments", ["ServerComm", "$rootScope", "$q", "utils", "datetimeService", "rtcNotificationManager", "RTCNotification", "accountInfo", "awsService", "userProvider", "$filter", "userInfo", function(a, d, e, g, h, i, j, k, l, m, n, o) {
        function p() {
            return {
                total_comments: 0,
                comments: []
            }
        }
        function q(a, b, c, d) {
            var e = p();
            if (a || (a = []),
            c && (a = D(a)),
            d)
                for (var f = 0; f < a.length; f++) {
                    var g = a[f];
                    g._comment_title = y(g.comment_text)
                }
            return e.comments = a,
            e.total_comments = b,
            e
        }
        function r(a, b, c) {
            H[b + "_" + a] = c
        }
        function s(a, b) {
            return H[b + "_" + a]
        }
        function t(a, b, c) {
            var d = s(b, c);
            if (!d)
                return null ;
            for (var e = d.comments, f = e.length, g = 0; f > g; g++)
                if (e[g].uid == a)
                    return e[g];
            return null 
        }
        function u(a, b, c) {
            for (var d = s(b, c), e = d.comments, f = e.length, g = 0; f > g; g++)
                if (e[g].uid == a) {
                    e.splice(g, 1),
                    d.total_comments--;
                    break
                }
        }
        function v(a, b, c) {
            var d = t(c, b, a);
            d && (d._unread = !0)
        }
        function w(a, b, c) {
            for (var d = s(b, a).comments, e = d.length, f = 0; e > f; f++)
                d[f]._unread = !1
        }
        function x(a, b) {
            for (var c = s(b, a).comments, d = c.length, e = 0; d > e; e++)
                c[e].is_posting = !1
        }
        function y(a) {
            return a = $("<div>" + a + "</div>")[0].textContent,
            a.substring(0, 25) + (a.length > 25 ? "..." : "")
        }
        function z(a, b, c, e, f) {
            var g, i, j = h.getServerTimestamp(), k = n("limitHtmlText")(e, 300, !0);
            k.isTruncated ? (g = k.htmlStr,
            i = !0) : (g = null ,
            i = !1);
            var l, m, k = n("limitHtmlText")(e, 130, !0);
            k.isTruncated ? (l = k.htmlStr,
            m = !0) : (l = null ,
            m = !1);
            var o = {
                is_posting: !0,
                uid: c,
                app_instance_id: b,
                citem_uid: c,
                from_user: d.login_data.user.user_id,
                comment_text: e,
                comment_text_less: g,
                comment_text_less_snippet: l,
                has_more_text: i,
                has_more_text_snippet: m,
                resource_id: a,
                files: f,
                creation_timestamp: j,
                update_timestamp: j,
                like_info: {
                    liked_by: null ,
                    liked_by_me: !1,
                    likes_count: 0,
                    like_timestamp: 0
                },
                _comment_title: y(e)
            };
            return o
        }
        function A(a, b, c, d) {
            B(a, b, c, d, "RTC")
        }
        function B(a, b, c, d, e) {
            d || (d = []);
            for (var f = 0; f < d.length; f++) {
                var g = d[f];
                (2 != g.update_kind || o.isAdminMode()) && (g._comment_title || (g._comment_title = y(g.comment_text)),
                g.comment_text = g.comment_text.replace(/<p\s*align=\"LEFT\"><\/p>/gi, "<br>"))
            }
            var h = s(a, b)
              , i = {};
            if (h) {
                h.total_comments = c,
                i = C(h.comments, d, !1),
                h.comments = D(h.comments);
                var j = "RTC" === e || "FEED_POLL" === e;
                K.trigger("commentsUpdated", {
                    resource_id: a,
                    app_instance_id: b,
                    data: h,
                    areNewerComments: j,
                    updateInfo: i
                })
            } else
                h = p(),
                h.total_comments = c,
                h.comments = D(d),
                r(a, b, h);
            return h
        }
        function C(a, b, d) {
            for (var e = E(a), f = [], g = 0; g < b.length; g++)
                if (b[g]) {
                    var h = e[b[g].uid];
                    if (h != c)
                        if (2 != b[g].update_kind || o.isAdminMode()) {
                            if (b[g]._unread = a[h]._unread,
                            b[g].files && a[h].files)
                                for (var i = 0; i < b[g].files.length; i++) {
                                    var j = a[h].files[i] || {};
                                    j.hasOwnProperty("preLocalData") && (b[g].files[i].preLocalData = j.preLocalData)
                                }
                            a[h] = b[g]
                        } else
                            a.splice(h, 1),
                            e = E(a);
                    else if (2 != b[g].update_kind || o.isAdminMode()) {
                        if (d)
                            for (var k = b[g].creation_timestamp, l = a.length - 2; l >= 0; l--) {
                                if (k >= a[l].creation_timestamp) {
                                    a.splice(l + 1, 0, b[g]);
                                    break
                                }
                                0 === l && a.splice(0, 0, b[g])
                            }
                        else
                            a.push(b[g]);
                        f.push({
                            uid: b[g].uid,
                            from_user: b[g].from_user
                        })
                    }
                }
            return {
                addedComments: f
            }
        }
        function D(a) {
            return _.sortBy(a, "creation_timestamp")
        }
        function E(a) {
            for (var b = {}, c = 0; c < a.length; c++)
                b[a[c].uid] = c;
            return b
        }
        function F(a, b) {
            var c = G(a.imageData)
              , d = k.getAccountId() + "/snippets/" + b + "/" + a.snippetData.data.fileName
              , e = l.uploadSnippetImage(c, d);
            return e
        }
        function G(a) {
            var b;
            b = a.split(",")[0].indexOf("base64") >= 0 ? atob(a.split(",")[1]) : unescape(a.split(",")[1]);
            for (var c = a.split(",")[0].split(":")[1].split(";")[0], d = new Uint8Array(b.length), e = 0; e < b.length; e++)
                d[e] = b.charCodeAt(e);
            return new Blob([d],{
                type: c
            })
        }
        var H = {}
          , I = {}
          , J = {};
        i.addListener(f.rtc.PubsubEvents.NOTIFICATION_RECEIVE, function(a) {
            var b = a.notification
              , a = b.data
              , c = !1;
            if (b.type === j.COMMENT_ADDED || b.type === j.COMMENT_UPDATED || b.type === j.COMMENT_DELETED) {
                if (K.getUser(a.from_user) || a.user) {
                    if (!K.getUser(a.from_user) && a.user) {
                        var d = {};
                        d[a.from_user] = a.user[a.from_user],
                        K.updateUsersAndGroups(d)
                    }
                } else
                    c = !0;
                if (c)
                    return void K.trigger("commentRTCChangeReceived");
                var e = s(a.resource_id, a.app_instance_id);
                if (b.type === j.COMMENT_UPDATED)
                    t(a.uid, a.resource_id, a.app_instance_id) && (A(a.resource_id, a.app_instance_id, e.total_comments, [a]),
                    K.trigger("commentUpdatedByRemoteUser", a));
                else if (b.type === j.COMMENT_DELETED) {
                    if (!t(a.uid, a.resource_id, a.app_instance_id))
                        return;
                    A(a.resource_id, a.app_instance_id, e.total_comments - 1, [a]),
                    K.trigger("commentDeletedByRemoteUser", a)
                }
                console.log("RECEIVED: RTCNotification.COMMENT_ADDED/UPDATED/DELETED: " + b.type),
                K.trigger("commentRTCChangeReceived")
            }
        });
        var K = {
            postComment: function(b, d, f, h, k, l, m, n, q, t, u, v) {
                function w() {
                    var c = a.postx("comments", A);
                    return c.then(function(a) {
                        var c = a.data;
                        u.creation_timestamp = parseInt(c.data.time_stamp),
                        u.update_timestamp = u.creation_timestamp,
                        K.trigger("commentAdded");
                        var d = {
                            uid: m,
                            citem_uid: m,
                            app_instance_id: k,
                            resource_id: f,
                            updated_by: o.user_id,
                            update_kind: 0,
                            creation_timestamp: c.data.time_stamp,
                            update_timestamp: c.data.time_stamp,
                            resource_link: A.resource_link,
                            comment_text: b,
                            from_user: o.user_id,
                            should_show_snippet: !0,
                            like_info: {
                                likes_count: 0,
                                liked_by_me: !1,
                                like_timestamp: 0,
                                liked_by: null 
                            }
                        };
                        c.files && c.files[0] && c.files[0].origional_file && (d.files = c.files[0].origional_file),
                        d.user = {},
                        d.user[o.user_id] = _.extend({
                            accessible: !0
                        }, _.omit(o.getUserInfo(), "user_id"));
                        var e = new j;
                        e.type = j.COMMENT_ADDED,
                        e.data = d,
                        i.send(e),
                        console.log("SENT: RTCNotification.COMMENT_ADDED")
                    }, function(a) {
                        console.log("error in post comment.")
                    }),
                    c
                }
                function x() {
                    u.is_posting = !1,
                    u.posting_failed = !1,
                    u.postCommentFunctionArgumentsStringified = c
                }
                function y() {
                    u.is_posting = !1,
                    u.posting_failed = !0,
                    u.postCommentFunctionArgumentsStringified = JSON.stringify({
                        commentText: b,
                        feedId: d,
                        resourceId: f,
                        resourceType: h,
                        appInstanceId: k,
                        snippetData: l,
                        conversationUID: m,
                        attachedFiles: t,
                        resourceLinkData: n,
                        collaborationInfo: q
                    })
                }
                var A, B = e.defer(), C = null  != u;
                m || (m = g.generateUniqueId()),
                l && m && n ? (A = {
                    method: "addComment",
                    comment_text: b,
                    feed_id: d,
                    resource_id: f,
                    resource_type: h,
                    conversation_uid: m,
                    resource_link: {
                        resource_path: n,
                        collaboration_info: {
                            snippet_data: l.snippetData
                        }
                    }
                },
                q && q.replied_to_comment_id && (A.resource_link.collaboration_info.replied_to_comment_id = q.replied_to_comment_id),
                q && q.replied_to_user_id && (A.resource_link.collaboration_info.replied_to_user_id = q.replied_to_user_id),
                q ? A.resource_link.collaboration_info.parent_resource_index = q.parent_resource_index : A.resource_link.collaboration_info.parent_resource_index = 0,
                l.imageData && (A.resource_link.collaboration_info.snippet_data.imageData = l.imageData)) : (A = {
                    method: "addComment",
                    comment_text: b,
                    feed_id: d,
                    resource_id: f,
                    resource_type: h,
                    conversation_uid: m,
                    resource_link: {
                        resource_path: n,
                        collaboration_info: null 
                    }
                },
                q ? A.resource_link.collaboration_info = {
                    parent_resource_index: q.parent_resource_index
                } : A.resource_link.collaboration_info = {
                    parent_resource_index: 0
                },
                t && t.serverData.length && (A.files = t.serverData),
                q && q.replied_to_comment_id && (A.resource_link.collaboration_info.replied_to_comment_id = q.replied_to_comment_id),
                q && q.replied_to_user_id && (A.resource_link.collaboration_info.replied_to_user_id = q.replied_to_user_id)),
                A.citem_uid = m;
                var D = s(f, k);
                return D || (D = p(),
                r(f, k, D)),
                C || (u = z(f, k, m, b, t && t.data)),
                u.resource_link = A.resource_link,
                C || (D.comments.push(u),
                D.total_comments++),
                u.is_posting = !0,
                u.posting_failed = !1,
                v && (A.mp_source = v),
                l && !l.fileViewerTextAnnotation ? F(l, m).then(function(a) {
                    w().then(function(a) {
                        x(),
                        B.resolve(a.data)
                    }, function(a) {
                        y(),
                        B.reject(a)
                    })
                }, function(a) {
                    y(),
                    B.reject(a)
                }) : w().then(function(a) {
                    x(),
                    B.resolve(a.data)
                }, function(a) {
                    y(),
                    B.reject(a)
                }),
                B.promise
            },
            retryFailedPostComment: function(a, b, c) {
                var d = t(a, b, c)
                  , e = JSON.parse(d.postCommentFunctionArgumentsStringified);
                return K.postComment(e.commentText, e.feedId, e.resourceId, e.resourceType, e.appInstanceId, e.snippetData, e.conversationUID, e.resourceLinkData, e.collaborationInfo, e.attachedFiles, d)
            },
            discardFailedPostComment: function(a, b, c) {
                u(a, b, c)
            },
            editComment: function(b, c, d, e, f, g, k, l) {
                var m = t(b, e, f)
                  , n = m.comment_text
                  , p = m.update_timestamp
                  , q = m.resource_link.collaboration_info
                  , r = m.files;
                m.is_editing = !0,
                m.comment_text = d,
                m.update_timestamp = h.getServerTimestamp(),
                m.files = l.data;
                var s = {
                    snippet_data: null ,
                    parent_resource_index: 0
                };
                q && q.replied_to_comment_id && q.replied_to_user_id && (s.replied_to_comment_id = q.replied_to_comment_id,
                s.replied_to_user_id = q.replied_to_user_id),
                g ? (k && (m.resource_link.collaboration_info ? m.resource_link.collaboration_info.snippet_data = k : m.resource_link.collaboration_info = {
                    snippet_data: k,
                    parent_resource_index: 0
                }),
                s.snippet_data = m.resource_link.collaboration_info.snippet_data) : m.resource_link.collaboration_info = null ;
                var u = {
                    method: "updateComment",
                    conversation_uid: b,
                    citem_uid: c,
                    comment_text: d,
                    resource_id: e,
                    app_instance_id: f,
                    collaboration_info: s
                };
                l && l.serverData && l.serverData.length && (u.files = l.serverData);
                var v = a.post("comments", u).success(function(a) {
                    m.is_editing = !1,
                    K.trigger("commentUpdated");
                    var d = {
                        uid: b,
                        citem_uid: c,
                        app_instance_id: f,
                        resource_id: e,
                        updated_by: o.user_id,
                        update_kind: 1,
                        creation_timestamp: m.creation_timestamp,
                        update_timestamp: a.data.time_stamp,
                        resource_link: m.resource_link,
                        comment_text: m.comment_text,
                        from_user: o.user_id,
                        should_show_snippet: !0,
                        like_info: m.like_info
                    };
                    m.files && m.files[0] && m.files[0].origional_file && (d.files = m.files[0].origional_file),
                    d.user = {},
                    d.user[o.user_id] = _.extend({
                        accessible: !0
                    }, _.omit(o.getUserInfo(), "user_id"));
                    var g = new j;
                    g.type = j.COMMENT_UPDATED,
                    g.data = d,
                    i.send(g),
                    console.log("SENT: RTCNotification.COMMENT_UPDATED")
                }).error(function(a) {
                    m.comment_text = n,
                    m.update_timestamp = p,
                    m.resource_link.collaboration_info = q,
                    m.files = r
                });
                return v
            },
            deleteComment: function(b, c, d) {
                var e = {
                    method: "deleteComment",
                    conversation_uid: b,
                    resource_id: c,
                    app_instance_id: d
                }
                  , f = t(b, c, d)
                  , g = a.post("comments", e).success(function(a) {
                    o.isAdminMode() ? (f.updated_by = o.user_id,
                    f.update_kind = 2,
                    f.update_timestamp = a.data.time_stamp) : (u(b, c, d),
                    K.trigger("commentDeleted"));
                    var e = {
                        uid: b,
                        app_instance_id: d,
                        resource_id: c,
                        updated_by: o.user_id,
                        update_kind: 2,
                        creation_timestamp: f.creation_timestamp,
                        update_timestamp: a.data.time_stamp,
                        resource_link: f.resource_link,
                        comment_text: f.comment_text,
                        from_user: o.user_id,
                        should_show_snippet: !0,
                        like_info: f.like_info
                    };
                    e.user = {},
                    e.user[o.user_id] = _.extend({
                        accessible: !0
                    }, _.omit(o.getUserInfo(), "user_id"));
                    var g = new j;
                    g.type = j.COMMENT_DELETED,
                    g.data = e,
                    i.send(g),
                    console.log("SENT: RTCNotification.COMMENT_DELETED")
                }).error(function(a) {});
                return g
            },
            getComment: function(a, b, c, d) {
                var f = t(d, b, c);
                if (f) {
                    var g = e.defer();
                    return g.resolve(f),
                    g.promise
                }
                return K.getComments_newApi(a, b, c, !0).then(function(a) {
                    return t(d, b, c)
                })
            },
            getComments_newApi: function(b, f, g, h, i, j) {
                var k = e.defer()
                  , l = h;
                i || (i = 0);
                var m = j === c || null  === j
                  , n = s(f, g);
                if (n) {
                    var o = i + (m ? n.total_comments - i : j);
                    o > n.total_comments && (o = n.total_comments),
                    i = n.comments.length,
                    j = o - i,
                    i >= o && (l = !1)
                } else
                    i = 0;
                if (l) {
                    var q = {
                        authToken: d.login_data.xmpp_session_token,
                        userID: d.login_data.user.user_id,
                        accountID: d.login_data.account_id,
                        feed_id: b,
                        resource_id: f,
                        path_id: f,
                        app_instance_id: g
                    };
                    0 == i && m ? q.all = !0 : (q.offset = i,
                    q.limit = j);
                    var r = a.post("conversations/fetchDiscussions", q);
                    r.then(function(a) {
                        var b = a.data
                          , c = B(f, g, b.discussions_counts, b.comments);
                        K.updateUsersAndGroups(b.users, b.groups),
                        k.resolve(c)
                    })
                } else
                    k.resolve(n ? n : p());
                return k.promise
            },
            updateCommentsDataReceivedInFeedPoll: function(a, b, c, d) {
                return B(a, b, c, d, "FEED_POLL")
            },
            updateCommentsDataReceivedInFeedFetch: function(a, b, c, d) {
                return B(a, b, c, d, "FEED_FETCH")
            },
            updateUsersAndGroups: function(a, c) {
                a && (b.extend(I, a),
                m.updateUsers(a, m.DATA_FORMAT_SERVICE)),
                c && b.extend(J, c)
            },
            getUser: function(a) {
                return I[a]
            },
            getUserName: function(a) {
                var b = I[a];
                return "undefined" == typeof b ? "Unknown" : b.name
            },
            getGroup: function(a) {
                return J[a]
            },
            checkIfCommentExistsInDataStore: function(a, b, c) {
                var d = H[c + "_" + b] ? H[c + "_" + b].comments : null ;
                if (d)
                    for (var e = 0; e < d.length; e++)
                        if (d[e].uid == a)
                            return !0;
                return !1
            },
            checkIfCommentExistsInDataStoreAndIsNewerThanNthLast: function(a, b, c, d) {
                var e = H[c + "_" + b] ? H[c + "_" + b].comments : null ;
                if (!e)
                    return !1;
                for (var f = !1, g = 0; g < e.length; g++)
                    if (e[g].uid == a) {
                        f = !0;
                        break
                    }
                return f ? {
                    newerThanNthLast: e.length - g + 1 >= d
                } : !1
            },
            getCommentsDataFromStore: function(a, b) {
                return s(a, b)
            },
            getCommentFromStore: function(a, b, c) {
                return t(a, b, c)
            },
            updateCommentLikeInfoReceivedOnRTCNotification: function(a, b) {
                a.like_info.like_timestamp = b.like_timestamp,
                a.like_info.likes_count = b.likes_count,
                a.like_info.liked_by = b.liked_by
            },
            emptyCommentsStore: function() {
                H = {}
            }
        };
        return K.initCommentsData = q,
        K.markCommentAsUnread = v,
        K.markCommentsAsRead = w,
        K.markCommentsAsPosted = x,
        _.extend(K, Backbone.Events),
        K
    }
    ]),
    b.module("convoApp").service("alertsService", ["$modal", function(a) {
        var b = "common/alerts/templates/";
        this.alertModal = function(c, d, e, f, h, i) {
            var j = a.open({
                templateUrl: b + "alertModal.tpl.html",
                controller: g,
                resolve: {
                    title: function() {
                        return c
                    },
                    text: function() {
                        return d
                    },
                    okBtnLabel: function() {
                        return e
                    },
                    okCallback: function() {
                        return f
                    },
                    dontShowCloseBtn: function() {
                        return h
                    }
                },
                windowClass: "alert-modal",
                backdrop: "static",
                keyboard: !i
            });
            return j
        }
        ,
        this.promptModal = function(c, d, e, f, g, h, i, j, l, m) {
            a.open({
                templateUrl: b + "promptModal.tpl.html",
                controller: k,
                resolve: {
                    title: function() {
                        return c
                    },
                    text: function() {
                        return d
                    },
                    okCallback: function() {
                        return e
                    },
                    cancelCallback: function() {
                        return f
                    },
                    okBtnLabel: function() {
                        return g
                    },
                    cancelBtnLabel: function() {
                        return h
                    },
                    defaultBtn: function() {
                        return i
                    },
                    dontShowCloseBtn: function() {
                        return j
                    },
                    onlyDismissModalOnCloseBtn: function() {
                        return l
                    },
                    showHeaderIcon: function() {
                        return "undefined" != typeof m ? m : !0
                    }
                },
                windowClass: "prompt-modal"
            })
        }
        ,
        this.errorModal = function(c, d, e) {
            a.open({
                templateUrl: b + "errorModal.tpl.html",
                controller: h,
                resolve: {
                    title: function() {
                        return c
                    },
                    text: function() {
                        return d
                    },
                    okBtnLabel: function() {
                        return e
                    }
                },
                windowClass: "error-modal"
            })
        }
        ,
        this.customModal = function(b, c, d, e, f) {
            var g;
            return g = "undefined" == typeof f ? "static" : f,
            a.open({
                templateUrl: b,
                controller: c,
                windowClass: "cnv-modal " + e,
                resolve: d,
                backdrop: g
            })
        }
    }
    ]);
    var g = function(a, b, d, e, f, g, h) {
        a.title = "Alert Box",
        a.okBtnLabel = "Ok",
        a.text = e,
        a.dontShowCloseBtn = h,
        d !== c && (a.title = d),
        f !== c && (a.okBtnLabel = f),
        a.ok = function() {
            b.close(),
            g && g()
        }
        ,
        a.close = function() {
            b.close()
        }
    }
    ;
    g.$inject = ["$scope", "$modalInstance", "title", "text", "okBtnLabel", "okCallback", "dontShowCloseBtn"];
    var h = function(a, b, d, e, f) {
        a.title = "Alert Box",
        a.okBtnLabel = "Ok",
        a.text = e,
        d !== c && (a.title = d),
        f !== c && (a.okBtnLabel = f),
        a.ok = function() {
            b.close()
        }
        ,
        a.close = function() {
            b.close()
        }
    }
    ;
    h.$inject = ["$scope", "$modalInstance", "title", "text", "okBtnLabel"];
    var k = function(a, d, e, f, g, h, i, j, k, l, m, n, o) {
        a.title = "Alert Box",
        a.okBtnLabel = "Ok",
        a.text = f,
        a.cancelBtnLabel = "Cancel",
        a.dontShowCloseBtn = l,
        a.onlyDismissModalOnCloseBtn = m,
        a.showHeaderIcon = !0,
        e !== c && (a.title = e),
        i !== c && (a.okBtnLabel = i),
        j !== c && (a.cancelBtnLabel = j),
        n !== c ? a.showHeaderIcon = n : a.showHeaderIcon = !0,
        a.ok = function() {
            d.close(),
            g()
        }
        ,
        a.close = function() {
            d.close(),
            !a.onlyDismissModalOnCloseBtn && h && h()
        }
        ,
        a.cancel = function() {
            d.dismiss(),
            h && h()
        }
        ,
        b.element(o).on("keydown", function(b) {
            8 === b.keyCode ? b.preventDefault() : 13 === b.keyCode ? a.ok() : 27 === b.keyCode && (a.cancel(),
            b.preventDefault())
        }),
        a.$on("$destroy", function() {
            b.element(o).off("keydown")
        })
    }
    ;
    k.$inject = ["$scope", "$modalInstance", "title", "text", "okCallback", "cancelCallback", "okBtnLabel", "cancelBtnLabel", "defaultBtn", "dontShowCloseBtn", "onlyDismissModalOnCloseBtn", "showHeaderIcon", "$window"],
    b.module("convoApp").factory("bannerService", [function() {
        function a(a, b, c, d, e, f, g, h) {
            this.promise = a,
            this.text = b,
            this.resolveText = c,
            this.errorText = d,
            this.dontAutoDismiss = e,
            this.showCloseBtn = f,
            this.linkClickCallback = g,
            this.autoDismissTime = h || 3e3
        }
        function b(a) {
            if (a.id = n++,
            a.displayText = a.text,
            !a.dontAutoDismiss)
                for (var b = m.length - 1; b >= 0; b--) {
                    var c = m[b];
                    c.dontAutoDismiss || (clearTimeout(c.autoDismissTimeoutId),
                    c.dismissedInternally = !0,
                    m.splice(b, 1))
                }
            return a.promise ? a.promise.then(function() {
                a.dismissedInternally || (a.resolveText && (a.displayText = a.resolveText,
                l.trigger("dataUpdated")),
                a.dontAutoDismiss || h(a))
            }, function() {
                a.dismissedInternally || (a.errorText && (a.displayText = a.errorText,
                l.trigger("dataUpdated")),
                a.dontAutoDismiss || h(a))
            }) : a.dontAutoDismiss || h(a),
            m.unshift(a),
            l.trigger("dataUpdated"),
            a.id
        }
        function d(a, b) {
            if ("A" == a.target.nodeName) {
                var c = _.find(m, function(a) {
                    return a.id == b
                });
                c.linkClickCallback && c.linkClickCallback(a.target.className),
                i(c.id)
            }
        }
        function e(a) {
            i(a)
        }
        function f(c, d, e, f, g) {
            return b(new a(null ,c,null ,null ,d,e,f,g))
        }
        function g(c, d, e, f, g, h, i, j) {
            return b(new a(c,d,e,f,g,h,i,j))
        }
        function h(a) {
            var b = setTimeout(function() {
                i(a.id)
            }, a.autoDismissTime);
            a.autoDismissTimeoutId = b
        }
        function i(a) {
            for (var b, d = 0; d < m.length; d++)
                if (m[d].id === a) {
                    b = d;
                    break
                }
            b !== c && (m.splice(b, 1),
            l.trigger("dataUpdated"))
        }
        function j() {
            return m
        }
        function k() {
            for (var a = 0; a < m.length; a++)
                i(m[a].id)
        }
        var l = {};
        _.extend(l, Backbone.Events);
        var m = []
          , n = 0;
        return l.getBannersStackReference = j,
        l.showBanner = f,
        l.showBanner_promise = g,
        l.dismissBanner = i,
        l.dismissAllBanners = k,
        l.onBannerTextClick = d,
        l.onBannerCloseBtnClick = e,
        l
    }
    ]),
    b.module("convoApp").directive("boRepeat", ["$parse", "$animate", "utils", function(a, d, e) {
        var f = "$$NG_REMOVED"
          , g = function(a, b, c, d, e, f, g) {
            a[c] = d,
            e && (a[e] = f),
            a.$index = b,
            a.$first = 0 === b,
            a.$last = b === g - 1,
            a.$middle = !(a.$first || a.$last),
            a.$odd = !(a.$even = 0 === (1 & b))
        }
          , h = function(a) {
            return a.clone[0]
        }
          , i = function(a) {
            return a.clone[a.clone.length - 1]
        }
        ;
        return {
            restrict: "A",
            multiElement: !0,
            transclude: "element",
            priority: 1e3,
            terminal: !0,
            $$tlb: !0,
            compile: function(j, k) {
                var l = k.boRepeat
                  , m = document.createComment(" end boRepeat: " + l + " ")
                  , n = l.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+track\s+by\s+([\s\S]+?))?\s*$/);
                if (!n)
                    throw "boRepeat: Expected expression in form of '_item_ in _collection_[ track by _id_]' but got '" + l + "'";
                var o = n[1]
                  , p = n[2]
                  , q = n[3]
                  , r = n[4];
                if (n = o.match(/^(?:([\$\w]+)|\(([\$\w]+)\s*,\s*([\$\w]+)\))$/),
                !n)
                    throw "'_item_' in '_item_ in _collection_' should be an identifier or '(_key_, _value_)' expression, but got '" + o + "'.";
                var s = n[3] || n[1]
                  , t = n[2];
                if (q && (!/^[$a-zA-Z_][$a-zA-Z0-9_]*$/.test(q) || /^(null|undefined|this|\$index|\$first|\$middle|\$last|\$even|\$odd|\$parent)$/.test(q)))
                    throw "alias '" + q + "' is invalid --- must be a valid JS identifier which is not a reserved name.";
                var u, v, w, x, y = {
                    $id: e.hashKey
                };
                return r ? u = a(r) : (w = function(a, b) {
                    return e.hashKey(b)
                }
                ,
                x = function(a) {
                    return a
                }
                ),
                function(a, j, k, n, o) {
                    u && (v = function(b, c, d) {
                        return t && (y[t] = b),
                        y[s] = c,
                        y.$index = d,
                        u(a, y)
                    }
                    );
                    var r = Object.create(null )
                      , z = e.$watchCollection_withoutCreatingWatch(a, p, function(k) {
                        var n, p, u, y, z, A, B, C, D, E, F, G, H = j[0], I = Object.create(null );
                        if (q && (a[q] = k),
                        b.isArray(k))
                            D = k,
                            C = v || w;
                        else {
                            C = v || x,
                            D = [];
                            for (var J in k)
                                k.hasOwnProperty(J) && "$" != J.charAt(0) && D.push(J);
                            D.sort()
                        }
                        for (y = D.length,
                        F = new Array(y),
                        n = 0; y > n; n++)
                            if (z = k === D ? n : D[n],
                            A = k[z],
                            B = C(z, A, n),
                            r[B])
                                E = r[B],
                                delete r[B],
                                I[B] = E,
                                F[n] = E;
                            else {
                                if (I[B])
                                    throw forEach(F, function(a) {
                                        a && a.scope && (r[a.id] = a)
                                    }),
                                    "Duplicates in a repeater are not allowed. Use 'track by' expression to specify unique keys. Repeater: " + l + ", Duplicate key: " + B + ", Duplicate value: " + toJson(A);
                                F[n] = {
                                    id: B,
                                    scope: c,
                                    clone: c
                                },
                                I[B] = !0
                            }
                        for (var K in r) {
                            if (E = r[K],
                            G = e.getBlockNodes(E.clone),
                            G.remove(),
                            G[0].parentNode)
                                for (n = 0,
                                p = G.length; p > n; n++)
                                    G[n][f] = !0;
                            E.scope.$destroy()
                        }
                        for (n = 0; y > n; n++)
                            if (z = k === D ? n : D[n],
                            A = k[z],
                            E = F[n],
                            E.scope) {
                                u = H;
                                do
                                    u = u.nextSibling;
                                while (u && u[f]);h(E) != u && d.move(e.getBlockNodes(E.clone), null , $(H)),
                                H = i(E),
                                g(E.scope, n, s, A, t, z, y)
                            } else
                                o(function(a, b) {
                                    E.scope = b;
                                    var c = m.cloneNode(!1);
                                    a[a.length++] = c,
                                    d.enter(a, null , $(H)),
                                    H = c,
                                    E.clone = a,
                                    I[E.id] = E,
                                    g(E.scope, n, s, A, t, z, y)
                                });
                        r = I
                    })
                      , A = "render";
                    k.boRepeatRenderId && (A = "render:boRepeat:" + k.boRepeatRenderId),
                    a.$on(A, z)
                }
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvAppStateInfo", ["appStateInfo", "config", function(b, c) {
        return {
            restrict: "E",
            link: function(d, e, f) {
                function g() {
                    a.addEventListener("resize", k)
                }
                function h() {
                    var b = 1;
                    0 !== a.outerWidth && (b = a.outerWidth / a.innerWidth);
                    var d = Math.max(a.innerWidth - $("body").width(), 0)
                      , e = Math.ceil(c.COMPACT_VIEW_UNSCALED_WIDTH * b + d * b);
                    return e
                }
                function i() {
                    var a = h();
                    b.setScaledCompactWidth(a)
                }
                function j() {
                    g(),
                    i(),
                    b.trigger("windowResized", a.innerWidth)
                }
                var k = function(c) {
                    console.log("cnvAppStateInfo : onWindowResized"),
                    console.log("cnvAppStateInfo : INNER WIDTH : " + a.innerWidth),
                    console.log("cnvAppStateInfo : OUTER WIDTH : " + a.outerWidth),
                    l(),
                    b.trigger("windowResized", c.srcElement.innerWidth)
                }
                  , l = _.debounce(i, 1e3);
                j(),
                d.$on("$destory", function() {
                    a.removeEventListener("resize", k)
                })
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvAutofocus", [function() {
        return {
            restrict: "A",
            scope: !1,
            link: function(a, b, d) {
                function e() {
                    var a, b = document.createElement("fakeelement"), d = {
                        transition: "transitionend",
                        OTransition: "oTransitionEnd",
                        MozTransition: "transitionend",
                        WebkitTransition: "webkitTransitionEnd"
                    };
                    for (a in d)
                        if (b.style[a] !== c)
                            return d[a]
                }
                function f() {
                    b.focus(),
                    $(d.cnvAutofocus).off(g, f)
                }
                if (d.cnvAutofocus) {
                    var g = e();
                    g && $(d.cnvAutofocus).on(g, f)
                } else
                    setTimeout(function() {
                        b.focus()
                    }, 100)
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvInviteTeammates", ["accountInfo", "alertsService", "utils", "Contacts", "mixpanelService", function(a, b, c, d, e) {
        return {
            restrict: "E",
            scope: !1,
            link: function(a, b, d) {
                b.find("input").on("keydown", function(d) {
                    13 == d.keyCode && (a.invtTeammtCtrl.isNotShowingAutoComplete ? b.find("input").val() && c.isValidEmail(b.find("input").val()) && (a.invtTeammtCtrl.inviteTeammates([b.find("input").val()]),
                    b.find("input").val("")) : a.invitedTo.length && a.inviteTeammate())
                })
            },
            templateUrl: "common/cnvInviteTeammates/templates/cnvInviteTeammates.tpl.html",
            controller: ["$scope", "alertsService", "Users", "usersGroupsListProvider", "$q", function(b, e, f, g, h) {
                function i() {
                    b.invtTeammtCtrl.getAutoCompleteUserItem().then(function(a) {
                        b.autoComplUsrItmsToInvt = a
                    })
                }
                function j() {
                    i()
                }
                var k, l, m;
                b.placeholderText = "teammate@" + a.getPrimaryAccountDomain().user_email_domain,
                b.invtTeammtCtrl.isNotShowingAutoComplete ? (b.invtDetails = {},
                b.invtDetails.email = "") : (b.$on("inviteTeammates:groupMembersUpdated", j),
                b.autoComplUsrItmsToInvt,
                b.invitedTo = [],
                i(),
                b.getAutoCompleteUserItemsToInvite = function(a, c) {
                    var d = h.defer();
                    return d.resolve(g.queryCustomList(b.autoComplUsrItmsToInvt, a, c + 4)),
                    d.promise
                }
                ),
                b.onItemAddedInToField = function(a) {}
                ,
                b.openInviteTeammatesModal = function() {
                    k = "home/components/cnvInviteTeammatesWidget/templates/cnvInviteTeammatesModal.tpl.html",
                    l = "cnvInviteTeammatesModalCtrl",
                    m = "cnv-invite-teammates";
                    var a = {
                        teammate_email: function() {
                            return b.invtTeammtCtrl.isNotShowingAutoComplete ? b.invtDetails.email : b.invitedTo[0]
                        },
                        showAutoComplete: function() {
                            return !b.invtTeammtCtrl.isNotShowingAutoComplete
                        },
                        autoCompleteFieldLabelText: function() {
                            return b.invtTeammtCtrl.autoCompleteFieldLabelText
                        },
                        autoCompleteItems: function() {
                            return []
                        }
                    };
                    if (!b.invtTeammtCtrl.isNotShowingAutoComplete && b.invtTeammtCtrl.initialized)
                        b.invtTeammtCtrl.getAutoCompleteUserItem().then(function(c) {
                            a.autoCompleteItems = function() {
                                return c
                            }
                            ;
                            var d = e.customModal(k, l, a, m);
                            d.result.then(function(a) {
                                for (var c, d = a.inviteTo, e = [], g = a.messageText, h = 0; d && h < d.length; h++)
                                    c = f.getUserById(d[h].id),
                                    c ? e.push(c.email) : e.push(d[h].label);
                                b.invtTeammtCtrl.initialized && b.invtTeammtCtrl.inviteTeammates(e, g)
                            }),
                            b.invitedTo = []
                        });
                    else {
                        var c = e.customModal(k, l, a, m);
                        c.result.then(function(a) {
                            for (var c, d = a.inviteTo, e = [], g = a.messageText, h = 0; d && h < d.length; h++)
                                c = f.getUserById(d[h].id),
                                c ? e.push(c.email) : e.push(d[h].label);
                            b.invtTeammtCtrl.initialized && b.invtTeammtCtrl.inviteTeammates(e, g)
                        }),
                        b.invtDetails.email = ""
                    }
                }
                ,
                b.inviteFromAddressBk = function() {
                    var a = b.invtTeammtCtrl.group;
                    a ? d.initContactsInviteModal({
                        include_off_domain: !0,
                        origin: "Group_Settings",
                        invite_via: "Invite_Dialog",
                        group: a
                    }) : d.initContactsInviteModal({
                        include_off_domain: !1,
                        origin: "Manage_Users",
                        invite_via: "Invite_Dialog"
                    })
                }
                ,
                b.inviteTeammate = function(a) {
                    if (b.invtTeammtCtrl.initialized && !b.invtTeammtCtrl.isNotShowingAutoComplete) {
                        for (var d, e = [], g = 0; g < b.invitedTo.length; g++)
                            d = f.getUserById(b.invitedTo[g].id),
                            d ? e.push(d.email) : e.push(b.invitedTo[g].label);
                        b.invtTeammtCtrl.initialized && b.invtTeammtCtrl.inviteTeammates(e),
                        b.invitedTo = []
                    } else
                        b.invtTeammtCtrl.initialized && b.invtDetails.email && c.isValidEmail(b.invtDetails.email) && (b.invtTeammtCtrl.inviteTeammates([b.invtDetails.email]),
                        b.invtDetails.email = "")
                }
                ,
                b.shareableInviteLink = function() {
                    var a = "common/cnvInviteTeammates/templates/cnvFindTeammatesBasicSplash.tpl.html"
                      , b = "findContactsSplashCtrl"
                      , c = {
                        data: function() {
                            return {
                                requestedView: "VANITY_URL"
                            }
                        }
                    };
                    e.customModal(a, b, c).result.then(function(a) {
                        console.log("invite complete.")
                    }, function() {
                        console.log("invite complete.")
                    })
                }
            }
            ]
        }
    }
    ]),
    b.module("convoApp").controller("findContactsPermissionDenied", ["$scope", "$modalInstance", "data", function(a, b, c) {
        var d = a;
        d.data = c,
        d.VIEWS = {
            MAC: "mac",
            WINDOWS: "windows"
        },
        d.VIEW = d.VIEWS.MAC,
        d.dismiss = function() {
            b.dismiss("cancel")
        }
    }
    ]),
    b.module("convoApp").controller("findContactsSplashCtrl", ["$scope", "$modalInstance", "data", "accountInfo", "Contacts", "importMacContacts", "$q", "utils", "mixpanelService", "config", "$location", function(a, b, c, d, e, f, g, h, i, j, k) {
        function l(a) {
            m.inviteResult = {},
            200 == a.response.status || a.response.type ? (m.inviteResult = a.response.data.data || a.response.data.invitation_data || a.response.data,
            m.inviteResult.totalInvitesSent = a.totalInvitesSent,
            m.inviteResult.invitedTo = a.invited_to) : console.log(a)
        }
        var m = a;
        a.accountInfo = d;
        var n = null 
          , o = 1e4
          , p = !1
          , q = null ;
        m.data = c;
        var r = m.data && m.data.include_off_domain ? !0 : !1;
        m.inviteResult = {},
        m.accountInfo = d,
        m.VIEWS = {
            PERMISSION: "permission",
            PROCESSING: "processing",
            COMPLETE: "complete",
            VANITY_URL: "vanity_url"
        },
        m.isNative = j.IS_NATIVE,
        m.vanityURL = (j.WEBSITE_DOMAIN + "join/" + d.getPrimaryAccountDomain().account_domain).substring(8),
        m.commandSymbol = h.getCommandSymbol(),
        c.hasOwnProperty("requestedView") ? m.VIEW = m.VIEWS[c.requestedView] : m.VIEW = m.VIEWS.PERMISSION,
        m.dismiss = function() {
            b.dismiss("cancel"),
            m.VIEW === m.VIEWS.PERMISSION && (1 == f.getProperties("display_import_users_nag_count") ? i.trackEvent(i.DISMISS_IMPORT_PROMPT, {
                Type: "First"
            }) : 2 == f.getProperties("display_import_users_nag_count") ? i.trackEvent(i.DISMISS_IMPORT_PROMPT, {
                Type: "Reminder1"
            }) : 3 == f.getProperties("display_import_users_nag_count") && i.trackEvent(i.DISMISS_IMPORT_PROMPT, {
                Type: "Reminder2"
            }))
        }
        ,
        m["continue"] = function() {
            m.data.origin && i.trackEvent(i.CLICK_IMPORT_CONTACTS, {
                Source: m.data.origin
            }),
            f["import"]().then(function(a) {
                var c = a.data;
                "success" === c.status ? c.contacts.length ? (q = g.defer(),
                e.addUserContacts({
                    src: "mac",
                    contacts: c.contacts
                }).then(function(a) {
                    e.getAccountUserContacts({
                        include_off_domain: r
                    }).then(function(a) {
                        p ? q.resolve({
                            contacts: a
                        }) : b.close({
                            contacts: a
                        })
                    }, function() {
                        p ? q.reject({
                            error: "get_master_list_failed"
                        }) : b.dismiss({
                            error: "get_master_list_failed"
                        })
                    })
                }, function() {
                    p ? q.reject({
                        error: "submit_contacts_failed"
                    }) : b.dismiss({
                        error: "submit_contacts_failed"
                    })
                }),
                n = setTimeout(function() {
                    m.longProcessing = !0,
                    m.$$phase || m.$digest()
                }, o)) : b.dismiss({
                    error: "no_contacts_found"
                }) : "exception" === c.status ? b.dismiss({
                    error: "exception"
                }) : b.dismiss({
                    error: "permission_denied"
                })
            }),
            m.VIEW = m.VIEWS.PROCESSING,
            m.$$phase || m.$digest()
        }
        ,
        m.hide = function() {
            p = !0,
            b.dismiss({
                promise: q.promise
            }),
            clearTimeout(n)
        }
        ,
        m.showErrorPopup = function() {
            m.showErrorDetails = !0
        }
        ,
        m.onInputKeyDown = function(a) {
            var b = a;
            (b.shiftKey || b.altKey || b.ctrlKey || b.metaKey) && 67 == b.keyCode && i.trackEvent(i.COPY_INVITE_LINK, {})
        }
        ,
        m.copyToClipboardNatively = function(a) {
            h.copyToClipboard(m.vanityURL)
        }
        ,
        a.inviteEmailSubject = "Join me on " + d.getAccountName(),
        a.inviteEmailBody = "Hi there,%0D%0A%0D%0ALet's use Convo to make our internal communication faster!%0D%0A%0D%0ASign up with your work email at this link: https://" + m.vanityURL + "%0D%0A%0D%0ATake a look around and see what others are working on. Add a question or a great idea in comments. Then share a post and get really fast feedback.%0D%0A%0D%0ATry sharing posts instead of emails - even a complicated thread is easy to consume.",
        c.hasOwnProperty("response") && l(c.response)
    }
    ]),
    b.module("convoApp").directive("cnvOverlay", ["config", function(a) {
        return {
            restrict: "E",
            template: "<div></div>",
            link: function(b, c, d) {
                var e = c.find("div");
                b.$on("showOverlay", function(b, c) {
                    e.addClass("overlay-cover"),
                    a.IS_MENULET && c.length > 0 && (e[0].innerHTML = "<div class='overlay-content'>Waiting for " + c[0] + "...</div>")
                }),
                b.$on("removeOverlay", function() {
                    e.removeClass("overlay-cover"),
                    a.IS_MENULET && (e[0].innerHTML = "")
                })
            }
        }
    }
    ]),
    b.module("convoApp").factory("popoverUtils", function() {
        var a = {
            counter: 0,
            hide: function() {
                ++a.counter,
                clearTimeout(a.timeout),
                $("#cnv-popover").removeClass("show").removeAttr("hovered")
            }
        };
        return a
    }).directive("cnvPopover", ["$filter", "popoverUtils", function(a, b) {
        return {
            restrict: "AE",
            scope: !1,
            link: function(a, c, d) {
                function e(c) {
                    var e = a.$eval(d.cnvPopoverCtrl)
                      , i = "true" === d.cnvPopoverDisplayAsText;
                    h = $("#cnv-popover"),
                    h && h.length && e && (h.addClass("show").data("hovered", !0),
                    "function" == typeof e ? (h.find(".cnv-popover-content").html("..."),
                    f(),
                    e(function(a) {
                        h.data("hovered") && (i ? h.find(".cnv-popover-content").text(a) : h.find(".cnv-popover-content").html(a),
                        f())
                    })) : (i ? h.find(".cnv-popover-content").text(e) : h.find(".cnv-popover-content").html(e),
                    f()),
                    g(++b.counter, c.target))
                }
                function f() {
                    var a = c.offset()
                      , b = a.top - $(document).scrollTop() - h.outerHeight(!0)
                      , d = a.left + c.outerWidth(!0) / 2 - h.outerWidth(!0) / 2;
                    0 > b ? (b += h.outerHeight(!0) + c.outerHeight(!0) + 5,
                    h.removeClass("bottom").addClass("top")) : (b -= 5,
                    h.removeClass("top").addClass("bottom")),
                    h.css({
                        top: b,
                        left: d
                    })
                }
                function g(a, c) {
                    c.setAttribute("popover-data-id", "cnv-" + a),
                    clearTimeout(b.timeout),
                    b.timeout = setTimeout(function() {
                        return $("*[popover-data-id='cnv-" + a + "']").length || ++b.counter,
                        a === b.counter ? g(a, c) : void b.hide()
                    }, 1500)
                }
                $(c).hover(e, b.hide);
                var h = null 
            }
        }
    }
    ]),
    b.module("convoApp").directive("dialogBox", ["$window", function(a) {
        return {
            restrict: "A",
            templateUrl: "common/dialogBox.tpl.html",
            link: function(c, d, e) {
                d.css("top", a.innerHeight / 2 - d.height() / 2 + "px"),
                d.css("left", a.innerWidth / 2 - d.width() / 2 + "px"),
                c.showDialog = !0,
                b.element(a).bind("resize", function() {
                    console.log("resize-window"),
                    d.css("top", a.innerHeight / 2 - d.height() / 2 + "px"),
                    d.css("left", a.innerWidth / 2 - d.width() / 2 + "px")
                })
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvEventBinding", ["$window", function(a) {
        "use strict";
        var c = {
            ESCAPE: 27
        };
        return {
            restrict: "A",
            link: function(d, e, f) {
                var g = f.cnvEventBinding.split(",");
                g.forEach(function(e) {
                    var f = e.trim().split("::")
                      , g = f[0]
                      , h = f[1];
                    b.element(a).on(g, function(a) {
                        a.which === c[h] ? d.$broadcast("cnvEventBinding::keyup::" + h, a.target) : d.$broadcast("cnvEventBinding::" + g, a.target)
                    })
                })
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvLoadTemplate", ["$compile", "$templateCache", function(a, b) {
        return {
            restrict: "A",
            replace: !0,
            link: function(c, d, e) {
                var f = b.get(e.template1) + b.get(e.template2) + b.get(e.template3)
                  , g = a(f)(c);
                d.replaceWith(g)
            }
        }
    }
    ]),
    b.module("convoApp").factory("errorInterceptor", ["$q", function(a) {
        return {
            responseError: function(b) {
                a.defer();
                return console.log("***** ErrorInterceptor Called: "),
                console.log(b),
                b
            }
        }
    }
    ]),
    b.module("convoApp").factory("delimitedTextParser", ["utils", function(a) {
        function b() {
            l = 0,
            m = !1,
            o = !1,
            n = !1
        }
        function c(a) {
            return b(),
            j = a,
            k = ",",
            d()
        }
        function d() {
            var a = []
              , b = 0;
            if (l < j.length)
                for (var c; ; )
                    if (c = e(),
                    n || (a.push(c),
                    c.length > b && (b = c.length)),
                    o)
                        break;
            for (var d = 0; d < a.length; d++) {
                var f = a[d];
                f.length < b && (a[d] = f.concat(new Array(b - f.length).map(function(a, b, c) {
                    return ""
                })))
            }
            return a
        }
        function e() {
            var a = [];
            if (l < j.length)
                for (var b; ; )
                    if (b = f(),
                    n || a.push(b),
                    m)
                        break;
            return a
        }
        function f() {
            var a = "";
            if (l < j.length) {
                var b, c, d = !1;
                for (m = !1,
                h(); l < j.length; ) {
                    if (b = j.charAt(l),
                    '"' == b) {
                        if (!d) {
                            d = !0,
                            ++l;
                            continue
                        }
                        if (c = g(1),
                        '"' != c) {
                            d = !1,
                            ++l;
                            continue
                        }
                        ++l
                    } else if (b == k) {
                        if (!d) {
                            ++l;
                            break
                        }
                    } else if ("\n" == b) {
                        if (!d) {
                            ++l,
                            m = !0;
                            break
                        }
                    } else if ("\r" == b && !d) {
                        c = g(1),
                        "\n" == c ? l += 2 : ++l,
                        m = !0;
                        break
                    }
                    a += b,
                    ++l
                }
                l >= j.length && (m = !0,
                o = !0)
            }
            return a
        }
        function g(a) {
            var b;
            return b = l + a < j.length ? j.charAt(l + a) : p
        }
        function h() {
            for (var a; l < j.length && (a = j.charAt(l),
            a != k && (" " == a || "	" == a || "\f" == a)); )
                ++l;
            l >= j.length && (o = !0)
        }
        var i = {};
        _.extend(i, Backbone.Events);
        var j, k, l, m, n, o, p = "EOF";
        return i.parseDelimitedText = c,
        i
    }
    ]),
    b.module("convoApp").factory("importContactsService", ["utils", "delimitedTextParser", function(b, c) {
        function d(a) {
            var b = c.parseDelimitedText(a);
            return b = e(b),
            f(b)
        }
        function e(a) {
            var c, d = [], e = {
                name: 0,
                "given name": 0,
                "additional name": 0,
                "family name": 0,
                "first name": 0,
                "middle name": 0,
                "last name": 0
            }, f = {
                email: 0,
                "e-mail": 0,
                "e-mail 1 - value": 0,
                "e-mail 2 - value": 0,
                "e-mail address": 0,
                "e-mail 2 address": 0,
                "e-mail 3 address": 0
            }, g = ["email", "e-mail", "e-mail 1 - value", "e-mail 2 - value", "e-mail address", "e-mail 2 address", "e-mail 3 address"], h = !1, i = !1, j = !1, k = a[0], l = 0;
            for (l = 0; l < k.length; l++)
                c = String(k[l]).toLowerCase(),
                c in e ? (e[c] = {
                    idx: l
                },
                i = !0) : c in f && (f[c] = {
                    idx: l
                },
                j = !0);
            if (h = i && j)
                for (l = 1; l < a.length; l++) {
                    for (var m = null , n = null , o = null , p = a[l], q = 0; l < g.length; q++)
                        if (f[g[q]]) {
                            var r = p[f[g[q]].idx].trim();
                            if (b.isValidEmail(r)) {
                                m = r;
                                break
                            }
                        }
                    if (null  != m) {
                        var s = "";
                        if (e.name ? (s = p[e.name.idx].trim(),
                        0 == s.length && (e["given name"] && (s += p[e["given name"].idx].trim() + " "),
                        e["additional name"] && (s += p[e["additional name"].idx].trim() + " "),
                        e["family name"] && (s += p[e["family name"].idx].trim()),
                        s = s.trim())) : (e["first name"] && (s += p[e["first name"].idx].trim() + " "),
                        e["middle name"] && (s += p[e["middle name"].idx].trim() + " "),
                        e["last name"] && (s += p[e["last name"].idx].trim()),
                        s = s.trim()),
                        s.replace(/ {2,}/g, " "),
                        s.length > 0) {
                            var t = s.indexOf(" ");
                            -1 == t ? n = s : (n = s.substring(0, t),
                            o = s.substr(t + 1))
                        }
                        d.push({
                            email: m,
                            fname: n,
                            lname: o
                        })
                    }
                }
            else {
                var u = -1;
                for (l = 0; l < a.length; l++) {
                    var v = null 
                      , w = !0;
                    if (-1 != u && b.isValidEmail(a[l][u]) && (v = a[l][u],
                    w = !1),
                    w) {
                        var x;
                        x = 1 == a[l].length ? a[l].length : a[l].length - 1;
                        for (var q = 0; x > q; q++)
                            if (a[l][q] && b.isValidEmail(a[l][q].trim())) {
                                v = a[l][q].trim(),
                                u = q;
                                break
                            }
                    }
                    null  != v && d.push({
                        email: v,
                        fname: null ,
                        lname: null 
                    })
                }
            }
            return d
        }
        function f(a) {
            a.sort(g);
            for (var b = [], c = 0; c < a.length; c++)
                a[c + 1] ? a[c + 1].email != a[c].email && b.push(a[c]) : b.push(a[c]);
            return b
        }
        function g(a, b) {
            var c = a.email.toLocaleLowerCase()
              , d = b.email.toLocaleLowerCase();
            return d > c ? -1 : c > d ? 1 : 0
        }
        var h = {};
        return _.extend(h, Backbone.Events),
        a.sendContactsToFlexApp = function(a) {
            h.trigger("contactsReceivedFromGmail", JSON.parse(JSON.stringify(a)))
        }
        ,
        h.csvFileLoadingCompleteHandler = d,
        h
    }
    ]),
    b.module("convoApp").factory("loader", ["$q", "config", function(a, b) {
        function c(b) {
            return d[b] ? d[b] : (e ? d[b] = a(function(a) {
                a()
            }) : d[b] = a(function(a) {
                g.fileWithRetries("script", b, a)
            }),
            d[b])
        }
        var d = {}
          , e = b.IS_DEV
          , f = {
            GALLERY_VENDOR: "assets/gallery_libs-" + b.VENDOR_GALLERY_VERSION + ".js",
            YOUTUBE_API: "https://www.youtube.com/player_api",
            INTERCOM_IO_API: "https://widget.intercom.io/widget/" + b.INTERCOM_IO_APP_ID
        }
          , g = {
            script: function(a, b) {
                var c = document.createElement("script");
                c.onload = function() {
                    b(!0)
                }
                ,
                c.onerror = function() {
                    b(!1),
                    c.parentNode.removeChild(c)
                }
                ,
                c.src = a,
                document.querySelector("head").appendChild(c)
            },
            style: function(a, b) {
                function c(a, c) {
                    c || a.sheet.cssRules && !a.sheet.cssRules.length ? (b(!1),
                    d.parentNode.removeChild(d)) : b(!0)
                }
                var d = document.createElement("link");
                d.onload = function() {
                    c(d)
                }
                ,
                d.onerror = function() {
                    c(d, !0)
                }
                ,
                d.rel = "stylesheet",
                d.href = a,
                document.querySelector("head").appendChild(d)
            },
            fileWithRetries: function(a, b, c) {
                var d = this;
                d[a](b, function(e) {
                    e ? c && c() : setTimeout(function() {
                        d.fileWithRetries(a, b, c)
                    }, 1e3)
                })
            }
        };
        return {
            loadScript: c,
            SCRIPTS: f
        }
    }
    ]),
    b.module("convoApp").directive("cnvUserProfileImage", ["$compile", "$injector", "Users", "userIdToImgUrlFilter", "userImgUrlFilter", "utils", "config", function(a, b, c, d, e, f, g) {
        return {
            restrict: "E",
            scope: !1,
            link: function(a, h, i) {
                function j() {}
                a.__leak_user_profile = new j;
                var k, l;
                g.IS_MENULET || (k = b.get("Feed"),
                l = b.get("Comments"),
                userIdToImgUrlForFeedFilter = b.get("userIdToImgUrlForFeedFilter"));
                var m = function() {
                    h.removeClass("faded");
                    var b = a.$eval(i.size, 10) || 48
                      , g = b + "x" + b
                      , j = a.$eval(i.source)
                      , m = a.$eval(i.userId)
                      , n = a.$eval(i.profile)
                      , o = a.$eval(i.width, 10) || b
                      , p = a.$eval(i.height, 10) || b
                      , q = a.$eval(i.imgUrl) || null 
                      , r = null 
                      , s = null ;
                    if (n && (g = "184x184"),
                    h.addClass(a.$eval(i.classes) || ""),
                    k && j === k.source ? (r = q || userIdToImgUrlForFeedFilter(m, g),
                    s = k.getUser(m),
                    s || l && (s = l.getUser(m)),
                    s && !s.accessible && h.addClass("faded")) : (r = q || d(m, g),
                    s = c.getUserById(m),
                    !s || "INVITED" !== s.status && "REMOVED" !== s.status || h.addClass("faded")),
                    !s) {
                        var t = a.$eval(i.profileType)
                          , u = a.$eval(i.profileVersion)
                          , v = a.$eval(i.fullName);
                        s = {},
                        s.name = v || ". .",
                        s.user_id = m,
                        u && t && (s.profileVersion = u,
                        s.profileType = t,
                        r = q || e(s.user_id, s.profileType, s.profileVersion, g))
                    }
                    var w = function(a) {
                        var b = f.initials(a.name || (a.first_name || ".") + " " + (a.last_name || "."))
                          , c = f.stringToColor(a.name || (a.first_name || ".") + " " + (a.last_name || "."))
                          , d = h.find(".img-circle");
                        if (!d.length || d[0].innerHTML != b) {
                            var e = '<span class="img-circle" style="height: ' + p + "px; width:" + o + "px; font-style: normal; line-height: " + p + "px;  text-align: center; font-weight: 100; font-size:inherit; letter-spacing: -1px; background-color:" + c + '">' + b + "</span>";
                            $(h).empty().append($(e))
                        }
                    }
                      , x = h.find("img");
                    if (!x.length || x.attr("src") != r)
                        if (r)
                            if (-1 != r.indexOf("user-images/default-user/thumbnails/"))
                                s && w && w(s);
                            else {
                                var x = h.find("img");
                                if (!x.length || x.attr("src") != r) {
                                    var y = document.createElement("img");
                                    y.src = q || r,
                                    y.style.width = o + "px",
                                    y.style.height = p + "px",
                                    y.className = y.className + " img-circle",
                                    h[0].innerHTML = "",
                                    h[0].appendChild(y),
                                    y.onerror = function(a) {
                                        h && (h[0].innerHTML = "",
                                        w && w(s))
                                    }
                                }
                            }
                        else
                            w && w(s)
                }
                ;
                a.$on("$destroy", function() {
                    setupInitails = null ,
                    m = null ,
                    h = null 
                }),
                a.$on("refreshImage", m),
                m()
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvRightClick", ["$parse", function(a) {
        return function(b, c, d) {
            var e = a(d.cnvRightClick);
            c.bind("contextmenu", function(a) {
                b.$apply(function() {
                    a.preventDefault(),
                    e(b, {
                        $event: a
                    })
                })
            })
        }
    }
    ]).directive("cnvHandlePlaceholder", [function() {
        return function(a, b, c) {
            var d = b[0].placeholder;
            b[0].addEventListener("keyup", function() {
                a.$apply(function() {
                    b[0].value.length > 0 ? b[0].placeholder = "" : b[0].placeholder = d
                })
            })
        }
    }
    ]).directive("boDate", function() {
        return function(a, b, c) {
            function d() {
                var d = a.$eval(c.boDate);
                b.text(d)
            }
            d(),
            a.$on("render_date", d)
        }
    }).directive("cnvPreventEvaluationWhenNotInViewport", function() {
        return {
            restrict: "A",
            priority: 1001,
            scope: !0,
            compile: function(a, b) {
                return {
                    pre: function(a, b, c) {
                        a.$addWatcherGate(function() {
                            return d(b[0])
                        }, function(a, b, c, d) {
                            return isDefined(d) && "slyShow" == d ? !1 : !0
                        })
                    }
                }
            }
        }
    }).directive("cnvEvaluateOnlyWhen", ["$parse", function(a) {
        return {
            restrict: "A",
            priority: 1001,
            compile: function(b, c) {
                return {
                    pre: function(b, c, d) {
                        a(d.cnvEvaluateOnlyWhen);
                        b.$addWatcherGate(function() {
                            return b.itemData._dirty ? (b.itemData._dirty = !1,
                            !0) : !1
                        }, function(a, b, c, d) {
                            return !0
                        })
                    }
                }
            }
        }
    }
    ]).directive("onScrolledBottom", function() {
        return function(a, b, c) {
            var d = +a.$eval(c.triggerBefore) || 0
              , e = b[0]
              , f = _.throttle(function(b) {
                e.scrollTop + e.offsetHeight >= e.scrollHeight - d && a.$apply(function() {
                    a.onScrolledBottom({
                        e: b
                    })
                })
            });
            b.bind("scroll mousewheel", f)
        }
    }).directive("onFeedScrolledBottom", function() {
        return function(b, c, d) {
            var e = $(a)
              , f = $(document)
              , g = function(a) {
                b.tab.selected && e.scrollTop() + e.height() > f.height() - 500 && b.$apply(d.onFeedScrolledBottom)
            }
            ;
            g = _.throttle(g, 250),
            e.scroll(g)
        }
    }).directive("highlightText", ["$interval", function(a) {
        return function(b, c, d) {
            var e = null ;
            b.$watch(d.highlightText, function(b) {
                b != e && (e = b,
                a(function() {
                    var a = $(c);
                    if (b && b.length > 0)
                        for (var d = 0; d < b.length; d++)
                            a.highlight2(b[d], "text-highlight");
                    else
                        a.removeHighlight("text-highlight")
                }, 0, 1))
            })
        }
    }
    ]).directive("cnvClickedOutsideThis", ["$parse", function(a) {
        return {
            restrict: "A",
            link: function(b, c, d) {
                function e(e) {
                    for (var f = e.target, g = !1; null  != f && f != document.documentElement; ) {
                        if (f == c[0] || -1 != f.className.indexOf(d.cnvExceptionSelectorClass)) {
                            g = !0;
                            break
                        }
                        f = f.parentElement
                    }
                    g || b.$apply(a(d.cnvClickedOutsideThis)(b, {
                        event: e
                    }))
                }
                $(document).on("mousedown", e),
                b.$on("$destroy", function(a) {
                    $(document).off("mousedown", e)
                })
            }
        }
    }
    ]).directive("stopEvent", function() {
        return {
            restrict: "A",
            link: function(a, b, c) {
                b.bind(c.stopEvent, function(a) {
                    a.stopPropagation()
                })
            }
        }
    }).directive("cnvAutoSelected", function() {
        return {
            restrict: "A",
            link: function(a, b, c) {
                setTimeout(function() {
                    b[0].select()
                }, 0)
            }
        }
    }).directive("suppressScrollPropagation", function() {
        return {
            restrict: "A",
            link: function(a, b, c) {
                b.mousewheel(function(a, b) {
                    var c = null ;
                    if (c = $(a.target).hasScrollBar() ? $(a.target) : $(a.target).scrollParent(),
                    c.length) {
                        var d = c.scrollTop();
                        c[0].scrollHeight > c[0].clientHeight && (0 == d && b > 0 || d == c[0].scrollHeight - c[0].clientHeight && 0 > b) && (a.stopImmediatePropagation(),
                        a.preventDefault())
                    }
                })
            }
        }
    }),
    function() {
        var a = {};
        forEach("click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste".split(" "), function(b) {
            var c = "bo" + b.charAt(0).toUpperCase() + b.slice(1);
            a[c] = ["$parse", function(a) {
                return {
                    restrict: "A",
                    compile: function(d, e) {
                        var f = a(e[c], null , !0);
                        return function(a, c) {
                            c.on(b, function(b) {
                                f(a, {
                                    $event: b
                                })
                            })
                        }
                    }
                }
            }
            ]
        }),
        b.module("convoApp").directive(a)
    }(),
    b.module("convoApp").filter("interpolate", ["version", function(a) {
        return function(b) {
            return String(b).replace(/\%VERSION\%/gm, a)
        }
    }
    ]).filter("unsafe", ["$sce", function(a) {
        return function(b) {
            return a.trustAsHtml(b)
        }
    }
    ]).filter("htmlToPlaintext", function() {
        return function(a) {
            return String(a).replace(/<(?:.|\n)*?>/gm, "")
        }
    }).filter("limitText", function() {
        return function(a, b) {
            return a && a.length && a.length > b ? a.substr(0, b - 3) + "..." : a
        }
    }).filter("shift", function() {
        return function(a) {
            return a.shift(),
            a
        }
    }).filter("listCount", function() {
        return function(a) {
            for (var b = 0, c = 0, d = a.length; d > c; ++c)
                a[c] && ++b;
            return b
        }
    }).filter("shortHandTitle", function() {
        return function(a) {
            var b = a.trim().split(" ")
              , c = b[0];
            return b.length > 1 && (c += " " + b[b.length - 1].charAt(0)),
            c
        }
    }).filter("concatWithSpace", function() {
        return function(a, b) {
            return a + " " + b
        }
    }).filter("subject", function() {
        return function(a, b) {
            return a > 1 ? a + " " + b + "s" : a + " " + b
        }
    }).filter("removeTags", function() {
        return function(a) {
            var b = document.createElement("div");
            return b.innerHTML = a,
            b.innerText
        }
    }).filter("limitHtmlText", ["utils", function(a) {
        return function(b, c, d) {
            var e = {
                isTruncated: !1,
                htmlStr: b,
                fullText: ""
            };
            if (b && c > 0) {
                var f = document.createElement("div");
                if (f.innerHTML = b,
                e.fullText = f.innerText,
                e.fullText && e.fullText.length > c) {
                    var g = a.truncateHtmlString(b, e.fullText.length - c);
                    e.htmlStr = (g.htmlStr.substring(0, g.idx) + "..." + g.htmlStr.substring(g.idx)).replace(/^((<br>)|(<br \/>)|(<br >)|(<br\/>))*|((<br>)|(<br \/>)|(<br >)(<br\/>))*$/g, "").replace(/^(<br>)*|(<br\/>)*$/g, "").replace(/<p><br><\/p>/g, "").replace(/<(div|em|p|strong)[^>]*>\s*<\/(div|em|p|strong)>/g, ""),
                    e.isTruncated = !0
                }
            }
            return d ? e : e.htmlStr
        }
    }
    ]).filter("iif", function() {
        return function(a, b, c) {
            return a ? b : c || ""
        }
    }).filter("dateAgo", ["datetimeService", function(a) {
        return function(b, c, d, e, f, g, h) {
            return a.makeRelativeDateString(b, c, d, e, f, g, h)
        }
    }
    ]).filter("localize", ["datetimeService", function(a) {
        return function(b, c) {
            return a.localize(b, c)
        }
    }
    ]).filter("dateSeparatorFromCurrentTimeByDayMonthOrYear", ["datetimeService", function(a) {
        return function(b) {
            return a.dateSeparatorFromCurrentTimeByDayMonthOrYear(b)
        }
    }
    ]).filter("getUserName", ["Feed", "Comments", function(a, b) {
        return function(c) {
            var d;
            return d = a.getUserName(c),
            "Unknown" === d && (d = b.getUserName(c)),
            d
        }
    }
    ]).filter("idToName", ["Feed", function(a) {
        return function(b) {
            return b ? a.getNameById(b) : ""
        }
    }
    ]).filter("break", function() {
        return function(a) {
            return a.replace(/\,/g, ", ")
        }
    }).filter("sharingInfoTooltipText", ["Feed", "$filter", function(a, b) {
        return function(c, d) {
            for (var e, f = "", g = d; e = c[g]; g++)
                f += b("limitText")(_.escape(a.getNameById(e.published_to)), 80),
                g !== c.length - 1 && (f += "<br>");
            return f
        }
    }
    ]).filter("getFeedItemLikeInfo", ["Likes", "Feed", "$filter", function(a, b, c) {
        return function(b, d) {
            var e = b.resource_id
              , f = b.resource_id
              , g = b.app_instance_id
              , h = 1
              , i = b.like_info.liked_by || ""
              , j = d || null 
              , k = a.getLikesDetailWithUsersInfo(e, f, g, h);
            k.then(function(a) {
                var b = ""
                  , d = a.data.users
                  , e = 0
                  , f = Object.keys(d).length;
                for (var g in d)
                    if (d.hasOwnProperty(g)) {
                        if (g === i && b.length > 1)
                            continue;if (b += c("limitText")(_.escape(d[g].name), 80) + "<br>",
                        e++,
                        e >= 14) {
                            b += "+ " + Number(f - e) + " more";
                            break
                        }
                    }
                b = b.replace(/<br>\s*$/, ""),
                j(b)
            })
        }
    }
    ]).filter("getCommentLikeInfo", ["Likes", "Feed", "$filter", function(a, b, c) {
        return function(b, d) {
            var e = d || null 
              , f = a.getLikesDetailWithUsersInfo(null , null , null , null , b);
            f.then(function(a) {
                var b = ""
                  , d = a.data;
                for (var f in d)
                    d.hasOwnProperty(f) && (b += c("limitText")(_.escape(d[f].name), 80) + "<br>");
                b = b.replace(/<br>\s*$/, ""),
                e(b)
            })
        }
    }
    ]).filter("getFileIconByType", ["config", function(a) {
        return function(b, c) {
            b = b.toLowerCase();
            var d = "default_v2";
            switch (b) {
            case "docx":
            case "doc":
            case "rtf":
                d = "doc";
                break;
            case "xls":
            case "xlsx":
            case "xlsm":
            case "xlsb":
                d = "xls";
                break;
            case "jpg":
            case "jpeg":
                d = "jpg";
                break;
            case "ppt":
            case "pptx":
                d = "ppt";
                break;
            case "mov":
            case "qt":
            case "m4v":
            case "mp4":
            case "mpeg4":
            case "mpe":
            case "mpeg":
            case "avi":
            case "dat":
            case "mpg":
            case "flv":
            case "mkv":
            case "ogg":
            case "asf":
            case "wmv":
            case "webm":
            case "divx":
            case "3gp":
                d = "video_v2";
                break;
            case "air":
            case "bmp":
            case "gif":
            case "mp3":
            case "pdf":
            case "png":
            case "pps":
            case "psd":
            case "tif":
            case "tga":
            case "txt":
            case "rar":
            case "wav":
            case "wma":
                d = b;
                break;
            default:
                d = "default_v2"
            }
            return c = c || "16",
            a.AWS_FILE_DIR_BASE + "fileIcons/" + d + "_" + c + ".png"
        }
    }
    ]).filter("getNewFileIconByType", [function() {
        return function(a, b, c) {
            var d = "cnv-icons-" + b
              , e = "fileplainlarge"
              , f = "darkgray";
            switch (c && (f = c),
            a = a.toLowerCase()) {
            case "mp4":
                e = "icons_Video";
                break;
            case "mov":
                e = "icons_Video";
                break;
            case "flv":
                e = "icons_Video";
                break;
            default:
                e = "fileplainlarge"
            }
            return d + " " + e + "-" + f
        }
    }
    ]).filter("getSmallFileIconClassByTypeFromAssets", [function() {
        return function(a, b) {
            a = a.toLowerCase();
            var c = "fileplainsmall";
            switch (a) {
            case "docx":
                c = "cnv-small-file-ico docx";
                break;
            case "doc":
                c = "cnv-small-file-ico doc";
                break;
            case "rtf":
                c = "cnv-small-file-ico rtf";
                break;
            case "xls":
                c = "cnv-small-file-ico xls";
                break;
            case "xlsx":
                c = "cnv-small-file-ico xlsx";
                break;
            case "xlsm":
                c = "cnv-small-file-ico xlsm";
                break;
            case "xlsb":
                c = "cnv-small-file-ico xlsb";
                break;
            case "jpg":
                c = "cnv-small-file-ico jpg";
                break;
            case "jpeg":
                c = "cnv-small-file-ico jpeg";
                break;
            case "ppt":
                c = "cnv-small-file-ico ppt";
                break;
            case "pptx":
                c = "cnv-small-file-ico pptx";
                break;
            case "air":
                c = "cnv-small-file-ico air";
                break;
            case "avi":
                c = "cnv-small-file-ico avi";
                break;
            case "bmp":
                c = "cnv-small-file-ico bmp";
                break;
            case "flv":
                c = "cnv-small-file-ico flv";
                break;
            case "gif":
                c = "cnv-small-file-ico gif";
                break;
            case "mp3":
                c = "cnv-small-file-ico mp3";
                break;
            case "mp4":
                c = "cnv-small-file-ico";
                break;
            case "mpeg":
                c = "cnv-small-file-ico mpeg";
                break;
            case "pdf":
                c = "cnv-small-file-ico pdf";
                break;
            case "png":
                c = "cnv-small-file-ico png";
                break;
            case "pps":
                c = "cnv-small-file-ico pps";
                break;
            case "psd":
                c = "cnv-small-file-ico psd";
                break;
            case "tif":
                c = "cnv-small-file-ico tif";
                break;
            case "tga":
                c = "cnv-small-file-ico tga";
                break;
            case "txt":
                c = "cnv-small-file-ico txt";
                break;
            case "rar":
                c = "cnv-small-file-ico rar";
                break;
            case "wav":
                c = "cnv-small-file-ico wav";
                break;
            case "wma":
                c = "cnv-small-file-ico wav";
                break;
            case "mov":
                c = "cnv-small-file-ico mov";
                break;
            case "json":
                c = "cnv-small-file-ico json";
                break;
            default:
                c = b ? "cnv-icons-30 fileplainsmall-" + b : "cnv-icons-30 fileplainsmall-white"
            }
            return c
        }
    }
    ]).filter("getFileNameToShowOnSnippet", ["$filter", function(a) {
        return function(b) {
            var c = a("getFileTitleOnly")(b).substring(0, 30);
            console.log(c);
            var d = a("getFileExtension")(b);
            return c = 30 == c.length ? c + "..." + d : c + "." + d
        }
    }
    ]).filter("getFileTitleOnly", function() {
        return function(a) {
            return a = a.replace(/\\/g, "/"),
            a.substring(a.lastIndexOf("/") + 1, a.lastIndexOf("."))
        }
    }).filter("getFileExtension", [function() {
        return function(a) {
            return a = a.toLowerCase(),
            a.substr(a.lastIndexOf(".") + 1) || a
        }
    }
    ]).filter("getFileExtensionForIcon", [function() {
        return function(a) {
            a = a.toLowerCase();
            var b = a.substr(a.lastIndexOf(".") + 1) || a;
            return b.length > 4 && (b = b.substring(0, 2) + ".."),
            b
        }
    }
    ]).filter("matchedFilesNameCount", function() {
        return function(a, b) {
            if (a.length && b && b.length) {
                var c = []
                  , d = 0
                  , e = !1;
                for (var f in b)
                    c = c.concat(b[f].split("+"));
                for (var g in a) {
                    e = !1;
                    for (var h in c)
                        -1 != a[g].name.toLowerCase().indexOf(c[h]) && (e = !0);
                    e && d++
                }
                return d
            }
            return 0
        }
    }).filter("feedItemFilesLimit", ["$filter", function(a) {
        return function(b) {
            var c = 2;
            return a("limitTo")(b, c)
        }
    }
    ]).filter("getImageResourceLinkUrl", ["AppLinks", function(a) {
        return function(b, c, d, e, f) {
            var g = a.newResourceLink(c, [{
                type: d,
                uid: e,
                title: f
            }, {
                type: "images",
                uid: b
            }], null , f);
            return a.linkToUrl(g, !0)
        }
    }
    ]).filter("getFileResourceLinkUrl", ["AppLinks", function(a) {
        return function(b, d, e, f, g, h, i) {
            if (b === c || d === c || f === c)
                return "";
            var j = "files";
            "IMAGE" == d ? j = "images" : "DOC" === d && (j = "files");
            var k = a.newResourceLink(e, [{
                type: f,
                uid: g,
                title: h
            }, {
                type: j,
                uid: b
            }], null , h, i);
            return a.linkToUrl(k, !0)
        }
    }
    ]).filter("getSnippetImagePath", ["config", "$rootScope", function(a, b) {
        return function(c, d) {
            if (c) {
                var e = a.AWS_FILE_DIR_BASE + b.login_data.account_id + "/snippets/" + d + "/" + c.toString();
                return e
            }
        }
    }
    ]).filter("getNoteThumbnailPath", ["config", "$rootScope", function(a, b) {
        return function(d, e, f, g) {
            if (d.preLocalData)
                return d.preLocalData;
            var h = "";
            d.ver >= 5 ? h = "980x500/" : 4 == d.ver ? h = "855x900/" : 3 == d.ver && (h = "566x600/"),
            f === c && (f = 0);
            var i = "";
            return i = 4 == g ? "link" : "note",
            a.getAwsFileDirBaseForNoteFiles(f) + b.login_data.account_id + "/" + i + e + "/thumbnails/" + h + d.thumbnail_name.toString()
        }
    }
    ]).filter("getCommentAttachmentThumbnailPath", ["config", "$rootScope", function(a, b) {
        return function(d, e, f) {
            var g = "";
            d.ver >= 5 ? g = "980x500/" : 4 == d.ver ? g = "855x900/" : 3 == d.ver && (g = "566x600/");
            var h = "";
            return 4 == d.app_instance_id ? h = "link" : 6 == d.app_instance_id && (h = "note"),
            f === c && (f = 0),
            a.getAwsFileDirBaseForNoteFiles(f) + b.login_data.account_id + "/" + h + e + "/thumbnails/" + g + d.thumbnail_name.toString()
        }
    }
    ]).filter("getCommentAttachmentThumbnailPathDefaultSize", ["config", "$rootScope", function(a, b) {
        return function(d, e, f, g) {
            var h = "566x600/"
              , i = "";
            return 4 == e ? i = "link" : 6 == e && (i = "note"),
            g === c && (g = 0),
            a.getAwsFileDirBaseForNoteFiles(g) + b.login_data.account_id + "/" + i + f + "/thumbnails/" + h + d
        }
    }
    ]).filter("getPreviewImageThumbnailPath", ["config", "$rootScope", function(a, b) {
        return function(c, d, e) {
            var e = e || "566x600"
              , f = a.AWS_FILE_DIR_BASE + b.login_data.account_id + "/note" + d + "/thumbnails/" + e + "/" + c;
            return f
        }
    }
    ]).filter("getVideoPath", ["config", "$rootScope", function(a, b) {
        return function(c, d, e, f, g) {
            var h, i;
            return i = 4 == e ? "link" : "note",
            480 === g && (h = a.AWS_FILE_DIR_BASE + b.login_data.account_id + "/" + i + d + "/videos/" + c + "." + f),
            720 === g && (h = a.AWS_FILE_DIR_BASE + b.login_data.account_id + "/" + i + d + "/videos/1280x720/" + c + "." + f),
            1080 === g && (h = a.AWS_FILE_DIR_BASE + b.login_data.account_id + "/" + i + d + "/videos/1920x1080/" + c + "." + f),
            h
        }
    }
    ]).filter("getVideoPreviewPath", ["config", "$rootScope", function(a, b) {
        return function(c, d, e, f) {
            var g = "note";
            g = 4 == e ? "link" : "note";
            var h = a.AWS_FILE_DIR_BASE + b.login_data.account_id + "/" + g + d + "/" + c + "." + f;
            return h
        }
    }
    ]).filter("getDownloadUrl", ["$rootScope", "utils", function(a, b) {
        return function(c, d, e, f) {
            var g = "";
            return g = 4 == f ? "link" : "note",
            b.getDownloadUrl(a.login_data.account_id + "/" + g + e + "/" + d, c)
        }
    }
    ]).filter("getOriginalImagePath", ["config", "$rootScope", function(a, b) {
        return function(c, d, e) {
            var f = "";
            f = 4 == e ? "link" : "note";
            var g = a.AWS_FILE_DIR_BASE + b.login_data.account_id + "/" + f + d + "/" + c;
            return g
        }
    }
    ]).filter("getFilePreviewPath", ["config", "$rootScope", function(a, b) {
        return function(c, d, e, f) {
            var g = "";
            g = 4 == f ? "link" : "note";
            var h = a.AWS_FILE_DIR_BASE + b.login_data.account_id + "/" + g + e + "/" + c + "/pdf/" + d.substring(0, d.lastIndexOf(".")) + ".pdf";
            return h
        }
    }
    ]).filter("getFaviconIconPath", ["config", function(a) {
        return function(b) {
            var c = a.AWS_FILE_DIR_BASE + "favicon/";
            return b.hasOwnProperty("favicon_converted") && b.hasOwnProperty("original_favicon_url") ? +b.favicon_converted ? c += b.icon : c = b.original_favicon_url || "" : c += b.icon,
            c
        }
    }
    ]).filter("hasFiles", function() {
        return function(a) {
            return a && a.files && a.files.length > 0 ? !0 : !1
        }
    }).filter("hasTags", function() {
        return function(a) {
            return a && a.tags && a.tags.length > 0 ? !0 : !1
        }
    }).filter("getFeedItemFilesCount", function() {
        return function(a) {
            if (a && a.files && a.files.length > 0) {
                var b = a.files.length;
                return 1 == b ? b + " file" : b + " files"
            }
            return ""
        }
    }).filter("getOrigionalOrDefaultFavIcon", function() {
        return function(a) {
            return "default_favicon.png" == a ? "assets/img/feed/" + a : a
        }
    }).filter("getLinkThumbnailPath", ["config", "$rootScope", function(a, b) {
        return function(c, d) {
            var e = c;
            if (3 == d) {
                var f = c.lastIndexOf(".");
                e = c.substring(0, f) + "-thumbnail-170x130" + c.substring(f)
            }
            return a.AWS_FILE_DIR_BASE + b.login_data.account_id + "/links-thumbnails/" + e
        }
    }
    ]).filter("userIdToImgUrl", ["userImgUrlFilter", "Users", function(a, b) {
        return function(c, d, e) {
            var f = b.getUserById(c);
            return f ? a(f.user_id, f.profile_image_type, f.profile_image_version, d, e) : a(null , 0, 0, d, e)
        }
    }
    ]).filter("userIdToImgUrlForFeed", ["userImgUrlFilter", "Feed", "Comments", function(a, b, c) {
        return function(d, e) {
            var f = b.getUser(d);
            return f || (f = c.getUser(d)),
            a(d, f.profile_image_type, f.profile_image_version, e)
        }
    }
    ]).filter("userImgUrl", ["config", "UserProfileImage", function(a, b) {
        return function(c, d, e, f, g) {
            return f || (f = b.PROFILE_IMAGE_SIZE_48x48),
            c && d == b.PROFILE_IMAGE_TYPE_SYSTEM ? (g ? a.AWS_FILE_DIR_BASE_FOR_NO_AUTH : a.AWS_FILE_DIR_BASE) + "user-images/system-user/thumbnails/system-user-thumbnail-" + f + ".png" : c && 0 != d && 0 != e ? d == b.PROFILE_IMAGE_TYPE_CUSTOM ? (g ? a.AWS_FILE_DIR_BASE_FOR_NO_AUTH : a.AWS_FILE_DIR_BASE) + "user-images/" + c + "/thumbnails/" + c + "-thumbnail-" + f + "-" + e + ".jpg" : void 0 : (g ? a.AWS_FILE_DIR_BASE_FOR_NO_AUTH : a.AWS_FILE_DIR_BASE) + "user-images/default-user/thumbnails/default-user-thumbnail-" + f + ".png"
        }
    }
    ]).filter("idToFilterUrl", ["$rootScope", "Feed", "Users", "Comments", "Groups", function(a, b, c, d, e) {
        return function(e, f, g) {
            var h, i, j = "#/v1/" + a.login_data.account_id + "/feed?q=", k = e;
            if ("USER" == f) {
                if (h = "from",
                i = b.getUserName(e),
                "Unknown" === i && (i = d.getUserName(e)),
                g) {
                    var l = c.getUserById(e);
                    if (l)
                        k = l.email;
                    else {
                        var l = b.getUser(e);
                        k = l.email
                    }
                }
            } else
                h = "to",
                i = b.getGroupName(e);
            return j += encodeURIComponent(h + ':"' + k + '"') + "#title=" + encodeURIComponent(i).replace(/'/g, "%27")
        }
    }
    ]).filter("idToFilterUrlForApp", ["accountInfo", "Users", "Groups", function(a, b, c) {
        return function(d, e, f, g) {
            var h, i, j = "#/v1/" + a.getAccountId() + "/feed?q=", k = d;
            if ("USER" == e) {
                h = "from";
                var l = b.getUser(d);
                !g && l && (g = l.getFullName()),
                f && (i = k,
                k = l.get("email"))
            } else {
                h = "to";
                var m = c.getGroup(d);
                !g && m && (g = m.get("title"))
            }
            return j += encodeURIComponent(h + ':"' + k + '"') + "#title=" + encodeURIComponent(g).replace(/'/g, "%27"),
            i && (j += "&filter_value=" + encodeURIComponent(i)),
            j
        }
    }
    ]).filter("idToFilterUrlForFeed", ["Feed", function(a) {
        return function(a, b) {}
    }
    ]).filter("isUserGroupAssessibleForNotesApp", ["notesAppDataProvider", function(a) {
        return function(b) {
            var c = a.getItem(b);
            return c && c.accessible
        }
    }
    ]).filter("idToFilterUrlForNotesApp", ["accountInfo", "notesAppDataProvider", "userInfo", function(a, b, c) {
        return function(d) {
            var e, f = "#/v1/" + a.getAccountId() + "/feed?q=", g = d, h = b.getItem(d);
            return h && (c.isAdminMode() || h.accessible || "USER" === h.type ? (e = "USER" == h.type ? "from" : "to",
            f += encodeURIComponent(e + ':"' + g + '"') + "#title=" + encodeURIComponent(h.label).replace(/'/g, "%27")) : f = "javascript:void(0);"),
            f
        }
    }
    ]).filter("isUserGroupAssessibleForLinksApp", ["linksAppDataProvider", function(a) {
        return function(b) {
            var c = a.getItem(b);
            return c && c.accessible
        }
    }
    ]).filter("idToFilterUrlForLinksApp", ["accountInfo", "linksAppDataProvider", "userInfo", function(a, b, c) {
        return function(d) {
            var e, f = "#/v1/" + a.getAccountId() + "/feed?q=", g = d, h = b.getItem(d);
            return h && (c.isAdminMode() || h.accessible || "USER" === h.type ? (e = "USER" == h.type ? "from" : "to",
            f += encodeURIComponent(e + ':"' + g + '"') + "#title=" + encodeURIComponent(h.label).replace(/'/g, "%27")) : f = "javascript:void(0);"),
            f
        }
    }
    ]).filter("idToNameForLinksApp", ["linksAppDataProvider", function(a) {
        return function(b) {
            return a.getNameById(b)
        }
    }
    ]).filter("idToNameForNotesApp", ["notesAppDataProvider", function(a) {
        return function(b) {
            return a.getNameById(b)
        }
    }
    ]).filter("idToShortNameForNotesApp", ["notesAppDataProvider", function(a) {
        return function(b) {
            return a.getShortNameById(b)
        }
    }
    ]).filter("dataToFilterUrl", ["accountInfo", function(a) {
        return function(b, c, d) {
            var e, f, g = "#/v1/" + a.getAccountId() + "/feed?q=", h = b.id;
            return "USER" == c ? (e = "from",
            f = b.userName,
            d && (h = b.email)) : (e = "to",
            f = b.groupName),
            g += encodeURIComponent(e + ':"' + h + '"') + "#title=" + encodeURIComponent(f)
        }
    }
    ]).filter("getDomainNameFormUrl", [function() {
        return function(a) {
            for (var b = a.indexOf("?"), c = a.substr(0, b > 0 ? b : a.length), d = c.split("/"), e = 0, f = d.length; f > e; e++)
                if (-1 != d[e].indexOf("."))
                    return d[e].toUpperCase();
            return a
        }
    }
    ]).filter("getResourceLinkUrl", ["AppLinks", function(a) {
        return function(b, d, e, f, g, h) {
            if (0 === d.length || d[0].uid === c)
                return "";
            var i = a.newResourceLink(b, d, e, f, null , null , g, h);
            return a.linkToUrl(i, !0)
        }
    }
    ]).filter("getCommentResourceLinkUrl", ["getResourceLinkUrlFilter", "userProvider", function(a, b) {
        return function(c, d, e, f, g, h) {
            var i = b.getUser(e.from_user, b.DATA_FORMAT_SERVICE).name + ': "';
            return i += h ? h : e._comment_title,
            i += '"',
            a(c, d, e.uid, i, f, g)
        }
    }
    ]).filter("getCommentUrl", ["getCommentResourceLinkUrlFilter", function(a) {
        return function(b) {
            return b.resource_link.resource_path ? a(b.app_instance_id, b.resource_link.resource_path.hierarchy, b) : ""
        }
    }
    ]).filter("getCommentAttachmentUrl", ["getCommentResourceLinkUrlFilter", function(a) {
        return function(b, c, d, e) {
            return b.resource_link.resource_path ? a(b.app_instance_id, b.resource_link.resource_path.hierarchy, b, c, d, e) : ""
        }
    }
    ]).filter("getCommentsCountString", function() {
        return function(a) {
            return 1 == a ? a + " Comment" : a + " Comments"
        }
    }).filter("searchGroupUser", function() {
        return function(a, b, c) {
            var d = [];
            if (b && b.length > 0) {
                for (var e = b.replace(new RegExp("([{}()^$&.*?/+|[\\\\]|]|-)","g"), "\\$1"), f = 0; f < a.length; f++) {
                    var g = new RegExp("(([\\s,<>():@.])|^)" + e,"gi");
                    a[f].email ? (a[f].formattedName = a[f].title,
                    a[f].formattedEmail = a[f].email,
                    (a[f].title.match(g) || a[f].email.match(g)) && (d.push(a[f]),
                    a[f].title.match(g) && (a[f].formattedName = a[f].formattedName.replace(new RegExp("(([\\s,<>():@.])|^)(" + e + ")","gi"), "$1<b>$3</b>")),
                    a[f].email.match(g) && (a[f].formattedEmail = a[f].formattedEmail.replace(new RegExp("(([\\s,<>():@.])|^)(" + e + ")","gi"), "$1<b>$3</b>")))) : (a[f].formattedName = a[f].title,
                    a[f].title.match(g) && (d.push(a[f]),
                    a[f].formattedName = a[f].title,
                    a[f].formattedName = a[f].formattedName.replace(new RegExp("(([\\s,<>():@.])|^)(" + e + ")","gi"), "$1<b>$3</b>")))
                }
                d.length > 0 && null  == c && d.sort(function(a, b) {
                    return a.title > b.title ? 1 : a.title < b.title ? -1 : 0
                })
            }
            return c && !b ? a : d
        }
    }).filter("fullLinkRegExp", function() {
        return function(a) {
            return a = a.trim(),
            a.length && -1 != a.search(/(ftp:\/\/|https:\/\/|http:\/\/|www\.)([\w\/\-\_\+\.\?\=\#\&\%\@\,\:\;\~\(\)\*\'\$\!]+)/gi) ? !0 : !1
        }
    }).filter("partialLinkRegExp", function() {
        return function(a) {
            return a = a.trim(),
            a.length && -1 != a.search(/([a-zA-Z0-9]([a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])?\.)+(com|org|net|edu|gov|mil|biz|info|mobi|name|aero|asia|jobs|museum|coop)([\w\/\-\_\+\.\?\=\#\&\%\@\,\:\;\~\(\)\*\'\$\!]*)/gi) ? !0 : !1
        }
    }).filter("orderByRank", ["Groups", function(a) {
        return function(a) {
            var b = [];
            if (a) {
                for (var c = 0; c < a.length; c++)
                    a[c].isPublishable && b.push(a[c]);
                b.sort(function(a, b) {
                    return a.rank < b.rank ? 1 : a.rank > b.rank ? -1 : a.title > b.title ? 1 : a.title < b.title ? -1 : 0
                })
            }
            return b
        }
    }
    ]).filter("sharedToOrderByCurrentUser", ["userInfo", function(a) {
        return function(b) {
            for (var c = a.getUserId(), d = 0; d < b.length; d++)
                if ("USER" === b[d].type && b[d].published_to === c) {
                    var e = b.splice(d, 1);
                    b.splice(0, 0, e[0]);
                    break
                }
            return b
        }
    }
    ]).filter("partialLinkToFullLink", function() {
        return function(a) {
            var b = a;
            return -1 == b.indexOf("http") && -1 == b.indexOf("https") && (b = -1 == b.indexOf("www") ? "http://www." + b : "http://" + b),
            b
        }
    }).filter("hashtagToFilterLink", ["AppLinks", "Filters", "FilterTypes", function(a, b, c) {
        return function(d) {
            var e = {
                url: a.linkToUrl(a.newFilterLink(b.newANDFiltersChain([b.newFilter(c.TAG, d, d)]), "Tags"), !0)
            };
            return e.url
        }
    }
    ]).filter("labelToHashtag", [function() {
        return function(a) {
            return "#" != a.charAt(0) && (a = "#" + a),
            a
        }
    }
    ]).filter("limitToWithEllipsis", [function() {
        return function(a, b, c, d) {
            if (!a)
                return "";
            if (c = parseInt(c, 10),
            !c)
                return a;
            if (a.length <= c)
                return a;
            if (a = a.substr(0, c),
            b) {
                var e = a.lastIndexOf(" ");
                -1 != e && (a = a.substr(0, e))
            }
            return a + (d || " …")
        }
    }
    ]).filter("unescape", [function() {
        return function(a) {
            return a = a.replace(/&apos;/g, "'").replace(/&nbsp;/g, " "),
            _.unescape(a)
        }
    }
    ]).filter("slice", function() {
        return function(a, b, c) {
            return a.slice(b, c)
        }
    }).filter("escapeHtmlXSS", function() {
        return function(a) {
            return _.escape(a).replace(new RegExp("b1%b1_1","gi"), "<b>").replace(new RegExp("b2%b2_2","gi"), "</b>")
        }
    }).filter("getTwitterInvalidHandlesInfo", function() {
        return function(a, b) {
            for (var c = b || null , d = "", e = 0; e < a.length; e++)
                d += a[e] + "<br>";
            d = d.replace(/<br>\s*$/, ""),
            c(d)
        }
    }),
    b.module("convoApp").factory("utils", ["$parse", "config", "bannerService", function(c, d, e) {
        var f = 0
          , g = {
            COLOR_MAP: ["#FF5740", "#FF880D", "#FFCE09", "#2ADD2E", "#59CCF5", "#1C9CF7", "#6853DC", "#FF9500", "#383838", "#8E8E93"],
            SMILEY_MAP: ["smiley-01", "smiley-02", "smiley-03", "smiley-04", "smiley-05", "smiley-06", "smiley-07", "smiley-08", "smiley-09", "smiley-10", "smiley-11", "smiley-12"],
            escapeRegexCharsRegex: new RegExp("([{}()^$&.*?/+|[\\\\]|]|-)","g"),
            downloadingBanner: {
                timeout: null ,
                banner: null 
            },
            escapeRegexChars: function(a) {
                return a.replace(g.escapeRegexCharsRegex, "\\$1")
            },
            getUserGroupSearchRegex: function(a) {
                return new RegExp("(([\\s,<>():@.])|^)(" + g.escapeRegexChars(a) + ")","gi")
            },
            getAppUrlRegex1: function() {
                return new RegExp("^((https?://[a-z]?links.([a-z0-9-.]*)" + g.escapeRegexChars(d.HOST_DOMAIN) + ")|(convo:))","i")
            },
            getAppUrlRegex2: function() {
                return new RegExp("^https?://([a-z0-9-.]+)" + g.escapeRegexChars(d.HOST_DOMAIN, "i"))
            },
            isGroupIdLike: function(a) {
                return a && (0 === a.indexOf("g_") || 0 === a.indexOf("grp-"))
            },
            isUserIdLike: function(a) {
                return a && -1 !== a.search(/^[a-zA-Z0-9\-]+$/)
            },
            getCompanyDefaultLogo: function() {
                return "assets/img/common/convo+icon.jpg"
            },
            generateUniqueId: function() {
                for (var a, b = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789", c = 30, d = "", e = b.length, f = 0; c > f; f += 1)
                    a = Math.random() * e,
                    d += b.charAt(a);
                return d
            },
            generateUniqueIdForAppearin: function() {
                for (var a, b = "abcdefghijklmnopqrstuvwxyz0123456789", c = 16, d = "", e = b.length, f = 0; c > f; f += 1)
                    a = Math.random() * e,
                    d += b.charAt(a);
                return d
            },
            generateUniqueCharId: function() {
                for (var a, b = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ", c = 30, d = "", e = b.length, f = 0; c > f; f += 1)
                    a = Math.random() * e,
                    d += b.charAt(a);
                return d
            },
            generateGuid: function() {
                return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(a) {
                    var b = 16 * Math.random() | 0
                      , c = "x" == a ? b : 3 & b | 8;
                    return c.toString(16)
                })
            },
            nextUid: function() {
                return ++f
            },
            hashKey: function(a, b) {
                var c = a && a.$$hashKey;
                if (c)
                    return "function" == typeof c && (c = a.$$hashKey()),
                    c;
                var d = typeof a;
                return c = "function" == d || "object" == d && null  !== a ? a.$$hashKey = d + ":" + (b || g.nextUid)() : d + ":" + a
            },
            findInObjectArray: function(a, b, c) {
                for (var d = null , e = 0; e < a.length; e++)
                    if (a[e][b] === c) {
                        d = a[e];
                        break
                    }
                return d
            },
            findIndexInObjectArray: function(a, b, c) {
                for (var d = 0; d < a.length; d++)
                    if (a[d][b] === c)
                        return d;
                return -1
            },
            getSignupAppUrl: function() {
                return "https://www.convo.com/signup"
            },
            getCommandSymbol: function() {
                return this.isOsX() ? "⌘" : "ctrl"
            },
            isValidUrl: function(a) {
                return a = a.trim(),
                a ? -1 !== a.search(/^(ftp:\/\/|https:\/\/|http:\/\/|www\.)([\w\/\-\_\+\.\?\=\#\&\%\@\,\:\;\~\(\)\*\'\$\!]+)$/i) || -1 !== a.search(/^([a-zA-Z0-9]([a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])?\.)+(com|org|net|edu|gov|mil|biz|info|mobi|name|aero|asia|jobs|museum|coop)([\w\/\-\_\+\.\?\=\#\&\%\@\,\:\;\~\(\)\*\'\$\!]*)$/i) : !1
            },
            isValidEmail: function(a) {
                return a.match(/^[^@]+@([^.\s@]+\.){1,}[^.\s]+$/)
            },
            partialToFullUrl: function(a) {
                var b = a;
                return -1 == a.indexOf("http") && -1 == a.indexOf("https") && (b = -1 == a.indexOf("www") ? "http://www." + a : "http://" + a),
                b
            },
            getFileFormat: function(a) {
                var b = "File";
                return a = a.toUpperCase(),
                0 == a.indexOf("DOC") || 0 == a.indexOf("DOCX") ? b = "DOC" : 0 == a.indexOf("XLS") || 0 == a.indexOf("XLSX") || 0 == a.indexOf("XLSM") || 0 == a.indexOf("XLSB") ? b = "Excel sheet" : 0 == a.indexOf("PPT") || 0 == a.indexOf("PPTX") ? b = "PPT" : 0 == a.indexOf("PDF") ? b = "PDF" : 0 == a.indexOf("TXT") ? b = "Text file" : 0 == a.indexOf("PS") ? b = "PS" : 0 == a.indexOf("ODP") ? b = "ODP" : 0 == a.indexOf("ODS") ? b = "ODS" : 0 == a.indexOf("DXF") ? b = "DXF" : 0 == a.indexOf("RTF") ? b = "RTF" : 0 == a.indexOf("JPEG") || 0 == a.indexOf("JPG") || 0 == a.indexOf("JFIF") || 0 == a.indexOf("TIF") || 0 == a.indexOf("TIFF") || 0 == a.indexOf("PNG") || 0 == a.indexOf("GIF") || 0 == a.indexOf("BMP") || 0 == a.indexOf("PPM") || 0 == a.indexOf("PGM") || 0 == a.indexOf("PBM") || 0 == a.indexOf("PNM") || 0 == a.indexOf("SVG") || 0 == a.indexOf("PSD") || 0 == a.indexOf("EMF") || 0 == a.indexOf("TGA") ? b = "Image" : (0 == a.indexOf("FLV") || 0 == a.indexOf("MOV") || 0 == a.indexOf("AVI") || 0 == a.indexOf("MPEG") || 0 == a.indexOf("MPG") || 0 == a.indexOf("MP4")) && (b = "Video"),
                b
            },
            copyObject: function(a) {
                return JSON.parse(JSON.stringify(a))
            },
            initials: function(a) {
                var b = a.trim().split(" ");
                return ((b[0] ? b[0].charAt(0) : "") + (b.length > 1 && b[b.length - 1] ? " " + b[b.length - 1].charAt(0) : "")).toUpperCase()
            },
            hashCode: function(a) {
                var b, c = "", d = a.length;
                if (0 == d)
                    return c;
                for (b = 0; d > b; b++)
                    c += a.charCodeAt(b);
                return c
            },
            removeTags: function(a) {
                var b = document.createElement("div");
                return b.innerHTML = a,
                b.innerText
            },
            stringToColor: function(a) {
                try {
                    return g.COLOR_MAP[parseInt(parseInt(+g.hashCode(a.substr(0, 3)).substr(0, 6) - 1) / 999998 * 9 + 1)]
                } catch (b) {
                    return g.COLOR_MAP[0]
                }
            },
            stringToSmiley: function(a) {
                try {
                    return g.SMILEY_MAP[parseInt(parseInt(+g.hashCode(a.substr(0, 3)).substr(0, 6) - 1) / 999998 * 11 + 1)]
                } catch (b) {
                    return g.SMILEY_MAP[0]
                }
            },
            getRandomSmiley: function() {
                return g.SMILEY_MAP[Math.floor(Math.random() * g.SMILEY_MAP.length)]
            },
            htmlToPlaintext: function(a) {
                return String(a).replace(/<[^>]+>/gm, "")
            },
            truncateHtmlString: function(a, b, c) {
                b = b || 1,
                c = c || "";
                var d;
                if ("" == a || 1 > b)
                    ;
                else {
                    d = a.length - 1;
                    for (var e, f = "begin"; ; ) {
                        if (e = a.charAt(d),
                        "<" == e)
                            f = "<";
                        else if (">" == e)
                            f = ">";
                        else if (">" != f && ("<" == f || "begin" == f)) {
                            var g = !0;
                            c.length > 0 && -1 == c.indexOf(a.charAt(d)) && (g = !1),
                            g && (a = a.substring(0, d) + a.substr(d + 1)),
                            b--
                        }
                        if (d--,
                        -1 == d || 0 == b)
                            break
                    }
                }
                var h = {};
                return h.idx = d + 1,
                h.htmlStr = a,
                h
            },
            openInBrowser: function(a) {
                var b = document.createElement("a");
                b.href = a,
                b.target = "_blank",
                document.body.appendChild(b),
                b.click(),
                document.body.removeChild(b)
            },
            download: function(b, c, f) {
                function h() {
                    e.dismissBanner(g.downloadingBanner.banner),
                    g.downloadingBanner.timeout = g.downloadingBanner.banner = null 
                }
                if (d.IS_NATIVE || g.isChrome()) {
                    var i = document.body;
                    for (var j in b) {
                        var k = document.createElement("a");
                        k.href = c ? b[j].path : g.getDownloadUrl(b[j].path, b[j].name),
                        k.download = b[j].name,
                        d.IS_MAC || (k.target = "_blank"),
                        i.appendChild(k),
                        k.click(),
                        i.removeChild(k)
                    }
                } else
                    for (var j in b)
                        a.open(g.getDownloadUrl(b[j].path, b[j].name), "_blank");
                null  != g.downloadingBanner.timeout && null  != g.downloadingBanner.banner && (clearTimeout(g.downloadingBanner.timeout),
                h()),
                f || (g.downloadingBanner.banner = e.showBanner("Downloading...", !0, !1),
                g.downloadingBanner.timeout = setTimeout(h, 2e3))
            },
            getDownloadUrl: function(b, c) {
                return d.IS_NATIVE || g.isChrome() ? d.AWS_FILE_DIR_BASE + b + "?" + $.param({
                    name: c
                }) : a.location.protocol + "//" + a.location.host + "/app/download.php?" + $.param({
                    path: b,
                    name: c
                })
            },
            sizeOf: function(a) {
                var b, c = 0;
                for (b in a)
                    a.hasOwnProperty(b) && c++;
                return c
            },
            generateHash: function(a) {
                var b, c, d, e = 0;
                if (0 == a.length)
                    return e;
                for (b = 0,
                d = a.length; d > b; b++)
                    c = a.charCodeAt(b),
                    e = (e << 5) - e + c,
                    e |= 0;
                return e
            },
            closestInArray: function(a, b) {
                for (var c = b[0], d = Math.abs(a - c), e = 0, f = b.length; f > e; ++e) {
                    var g = Math.abs(a - b[e]);
                    d > g && (d = g,
                    c = b[e])
                }
                return c
            },
            fireEvent: function(a, b) {
                var c;
                if (a.ownerDocument)
                    c = a.ownerDocument;
                else {
                    if (9 != a.nodeType)
                        throw new Error("Invalid node passed to fireEvent: " + a.id);
                    c = a
                }
                if (a.dispatchEvent) {
                    var d = "";
                    switch (b) {
                    case "click":
                    case "mousedown":
                    case "mouseup":
                    case "contextmenu":
                        d = "MouseEvents";
                        break;
                    case "focus":
                    case "change":
                    case "blur":
                    case "select":
                        d = "HTMLEvents";
                        break;
                    default:
                        throw "fireEvent: Couldn't find an event class for event '" + b + "'."
                    }
                    var e = c.createEvent(d)
                      , f = "change" == b ? !1 : !0;
                    e.initEvent(b, f, !0),
                    e.synthetic = !0,
                    a.dispatchEvent(e, !0)
                } else if (a.fireEvent) {
                    var e = c.createEventObject();
                    e.synthetic = !0,
                    a.fireEvent("on" + b, e)
                }
            },
            $watchCollection_withoutCreatingWatch: function(a, d, e) {
                function f(a) {
                    i = a;
                    var c, d, e, f, g;
                    if (!b.isUndefined(i)) {
                        if (b.isObject(i))
                            if (b.isArray(i)) {
                                j !== m && (j = m,
                                o = j.length = 0,
                                k++),
                                c = i.length,
                                o !== c && (k++,
                                j.length = o = c);
                                for (var h = 0; c > h; h++)
                                    g = j[h],
                                    f = i[h],
                                    e = g !== g && f !== f,
                                    e || g === f || (k++,
                                    j[h] = f)
                            } else {
                                j !== n && (j = n = {},
                                o = 0,
                                k++),
                                c = 0;
                                for (d in i)
                                    i.hasOwnProperty(d) && (c++,
                                    f = i[d],
                                    g = j[d],
                                    d in j ? (e = g !== g && f !== f,
                                    e || g === f || (k++,
                                    j[d] = f)) : (o++,
                                    j[d] = f,
                                    k++));
                                if (o > c) {
                                    k++;
                                    for (d in j)
                                        i.hasOwnProperty(d) || (o--,
                                        delete j[d])
                                }
                            }
                        else
                            j !== i && (j = i,
                            k++);
                        return k
                    }
                }
                function g() {
                    e(i)
                }
                function h() {
                    k !== l(a) && g()
                }
                f.$stateful = !0;
                var i, j, k = (e.length > 1,
                0), l = c(d, f), m = [], n = {}, o = 0;
                return h(),
                h
            },
            getBlockNodes: function(a) {
                var b = a[0]
                  , c = a[a.length - 1]
                  , d = [b];
                do {
                    if (b = b.nextSibling,
                    !b)
                        break;
                    d.push(b)
                } while (b !== c);return $(d)
            },
            getLabelShortVersion: function(a) {
                var b = a.trim().split(" ")
                  , c = b[0];
                return b.length > 1 && (c += " " + b[b.length - 1].charAt(0)),
                c
            },
            isIE: function(b) {
                b = b || 999;
                var c;
                return "IE" == a.platform.name ? (c = parseInt(a.platform.version),
                c && b >= c) : !1
            },
            isOpera: function() {
                return !!a.opera || navigator.userAgent.indexOf(" OPR/") >= 0
            },
            isFirefox: function() {
                var a = "undefined" != typeof InstallTrigger;
                return a
            },
            isSafari: function() {
                return Object.prototype.toString.call(a.HTMLElement).indexOf("Constructor") > 0
            },
            isSafari9: function() {
                return g.isSafari() && a.platform.version && 9 === parseInt(a.platform.version)
            },
            isChrome: function() {
                return !!a.chrome && !g.isOpera() && !g.isIE()
            },
            isOsX: function() {
                var b = a.platform;
                return b.os.family && -1 !== b.os.family.toLowerCase().indexOf("os x") ? !0 : !1
            },
            whichOS: function() {
                var b = a.platform;
                if (!b.os.family || -1 === b.os.family.toLowerCase().indexOf("windows"))
                    return "";
                if (b.os.version) {
                    var c = parseFloat(b.os.version);
                    return 8 >= c ? "Windows8OrOlder" : c > 8 ? "Windows81OrNewer" : "Windows8OrOlder"
                }
                return "Windows8OrOlder"
            },
            whichBrowser: function() {
                return g.isIE() && "IE" || g.isOpera() && "OPERA" || g.isFirefox() && "FIREFOX" || g.isSafari() && "SAFARI" || g.isChrome() && "CHROME"
            },
            copyToClipboard: function(b) {
                if (d.IS_NATIVE)
                    nativeCommBridge.saveDataInClipboard(b),
                    e.showBanner("Copied to clipboard", !1, !1);
                else if (g.isIE())
                    a.prompt("Press Ctrl+C (or CMD+C on Mac) to copy the text", b);
                else {
                    var c = !0
                      , f = document.createElement("textarea");
                    f.style.position = "fixed",
                    f.style.top = "1px",
                    f.style.zIndex = "-9999",
                    f.style.opacity = "0",
                    f.value = b,
                    f.setAttribute("readonly", ""),
                    f.setAttribute("id", "someFakeId"),
                    document.body.appendChild(f),
                    f.select();
                    try {
                        c = document.execCommand("copy")
                    } catch (h) {
                        c = !1
                    }
                    document.body.removeChild(f),
                    f = null ,
                    c === !0 ? e.showBanner("Copied to clipboard", !1, !1, null , 1500) : a.prompt("Press Ctrl+C (or CMD+C on Mac) to copy the text", b)
                }
            },
            containsSurrogatePair: function(a) {
                return /[\uD800-\uDFFF]/.test(a)
            },
            formatCheck: function(a, b) {
                var c = document.createElement("VIDEO")
                  , d = 0;
                if ("preview" == a) {
                    if (b.isWebmPreviewAvailable && c.canPlayType("video/webm"))
                        var d = 1;
                    if (b.isMp4PreviewAvailable && c.canPlayType("video/mp4"))
                        var d = 2
                }
                if ("video" == a) {
                    if (b.isWebmAvailable && c.canPlayType("video/webm"))
                        var d = 1;
                    if (b.isMp4Available && c.canPlayType("video/mp4"))
                        var d = 2
                }
                return d
            },
            canPlayVideoType: function(a) {
                var b = document.createElement("VIDEO")
                  , c = {};
                return c.canPlayMp4 = !1,
                c.canPlayWebm = !1,
                c.canPlay720mp4 = !1,
                c.canPlay720webm = !1,
                c.canPlay1080mp4 = !1,
                c.canPlay1080webm = !1,
                c.canPlay480 = !1,
                c.canPlay720 = !1,
                c.canPlay1080 = !1,
                b.canPlayType("video/webm") && (a.isWebmAvailable && (c.canPlayWebm = !0),
                a.is720WebmAvailable && (c.canPlay720webm = !0),
                a.is1080WebmAvailable && (c.canPlay1080webm = !0)),
                b.canPlayType("video/mp4") && (a.isMp4Available && (c.canPlayMp4 = !0),
                a.is720Mp4Available && (c.canPlay720mp4 = !0),
                a.is1080Mp4Available && (c.canPlay1080mp4 = !0)),
                (c.canPlay1080mp4 || c.canPlay1080webm) && (c.canPlay1080 = !0),
                (c.canPlay720mp4 || c.canPlay720webm) && (c.canPlay720 = !0),
                (c.canPlayMp4 || c.canPlayWebm) && (c.canPlay480 = !0),
                c
            },
            getNormalizedTimeString: function(a) {
                return a.replace(" ", "T") + "Z"
            }
        };
        return g
    }
    ]),
    Number.prototype.checkBitAt = function(a) {
        return (this >> a - 1) % 2 != 0
    }
    ,
    Number.prototype.setBitAt = function(a) {
        return this | 1 << a - 1
    }
    ,
    Number.prototype.clearBitAt = function(a) {
        return this & ~(1 << a - 1)
    }
    ,
    Number.prototype.toggleBitAt = function(a) {
        return this.checkBit(a - 1) ? this.clearBit(a - 1) : this.setBit(a - 1)
    }
    ,
    function(a) {
        a.fn.hasScrollBar = function() {
            return this.get(0).scrollHeight > this.outerHeight()
        }
    }(jQuery),
    function() {
        Object.defineProperty(Array.prototype, "prepend", {
            enumerable: !1,
            writable: !1,
            configurable: !1,
            value: function(a) {
                a instanceof Array && a.reverse().forEach(function(a) {
                    this.unshift(a)
                }, this)
            }
        }),
        Object.defineProperty(Array.prototype, "append", {
            enumerable: !1,
            writable: !1,
            configurable: !1,
            value: function(a) {
                a instanceof Array && a.reverse().forEach(function(a) {
                    this.push(a)
                }, this)
            }
        })
    }(),
    b.module("convoApp").directive("cnvVideoPlayer", ["$filter", "videoPlayerSettings", "Note", "$timeout", "utils", "resourcesTabsManager", "config", "mixpanelService", function(b, d, e, f, g, h, i, j) {
        return {
            restrict: "E",
            priority: 0,
            scope: {
                file: "=cnvVideoPlayerFile",
                onFileDeleted: "&cnvVideoPlayerOnFileDeleted",
                playerOptions: "=cnvVideoPlayerOptions"
            },
            templateUrl: "common/videoPlayer/cnvVideoPlayer.tpl.html",
            link: function(b, e, k) {
                function l(a) {
                    va || (a.stopImmediatePropagation(),
                    a.preventDefault())
                }
                function m(a) {
                    a = a || !1;
                    var b = $(ha).innerHeight()
                      , c = $(ha).innerWidth()
                      , d = ha.videoHeight / ha.videoWidth
                      , e = (ha.videoHeight - b,
                    ha.videoWidth - c,
                    b / d);
                    a ? e > c ? (pa.width(c),
                    pa.height(c * d),
                    pa[0].style.top = (b - c * d) / 2 + "px") : (pa.height(b),
                    pa.width(b / d),
                    pa[0].style.left = (c - b / d) / 2 + "px") : (pa.css("height", "auto"),
                    pa.css("width", "auto"),
                    e > c ? (pa[0].setAttribute("width", c),
                    pa[0].setAttribute("height", c * d),
                    pa[0].style.top = (b - c * d) / 2 + "px") : (pa[0].setAttribute("height", b),
                    pa[0].setAttribute("width", b / d),
                    pa[0].style.left = (c - b / d) / 2 + "px"))
                }
                function n() {
                    var a = pa[0].getContext("2d");
                    a.drawImage(ha, 0, 0, $(pa[0]).innerWidth(), $(pa[0]).innerHeight())
                }
                function o() {
                    if (b.videoLoaded) {
                        var a = d.getSeekPosition(b.file.id);
                        if (ha.currentTime - a > 1 || ha.currentTime - a < -1)
                            var c = 0
                              , e = setInterval(function() {
                                c++,
                                ha.currentTime = a,
                                (parseInt(a) - parseInt(ha.currentTime) == 0 || 5 === c) && clearInterval(e)
                            }, 100);
                        b.setMuteState(d.getMuteState())
                    }
                }
                function p(a) {
                    ja.innerHTML = "";
                    for (var b = 0; b < ha.buffered.length; b++) {
                        console.log(ha.buffered.start(b) + "::" + ha.buffered.end(b));
                        var c = document.createElement("DIV");
                        c.setAttribute("class", "seekbarBuffer"),
                        c.style.left = ha.buffered.start(b) / ha.duration * 100 + "%",
                        c.style.width = (ha.buffered.end(b) - ha.buffered.start(b)) / ha.duration * 100 + "%",
                        ja.appendChild(c)
                    }
                }
                function q(a) {
                    setTimeout(function() {
                        sa || b.playVideo(),
                        sa = !1,
                        setTimeout(function() {
                            C()
                        }, 1e3)
                    }, 0)
                }
                function r() {
                    pa.hide()
                }
                function s() {
                    if (!ha.paused && !b.isVideoSwitching) {
                        ha.readyState > ha.HAVE_CURRENT_DATA && (ma.is(":visible") && ha.currentTime > d.getSeekPosition(b.file.id) && (za > 0 || !g.isIE() || !g.isSafari() ? (ma.hide(),
                        za = 0) : za++),
                        pa.is(":visible") && ha.currentTime > d.getSeekPosition(b.file.id) && (ya > 0 || !g.isIE() && g.isSafari() ? (r(),
                        b.setMuteState(d.getMuteState()),
                        ya = 0) : ya++)),
                        b.currentSeekPossition = ha.currentTime,
                        d.updateSeekPosition(b.file.id, ha.currentTime),
                        b.showCurrentTime = v(ha.currentTime);
                        var a = b.$root.$$phase;
                        "$apply" != a && "$digest" != a && b.$digest(),
                        qa || (ia.style.width = ha.currentTime / ha.duration * 100 + "%"),
                        Aa()
                    }
                }
                function t() {
                    ha.paused || ma.show()
                }
                function u() {
                    b.sendMixPanelevent(j.WATCHED_TO_END),
                    sa = !0,
                    ia.style.width = "100%",
                    setTimeout(function() {
                        ia.style.width = "0%",
                        b.currentSeekPossition = 0,
                        d.updateSeekPosition(b.file.id, 0),
                        f(function() {
                            b.videoPlayerIsPaused = !0
                        }, 0),
                        b.isFullScreen || b.cleanUp()
                    }, 100)
                }
                function v(a) {
                    var b, c, d, e = Math.round(a), f = e, g = "";
                    return b = Math.floor(f / 3600),
                    f -= 3600 * b,
                    b > 0 && (g = b + ":"),
                    c = Math.floor(f / 60),
                    f -= 60 * c,
                    g = g + ("0" + c).slice(-2) + ":",
                    d = f,
                    g += ("0" + d).slice(-2)
                }
                function w() {
                    b.videoLoaded = !0,
                    o(),
                    ha.muted = !0,
                    b.isVideoSwitching = !1,
                    ha.paused && ma.hide();
                    var a = b.$root.$$phase;
                    "$apply" != a && "$digest" != a && b.$digest()
                }
                function x() {
                    b.showDuration = v(ha.duration);
                    var a = b.$root.$$phase;
                    "$apply" != a && "$digest" != a && b.$digest()
                }
                function y() {
                    ta = !0
                }
                function z(b) {
                    for (var b = event.toElement || event.relatedTarget; b && b.parentNode && b.parentNode != a; ) {
                        if (b.parentNode == this || b == this)
                            return b.preventDefault && b.preventDefault(),
                            !1;
                        b = b.parentNode
                    }
                    ta = !1,
                    ga()
                }
                function A(c) {
                    for (var c = event.toElement || event.relatedTarget; c && c.parentNode && c.parentNode != a; ) {
                        if (c.parentNode == this || c == this)
                            return c.preventDefault && c.preventDefault(),
                            !1;
                        c = c.parentNode
                    }
                    ua = !1,
                    setTimeout(function() {
                        b.isFullScreen || !ha.paused && !ha.ended || b.cleanUp()
                    }, 50),
                    D()
                }
                function B() {
                    ua = !0,
                    C()
                }
                function C() {
                    var a = e.find(".feedVideoPlayerHeader")[0]
                      , b = e.find(".feedVideoPlayerFooter")[0];
                    a.style.opacity = "1",
                    a.style.transform = "translate(0px,30px)",
                    a.style.msTransform = "translate(0px,30px)",
                    a.style.webkitTransform = "translate(0px,30px)",
                    b.style.opacity = "1",
                    b.style.transform = "translate(0px,-30px)",
                    b.style.msTransform = "translate(0px,-30px)",
                    b.style.webkitTransform = "translate(0px,-30px)",
                    e.find(".closeFullScreen").show(),
                    ga()
                }
                function D() {
                    if (b.videoLoaded && !b.videoPlayerIsPaused && !b.dropdownMenuState && !ta && !e.find(".volumeBarHolder").is(":visible") && !e.find(".hdPannel").is(":visible")) {
                        var a = e.find(".feedVideoPlayerHeader")[0]
                          , c = e.find(".feedVideoPlayerFooter")[0];
                        a.style.opacity = "0",
                        a.style.transform = "translate(0px,0px)",
                        a.style.msTransform = "translate(0px,0px)",
                        a.style.webkitTransform = "translate(0px,0px)",
                        c.style.opacity = "0",
                        c.style.transform = "translate(0px,0px)",
                        c.style.msTransform = "translate(0px,0px)",
                        c.style.webkitTransform = "translate(0px,0px)",
                        e.find(".closeFullwebkitTransformScreen").hide()
                    }
                }
                function E() {
                    var a = e.find(".headerClose")[0]
                      , b = e.find(".pauseBtn")[0]
                      , c = e.find(".seekbarHolder")[0]
                      , d = e.find(".volume")[0]
                      , f = e.find(".resize")[0]
                      , g = (e.find(".volumeBarBase")[0],
                    e.find(".volumeBar")[0])
                      , h = e.find(".feedVideoPlayerBody")[0]
                      , i = e.find(".closeFullScreen")[0]
                      , j = e.find(".hdplay")[0];
                    a.addEventListener("click", Y, !1),
                    b.addEventListener("click", G, !1),
                    c.addEventListener("mouseover", R, !1),
                    c.addEventListener("mouseout", S, !1),
                    c.addEventListener("mousedown", T, !1),
                    c.addEventListener("mousemove", U, !1),
                    g.addEventListener("mousedown", O, !1),
                    g.addEventListener("mousemove", P, !1),
                    document.addEventListener("mouseup", X, !1),
                    d.addEventListener("click", Z, !1),
                    d.addEventListener("mouseover", J, !1),
                    d.addEventListener("mouseout", K, !1),
                    j.addEventListener("click", L, !1),
                    f.addEventListener("click", aa, !1),
                    i.addEventListener("click", aa, !1),
                    h.addEventListener("click", G, !1),
                    ka.addEventListener("keyup", I, !1),
                    la.addEventListener("keyup", I, !1)
                }
                function F() {
                    var a = e.find(".headerClose")[0]
                      , b = e.find(".pauseBtn")[0]
                      , c = e.find(".seekbarHolder")[0]
                      , d = e.find(".volume")[0]
                      , f = e.find(".resize")[0]
                      , g = (e.find(".volumeBarBase")[0],
                    e.find(".volumeBar")[0])
                      , h = e.find(".feedVideoPlayerBody")[0]
                      , i = e.find(".closeFullScreen")[0]
                      , j = e.find(".hdplay")[0];
                    a.removeEventListener("click", Y, !1),
                    b.removeEventListener("click", G, !1),
                    c.removeEventListener("mouseover", R, !1),
                    c.removeEventListener("mouseout", S, !1),
                    c.removeEventListener("mousedown", T, !1),
                    c.removeEventListener("mousemove", U, !1),
                    g.removeEventListener("mousedown", O, !1),
                    g.removeEventListener("mousemove", P, !1),
                    document.removeEventListener("mouseup", X, !1),
                    d.removeEventListener("click", Z, !1),
                    d.removeEventListener("mouseover", J, !1),
                    d.removeEventListener("mouseout", K, !1),
                    j.removeEventListener("click", L, !1),
                    f.removeEventListener("click", aa, !1),
                    i.removeEventListener("click", aa, !1),
                    h.removeEventListener("mousedown", G, !1),
                    ka.removeEventListener("keyup", I, !0),
                    la.removeEventListener("keyup", I, !0)
                }
                function G() {
                    var a = e.find(".hdPannel");
                    a.is(":visible") || b.dropdownMenuState || (ha.paused ? (b.sendMixPanelevent(j.CLICKED_PLAY),
                    b.playVideo()) : (b.sendMixPanelevent(j.CLICKED_PAUSE),
                    b.pauseVideo()))
                }
                function H(a) {
                    key = a.which || a.keyCode,
                    32 == key && (G(),
                    a.preventDefault())
                }
                function I(a) {
                    Ba(a)
                }
                function J() {
                    var a = e.find(".volumeBarHolder");
                    a.addClass("show")
                }
                function K() {
                    var a = e.find(".volumeBarHolder");
                    a.removeClass("show")
                }
                function L() {
                    if (b.canPlayVideoType.canPlay1080 || b.canPlayVideoType.canPlay720) {
                        var a = e.find(".hdPannel");
                        a.is(":visible") || (a.addClass("show"),
                        setTimeout(function() {
                            document.addEventListener("click", M)
                        }, 0))
                    }
                }
                function M(a) {
                    0 === $(a.target).parents(".hdPannel").length && N()
                }
                function N() {
                    var a = e.find(".hdPannel");
                    a.removeClass("show"),
                    document.removeEventListener("click", M),
                    ga(),
                    b.cleanUp()
                }
                function O(a) {
                    ra = !0,
                    $.proxy(Q, this, a)()
                }
                function P(a) {
                    ra && $.proxy(Q, this, a)()
                }
                function Q(a) {
                    var c = $(this)
                      , d = c.find(".volumeBarBase")
                      , e = c.find(".volumeBarTop")
                      , f = a.pageY - d.offset().top;
                    f > 52 && (f = 52),
                    0 > f && (f = 0),
                    e[0].style.top = f + "px",
                    b.setVolume(Math.abs(f - 52) / 52),
                    b.setMuteState(!1)
                }
                function R() {
                    $(ia).addClass("seekbarCurrentHover")
                }
                function S() {
                    $(ia).removeClass("seekbarCurrentHover")
                }
                function T(a) {
                    pa.is(":hidden") && (m(),
                    n()),
                    $.proxy(W, this, a)(),
                    qa = !0,
                    sa = !0,
                    wa = !0,
                    ha.pause()
                }
                function U(a) {
                    qa && (sa = !0,
                    wa = !0,
                    ha.pause(),
                    $.proxy(W, this, a)())
                }
                function V() {
                    ha.play(),
                    wa = !1
                }
                function W(a) {
                    var c = $(this)
                      , e = a.pageX - c.offset().left
                      , f = e / c.outerWidth() * 100
                      , g = f * ha.duration / 100;
                    ia.style.width = f + "%",
                    ha.currentTime = g,
                    d.updateSeekPosition(b.file.id, ha.currentTime),
                    b.showCurrentTime = v(ha.currentTime);
                    for (var h = b.$root.$$phase, i = !1, j = 0; j < ha.buffered.length; j++)
                        g > ha.buffered.start(j) && g < ha.buffered.end(j) && (i = !0);
                    i || ma.show(),
                    Ca(),
                    "$apply" != h && "$digest" != h && b.$digest()
                }
                function X(a) {
                    qa = !1,
                    ra = !1
                }
                function Y() {
                    b.pauseVideo(!1, !0)
                }
                function Z() {
                    0 == ha.volume ? b.ApplyVolume(.2) : b.setMuteState(!ha.muted)
                }
                function aa(a, c) {
                    if (null  == c)
                        b.isFullScreen = !b.isFullScreen;
                    else {
                        if (b.isFullScreen === c)
                            return;
                        b.isFullScreen = c
                    }
                    b.isFullScreen ? (xa = e.height(),
                    i.IS_NATIVE && setTimeout(fa, 500)) : i.IS_NATIVE && setTimeout(da, 250),
                    b.$emit("NotesApp:FullScreen", {
                        isFullScreen: b.isFullScreen,
                        isVideo: !0,
                        id: b.file.id
                    })
                }
                function ba() {
                    b.isFullScreen = !1,
                    ha.paused && (ua = !1,
                    b.cleanUp());
                    var a = 0
                      , c = setInterval(function() {
                        a++,
                        (e.height() === xa || a > 30) && (setTimeout(function() {
                            da()
                        }, 100),
                        clearInterval(c))
                    }, 250)
                }
                function ca() {
                    va = !1
                }
                function da() {
                    var a = d.getQuality(b.file.id);
                    a || (ua = !0,
                    b.canPlayVideoType.canPlay1080 && "feed" != b.playerOptions.location ? b.changeQuality(1080, !0) : b.canPlayVideoType.canPlay720 ? b.changeQuality(720, !0) : b.canPlayVideoType.canPlay480 && b.changeQuality(480, !0)),
                    pa.is(":visible") && m(!0)
                }
                function ea() {
                    if (b.isFullScreen)
                        var c = 0
                          , d = setInterval(function() {
                            c++,
                            (a.screen.height === $("body").height() || c > 20) && (fa(),
                            clearInterval(d))
                        }, 250)
                }
                function fa() {
                    var a = d.getQuality(b.file.id);
                    a || (b.canPlayVideoType.canPlay1080 ? b.changeQuality(1080, !0) : b.canPlayVideoType.canPlay720 ? b.changeQuality(720, !0) : b.canPlayVideoType.canPlay480 && b.changeQuality(480, !0)),
                    pa.is(":visible") && m(!0)
                }
                var ga, ha = e.find("video")[0], ia = (e.find(".feedVideoPlayerControls")[0],
                e.find(".seekbarCurrent")[0]), ja = e.find(".seekbarBufferHolder")[0], ka = e.find(".activeElem")[0], la = e.find(".holderDiv")[0], ma = e.find(".cnv-spinner"), na = e.find(".feedVideoPlayerHeader")[0], oa = e.find(".feedVideoPlayerFooter")[0], pa = e.find(".videoPreview"), qa = (e.find(".hd_icon"),
                !1), ra = !1, sa = !1, ta = !1, ua = !1, va = !1, wa = !1, xa = 0;
                b.isFullScreen = !1,
                b.isVideoSwitching = !1,
                b.videoPlayerIsPaused = !0,
                ma.show(),
                pa[0].style.height = "100%",
                pa[0].style.width = "100%",
                pa.show(),
                la.addEventListener("mousedown", l, !0),
                la.addEventListener("click", l, !0),
                b.setVideoSource = function() {
                    var a = e.find("source")[0]
                      , c = b.videoURL.split(".")
                      , d = c.pop();
                    "mp4" == d ? a.setAttribute("type", "video/mp4") : "webm" == d && a.setAttribute("type", "video/webm"),
                    a.setAttribute("src", b.videoURL),
                    ha.load(),
                    b.videoSourceSet = !0
                }
                ,
                b.changeQuality = function(a, c) {
                    if (a !== b.resolutionPlaying) {
                        var e = !1;
                        (480 === a || 720 === a || 1080 === a) && (e = ha.paused ? !0 : !1,
                        b.pauseVideo(!1, !1, !0),
                        b.videoURL = b.getVideoURL(a),
                        b.resolutionPlaying = a,
                        c || (d.setQuality(b.file.id, a),
                        480 === a ? b.sendMixPanelevent(j.WATCHED_480) : 720 === a ? b.sendMixPanelevent(j.WATCHED_720) : 1080 === a && b.sendMixPanelevent(j.WATCHED_1080)),
                        !b.isVideoSwitching && b.videoLoaded && (b.isVideoSwitching = !0,
                        ma.is(":hidden") && (m(),
                        n(),
                        s(),
                        ma.show()),
                        pa.show()),
                        b.isVideoSwitching = !0,
                        b.videoLoaded = !1,
                        e ? b.setVideoSource() : setTimeout(function() {
                            b.videoSourceSet = !1,
                            b.playVideo()
                        }, 0),
                        setTimeout(function() {
                            N()
                        }, 250))
                    }
                }
                ,
                b.removeVideoSource = function() {
                    var a = e.find("source")[0];
                    a.setAttribute("src", ""),
                    ha.load()
                }
                ,
                b.playVideo = function() {
                    va = !0,
                    b.broadcastPlaying(),
                    b.videoSourceSet === !1 && b.setVideoSource(),
                    o(),
                    ha.play(),
                    f(function() {
                        b.videoPlayerIsPaused = !1
                    }, 0),
                    ka.focus(),
                    ga(),
                    ua = !0
                }
                ,
                b.pauseVideo = function(a, c, d) {
                    c = c || !1,
                    ha.paused || (sa = !0),
                    ha.pause(),
                    d || ma.hide(),
                    f(function() {
                        b.videoPlayerIsPaused = !0
                    }, 0),
                    c && b.isFullScreen || b.cleanUp(a, c)
                }
                ,
                b.setMuteState = function(a) {
                    ha.muted = a,
                    d.setMuteState(a),
                    1 == a ? e.find(".volumeBarTop")[0].style.top = "52px" : b.ApplyVolume(d.getCurrentVolume()),
                    b.isMuted = a;
                    var c = b.$root.$$phase;
                    "$apply" != c && "$digest" != c && b.$digest()
                }
                ,
                b.setVolume = function(a) {
                    ha.volume = parseFloat(a.toString().slice(0, 3)),
                    d.setCurrentVolume(ha.volume),
                    b.videoVolume = ha.volume
                }
                ,
                b.ApplyVolume = function(a) {
                    b.setVolume(a),
                    yPos = Math.abs(52 - 52 * a);
                    var c = e.find(".volumeBarTop")[0];
                    c.style.top = yPos + "px"
                }
                ,
                ha.addEventListener("ended", u),
                ha.addEventListener("progress", p),
                ha.addEventListener("timeupdate", s),
                ha.addEventListener("loadedmetadata", x),
                ha.addEventListener("loadeddata", w),
                ha.addEventListener("pause", q);
                var ya = 0
                  , za = 0
                  , Aa = _.debounce(t, 4e3);
                la.addEventListener("mousemove", B, !1),
                la.addEventListener("mouseover", B, !1),
                la.addEventListener("mouseout", A, !1),
                na.addEventListener("mouseover", y, !1),
                oa.addEventListener("mouseover", y, !1),
                na.addEventListener("mouseout", z, !1),
                oa.addEventListener("mouseout", z, !1),
                ga = _.debounce(D, 2e3),
                C(),
                E();
                var Ba = _.debounce(H, 50)
                  , Ca = _.debounce(V, 500);
                b.cleanUp = function(a, c) {
                    return va ? (c = c || !1,
                    void ((c || !(wa || ua || b.dropdownMenuState || !ha.paused && !ha.ended || b.isFullScreen || e.find(".hdPannel").is(":visible"))) && b.$emit("VideoPlayback:cleanUp", {
                        id: b.file.id,
                        withoutAnomation: a,
                        force: c
                    }))) : !1
                }
                ,
                document.fullscreenEnabled !== c ? document.addEventListener("fullscreenchange", function() {
                    null  === document.fullscreenElement ? ba() : ea()
                }, !1) : document.mozFullScreenEnabled !== c ? document.addEventListener("mozfullscreenchange", function() {
                    null  === document.mozFullScreenElement ? ba() : ea()
                }, !1) : document.webkitFullscreenEnabled !== c ? document.addEventListener("webkitfullscreenchange", function() {
                    null  === document.webkitFullscreenElement ? ba() : ea()
                }, !1) : document.msFullscreenEnabled !== c && document.addEventListener("MSFullscreenChange", function() {
                    null  === document.msFullscreenElement ? ba() : ea()
                }, !1),
                b.$on("$locationChangeStart", function(a) {
                    b.isFullScreen && aa(null , !1)
                }),
                b.$on("videoPlayback:MinimizeVideoIfFullScreen", function() {
                    b.isFullScreen && aa(null , !1)
                }),
                b.$on("$destroy", function() {
                    b.isFullScreen && aa(null , !1),
                    b.pauseVideo(!0),
                    F(),
                    la.removeEventListener("mousedown", l, !0),
                    la.removeEventListener("click", l, !0),
                    na.removeEventListener("mouseover", y, !1),
                    oa.removeEventListener("mouseover", y, !1),
                    na.removeEventListener("mouseout", z, !1),
                    oa.removeEventListener("mouseout", z, !1),
                    la.removeEventListener("mousemove", C, !1),
                    la.removeEventListener("mouseout", D, !1),
                    ha.removeEventListener("ended", u),
                    ha.removeEventListener("progress", p),
                    ha.removeEventListener("timeupdate", s),
                    ha.removeEventListener("loadedmetadata", x),
                    ha.removeEventListener("loadeddata", w),
                    ha.removeEventListener("pause", q)
                }),
                $(la).on("playerCollapsed", ca),
                b.$on("cnvDropdownToggled", function(a, c) {
                    b.dropdownMenuState = c.state,
                    b.dropdownMenuState || (ga(),
                    ha.paused && b.cleanUp())
                }),
                h.on("homeTabSelected", function() {
                    ha.paused && setTimeout(function() {
                        b.cleanUp(!0)
                    }, 4e3)
                }),
                document.fullscreenEnabled !== c ? document.addEventListener("fullscreenchange", function() {
                    null  === document.fullscreenElement ? ba() : ea()
                }, !1) : document.mozFullScreenEnabled !== c ? document.addEventListener("mozfullscreenchange", function() {
                    null  === document.mozFullScreenElement ? ba() : ea()
                }, !1) : document.webkitFullscreenEnabled !== c ? document.addEventListener("webkitfullscreenchange", function() {
                    null  === document.webkitFullscreenElement ? ba() : ea()
                }, !1) : document.msFullscreenEnabled !== c && document.addEventListener("MSFullscreenChange", function() {
                    null  === document.msFullscreenElement ? ba() : ea()
                }, !1)
            },
            controller: ["$scope", "$rootScope", "accountInfo", "utils", "bannerService", function(c, e, f, g, h) {
                function k() {
                    c.dropdownCtrl = {
                        align: "right"
                    },
                    c.dropdownCtrl.type = "video_player",
                    c.dropdownCtrl.options = [],
                    c.dropdownCtrl.options.push({
                        label: c.processedName,
                        callback: function() {
                            console.log("file name clicked")
                        },
                        isNotHoverable: !0
                    });
                    var b = +c.file.width && +c.file.height ? c.file.width + "x" + c.file.height : "";
                    c.dropdownCtrl.options.push({
                        label: b + (b ? ", " : "") + parseInt(c.file.size / 1024) + "KB",
                        callback: function() {
                            console.log("file size clicked")
                        },
                        "class": "subtext",
                        isNotHoverable: !0
                    }),
                    c.dropdownCtrl.options.push({
                        isDivider: !0
                    }),
                    c.dropdownCtrl.options.push({
                        label: "Open in gallery",
                        icon: "cnv-icons-20 Icon1_expand-01-white",
                        callback: function() {
                            a.location = c.playerOptions.resourceLinkUrl
                        }
                    }),
                    c.dropdownCtrl.options.push({
                        label: "Copy link",
                        icon: "cnv-icons-20 linkhorizontal-white",
                        callback: function() {
                            g.copyToClipboard(i.CONVO_LINKS_BASE_URL + c.playerOptions.resourceLinkUrl.slice(1))
                        }
                    }),
                    c.dropdownCtrl.options.push({
                        label: "Download",
                        icon: "cnv-icons-20 Icon1__Download-white",
                        callback: function() {
                            c.sendMixPanelevent(j.DOWNLOAD_VIDEOS),
                            g.download([{
                                path: f.getAccountId() + "/note" + c.file.noteId + "/" + c.file.original_name.toString(),
                                name: c.file.name
                            }])
                        }
                    }),
                    c.dropdownCtrl.options.push({
                        isDivider: !0
                    }),
                    c.dropdownCtrl.options.push({
                        label: "Delete",
                        icon: "cnv-icons-20 icons2_Trash-white",
                        callback: function() {
                            c.pauseVideo(!0, !0),
                            "function" == typeof c.onFileDeleted && c.onFileDeleted()
                        }
                    }),
                    c.dropdownCtrl.alwaysUpwordsDirection = !0
                }
                c.currentSeekPossition = 0,
                c.videoSourceSet = !1,
                c.showDuration = "0:00",
                c.showCurrentTime = "0:00",
                c.isMuted = !1,
                c.videoLoaded = !1,
                c.processedName = "",
                c.dropdownMenuState = !1,
                c.videoURL = !1,
                c.videoURL = !1;
                var l = !1;
                c.isThumbnailAvailable = 32 & c.file.available_previews,
                c.isMp4PreviewAvailable = 64 & c.file.available_previews,
                c.isWebmPreviewAvailable = 128 & c.file.available_previews,
                c.isMp4Available = 256 & c.file.available_previews,
                c.isWebmAvailable = 512 & c.file.available_previews,
                c.is720Mp4Available = 1024 & c.file.available_previews,
                c.is720WebmAvailable = 2048 & c.file.available_previews,
                c.is1080Mp4Available = 4096 & c.file.available_previews,
                c.is1080WebmAvailable = 8192 & c.file.available_previews,
                c.resolutionPlaying = 0,
                c.file.name.length > 30 ? c.processedName = c.file.name.substr(0, 30) + "..." : c.processedName = c.file.name;
                var m = c.file.original_name.split(".");
                m.pop(),
                m = m.join("."),
                c.playerOptions.showControlsMenu && (c.dropdownCtrl = {},
                k());
                var n = {};
                n.isMp4PreviewAvailable = c.isMp4PreviewAvailable,
                n.isWebmPreviewAvailable = c.isWebmPreviewAvailable,
                n.isMp4Available = c.isMp4Available,
                n.isWebmAvailable = c.isWebmAvailable,
                n.is720Mp4Available = c.is720Mp4Available,
                n.is720WebmAvailable = c.is720WebmAvailable,
                n.is1080Mp4Available = c.is1080Mp4Available,
                n.is1080WebmAvailable = c.is1080WebmAvailable,
                c.canPlayVideoType = g.canPlayVideoType(n),
                c.getVideoURL = function(a) {
                    var d;
                    return 480 === a && (c.canPlayVideoType.canPlayMp4 ? d = b("getVideoPath")(m, c.file.noteId, c.file.appInstanceId, "mp4", 480) : c.canPlayVideoType.canPlayWebm && (d = b("getVideoPath")(m, c.file.noteId, c.file.appInstanceId, "webm", 480))),
                    720 === a && (c.canPlayVideoType.canPlay720mp4 ? d = b("getVideoPath")(m, c.file.noteId, c.file.appInstanceId, "mp4", 720) : c.canPlayVideoType.canPlay720webm && (d = b("getVideoPath")(m, c.file.noteId, c.file.appInstanceId, "webm", 720))),
                    1080 === a && (c.canPlayVideoType.canPlay1080mp4 ? d = b("getVideoPath")(m, c.file.noteId, c.file.appInstanceId, "mp4", 1080) : c.canPlayVideoType.canPlay1080webm && (d = b("getVideoPath")(m, c.file.noteId, c.file.appInstanceId, "webm", 1080))),
                    d
                }
                ,
                l = d.getQuality(c.file.id),
                l ? (c.videoURL = c.getVideoURL(l),
                c.resolutionPlaying = l) : c.canPlayVideoType.canPlay1080 && "feed" != c.playerOptions.location ? (c.videoURL = c.getVideoURL(1080),
                c.resolutionPlaying = 1080) : c.canPlayVideoType.canPlay720 ? (c.videoURL = c.getVideoURL(720),
                c.resolutionPlaying = 720) : c.canPlayVideoType.canPlay480 && (c.videoURL = c.getVideoURL(480),
                c.resolutionPlaying = 480),
                c.broadcastPlaying = function() {
                    var a = {
                        id: c.file.id
                    };
                    c.$emit("VideoPlayback:Playing", a)
                }
                ,
                c.getFileResourceLinkUrl = function() {
                    return b("getFileResourceLinkUrl")(c.file.id, c.file.file_format, c.feedItemData.app_instance_id, c.feedItemData.resource_type, c.file.noteId, c.file.name)
                }
                ,
                c.sendMixPanelevent = function(a) {
                    j.trackEvent(a, {
                        Source: c.playerOptions.source
                    })
                }
                ,
                c.$on("VideoPlayback:stopBuffering", function(a, b) {
                    b.id != c.file.id && c.pauseVideo(!1)
                }),
                c.$on("VideoPlayback:playVideo", function(a, b) {
                    b.id === c.file.id && (c.sendMixPanelevent(j.CLICKED_PLAY),
                    c.playVideo())
                }),
                c.$on("$locationChangeStart", function(a, b) {
                    c.pauseVideo(!0)
                })
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvVideoThumbnail", ["$filter", "appStateInfo", function(a, b) {
        return {
            restrict: "E",
            priority: 0,
            replace: !0,
            scope: {
                origionalFile: "=cnvVideoThumbnailFile",
                lazyLoadId: "@cnvVideoThumbnailLazyLoadId",
                lazyLoad: "=cnvVideoThumbnailLazyLoad",
                dataFormat: "@cnvVideoThumbnailDataFormat",
                scrollingHolder: "=cnvVideoThumbnailScrollingHolder",
                showVideoPreview: "@cnvVideoThumbnailShowPreview",
                resourceURL: "@cnvVideoResourceurl"
            },
            templateUrl: "common/videoThumbnail/cnvVideoThumbnail.tpl.html",
            link: function(a, c, d) {
                function e() {
                    a.isThumbnailAvailable || (j.style.display = "none",
                    k.style.display = "block"),
                    l.style.display = "none",
                    i.style.display = "block",
                    a.isVideoPreviewLoaded = !0
                }
                function f(b) {
                    "FEED" == a.dataFormat && a.videoURL && (a.emitVideoId(),
                    b.stopImmediatePropagation(),
                    b.preventDefault())
                }
                function g() {
                    1 == a.isThumbnailInViewY && 1 == a.isThumbnailInViewX && 1 == a.isAppFocused ? a.onItemScrolledIntoView() : a.onItemScrolledOutOfView()
                }
                var h = c.find("source")
                  , i = c.find("video")[0]
                  , j = c.find("i")[0]
                  , k = c.find(".videoHoverIcon")[0]
                  , l = c.find("img")[0];
                a.insertPreviewInDOM = function() {
                    a.isThumbnailAvailable && (a.videoURL || "CHAT" == a.dataFormat) && (j.style.display = "none",
                    l.style.display = "inline-block",
                    k.style.display = "block"),
                    "true" == a.showVideoPreview && a.videoPreviewURL && (a.videoURL || "CHAT" == a.dataFormat) && (1 == a.canPlayPreviewType ? h[0].setAttribute("type", "video/webm") : 2 == a.canPlayPreviewType && h[0].setAttribute("type", "video/mp4"),
                    h[0].setAttribute("src", a.videoPreviewURL),
                    a.isVideoPreviewInsertedInDOM = !0,
                    i.load(),
                    console.info("Video Source Added :: " + a.file.original_name))
                }
                ,
                i.addEventListener("loadeddata", e),
                a.pausePreview = function() {
                    i.paused === !1 && a.isVideoPreviewInsertedInDOM && (i.pause(),
                    console.info("Pausing Video :: " + a.file.original_name))
                }
                ,
                a.playPreview = function() {
                    i.paused === !0 && a.isVideoPreviewInsertedInDOM && (i.play(),
                    console.info("Playing Video :: " + a.file.original_name))
                }
                ,
                c[0].addEventListener("click", $.proxy(f, c)),
                a.onItemScrolledOutOfView = function() {
                    a.pausePreview()
                }
                ,
                a.onItemScrolledIntoView = function() {
                    a.isVideoPreviewInsertedInDOM === !1 ? a.insertPreviewInDOM() : a.playPreview()
                }
                ,
                a.lazyLoad ? (a.$on("cnvNoteGallery:reloadThumbnailsHorizontal", function(b, c) {
                    var d = a.isThumbnailInViewX;
                    c.hasOwnProperty(a.file.id) ? (a.isThumbnailInViewX = !0,
                    console.log("setting isThumbnailInViewX to true")) : (a.isThumbnailInViewX = !1,
                    console.log("setting isThumbnailInViewX to false")),
                    a.isThumbnailInViewX != d && g()
                }),
                a.$on("cnvNoteGallery:unloadThumbnails", function(b, c) {
                    var d = a.isThumbnailInViewY;
                    c.hasOwnProperty(a.lazyLoadId) || (a.isThumbnailInViewY = !1,
                    console.log("setting isThumbnailInViewY to false")),
                    a.isThumbnailInViewY != d && g()
                }),
                a.$on("cnvNoteGallery:reloadThumbnails", function(b, c) {
                    var d = a.isThumbnailInViewY;
                    c.hasOwnProperty(a.lazyLoadId) && (a.isThumbnailInViewY = !0,
                    console.log("setting isThumbnailInViewY to true")),
                    a.isThumbnailInViewY != d && g()
                })) : (a.isThumbnailInViewY = !0,
                a.isThumbnailInViewX = !0,
                g()),
                a.$on("$destroy", function() {
                    c[0].removeEventListener("click", $.proxy(f, c))
                }),
                b.on("appFocus", function() {
                    a.isAppFocused = !0,
                    g()
                }),
                b.on("appBlur", function() {
                    a.isAppFocused = !1,
                    g()
                })
            },
            controller: ["$scope", "utils", function(c, d) {
                function e() {
                    var b = {};
                    b.iconStyle = {
                        position: "absolute",
                        top: "50%",
                        margin: "-32px -32px",
                        left: "50%"
                    },
                    "FEED" === c.dataFormat ? (b.available_previews = c.origionalFile.available_previews,
                    b.name = c.origionalFile.name,
                    b.preview_name = c.origionalFile.preview_name,
                    b.noteId = c.origionalFile.noteId,
                    b.original_name = c.origionalFile.original_name,
                    b.id = c.origionalFile.id,
                    b.appInstanceId = c.origionalFile.app_instance_id,
                    b.thumbWidth = c.origionalFile.thumbWidth || 250,
                    b.thumbHeight = c.origionalFile.thumbHeight || 220,
                    b.thumbnail_image = c.origionalFile.thumbnail_image,
                    b.thumbStyle = {
                        width: b.thumbWidth,
                        height: b.thumbHeight
                    }) : "NOTE" === c.dataFormat ? (b.available_previews = c.origionalFile.available_previews,
                    b.name = c.origionalFile.name,
                    b.preview_name = c.origionalFile.preview_name,
                    b.noteId = c.origionalFile.item_id,
                    b.appInstanceId = c.origionalFile.app_instance_id,
                    b.original_name = c.origionalFile.original_name,
                    b.id = c.origionalFile.file_id,
                    b.thumbWidth = 215,
                    b.thumbHeight = 170,
                    32 & b.available_previews && (b.thumbnail_image = a("getNoteThumbnailPath")(c.origionalFile, c.origionalFile.item_id)),
                    b.thumbStyle = {},
                    b.iconStyle.margin = "-50px -32px",
                    b.iconStyle.top = "85px") : "CHAT" === c.dataFormat && (b.available_previews = c.origionalFile.availablePreviews,
                    b.name = c.origionalFile.name,
                    b.preview_name = c.origionalFile.previewName,
                    b.noteId = c.origionalFile.itemId,
                    b.appInstanceId = c.origionalFile.app_instance_id,
                    b.original_name = c.origionalFile.originalName,
                    b.id = c.origionalFile.fileId,
                    b.thumbWidth = 155,
                    b.thumbHeight = 100,
                    (32 & b.available_previews || 0 == b.availablePreviews) && (b.thumbnail_image = a("getNoteThumbnailPath")(c.origionalFile, c.origionalFile.itemId)),
                    b.thumbStyle = {
                        width: b.thumbWidth,
                        height: b.thumbHeight
                    }),
                    b.name.length > 50 ? b.tooltip = b.name.substr(0, 50) + "..." : b.tooltip = b.name,
                    c.file = b
                }
                c.file = {},
                e();
                var f = c.file.original_name.split(".");
                f.pop(),
                f = f.join("."),
                c.canPlayPreviewType = 0,
                c.canPlayVideoType = 0,
                c.videoPreviewURL = !1,
                c.videoURL = !1,
                c.isThumbnailAvailable = 32 & c.file.available_previews,
                c.isMp4PreviewAvailable = 64 & c.file.available_previews,
                c.isWebmPreviewAvailable = 128 & c.file.available_previews,
                c.isMp4Available = 256 & c.file.available_previews,
                c.isWebmAvailable = 512 & c.file.available_previews,
                c.isThumbnailInViewY = !1,
                c.isThumbnailInViewX = !1,
                c.isAppFocused = b.appHasFocus();
                var g = {};
                g.isMp4PreviewAvailable = c.isMp4PreviewAvailable,
                g.isWebmPreviewAvailable = c.isWebmPreviewAvailable,
                g.isMp4Available = c.isMp4Available,
                g.isWebmAvailable = c.isWebmAvailable,
                c.canPlayPreviewType = d.formatCheck("preview", g),
                c.canPlayVideoType = d.formatCheck("video", g),
                1 === c.canPlayPreviewType ? c.videoPreviewURL = a("getVideoPreviewPath")(c.file.preview_name, c.file.noteId, c.file.appInstanceId, "webm") : 2 === c.canPlayPreviewType && (c.videoPreviewURL = a("getVideoPreviewPath")(c.file.preview_name, c.file.noteId, c.file.appInstanceId, "mp4")),
                1 === c.canPlayVideoType ? c.videoURL = a("getVideoPath")(f, c.file.noteId, c.file.appInstanceId, "webm", 480) : 2 === c.canPlayVideoType && (c.videoURL = a("getVideoPath")(f, c.file.noteId, c.file.appInstanceId, "mp4", 480)),
                c.isVideoPreviewInsertedInDOM = !1,
                c.isVideoPreviewLoaded = !1,
                c.currentState = 0,
                c.emitVideoId = function() {
                    var a = {
                        id: c.file.id
                    };
                    c.$emit("VideoPlayback:clicked", a)
                }
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvBanners", [function() {
        return {
            restrict: "A",
            scope: !0,
            templateUrl: "components/cnvBanners/cnvBanners.tpl.html",
            compile: function(a, b, c) {
                return function(a, b, c, d) {}
            },
            controller: ["$scope", "bannerService", function(a, b) {
                a.bannersStack = b.getBannersStackReference(),
                a.onBannerTextClick = function(a, c) {
                    b.onBannerTextClick(a, c)
                }
                ,
                a.onBannerCloseBtnClick = function(a) {
                    b.onBannerCloseBtnClick(a)
                }
                ,
                b.on("dataUpdated", function() {
                    a.$broadcast("render")
                })
            }
            ]
        }
    }
    ]),
    b.module("convoApp").controller("cnvInviteFromAddressBookModalCtrl", ["$scope", "$modalInstance", "importContactsService", "filter_contacts", "noContactMessage", function(b, c, d, e, f) {
        function g(a) {
            var c = a.target.files[0];
            if (b.fileName = c.name,
            c) {
                var f = new FileReader;
                f.onload = function(a) {
                    b.contactList = d.csvFileLoadingCompleteHandler(a.target.result),
                    b.contactList = e(b.contactList),
                    b.contactList.length ? b.showNoContactMessage = !1 : b.showNoContactMessage = !0,
                    b.$broadcast("render"),
                    b.$digest()
                }
                ,
                f.readAsText(c),
                a.stopImmediatePropagation(),
                a.preventDefault()
            }
        }
        function h() {
            d.off("contactsReceivedFromGmail", j),
            $("#importCntctDialog").off("change", g)
        }
        b.title = "Import Contacts",
        b.FILE_VIEW = "File",
        b.EMAIL_VIEW = "Email",
        b.selectedView = b.FILE_VIEW,
        b.noContactMessage = f;
        var i;
        setTimeout(function() {
            $("#importCntctDialog").on("change", g)
        }, 0);
        var j = function(a) {
            b.importingFromIframe = !1,
            b.contactList = e(a),
            b.contactList.length ? b.showNoContactMessage = !1 : b.showNoContactMessage = !0,
            b.$broadcast("render"),
            b.$digest(),
            i.close()
        }
        ;
        d.on("contactsReceivedFromGmail", j),
        b.toggleSelectedView = function(c) {
            c !== b.selectedView && (b.selectedView = c,
            b.contactList = null ,
            b.fileName = "no file selected",
            b.selectedView == b.EMAIL_VIEW ? (b.$broadcast("render"),
            $("#importCntctDialog").off("change", g),
            $("#importCntctDialog").replaceWith($("#importCntctDialog").val("").clone(!0)),
            $(".cnv-invite-address-book .modal-dialog").width(580),
            i = a.open("/app/contacts/ImportGmailContacts.php", "_blank", "left=400, top=100,width=500, height=500")) : ($(".cnv-invite-address-book .modal-dialog").width(640),
            b.$broadcast("render"),
            $("#importCntctDialog").on("change", g)))
        }
        ,
        b.checkedChanged = function(a) {
            $("#cb" + a).is(":checked") ? b.contactList[a].isChecked = !0 : b.contactList[a].isChecked = !1
        }
        ,
        b.unCheckAll = function() {
            for (var a = 0; a < b.contactList.length; a++)
                $("#cb" + a).is(":checked") && ($("#cb" + a).prop("checked", !1),
                b.contactList[a].isChecked = !1)
        }
        ,
        b.openFileDialog = function(a, b) {
            a.preventDefault(),
            $("#" + b).click()
        }
        ,
        b.cancel = function() {
            c.dismiss(),
            h()
        }
        ,
        b.inviteTeammates = function() {
            for (var a = [], d = 0; d < b.contactList.length; d++)
                b.contactList[d].isChecked && a.push(b.contactList[d]);
            c.close({
                inviteTo: a
            }),
            h()
        }
    }
    ]),
    b.module("convoApp").directive("cnvLikeButton", function() {
        return {
            restrict: "A",
            scope: {
                like_info: "=likeInfo",
                likeHandler: "&"
            },
            template: "<a bo-href=\"\" ng-click=\"onLikeClick()\" bo-class=\"{'like_btn': true, 'like_btn_disabled': like_pending}\" bo-bind=\"like_info.liked_by_me && 'Unlike' || 'Like'\"></a>",
            controller: ["$scope", "$rootScope", function(a, b) {
                function d() {}
                a.like_pending = !1,
                a.__leak_like = new d,
                a.onLikeClick = function() {
                    if (!a.like_pending) {
                        a.like_pending = !0;
                        var d = a.like_info
                          , e = d.liked_by_me ? "unlike" : "like";
                        "like" == e ? (d.liked_by_me = !0,
                        d.likes_count++,
                        d.liked_by = b.login_data.user.user_id) : d.liked_by_me = !1,
                        a.$emit("setItemDirty"),
                        a.likeHandler({
                            action: e
                        }).then(function(b) {
                            if (a.like_pending = !1,
                            b.success) {
                                var d = a.like_info;
                                d.likes_count = parseInt(b.like_count),
                                b.liked_by != c ? d.liked_by = b.liked_by : b.likedBy != c && (d.liked_by = b.likedBy)
                            }
                            a.$emit("setItemDirty")
                        })
                    }
                }
            }
            ]
        }
    }),
    b.module("convoApp").directive("cnvLogoWithFeedDirtyIndicator", [function() {
        return {
            scope: !1,
            restrict: "E",
            templateUrl: "components/cnvLogoWithFeedDirtyIndicator/cnvLogoWithFeedDirtyIndicator.tpl.html",
            controller: ["$scope", "feedDirtyInfo", "accountInfo", "mixpanelService", "utils", function(a, b, c, d, e) {
                function f() {
                    a.feedDirty = !0
                }
                function g() {
                    a.feedDirty = !1
                }
                0 != c.getAccountImageType() ? a.networkLogo = c.getAccountImageUrl() : a.networkLogo = e.getCompanyDefaultLogo(),
                b.on("feedDirty", f),
                b.on("feedDirtyClear", g),
                a.feedDirty = b.getIsDirty(),
                a.$on("$destroy", function() {
                    b.off("feedDirty", f),
                    b.off("feedDirtyClear", g)
                })
            }
            ]
        }
    }
    ]),
    b.module("convoApp").controller("CombinedSetProfilePictureModalCtrl", ["$scope", "$modalInstance", function(a, b) {
        a.dismiss = function() {
            b.dismiss()
        }
        ,
        a.$on("dismissProfilePictureCombinedModal", a.dismiss)
    }
    ]),
    b.module("convoApp").directive("cnvCombinedSetProfilePictureModal", ["alertsService", "$rootScope", "userInfo", "profilePicService", "awsService", "accountInfo", "bannerService", "config", "utils", "mixpanelService", "homeViewStateInfo", "onboardingService", function(b, c, d, e, f, g, h, i, j, k, l, m) {
        return {
            restrict: "A",
            link: function(h, l, m) {
                function n() {
                    u.on("change", function(a) {
                        this.files.length > 0 && p(this.files[0]),
                        u.val(null )
                    })
                }
                function o(a, b, c) {
                    if (!w) {
                        var d = new Image;
                        w = !0,
                        d.onload = function() {
                            var a = document.createElement("canvas");
                            a.width = d.width,
                            a.height = d.height;
                            var b = a.getContext("2d");
                            b.drawImage(d, 0, 0);
                            var e = s(a.toDataURL("image/png"));
                            r(e, "png", "png", 0, 0, d.width, d.height, c)
                        }
                        ,
                        b ? d.setAttribute("crossOrigin", "use-credentials") : d.setAttribute("crossOrigin", "anonymous"),
                        d.src = a
                    }
                }
                function p(a) {
                    var d = "home/userView/centerPanelWidgets/profilePictureModal.tpl.html"
                      , e = "ProfilePictureModalCtrl"
                      , f = {
                        startWebcam: function() {
                            return !1
                        },
                        file: function() {
                            return a
                        }
                    }
                      , g = b.customModal(d, e, f, "cnvUserProfilePictureModal", !0);
                    g.result.then(function(a) {
                        h.$broadcast("render"),
                        c.$broadcast("userProfilePictureUpdated"),
                        c.$broadcast("refreshImage"),
                        h.$emit("dismissProfilePictureCombinedModal")
                    })
                }
                function q(a, b, f) {
                    var i = e.getThumbnailGenerationRequestStatus(a);
                    i.then(function(i, j) {
                        if ("SUCCESS" == i.data.status) {
                            var l = e.updateUserProfileImageIfUploaded(a, d.getUserId(), g.getAccountId());
                            clearInterval(b),
                            l.then(function(a, b) {
                                var d, e;
                                w = !1,
                                a.hasOwnProperty("data") && (d = a.data.user_profile_image_type,
                                e = a.data.user_profile_image_version),
                                h.alerts = {
                                    success: "Picture uploaded."
                                },
                                k.trackEvent(k.Upload_Profile_Pic, {
                                    Source: f
                                }),
                                c.$broadcast("userProfilePictureUpdated", d, e),
                                c.$broadcast("refreshImage"),
                                h.$emit("dismissProfilePictureCombinedModal")
                            }, function(a) {
                                w = !1
                            })
                        }
                    }, function(a) {
                        w = !1
                    })
                }
                function r(a, b, c, d, g, i, j, k) {
                    b = b.toLowerCase();
                    var l = e.generateRequestUUID();
                    l.then(function(l, m) {
                        var n = l.data
                          , o = f.uploadFile(a, n + "-original." + b, "temp/requests/" + n + "/" + n + "-original." + b, c);
                        h.alerts = {
                            success: "Uploading Photo..."
                        },
                        o.then(function(c, f) {
                            var l = e.generateProfileThumbnails(n, n + "." + b, a.size, 100, {
                                x: g,
                                y: d,
                                width: i,
                                height: j
                            });
                            h.alerts = {
                                success: "Generating thumbnails..."
                            },
                            l.then(function(a, b) {
                                var c = setInterval(function() {
                                    q(n, c, k)
                                }, 5e3)
                            }, function(a) {
                                w = !1
                            })
                        }, function(a) {
                            w = !1
                        })
                    }, function(a) {
                        w = !1
                    })
                }
                function s(a) {
                    var b;
                    b = a.split(",")[0].indexOf("base64") >= 0 ? atob(a.split(",")[1]) : unescape(a.split(",")[1]);
                    for (var c = a.split(",")[0].split(":")[1].split(";")[0], d = new Uint8Array(b.length), e = 0; e < b.length; e++)
                        d[e] = b.charCodeAt(e);
                    return new Blob([d],{
                        type: c
                    })
                }
                function t(b) {
                    var c = JSON.parse(b.data);
                    c.hasOwnProperty("error_message") ? (h.alerts = {
                        error: c.error_message
                    },
                    h.$$phase || h.$digest(),
                    w = !1) : c.hasOwnProperty("data") && c.data.hasOwnProperty("profile_image_url") && (x && b.source == x ? o(i.APP_DOMAIN + "/app/link_resolver.php?url=" + c.data.profile_image_url_https, !0, "Twitter") : z && b.source == z ? o(i.APP_DOMAIN + "/app/link_resolver.php?url=" + c.data.profile_image_url_https, !0, "Facebook") : y && b.source == y ? o(c.data.profile_image_url_https, !1, "LinkedIn") : o(i.APP_DOMAIN + "/app/link_resolver.php?url=" + c.data.profile_image_url_https, !0),
                    x = null ,
                    y = null ,
                    z = null ),
                    a.removeEventListener("message", t)
                }
                var u = l.find("#combinedProfileUploadInput")
                  , v = i.APP_DOMAIN + "/app/integrations/connect/splash.php?provider="
                  , w = !1
                  , x = null 
                  , y = null 
                  , z = null ;
                h.thisUser = d.getUserInfo(),
                h.utils = j,
                h.config = i,
                h.setProfilePictureViaWebcam = function() {
                    if (!w) {
                        var a = "home/userView/centerPanelWidgets/profilePictureModal.tpl.html"
                          , d = "ProfilePictureModalCtrl"
                          , e = {
                            startWebcam: function() {
                                return !0
                            },
                            file: function() {
                                return null 
                            }
                        }
                          , f = b.customModal(a, d, e, "cnvUserProfilePictureModal");
                        f.result.then(function(a) {
                            h.$broadcast("render"),
                            c.$broadcast("userProfilePictureUpdated"),
                            c.$broadcast("refreshImage"),
                            h.$emit("dismissProfilePictureCombinedModal")
                        })
                    }
                }
                ,
                h.openFilePicker = function() {
                    w || u.click()
                }
                ,
                h.uploadViaLinkedIn = function() {
                    if (!w) {
                        var b = screen.width / 2 - 300
                          , c = screen.height / 2 - 300;
                        z && (z.close(),
                        z = null ),
                        z = a.open(v + "linkedin", "", "width=600, height=600, top=" + c + ", left=" + b),
                        a.focus && z.focus(),
                        a.addEventListener("message", t, !1)
                    }
                }
                ,
                h.uploadViaFb = function() {
                    if (!w) {
                        var b = screen.width / 2 - 512
                          , c = screen.height / 2 - 300;
                        y && (y.close(),
                        y = null ),
                        y = a.open(v + "facebook", "", "width=580, height=400, top=" + c + ", left=" + b),
                        a.focus && y.focus(),
                        a.addEventListener("message", t, !1)
                    }
                }
                ,
                h.uploadViaTwitter = function() {
                    if (!w) {
                        var b = screen.width / 2 - 300
                          , c = screen.height / 2 - 300;
                        x && (x.close(),
                        x = null ),
                        x = a.open(v + "twitter", "", "width=600, height=600, top=" + c + ", left=" + b),
                        a.focus && x.focus(),
                        a.addEventListener("message", t, !1)
                    }
                }
                ,
                n()
            }
        }
    }
    ]),
    b.module("convoApp").service("dialogService", ["$modal", function(a) {
        this.showShareWithOtherModal = function(b, c, d, e, f, g, h, i) {
            a.open({
                templateUrl: "components/dialog/cnvInFeedModal.tpl.html",
                controller: l,
                resolve: {
                    title: function() {
                        return b
                    },
                    text: function() {
                        return c
                    },
                    data: function() {
                        return d
                    },
                    okCallback: function() {
                        return e
                    },
                    cancelCallback: function() {
                        return f
                    },
                    okBtnLabel: function() {
                        return g
                    },
                    cancelBtnLabel: function() {
                        return h
                    },
                    defaultBtn: function() {
                        return i
                    }
                },
                windowClass: "prompt-modal"
            })
        }
        ,
        this.showAddTagModal = function(b, c, d, e, f, g, h, i) {
            a.open({
                templateUrl: "components/dialog/cnvInFeedModal.tpl.html",
                controller: l,
                resolve: {
                    title: function() {
                        return b
                    },
                    text: function() {
                        return c
                    },
                    data: function() {
                        return d
                    },
                    okCallback: function() {
                        return e
                    },
                    cancelCallback: function() {
                        return f
                    },
                    okBtnLabel: function() {
                        return g
                    },
                    cancelBtnLabel: function() {
                        return h
                    },
                    defaultBtn: function() {
                        return i
                    }
                },
                windowClass: "prompt-modal"
            })
        }
    }
    ]);
    var l = function(a, b, d, e, f, g, h, i, j, k) {
        a.title = "Share with others",
        a.okBtnLabel = "update",
        a.text = e,
        a.cancelBtnLabel = "Cancel",
        null  != f && (a.data = f),
        d !== c && (a.title = d),
        i !== c && (a.okBtnLabel = i),
        a.ok = function() {
            var a = $("#taginput").select2("val");
            console.log(a),
            b.close()
        }
        ,
        a.close = function() {
            b.close()
        }
        ,
        a.cancel = function() {
            b.dismiss()
        }
    }
    ;
    l.$inject = ["$scope", "$modalInstance", "title", "text", "data", "okCallback", "cancelCallback", "okBtnLabel", "cancelBtnLabel", "defaultBtn"],
    b.module("convoApp").directive("cnvDropdown", ["$compile", "$timeout", function(a, b) {
        return {
            restrict: "E",
            scope: {
                dropdown_items: "=items",
                show_dropdown: "=show",
                itemSelectCallback: "&"
            },
            link: function(c, d, e) {
                function f(a) {
                    if (c.dropdown_items[k].separator || c.dropdown_items[k].disabled) {
                        if (0 == c.dropdown_items[k].separator && 0 == c.dropdown_items[k].disabled) {
                            var b = c.dropdown_items[k];
                            c.itemSelectCallback({
                                item: b,
                                withTabKey: a
                            })
                        }
                    } else {
                        var b = c.dropdown_items[k];
                        c.itemSelectCallback({
                            item: b,
                            withTabKey: a
                        })
                    }
                }
                function g(a) {
                    for (var b = 0, c = a.parentElement; c.children[b] != a; )
                        b++;
                    return b
                }
                function h(a) {
                    if (c.show_dropdown)
                        if (27 == a.which)
                            c.$apply(function() {
                                c.show_dropdown = !1
                            });
                        else if (38 === a.which) {
                            if (a.preventDefault(),
                            l > -1)
                                if (k > 0) {
                                    if (k--,
                                    c.dropdown_items[k].separator || c.dropdown_items[k].disabled)
                                        for (; c.dropdown_items[k].separator === !0 || c.dropdown_items[k].disabled === !0; )
                                            (c.dropdown_items[k].separator === !0 || c.dropdown_items[k].disabled === !0) && (k--,
                                            -1 == k && (k = l));
                                    $(".dropdown-item-cont", $(d[0])).removeClass("selected"),
                                    $(d[0].children[0].children[k]).addClass("selected")
                                } else if (0 >= k) {
                                    if ($(".dropdown-item-cont", $(d[0])).removeClass("selected"),
                                    k = l,
                                    c.dropdown_items[k].separator || c.dropdown_items[k].disabled)
                                        for (; c.dropdown_items[k].separator === !0 || c.dropdown_items[k].disabled === !0; )
                                            (c.dropdown_items[k].separator === !0 || c.dropdown_items[k].disabled === !0) && k--;
                                    $(d[0].children[0].children[k]).addClass("selected")
                                }
                        } else if (40 === a.which) {
                            if (a.preventDefault(),
                            l > -1)
                                if (l > k) {
                                    if (k++,
                                    c.dropdown_items[k].separator || c.dropdown_items[k].disabled)
                                        for (; c.dropdown_items[k].separator === !0 || c.dropdown_items[k].disabled === !0; )
                                            (c.dropdown_items[k].separator === !0 || c.dropdown_items[k].disabled === !0) && (k++,
                                            k == l && (k = 0));
                                    $(".dropdown-item-cont", $(d[0])).removeClass("selected"),
                                    $(d[0].children[0].children[k]).addClass("selected")
                                } else if (k >= l) {
                                    if ($(".dropdown-item-cont", $(d[0])).removeClass("selected"),
                                    k = 0,
                                    c.dropdown_items[k].separator || c.dropdown_items[k].disabled)
                                        for (; c.dropdown_items[k].separator === !0 || c.dropdown_items[k].disabled === !0; )
                                            (c.dropdown_items[k].separator === !0 || c.dropdown_items[k].disabled === !0) && k++;
                                    $(d[0].children[0].children[k]).addClass("selected")
                                }
                        } else
                            13 === a.which ? -1 != k && (a.preventDefault(),
                            c.$apply(function() {
                                f()
                            })) : 9 === a.which && -1 != k && (a.preventDefault(),
                            c.$apply(function() {
                                f(!0)
                            }))
                }
                function i(a) {
                    c.show_dropdown && a.target != this && c.$apply(function() {
                        c.show_dropdown = !1
                    })
                }
                function j(a) {
                    a.target === o[0] || d[0].contains(a.target) || c.$apply(function() {
                        c.show_dropdown = !1
                    })
                }
                var k = -1
                  , l = 0
                  , m = c.$eval(e.watchOnLengthOnly)
                  , n = a('<ul class="dropdown-cont ' + e.dropdownClass + '" ng-show="show_dropdown"><li ng-repeat="item in dropdown_items" ng-mouseover="mouseover($event)" ng-click="clickedOnSelectedItem($event)" class="dropdown-item-cont" ng-class="{disabled: item.disabled}" ng-include="getTemplateForItem(item)"></li></ul>')(c);
                d.append(n),
                c.$watch("show_dropdown", function(a, b) {
                    c.show_dropdown || -1 == k || ($(d[0].children[0].children[k]).removeClass("selected"),
                    k = -1)
                }),
                m || c.$watch("dropdown_items", function(a, b) {
                    $(".dropdown-item-cont", $(d[0])).removeClass("selected"),
                    l = a.length - 1,
                    k = -1
                }),
                m && c.$watch("dropdown_items.length", function(a, c) {
                    l = a - 1,
                    b(function() {
                        d.find(".selected").length > 0 && (k = g(d.find(".selected")[0]))
                    }, 0)
                }),
                c.clickedOnSelectedItem = function(a) {
                    f()
                }
                ,
                c.mouseover = function(a) {
                    $(".dropdown-item-cont", $(d[0])).removeClass("selected"),
                    $(a.currentTarget).addClass("selected"),
                    k = g(a.currentTarget),
                    (1 == c.dropdown_items[k].separator || c.dropdown_items[k].disabled === !0) && $(".dropdown-item-cont", $(d[0])).removeClass("selected")
                }
                ,
                c.getTemplateForItem = function(a) {
                    return a.separator ? "components/dropdown/separatorListItem.tpl.html" : e.itemTemplate
                }
                ;
                var o = $("#" + e.navSourceElemId);
                $body = $(document.body),
                o.on("keydown", h),
                o.on("blur", i),
                $body.on("mousedown", j),
                c.$on("$destroy", function() {
                    o.off("keydown", h),
                    o.off("blur", i),
                    $body.off("mousedown", j)
                })
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvDropdowns", ["$templateCache", "$compile", "popoverUtils", function(b, c, d) {
        return {
            restrict: "AE",
            scope: !0,
            templateUrl: "components/dropdown/cnvDropdown.tpl.html",
            controller: ["$scope", function(a) {}
            ],
            link: function(b, e, f) {
                function g(c) {
                    var d = e.find(".dropdown-main-menu")
                      , f = d[0].getBoundingClientRect()
                      , g = f.top
                      , h = d.height();
                    (g + h > $(a).height() || c) && d.css("top", -1 * h - 15),
                    f.left + f.width > $(a).width() ? d.css("left", -1 * f.width + 15) : f.left + 2 * f.width < $(a).width() && "right" != b.ddAlign && d.css("left", 0)
                }
                function h() {
                    var a = e.find(".dropdown-menu");
                    a.css("position", "absolute").css("top", "20px")
                }
                function i(d, e) {
                    if (d && d.length > 0)
                        for (var f = 0; f < d.length; f++) {
                            var g = b.$new(!1, null )
                              , h = d[f];
                            g.option = h;
                            var j, k, l;
                            if (h.checkBox)
                                j = "<li",
                                h.isNotHoverable && (j += ' class="notHoverable"'),
                                j += '><span class="menu-item-wrapper"',
                                h.callback && (j += ' ng-click="option.callback(dropDownCallbackParams, $event)"'),
                                j += ">",
                                k = "</li>",
                                l = b.dropDownCallbackParams[h.checkBoxId] ? j + '<input type="checkbox" class="cnv-checkbox" id="' + h.checkBoxId + '" checked="checked" /> <label for="' + h.checkBoxId + '"></label><span>&nbsp;&nbsp;' + _.escape(h.label) + "</span>" + k : j + '<input type="checkbox" class="cnv-checkbox" id="' + h.checkBoxId + '"/> <label for="' + h.checkBoxId + '"></label><span>&nbsp;&nbsp;' + _.escape(h.label) + "</span>" + k;
                            else if (j = "<li",
                            h.isNotHoverable && (j += ' class="notHoverable"'),
                            j += '><a href="',
                            h.url ? j += h.url : (j += 'javascript:void(0)"',
                            j += ' oncontextmenu="event.preventDefault();"'),
                            j += h["class"] ? '" class="menu-item-wrapper ' + h["class"] + '"' : '" class="menu-item-wrapper"',
                            h.callback && (j += ' ng-click="option.callback(dropDownCallbackParams, $event, option.callbackParam)"'),
                            j += ">",
                            k = "</a></li>",
                            h.conditionalLabelIcon)
                                l = b.condition[h.condition] ? j + '<i class="' + h.icon + '"></i><span>' + _.escape(h.label) + "</span>" + k : j + '<span class="dummy-block-14"></span><span>' + _.escape(h.label) + "</span>" + k;
                            else if (h.subtext)
                                l = j + "<span>" + _.escape(h.label) + '</span><br /><span class="subtext">' + _.escape(h.subtext) + "</span>" + k;
                            else if (h.icon)
                                l = j + '<i class="' + h.icon + '"></i><span>' + _.escape(h.label) + '</span><ul class="submenu1 dropdown-menu"></ul>' + k;
                            else if (h.isDivider)
                                l = '<li class="divider"></li>';
                            else if (h.conditionalLabel) {
                                if (!b.condition[h.condition])
                                    continue;l = '<li class="divider"></li>' + j + "<span>" + _.escape(h.label) + "</span>" + k
                            } else
                                l = h.toggleLabel ? b.condition[h.condition] ? j + "<span>" + _.escape(h.label) + "</span>" + k : j + "<span>" + _.escape(h.toggleLabelWith) + "</span>" + k : j + "<span>" + _.escape(h.label) + "</span>" + k;
                            var n = c(l)(g);
                            if (e.append(n),
                            h.submenu && h.submenu.length > 0) {
                                var o = n.find(".submenu1")
                                  , p = !1;
                                o.css("position", "absolute").css({
                                    left: "196px",
                                    "margin-top": "-26px"
                                }),
                                i(h.submenu, o);
                                var q = function() {
                                    p = !0,
                                    o.css("display", "block");
                                    var b = o[0].getBoundingClientRect()
                                      , c = $(a).width()
                                      , d = o.width();
                                    b.left + d + 4 > c && o.css("left", parseInt(o.css("left").replace("px", "")) - (b.left + d - c - 4))
                                }
                                  , r = function() {
                                    p = !1,
                                    setTimeout(function() {
                                        p || o.css("display", "none")
                                    }, 150)
                                }
                                ;
                                n.on("mouseenter", q),
                                n.on("mouseleave", r),
                                m.push(n)
                            }
                        }
                }
                function j() {
                    for (var a = 0; a < m.length; a++)
                        m[a].off(),
                        m.splice(a, 1)
                }
                var k = e.find(".dropdown-menu")
                  , l = b.$eval(f.cnvDropdownCtrl)
                  , m = [];
                if (l && l.type && (b.ddType = l.type,
                b.$broadcast("render")),
                l && l.align && (b.ddAlign = l.align,
                b.$broadcast("render")),
                l.hasOwnProperty("attrs"))
                    for (var n = l.attrs, o = 0; o < n.length; o++) {
                        var p = n[o];
                        e.find(p.selector).attr(p.key, p.value)
                    }
                var q = function(a, c, d, e) {
                    k.hide(),
                    b.isopen = !1,
                    $("body").off("mousewheel", q)
                }
                ;
                b.toggled = function(c) {
                    if (b.isopen = c,
                    k && (j(),
                    k.empty()),
                    c) {
                        var l = b.$eval(f.cnvDropdownCtrl);
                        if (b.config = l,
                        b.options = l.options,
                        f.cnvDropdownCallbackParams && (b.dropDownCallbackParams = b.$eval(f.cnvDropdownCallbackParams)),
                        f.condition && (b.condition = b.$eval(f.condition)),
                        i(b.options, k),
                        h(),
                        k.show(),
                        l.fixedPosition) {
                            var m = e.find(".dropdown-toggle").offset()
                              , n = m.top - $(a).scrollTop();
                            k.css("position", "fixed").css("top", n + 20).css("left", m.left - 140).css("right", "auto"),
                            $("body").on("mousewheel", q)
                        } else
                            g(l.alwaysUpwordsDirection);
                        l.onMenuOpen && l.onMenuOpen(),
                        b.config.wrapperClass && e.closest("." + b.config.wrapperClass).css("display", "block"),
                        d.hide()
                    } else
                        k && (j(),
                        k.empty(),
                        k.hide()),
                        b.config.wrapperClass && e.closest("." + b.config.wrapperClass).css("display", "");
                    b.$emit("cnvDropdownToggled", {
                        state: c
                    })
                }
                ,
                b.$on("toggleCnvDropdown", function() {
                    b.isopen || (j(),
                    k.empty(),
                    k.show(),
                    b.isopen = !0,
                    a.setTimeout(function() {
                        b.$apply(b.toggled(!0))
                    }, 0))
                }),
                b.$on("$destroy", function() {
                    $("body").off("mousewheel", q),
                    k = e = f = null ,
                    f = null 
                })
            }
        }
    }
    ]),
    b.module("convoApp").controller("groupInvtStatusDialogCtrl", ["$scope", "$modalInstance", "$filter", "inviteSuccessEmails", "inviteFailEmails", function(a, b, c, d, e) {
        function f() {
            a.successEmailsTooltip = {
                text: ""
            };
            for (var b = h; b < a.inviteSuccessEmails.length; b++)
                a.inviteSuccessEmails.hasOwnProperty(b) && (a.successEmailsTooltip.text += c("limitText")(a.inviteSuccessEmails[b].invitee_global_profile.email, 80) + "<br>")
        }
        function g() {
            a.FailEmailsTooltip = {
                text: ""
            };
            for (var b = h; b < a.inviteFailEmails.length; b++)
                a.inviteFailEmails.hasOwnProperty(b) && (a.FailEmailsTooltip.text += c("limitText")(a.inviteFailEmails[b].invitee_email, 80) + "<br>")
        }
        a.title = "Alert Box",
        a.okBtnLabel = "Ok",
        a.inviteSuccessEmails = d,
        a.inviteFailEmails = e;
        var h = 2;
        a.ok = function() {
            b.close()
        }
        ,
        f(),
        g()
    }
    ]),
    b.module("convoApp").directive("cnvTagInput", [function() {
        return {
            restrict: "A",
            scope: {},
            link: function(a, b, c) {
                var d, e = ["red", "green", "blue", "brown", "yellow", "abc", "cba", "ba", "ad", "af", "ag"];
                d = "Share with others" == c.action ? JSON.parse(c.data) : [c.data],
                $("#taginput").select2({
                    tags: e,
                    dropdownAutoWidth: !0,
                    tokenSeparators: [","]
                }),
                $("#taginput").select2("val", d),
                "Share with others" == c.action && $(".select2-search-choice-close").each(function() {
                    $(this).removeAttr("href"),
                    $(this).replaceWith("<span class='select2-search-choice-close select2-lock-choice'> </span>")
                }),
                $(".select2-choices").addClass("select2-ul-scroll"),
                setTimeout(function() {
                    $(".select2-input").focus()
                }, 500),
                $(".modal-body").on("keyup", function(a) {
                    var b = ($(".select2-container").offset(),
                    $(".select2-choices").width())
                      , c = ($(".select2-search-choice-focus").width(),
                    $(".select2-choices")[0].scrollLeft);
                    if (37 == a.which) {
                        var d = $(".select2-search-choice-focus")[0].offsetLeft;
                        c > d && $(".select2-choices").animate({
                            scrollLeft: d
                        }, 100)
                    }
                    if (39 == a.which) {
                        var d = $(".select2-search-choice-focus")[0].offsetLeft;
                        d > c && $(".select2-choices").animate({
                            scrollLeft: d
                        }, 100)
                    }
                    if ((38 == a.which || 40 == a.which) && !$(".select2-search-field").is(":focus")) {
                        var d = $(".select2-search-field")[0].offsetLeft;
                        $(".select2-choices").animate({
                            scrollLeft: d - b / 2
                        }, 100)
                    }
                })
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvEditor", ["$injector", "$compile", "$templateCache", "accountInfo", "utils", "idToFilterUrlForAppFilter", "$filter", "AppLinks", "FilterTypes", "alertsService", "$timeout", "config", "emojiDataService", function(a, b, d, e, f, g, h, i, j, k, l, m, n) {
        return {
            restrict: "E",
            priority: 0,
            scope: {
                atMentionsSource: "&cnvAtMentions",
                onCommandExecuted: "&cnvOnCommandExecuted",
                onAtMentionAdded: "&cnvOnAtMentionAdded",
                onHashTagAdded: "&cnvOnHashTagAdded",
                onAtMentionRemoved: "&cnvOnAtMentionRemoved",
                onTextSelectionRemoved: "&cnvTextSelectionRemoved",
                atMentionsSuggestionItemTemplate: "@cnvAtMentionsSuggestionItemTemplate",
                hashtagSource: "&cnvHashtags",
                toolbarId: "=toolbarId",
                onTextPasted: "&cnvTextEditorOnTextPasted",
                onFocusOut: "&cnvTextEditorOnFocusOut",
                onUrlAdded: "&cnvTextEditorOnUrlAdded",
                onEscKeyPress: "&cnvTextEditorOnEscKeyPress",
                onCtrlOrCmdEnterPress: "&cnvTextEditorOnCtrlOrCmdEnterPress",
                onCtrlOrCmdSavePress: "&cnvTextEditorOnCtrlOrCmdSavePress",
                onShiftTabPress: "&cnvTextEditorOnShiftTabPress",
                onEditorDestroy: "&cnvTextEditorOnDestroy",
                submitOnEnter: "&cnvTextEditorSubmitOnEnter",
                ctrl: "=cnvTextEditorCtrl",
                readOnly: "=cnvReadOnly",
                placeholder: "@cnvPlaceholder",
                cnvEditorSource: "@cnvEditorSource"
            },
            compile: function(b, d, e) {
                return function(b, d, e, o) {
                    var p = {}
                      , q = a.get("usersGroupsListProvider")
                      , r = e.cnvTextEditorMode || "basic"
                      , s = e.toolbarId || ""
                      , t = e.cnvFocusOnLoad || "true"
                      , u = e.cnvPlaceholder || !1
                      , v = b.readOnly || !1
                      , w = null  != e.cnvTextEditorOnUrlAdded
                      , x = f.generateUniqueCharId()
                      , y = $('<div id="' + x + '"></div>');
                    $(d).append(y);
                    var z = [];
                    z = "full" === r ? ["bold", "italic", "underline", "strike", "bullet", "list", "align", "link", "color"] : "basic" === r ? ["bold", "italic", "underline", "strike", "align", "link"] : "minimal" === r ? ["link"] : [];
                    var A = {
                        formats: z,
                        readOnly: v,
                        pollInterval: 100,
                        styles: !1,
                        theme: "snow",
                        modules: {
                            "paste-manager": !0,
                            resize: {
                                minHeight: o.ctrl.height.min || 72,
                                maxHeight: o.ctrl.height.max
                            },
                            setup: {
                                init: function(a) {
                                    function g(b) {
                                        a.onModuleLoad("capture-events", function(a) {
                                            _.extend(b, Backbone.Events)
                                        }),
                                        a.addModule("capture-events", {
                                            "text-change": function(a, c) {
                                                "user" === c && b.trigger("text-change", {
                                                    delta: a,
                                                    source: c
                                                })
                                            },
                                            "selection-change": function(a, c) {
                                                a && b.trigger("selection-change", {
                                                    range: a,
                                                    source: c
                                                })
                                            }
                                        })
                                    }
                                    function h(b) {
                                        var c = a.getText()
                                          , d = a.getSelection()
                                          , e = Math.min(c.lastIndexOf(" ", d.start - 2), c.lastIndexOf(" ", d.start - 1))
                                          , e = Math.max(e, c.lastIndexOf("\n", d.start - 1)) + 1
                                          , g = d.end - e - (b ? 0 : 1)
                                          , h = c.substr(e, g)
                                          , i = a.root.ownerDocument.getSelection();
                                        if (i.focusNode.parentNode.nodeName.toLowerCase() !== j.ANCHOR && i.focusNode.nodeName.toLowerCase() !== j.ANCHOR && f.isValidUrl(h.trim())) {
                                            var k = h;
                                            -1 == h.indexOf("http") && (k = "http://" + k),
                                            console.log("==: " + h),
                                            a.deleteText(e, d.end - (b ? 0 : 1), "user"),
                                            a.insertText(e, h, {
                                                link: k.trim().replace(/\'/g, "%27")
                                            }, "user")
                                        }
                                    }
                                    a.__nuke__ = p,
                                    o.ctrl.destroy = {},
                                    a.addFormat("highlight", {
                                        tag: "a",
                                        attribute: "href"
                                    }),
                                    a.addFormat("addclass", {
                                        attribute: "class"
                                    }),
                                    a.addFormat("target", {
                                        attribute: "target"
                                    });
                                    var i = {
                                        ENTER: 13,
                                        ESCAPE: 27,
                                        SPACE: 32,
                                        SAVE: 83,
                                        BACKSPACE: 8,
                                        LEFT: 37,
                                        UP: 38,
                                        RIGHT: 39,
                                        DOWN: 40,
                                        TAB: 9,
                                        DELETE: 46
                                    }
                                      , j = {
                                        ANCHOR: "a"
                                    };
                                    if (a.flags = {},
                                    u && a.addModule("placeholder", {
                                        placeholder: u
                                    }),
                                    a.addModule("emoji", {}),
                                    o.ctrl.initialHtmlText) {
                                        a.setHTML(o.ctrl.initialHtmlText);
                                        var k = a.getText().length;
                                        a.setSelection(k, k)
                                    }
                                    "true" === t && a.focus(),
                                    o.ctrl.hasOwnProperty("captureEvents") && "object" == typeof o.ctrl.captureEvents && g(o.ctrl.captureEvents),
                                    o.ctrl.collaboration && (o.ctrl.collaboration.initialize = function() {
                                        var b = o.ctrl.collaboration;
                                        g(b),
                                        a.onModuleLoad("multi-cursor", function(c) {
                                            c.options.template = '<span class="cursor-flag"> <span class="cursor-triangle top"></span> <img class="cursor-image" /> <span class="cursor-name"></span> <span class="cursor-triangle bottom"></span> </span> <span class="cursor-caret"></span>',
                                            b.mc_service = {
                                                clearCursors: function() {
                                                    c.clearCursors()
                                                },
                                                moveCursor: function(b, d) {
                                                    d < a.getText().length ? c.moveCursor(b, d) : console.log("KH: RTC comm directed cursor position is out of bounds.")
                                                },
                                                removeCursor: function(a) {
                                                    c.removeCursor(user_id)
                                                },
                                                setCursor: function(a, b, d, e, f) {
                                                    var g = c.setCursor(a, d, e, f || "rgba(51, 158, 202, 0.95)")
                                                      , h = $(g.elem);
                                                    h.find(".cursor-image").attr("src", b),
                                                    h.find(".cursor-name").prepend(h.find(".cursor-image"))
                                                },
                                                shiftCursors: function(a, b, d) {
                                                    c.shiftCursors(a, b, d)
                                                },
                                                update: function() {
                                                    c.update()
                                                }
                                            }
                                        }),
                                        a.addModule("multi-cursor", {
                                            timeout: 1e5
                                        }),
                                        b.updateContents = function(b, c) {
                                            a.updateContents(b, c)
                                        }
                                    }
                                    ,
                                    o.ctrl.collaboration.dispose = function() {
                                        o.ctrl.collaboration.off(),
                                        o.ctrl.collaboration = null 
                                    }
                                    ),
                                    o.ctrl.getEditorHtmlText = function() {
                                        $("a.convo-to-webapp-url", d[0]).each(function() {
                                            var a = $(this).attr("href");
                                            $(this).attr("href", "convo:" + a.slice(1)).removeClass("convo-to-webapp-url")
                                        });
                                        var c = a.getHTML().replace(/(?!<a*)&amp;(?=[^<>]*>)/g, "&").replace(/&#8203;/g, "&apos;").replace(/'/g, "&apos;").replace(/\s*align\s*=\s*"LEFT"\s*/gi, "").replace(/^(<div><br><\/div>)*|(<div><br><\/div>)*$/g, "").replace(/<div><br><\/div>/g, "<p></p>");
                                        return c = n.replaceEmojiCodes(c, b.cnvEditorSource),
                                        console.log("KH: LAST CONTENT GET FROM QUILL." + c.length),
                                        c
                                    }
                                    ,
                                    o.ctrl.getEditorCleanHtmlText = function() {
                                        return o.ctrl.getEditorHtmlText().replace(/<div>/g, "<p>").replace(/<\/div>/g, "</p>").replace(/<p><\/p>/g, "<br>")
                                    }
                                    ,
                                    o.ctrl.getEditorText = function() {
                                        return html_str = a.getText(),
                                        html_str
                                    }
                                    ,
                                    o.ctrl.clearContent = function() {
                                        a.setHTML("")
                                    }
                                    ,
                                    o.ctrl.setContent = function(b, c) {
                                        a.setHTML(b);
                                        var d = o.ctrl.getEditorText().length;
                                        c === !0 && a.setSelection(d, d)
                                    }
                                    ,
                                    o.ctrl.disable = function() {
                                        a.editor.disable()
                                    }
                                    ,
                                    o.ctrl.enable = function(b) {
                                        if (a.editor.enable(),
                                        b) {
                                            a.focus();
                                            var c = o.ctrl.getEditorText().length;
                                            a.setSelection(c, c)
                                        }
                                    }
                                    ,
                                    o.ctrl.getSelection = function() {
                                        return a.getSelection()
                                    }
                                    ,
                                    o.ctrl.focus = function() {
                                        a.focus()
                                    }
                                    ,
                                    o.ctrl.blur = function() {
                                        $("#bogus-element").focus(),
                                        $("#bogus-element").blur()
                                    }
                                    ,
                                    o.ctrl.resize = function(b) {
                                        var c = a.getModule("resize");
                                        c.options.minHeight = b.min,
                                        c.options.maxHeight = b.max,
                                        c.update(),
                                        $(c.element).scrollTop(c.element.scrollHeight)
                                    }
                                    ,
                                    o.ctrl.getRootElement = function() {
                                        return a.root
                                    }
                                    ,
                                    o.ctrl.getContainerElement = function() {
                                        return a.container
                                    }
                                    ,
                                    o.ctrl.setSelection = function(b, c) {
                                        b && b.hasOwnProperty("start") && b.hasOwnProperty("end") && a.setSelection(b.start, b.end, c)
                                    }
                                    ,
                                    o.ctrl.emoji = {
                                        _module: function() {
                                            a.onModuleLoad("emoji", function(a) {
                                                setTimeout(function() {
                                                    o.ctrl.emoji._module = a
                                                }, 0)
                                            })
                                        }(),
                                        set: function(b) {
                                            var c = a.root.scrollHeight;
                                            o.ctrl.emoji._module.setEmoji(b);
                                            var d = a.root.scrollHeight;
                                            d > c && (a.root.scrollTop += d - c)
                                        },
                                        focus: function() {
                                            var b = a.root.scrollTop;
                                            o.ctrl.focus(),
                                            a.root.scrollTop = b
                                        }
                                    },
                                    o.ctrl.initialized = !0,
                                    "function" == typeof o.ctrl.editorInitialized && o.ctrl.editorInitialized();
                                    var l = !1;
                                    a.on("selection-change", function(a) {
                                        a ? a.start != a.end && (l = !0) : (console.log("editor focus out."),
                                        e.cnvTextEditorOnFocusOut && b.$apply(function() {
                                            b.onFocusOut({
                                                event: {}
                                            })
                                        }))
                                    }),
                                    a.on("text-change", function(c, d) {
                                        if (l && e.cnvTextSelectionRemoved) {
                                            var f = [].map.call(a.root.querySelectorAll("." + q.AT_MENTION_DOM_CLASSES.MENTION), function(a) {
                                                return a.className
                                            });
                                            f = f.toString(),
                                            f = f.replace(new RegExp(q.AT_MENTION_DOM_CLASSES.MENTION + " " + q.AT_MENTION_DOM_CLASSES.MARKER + " ","g"), ""),
                                            b.$apply(function() {
                                                b.onTextSelectionRemoved({
                                                    $atMentionNodes: f.toString()
                                                }),
                                                l = !1
                                            })
                                        }
                                    }),
                                    a.root.addEventListener("keyup", function(c) {
                                        if (c.keyCode == i.SPACE) {
                                            var d = a.getText()
                                              , g = (a.getSelection(),
                                            !0);
                                            if (w) {
                                                var j = d.trim().split(" ");
                                                1 == j.length && f.isValidUrl(j[0]) && (b.$apply(function() {
                                                    b.onUrlAdded({
                                                        url: j[0]
                                                    })
                                                }),
                                                g = !1)
                                            }
                                            g && h()
                                        } else
                                            c.keyCode == i.ESCAPE && e.cnvTextEditorOnEscKeyPress && b.$apply(function() {
                                                b.onEscKeyPress()
                                            })
                                    }),
                                    a.root.addEventListener("keydown", function(d) {
                                        if (d.keyCode == i.SAVE || d.keyCode == i.BACKSPACE || d.keyCode == i.LEFT || d.keyCode == i.RIGHT || d.keyCode == i.TAB || d.keyCode == i.ENTER || d.keyCode == i.DELETE) {
                                            var g = !1
                                              , k = d.shiftKey || d.altKey || d.ctrlKey || d.metaKey
                                              , l = a.getSelection();
                                            if (d.keyCode == i.ENTER)
                                                a.flags.dropdownVisible || (h(!0),
                                                e.cnvTextEditorSubmitOnEnter && (k ? (a.insertText(a.getSelection().start, "\n", c, "user"),
                                                a.root.scrollTop = a.root.scrollTop + 28) : (b.$apply(function() {
                                                    b.submitOnEnter()
                                                }),
                                                console.log("enter key pressed")),
                                                g = !0),
                                                e.cnvTextEditorOnCtrlOrCmdEnterPress && (d.ctrlKey || d.metaKey) && (b.$apply(function() {
                                                    b.onCtrlOrCmdEnterPress()
                                                }),
                                                console.log("ctrl/cmd enter key pressed"),
                                                g = !0));
                                            else if (d.keyCode == i.SAVE)
                                                e.cnvTextEditorOnCtrlOrCmdSavePress && (d.ctrlKey || d.metaKey) && (b.$apply(function() {
                                                    b.onCtrlOrCmdSavePress()
                                                }),
                                                console.log("ctrl/cmd + s key pressed"),
                                                g = !0);
                                            else if (d.keyCode == i.BACKSPACE) {
                                                var m = a.root.ownerDocument.getSelection().focusNode
                                                  , n = a.root.ownerDocument.getSelection().focusOffset
                                                  , o = null ;
                                                if (m && (m.parentNode.nodeName.toLowerCase() === j.ANCHOR ? o = m.parentNode : m.previousSibling && m.previousSibling.nodeName.toLowerCase() === j.ANCHOR && !n && (o = m.previousSibling),
                                                o && -1 != o.className.indexOf(q.AT_MENTION_DOM_CLASSES.MENTION) && l && l.start == l.end)) {
                                                    var p = a.getSelection()
                                                      , r = a.getText()
                                                      , s = {
                                                        id: o.className.split(" ").pop()
                                                    };
                                                    a.once("text-change", function(c, d) {
                                                        a.root.querySelector("." + s.id) || b.$apply(function() {
                                                            b.onAtMentionRemoved({
                                                                item: s
                                                            })
                                                        })
                                                    });
                                                    var t = Math.max(r.lastIndexOf(" ", p.start), r.lastIndexOf("@", p.start));
                                                    t == p.start && (t = Math.max(r.lastIndexOf(" ", p.start - 1), r.lastIndexOf("@", p.start - 1)));
                                                    var u = p.start;
                                                    a.deleteText(t, u, "user"),
                                                    g = !0
                                                }
                                                if (l && l.start == l.end) {
                                                    var r = a.getText();
                                                    f.containsSurrogatePair(r.substr(l.start - 1, 1)) && setTimeout(function() {
                                                        var b = a.getSelection();
                                                        a.deleteText(b.start - 1, b.start, Quill.sources.USER)
                                                    }, 0)
                                                }
                                            } else if (d.keyCode == i.DELETE) {
                                                if (l && l.start == l.end) {
                                                    var r = a.getText();
                                                    f.containsSurrogatePair(r.substr(l.start, 1)) && setTimeout(function() {
                                                        var b = a.getSelection();
                                                        a.deleteText(l.start, b.start + 1, Quill.sources.USER)
                                                    }, 0)
                                                }
                                            } else if (d.keyCode != i.LEFT || k)
                                                if (d.keyCode != i.RIGHT || k)
                                                    d.keyCode == i.TAB && e.cnvTextEditorOnShiftTabPress && d.shiftKey && (b.onShiftTabPress(),
                                                    g = !0);
                                                else {
                                                    var m = a.root.ownerDocument.getSelection().focusNode
                                                      , n = a.root.ownerDocument.getSelection().focusOffset
                                                      , o = null ;
                                                    if (m && (m.parentNode.nodeName.toLowerCase() === j.ANCHOR ? o = m.parentNode : m.previousSibling && m.previousSibling.nodeName.toLowerCase() === j.ANCHOR && !n && (o = m.previousSibling),
                                                    o && -1 != o.className.indexOf(q.AT_MENTION_DOM_CLASSES.MENTION))) {
                                                        var p = a.getSelection()
                                                          , t = a.getText().indexOf(" ", p.start + 1);
                                                        t = 0 > t ? a.getLength() : t;
                                                        var u = t;
                                                        a.setSelection(t, u),
                                                        g = !0
                                                    }
                                                }
                                            else {
                                                var m = a.root.ownerDocument.getSelection().focusNode
                                                  , n = a.root.ownerDocument.getSelection().focusOffset
                                                  , o = null ;
                                                if (m && (m.parentNode.nodeName.toLowerCase() === j.ANCHOR ? o = m.parentNode : m.previousSibling && m.previousSibling.nodeName.toLowerCase() === j.ANCHOR && !n && (o = m.previousSibling),
                                                o && -1 != o.className.indexOf(q.AT_MENTION_DOM_CLASSES.MENTION))) {
                                                    var p = a.getSelection()
                                                      , t = a.getText().lastIndexOf(" ", p.start - 1);
                                                    t = 0 > t ? 0 : t;
                                                    var u = t;
                                                    a.setSelection(t, u),
                                                    g = !0
                                                }
                                            }
                                            if (g)
                                                return d.preventDefault(),
                                                d.stopImmediatePropagation(),
                                                !1
                                        }
                                    }),
                                    $(a.root).mousewheel(function(b, c) {
                                        var d = $(a.root)
                                          , e = d.scrollTop();
                                        d[0].scrollHeight > d[0].clientHeight && (0 == e && c > 0 || e == d[0].scrollHeight - d[0].clientHeight && 0 > c) && b.preventDefault()
                                    })
                                }
                            },
                            paste: {
                                pastePreProcess: function(a) {
                                    var c, d, e, g = i.parseUrl(a);
                                    if (g)
                                        c = g.title || a,
                                        d = i.linkToConvoColonUrl(g, !0),
                                        e = !0;
                                    else {
                                        var h = document.createElement("div");
                                        h.innerHTML = a;
                                        var j = h.textContent.trim();
                                        if (f.isValidUrl(j)) {
                                            if (w && !B.getText().trim())
                                                return l(function() {
                                                    b.onUrlAdded({
                                                        url: j
                                                    })
                                                }, 0),
                                                !1;
                                            c = d = j || a,
                                            d.match(/^[a-zA-Z]+:/) || (d = "http://" + d),
                                            e = !0
                                        }
                                    }
                                    if (e) {
                                        var k = B.getSelection() || {}
                                          , m = k.start || 0;
                                        return B.insertText(m, c, {
                                            link: d.trim().replace(/\'/g, "%27").replace(/amp;/g, "&")
                                        }, "user"),
                                        B.getSelection().start != B.getSelection().end && B.deleteText(B.getSelection().start, B.getSelection().end, "user"),
                                        !1
                                    }
                                },
                                pastePostProcess: function(a, c) {
                                    var d = $(B.root).find("a");
                                    if (d.length) {
                                        var g = new RegExp("/^(https?://[a-z]?links." + f.escapeRegexChars(m.HOST_DOMAIN) + "/)(.*)","i");
                                        B.getSelection(),
                                        d.length;
                                        d.each(function(a) {
                                            var c = $(this);
                                            if ("A" !== c.prop("tagName") || !c.hasClass(q.AT_MENTION_DOM_CLASSES.MENTION)) {
                                                var d = c.attr("href");
                                                if (d) {
                                                    var f = d.replace(g, "convo:/$2").replace(new RegExp(m.APP_BASE_URL + "#","i"), "convo:")
                                                      , h = i.parseUrl(d)
                                                      , k = c.text();
                                                    if (h && h.type === i.FILTER_LINK) {
                                                        var l = null ;
                                                        if (h.filter && 1 == h.filter.filters.length) {
                                                            var n = h.filter.filters[0];
                                                            (n.type == j.TO || n.type == j.FROM) && (l = q.getPublishableUserListItem(n.value) || q.getPublishableGroupListItem(n.value) || null )
                                                        }
                                                        var o = B.editor.selection._positionToIndex(c[0], 0)
                                                          , p = o + B.editor.selection._encodePosition(c[0])[1];
                                                        B.deleteText(o, p, "user"),
                                                        l ? B.insertText(o, k, {
                                                            link: f.trim().replace(/\'/g, "%27"),
                                                            addclass: q.AT_MENTION_DOM_CLASSES.MENTION + " " + q.AT_MENTION_DOM_CLASSES.MARKER + " " + l.id
                                                        }, "user") : B.insertText(o, k, {
                                                            link: f.trim().replace(/\'/g, "%27")
                                                        }, "user"),
                                                        l && e.cnvOnAtMentionAdded && b.$apply(function() {
                                                            b.onAtMentionAdded({
                                                                item: l
                                                            })
                                                        })
                                                    } else
                                                        c[0].setAttribute("href", f.trim())
                                                }
                                            }
                                        })
                                    }
                                }
                            }
                        }
                    };
                    ("full" == r || "basic" == r || "minimal" == r) && (A.modules.mention = {
                        queryBy: "label",
                        delay: 100,
                        delimiter: ["@", ":"],
                        source: function(a, c, d) {
                            b.atMentionsSource({
                                $query: a,
                                delimiter: d
                            }).then(function(a) {
                                c(a)
                            })
                        },
                        insert: function(a, c) {
                            if (a.hasOwnProperty("type") && "cmd" == a.type) {
                                var d = c.split(" ");
                                d.shift(),
                                d = d.join(" "),
                                b.$apply(function() {
                                    b.onCommandExecuted({
                                        item: a,
                                        search: d
                                    })
                                })
                            } else
                                !a.hasOwnProperty("type") || "USER" != a.type && "GROUP" != a.type || b.$apply(function() {
                                    b.onAtMentionAdded({
                                        item: a
                                    })
                                });
                            return a.hasOwnProperty("type") && "EMOJI" == a.type && n.updateFrequentEmojiData(a.short_name),
                            a.label += "",
                            {
                                id: a.id,
                                type: a.type,
                                unicode: a.unicode,
                                href: "convo:" + g(a.id, a.type, !0).slice(1),
                                value: "@" + a.label,
                                classes: q.AT_MENTION_DOM_CLASSES.MENTION + " " + q.AT_MENTION_DOM_CLASSES.MARKER + " " + a.id
                            }
                        },
                        render: function(a) {
                            var b = "USER" == a.type ? -1 != a.imgurl.indexOf("user-images/default-user/thumbnails/") ? '<span style="height:32px; width:32px; font-style: normal; line-height:32px; font-size: inherit; text-align: center; border-radius: 100%; background-color:' + f.stringToColor(a.label) + '">' + f.initials(a.label) + "</span>" : '<img src="' + a.imgurl + '" class="usr-img-32 img-circle"/>' : '<span style="height:32px; width:32px; font-style: normal; line-height:32px; font-size: inherit; text-align: center; border-radius: 4px; background-color:#fff; color:#7b8386">. .</span>';
                            return "cmd" == a.type && (b = '<div style=" background-color:#fff; border-radius:50%; overflow: hidden;"><img src="' + a.imgurl + '" class="usr-img-32 ' + a.imgClasses + '"/></div>'),
                            "EMOJI" == a.type && (b = a.render),
                            '<li class="dropdown-item-cont"><a href="javascript:;"><div class="img-label-list-item"><cnv-user-profile-image class="' + a.classes + '">' + b + "</cnv-user-profile-image><span>" + ("EMOJI" === a.type ? a.formattedlabel : h("escapeHtmlXSS")(a.formattedlabel)) + "</span><span>" + ("EMOJI" === a.type ? a.formatteddesclabel : h("escapeHtmlXSS")(a.formatteddesclabel)) + "</span></div></a></li>"
                        }
                    }),
                    ("full" == r || "basic" == r) && (A.modules.hashtag = {
                        queryBy: "label",
                        delay: 250,
                        source: function(a, c, d) {
                            e.cnvHashtags && b.hashtagSource({
                                $query: d + a
                            }).then(function(a) {
                                c(a)
                            })
                        },
                        insert: function(a) {
                            return b.$apply(function() {
                                b.onHashTagAdded({
                                    item: a
                                })
                            }),
                            a.label += "",
                            {
                                value: a.label,
                                classes: "cnv-hashtag"
                            }
                        },
                        render: function(a) {
                            return '<li class="dropdown-item-cont"><a href="javascript:;">' + h("escapeHtmlXSS")(a.formattedlabel) + "</a></li>"
                        }
                    });
                    var B = new Quill("#" + x,A);
                    "full" == r && s && document.getElementById(s) && (setTimeout(function() {
                        B.addModule("toolbar", {
                            container: "#" + s
                        })
                    }, 0),
                    B.onModuleLoad("toolbar", function(a) {
                        function b() {
                            B.focus();
                            var a = !1
                              , b = B.getSelection()
                              , d = $(B.root.childNodes).scrollParent()[0]
                              , e = d.scrollTop;
                            0 == B.getText().trim().length && (B.insertText(0, ".", c, "user"),
                            a = !0);
                            var f = "common/dialogs/templates/cnvResolveLinkModal.tpl.html"
                              , g = "cnvAddPinContentModalCtrl"
                              , h = {
                                resource_name: function() {
                                    return B.getText().substr(b.start, b.end - b.start)
                                },
                                resource_url: function() {
                                    return ""
                                },
                                provided_desc: function() {
                                    return ""
                                },
                                title: function() {
                                    return !1
                                },
                                btnTitle: function() {
                                    return !1
                                },
                                source: function() {
                                    return "show_suggestion"
                                }
                            }
                              , i = k.customModal(f, g, h);
                            i.result.then(function(c) {
                                setTimeout(function() {
                                    if (B.focus(),
                                    a && B.deleteText(0, 1, "user"),
                                    c && b) {
                                        b.start != b.end && B.deleteText(b.start, b.end, "user");
                                        var d = c.url
                                          , e = c.resource_name;
                                        B.insertText(b.start, e, {
                                            link: d.trim().replace(/\'/g, "%27")
                                        }, "user");
                                        var f = B.getSelection();
                                        f && 0 === f.start && 0 === f.end && (console.log("Edit selection messedup bug handled gracefully."),
                                        B.setSelection(b.start + e.length, b.start + e.length))
                                    }
                                }, 0),
                                d.scrollTop = e
                            }, function() {
                                setTimeout(function() {
                                    B.focus(),
                                    a && B.deleteText(0, 1, "user")
                                }, 0),
                                d.scrollTop = e
                            })
                        }
                        function d(a) {
                            var b = $(B.root).scrollParent()[0]
                              , c = {
                                editorScrollParentPos: b.scrollTop,
                                editorScrollPos: B.root.scrollTop
                            };
                            setTimeout(function() {
                                b.scrollTop = c.editorScrollParentPos,
                                B.root.scrollTop = c.editorScrollPos
                            }, 0)
                        }
                        function e(a) {
                            a.preventDefault()
                        }
                        function f() {
                            a.container.querySelector(".ql-inline-link").removeEventListener("click", b),
                            a.container.removeEventListener("click", d, !0),
                            a.container.removeEventListener("mousedown", e, !0)
                        }
                        var g = $(a).find(".ql-color.ql-picker.ql-color-picker")
                          , h = g.find(".ql-picker-label");
                        h.append("<i></i>"),
                        g.find(".ql-picker-options").mouseup(function() {
                            h.css({
                                "background-color": h.attr("data-value")
                            })
                        }),
                        a.container.querySelector(".ql-inline-link").addEventListener("click", b),
                        a.container.addEventListener("click", d, !0),
                        a.container.addEventListener("mousedown", e, !0),
                        B.__nuke__._unregister_EventListeners = f
                    })),
                    B.onModuleLoad("paste-manager", function(a) {
                        var b = B.root
                          , c = 0
                          , d = !1
                          , e = $(b).scrollParent()[0]
                          , f = 0;
                        b.addEventListener("paste", function(a) {
                            f = e.scrollTop,
                            c = b.scrollTop,
                            d = !0
                        }, !0),
                        B.on("selection-change", function() {
                            if (d) {
                                e.scrollTop = f,
                                b.scrollTop = c,
                                d = !1;
                                var a = function(a) {
                                    return e.scrollTop = f,
                                    b.scrollTop = c,
                                    a.preventDefault(),
                                    a.stopImmediatePropagation(),
                                    !1
                                }
                                ;
                                e.addEventListener("scroll", a, !0),
                                setTimeout(function() {
                                    e.removeEventListener("scroll", a, !0)
                                }, 0),
                                B.root.scrollHeight > B.root.clientHeight && setTimeout(function() {
                                    var a = B.getSelection();
                                    if (a) {
                                        var b = B.editor.doc.findLineAt(a.start)[0];
                                        lineOffset = b.node.offsetTop + $(b.node).height(),
                                        lineOffset > B.root.scrollTop + B.root.clientHeight && (B.root.scrollTop = lineOffset - B.root.clientHeight)
                                    }
                                }, 0)
                            }
                        })
                    }),
                    b.$on("$destroy", function() {
                        o.ctrl.collaboration && o.ctrl.collaboration.initialized && o.ctrl.collaboration.dispose();
                        for (var a in B.__nuke__)
                            B.__nuke__.hasOwnProperty(a) && B.__nuke__[a]();
                        e.cnvTextEditorOnDestroy && b.onEditorDestroy(),
                        e.cnvTextEditorOnFocusOut && b.onFocusOut({
                            event: {}
                        }),
                        o.ctrl.destroy.flush = !0,
                        B.destroy(),
                        o.ctrl.initialized = !1
                    })
                }
            },
            controller: ["$scope", function(a) {
                this.ctrl = a.ctrl,
                this.ctrl || (this.ctrl = {}),
                this.ctrl.getEditorHtmlText = null ,
                this.ctrl.getEditorText = null ,
                this.ctrl.setContent = null ,
                this.ctrl.clearContent = null 
            }
            ]
        }
    }
    ]),
    b.module("convoApp").factory("config", function() {
        var b = {};
        _.extend(b, Backbone.Events),
        b.APP_VERSION = a.com_convo.clientVersion,
        b.VENDOR_VERSION = "2015.11.03.01",
        b.VENDOR_GALLERY_VERSION = "2015.09.14.01",
        b.IS_NATIVE = !1,
        b.IS_WINDOWS = !1,
        b.IS_MAC = !1,
        b.IS_MENULET = !1,
        b.IS_DEV = !1,
        b.setClientType = function() {
            b.CLIENT_TYPE = b.IS_NATIVE || b.IS_MENULET ? "p2" : "w2",
            b.trigger("clientTypeUpdated")
        }
        ,
        b.setClientType(),
        b.FACEBOOK_APP_ID = "724834957650563",
        b.LINKEDIN_API_KEY = "77qzs1o9i931no",
        b.APPEARIN_VIDEO_CALL_DIRECT_LINK_PREFIX = "https://appear.in/",
        b.ROOM_VIDEO_CALL_DIRECT_LINK_PREFIX = "https://room.co/#/convo-",
        b.GOOGLE_HANGOUTS_CONVO_APP_LINK_PREFIX = "https://plus.google.com/hangouts/_/",
        b.COMPACT_VIEW_UNSCALED_WIDTH = 690;
        var c = location.host.split(".")
          , d = c.slice(Math.max(c.length - 2, 1));
        return b.WHITELIST_URLS_REGEX = "(https?:\\/\\/.*\\." + d[0] + "\\.com\\/app\\/integrations\\/connect\\/splash\\.php.*|https?:\\/\\/.*\\." + d[0] + "\\.com\\/app\\/contacts\\/ImportGmailContacts\\.php.*|https?:\\/\\/.*\\.convo\\.com\\/app\\/oauth2_client\\/google\\/splash\\.php.*|https?:\\/\\/.*\\.convo\\.com\\/app\\/oauth2_client\\/facebook\\/splash\\.php.*|https?:\\/\\/.*\\.convo\\.com\\/app\\/oauth2_client\\/twitter\\/splash\\.php.*|https?:\\/\\/.*\\.convo\\.com\\/app\\/oauth2_client\\/dropbox\\/splash\\.php.*|https?:\\/\\/.*\\.convo\\.com\\/app\\/oauth2_client\\/box\\/splash\\.php.*|https?:\\/\\/.*\\." + d[0] + "\\.com\\/app\\/integrations\\/connect\\/splash\\.php.*|https?:\\/\\/.*\\." + d[0] + "\\.com\\/app\\/hybridauth\\/twitter\\.php.*|https?:\\/\\/www\\.facebook\\.com\\/.*\\/dialog\\/oauth.*|https?:\\/\\/platform\\.linkedin\\.com\\/js\\/.*|https?:\\/\\/www\\.dropbox\\.com\\/chooser.*|https?:\\/\\/app.box.com\\/index\\.php\\?rm=box_select_view.*|https?:\\/\\/accounts\\.google\\.com\\/o\\/oauth2\\/auth.*|https?:\\/\\/.*\\.convo\\.com\\/app\\/oauth2_client\\/o365\\/splash\\.php.*)",
        b.API_VERSION = "v1",
        b.FEED_SERVICES_VERSION = "20150918",
        b.XMPP_SERVER = "bosh.convo.com",
        b.XMPP_DOMAIN = "xmpp.convo.com",
        b.SECURE_COMM = !0,
        b.WEBSITE_DOMAIN = "https://www.convo.com/",
        b.HOST_DOMAIN = d[0] + "." + d[1],
        b.APP_DOMAIN = location.protocol + "//" + location.host,
        b.APP_BASE_URL = location.protocol + "//" + location.host + location.pathname,
        b.FLEX_APP_URL = "https://app.convo.com/web/",
        b.CONVO_LINKS_BASE_URL = "http://links.convo.com",
        b.HTML_APP_DOWNLOAD_URL = b.APP_DOMAIN + "/app/app_download.php",
        b.LOGIN_URL = "/app/login/",
        b.LOGOUT_URL = b.LOGIN_URL + "?logout=1",
        b.AWS_FILE_DIR_BASE = "https://fs3.app.convo.com/api/" + b.API_VERSION + "/files/",
        b.AWS_FILE_DIR_BASE_FOR_NO_AUTH = "https://app.convo.com/api/" + b.API_VERSION + "/files/",
        b.AWS_FILE_DIR_NUM_SUBDOMAINS = 3,
        b.getAwsFileDirBaseForNoteFiles = function(a) {
            return "https://fs" + Math.abs(a % b.AWS_FILE_DIR_NUM_SUBDOMAINS - b.AWS_FILE_DIR_NUM_SUBDOMAINS) + ".app.convo.com/api/" + b.API_VERSION + "/files/"
        }
        ,
        b.GOOGLE_SPLASH_URL = "https://api.convo.com/app/oauth2_client/google/splash.php",
        b.TWITTER_SPLASH_URL = "https://api.convo.com/app/oauth2_client/twitter/splash.php",
        b.DROPBOX_SPLASH_URL = "https://api.convo.com/app/oauth2_client/dropbox/splash.php",
        b.BOX_SPLASH_URL = "https://api.convo.com/app/oauth2_client/box/splash.php",
        b.FACEBOOK_SPLASH_URL = "https://api.convo.com/app/oauth2_client/facebook/splash.php",
        b.O365_SPLASH_URL = "https://api.convo.com/app/oauth2_client/o365/splash.php",
        b.TWITTER_PIC_POPUP_URL = b.APP_DOMAIN + "/app/hybridauth/twitter.php",
        b.REST_URL = "/api/" + b.API_VERSION + "/",
        b.FEED_REST_URL = "/fserver/index_services_" + b.FEED_SERVICES_VERSION + "/scrybe/",
        b.WEBSITE_TERMS_BILLING_PAGE = "https://www.convo.com/terms/billing/",
        b.INTERCOM_IO_APP_ID = "hb2ontzy",
        b
    }),
    b.module("convoApp").constant("FeedActionTypes", {
        ADDED: "ADDED",
        UPDATED: "UPDATED",
        DISCUSSION: "DISCUSSION"
    }),
    b.module("convoApp").directive("cnvFeed", ["$rootScope", "$window", "logger", "utils", function(d, e, f, g) {
        return {
            restrict: "AE",
            priority: 0,
            scope: !1,
            compile: function(b, d, h) {
                return function(b, d, h, i) {
                    function j(a) {
                        return d[0].contains(a)
                    }
                    function k() {
                        if (!b.tab.selected)
                            return f.log("cnvFeed.scrollHandler(): returning because home tab is not active"),
                            !0;
                        if (p)
                            return f.log("cnvFeed.scrollHandler(): returning because scroll on activation is pending"),
                            !0;
                        var a = n.scrollTop();
                        b.feedScrolledMoreThanOneFeedItem = !1,
                        0 >= a ? o > 0 && (f.log("cnvFeed.scrollHandler(): feed scrolled to top"),
                        b.$$phase ? b.onFeedScrolledToTop() : b.$apply(b.onFeedScrolledToTop)) : a > 270 && (b.feedScrolledMoreThanOneFeedItem = !0),
                        o = a
                    }
                    function l(a, b) {
                        b ? k() : (p = !0,
                        f.log("cnvFeed.activated: scroll on activation pending. prevScrollTop: " + o),
                        setTimeout(function() {
                            f.log("cnvFeed.activated: scrolling on activation. prevScrollTop: " + o),
                            p = !1,
                            n.scrollTop(o)
                        }, 600))
                    }
                    function m() {
                        var a = n.scrollTop()
                          , c = n.height()
                          , e = {}
                          , f = d.find("cnv-feed-item");
                        f.each(function() {
                            var b = $(this).position().top
                              , d = $(this).height();
                            b + d > a && a + c > b && (e[$(this).attr("id")] = !0)
                        }),
                        f = null ,
                        b.$broadcast("cnvNoteGallery:unloadThumbnails", e),
                        b.$broadcast("cnvNoteGallery:reloadThumbnails", e)
                    }
                    var n = $(e)
                      , o = n.scrollTop()
                      , p = !1;
                    b.getFeedItemsInView = m,
                    b.$watch("server_now_timestamp", function() {
                        e.setTimeout(function() {
                            b.$broadcast("render_date")
                        }, 0)
                    }),
                    b.isUserWritingCommentOnFeedItem = function(a) {
                        if (!b.isCommentEditingInProgress())
                            return !1;
                        var c;
                        return c = b.isMyFeed() ? $(".my-feed-cont", d) : $(".filtered-feed-cont", d),
                        document.activeElement === c.find("#" + a + " .ql-editor")[0]
                    }
                    ,
                    b.isCommentEditingInProgress = function() {
                        var a = document.activeElement && j(document.activeElement) && $(document.activeElement).hasClass("ql-editor");
                        return f.log(">>> Is feed item comment editing in progress: " + a),
                        a
                    }
                    ,
                    b.isVideoPlaying = function() {
                        for (var a = $(".feedVideoPlayer", d), b = !1, c = 0; c < a.length; c++) {
                            var e = a[c];
                            e.paused || (b = !0)
                        }
                        return $(".videoPlaying", d).length > 0 && (b = !0),
                        a = null ,
                        b
                    }
                    ,
                    b.isVideoFullScreen = function() {
                        for (var a = $("video", d), b = !1, c = 0; c < a.length; c++) {
                            var e = a[c];
                            $(e).height() === screen.height && (b = !0)
                        }
                        for (var f = $("iframe", d), c = 0; c < f.length; c++) {
                            var e = f[c];
                            console.info($(e).height() + "===" + screen.height),
                            $(e).height() === screen.height && (b = !0)
                        }
                        return a = null ,
                        f = null ,
                        b
                    }
                    ,
                    b.setScrollTop = function() {
                        var b = g.isIE() ? document.body.parentNode : document.body;
                        $(b).animate({
                            scrollTop: 0
                        }, {
                            duration: 400,
                            complete: function() {
                                var b = function(a) {
                                    return a.preventDefault(),
                                    a.stopImmediatePropagation(),
                                    n.scrollTop(0),
                                    !1
                                }
                                ;
                                a.addEventListener("scroll", b, !0),
                                setTimeout(function() {
                                    a.removeEventListener("scroll", b, !0)
                                }, 200)
                            }
                        })
                    }
                    ,
                    document.fullscreenEnabled !== c ? document.addEventListener("fullscreenchange", function() {
                        null  === document.fullscreenElement && b.onFullScreenExit()
                    }, !1) : document.mozFullScreenEnabled !== c ? document.addEventListener("mozfullscreenchange", function() {
                        null  === document.mozFullScreenElement && b.onFullScreenExit()
                    }, !1) : document.webkitFullscreenEnabled !== c ? document.addEventListener("webkitfullscreenchange", function() {
                        null  === document.webkitFullscreenElement && b.onFullScreenExit()
                    }, !1) : document.msFullscreenEnabled !== c && document.addEventListener("MSFullscreenChange", function() {
                        null  === document.msFullscreenElement && b.onFullScreenExit()
                    }, !1),
                    a.addEventListener("scroll", _.throttle(k, 250)),
                    a.addEventListener("scroll", _.debounce(m, 500)),
                    b.$on("activated", l)
                }
            },
            controller: ["$scope", "Feed", "$filter", "$interval", "$timeout", "Filters", "FilterTypes", "datetimeService", "chatService", "userInfo", "bannerService", "Comments", "serverPingService", "Likes", "appTabs", "alertsService", "accountInfo", "config", "filterInfo", "usersGroupsListProvider", "Group", "User", "itemService", function(a, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B) {
                function C() {
                    return {
                        feed_items: [],
                        feedItemsPendingMerge: [],
                        num_displayed: 0,
                        all_fetched: !1,
                        fetching: !1,
                        feed_ids_map: {},
                        feedItemsUpdatesAvailable: !1,
                        isTextSearch: !1,
                        isFirstFeedFetchDone: !1
                    }
                }
                function D(a) {
                    f.log(a, !0)
                }
                function E() {
                    return v.isTNWAccount() || v.isConvoAccount()
                }
                function F() {
                    var b = a.feed_data;
                    if (!b.fetching) {
                        b.fetching = !0;
                        var c = !1
                          , d = 0;
                        if (b.num_displayed < b.feed_items.length) {
                            for (var e = b.feed_items.length - b.num_displayed, g = Math.min(Ja, e), h = 0; g > h; h++)
                                b.feed_items[h + b.num_displayed]._hide = !1;
                            b.num_displayed += g,
                            f.log("FEED_DEBUG: displayed: " + a.feed_data.num_displayed + " total: " + a.feed_data.feed_items.length + " filter-applied: " + Pa),
                            e -= g,
                            c = Ja > e,
                            d = Ja - g
                        } else
                            c = !0,
                            d = Ja;
                        b.all_fetched && (c = !1),
                        c ? G(b, Ja, d) : b.fetching = !1
                    }
                }
                function G(b, c, d) {
                    var h = b.feed_items.length
                      , i = 0;
                    if (b.feedItemsPendingMerge.length > 0)
                        for (var j = b.feedItemsPendingMerge, k = {}, l = b.feed_ids_map, m = 0, n = j.length; n > m; m++) {
                            var o = j[m].feed_id;
                            k.hasOwnProperty(o) || (k[o] = !0,
                            l.hasOwnProperty(o) || i++)
                        }
                    h += i,
                    g.fetchFeed(h, c, Qa, Ra, Sa).then(function(g) {
                        var j = g.data
                          , k = g.status;
                        if (200 == k && j.feed_items) {
                            for (var l = j.feed_items.length, m = [], n = b.feed_ids_map, o = 0; l > o; o++)
                                n[j.feed_items[o].feed_id] || m.push(j.feed_items[o]);
                            L(b, m, d);
                            var p = l - m.length;
                            f.log("cnvFeed.loadMoreFeed_fetchFeed: offset=" + h + ", offsetOffset=" + i + ", numItemsRequested=" + c + ", numResponseFeedItems=" + l + ", numAlreadyPresent=" + p + ", numHidden=" + (b.feed_items.length - b.num_displayed)),
                            b.isFirstFeedFetchDone || (b.isFirstFeedFetchDone = !0,
                            a.getFeedItemsInView && e.setTimeout(function() {
                                a.getFeedItemsInView()
                            }, 200)),
                            c > l ? (b.all_fetched = !0,
                            b.fetching = !1) : b.feed_items.length - b.num_displayed < Ja ? (m.length < d ? (d -= m.length,
                            f.log("cnvFeed.loadMoreFeed_fetchFeed: num_to_display_after_fetch=" + d)) : d = 0,
                            G(b, Ja + p, d)) : b.fetching = !1
                        } else
                            204 == k && (b.isFirstFeedFetchDone || (b.isFirstFeedFetchDone = !0),
                            b.all_fetched = !0,
                            b.fetching = !1)
                    }, function(a) {
                        f.error("feed fetch error", a),
                        b.fetching = !1
                    })
                }
                function H(c, e, h) {
                    if (!La) {
                        La = !0;
                        var i = b.copy(Qa)
                          , j = g.pollFeed(Ka, i, Ra, Sa)
                          , k = Date.now()
                          , m = "\nFEED POLL:\nTrigger: " + (h || "OTHER") + "\nIsNativeApp: " + (w.IS_NATIVE ? "Y" : "N") + "\nTabId: " + d.clientInstanceId + "\nCall start TS: " + k + "\n";
                        j.then(function(c) {
                            if (c = c.data,
                            La = !1,
                            Ka = c.last_feed_poll_timestamp,
                            m += "Call end TS: " + Date.now() + "\n",
                            c.feed_items && c.feed_items.length > 0) {
                                Ma.feedItemsPendingMerge = Ma.feedItemsPendingMerge.concat(c.feed_items),
                                Ma.feedItemsUpdatesAvailable = !1;
                                var d = I(Ma);
                                d.updatesFromOtherUsers && a.$emit("feedUpdatesFromOtherUsersReceived"),
                                m += "feed_items count: " + c.feed_items.length + "\nfeed_items max/min: " + c.feed_items[0].feed_id + " (" + c.feed_items[0].timestamp + ") / " + c.feed_items[c.feed_items.length - 1].feed_id + " (" + c.feed_items[c.feed_items.length - 1].timestamp + ")\n"
                            } else
                                m += "feed_items count: ZERO\n";
                            if (Pa && b.equals(Qa, i)) {
                                var e = W(l.IN, l.IN_TRASH);
                                if (c.filter_feed_items && c.filter_feed_items.length > 0 ? (Na.feedItemsPendingMerge = Na.feedItemsPendingMerge.concat(c.filter_feed_items),
                                Na.feedItemsUpdatesAvailable = !1,
                                I(Na, !1, e),
                                m += "filter_feed_items count: " + c.filter_feed_items.length + "\nfilter_feed_items max/min: " + c.filter_feed_items[0].feed_id + " (" + c.filter_feed_items[0].timestamp + ") / " + c.filter_feed_items[c.filter_feed_items.length - 1].feed_id + " (" + c.filter_feed_items[c.filter_feed_items.length - 1].timestamp + ")\n") : m += "filter_feed_items count: ZERO\n",
                                c.feed_items && c.feed_items.length > 0) {
                                    for (var f = [], g = [], h = c.feed_items, j = h.length, k = 0; j > k; k++) {
                                        var n = h[k].action;
                                        "DOUBLE_DELETED" === n || 2 == h[k].deleted ? f.push(h[k]) : "RESTORED" === n && g.push(h[k])
                                    }
                                    if (!o.isAdminMode() && f.length > 0 && e)
                                        for (var k = 0; k < f.length; k++)
                                            M(Na, f[k].feed_id);
                                    if (g.length > 0 && e)
                                        for (var k = 0; k < g.length; k++)
                                            M(Na, g[k].feed_id);
                                    if (W(l.IN, l.IN_STARRED))
                                        for (var k = 0; j > k; k++)
                                            0 === h[k].starred && M(Na, h[k].feed_id);
                                    if (W(l.IN, l.IN_DRAFTS))
                                        for (var k = 0; j > k; k++)
                                            0 === h[k].draft && M(Na, h[k].feed_id)
                                }
                            }
                            X(a.feed_data),
                            0 !== a.feed_data.feedItemsPendingMerge.length || a.feedScrolledMoreThanOneFeedItem || a.isVideoPlaying() || R(),
                            ka(),
                            E() && D(m)
                        }, function(a) {
                            f.error("feed poll error", a),
                            La = !1,
                            m += "Call end TS: " + Date.now() + "\nPOLL FAILED: " + a.status + "; " + a.statusText + "; " + a.customStatus + "\n",
                            E() && D(m)
                        }),
                        e && p.showBanner_promise(j, "Loading...", null , null , !1, !1, null )
                    }
                }
                function I(b, d, e) {
                    var g = {}
                      , h = "\nFEED POLL MERGE:";
                    if (0 === b.feedItemsPendingMerge.length)
                        return h += "\nnothing to merge",
                        E() && D(h),
                        g;
                    var i = !1
                      , j = !1
                      , k = []
                      , l = o.getUserId()
                      , m = b.feed_ids_map
                      , n = 0
                      , p = "0000-00-00 00:00:00.0";
                    if (b.feed_items.length > 0) {
                        n = b.feed_items[0].timestamp,
                        p = b.feed_items[0].created_date;
                        for (var r = 1; r < b.feed_items.length; r++)
                            b.feed_items[r].timestamp < n && (n = b.feed_items[r].timestamp,
                            p = b.feed_items[r].created_date)
                    }
                    h += "\nnum to merge: " + b.feedItemsPendingMerge.length,
                    h += "\noldest feed item ts/created_date: " + n + "/" + p;
                    for (var r = 0; r < b.feedItemsPendingMerge.length; r++) {
                        var s, t = b.feedItemsPendingMerge[r], v = !1;
                        if (m[t.feed_id] !== c ? (v = !0,
                        s = b.feed_items[T(b.feed_items, "feed_id", t.feed_id)],
                        t._actions = s._actions) : t._actions = {},
                        h += "\nitem: " + t.feed_id + "; " + t.action + ";			" + t.timestamp + "; exists=" + (v ? "Y" : "N"),
                        "DELETED" === t.action || "DOUBLE_DELETED" === t.action || t.deleted > 0)
                            if (h += "; DELETE block",
                            e && (o.isAdminMode() || "DOUBLE_DELETED" !== t.action && 2 != t.deleted))
                                J(b, [t], !1, !0, o.isAdminMode()),
                                b.feedItemsPendingMerge.splice(r, 1),
                                r--;
                            else {
                                b === a.feed_data && a.isUserWritingCommentOnFeedItem(t.feed_id) ? u.alertModal("", "The post you were commenting on has just been deleted by its creator.", "Okay", function() {
                                    M(b, t.feed_id)
                                }) : (M(b, t.feed_id),
                                v && !s._hide && S(b, 1));
                                for (var w = b.feedItemsPendingMerge[r].feed_id, x = 0; x < b.feedItemsPendingMerge.length; ++x)
                                    b.feedItemsPendingMerge[x].feed_id === w && (b.feedItemsPendingMerge.splice(x, 1),
                                    --x,
                                    --r)
                            }
                        else if (t.silent_update_timestamp > t.timestamp)
                            h += "; silentUpdate block",
                            v ? ("LIKE" === t.action && t.like_info.liked_by !== l ? (t._actions.liked = !0,
                            1 === t.like_info.likes_count && 0 === t.conversations_count && (t._actions.firstLike = !0)) : (t._actions.liked = !1,
                            t._actions.firstLike = !1),
                            k.push(t)) : t.timestamp < n && (h += "; ignoring",
                            b.feedItemsPendingMerge.splice(r, 1),
                            r--);
                        else if ("DISCUSSION" !== t.action && t.updated_by !== l || "DISCUSSION" === t.action && t.conversations[0].from_user !== l) {
                            if (i = !0,
                            h += "; fromOtherUser block",
                            v && "UPDATED" === t.action)
                                k.push(t),
                                (t._actions.updatedByOtherUser_TS === c || t.last_modified_date > t._actions.updatedByOtherUser_TS) && (t._actions.updatedByOtherUser_TS = t.last_modified_date,
                                t._actions.updatedByOtherUser = !0);
                            else if (v && "DISCUSSION" === t.action) {
                                k.push(t);
                                for (var y, z = t.conversations ? t.conversations.length : 0, A = 0; z > A; A++)
                                    if (2 != t.conversations[A].update_kind) {
                                        y = t.conversations[A];
                                        break
                                    }
                                y !== c && (t._actions.unreadComments || (t._actions.unreadComments = {}),
                                t._actions.unreadComments_updateTS || (t._actions.unreadComments_updateTS = {}),
                                (t._actions.unreadComments_updateTS[y.uid] === c || y.update_timestamp > t._actions.unreadComments_updateTS[y.uid]) && (q.markCommentAsUnread(t.app_instance_id, t.resource_id, y.uid),
                                t._actions.unreadComments_updateTS[y.uid] = y.update_timestamp,
                                t._actions.unreadComments[y.uid] = !0))
                            }
                            !v && ("ADDED" === t.action || t.created_date > p) && (j = !0)
                        } else
                            ("UPDATED" === t.action || "DISCUSSION" === t.action) && (h += "; thisUser block",
                            v && k.push(t),
                            f.log("feed item updated as a result of current user's action"))
                    }
                    return g.updatesFromOtherUsers = i,
                    0 === b.feedItemsPendingMerge.length ? (h += "\nnothing to merge (2)",
                    E() && D(h),
                    b.feedItemsUpdatesAvailable = !1,
                    g) : (h += "\nnum to merge (2): " + b.feedItemsPendingMerge.length,
                    !d && (Ra || a.feedScrolledMoreThanOneFeedItem || a.isCommentEditingInProgress() || a.isVideoFullScreen()) ? (h += "\nINCOMPLETE merge: num_merge_without_re_sort: " + k.length,
                    k.length > 0 && J(b, k, !0),
                    b.feedItemsUpdatesAvailable = j) : (h += "\ncomplete merge" + (d ? " (forced)" : ""),
                    J(b, b.feedItemsPendingMerge),
                    b.feedItemsPendingMerge = [],
                    b.feedItemsUpdatesAvailable = !1),
                    E() && D(h),
                    g)
                }
                function J(a, b, c, d, e) {
                    for (var f = 0; f < b.length; f++) {
                        var g = b[f];
                        "DOUBLE_DELETED" === g.action || 2 == g.deleted ? e ? K(a, g, c) : M(a, g.feed_id) : "DELETED" === g.action || 1 == g.deleted ? d ? K(a, g, c) : M(a, g.feed_id) : K(a, g, c)
                    }
                }
                function K(b, c, d) {
                    var e = b.feed_items
                      , g = b.feed_ids_map
                      , h = c.timestamp
                      , i = 0
                      , j = c.feed_id;
                    if (qa(c),
                    c._dirty = !0,
                    g[j] ? (i = T(e, "feed_id", j),
                    c._hide = e[i]._hide,
                    e[i] = c) : (c._actions._new = !0,
                    e.unshift(c),
                    g[j] = !0,
                    b.num_displayed++,
                    f.log("FEED_DEBUG: displayed: " + a.feed_data.num_displayed + " total: " + a.feed_data.feed_items.length + " filter-applied: " + Pa)),
                    !d)
                        if (1 == e.length || (0 == i || h <= e[i - 1].timestamp) && (i == e.length - 1 || h >= e[i + 1].timestamp))
                            ;
                        else {
                            e.splice(i, 1);
                            for (var k = 0, l = 0; l < e.length; l++) {
                                if (!(h < e[l].timestamp)) {
                                    k = l;
                                    break
                                }
                                k++
                            }
                            e.splice(k, 0, c),
                            c._hide && (c._hide = !1,
                            b.num_displayed++,
                            f.log("FEED_DEBUG: displayed: " + a.feed_data.num_displayed + " total: " + a.feed_data.feed_items.length + " filter-applied: " + Pa))
                        }
                }
                function L(b, c, d) {
                    var e = b.feed_items
                      , g = b.feed_ids_map;
                    b.num_displayed += Math.min(d, c.length),
                    f.log("FEED_DEBUG: displayed: " + a.feed_data.num_displayed + " total: " + a.feed_data.feed_items.length + " filter-applied: " + Pa);
                    for (var h = 0; h < c.length; h++) {
                        var i = c[h];
                        h > d - 1 && (i._hide = !0),
                        i._actions = {},
                        qa(i),
                        i._dirty = !0,
                        e.push(i),
                        g[i.feed_id] = !0
                    }
                }
                function M(b, c) {
                    var d = b.feed_ids_map;
                    if (d[c]) {
                        var e = b.feed_items
                          , g = T(e, "feed_id", c);
                        e[g]._hide || (b.num_displayed--,
                        f.log("FEED_DEBUG: displayed: " + a.feed_data.num_displayed + " total: " + a.feed_data.feed_items.length + " filter-applied: " + Pa)),
                        e.splice(g, 1),
                        delete d[c]
                    }
                }
                function N(b, c) {
                    for (var d = b.feed_ids_map, e = b.feed_items, g = b.feedItemsPendingMerge, h = {}, i = 0, j = c.length; j > i; i++)
                        h[c[i]] = !0;
                    for (var i = e.length - 1; i >= 0; i--) {
                        var k = e[i];
                        h.hasOwnProperty(k.feed_id) && (k._hide || (b.num_displayed--,
                        f.log("FEED_DEBUG: displayed: " + a.feed_data.num_displayed + " total: " + a.feed_data.feed_items.length + " filter-applied: " + Pa)),
                        e.splice(i, 1),
                        delete d[k.feed_id])
                    }
                    for (var i = g.length - 1; i >= 0; i--) {
                        var k = g[i];
                        h.hasOwnProperty(k.feed_id) && g.splice(i, 1)
                    }
                    0 === g.length && (b.feedItemsUpdatesAvailable = !1)
                }
                function O(a) {
                    P(Ma, a),
                    P(Na, a)
                }
                function P(a, b) {
                    var c = a.feed_items;
                    if (0 !== c.length) {
                        for (var d = [], e = {}, g = 0, h = b.length; h > g; g++)
                            e[b[g]] = !0;
                        for (var g = 0, h = c.length; h > g; g++) {
                            var i = c[g];
                            i.created_by == o.getUserId() || Q(i.sharing_info, e) || d.push(i.feed_id)
                        }
                        d.length > 0 && (f.log("cnvFeed.removeFeedItemsSharedWithGroups_helper(): removing feed items (total " + d.length + "):", d),
                        N(a, d))
                    }
                }
                function Q(a, b) {
                    for (var c = o.getUserId(), d = 0, e = a.length; e > d; d++) {
                        var f = a[d];
                        if (!b.hasOwnProperty(f.published_to))
                            if ("USER" === f.type) {
                                if (f.published_to === c)
                                    return !0
                            } else if (g.getGroup(f.published_to).accessible)
                                return !0
                    }
                    return !1
                }
                function R() {
                    var b = 0
                      , c = 0
                      , d = ""
                      , e = a.feed_data;
                    if (e.feed_items.length > 10) {
                        for (var g = e.feed_items, h = 10, i = g.length; i > h; h++)
                            g[h]._hide || (g[h]._hide = !0,
                            g[h]._dirty = !0,
                            e.num_displayed--,
                            b++);
                        f.log("FEED_DEBUG: displayed: " + a.feed_data.num_displayed + " total: " + a.feed_data.feed_items.length + " filter-applied: " + Pa)
                    }
                    if (d += "cnvFeed.unloadOlderFeedItems(): num unloaded 1: " + b,
                    Pa && (e = Ma,
                    e.feed_items.length > 10))
                        for (var g = e.feed_items, h = 10, i = g.length; i > h; h++)
                            g[h]._hide || (g[h]._hide = !0,
                            g[h]._dirty = !0,
                            e.num_displayed--,
                            c++);
                    return d += ", 2: " + c,
                    f.log(d),
                    b + c
                }
                function S(a, b) {
                    var c = a.feed_items
                      , d = c.length - a.num_displayed;
                    b = Math.min(b, d);
                    for (var e = 0; b > e; e++)
                        c[e + a.num_displayed]._hide = !1;
                    a.num_displayed += b,
                    f.log("cnvFeed.unhideFeedItems(): num unhide-ed: " + b)
                }
                function T(a, b, c) {
                    for (var d = 0; d < a.length; d++)
                        if (a[d][b] == c)
                            return d;
                    return -1
                }
                function U(a) {
                    for (var b = {}, c = 0; c < a.length; c++)
                        b[a[c].feed_id] = c;
                    return b
                }
                function V(a) {
                    for (var b = a.feed_items, c = b.length, d = 0; c > d; d++) {
                        var e = b[d]
                          , f = e._actions
                          , g = !1;
                        if (f.unreadComments)
                            g = !0,
                            q.markCommentsAsRead(e.app_instance_id, e.resource_id, f.unreadComments);
                        else
                            for (var h in f)
                                if (f.hasOwnProperty(h) && "updatedByOtherUser_TS" != h && "unreadComments_updateTS" != h) {
                                    g = !0;
                                    break
                                }
                        if (g) {
                            var i = f.updatedByOtherUser_TS
                              , j = f.unreadComments_updateTS;
                            e._actions = {},
                            e._actions.updatedByOtherUser_TS = i,
                            e._actions.unreadComments_updateTS = j,
                            e._dirty = !0
                        }
                    }
                }
                function W(a, b) {
                    if (!Pa)
                        return !1;
                    for (var c = Qa.filters.length, d = 0; c > d; d++) {
                        var e = Qa.filters[d];
                        if (e.type == a && e.value == b)
                            return !0
                    }
                    return !1
                }
                function X(a) {}
                function Y() {
                    I(a.feed_data, !0),
                    V(a.feed_data),
                    X(a.feed_data),
                    a.setScrollTop(0)
                }
                function Z(b) {
                    Qa = b,
                    Pa = !0;
                    var c = k.hasAnySearchFilter(Qa.filters);
                    c ? (Ra = !0,
                    Sa = c.hasTextFilter,
                    a.search_words = k.getSearchWordsIfHasWordSearchFilter(Qa.filters)) : (Ra = !1,
                    Sa = !1,
                    a.search_words = null ),
                    Na = C(),
                    Na.isTextSearch = Sa,
                    a.feed_data = Na,
                    F()
                }
                function $() {
                    if (Sa && Ma.feed_items.length > 0) {
                        for (var b = [], c = Na.feed_items, d = 0; d < c.length; d++)
                            b.push(c[d].feed_id);
                        c = Ma.feed_items;
                        for (var e = U(Ma.feed_items), d = 0; d < b.length; d++)
                            e.hasOwnProperty(b[d]) && (c[e[b[d]]]._dirty = !0)
                    }
                    Qa = null ,
                    Pa = !1,
                    Ra = !1,
                    Sa = !1,
                    a.search_words = null ,
                    X(a.feed_data),
                    Na = C(),
                    Ma.isFirstFeedFetchDone || (Ma = C(),
                    a.my_feed_data = Ma),
                    a.feed_data = Ma,
                    I(a.feed_data, !0),
                    V(a.feed_data),
                    X(a.feed_data),
                    Ma.isFirstFeedFetchDone ? H(null , !1, "USER_ACTION: cleared filter") : F()
                }
                function aa(a) {
                    a.defaultPrevented || (x.filterApplied && x.filterLink.filter ? Z(x.filterLink.filter) : $())
                }
                function ba() {
                    H(null , !1, "PERIODIC")
                }
                function ca() {
                    f.log("cnvFeed.onFeedPollLongInterval()"),
                    H(null , !1, "PERIODIC")
                }
                function da(a, b, c) {
                    H(null , b, c)
                }
                function ea() {
                    H()
                }
                function fa() {
                    Ma = C(),
                    Na = C(),
                    a.feed_data = Pa ? Na : Ma,
                    a.my_feed_data = Ma,
                    F()
                }
                function ga() {
                    Ma = C(),
                    a.my_feed_data = Ma,
                    Pa || (a.feed_data = Ma,
                    F())
                }
                function ha() {
                    Ea = i(ca, Ha)
                }
                function ia() {
                    i.cancel(Ea)
                }
                function ja() {
                    a.server_now_timestamp = m.getServerTimestamp()
                }
                function ka() {
                    null  === Ta && (Ta = setTimeout(la, 2e3))
                }
                function la() {
                    f.log("getUpdatesFromServerAfterADelay_onTimeout"),
                    Ta = null ,
                    r.getUpdatesFromServer()
                }
                function ma() {
                    setTimeout(function() {
                        I(a.feed_data)
                    }, 250)
                }
                function na() {
                    a.isCommentEditingInProgress() || a.isVideoFullScreen() || (H(),
                    Va = !a.isVideoPlaying(),
                    a.feed_data.feedItemsUpdatesAvailable = !1,
                    oa(),
                    V(a.feed_data))
                }
                function oa() {
                    null  === Ua && (Ua = j(pa, 1500))
                }
                function pa() {
                    f.log("processPendingFeedItemsMergingAfterADelay_onTimeout"),
                    Ua = null ,
                    I(a.feed_data, !0),
                    X(a.feed_data),
                    Va && !a.isVideoPlaying() && (f.log("cnvFeed: calling unloadOlderFeedItems()"),
                    R()),
                    Va = !0
                }
                function qa(a) {
                    if (h("sharedToOrderByCurrentUser")(a.sharing_info),
                    6 == a.app_instance_id) {
                        a.data.hasThumbnail = !1;
                        for (var b = a.data.files.length, d = 0; b > d; d++)
                            if (a.data.files[d].thumbnail_name) {
                                a.data.hasThumbnail = !0;
                                break
                            }
                    }
                    a.hierarchy[0].searched_title || (a.hierarchy[0].searched_title = a.hierarchy[0].title),
                    Ra || (a.hierarchy[0].searched_title = _.escape(a.hierarchy[0].title)),
                    a.logged_in_user_permissions == c && (a.logged_in_user_permissions = 7),
                    a.permissions == c && (a.permissions = 7),
                    a.logged_in_user_permissions.checkBitAt(3) || (a.itemSharingInfoWithDropdownItems = ra(a.created_by, a.sharing_info))
                }
                function ra(a, b) {
                    var c = []
                      , d = g.getUser(a);
                    c.push(y.createUserListItem(new A(_.extend({
                        user_id: a,
                        email: ""
                    }, d))));
                    for (var e = 0, f = b.length; f > e; e++) {
                        var h = b[e];
                        if (h.type === l.USER) {
                            var d = g.getUser(h.published_to);
                            c.push(y.createUserListItem(new A(_.extend({
                                user_id: h.published_to,
                                email: ""
                            }, d))))
                        } else if (h.type === l.GROUP) {
                            var i = g.getGroup(h.published_to);
                            c.push(y.createGroupListItem(new z(_.extend({
                                id: h.published_to,
                                title: i.name
                            }, i))))
                        }
                    }
                    return c
                }
                function sa(b, c) {
                    return _.find(a.feed_data.feed_items, function(a) {
                        return a.resource_id == b && a.app_instance_id == c ? !0 : void 0
                    })
                }
                function ta(b) {
                    var c = sa(b.resource_id, b.app_instance_id);
                    c && (c._dirty = !0,
                    a.$$phase || a.$digest())
                }
                function ua(b) {
                    var c = sa(b.resource_id, b.app_instance_id);
                    if (c) {
                        var d = !1;
                        if (b.like_info.like_timestamp > c.like_info.like_timestamp) {
                            if (!g.getUser(b.last_liked_by) && !b.user || b.path_ids.split(",").length > 1)
                                d = !0;
                            else if (!g.getUser(b.last_liked_by) && b.user) {
                                var e = {};
                                e[b.last_liked_by] = b.user[b.last_liked_by],
                                g.setUsers(e)
                            }
                            d ? H() : (c.like_info.like_timestamp = b.like_info.like_timestamp,
                            c.like_info.liked_by = b.like_info.liked_by,
                            c.like_info.likes_count = b.like_info.likes_count,
                            b.like_info.hasOwnProperty("sub_res_like_count") && (c.like_info.sub_res_like_count = b.like_info.sub_res_like_count),
                            c._dirty = !0,
                            a.$$phase || a.$digest())
                        }
                    }
                }
                function va(b) {
                    var c = sa(b.resource_id, b.app_instance_id);
                    if (c) {
                        var d = !1;
                        b.like_info.like_timestamp > c.like_info.like_timestamp && ((!g.getUser(b.like_info.liked_by) || b.path_ids.split(",").length > 1) && (d = !0),
                        d ? H() : (c.like_info.like_timestamp = b.like_info.like_timestamp,
                        c.like_info.liked_by = b.like_info.liked_by,
                        c.like_info.likes_count = b.like_info.likes_count,
                        b.like_info.hasOwnProperty("sub_res_like_count") && (c.like_info.sub_res_like_count = b.like_info.sub_res_like_count),
                        c._dirty = !0,
                        a.$$phase || a.$digest()))
                    }
                }
                function wa(a) {
                    Oa.feedItemsPendingMerge = Oa.feedItemsPendingMerge.concat(a),
                    Oa.feedItemsUpdatesAvailable = !1,
                    I(Oa)
                }
                function xa(b, c) {
                    Oa = C(),
                    a.feed_data = Oa,
                    a.hideFeedEndPlaceholder = !0,
                    c && wa(c),
                    a.$$phase || a.$digest()
                }
                function ya(a, b) {
                    wa(b)
                }
                function za(b) {
                    a.feed_data = Ma,
                    Oa = C(),
                    a.hideFeedEndPlaceholder = !1,
                    a.$$phase || a.$digest(),
                    e.setTimeout(function() {
                        a.$broadcast("cnvNoteGallery:forceRender")
                    }, 500)
                }
                function Aa(b) {
                    if (b ? (Fa = a.$on("pollFeedRequest", da),
                    Da = i(ba, Ga),
                    ia(),
                    H(null , !1, "TAB_ACTIVATED")) : (Fa(),
                    i.cancel(Da),
                    ha()),
                    E()) {
                        var c = "\nFEED: thisTabLastActiveChanged: " + (b ? "Y" : "N") + "\nIsNativeApp: " + (w.IS_NATIVE ? "Y" : "N") + "\nTabId: " + d.clientInstanceId + "\n";
                        D(c)
                    }
                }
                function Ba(b, c) {
                    Ra && null  !== a.search_words ? (g.fetchChat(c.chatId, a.search_words[0]).then(function(a) {
                        n.searchResults(a.data)
                    }),
                    n.openSearchedChat(c.chatId, c.chatType, a.search_words[0], c.data, c.chatParticipants)) : n.openChatFromId(c.chatId, c.chatType, c.messageInfo, c.chatParticipants)
                }
                function Ca() {
                    s.off("resourceLikedByRemoteUser", ua),
                    s.off("resourceUnlikedByRemoteUser", va),
                    s.off("commentLikedByRemoteUser", ta),
                    s.off("commentUnlikedByRemoteUser", ta),
                    q.off("commentAddedByRemoteUser", ta),
                    q.off("commentUpdatedByRemoteUser", ta),
                    q.off("commentDeletedByRemoteUser", ta)
                }
                var Da, Ea, Fa, Ga = v.isTNWAccount() ? 15e3 : 6e4, Ha = 9e5, Ia = 6e4, Ja = 10, Ka = null , La = !1, Ma = C(), Na = C(), Oa = C(), Pa = !1, Qa = null , Ra = !1, Sa = !1, Ta = null , Ua = null , Va = !0;
                if (a.feed_data = Ma,
                a.my_feed_data = Ma,
                a.search_words = null ,
                a.loadMoreFeed = F,
                a.onFullScreenExit = ma,
                a.onFeedScrolledToTop = na,
                a.onFeedItemsUpdatesAvailableNotifClick = Y,
                a.isMyFeed = function() {
                    return a.feed_data === Ma
                }
                ,
                s.on("resourceLikedByRemoteUser", ua),
                s.on("resourceUnlikedByRemoteUser", va),
                s.on("commentLikedByRemoteUser", ta),
                s.on("commentUnlikedByRemoteUser", ta),
                q.on("commentAddedByRemoteUser", ta),
                q.on("commentUpdatedByRemoteUser", ta),
                q.on("commentDeletedByRemoteUser", ta),
                t.on("thisTabLastActiveChanged", Aa),
                a.$on("forcePollFeedRequest", ea),
                a.$on("reFetchFeed", fa),
                a.$on("refetchMainFeed", ga),
                a.$on("filterChange", aa),
                a.$on("cnvFeed.clearFilter", $),
                a.$on("cnvFeed.removeFeedItemsSharedWithGroups", function(a, b) {
                    O(b)
                }),
                a.$on("Note:newNoteCreated", function() {
                    H(null , !1, "FORCE: note created")
                }),
                a.$on("Link:newLinkCreated", function() {
                    H(null , !1, "FORCE: link created")
                }),
                a.$on("cnvOnboarding:setOnboardingFeedData", xa),
                a.$on("cnvOnboarding:addFeedItems", ya),
                a.$on("cnvOnboarding:removeOnboardingFeedData", za),
                a.$on("openChatWindow", Ba),
                a.$on("VideoPlayback:Playing", function(b, c) {
                    a.$broadcast("VideoPlayback:stopBuffering", c)
                }),
                a.$on("$destroy", Ca),
                ja(),
                i(ja, Ia),
                t.isThisTabLastActiveTab())
                    Fa = a.$on("pollFeedRequest", da),
                    Da = i(ba, Ga);
                else if (ha(),
                E()) {
                    var Wa = "\nFEED: VIEW INITIALIZATION: APP TAB INACTIVE UPON INITIALIZATION\nIsNativeApp: " + (w.IS_NATIVE ? "Y" : "N") + "\nTabId: " + d.clientInstanceId + "\n";
                    D(Wa)
                }
                x.waitingForServerDataBeforeEvaluatingTheFilter || (x.filterApplied && x.filterLink.filter ? Z(x.filterLink.filter) : F())
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvFeedInviteWidget", ["accountInfo", "alertsService", "Contacts", "userInfo", function(a, b, c, d) {
        return {
            restrict: "E",
            scope: !0,
            replace: !0,
            templateUrl: "feed/components/cnvFeedInviteWidget/cnvFeedInviteWidget.tpl.html",
            link: function(e, f, g) {
                e.networkPrimaryDomain = a.getPrimaryAccountDomain().user_email_domain,
                e.isGuest = d.isGuestUser(),
                e.inviteContacts = function() {
                    c.initContactsInviteModal({
                        include_off_domain: !1,
                        invite_via: "Invite_Dialog",
                        origin: "Right_Column"
                    })
                }
                ,
                e.onShareableLinkClick = function() {
                    var a = "common/cnvInviteTeammates/templates/cnvFindTeammatesBasicSplash.tpl.html"
                      , c = "findContactsSplashCtrl"
                      , d = {
                        data: function() {
                            return {
                                requestedView: "VANITY_URL"
                            }
                        }
                    };
                    b.customModal(a, c, d).result.then(function(a) {
                        console.log("invite complete.")
                    }, function() {
                        console.log("invite complete.")
                    })
                }
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvNoteSnippetPlaybackBanner", ["Comments", "$filter", "resourcesTabsManager", function(a, b, c) {
        return {
            restrict: "E",
            replace: !0,
            scope: !0,
            templateUrl: "feed/components/cnvNoteSnippetPlaybackBanner/cnvNoteSnippetPlaybackBanner.tpl.html",
            link: function(d, e, f) {
                var g = !1;
                d.$on("Feed:showNoteSnippetPlaybackBanner", function(f, h, i) {
                    var j = a.getComment(null , h.resourceId, h.appInstanceId, h.commentId);
                    j.then(function(a, f) {
                        d.commentData = a,
                        d.$broadcast("render"),
                        d.$broadcast("refreshImage");
                        var h = e.find(".comment-body")
                          , j = b("limitHtmlText")(d.commentData.comment_text, 100, !0);
                        h.html(""),
                        h.append(j.htmlStr);
                        var k = e.height();
                        e.css("top", i.top - k - 10).css("left", 75),
                        e.show(),
                        g = !0,
                        c.on("homeTabUnselected", d.dismissBanner)
                    })
                }),
                d.dismissBanner = function() {
                    e.hide(),
                    d.$emit("NoteSnippet:removeHighlightedText"),
                    c.off("homeTabUnselected", d.dismissBanner)
                }
                ,
                d.backToComments = function() {
                    e.hide(),
                    d.$emit("NoteSnippet:removeHighlightedText");
                    var a = e.parent().find(".comments-collection")
                      , b = a.offset().top - 100;
                    $("html, body").animate({
                        scrollTop: b
                    }, {
                        duration: 400
                    })
                }
                ,
                d.$on("NoteSnippetBanner:hidePopup", function(a) {
                    g && (d.dismissBanner(),
                    d.$emit("NoteSnippet:removeHighlightedText"))
                })
            },
            controller: ["$scope", function(a) {}
            ]
        }
    }
    ]),
    b.module("convoApp").factory("feedDirtyInfo", ["appTabs", function(a) {
        function b(b) {
            b !== e && (e = b,
            e ? (d.trigger("feedDirty"),
            a.dispatchTabsEvent2("feedDirty")) : (d.trigger("feedDirtyClear"),
            a.dispatchTabsEvent2("feedDirtyClear")))
        }
        function c() {
            return e
        }
        var d = {};
        _.extend(d, Backbone.Events);
        var e = !1;
        return a.addTabsEventListener2("feedDirty", function() {
            b(!0)
        }),
        a.addTabsEventListener2("feedDirtyClear", function() {
            b(!1)
        }),
        d.setIsDirty = b,
        d.getIsDirty = c,
        d
    }
    ]),
    b.module("convoApp").factory("Feed", ["Comments", "ServerComm", "accountInfo", "userInfo", "config", "$q", "$timeout", "loginResponseData", "$q", function(a, c, d, e, f, g, h, i, g) {
        function j(a, b, f, h, j) {
            var k = {
                authToken: i.getXmppSessionToken(),
                userID: e.getUserId(),
                accountID: d.getAccountId(),
                from_index: a,
                feedIDsWithTimestamp: null ,
                filter: b,
                suggestionsCount: f,
                includeChats: h
            }
              , l = g.defer()
              , m = c.postx("feed/searchsuggestions", k);
            return m.then(function(a, b) {
                a.data && (a.data.searchedText = j),
                l.resolve(a)
            }, function(a, b) {
                l.reject(a)
            }),
            m
        }
        function k(a, b, f, h, j) {
            var k = {
                authToken: i.getXmppSessionToken(),
                userID: e.getUserId(),
                accountID: d.getAccountId(),
                fromIndex: a,
                itemsCount: b,
                summaryParams: null ,
                sortBy: 1,
                feedIDsWithTimestamp: null ,
                filter: f,
                isSearch: h,
                includeChats: f && f.hasOwnProperty("filters") && f.filters.length > 0 ? s.includeChats : !1,
                includeDrafts: s.includeDrafts,
                applyHighlight: !0
            };
            n && (console.log("first feed fetch. admin_mode: " + e.isAdminMode()),
            k.switchToAdminMode = e.isAdminMode() ? 1 : 0,
            n = !1);
            var l = g.defer()
              , m = c.postx("feed/fetch", k);
            return m.then(function(a, b) {
                l.resolve(a)
            }, function(a, b) {
                l.reject(a)
            }),
            l.promise
        }
        function l(a) {
            return 3 == a.app_instance_id || 14 == a.app_instance_id ? !1 : !0
        }
        function m(a) {
            return 3 == a.app_instance_id || 14 == a.app_instance_id || 21 == a.app_instance_id || 10 == a.app_instance_id ? !1 : !0
        }
        var n = !0
          , o = {}
          , p = {}
          , q = {}
          , r = []
          , s = {
            includeChats: !1,
            includeDrafts: !1
        }
          , t = {
            source: "Feed",
            fetchFeed: function(c, d, f, i, j) {
                var m, n = function(c) {
                    if (response = c.data,
                    response.users && b.extend(p, response.users),
                    response.groups && b.extend(q, response.groups),
                    response.feed_items) {
                        a.updateUsersAndGroups(response.users, response.groups);
                        for (var d = _.filter(response.feed_items, function(a) {
                            return l(a)
                        }), f = 0; f < d.length; f++) {
                            var g = d[f];
                            o[g.app_instance_id + ":" + g.resource_id] = g.feed_id,
                            j || a.updateCommentsDataReceivedInFeedFetch(g.resource_id, g.app_instance_id, g.conversations_count, g.conversations)
                        }
                    }
                    response.pinned_items && t.updatePinnedItems(response.pinned_items),
                    e.setUserDataRevisionNo(response.account_user_revision_number)
                }
                , r = !0;
                if (t.cachedFeedData && !f) {
                    var s = JSON.parse(t.cachedFeedData);
                    if (s && s.feed_items && 10 === s.feed_items.length) {
                        var u = {
                            data: s,
                            status: 200
                        }
                          , v = g.defer();
                        m = v.promise,
                        n(u),
                        h(function() {
                            v.resolve(u),
                            u = null 
                        }, 1),
                        r = !1
                    }
                    t.cachedFeedData = null 
                } else
                    t.cachedFeedData = null ;
                return r && (m = k(c, d, f, i),
                m.then(n)),
                m
            },
            pollFeed: function(g, h, j, k) {
                var l = {
                    authToken: i.getXmppSessionToken(),
                    userID: e.getUserId(),
                    accountID: d.getAccountId(),
                    filter: h,
                    includeChats: h && h.hasOwnProperty("filters") && h.filters.length > 0 ? s.includeChats : !1,
                    includeDrafts: s.includeDrafts,
                    applyHighlight: !0,
                    mark_notifications: 1,
                    client: f.CLIENT_TYPE
                };
                g && (l.lastFeedPollTimestamp = "" + g);
                var n = c.postx("feed/poll", l);
                return n.then(function(c) {
                    c = c.data,
                    c.users && b.extend(p, c.users),
                    c.groups && b.extend(q, c.groups);
                    var f;
                    if (c.feed_items) {
                        f = _.filter(c.feed_items, function(a) {
                            return m(a)
                        }),
                        a.updateUsersAndGroups(c.users, c.groups);
                        for (var g = 0; g < f.length; g++) {
                            var h = f[g];
                            o[h.app_instance_id + ":" + h.resource_id] = h.feed_id,
                            a.updateCommentsDataReceivedInFeedPoll(h.resource_id, h.app_instance_id, h.conversations_count, h.conversations)
                        }
                        c.feed_items = f
                    }
                    c.pinned_items && t.updatePinnedItems(c.pinned_items),
                    d.setAccountDataRevisionNo(c.account_revision_number),
                    e.setUserDataRevisionNo(c.account_user_revision_number),
                    t.trigger("feedPolled", {
                        feed_items: f,
                        filter_feed_items: c.filter_feed_items
                    })
                }),
                n
            },
            getFeedIdOfResource: function(a, b) {
                return o[a + ":" + b] || null 
            },
            getUser: function(a) {
                return p[a]
            },
            setUsers: function(a) {
                b.extend(p, a)
            },
            updateUserProfileImageInfo: function(a, b, c) {
                var d = p[a];
                d && (d.profile_image_type = b,
                d.profile_image_version = c)
            },
            getGroup: function(a) {
                return q[a]
            },
            getNameById: function(a) {
                return 0 === a.indexOf("grp-") || 0 === a.indexOf("g_") ? t.getGroupName(a) : t.getUserName(a)
            },
            getUserName: function(a) {
                var b = p[a];
                return "undefined" == typeof b ? "Unknown" : b.name
            },
            getGroupName: function(a) {
                var b = q[a];
                return "undefined" == typeof b ? "Unknown" : b.name
            },
            fetchChat: function(a, b) {
                var f = {
                    authToken: i.getXmppSessionToken(),
                    userID: e.getUserId(),
                    accountID: d.getAccountId(),
                    fromIndex: 0,
                    itemsCount: 0,
                    sortBy: 1,
                    chatId: a,
                    chatSearchTerm: b
                }
                  , g = c.post("chat/fetchChat", f);
                return g
            },
            setFetchOptions: function(a, b) {
                s.hasOwnProperty(a) && (s[a] = b)
            },
            getPinnedItems: function() {
                return r
            },
            updatePinnedItems: function(a) {
                r = a,
                t.trigger("feedService:pinnedItemsUpdated", r)
            },
            getFeedSearchSuggestions: j
        };
        return _.extend(t, Backbone.Events),
        t
    }
    ]),
    b.module("convoApp").directive("cnvAppFeedItem", ["$compile", function(a) {
        return {
            restrict: "AE",
            scope: !0,
            link: function(b, c, d) {
                var e = "cnv-feed-item-appid" + b.itemData.app_instance_id + "-restype" + b.itemData.resource_type
                  , f = a("<" + e + "></" + e + ">")(b);
                c.replaceWith(f)
            },
            controller: ["$scope", "AppLinks", function(a, b) {
                a.getResourceLinkUrl = function() {
                    var c = a.itemData.hierarchy[0].title
                      , d = b.newResourceLink(a.itemData.app_instance_id, [{
                        type: a.itemData.resource_type,
                        uid: a.itemData.resource_id,
                        title: c
                    }], null , c);
                    return b.linkToUrl(d, !0)
                }
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvFeedItem", ["$filter", "$location", "textSelections", "utils", "config", "getResourceLinkUrlFilter", "usersGroupsListProvider", "idToFilterUrlFilter", "bannerService", "mixpanelService", "$compile", "$templateCache", "$rootScope", function(b, c, d, e, f, g, h, i, j, k, l, m, n) {
        return {
            restrict: "AE",
            priority: 0,
            templateUrl: "feed/renderers/cnvFeedItem.tpl.html",
            link: function(c, n, o) {
                function p(b, c) {
                    var d = n.find("cnv-comment-editor")[0]
                      , e = d.getBoundingClientRect();
                    e.bottom < 0 || e.top > (a.innerHeight || document.documentElement.clientHeight) ? $("body").animate({
                        scrollTop: d.offsetTop - a.innerHeight / 2
                    }, 400, b(c)) : b(c)
                }
                function q(a) {
                    y && ($(y).off("click", z),
                    $(y).hide()),
                    $("body").off("click", q),
                    $("body").off("mousewheel", r)
                }
                function r(a, b) {
                    var c = n.find(".note_text").offset().top;
                    if (0 == A && (A = $(y).offset().top - c),
                    $(y)) {
                        var d = c + A;
                        $(y).css({
                            top: d
                        })
                    }
                }
                function s(a) {
                    var b = d.getSelection(n.find(".note_text .feed-text-inner")[0]);
                    if (y && $(y).off("click", z),
                    b && b.sel && b.sel.getRangeAt(0).endContainer.parentNode.classList.contains("more_text")) {
                        if (b.sel.getRangeAt(0).startContainer == b.sel.getRangeAt(0).endContainer)
                            return;
                        var f = document.createRange();
                        f.setStart(b.sel.getRangeAt(0).startContainer, b.sel.getRangeAt(0).startOffset),
                        f.setEnd(b.sel.getRangeAt(0).endContainer.parentNode.parentNode, 0),
                        d.mkSelection(f),
                        b = d.getSelection(n.find(".note_text .feed-text-inner")[0])
                    }
                    b && b.beginIndex < b.endIndex && "" != b.text.trim() && c.relatedPermissions.canComment && (y && $(y).show(),
                    y = d.showIcoAboveSel($("body")[0], b.sel.getRangeAt(0).nativeRange),
                    A = 0,
                    $(y).show(),
                    z = function(a) {
                        if (a.target.classList.contains("cross"))
                            return d.rmAllSelections(),
                            void (y && (y.remove(),
                            y = null ));
                        var f = {
                            snippetData: {
                                type: "scrybe.components.snippet.NotesSnippet",
                                data: {
                                    beginIndex: b.beginIndex,
                                    endIndex: b.endIndex,
                                    text: b.text
                                }
                            },
                            fileViewerTextAnnotation: !0,
                            classes: "detail_snippet"
                        };
                        if ("new_comment" !== c.commentsInEditModeCurrentFocus.status)
                            c.$broadcast("embedSnippetImageInComment", {
                                currentlyFocusedEditor: c.commentsInEditModeCurrentFocus.state,
                                data: f
                            });
                        else {
                            var g = !0;
                            c.commentEditorCtrl.attachments.controllers && c.commentEditorCtrl.attachments.controllers.manager_controller && c.commentEditorCtrl.attachments.controllers.manager_controller.initialized && (g = !1,
                            j.showBanner("You can add one attachment to comments at a time.", !1, !1, null , 3e3)),
                            g && (f.snippetData.data.snippetId = e.generateUniqueId(),
                            c.commentEditorCtrl.snippetData = f,
                            c.commentEditorCtrl.setAllowAttachments(!1),
                            c.$$phase || c.$digest(),
                            c.showAndActivateCommentsPanel("", !0))
                        }
                        $(y).off("click", z),
                        $("body").off("mousewheel", r),
                        $(y).hide(),
                        a.stopPropagation()
                    }
                    ,
                    $("body").on("click", q),
                    $("body").on("mousewheel", r),
                    $(y).on("click", z))
                }
                function t(a) {
                    setTimeout(function() {
                        s(a)
                    }, 0)
                }
                function u() {
                    var a = n.find("cnv-comment-editor")
                      , b = "onboarding/templates/cnvOnboardingAddCommentTooltip.tpl.html"
                      , d = l(m.get(b));
                    a.append(d(c.$new())),
                    c.feedOnboardingPostFirstComment = !0
                }
                function v() {
                    var a = n.find("cnv-comment-editor")
                      , b = "onboarding/templates/cnvOnboardingAnnotationAddCommentTooltip.tpl.html"
                      , d = l(m.get(b));
                    a.append(d(c.$new())),
                    c.feedOnboardingPostSecondComment = !0
                }
                function w(a) {
                    var b = "cnv-onboarding-clickable";
                    $(a.target).hasClass(b) || (a.stopImmediatePropagation(),
                    a.preventDefault())
                }
                c.$on("commentReplyButtonClick", function(a, b) {
                    return c.collaborationInfo = {
                        replied_to_comment_id: b.commentId,
                        replied_to_user_id: b.from,
                        parent_resource_index: 0
                    },
                    p(c.onCommentReplyButtonClick, b.from),
                    !1
                }),
                c.copyPostLink = function() {
                    e.copyToClipboard(f.CONVO_LINKS_BASE_URL + g(c.itemData.app_instance_id, [{
                        type: c.itemData.hierarchy[0].type,
                        uid: c.itemData.hierarchy[0].uid,
                        title: c.itemData.hierarchy[0].title
                    }], null , c.itemData.hierarchy[0].title).slice(1))
                }
                ,
                c.itemData._actions._new && (n.addClass("this-user-new-post overflow-hidden"),
                setTimeout(function() {
                    c.itemData._actions._new = !1,
                    n.removeClass("this-user-new-post overflow-hidden")
                }, 1e3));
                var x = 1;
                c.selectText = function(a) {
                    function b() {
                        return h.textContent
                    }
                    function f(b) {
                        var d = n.find(".sel-text-highlight").position()
                          , e = {
                            commentId: a.commentId,
                            appInstanceId: c.itemData.app_instance_id,
                            resourceId: c.itemData.resource_id
                        };
                        k.trackEvent(k.ANNOTATION_PLAYBACK, {
                            Type: "Post",
                            "Snippet Type": "Text",
                            Via: "Newsfeed"
                        }),
                        c.$broadcast("Feed:showNoteSnippetPlaybackBanner", e, d)
                    }
                    function g() {
                        if (1 == x) {
                            var b = c.noteFeedItemCtrl.loadFullNoteText();
                            b.then(function() {
                                c.selectText(a)
                            }),
                            x = 2
                        } else
                            x = 1
                    }
                    d.rmAllSelections(),
                    $("body").css("overflow-y", "scroll");
                    var h = n.find(".note_text")[0]
                      , i = {
                        data: a,
                        nodes: h,
                        scrollContainer: e.isIE() ? document.body.parentNode : document.body,
                        highlight: !0,
                        selectionOffset: 150,
                        highlightRemoveTime: null ,
                        getContent: b,
                        complete: f,
                        failure: g
                    };
                    d.selectText("nested", i)
                }
                ,
                c.$on("Feed:selectText", function(a, b, d) {
                    b.commentId = d,
                    x = 1,
                    c.selectText(b)
                });
                var y, z, A = 0;
                c.removeCommentEditorSnippet = function() {
                    c.commentEditorCtrl.snippetData = null ,
                    c.commentEditorCtrl.setAllowAttachments(!0),
                    c.collaborationInfo = null 
                }
                ,
                c.removeOnboardingAddCommentTooltip = function() {
                    n.find(".cnv-onboarding-add-comment-tooltip").remove()
                }
                ,
                setTimeout(function() {
                    var a = n[0].querySelector(".note_text");
                    a && a.addEventListener("mouseup", t, !0)
                }, 0),
                c.$on("Comment:replySnippetCreated", function(a, d, e) {
                    var f = !0;
                    if (c.commentEditorCtrl.attachments.controllers && c.commentEditorCtrl.attachments.controllers.manager_controller && c.commentEditorCtrl.attachments.controllers.manager_controller.initialized && (f = !1,
                    j.showBanner("You can add one attachment to comments at a time.", !1, !1, null , 3e3)),
                    f) {
                        c.commentEditorCtrl.snippetData = d,
                        c.commentEditorCtrl.setAllowAttachments(!1),
                        c.commentEditorCtrl.snippetData.classes = "comment_snippet",
                        c.$$phase || c.$digest(),
                        c.collaborationInfo = e;
                        var g = "";
                        if (e && e.replied_to_user_id) {
                            var k = i(e.replied_to_user_id, "USER", !0).slice(1);
                            k = k.slice(0, k.indexOf("#")) + "&ignoreatmention=1" + k.slice(k.indexOf("#")),
                            g = '<a class="' + h.AT_MENTION_DOM_CLASSES.MENTION + '" href="convo:' + k + '">@' + b("idToName")(e.replied_to_user_id) + "</a>&nbsp;"
                        }
                        c.showAndActivateCommentsPanel(g, !0)
                    }
                }),
                c.$on("NoteSnippet:removeHighlightedText", function() {
                    d.rmAllSelections()
                }),
                c.$on("Feed:hideNoteSnippetPlaybackBanner", function(a) {
                    c.$broadcast("NoteSnippetBanner:hidePopup")
                }),
                c.$on("cnvOnboarding:showAddCommentTooltip", function(b, d) {
                    if (c.itemData.feed_id == d) {
                        var e = n.find(".comments-panel-wrapper");
                        e.css("height", 0).css("opacity", 0),
                        c.showAndActivateCommentsPanel("", !0),
                        a.setTimeout(function() {
                            e.animate({
                                height: 68,
                                opacity: 1
                            }, 500, function() {
                                e.css("height", "auto"),
                                a.setTimeout(u, 700)
                            })
                        }, 0)
                    }
                }),
                c.$on("cnvOnboarding:showAnnotationAddCommentTooltip", function(a, b) {
                    v()
                }),
                c.$on("cnvOnboarding:incrementConversationsCount", function(a, b) {
                    c.itemData.feed_id == b && (c.itemData.conversations_count += 1)
                }),
                c.$on("cnvOnboarding:enableClicksOnFeedItems", function(a) {
                    c.commentEditorCtrl.disableEsc = !1,
                    n[0].removeEventListener("click", w, !0),
                    document.removeEventListener("mousedown", w, !0),
                    n.removeClass("hideEmojiPopover")
                }),
                c.$on("cnvOnboarding:disableClicksOnFeedItems", function(a) {
                    c.commentEditorCtrl.disableEsc = !0,
                    n[0].addEventListener("click", w, !0),
                    document.addEventListener("mousedown", w, !0),
                    n.addClass("hideEmojiPopover")
                });
                var B = function(a) {
                    27 == a.keyCode && (c.commentEditorCtrl && (c.commentEditorCtrl.showAtMentionAlert = !1),
                    c.removeCommentEditorSnippet(),
                    c.$broadcast("render"))
                }
                ;
                a.setTimeout(function() {
                    n.find("cnv-comment-editor").on({
                        keyup: B
                    })
                }, 0),
                c.$on("$destroy", function() {
                    var a = n[0].querySelector(".note_text");
                    a && a.removeEventListener("mouseup", t, !0),
                    $("body").off("click", q),
                    $("body").off("mousewheel", r),
                    n.find("cnv-comment-editor").off("keyup", B),
                    n[0].removeEventListener("click", w, !0),
                    document.removeEventListener("mousedown", w, !0)
                }),
                c.createPermissionsTooltip = function() {
                    var a = "onboarding/templates/cnvOnboardingPermissionsTooltip.tpl.html";
                    c.dismissPermissionsTooltip = function() {
                        n.find(".onboardingToolTips.post-permissions-tooltip").remove()
                    }
                    ;
                    var b = l(m.get(a));
                    n.find(".feed-item-container").append(b(c.$new()))
                }
            },
            controller: ["$scope", "Likes", "Comments", "dialogService", "Users", "Groups", "idToFilterUrlFilter", "usersGroupsListProvider", "$filter", "userInfo", "homeViewStateInfo", "itemService", "alertsService", "bannerService", "Feed", "resourceLikeInfoModalService", "utils", "mixpanelService", "UploadService", "accountInfo", "onboardingService", function(a, b, d, e, f, g, h, i, j, k, l, m, o, p, q, r, s, t, u, v, w) {
                function x() {}
                function y() {
                    var b = {
                        initialized: !1,
                        height: {
                            min: 30,
                            max: 315
                        },
                        source: "Feed",
                        disableEsc: !1
                    };
                    return b.itemSharingInfoWithDropdownItems = a.itemData.itemSharingInfoWithDropdownItems,
                    b.permissions = new z,
                    b.onFocusOut = function() {
                        setTimeout(function() {
                            (0 === a.itemData.conversations_count || a.itemData.like_info.likes_count + a.itemData.like_info.sub_res_like_count === 0) && (a.commentEditorCtrl.destroy().flush && (a.showCommentsPanel = !1,
                            a.$broadcast("render")),
                            !a.commentEditorCtrl.getContent().trim().length)
                        }, 0)
                    }
                    ,
                    b.onFocus = function(b) {
                        a.commentsInEditModeCurrentFocus.state = b,
                        a.commentsInEditModeCurrentFocus.status = "new_comment"
                    }
                    ,
                    b.getNoteId = function() {
                        return a.itemData.resource_id
                    }
                    ,
                    b.getAppInstanceId = function() {
                        return a.itemData.app_instance_id
                    }
                    ,
                    b.onCommentEntered = A,
                    b
                }
                function z() {
                    var b = {};
                    return b.block = !a.itemData.logged_in_user_permissions.checkBitAt(2),
                    b.block && (b.message = "Comments are closed for this post &nbsp;&nbsp;&nbsp;•&nbsp;&nbsp;&nbsp;<a class='meta' href='" + j("idToFilterUrl")(a.itemData.permissions_changed_by, "USER") + "'>" + j("limitText")(j("getUserName")(a.itemData.permissions_changed_by), 80) + "</a>&nbsp;&nbsp;&nbsp;•&nbsp;&nbsp;&nbsp;<a class='meta' href='" + j("getResourceLinkUrl")(a.itemData.app_instance_id, [{
                        type: a.itemData.resource_type,
                        uid: a.itemData.resource_id,
                        title: a.itemData.hierarchy[0].title
                    }], null , a.itemData.hierarchy[0].title) + "'>" + j("dateAgo")(a.itemData.permissions_change_date, a.server_now_timestamp, !0, !0) + "</a>"),
                    b.allowLegitAtMentions = !a.itemData.logged_in_user_permissions.checkBitAt(3),
                    b
                }
                function A(b, c) {
                    b = b && b.trim() || "",
                    c = c || "",
                    c = c.replace(/<p>&#160;<\/p>|<p>&nbsp;<\/p>|\n/g, "<br>").replace(/^(<br>)*|(<br>)*$/g, "");
                    var e, f = a.itemData, g = {
                        app_instance: {
                            uid: a.itemData.app_instance_id,
                            title: a.itemData.hierarchy[0].title,
                            type: "APPINSTANCE",
                            data: "",
                            created_by: a.itemData.created_by,
                            version: "-1"
                        },
                        hierarchy: [{
                            uid: a.itemData.hierarchy[0].uid,
                            type: a.itemData.hierarchy[0].type,
                            title: a.itemData.hierarchy[0].title,
                            version: a.itemData.hierarchy[0].version,
                            data: null ,
                            created_by: a.itemData.hierarchy[0].created_by
                        }]
                    };
                    e = a.collaborationInfo ? a.collaborationInfo : {
                        parent_resource_index: 0
                    };
                    var h = a.commentEditorCtrl.getCommentId()
                      , i = a.feedOnboardingPostFirstComment || a.feedOnboardingPostSecondComment ? "GS" : null 
                      , j = {
                        serverData: [],
                        data: []
                    };
                    if (a.commentEditorCtrl.waiting = !1,
                    a.commentEditorCtrl.attachments.controllers && a.commentEditorCtrl.attachments.controllers.manager_controller && a.commentEditorCtrl.attachments.controllers.manager_controller.initialized && a.commentEditorCtrl.attachments.controllers.manager_controller.isBusy()) {
                        var k = a.$on("filesUploadManagerCtrl_allFilesProcessed", function() {
                            k();
                            for (var b = a.commentEditorCtrl.attachments.controllers.manager_controller.getSuccessfullyProcessedFiles(), c = 0; c < b.length; c++)
                                b[c].status === u.FILE_STATUS_CONVERSION_REQ_FAILED && b.splice(c, 1);
                            0 == b.length ? (o.alertModal("Convo alert", "The file could not be attached. Please try again.", "Okay", function() {
                                a.commentEditorCtrl.clickOutsideExit = !1
                            }),
                            a.commentEditorCtrl.clickOutsideExit = !0) : l(),
                            a.commentEditorCtrl.waiting = !1
                        });
                        a.commentEditorCtrl.waiting = !0
                    }
                    var l = function() {
                        var k = !0;
                        if (a.commentEditorCtrl.attachments.controllers && a.commentEditorCtrl.attachments.controllers.manager_controller && a.commentEditorCtrl.attachments.controllers.manager_controller.initialized) {
                            for (var l = a.commentEditorCtrl.attachments.controllers.manager_controller.getSuccessfullyProcessedFiles(), m = 0; m < l.length; m++)
                                l[m].status === u.FILE_STATUS_CONVERSION_REQ_FAILED && l.splice(m, 1);
                            for (var m = 0; m < l.length; m++) {
                                var n = l[m]
                                  , o = null ;
                                n.fileObjFromServer && (o = [n.fileObjFromServer]),
                                j.serverData.push({
                                    name: n.name,
                                    size: n.size,
                                    file_name_id: n.fileId,
                                    file_id: n.serverFileId,
                                    type: n.type
                                }),
                                j.data.push({
                                    preLocalData: n.localUrl,
                                    thumbnail_name: n.thumbnailName,
                                    isDefaultThumbnail: -1 == n.localUrl.indexOf("files/fileIcons") ? !1 : !0,
                                    origional_file: o,
                                    mp_attachment_source: n.mp_attachment_source,
                                    height: n.height || 90,
                                    width: n.width || 90
                                })
                            }
                        }
                        if (0 === j.serverData.length && 0 === b.length && (k = !1),
                        k) {
                            var p = d.postComment(c, f.feed_id, f.resource_id, f.resource_type, f.app_instance_id, a.commentEditorCtrl.snippetData, h, g, e, j, null , i);
                            if (j && j.serverData && j.serverData.length) {
                                var q = {}
                                  , r = "";
                                a.MP_DATA_SOURCE && "feed" === a.MP_DATA_SOURCE.currentSubApp && (r = "Feed"),
                                q.Source = r,
                                q["Attachment Type"] = j.serverData[0].type,
                                q["Attachment Source"] = j.data[0].mp_attachment_source,
                                t.trackEvent(t.CLICK_SEND, q)
                            }
                            a.itemData.conversations_count += 1,
                            a.commentEditorCtrl.showAtMentionAlert = !1,
                            U(),
                            a.$broadcast("Comment:posted");
                            var s;
                            a.commentEditorCtrl.snippetData && (s = $.extend(!0, {}, a.commentEditorCtrl.snippetData.snippetData),
                            a.removeCommentEditorSnippet()),
                            a.feedOnboardingPostFirstComment && (a.feedOnboardingPostFirstComment = !1,
                            a.removeOnboardingAddCommentTooltip(),
                            a.$emit("cnvOnboarding:cnvPilotFetchFirstComment")),
                            a.feedOnboardingPostSecondComment && (a.feedOnboardingPostSecondComment = !1,
                            a.removeOnboardingAddCommentTooltip(),
                            a.$emit("cnvOnboarding:cnvPilotFetchSecondComment", h)),
                            p.then(function(a, b) {
                                s && (B(s.data.source && "comment" == s.data.source ? "Comment" : "Post"),
                                s = null )
                            }),
                            p["finally"](function() {
                                a.commentEditorCtrl.snippetData = null ,
                                a.commentEditorCtrl.setAllowAttachments(!0),
                                a.collaborationInfo = null ,
                                U()
                            }),
                            a.commentEditorCtrl.deactivate()
                        }
                    }
                    ;
                    a.commentEditorCtrl.waiting || l()
                }
                function B(a) {
                    t.trackEvent(t.ANNOTATED, {
                        Type: a,
                        Via: "Newsfeed",
                        Using: "Text"
                    })
                }
                function C(a) {
                    for (var b = [], c = 0; c < a.length; c++) {
                        var d = null 
                          , e = "";
                        "USER" == a[c].type ? (d = q.getUser(a[c].published_to),
                        e = d.get("first_name") + " " + d.get("last_name")) : (d = q.getGroup(a[c].published_to),
                        e = d.get("title")),
                        null  != d && b.push(e)
                    }
                    return b
                }
                function D() {
                    k.getUserId();
                    if (a.dropdownCtrl.options = [],
                    a.dropdownCtrl.options.push({
                        label: "Open post",
                        icon: "cnv-icons-20 icons_Post-white",
                        "class": "open-in-detail-view",
                        callback: H
                    }),
                    6 == a.itemData.app_instance_id && 0 == a.itemData.is_system_message && (a.relatedPermissions.canEdit ? a.dropdownCtrl.options.push({
                        label: "Edit post",
                        icon: "cnv-icons-20 icons2_Compose-white",
                        "class": "open-in-detail-view",
                        callback: I
                    }) : a.dropdownCtrl.options.push({
                        label: "Edit post",
                        icon: "cnv-icons-20 edit-closed-menu-icon",
                        "class": "open-in-detail-view disabled"
                    })),
                    v.getAccountLevel() !== v.ACCOUNT_LEVELS.STARTER) {
                        if (a.itemData.can_change_permissions) {
                            var b = [];
                            0 == a.itemData.is_system_message && b.push({
                                label: "Can edit and comment",
                                icon: "cnv-icons-14 cnv-tick v-align-m",
                                conditionalLabelIcon: !0,
                                condition: "canEdit",
                                callback: E
                            }),
                            b.push({
                                label: "Comment only",
                                icon: "cnv-icons-14 cnv-tick v-align-m",
                                conditionalLabelIcon: !0,
                                condition: "canComment",
                                callback: F
                            }),
                            b.push({
                                label: "View only",
                                icon: "cnv-icons-14 cnv-tick v-align-m",
                                conditionalLabelIcon: !0,
                                condition: "canView",
                                callback: G
                            }),
                            a.dropdownCtrl.options.push({
                                label: "Permissions",
                                icon: "cnv-icons-20 icons_Lock-white",
                                "class": "sharing_preferences pseudo-submenu-arrow",
                                submenu: b
                            })
                        }
                    } else
                        a.isGuest || a.dropdownCtrl.options.push({
                            label: "Permissions (Upgrade)",
                            icon: "cnv-icons-20 icons_Lock-white",
                            callback: function() {
                                n.$emit("upgrade-to-permium")
                            }
                        });
                    a.dropdownCtrl.options.push({
                        isDivider: !0
                    }),
                    0 == a.itemData.muted && 0 == a.itemData.deleted && 0 == a.itemData.draft ? a.dropdownCtrl.options.push({
                        label: "Mute notifications",
                        icon: "cnv-icons-20 icons2_Mute-white",
                        callback: O
                    }) : 1 == a.itemData.muted && a.dropdownCtrl.options.push({
                        label: "Unmute notifications",
                        icon: "cnv-icons-20 icons2_Speaker-white",
                        callback: P
                    }),
                    a.relatedPermissions.canEdit && !a.itemData.is_system_message && a.dropdownCtrl.options.push({
                        label: "Add tags",
                        icon: "cnv-icons-17 icon_tag-01-01-white",
                        callback: R
                    }),
                    "GROUP" == l.getState() && a.dropdownCtrl.options.push({
                        label: "Pin post to group",
                        icon: "cnv-icons-20 icons_Post-white",
                        callback: S
                    }),
                    1 == a.itemData.starred ? a.dropdownCtrl.options.push({
                        label: "Unstar this post",
                        icon: "cnv-icons-20 icons_Star-white",
                        callback: N
                    }) : a.dropdownCtrl.options.push({
                        label: "Star this post",
                        icon: "cnv-icons-20 icons_Star-white",
                        callback: M
                    }),
                    a.dropdownCtrl.options.push({
                        isDivider: !0
                    }),
                    0 == a.itemData.deleted && a.relatedPermissions.canEdit && !a.itemData.is_system_message && a.dropdownCtrl.options.push({
                        label: "Share with others",
                        icon: "cnv-icons-20 icons2_Share-white",
                        callback: Q
                    }),
                    a.dropdownCtrl.options.push({
                        label: "Copy link",
                        icon: "cnv-icons-20 linkhorizontal-white",
                        callback: a.copyPostLink
                    }),
                    a.itemData.restorable && 3 != a.itemData.app_instance_id && (a.dropdownCtrl.options.push({
                        isDivider: !0
                    }),
                    a.dropdownCtrl.options.push({
                        label: "Restore post",
                        icon: "cnv-icons-17 Icon1_restore-white",
                        callback: L
                    })),
                    a.itemData.deletable && (1 == a.itemData.deleted ? a.dropdownCtrl.options.push({
                        label: "Delete permanently",
                        icon: "cnv-icons-20 icons2_Trash-white",
                        callback: J
                    }) : a.itemData.is_system_message || (a.dropdownCtrl.options.push({
                        isDivider: !0
                    }),
                    a.dropdownCtrl.options.push({
                        label: "Delete post",
                        icon: "cnv-icons-20 icons2_Trash-white",
                        callback: K
                    })))
                }
                function E() {
                    var b = m.changePermissions(m.canEdit, a.itemData.app_instance_id, a.itemData.resource_id);
                    b.then(function(b) {
                        a.itemData.permissions = b.data.item.permissions,
                        a.itemData.logged_in_user_permissions = b.data.item.logged_in_user_permissions,
                        a.evaluatePostPermissions(),
                        p.showBanner("Permissions updated")
                    })
                }
                function F() {
                    var b = m.changePermissions(m.canComment, a.itemData.app_instance_id, a.itemData.resource_id);
                    b.then(function(b) {
                        a.itemData.permissions = b.data.item.permissions,
                        a.itemData.logged_in_user_permissions = b.data.item.logged_in_user_permissions,
                        a.evaluatePostPermissions(),
                        p.showBanner("Permissions updated")
                    })
                }
                function G() {
                    var b = m.changePermissions(m.canView, a.itemData.app_instance_id, a.itemData.resource_id);
                    b.then(function(b) {
                        a.itemData.permissions = b.data.item.permissions,
                        a.itemData.logged_in_user_permissions = b.data.item.logged_in_user_permissions,
                        a.evaluatePostPermissions(),
                        p.showBanner("Permissions updated")
                    })
                }
                function H() {
                    var b = [{
                        type: a.itemData.resource_type,
                        uid: a.itemData.resource_id,
                        title: a.itemData.hierarchy[0].title
                    }]
                      , d = j("getResourceLinkUrl")(a.itemData.app_instance_id, b, null , a.itemData.hierarchy[0].title);
                    c.url(d.slice(1)),
                    t.trackEvent(t.OPENED_POST, {
                        In: "Existing Tab",
                        From: "Newsfeed"
                    })
                }
                function I() {
                    t.trackEvent(t.CLICK_EDIT_POST, {
                        Via: "In Feed Menu"
                    });
                    var b = [{
                        type: a.itemData.resource_type,
                        uid: a.itemData.resource_id,
                        title: a.itemData.hierarchy[0].title
                    }]
                      , d = j("getResourceLinkUrl")(a.itemData.app_instance_id, b, null , a.itemData.hierarchy[0].title);
                    d += "&view=Edit",
                    c.url(d.slice(1))
                }
                function J() {
                    m.deletePermanently(a.itemData.app_instance_id, a.itemData.resource_id)
                }
                function K() {
                    var b = m.moveToTrash(a.itemData.app_instance_id, a.itemData.resource_id);
                    p.showBanner_promise(b, "Moving to trash...", "Moved to trash", "Error... click here to try again.", !1, !1, b)
                }
                function L() {
                    var b = m.restorePost(a.itemData.app_instance_id, a.itemData.resource_id);
                    p.showBanner_promise(b, "Restoring item...", "Item restored", "Error... click here to try again.", !1, !1, b)
                }
                function M() {
                    var b = m.starPost(a.itemData.app_instance_id, a.itemData.resource_id);
                    b.then(function(b) {
                        a.itemData.starred = 1,
                        D(),
                        a.$broadcast("render")
                    }),
                    t.trackEvent(t.STARRED_POST, {
                        Via: "News Feed"
                    })
                }
                function N() {
                    var b = m.unStarPost(a.itemData.app_instance_id, a.itemData.resource_id);
                    b.then(function(b) {
                        a.itemData.starred = 0,
                        D(),
                        a.$broadcast("render")
                    })
                }
                function O() {
                    var b = m.mutePost(a.itemData.app_instance_id, a.itemData.resource_id);
                    b.then(function(b) {
                        a.itemData.muted = 1,
                        D(),
                        a.$broadcast("render")
                    })
                }
                function P() {
                    var b = m.unmutePost(a.itemData.app_instance_id, a.itemData.resource_id);
                    b.then(function(b) {
                        a.itemData.muted = 0,
                        D(),
                        a.$broadcast("render")
                    })
                }
                function Q() {
                    var b = "home/components/cnvSharePostWidget/cnvSharePostWidget.tpl.html";
                    controller = "cnvSharePostWidgetCtrl";
                    var c = {
                        sharingInfo: function() {
                            return a.itemData.sharing_info
                        },
                        preventProcessSharingInfo: function() {
                            return !1
                        },
                        submitAnyway: function() {
                            return a.itemData.draft ? !0 : !1
                        }
                    }
                      , d = (a.itemData.sharing_info.length,
                    o.customModal(b, controller, c));
                    d.result.then(function(b) {
                        for (var c = [], d = 0; d < b.length; d++) {
                            var e = {
                                published_to: b[d].id,
                                type: b[d].type,
                                access_level: "ALL"
                            };
                            c.push(e)
                        }
                        var f = m.updateSharingInfo(null , c, a.itemData.app_instance_id, a.itemData.resource_id);
                        p.showBanner_promise(f, "Updating sharing info", null , "Error", !1, !1, null )
                    })
                }
                function R() {
                    var b = "home/components/cnvAddTagsWidget/cnvAddTagsWidget.tpl.html"
                      , c = "cnvAddTagsWidgetCtrl"
                      , d = {
                        tags: function() {
                            return a.itemData.tags
                        }
                    }
                      , e = o.customModal(b, c, d);
                    e.result.then(function(b) {
                        for (var c = [], d = 0; d < b.length; d++)
                            c.push("#" === b[d].label.charAt(0) ? b[d].label : "#" + b[d].label);
                        t.trackEvent(t.ADDED_TAGS_TO_POST, {
                            Via: "In Feed Modal"
                        });
                        m.updateTags(null , c.join(), a.itemData.app_instance_id, a.itemData.resource_id)
                    })
                }
                function S() {
                    var b = {
                        app_instance_id: a.itemData.app_instance_id,
                        resource_id: a.itemData.resource_id,
                        resource_name: a.itemData.hierarchy[0].title,
                        resource_type: a.itemData.resource_type,
                        type: "SCRYBE"
                    }
                      , c = g.getGroup(l.getToFilter().value);
                    c.pinContentToGroup(b)
                }
                function T() {
                    var b = a.itemData.app_instance_id;
                    a.itemData.is_system_message;
                    return 3 == b || 4 == b || 6 == b || 14 == b ? !0 : !1
                }
                function U() {
                    setTimeout(function() {
                        a.evaluatePostPermissions(),
                        T() && D(),
                        a.commentEditorCtrl.permissions = new z,
                        a.$broadcast("render"),
                        a.$broadcast("refreshImage"),
                        a.$broadcast("render_date"),
                        a.$broadcast("render:boRepeat:feedItemSharingInfo")
                    }, 0)
                }
                if (a.dropdownCtrl = {},
                a.noteFeedItemCtrl = {},
                a.HACK_CHECK_FOR_FEED = {
                    state: !0
                },
                a.isGuest = k.isGuestUser(),
                a.isAdminMode = k.isAdminMode(),
                a.MP_DATA_SOURCE = {
                    currentSubApp: "feed"
                },
                a.commentsInEditModeCurrentFocus = {
                    state: null ,
                    status: "new_comment"
                },
                a.permissionsDropdownIconConditions = {
                    canEdit: !1,
                    canComment: !1,
                    canView: !1
                },
                a.relatedPermissions = {
                    canEdit: !1,
                    canComment: !1,
                    canView: !1
                },
                a.itemData.enable_permissions_tooltip) {
                    a.itemData.enable_permissions_tooltip = !1;
                    var V = function() {
                        setTimeout(function() {
                            a.createPermissionsTooltip()
                        }, 1500),
                        w.recordAction("post_permissions_tooltip_shown"),
                        n.login_data && n.login_data.onboarding_state && n.login_data.onboarding_state.show_post_permissions_tooltip && (n.login_data.onboarding_state.show_post_permissions_tooltip = 0)
                    }
                    ;
                    w.isOnboardingStepsCompleted() || 1 === w.getChecklist().onboarding_dismissed ? V() : w.on("cnvOnboarding:showUpgradeTooltip", V)
                }
                a.__leak = new x,
                a.openSharedInfoModal = function() {
                    var b, c = [];
                    for (var d in a.itemData.sharing_info)
                        b = a.itemData.sharing_info[d].published_to,
                        "USER" == a.itemData.sharing_info[d].type ? c.push(_.extend({
                            id: b,
                            typ: "USER"
                        }, q.getUser(b))) : "GROUP" == a.itemData.sharing_info[d].type && c.push(_.extend({
                            id: b,
                            typ: "GROUP"
                        }, q.getGroup(b)));
                    var e = "home/components/sharedInfoWidget/templates/sharedInfoModal.tpl.html"
                      , f = "sharedInfoModalCtrl"
                      , g = "cnv-shared-info-modal"
                      , h = {
                        sharedInfo: function() {
                            return c
                        }
                    };
                    o.customModal(e, f, h, g, !0)
                }
                ,
                a.evaluatePostPermissions = function() {
                    a.permissionsDropdownIconConditions.canEdit = a.permissionsDropdownIconConditions.canComment = a.permissionsDropdownIconConditions.canView = !1,
                    a.relatedPermissions.permissions = a.itemData.permissions,
                    a.relatedPermissions.loggedInUserPermissions = a.itemData.logged_in_user_permissions,
                    a.relatedPermissions.canChangePermissions = a.itemData.can_change_permissions,
                    a.relatedPermissions.canEdit = a.itemData.logged_in_user_permissions.checkBitAt(3),
                    a.relatedPermissions.canComment = a.itemData.logged_in_user_permissions.checkBitAt(2),
                    a.relatedPermissions.canView = a.itemData.logged_in_user_permissions.checkBitAt(1),
                    a.itemData.permissions.checkBitAt(3) ? a.permissionsDropdownIconConditions.canEdit = !0 : a.itemData.permissions.checkBitAt(2) ? a.permissionsDropdownIconConditions.canComment = !0 : a.itemData.permissions.checkBitAt(1) && (a.permissionsDropdownIconConditions.canView = !0),
                    a.commentEditorCtrl && (a.commentEditorCtrl.itemSharingInfoWithDropdownItems = a.itemData.itemSharingInfoWithDropdownItems)
                }
                ,
                a.evaluatePostPermissions(),
                a.openLikeInfoModal = function() {
                    r.openPostLikeInfoModal(a.itemData.hierarchy[0].uid, a.itemData.hierarchy[0].uid, a.itemData.app_instance_id, 1)
                }
                ,
                a.$watch("itemData._dirty", function() {
                    a.itemData._dirty && (a.itemData._dirty = !1,
                    U())
                }),
                a.$on("setItemDirty", function(a) {
                    U()
                }),
                a.openChatDetails = function() {
                    var b, c, d = {}, e = [];
                    for (var f in a.itemData.sharing_info)
                        b = a.itemData.sharing_info[f].published_to,
                        c = q.getUser(b),
                        c.userId = b,
                        e.push(c);
                    d.chatId = a.itemData.hierarchy[0].uid,
                    d.chatParticipants = e,
                    d.data = a.itemData.data,
                    d.chatType = function() {
                        return "groupchat" == a.itemData.data.chatType ? 2 : 1
                    }(),
                    d.messageInfo = null ,
                    a.$emit("openChatWindow", d)
                }
                ,
                a.onLikeClick = function(c) {
                    var d = a.itemData;
                    return b.likeResource(d.feed_id, d.resource_id, d.app_instance_id, c, d.hierarchy[0].title, d.hierarchy[0].type)
                }
                ,
                a.likeInfoTooltipText = function(b) {
                    j("getFeedItemLikeInfo")(a.itemData, b)
                }
                ,
                a.setCurrentCommentInEdit = function(b) {
                    a.commentsInEditModeCurrentFocus.state = b,
                    a.commentsInEditModeCurrentFocus.status = null 
                }
                ,
                a.commentEditorCtrl = new y,
                a.showAndActivateCommentsPanel = function(b, c) {
                    a.showCommentsPanel = !0,
                    a.$broadcast("render"),
                    setTimeout(function() {
                        a.commentEditorCtrl.initialized && a.commentEditorCtrl.activate(b || "", c)
                    }, 0)
                }
                ,
                a.onCommentButtonClick = function() {
                    return a.showAndActivateCommentsPanel(),
                    !1
                }
                ,
                a.onCommentReplyButtonClick = function(b) {
                    if (a.commentEditorCtrl.initialized && !a.commentEditorCtrl.waiting) {
                        var c = ""
                          , d = i.getUserListItem(b);
                        if (d) {
                            var e = h(d.id, d.type, !0).slice(1);
                            e = e.slice(0, e.indexOf("#")) + "&ignoreatmention=1" + e.slice(e.indexOf("#")),
                            c = '<a class="' + i.AT_MENTION_DOM_CLASSES.MENTION + '" href="convo:' + e + '">@' + _.escape(d.label) + "</a>&nbsp;"
                        }
                        a.commentEditorCtrl.snippetData && a.removeCommentEditorSnippet(),
                        a.showAndActivateCommentsPanel(c, !0)
                    }
                }
                ,
                a.actionOnFeed = function(a, b) {
                    switch (a.label) {
                    case "Edit":
                        console.log(a.label);
                        break;
                    case "Add tags":
                        console.log(a.label),
                        e.showAddTagModal("Add tags", "", b.tags);
                        break;
                    case "Star this post":
                        console.log(a.label);
                        break;
                    case "Share with others":
                        console.log(a.label);
                        var c = C(b.sharing_info);
                        e.showShareWithOtherModal("Share with others", "To:", c);
                        break;
                    default:
                        console.log(a.label)
                    }
                }
                ,
                a.isUserOrGroupNotAccessible = function(a) {
                    return a = "USER" == a.type ? q.getUser(a.published_to) : q.getGroup(a.published_to),
                    !a.accessible
                }
                ,
                a.onSnippetCliek = function() {
                    a.selectText()
                }
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvComment", ["$compile", "$filter", "$timeout", "textSelections", "utils", "mixpanelService", "bannerService", "Comments", "$rootScope", "alertsService", function(b, d, e, f, g, h, i, j, k, l) {
        return {
            restrict: "A",
            transclude: !0,
            scope: !0,
            templateUrl: "feed/renderers/comment/cnvComment.tpl.html",
            link: function(e, k, l) {
                function m() {}
                function n(a, b) {}
                function o(a, b) {
                    if (e.editCommentEditorCtrl && b.currentlyFocusedEditor === e.commentData.uid) {
                        var c = b.data
                          , d = e.getOpenedResource()
                          , f = e.commentData.resource_link.hierarchy
                          , g = d.uid || d.resource_id;
                        if (g == f[f.length - 1].uid) {
                            var h = !0;
                            e.editCommentEditorCtrl.attachments.controllers && e.editCommentEditorCtrl.attachments.controllers.manager_controller && e.editCommentEditorCtrl.attachments.controllers.manager_controller.initialized && (h = !1,
                            i.showBanner("You can add one attachment to comments at a time.", !1, !1, null , 3e3)),
                            h && (e.editCommentEditorCtrl.snippetData = c,
                            e.editCommentEditorCtrl.setAllowAttachments(!1),
                            e.editCommentEditorCtrl.attachContext = !0,
                            e.editCommentEditorCtrl.setFocus(),
                            e.$$phase || e.$digest(),
                            e.$emit("setItemDirty"))
                        } else
                            i.showBanner("You can not change context for this comment.", !1, !1, null , 3e3)
                    }
                }
                function p(a) {
                    var b = a.find("> p:last-child");
                    return b.length || (b = a),
                    b
                }
                function q() {
                    k && (e.showMore == c && (e.showMore = !1),
                    D = k.find(".comment-inner.less"),
                    E = k.find(".comment-inner.full"),
                    D.empty(),
                    E.empty(),
                    E.append(e.commentData.comment_text),
                    e.commentData.summary ? (D.append(e.commentData.summary),
                    (e.commentData.resource_link.collaboration_info && e.commentData.resource_link.collaboration_info.snippet_data || e.commentData.summary) && (p(D).append(b("<span>...</span><span class='truncate-placeholder hover_underline' ng-click='toggle()'>more<span>")(e)),
                    p(E).append(b("<span class='truncate-placeholder hover_underline' ng-click='toggle()'>less<span>")(e)))) : e.commentData.has_more_text ? (e.commentData.resource_link.collaboration_info && e.commentData.resource_link.collaboration_info.snippet_data ? D.append(e.commentData.comment_text_less_snippet) : e.commentData.has_more_text ? D.append(e.commentData.comment_text_less) : D.append(e.commentData.comment_text),
                    (e.commentData.resource_link.collaboration_info && e.commentData.resource_link.collaboration_info.snippet_data || e.commentData.has_more_text) && (p(D).append(b("<span class='truncate-placeholder hover_underline' ng-click='toggle()'>more<span>")(e)),
                    p(E).append(b("<span class='truncate-placeholder hover_underline' ng-click='toggle()'>less<span>")(e)))) : D.append(e.commentData.comment_text))
                }
                function r(b) {
                    F && ($(F).off("click", G),
                    $(F).hide(),
                    F = null ),
                    $("body").off("click", r),
                    a.removeEventListener("scroll", s, !0)
                }
                function s(b) {
                    if (F) {
                        console.log("event triggered");
                        var c = k.find(".comment_body").offset().top
                          , d = $(F).offset().top
                          , e = k.closest(".comments-collection")
                          , f = e.offset().top
                          , g = f + e.height();
                        if (0 == H && (H = d - c),
                        d + 50 > f && g > d + 30) {
                            var h = c + H;
                            $(F).css({
                                top: h
                            })
                        } else
                            $(F).off("click", G),
                            $(F).hide(),
                            $("body").off("click", r),
                            a.removeEventListener("scroll", s, !0),
                            F = null 
                    }
                }
                function t(b) {
                    var c = $(b.target).find(".comment-inner:visible")[0];
                    c || (c = $(b.target).closest(".comment-inner:visible")[0]);
                    var d = f.getSelection(c);
                    if (d && d.sel && d.sel.getRangeAt(0).endContainer.parentNode.classList.contains("truncate-placeholder")) {
                        if (d.sel.getRangeAt(0).startContainer == d.sel.getRangeAt(0).endContainer)
                            return;
                        var h = document.createRange();
                        h.setStart(d.sel.getRangeAt(0).startContainer, d.sel.getRangeAt(0).startOffset),
                        "more" == d.sel.getRangeAt(0).endContainer.nodeValue ? h.setEnd(d.sel.getRangeAt(0).endContainer.parentNode.previousSibling.previousSibling, d.sel.getRangeAt(0).endContainer.parentNode.previousSibling.previousSibling.nodeValue.length) : h.setEnd(d.sel.getRangeAt(0).endContainer.parentNode.previousSibling, d.sel.getRangeAt(0).endContainer.parentNode.previousSibling.nodeValue.length),
                        f.mkSelection(h),
                        d = f.getSelection(c)
                    }
                    $("body").off("click", r),
                    a.removeEventListener("scroll", s, !0),
                    F && $(F).off("click", G),
                    d && d.beginIndex < d.endIndex && "" != d.text.trim() && e.relatedPermissions.canComment && (F = f.showIcoAboveSel($("body")[0], d.sel.getRangeAt(0).nativeRange),
                    F && $(F).show(),
                    H = 0,
                    G = function(b) {
                        if (b.target.classList.contains("cross"))
                            return f.rmAllSelections(),
                            void (F && (F.remove(),
                            F = null ));
                        var c = {
                            snippetData: {
                                type: "scrybe.components.snippet.NotesSnippet",
                                data: {
                                    beginIndex: d.beginIndex,
                                    endIndex: d.endIndex,
                                    text: d.text,
                                    source: "comment"
                                }
                            },
                            fileViewerTextAnnotation: !0
                        };
                        e.getOpenedResource();
                        c.snippetData.data.snippetId = g.generateUniqueId();
                        var h = {
                            replied_to_comment_id: e.commentData.uid,
                            replied_to_user_id: e.commentData.from_user,
                            parent_resource_index: 0
                        };
                        e.$emit("Comment:replySnippetCreated", c, h),
                        $(F).off("click", G),
                        a.removeEventListener("scroll", s, !0),
                        $(F).hide(),
                        F = null ,
                        b.stopPropagation()
                    }
                    ,
                    $("body").on("click", r),
                    a.addEventListener("scroll", s, !0),
                    $(F).on("click", G))
                }
                function u(a) {
                    function b() {
                        return e.innerText.replace(/\n/g, "")
                    }
                    function c(a) {
                        k.find(".sel-text-highlight").position();
                        h.trackEvent(h.ANNOTATION_PLAYBACK, {
                            Type: "Comment",
                            "Snippet Type": "Text",
                            Via: "Comment Panel"
                        })
                    }
                    function d() {}
                    var e = k.find(".comment_txt .comment-inner:visible")[0]
                      , g = {
                        data: a,
                        nodes: e,
                        scrollContainer: k.closest(".comments-scrollable-panel")[0],
                        highlight: !0,
                        highlightRemoveTime: null ,
                        selectionOffset: 10,
                        getContent: b,
                        complete: c,
                        failure: d
                    };
                    f.selectText("nested", g)
                }
                function v(a) {
                    setTimeout(function() {
                        t(a)
                    }, 0)
                }
                function w() {
                    var a = k.find("div._container > div.comment_body > div.comment_txt div.comment-inner-less").html()
                      , b = "selecting some text"
                      , c = a.indexOf("refer")
                      , d = a.indexOf("specific") + 8;
                    b = b.replace(/(\s+)/, "(<[^>]+>)*$1(<[^>]+>)*");
                    var f = new RegExp("(" + b + ")","gi");
                    a = a.replace(f, "<mark class='onboarding-comment-highlight'>$1<span></span></mark>"),
                    a = a.replace(/(<mark>[^<>]*)((<[^>]+>)+)([^<>]*<\/mark>)/, "$1</mark>$2<mark>$4"),
                    k.find("div._container > div.comment_body > div.comment_txt div.comment-inner-less").html(a);
                    var h = "<div class='sel-open-comments text-operations arrow-center visible onboarding-annotation-tooltip cnv-onboarding-clickable'><span class='cross cnv-icons-20 icons2_Close-darkgray cnv-onboarding-clickable'></span><i class='cnv-icons-20 icons_Comments-white cnv-onboarding-clickable'></i><span class='cnv-onboarding-clickable'>Comment on this</span></div>";
                    k.append(h),
                    k.find(".onboarding-annotation-tooltip").on("click", function(a) {
                        var b = {
                            snippetData: {
                                type: "scrybe.components.snippet.NotesSnippet",
                                data: {
                                    beginIndex: c,
                                    endIndex: d,
                                    text: "selecting some text",
                                    source: "comment"
                                }
                            },
                            fileViewerTextAnnotation: !0
                        };
                        b.snippetData.data.snippetId = g.generateUniqueId();
                        var f = {
                            replied_to_comment_id: e.commentData.uid,
                            replied_to_user_id: e.commentData.from_user,
                            parent_resource_index: 0
                        };
                        e.$emit("Comment:replySnippetCreated", b, f),
                        e.$emit("cnvOnboarding:showAnnotationAddCommentTooltip"),
                        k.find(".onboarding-annotation-tooltip").off("click"),
                        k.find(".onboarding-annotation-tooltip").remove()
                    })
                }
                function x() {
                    k.find(".onboarding-annotation-tooltip").remove()
                }
                function y(a) {
                    if (!I) {
                        I = !0;
                        var b = document.createElement("img");
                        b.onload = function() {
                            k.find(".attachment-cont .cnv-spinner").addClass("ng-hide"),
                            I = !1,
                            J = !0,
                            e.$broadcast("render"),
                            e.$$phase || e.$digest()
                        }
                        ,
                        b.onerror = function() {
                            I = !1,
                            setTimeout(y, 100)
                        }
                        ,
                        b.src = a
                    }
                }
                e.__leak_comment = new m;
                var z = !1
                  , A = !1
                  , B = !1
                  , C = e.itemData;
                e.$on("embedSnippetImageInComment", o),
                e.$on("closeCommentInEditMode", n),
                e.commentData.is_posting && ($(k).closest(".comments-scrollable-panel").addClass("bring-front"),
                $(k).addClass("this-user-new-comment behind"),
                setTimeout(function() {
                    $(k).closest(".comments-scrollable-panel").removeClass("bring-front"),
                    $(k).removeClass("behind")
                }, 500)),
                e.commentData._unread && ($(k).closest(".comments-scrollable-panel").addClass("bring-front"),
                $(k).addClass("unread-comment remote-user-new-comment behind"),
                setTimeout(function() {
                    $(k).closest(".comments-scrollable-panel").removeClass("bring-front"),
                    $(k).removeClass("behind")
                }, 500)),
                e.$on("render", function() {
                    e.commentData._unread ? $(k).addClass("unread-comment") : $(k).removeClass("unread-comment remote-user-new-comment")
                });
                var D, E;
                e.getCommentText = function() {
                    var a = E.html();
                    return a = a.replace(/<span .*?class=".*?truncate-placeholder.*?">.*?<\/span>/g, "")
                }
                ,
                e.updateCommentText = function() {
                    q()
                }
                ,
                e.setCommentText = q,
                q();
                var F, G, H = 0;
                setTimeout(function() {
                    var a = k[0];
                    a && a.addEventListener("mouseup", v)
                }, 0),
                e.$on("Comments:hideCommentsForReplySnippetPlayback", function(a, b) {
                    b.hasOwnProperty(e.commentData.uid) && (k.slideUp(700),
                    z = !0)
                }),
                e.$on("Comments:displayShowAllButton", function(a, b) {
                    b == e.commentData.uid && (k.find(".show-all-cont").slideDown(400),
                    A = !0,
                    k.find(".separator").hide())
                }),
                e.$on("Comments:source-comment-pointer", function(a, b) {
                    if (b == e.commentData.uid) {
                        var c = k.find(".source-comment-pointer")
                          , d = k.find(".pic_container").position().top;
                        c.css("top", d + 40 + 4),
                        c.show(),
                        B = !0
                    }
                }),
                e.$on("Comments:replied-comment-pointer", function(a, b) {
                    b == e.commentData.uid && (k.find(".replied-comment-pointer").show(),
                    B = !0,
                    e.currentlyPlayingCommentSnippet = !0,
                    e.$emit("setItemDirty"))
                }),
                e.$on("Comments:highlightText", function(b, c, d) {
                    c == e.commentData.uid && (e.showMore = !0,
                    e.immediateUpdateAttachmentStyles(),
                    e.$emit("setItemDirty"),
                    e.$$phase || e.$digest(),
                    a.setTimeout(function() {
                        a.setTimeout(function() {
                            d.data.commentId = c,
                            f.rmAllSelections(),
                            u(d.data),
                            k.removeClass("remote-user-new-comment")
                        }, 0)
                    }, 0))
                }),
                e.$on("Comments:showAllWithoutAnim", function(a) {
                    z && (e.currentlyPlayingCommentSnippet = !1,
                    k.show()),
                    A && (f.rmAllSelections(),
                    k.find(".show-all-cont").hide(),
                    k.find(".separator").show()),
                    B && (k.find(".source-comment-pointer").hide(),
                    k.find(".replied-comment-pointer").hide(),
                    e.currentlyPlayingCommentSnippet = !1,
                    e.$emit("setItemDirty"))
                }),
                e.$on("Comments:showAll", function(b) {
                    z && k.slideDown(700),
                    A && (f.rmAllSelections(),
                    k.find(".show-all-cont").slideUp(400),
                    k.find(".source-comment-pointer").hide(),
                    a.setTimeout(function() {
                        k.find(".separator").show()
                    }, 400)),
                    B && (k.find(".source-comment-pointer").hide(),
                    k.find(".replied-comment-pointer").hide(),
                    e.currentlyPlayingCommentSnippet = !1,
                    e.$emit("setItemDirty"))
                }),
                e.$on("cnvOnboarding:highlightTextAndShowTooltip", function(a, b) {
                    b == e.commentData.uid && w()
                }),
                e.$on("cnvComment:removeCommentAnimFlags", function(a, b) {
                    C.feed_id == b && (e.commentData.is_posting = !1,
                    e.commentData._unread = !1,
                    $(k).closest(".comments-scrollable-panel").removeClass("bring-front"),
                    $(k).removeClass("behind").removeClass("this-user-new-comment"),
                    $(k).closest(".comments-scrollable-panel").removeClass("bring-front"),
                    $(k).removeClass("behind"))
                }),
                e.$on("cnvComment:removeHighlightTextAndShowTooltip", function(a, b) {
                    b == e.commentData.uid && x()
                });
                var I = !1
                  , J = !1;
                e.loadAttachment = function(a) {
                    var b = "";
                    return a && "gif" === a.type ? J ? b = d("getOriginalImagePath")(a.original_name, e.resourceId, e.appInstanceId) : (k.find(".attachment-cont .cnv-spinner").removeClass("ng-hide"),
                    b = d("getCommentAttachmentThumbnailPath")(a, e.resourceId, 0),
                    y(y(d("getOriginalImagePath")(a.original_name, e.resourceId, e.appInstanceId)))) : b = d("getCommentAttachmentThumbnailPath")(a, e.resourceId, 0),
                    b
                }
                ;
                e.lazyLoadImage = function() {
                    if (e.commentData.files && e.commentData.files.length && e.commentData.files[0].preLocalData) {
                        var a = function b() {
                            j.once("commentsUpdated", function(a) {
                                if (a.resource_id === e.resourceId) {
                                    var c = j.getCommentFromStore(e.commentData.uid, e.commentData.resource_id, e.commentData.app_instance_id);
                                    if (c.files[0].thumbnail_name) {
                                        var f = document.createElement("img");
                                        f.onload = function() {
                                            e.commentData.files[0].preLocalData = null ,
                                            e.$broadcast("render"),
                                            e.$$phase || e.$digest()
                                        }
                                        ,
                                        f.onerror = function() {
                                            setTimeout(b, 1e3)
                                        }
                                        ,
                                        f.src = d("getCommentAttachmentThumbnailPath")(c.files[0], e.resourceId, 0)
                                    } else
                                        c.files[0].preLocalData = null 
                                }
                            })
                        }
                        ;
                        a()
                    }
                }
                ,
                e.lazyLoadImage(),
                e.getElement = function() {
                    return k
                }
                ;
                var K = null ;
                e.saveCommentHeight = function() {
                    K = k.height()
                }
                ,
                e.revealCommentAfterEditSeemlessly = function(a) {
                    k.height(K),
                    k.find("hr.separator").hide(),
                    a && (e.hideAttachments = !0),
                    setTimeout(function() {
                        k.height("auto"),
                        k.find("hr.separator").show(),
                        a && (e.hideAttachments = !1,
                        k.find(".comment-attachments").removeClass("ng-hide"))
                    }, 150)
                }
                ,
                e.immediateUpdateAttachmentStyles = function() {
                    e.calcAttachmentHeight(),
                    k.find(".comment-attachments .comment-attachment").css(e.attachmentStyles)
                }
                ,
                e.toggle = function() {
                    e.showMore = !e.showMore,
                    e.immediateUpdateAttachmentStyles(),
                    e.$emit("setItemDirty")
                }
            },
            controller: ["$scope", "$filter", "Likes", "$q", "resourceLikeInfoModalService", "userInfo", "awsService", "accountInfo", "resourcesTabsManager", "config", "nativeCommBridge", "mixpanelService", "UploadService", function(a, b, d, e, f, h, i, m, n, o, p, q, r) {
                function s(b, c) {
                    function d() {
                        function b() {
                            var b = !0;
                            if (a.editCommentEditorCtrl.attachments.controllers && a.editCommentEditorCtrl.attachments.controllers.manager_controller && a.editCommentEditorCtrl.attachments.controllers.manager_controller.initialized) {
                                for (var e = a.editCommentEditorCtrl.attachments.controllers.manager_controller.getSuccessfullyProcessedFiles(), f = 0; f < e.length; f++)
                                    e[f].status === r.FILE_STATUS_CONVERSION_REQ_FAILED && e.splice(f, 1);
                                for (var f = 0; f < e.length; f++) {
                                    var g = e[f]
                                      , h = null ;
                                    g.fileObjFromServer ? h = [g.fileObjFromServer] : a.commentData.files && (h = [a.commentData.files[0]]),
                                    d.serverData.push({
                                        name: g.name,
                                        size: g.size,
                                        type: g.type
                                    }),
                                    g.inEdit ? (d.serverData[f].file_name_id = g.serverFileId ? g.serverFileId : g.original_name.trim().split(".")[0],
                                    d.serverData[f].file_id = g.fileId ? g.fileId : g.file_id) : (d.serverData[f].file_name_id = g.fileId ? g.fileId : g.file_id,
                                    d.serverData[f].file_id = g.serverFileId ? g.serverFileId : g.original_name.trim().split(".")[0]),
                                    d.data.push({
                                        preLocalData: g.localUrl,
                                        thumbnail_name: g.thumbnailName || g.thumbnail_name,
                                        isDefaultThumbnail: -1 == g.localUrl.indexOf("files/fileIcons") ? !1 : !0,
                                        origional_file: h,
                                        height: g.height || 90,
                                        width: g.width || 90
                                    })
                                }
                            }
                            var i = a.editCommentEditorCtrl.snippetData;
                            i && i.hasOwnProperty("snippetData") && (i = a.editCommentEditorCtrl.snippetData.snippetData),
                            0 === d.serverData.length && 0 === c.length && (b = !1),
                            b && (j.editComment(a.commentData.uid, a.commentData.citem_uid, c, a.resourceId, a.appInstanceId, a.editCommentEditorCtrl.attachContext, i, d).success(function(b) {
                                a.calcAttachmentHeight(),
                                a.lazyLoadImage(),
                                setTimeout(function() {
                                    u()
                                }, 0),
                                a.$emit("setItemDirty")
                            }).error(function(b) {
                                a.updateCommentText(),
                                a.calcAttachmentHeight(),
                                a.$emit("setItemDirty"),
                                a.$broadcast("render_date")
                            }),
                            a.revealCommentAfterEditSeemlessly(!0),
                            a.editCommentEditorCtrl.deactivate(),
                            a.editCommentEditorCtrl = null ,
                            a.hasOwnProperty("commentEditorCtrl") && (a.commentEditorCtrl = null ),
                            a.updateCommentText(),
                            a.calcAttachmentHeight(),
                            a.$emit("setItemDirty"),
                            a.$broadcast("render_date"))
                        }
                        c = c.replace(/<p>&#160;<\/p>|<p>&nbsp;<\/p>|\n/g, "<br>").replace(/^(<br>)*|(<br>)*$/g, ""),
                        !a.editCommentEditorCtrl.attachContext || a.editCommentEditorCtrl.snippetData || a.commentData.resource_link.collaboration_info || (a.editCommentEditorCtrl.attachContext = !1),
                        a.editCommentEditorCtrl.snippetData = a.editCommentEditorCtrl.snippetData || null ;
                        var d = {
                            serverData: [],
                            data: []
                        };
                        if (a.editCommentEditorCtrl.attachments.controllers && a.editCommentEditorCtrl.attachments.controllers.manager_controller && a.editCommentEditorCtrl.attachments.controllers.manager_controller.initialized && a.editCommentEditorCtrl.attachments.controllers.manager_controller.isBusy()) {
                            var e = a.$on("filesUploadManagerCtrl_allFilesProcessed", function(c) {
                                e(),
                                c.stopPropagation();
                                for (var d = a.editCommentEditorCtrl.attachments.controllers.manager_controller.getSuccessfullyProcessedFiles(), f = 0; f < d.length; f++)
                                    d[f].status === r.FILE_STATUS_CONVERSION_REQ_FAILED && d.splice(f, 1);
                                0 == d.length ? (l.alertModal("Convo alert", "The file could not be attached. Please try again."),
                                a.commentEditorCtrl.waiting = !1) : b()
                            });
                            a.editCommentEditorCtrl.waiting = !0
                        }
                        a.editCommentEditorCtrl.waiting || b()
                    }
                    if (a.relatedPermissions.canComment) {
                        if (a.editCommentEditorCtrl.snippetData && a.editCommentEditorCtrl.snippetData.imageData && !a.editCommentEditorCtrl.snippetData.fileViewerTextAnnotation) {
                            var e = A(a.editCommentEditorCtrl.snippetData.imageData)
                              , f = m.getAccountId() + "/snippets/" + a.commentData.uid + "/" + a.editCommentEditorCtrl.snippetData.snippetData.data.fileName;
                            i.uploadSnippetImage(e, f).success(function() {
                                a.editCommentEditorCtrl.waiting = !1,
                                d()
                            }).error(function() {
                                a.editCommentEditorCtrl.waiting = !1
                            }),
                            a.editCommentEditorCtrl.waiting = !0
                        } else
                            d();
                        a.$emit("snippetImagePosted")
                    } else
                        l.alertModal("Convo", "You no longer have permissions to comment on this post.", "Ok", function() {
                            _commentsBlockedAlertPending = !1
                        }, !0, !0)
                }
                function t(a) {
                    u()
                }
                function u() {
                    "right" == a.alignDropDowns && (a.cmmtDropdownCtrl.align = "right"),
                    a.cmmtDropdownCtrl.type = "circleLessChevron",
                    a.cmmtDropdownCtrl.fixedPosition = !0,
                    a.cmmtDropdownCtrl.options = [],
                    a.cmmtDropdownCtrl.options.push({
                        label: "Copy comment link",
                        callback: a.copyCommentLink
                    }),
                    a.commentData.files && a.commentData.files.length && a.cmmtDropdownCtrl.options.push({
                        label: "Copy attachment link",
                        callback: function() {
                            g.copyToClipboard(o.CONVO_LINKS_BASE_URL + b("getCommentAttachmentUrl")(a.commentData, a.commentData.files[0].file_id, a.commentData.files[0].file_format.toLowerCase(), a.commentData.files[0].name).slice(1))
                        }
                    }),
                    2 != a.commentData.update_kind && a.commentData.from_user == h.getUserId() && a.relatedPermissions && a.relatedPermissions.canComment && a.cmmtDropdownCtrl.options.push({
                        label: "Edit",
                        callback: y
                    }),
                    2 == a.commentData.update_kind || a.commentData.from_user != h.getUserId() && !h.isAdminMode() || a.cmmtDropdownCtrl.options.push({
                        label: "Delete",
                        callback: z
                    })
                }
                function v(b, c, d, e) {
                    var f = {
                        min: 23
                    };
                    return {
                        initialized: !1,
                        commentEdit: !0,
                        comment_uid: b,
                        clickOutsideExit: !0,
                        instantLoad: !0,
                        attachContext: !0,
                        height: f,
                        initialText: c,
                        snippetData: x(d),
                        attachedFiles: e,
                        getNoteId: function() {
                            return a.resourceId
                        },
                        getAppInstanceId: function() {
                            return a.appInstanceId
                        },
                        onFocus: function() {
                            a.setCurrentCommentInEdit(a.commentData.uid)
                        },
                        onEscInCommentEditorEditor: function() {
                            a.editCommentEditorCtrl = null ,
                            a.hasOwnProperty("commentEditorCtrl") && (a.commentEditorCtrl = null ),
                            a.revealCommentAfterEditSeemlessly(!0),
                            a.$emit("setItemDirty"),
                            a.$emit("snippetImagePosted")
                        },
                        permissions: new w,
                        onCommentEntered: s
                    }
                }
                function w() {
                    var a = {
                        block: !1,
                        disable: !1
                    };
                    return a
                }
                function x(a) {
                    var b = null ;
                    return a && ("scrybe.components.snippet.NotesSnippet" === a.type ? (b = {},
                    "comment" === a.data.source ? b.classes = "comment_snippet" : b.classes = "detail_snippet",
                    b.fileViewerTextAnnotation = !0,
                    b.snippetData = a) : b = a),
                    b
                }
                function y() {
                    a.saveCommentHeight(),
                    a.revealCommentAfterEditSeemlessly(),
                    a.commentWillGoInEdit(a.commentData.uid, a.getElement()),
                    a.commentEditorCtrl = a.editCommentEditorCtrl = new v(a.commentData.uid,a.getCommentText(),a.commentData.resource_link.collaboration_info.snippet_data,a.commentData.files),
                    a.setCurrentCommentInEdit(a.commentData.uid),
                    a.$emit("setItemDirty")
                }
                function z() {
                    j.deleteComment(a.commentData.uid, a.resourceId, a.appInstanceId).then(function(b) {
                        a.$emit("setItemDirty"),
                        h.isAdminMode() && u()
                    })
                }
                function A(a) {
                    var b;
                    b = a.split(",")[0].indexOf("base64") >= 0 ? atob(a.split(",")[1]) : unescape(a.split(",")[1]);
                    for (var c = a.split(",")[0].split(":")[1].split(";")[0], d = new Uint8Array(b.length), e = 0; e < b.length; e++)
                        d[e] = b.charCodeAt(e);
                    return new Blob([d],{
                        type: c
                    })
                }
                a.showMore = !1,
                a.commentInjected = "";
                a.itemData ? (a.commentInjected = "feed-comment-panel",
                a.resourceId = a.itemData.resource_id,
                a.appInstanceId = a.itemData.app_instance_id,
                a.resourceType = "" + a.itemData.app_instance_id) : a.noteData ? (a.commentInjected = "right-comment-panel",
                a.resourceId = a.noteData.item.item_id,
                a.appInstanceId = a.noteData.item.type,
                a.resourceType = "" + a.noteData.item.type) : a.linkData && (a.commentInjected = "right-comment-panel",
                a.resourceId = a.linkData.item.item_id,
                a.appInstanceId = a.linkData.item.type,
                a.resourceType = "" + a.linkData.item.type),
                a.currentlyPlayingCommentSnippet = !1,
                a.attachmentStyles = {},
                a.calcAttachmentHeight = function(b) {
                    if (a.commentData.files && a.commentData.files.length) {
                        var c = j.getCommentFromStore(a.commentData.uid, a.commentData.resource_id, a.commentData.app_instance_id);
                        if (c.files && c.files.length) {
                            var d, e = c.files[0].width, f = c.files[0].height;
                            d = b ? b : !c.comment_text || a.showMore ? 170 : !c.summary || !c.has_more_text && c.is_posting ? 135 : 90;
                            var g = f / e;
                            a.attachmentStyles.height = Math.min(d, f),
                            a.attachmentStyles.width = a.attachmentStyles.height / g,
                            "feed-comment-panel" === a.commentInjected ? a.attachmentStyles.width > 384 && (a.attachmentStyles.width = 384,
                            a.attachmentStyles.height = g * a.attachmentStyles.width) : a.attachmentStyles.width > 264 && (a.attachmentStyles.width = 264,
                            a.attachmentStyles.height = g * a.attachmentStyles.width)
                        }
                    }
                }
                ,
                a.calcAttachmentHeight(),
                a.cmmtDropdownCtrl = {},
                a.thisUserInfo = h,
                _.extend(a.editCommentEditorCtrl, Backbone.Events),
                a.loadAndDisplayImage = function() {
                    var c = a.commentData
                      , d = c.resource_link.collaboration_info.snippet_data.imageData;
                    return d ? d : b("getSnippetImagePath")(c.resource_link.collaboration_info.snippet_data.data.fileName, c.uid)
                }
                ,
                a.isHomeTabSelected = n.isHomeTabSelected(),
                a.onLikeClick = function(b) {
                    return d.likeConversation(a.commentData.uid, a.resourceId, a.appInstanceId, b)
                }
                ,
                a.openLikeInfoModal = function() {
                    f.openCommentLikeInfoModal(a.commentData.uid)
                }
                ,
                a.likeInfoTooltipText = function(c) {
                    b("getCommentLikeInfo")(a.commentData.uid, c)
                }
                ,
                a.selectText = function(b) {
                    var c, d, e = b.resource_link;
                    e.resource_path.hierarchy[1] && !n.isHomeTabSelected() ? (c = "drawSnippetOnCanvas",
                    d = a,
                    e.collaboration_info.snippet_data.data.fileId || (e.collaboration_info.snippet_data.data.fileId = e.hierarchy[1].uid)) : n.isHomeTabSelected() ? (c = "Feed:selectText",
                    d = a) : (c = "Editor:selectText",
                    d = k),
                    d.$emit(c, e.collaboration_info.snippet_data.data, b.uid)
                }
                ,
                a.retryFailedPostComment = function() {
                    j.retryFailedPostComment(a.commentData.uid, a.resourceId, a.appInstanceId)["finally"](function() {
                        a.$emit("setItemDirty")
                    }),
                    a.$emit("setItemDirty")
                }
                ,
                a.discardFailedPostComment = function() {
                    j.discardFailedPostComment(a.commentData.uid, a.resourceId, a.appInstanceId)
                }
                ,
                a.commentReplyPlayback = function() {
                    a.currentlyPlayingCommentSnippet = !0;
                    var b = a.commentData.resource_link.collaboration_info;
                    q.trackEvent(q.VIEW_THREAD),
                    a.$emit("Comment:ReplyCommentPlayback", b, a.commentData.uid)
                }
                ,
                a.copyCommentLink = function() {
                    g.copyToClipboard(o.CONVO_LINKS_BASE_URL + b("getCommentUrl")(a.commentData).slice(1))
                }
                ,
                a.$on("cnvNoteGallery:reloadThumbnails", function(b, c) {
                    if (c.hasOwnProperty(a.commentData.uid)) {
                        var d = {};
                        if (a.commentData.files) {
                            for (var e = 0, f = a.commentData.files.length; f > e; e++)
                                d[a.commentData.files[e].file_id] = !0;
                            console.log("kh: commentToVT: " + a.isThumbnailInViewY + " : " + a.isThumbnailInViewX + " : " + a.isAppFocused),
                            a.$broadcast("cnvNoteGallery:reloadThumbnailsHorizontal", d)
                        }
                    }
                }),
                a.$on("cnvInappCommentsPanel:itemDataUpdated", t),
                a.$on("render", function() {
                    a.showMore == c && (a.showMore = !1),
                    setTimeout(function() {
                        a.setCommentText()
                    }, 0),
                    a.calcAttachmentHeight(),
                    u()
                }),
                a.showHideCommentsPanel && console.log("holahola"),
                u()
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvCommentsPanel", ["userInfo", "bannerService", "Comments", "mixpanelService", "utils", "Feed", function(b, d, e, f, g, h) {
        return {
            restrict: "EA",
            scope: !0,
            templateUrl: "feed/renderers/comment/cnvCommentsPanel.tpl.html",
            controller: ["$scope", "Comments", "$filter", "$q", "$timeout", function(b, c, d, e, f) {
                function g(a) {
                    a.resource_id === b.itemData.resource_id && a.updateInfo && a.updateInfo.addedComments && a.updateInfo.addedComments.length && (b.loadedCommentsCount += a.updateInfo.addedComments.length)
                }
                function i(a) {
                    b.feed_data.isTextSearch ? (b.comments_data = c.initCommentsData(b.itemData.conversations, b.itemData.conversations_count, !0, !0),
                    a || b.$emit("setItemDirty")) : c.getComments_newApi(k, b.itemData.resource_id, b.itemData.app_instance_id, !1, 0, b.LATEST_COMMENTS_ONLY_COUNT).then(function(c) {
                        b.comments_data = c,
                        a || b.$emit("setItemDirty")
                    })
                }
                b.LATEST_COMMENTS_ONLY_COUNT = 2;
                var j = 10;
                b.comments_data = null ,
                b.loadingComments = !1,
                b.comments_expanded = !1,
                b.commentsInEditMode = 0,
                b.loadedCommentsCount = b.LATEST_COMMENTS_ONLY_COUNT,
                b.isTextSearch_previousValue = b.feed_data.isTextSearch;
                var k = h.getFeedIdOfResource(b.itemData.app_instance_id, b.itemData.resource_id);
                b.loadMoreComments = function() {
                    b.loadingComments || (b.loadingComments = !0,
                    b.$emit("setItemDirty"),
                    c.getComments_newApi(k, b.itemData.resource_id, b.itemData.app_instance_id, !0, b.comments_data.comments.length, j).then(function(a) {
                        b.comments_expanded = !0,
                        b.loadingComments = !1,
                        b.loadedCommentsCount += j,
                        b.$emit("setItemDirty")
                    }))
                }
                ,
                b.loadAllComments = function(d, f) {
                    if (!b.loadingComments) {
                        b.loadingComments = !0;
                        var g = e.defer();
                        return b.$emit("setItemDirty"),
                        c.getComments_newApi(k, b.itemData.resource_id, b.itemData.app_instance_id, !0, b.feed_data.isTextSearch ? 0 : b.comments_data.comments.length, 10).then(function(e) {
                            b.comments_data = e,
                            b.comments_expanded = !0,
                            b.loadedCommentsCount = 10,
                            b.totalComments = e.total_comments,
                            b.$emit("setItemDirty"),
                            d || a.setTimeout(function() {
                                b.scrollToBottom(),
                                b.ScrollPosition.prepareFor("up")
                            }, 0),
                            f || a.setTimeout(function() {
                                b.checkIfCommentsPanelIsInView() ? b.ScrollPosition.bodyScrollUp(30) : b.scrollCommentsPanelInView()
                            }, 0),
                            c.getComments_newApi(k, b.itemData.resource_id, b.itemData.app_instance_id, !0, 0, null ).then(function(c) {
                                b.loadingComments = !1,
                                b.$emit("setItemDirty"),
                                b.ScrollPosition.restore(),
                                d || a.setTimeout(function() {}, 0),
                                g.resolve()
                            })
                        }),
                        g.promise
                    }
                }
                ,
                b.toggleComments = function() {
                    b.comments_expanded ? b.showLatestCommentsOnly() : b.loadAllComments()
                }
                ,
                b.showLatestCommentsOnly = function() {
                    b.comments_expanded = !1,
                    b.loadedCommentsCount = b.LATEST_COMMENTS_ONLY_COUNT,
                    b.$broadcast("Comments:showAll"),
                    b.currentlyPlayingSnippetForComment = null ,
                    b.newCommentsBadgeSlidesUp(),
                    i()
                }
                ,
                b.commentWillGoInEdit = function(a, d) {
                    b.commentsInEditMode++,
                    c.off("commentsUpdated", g),
                    c.on("commentsUpdated", g),
                    setTimeout(function() {
                        b.setElementInView(d)
                    }, 400)
                }
                ,
                b.$on("comment-will-exit-from-edit", function(a) {
                    a.stopPropagation(),
                    b.commentsInEditMode--,
                    0 === b.commentsInEditMode && (c.off("commentsUpdated", g),
                    b.comments_expanded || (b.loadedCommentsCount = b.LATEST_COMMENTS_ONLY_COUNT,
                    b.newCommentsBadgeSlidesUp()))
                }),
                b.getOpenedResource = function() {
                    return b.itemData
                }
                ,
                b.$on("Comment:posted", function() {
                    b.loadedCommentsCount > b.LATEST_COMMENTS_ONLY_COUNT && (b.loadedCommentsCount += 1,
                    a.setTimeout(function() {
                        b.scrollToBottom(!0)
                    }, 100))
                }),
                b.$on("render", function() {
                    b.isTextSearch_previousValue !== !0 || b.feed_data.isTextSearch !== !1 || b.comments_expanded || c.getComments_newApi(k, b.itemData.resource_id, b.itemData.app_instance_id, !1, 0, b.LATEST_COMMENTS_ONLY_COUNT).then(function(a) {
                        b.comments_data = a,
                        b.$emit("setItemDirty")
                    }),
                    b.isTextSearch_previousValue = b.feed_data.isTextSearch
                }),
                i(!0)
            }
            ],
            link: function(i, j, k) {
                function l() {
                    this.node = r[0],
                    this.previousScrollHeightMinusTop = 0,
                    this.readyFor = "up"
                }
                function m(a) {
                    var b = v.scrollTop()
                      , c = j.find("#" + a).position()
                      , d = v.height();
                    return c && c.top > 0 && c.top + b < b + d ? !0 : !1
                }
                function n(a, b, c) {
                    var d, e = j.find("#" + a).position();
                    b ? (d = e.top + v.scrollTop() + v.height(),
                    c && (d -= c)) : d = e.top + v.scrollTop(),
                    v.animate({
                        scrollTop: d
                    }, {
                        duration: 400
                    })
                }
                function o() {
                    t[0].scrollHeight - t[0].scrollTop <= t[0].clientHeight && j.is(":visible") && (j.find(".new-comments-badge").slideUp(400),
                    t.off("scroll", o))
                }
                function p(a) {
                    $(a.currentTarget).hasClass("comment-snippet-attachment") && (a.stopImmediatePropagation(),
                    a.preventDefault())
                }
                function q(a) {
                    for (var b = {
                        source: "COMMENTS_PANEL"
                    }, c = i.comments_data.comments.length - 1; c >= 0; --c) {
                        var d = i.comments_data.comments[c]
                          , e = j.find("." + d.uid)
                          , f = e.offset()
                          , g = e.innerHeight()
                          , h = r.offset()
                          , k = r.innerHeight();
                        if (!e.length || h.top + k < f.top && h.top > f.top + g) {
                            console.info("comment in view breaking at" + c);
                            break
                        }
                        h.top + k > f.top && h.top < f.top + g && (b[d.uid] = !0)
                    }
                    (a || JSON.stringify(b) != JSON.stringify(D)) && (D = b,
                    i.$broadcast("cnvNoteGallery:reloadThumbnails", D))
                }
                setTimeout(function() {
                    j.closest(".comments-panel-wrapper").removeClass("tmp-hide")
                }, 0);
                var r = j.find(".comments-collection")
                  , s = j.find(".expanded-panel-shadow")
                  , t = r
                  , u = h.getFeedIdOfResource(i.itemData.app_instance_id, i.itemData.resource_id);
                l.prototype.restore = function() {
                    "up" == this.readyFor && (this.node.scrollTop = this.node.scrollHeight - this.previousScrollHeightMinusTop)
                }
                ,
                l.prototype.prepareFor = function(a) {
                    this.readyFor = a || "up",
                    this.previousScrollHeightMinusTop = this.node.scrollHeight - this.node.scrollTop
                }
                ,
                l.prototype.bodyScrollUp = function(a) {
                    var b = $("body").scrollTop();
                    $("body").animate({
                        scrollTop: b + a
                    }, {
                        duration: 200
                    })
                }
                ,
                i.setElementInView = function(a) {
                    if (a) {
                        var b = a[0].offsetTop
                          , c = b + a.height() - r.height();
                        r.scrollTop() < c && r.animate({
                            scrollTop: c
                        }, {
                            duration: 400
                        })
                    }
                }
                ,
                i.ScrollPosition = new l,
                i.scrollToBottom = function(a) {
                    var b = 0;
                    a && (b = 400);
                    var c = r[0].scrollHeight - r[0].clientHeight + 10;
                    t.animate({
                        scrollTop: c
                    }, {
                        duration: b
                    })
                }
                ,
                i.newCommentsBadgeSlidesUp = function() {
                    j.find(".new-comments-badge").slideUp(400)
                }
                ,
                i.currentlyPlayingSnippetForComment = null ,
                i.$on("Comment:ReplyCommentPlayback", function(b, c, f) {
                    var g = function() {
                        for (var a = [], b = {}, e = !1, g = 0; g < i.comments_data.comments.length; g++) {
                            var h = i.comments_data.comments[g];
                            if (c.replied_to_comment_id == h.uid && a.push(h.uid),
                            f == h.uid) {
                                a.push(h.uid);
                                break
                            }
                            a.length >= 1 && c.replied_to_comment_id != h.uid && (b[h.uid] = !0,
                            e || (e = !0))
                        }
                        setTimeout(function() {
                            console.log(a),
                            a.length == i.LATEST_COMMENTS_ONLY_COUNT ? (i.currentlyPlayingSnippetForComment && i.currentlyPlayingSnippetForComment != a[1] && i.$broadcast("Comments:showAllWithoutAnim"),
                            e && setTimeout(function() {
                                i.$broadcast("Comments:displayShowAllButton", a[0])
                            }, 800),
                            setTimeout(function() {
                                i.$broadcast("Comments:replied-comment-pointer", a[1])
                            }, 800),
                            setTimeout(function() {
                                i.$broadcast("Comments:source-comment-pointer", a[0])
                            }, 800),
                            setTimeout(function() {
                                i.$broadcast("Comments:hideCommentsForReplySnippetPlayback", b)
                            }, 400),
                            setTimeout(function() {
                                m(a[0]) ? m(a[0]) && !m(a[1]) && n(a[0]) : n(a[0]),
                                c.snippet_data && setTimeout(function() {
                                    i.$broadcast("Comments:highlightText", a[0], c.snippet_data)
                                }, 850)
                            }, 0),
                            i.currentlyPlayingSnippetForComment = a[1]) : (d.showBanner("The comment that this reply is referring to is deleted by the user.", !1, !1, null ),
                            i.currentlyPlayingSnippetForComment = null )
                        }, 0)
                    }
                    ;
                    if (e.checkIfCommentExistsInDataStore(c.replied_to_comment_id, i.itemData.resource_id, i.itemData.app_instance_id))
                        if (i.comments_expanded) {
                            var h = e.getComments_newApi(null , i.itemData.resource_id, i.itemData.app_instance_id, !1, null , null );
                            h.then(function(b, c) {
                                i.comments_expanded = !0,
                                i.loadedCommentsCount = b.comments.length,
                                i.$emit("setItemDirty"),
                                a.setTimeout(function() {
                                    i.checkIfCommentsPanelIsInView() || i.scrollCommentsPanelInView()
                                }, 0),
                                g()
                            })
                        } else if (j.find(".comments-collection > #" + c.replied_to_comment_id).length > 0)
                            g();
                        else {
                            var h = e.getComments_newApi(null , i.itemData.resource_id, i.itemData.app_instance_id, !1, null , null );
                            h.then(function(b, c) {
                                i.comments_expanded = !0,
                                i.loadedCommentsCount = b.comments.length,
                                i.$emit("setItemDirty"),
                                a.setTimeout(function() {
                                    i.checkIfCommentsPanelIsInView() || i.scrollCommentsPanelInView()
                                }, 0),
                                g()
                            })
                        }
                    else {
                        var h = i.loadAllComments(!0, !1, !0);
                        h.then(function() {
                            i.loadedCommentsCount = i.comments_data.total_comments,
                            g()
                        })
                    }
                }),
                i.$on("Comments:unHideAll", function(b, c) {
                    i.currentlyPlayingSnippetForComment = null ,
                    i.$broadcast("Comments:showAll"),
                    c && a.setTimeout(function() {
                        m(c) || a.setTimeout(function() {
                            n(c)
                        }, 0)
                    }, 900)
                }),
                i.$on("render", function() {
                    (i.comments_data.total_comments > i.totalComments || i.totalComments === c && i.commentsInEditMode > 0 && !i.comments_expanded) && (i.totalComments = i.comments_data.total_comments,
                    i.comments_data.comments[i.comments_data.comments.length - 1].from_user != b.getUserId() && a.setTimeout(function() {
                        t[0].scrollHeight - t[0].scrollTop - 30 > t[0].clientHeight && (j.find(".new-comments-badge").slideDown(400),
                        t.on("scroll", o))
                    }, 800))
                });
                var v = j.find(".comments-collection")
                  , w = !1
                  , x = !1
                  , y = null 
                  , z = function(b) {
                    if (!w && !x) {
                        var c = function() {
                            g.isSafari() ? v.css("overflow-y", "scroll") : v.css("overflow-y", "auto"),
                            v.on("scroll", B),
                            v.on("mousewheel DOMMouseScroll", C),
                            x = !0
                        }
                        ;
                        "touchstart" === b.type ? c() : y = a.setTimeout(c, 250)
                    }
                }
                  , A = function(a) {
                    y && clearTimeout(y),
                    x && (g.isSafari() ? v.css("overflow-y", "scroll") : v.css("overflow-y", "hidden"),
                    v.off("scroll", B),
                    v.off("mousewheel DOMMouseScroll", C),
                    x = !1)
                }
                  , B = function(a) {
                    if (v.height() >= 435 && i.comments_expanded) {
                        var b = v.scrollTop();
                        50 > b ? (i.comments_expanded && s.slideUp(100),
                        i.ScrollPosition.prepareFor("up"),
                        i.loadedCommentsCount += 10,
                        i.$$phase || (i.$digest(),
                        i.ScrollPosition.restore())) : i.comments_expanded && s.slideDown(100)
                    }
                    E()
                }
                  , C = function(a, b) {
                    if (Math.ceil(v.height()) >= 435) {
                        var c = Math.ceil(v.scrollTop());
                        (0 == c && b > 0 || Math.ceil(v[0].scrollHeight) - c <= Math.ceil(v.outerHeight()) && 0 > b) && a.preventDefault()
                    }
                }
                ;
                $(v).on({
                    "mouseenter touchstart": z,
                    mouseleave: A
                });
                var D = {}
                  , E = _.throttle(q, 250);
                i.$on("cnvNoteGallery:reloadThumbnails", function(a, b) {
                    "FEED" === b.source && (a.defaultPrevented = !0,
                    b.hasOwnProperty(u) && q(!0))
                }),
                i.$on("cnvNoteGallery:unloadThumbnails", function(a, b) {
                    "FEED" === b.source && (a.defaultPrevented = !0,
                    b.hasOwnProperty(u) || i.$broadcast("cnvNoteGallery:reloadThumbnails", {}))
                }),
                $(v).on("click", "a", p),
                i.scrollCommentsPanelInView = function() {
                    var b = 0;
                    b = document.body.scrollTop || !document.body.scrollTop && document.body.parentNode.scrollTop;
                    var c = j[0].getBoundingClientRect()
                      , d = c.top + j.outerHeight(!0) - $(a).height()
                      , e = b + d + 60;
                    $("html, body").animate({
                        scrollTop: e
                    }, {
                        duration: 500
                    })
                }
                ,
                i.checkIfCommentsPanelIsInView = function() {
                    var b = j;
                    "function" == typeof jQuery && b instanceof jQuery && (b = b[0]);
                    var c = b.getBoundingClientRect();
                    return c.top >= 0 && c.bottom <= (a.innerHeight || document.documentElement.clientHeight)
                }
                ,
                i.checkIfCommentsPanelIsScrollable = function() {
                    return Math.ceil(r[0].scrollHeight) > Math.ceil(r.height())
                }
                ,
                i.tagCount = 0,
                i.onTagAdded = function(a) {
                    i.tagCount += 1
                }
                ,
                i.onTagRemoved = function(a) {
                    i.tagCount - 1
                }
                ,
                i.trackExpandComments = function() {
                    f.trackEvent(f.EXPAND_COMMENTS, {
                        Via: "Newsfeed"
                    })
                }
                ,
                i.trackCollapseComments = function() {
                    f.trackEvent(f.HIDE_COMMENTS, {
                        Via: "Newsfeed"
                    })
                }
                ,
                i.$on("$destroy", function() {
                    $(v).off({
                        mouseenter: z,
                        mouseleave: A,
                        scroll: B,
                        "mousewheel DOMMouseScroll": C
                    }),
                    $(v).off("click", "a", p),
                    v = null ,
                    i.ScrollPosition = null ,
                    r = null ,
                    s = null ,
                    t = r,
                    j = null 
                })
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvFeedVideoPlayerWrapper", [function() {
        return {
            restrict: "E",
            priority: 0,
            scope: !0,
            templateUrl: "feed/renderers/gallery/cnvFeedVideoPlayerWrapper.tpl.html",
            link: function(a, b, c) {},
            controller: ["$scope", "$filter", "Note", "utils", "bannerService", function(a, b, c, d, e) {
                a.playerOptions = {},
                a.playerOptions.resourceLinkUrl = b("getFileResourceLinkUrl")(a.file.id, a.file.file_format, a.itemData.app_instance_id, a.itemData.resource_type, a.file.noteId, a.file.name),
                a.playerOptions.onExpand = "feedView",
                a.playerOptions.location = "feed",
                a.playerOptions.source = "News Feed",
                a.playerOptions.showHeader = !0,
                a.playerOptions.showControlsMenu = !0,
                a.onFileDeleted = function() {
                    var b = c.deleteFile(a.itemData.resource_id, a.itemData.app_instance_id, a.file.id);
                    b.then(function(b) {
                        var c = d.findIndexInObjectArray(a.itemData.data.files, "id", a.file.id);
                        -1 != c && (a.itemData.data.files.splice(c, 1),
                        a.$broadcast("render"))
                    }),
                    e.showBanner_promise(b, "Deleting file...", "Deleted", "Error... click here to try again", !1, !1, b)
                }
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvNoteGallery", ["$templateCache", "$compile", "$filter", "$rootScope", "$location", "mixpanelService", "utils", function(b, d, e, f, g, h, i) {
        return {
            restrict: "E",
            replace: !0,
            templateUrl: "feed/renderers/gallery/cnvNoteGallery.tpl.html",
            controller: ["$scope", "AppLinks", function(a, b) {
                a.filesList = a.itemData.data.files,
                a.noteId = a.itemData.resource_id,
                a.appId = a.itemData.app_instance_id,
                a.resourceType = a.itemData.resource_type,
                a.filesConversionStatus = [],
                a.getFileResourceLinkUrl = function(b, c, d) {
                    return e("getFileResourceLinkUrl")(b, c, a.appId, a.resourceType, a.noteId, d)
                }
            }
            ],
            link: function(j, k, l) {
                function m() {
                    "hidden" != I[0].style.overflowX && (C = I.scrollLeft(),
                    console.info("Saving ScrollLeft: " + C))
                }
                function n() {
                    console.info("Applying ScrollLeft: " + C),
                    I.scrollLeft(C)
                }
                function o() {
                    j.filesList = j.itemData.data.files;
                    for (var a = !1, b = 0; b < j.filesList.length; b++)
                        if (j.filesConversionStatus[j.filesList[b].id] != j.filesList[b].available_previews) {
                            a = !0;
                            break
                        }
                    if (j.lastFilesCount != j.filesList.length || j.latestRevisionNumber > 1 && j.latestRevisionNumber < j.filesList[j.filesList.length - 1].insert_revision || H || a) {
                        if (j.isVideoPlaying())
                            return D = !0,
                            !1;
                        D = !1,
                        k.find("ul").empty(),
                        j.latestRevisionNumber = 1,
                        j.latestFilesCount = 0,
                        j.lastFilesCount = j.filesList.length.valueOf(),
                        r(),
                        s(),
                        f.$$phase || j.$digest(),
                        j.reelContainerWidth = k.find(".feedGalleryContainer").width(),
                        j.reelWidth = k.find(".feedGalleryContainer > ul").width(),
                        j.$emit("setItemDirty"),
                        H = !1,
                        setTimeout(function() {
                            j.getFeedItemsInView()
                        }, 0)
                    } else
                        p(!1)
                }
                function p(a) {
                    if (a) {
                        var b = k.find(".latest-files-badge").first();
                        if (b && b.parent().position()) {
                            var c = k.find(".feedGalleryContainer").scrollLeft() + b.parent().position().left;
                            I.scrollLeft(c)
                        }
                    } else if (C >= 0)
                        n();
                    else {
                        var b = k.find(".latest-files-badge").first();
                        if (b && b.parent().position()) {
                            var c = k.find(".feedGalleryContainer").scrollLeft() + b.parent().position().left;
                            I.scrollLeft(c)
                        }
                    }
                }
                function q(a, b) {
                    var c = k.find("#" + b).parent().parent();
                    c.find(".gif-badge").hide(),
                    c.find(".cnv-spinner").remove()
                }
                function r() {
                    j.initialFilesToLoad = 0,
                    j.initialThumbsCombinedWidth = 0,
                    j.containerWidth = 515;
                    for (var a = 0, b = 0; b < j.filesList.length; b++) {
                        var c = parseInt(j.filesList[b].insert_revision);
                        if (c > j.latestRevisionNumber && (j.latestRevisionNumber = c),
                        j.filesConversionStatus[j.filesList[b].id] = j.filesList[b].available_previews,
                        "OTHER" !== j.filesList[b].file_format && j.filesList[b].thumbnail_name) {
                            if (j.filesList[b].width < x && j.filesList[b].height < w)
                                j.filesList[b].thumbWidth = j.filesList[b].width,
                                j.filesList[b].thumbHeight = j.filesList[b].height,
                                j.filesList[b].containerWidth = x + 2,
                                j.filesList[b].containerHeight = w + 2,
                                j.initialThumbsCombinedWidth += x + 2;
                            else {
                                var d = w / j.filesList[b].height
                                  , f = y / j.filesList[b].width
                                  , g = min(d, f)
                                  , h = Math.ceil(g * j.filesList[b].width)
                                  , i = Math.ceil(g * j.filesList[b].height);
                                j.initialThumbsCombinedWidth += h + 2,
                                j.filesList[b].thumbWidth = h,
                                j.filesList[b].thumbHeight = i,
                                j.filesList[b].containerWidth = h + 2,
                                j.filesList[b].containerHeight = w + 2
                            }
                            j.filesList[b].thumbnail_image = e("getNoteThumbnailPath")(j.filesList[b], j.noteId, b),
                            j.filesList[b].thumbnail_icon_class = e("getSmallFileIconClassByTypeFromAssets")(j.filesList[b].type),
                            j.initialThumbsCombinedWidth < j.containerWidth && (j.initialFilesToLoad = a + 1),
                            a++
                        } else
                            j.filesList[b].thumbnail_class = e("getNewFileIconByType")(j.filesList[b].type, "64", "darkgray"),
                            j.filesList[b].thumbnail_icon_class = e("getSmallFileIconClassByTypeFromAssets")(j.filesList[b].type),
                            j.filesList[b].width = j.FILE_ICONS_SIZE,
                            j.filesList[b].height = j.FILE_ICONS_SIZE,
                            j.filesList[b].containerWidth = x,
                            j.filesList[b].containerHeight = w,
                            j.initialThumbsCombinedWidth += x + 2,
                            j.initialThumbsCombinedWidth < j.containerWidth && (j.initialFilesToLoad = a + 1),
                            a++
                    }
                    j.initialThumbsCombinedWidth > 0 && (0 == j.initialFilesToLoad && (j.initialFilesToLoad = a),
                    a < j.filesList.length ? j.moreFilesToLoad = j.filesList.length - a : j.moreFilesToLoad = 0,
                    j.moreFilesToLoad > 0 ? j.initialThumbsCombinedWidth += 180 + 5 * a : j.initialThumbsCombinedWidth += 10 + 5 * a)
                }
                function s() {
                    for (var a = 0, c = 0; c < j.filesList.length; c++) {
                        var e = c;
                        j.showBanner = !1;
                        var g = j.$new(!1);
                        if (g.index = a,
                        g.file = j.filesList[e],
                        g.file.noteId = j.noteId,
                        g.file.noteId = j.noteId,
                        j.filesList[c].isThumbnailAvailable = 32 & j.filesList[c].available_previews,
                        j.filesList[c].isMp4PreviewAvailable = 64 & j.filesList[c].available_previews,
                        j.filesList[c].isWebmPreviewAvailable = 128 & j.filesList[c].available_previews,
                        j.filesList[c].isMp4Available = 256 & j.filesList[c].available_previews,
                        j.filesList[c].isWebmAvailable = 512 & j.filesList[c].available_previews,
                        j.filesList[c].canPlayVideoType = i.formatCheck("video", j.filesList[c]),
                        j.latestRevisionNumber == parseInt(j.filesList[e].insert_revision) && 0 == j.latestFilesCount && (j.latestFilesCount = j.filesList.length - e,
                        g.file.showBanner = !0),
                        a <= j.initialFilesToLoad) {
                            var h = d(b.get("feed/renderers/gallery/thumbnail-without-lazyload.tpl.html"));
                            k.find("ul").append(h(g))
                        } else if (a > j.initialFilesToLoad) {
                            var l = d(b.get("feed/renderers/gallery/thumbnail-with-lazyload.tpl.html"));
                            k.find("ul").append(l(g))
                        }
                        a++
                    }
                    j.latestFilesCount > 0 && (f.$$phase || j.$digest(),
                    setTimeout(function() {
                        p(!0)
                    }, 0)),
                    F && ($(".feedGalleryContainer", k).off("cnvNoteGallery:hideGifLabel", q),
                    F.destroy()),
                    setTimeout(function() {
                        j.$digest(),
                        F = $("img.lazy", k).lazyload({
                            container: $(".feedGalleryContainer", k),
                            effect: "fadeIn"
                        }),
                        $(".feedGalleryContainer", k).on("cnvNoteGallery:hideGifLabel", q),
                        t(!0),
                        j.getFeedItemsInView(),
                        j.reelContainerWidth = k.find(".feedGalleryContainer").width(),
                        j.reelWidth = k.find(".feedGalleryContainer > ul").width()
                    }, 100)
                }
                function t(a) {
                    for (var b = {}, c = 0; c < j.filesList.length; c++) {
                        var d = k.find("#mainLi" + j.filesList[c].id);
                        if ($(j.feedGalleryContainer).offset().left + $(j.feedGalleryContainer).innerWidth() > d.offset().left && $(j.feedGalleryContainer).offset().left < d.offset().left + d.innerWidth() && (b[j.filesList[c].id] = !0),
                        $(j.feedGalleryContainer).offset().left + $(j.feedGalleryContainer).innerWidth() < d.offset().left) {
                            console.info("breaking at" + c + 1);
                            break
                        }
                    }
                    (a || JSON.stringify(b) != JSON.stringify(B)) && (B = b,
                    j.$broadcast("cnvNoteGallery:reloadThumbnailsHorizontal", B))
                }
                function u(a) {
                    a ? (m(),
                    document.body.style.overflow = "hidden",
                    document.documentElement.requestFullscreen ? document.documentElement.requestFullscreen() : document.documentElement.msRequestFullscreen ? document.documentElement.msRequestFullscreen() : document.documentElement.mozRequestFullScreen ? document.documentElement.mozRequestFullScreen() : document.documentElement.webkitRequestFullscreen && document.documentElement.webkitRequestFullscreen()) : (document.exitFullscreen ? document.exitFullscreen() : document.msExitFullscreen ? document.msExitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen && document.webkitExitFullscreen(),
                    v())
                }
                function v() {
                    document.body.style.overflow = "auto",
                    k.find(".sizeable").removeClass("fullscreen"),
                    C > -1 && n()
                }
                var w = 220
                  , x = 250
                  , y = 485
                  , z = 495
                  , A = 278
                  , B = []
                  , C = -1
                  , D = !1;
                j.feedGalleryContainer = k.find(".feedGalleryContainer")[0];
                var E = !1;
                j.latestRevisionNumber = 1,
                j.latestFilesCount = 0,
                j.lastFilesCount = j.filesList.length.valueOf(),
                j.FILE_ICONS_SIZE = 32;
                j.MAXIMUM_THUMBS_TO_SHOW = 10;
                var F, G = !1, H = !1;
                j.isVideoPlaying = function() {
                    for (var a = $("video.feedVideoPlayer", k), b = 0; b < a.length; b++) {
                        var c = a[b];
                        if (!c.paused)
                            return !0
                    }
                    return $(".videoPlaying", k).length > 0 ? !0 : !1
                }
                ,
                j.tab.selected && k.is(":visible") ? (r(),
                s()) : H = !0,
                j.reelContainerWidth = k.find(".feedGalleryContainer").width(),
                j.reelWidth = k.find(".feedGalleryContainer > ul").width();
                var I = k.find(".feedGalleryContainer")
                  , J = k.find(".overlay")
                  , K = !0
                  , L = function(a, b, c, d) {
                    E || (h.trackEvent(h.SCROLLED_IMAGE_GALLERY),
                    E = !0),
                    (0 == j.reelContainerWidth || "undefined" == typeof j.reelContainerWidth) && (j.reelContainerWidth = k.find(".feedGalleryContainer").width()),
                    (0 == j.reelWidth || "undefined" == typeof j.reelWidth) && (j.reelWidth = k.find(".feedGalleryContainer > ul").width());
                    var e = 0 > c && Boolean(!_($(a.target).parents()).detect(function(a) {
                        return $(a).scrollLeft() > 0
                    }))
                      , f = c > 0 && Boolean(_($(a.target).parents()).detect(function(a) {
                        return $(a).scrollLeft() + j.reelContainerWidth + 5 >= j.reelWidth
                    }));
                    f ? K && (J.hide(),
                    K = !1) : K || (J.show(),
                    K = !0),
                    (e || f) && a.preventDefault()
                }
                  , M = _.throttle(function(a, b, c, d) {
                    var e = I.scrollLeft();
                    e + j.reelContainerWidth >= j.reelWidth - 5 ? K && (J.hide(),
                    K = !1) : K || (J.show(),
                    K = !0),
                    m(),
                    t()
                }, 250);
                I.on({
                    mousewheel: L
                }),
                I[0].addEventListener("scroll", M),
                j.openFile = function(a, b, c) {
                    g.url(decodeURIComponent(j.getFileResourceLinkUrl(a, b, c).substr(2)))
                }
                ,
                j.$on("render", function() {
                    return j.itemData._hide ? -1 : void (j.tab.selected && !G && k.is(":visible") ? a.setTimeout(function() {
                        o()
                    }, 0) : G = !0)
                }),
                j.$on("filterChange", function() {
                    a.setTimeout(function() {
                        (G || H) && (o(),
                        G = !1)
                    }, 0)
                }),
                j.$on("activated", function(b) {
                    a.setTimeout(function() {
                        (G || H) && (o(),
                        G = !1)
                    }, 0)
                }),
                j.$on("cnvNoteGallery:unloadThumbnails", function(a, b) {
                    b.hasOwnProperty(j.itemData.feed_id) || F && F.unloadGifs()
                }),
                j.$on("cnvNoteGallery:reloadThumbnails", function(a, b) {
                    b.hasOwnProperty(j.itemData.feed_id) && F && F.reloadGifs()
                }),
                j.$on("cnvNoteGallery:forceRender", function(a) {
                    k.find("ul").empty(),
                    j.latestRevisionNumber = 1,
                    j.latestFilesCount = 0,
                    j.lastFilesCount = j.filesList.length.valueOf(),
                    r(),
                    s(),
                    f.$$phase || j.$digest(),
                    j.reelContainerWidth = k.find(".feedGalleryContainer").width(),
                    j.reelWidth = k.find(".feedGalleryContainer > ul").width(),
                    j.$emit("setItemDirty"),
                    H = !1
                }),
                j.$on("$destroy", function() {
                    I.off({
                        mousewheel: L,
                        scroll: M
                    }),
                    F && ($(".feedGalleryContainer", k).off("cnvNoteGallery:hideGifLabel", q),
                    F.destroy())
                }),
                j.$on("VideoPlayback:clicked", function(a, b) {
                    function c() {
                        j.$broadcast("VideoPlayback:playVideo", b),
                        i.isIE() && (g.style.left = n - 1 + "px"),
                        g.removeEventListener("transitionend", c, !1)
                    }
                    var e, f, g = k.find("#sizeable" + b.id)[0], h = k.find("#mainLi" + b.id), l = h.find(".feedVideoHolder")[0], m = (j.feedGalleryContainer.getClientRects()[0],
                    l.getClientRects()[0]), n = 0;
                    if ($(g).find("video").length < 1) {
                        f = i.findIndexInObjectArray(j.filesList, "id", b.id);
                        var o = j.$new(!1);
                        o.file = j.filesList[f],
                        o.file.noteId = j.noteId,
                        e = d("<cnv-feed-video-player-wrapper></cnv-feed-video-player-wrapper>")(o),
                        $(g).append(e)
                    }
                    g.style.height = m.height + "px",
                    g.style.width = m.width + "px",
                    g.style.left = "0px",
                    g.style.transition = "all 0.25s",
                    g.style.display = "block",
                    j.feedGalleryContainer.style.overflowX = "hidden",
                    j.feedGalleryContainer.style.minWidth = z + "px",
                    j.feedGalleryContainer.style.minHeight = A + "px",
                    g.setAttribute("cleaned", 0),
                    setTimeout(function() {
                        var a = j.feedGalleryContainer.getClientRects()[0]
                          , b = l.getClientRects()[0];
                        n = a.left - b.left - 1,
                        g.style.height = A + "px",
                        g.style.width = z + "px",
                        g.style.left = n + "px",
                        g.style.opacity = "1",
                        g.addEventListener("transitionend", c, !1)
                    }, 0)
                }),
                j.$on("VideoPlayback:cleanUp", function(a, b) {
                    function c() {
                        setTimeout(function() {
                            $(e).hide(500)
                        }, 0),
                        j.feedGalleryContainer.style.overflowX = "auto",
                        e.removeEventListener("transitionend", c, !1),
                        j.feedGalleryContainer.style.minWidth = "0px",
                        j.feedGalleryContainer.style.minHeight = "0px",
                        D && o()
                    }
                    var d = b.force || !1;
                    if (!d && j.filesList.length < 2)
                        return !1;
                    var e = k.find("#sizeable" + b.id)[0];
                    if (0 == e.getAttribute("cleaned")) {
                        e.setAttribute("cleaned", 1);
                        var f = k.find("#mainLi" + b.id)[0]
                          , g = e.getClientRects()[0]
                          , h = f.getClientRects()[0]
                          , i = b.withoutAnomation || !1;
                        if ($("#videoPlayer" + b.id).trigger("playerCollapsed"),
                        g && !i) {
                            h.left - g.left - 5;
                            e.style.height = h.height + "px",
                            e.style.width = h.width + "px",
                            e.style.left = "0px",
                            e.style.transition = "all 0.25s",
                            e.addEventListener("transitionend", c, !1)
                        } else
                            e.style.display = "none",
                            j.feedGalleryContainer.style.overflowX = "auto",
                            j.feedGalleryContainer.style.minWidth = "0px",
                            j.feedGalleryContainer.style.minHeight = "0px",
                            e.style.opacity = "0",
                            D && o()
                    }
                }),
                j.$on("NotesApp:FullScreen", function(a, b) {
                    if (1 == b.isVideo) {
                        var c = k.find("#sizeable" + b.id);
                        c.length > 0 && (b.isFullScreen && c.addClass("fullscreen"),
                        u(b.isFullScreen))
                    }
                }),
                document.fullscreenEnabled !== c ? document.addEventListener("fullscreenchange", function() {
                    null  === document.fullscreenElement && v()
                }, !1) : document.mozFullScreenEnabled !== c ? document.addEventListener("mozfullscreenchange", function() {
                    null  === document.mozFullScreenElement && v()
                }, !1) : document.webkitFullscreenEnabled !== c ? document.addEventListener("webkitfullscreenchange", function() {
                    null  === document.webkitFullscreenElement && v()
                }, !1) : document.msFullscreenEnabled !== c && document.addEventListener("MSFullscreenChange", function() {
                    null  === document.msFullscreenElement && v()
                }, !1)
            }
        }
    }
    ]),
    b.module("convoApp").factory("inFeedActionService", ["ServerComm", "dialogService", function(a, b) {
        var c = {
            Edit: function() {},
            AddTags: function() {},
            starThisPost: function() {},
            shareWithOthers: function() {},
            copyPostLink: function() {}
        };
        return c
    }
    ]),
    b.module("convoApp").directive("cnvFeedItemAppid4Restype4", ["$filter", "loader", "config", "utils", function(b, d, e, f) {
        return {
            restrict: "E",
            templateUrl: "feed/renderers/link/cnvLinkFeedItem.tpl.html",
            link: function(b, g) {
                function h() {
                    null  === document.fullscreenElement ? m() : l()
                }
                function i() {
                    null  === document.mozFullScreenElement ? m() : l()
                }
                function j() {
                    null  === document.webkitFullscreenElement ? m() : l()
                }
                function k() {
                    null  === document.msFullscreenElement ? m() : l()
                }
                function l() {
                    var a;
                    b.isYTURL ? a = g.find(".youtubeIframe") : b.isVimeoURL && (a = g.find(".viemoIframe")),
                    setTimeout(function() {
                        a.height() === screen.height && (J = !0)
                    }, 1e3)
                }
                function m() {
                    J && ($(a).scrollTop(K),
                    J = !1)
                }
                function n() {
                    A(b.itemData.data.source);
                    g.find(".youtubeIframe").attr("id", "ytplayer" + H),
                    d.loadScript(d.SCRIPTS.YOUTUBE_API).then(function() {
                        if (1 == YT.loaded)
                            o();
                        else
                            var a = setInterval(function() {
                                console.log("Check YT API"),
                                1 == YT.loaded && (o(),
                                console.log("YT API loaded"),
                                clearInterval(a))
                            }, 50)
                    })
                }
                function o() {
                    var a = e.IS_NATIVE ? 0 : 1;
                    E = new YT.Player("ytplayer" + H,{
                        height: "278",
                        width: "495",
                        videoId: L,
                        playerVars: {
                            fs: a,
                            html5: 1
                        },
                        events: {
                            onStateChange: p
                        }
                    })
                }
                function p(a) {
                    a.data != YT.PlayerState.PLAYING || G ? G = !1 : (q(),
                    G = !0),
                    (a.data == YT.PlayerState.ENDED || a.data == YT.PlayerState.PAUSED) && C()
                }
                function q() {
                    var a = {
                        id: b.itemData.feed_id
                    };
                    b.$emit("VideoPlayback:Playing", a),
                    B()
                }
                function r() {
                    E.stopVideo()
                }
                function s() {
                    E = g.find(".viemoIframe"),
                    a.addEventListener("message", t, !1)
                }
                function t(a) {
                    if (!/^https?:\/\/player.vimeo.com/.test(a.origin))
                        return !1;
                    "*" === F && (F = a.origin);
                    var c = JSON.parse(a.data);
                    if (c.player_id == b.itemData.feed_id)
                        switch (c.event) {
                        case "ready":
                            v();
                            break;
                        case "pause":
                            C();
                            break;
                        case "play":
                            w();
                            break;
                        case "finish":
                            C()
                        }
                }
                function u() {
                    b.isVimeoURL ? x("play") : E.playVideo()
                }
                function v() {
                    x("addEventListener", "play"),
                    x("addEventListener", "pause"),
                    x("addEventListener", "finish"),
                    x("addEventListener", "playProgress")
                }
                function w() {
                    var a = {
                        id: b.itemData.feed_id
                    };
                    b.$emit("VideoPlayback:Playing", a),
                    B()
                }
                function x(a, b) {
                    var c, d = {
                        method: a
                    };
                    b && (d.value = b);
                    var e = JSON.stringify(d);
                    null  == E[0].contentWindow ? c = setInterval(function() {
                        E[0].contentWindow && (clearInterval(c),
                        E[0].contentWindow.postMessage(e, F))
                    }, 50) : E[0].contentWindow.postMessage(e, F)
                }
                function y(a) {
                    var b = /(videos|video|channels|staffpicks|\.com)\/([\d]+)/
                      , c = a.match(b);
                    return c ? c[2] : !1
                }
                function z() {
                    x("pause")
                }
                function A(a) {
                    var b = /^.*((youtu.be\/)|(v\/)|(\/u\/\w\/)|(embed\/)|(watch\?))\??v?=?([^#\&\?]*).*/
                      , c = a.match(b);
                    return c && 11 == c[7].length ? c[7] : !1
                }
                function B() {
                    g.addClass("videoPlaying"),
                    I = !0
                }
                function C() {
                    g.removeClass("videoPlaying"),
                    I = !1
                }
                function D() {
                    K = $(a).scrollTop()
                }
                var E, F = "*", G = !1, H = f.generateUniqueId(), I = !1, J = !1, K = 0;
                if (b.isYTURL) {
                    var L = A(b.itemData.data.source);
                    b.YTLink = "https://www.youtube.com/embed/" + L + "?version=3&enablejsapi=1&origin=https://localhost.convo.com",
                    b.itemData.data.favicon_converted || (b.itemData.data.original_favicon_url = "assets/img/videoPlayback/youtube.png"),
                    n()
                }
                if (b.isVimeoURL) {
                    var M = y(b.itemData.data.source);
                    b.vimeoLink = "https://player.vimeo.com/video/" + M + "?api=1&player_id=" + b.itemData.feed_id,
                    b.itemData.data.favicon_converted || (b.itemData.data.original_favicon_url = "assets/img/videoPlayback/viemo.png"),
                    s()
                }
                b.onItemClicked = function() {
                    (b.isYTURL || b.isVimeoURL) && (e.IS_NATIVE && b.isVimeoURL ? a.open(b.itemData.data.source) : (g.find(".link-feed-thumbnail-wrapper").hide(),
                    g.find(".link-feed-description")[0].style.display = "none",
                    g.find(".feedExternalVideoHolder").show(),
                    u()))
                }
                ,
                document.fullscreenEnabled !== c ? document.addEventListener("fullscreenchange", h, !0) : document.mozFullScreenEnabled !== c ? document.addEventListener("mozfullscreenchange", i, !0) : document.webkitFullscreenEnabled !== c ? document.addEventListener("webkitfullscreenchange", j, !0) : document.msFullscreenEnabled !== c && document.addEventListener("MSFullscreenChange", k, !0),
                b.$on("$locationChangeStart", function(a, c) {
                    b.isVimeoURL && z(),
                    b.isYTURL && r()
                }),
                b.$on("VideoPlayback:stopBuffering", function(a, c) {
                    c.id != b.itemData.feed_id && (b.isVimeoURL && z(),
                    b.isYTURL && r())
                }),
                g.find(".feedExternalVideoHolder").on("mouseover", D),
                b.$on("$destroy", function() {
                    g.find(".feedExternalVideoHolder").off("mouseover", D),
                    document.removeEventListener("fullscreenchange", h, !0),
                    document.removeEventListener("mozfullscreenchange", i, !0),
                    document.removeEventListener("webkitfullscreenchange", j, !0),
                    document.removeEventListener("MSFullscreenChange", k, !0)
                })
            },
            controller: ["$scope", function(a) {
                a.isYTURL = a.itemData.data.source.toLowerCase().indexOf("youtube.com") > -1 || a.itemData.data.source.toLowerCase().indexOf("youtu.be") > -1 ? !0 : !1,
                a.isVimeoURL = a.itemData.data.source.toLowerCase().indexOf("vimeo.com") > -1 ? !0 : !1,
                a.linkThumbnailUrl = "",
                console.log(a.itemData),
                a.itemData.data.hasOwnProperty("original_thumbnail_url") && a.itemData.data.hasOwnProperty("thumbnail_converted") ? a.itemData.data.thumbnail_converted && a.itemData.data.thumbnailURL && a.itemData.data.ver ? a.linkThumbnailUrl = b("getLinkThumbnailPath")(a.itemData.data.thumbnailURL, a.itemData.data.ver) : a.linkThumbnailUrl = a.itemData.data.original_thumbnail_url : a.itemData.data.thumbnailURL && a.itemData.data.ver && (a.linkThumbnailUrl = b("getLinkThumbnailPath")(a.itemData.data.thumbnailURL, a.itemData.data.ver))
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvFeedItemAppid6Restype6", ["$compile", "$filter", "Note", "$q", "mixpanelService", function(a, b, c, d, e) {
        return {
            restrict: "E",
            templateUrl: "feed/renderers/note/cnvNoteFeedItem.tpl.html",
            link: function(f, g, h) {
                function i() {
                    "collapsed" == j ? (g.find(".feed-text-inner").html(f.feed_data.isTextSearch && f.itemData.search_fragment || f.itemData.details),
                    +f.itemData.data.is_text_broken && g.find(".feed-text-inner").append(a('<div class="action-btn" <i>...&nbsp;</i><a href="javascript:void(0)" class="more_text" ng-click="getFullNoteText()"><b>more</b></a></div>')(f)),
                    f.$emit("Feed:hideNoteSnippetPlaybackBanner")) : "largeSummary" == j ? (f.getLargeSummary(),
                    f.$emit("Feed:hideNoteSnippetPlaybackBanner")) : "fullNoteText" == j && (f.getFullNoteText(),
                    f.$emit("Feed:hideNoteSnippetPlaybackBanner"))
                }
                var j = "collapsed";
                f.$on("render", function() {
                    i()
                }),
                f.getLargeSummary = function() {
                    var b = c.getLargeSummary(f.itemData.resource_id);
                    b.then(function(b, c) {
                        if (g.find(".feed-text-inner").html(b.data.large_summary),
                        j = "largeSummary",
                        1 == b.data.is_text_broken) {
                            f.itemData.hierarchy[0].title;
                            g.find(".feed-text-inner").append(a("<div class='action-btn'> <i>...&nbsp;</i><a href='javascript:void(0)' ng-click='getFullNoteText()'><b>more</b></a><br /><a href='javascript:void(0)' class=\"more_text\" ng-click='setSummary(true)'><b>less</b></a></div>")(f))
                        } else
                            g.find(".feed-text-inner").append(a("<div class='action-btn'> <i>...&nbsp;</i><a href='javascript:void(0)' class=\"more_text\" ng-click='setSummary(true)'><b>less</b></a></div>")(f))
                    })
                }
                ,
                f.getFullNoteText = function() {
                    var h = d.defer()
                      , i = c.getFullText(f.itemData.resource_id);
                    return i.then(function(c, d) {
                        g.find(".feed-text-inner").html(c.data.large_summary),
                        j = "fullNoteText";
                        var i = f.itemData.hierarchy[0].title;
                        g.find(".feed-text-inner").append(a("<div class='action-btn'> <i>...&nbsp;</i><a href='javascript:void(0)' class='more_text' ng-click='setSummary(true)'><b>less</b></a><br /><a href='" + b("getResourceLinkUrl")(f.itemData.app_instance_id, [{
                            type: f.itemData.resource_type,
                            uid: f.itemData.resource_id,
                            title: i
                        }], null , i) + "' class='more_text'><b>Open post</b></a></div>")(f)),
                        e.trackEvent(e.CLICK_EXPAND_POST),
                        h.resolve()
                    }),
                    h.promise
                }
                ,
                f.setSummary = function(a) {
                    a ? $("html, body").animate({
                        scrollTop: g.offset().top - 250
                    }, {
                        duration: 400,
                        always: function() {
                            j = "collapsed",
                            i()
                        }
                    }) : (j = "collapsed",
                    i()),
                    e.trackEvent(e.CLICK_MINIMIZE_POST)
                }
                ,
                i(),
                f.noteFeedItemCtrl.loadFullNoteText = f.getFullNoteText
            },
            controller: ["$scope", "AppLinks", function(a, b) {
                a.getFileResourceLinkUrl = function(c) {
                    var d = a.itemData.hierarchy[0].title
                      , e = b.newResourceLink(a.itemData.app_instance_id, [{
                        type: a.itemData.resource_type,
                        uid: a.itemData.resource_id,
                        title: d
                    }, {
                        type: "images",
                        uid: c
                    }], null , d);
                    return b.linkToUrl(e, !0)
                }
            }
            ]
        }
    }
    ]),
    b.module("convoApp").factory("FeedSearchAutoCompleteUtils", ["FilterTypes", function(a) {
        function b(a) {
            for (var b = 0, c = a.indexOf('"'); -1 != c; )
                b++,
                c = a.indexOf('"', c + 1);
            if (b % 2 != 0)
                return a.lastIndexOf('"') + 1;
            c = 0;
            for (var d, g, h = 0; h < e.length; h++)
                d = e[h],
                g = a.lastIndexOf(d),
                g > c && (c = g + d.length);
            return g = a.lastIndexOf(f),
            g > c && (c = g + 1),
            c
        }
        function c(c) {
            for (var d = b(c); d > 0; ) {
                for (var g = !1, h = 0; h < e.length; h++)
                    if (c.charAt(d - 1) == e[h]) {
                        d--,
                        g = !0;
                        break
                    }
                if (c.charAt(d - 1) == f && (d--,
                g = !0),
                !g)
                    break
            }
            var i = a.WORDS;
            if (0 == d)
                return a.WORDS;
            if (-1 != c.lastIndexOf(a.TO, d) && c.lastIndexOf(a.TO, d) + a.TO.length == d ? (d = c.lastIndexOf(a.TO, d),
            i = a.TO) : -1 != c.lastIndexOf(a.FROM, d) && c.lastIndexOf(a.FROM, d) + a.FROM.length == d ? (d = c.lastIndexOf(a.FROM, d),
            i = a.FROM) : -1 != c.lastIndexOf(a.DISCUSSIONS, d) && c.lastIndexOf(a.DISCUSSIONS, d) + a.DISCUSSIONS.length == d ? (d = c.lastIndexOf(a.DISCUSSIONS, d),
            i = a.DISCUSSIONS) : -1 != c.lastIndexOf(a.COMMENTS, d) && c.lastIndexOf(a.COMMENTS, d) + a.COMMENTS.length == d ? (d = c.lastIndexOf(a.COMMENTS, d),
            i = a.COMMENTS) : -1 != c.lastIndexOf(a.IN, d) && c.lastIndexOf(a.IN, d) + a.IN.length == d ? (d = c.lastIndexOf(a.IN, d),
            i = a.IN) : -1 != c.lastIndexOf(a.IS, d) && c.lastIndexOf(a.IS, d) + a.IS.length == d ? (d = c.lastIndexOf(a.IS, d),
            i = a.IS) : -1 != c.lastIndexOf(a.HAS, d) && c.lastIndexOf(a.HAS, d) + a.HAS.length == d ? (d = c.lastIndexOf(a.HAS, d),
            i = a.HAS) : -1 != c.lastIndexOf(a.GROUP, d) && c.lastIndexOf(a.GROUP, d) + a.GROUP.length == d ? (d = c.lastIndexOf(a.GROUP, d),
            i = a.GROUP) : -1 != c.lastIndexOf(a.USER, d) && c.lastIndexOf(a.USER, d) + a.USER.length == d ? (d = c.lastIndexOf(a.USER, d),
            i = a.USER) : -1 != c.lastIndexOf(a.TAG, d) && c.lastIndexOf(a.TAG, d) + a.TAG.length == d ? (d = c.lastIndexOf(a.TAG, d),
            i = a.TAG) : -1 != c.lastIndexOf(a.FILENAME, d) && c.lastIndexOf(a.FILENAME, d) + a.FILENAME.length == d ? (d = c.lastIndexOf(a.FILENAME, d),
            i = a.FILENAME) : -1 != c.lastIndexOf(a.TEXT, d) && c.lastIndexOf(a.TEXT, d) + a.TEXT.length == d && (d = c.lastIndexOf(a.TEXT, d),
            i = a.TEXT),
            0 == d)
                return i;
            for (var j = 0; j < e.length; j++)
                if (c.charAt(d - 1) == e[j])
                    return i;
            return a.WORDS
        }
        function d(c) {
            for (var d = b(c); d > 0; ) {
                for (var g = !1, h = 0; h < e.length; h++)
                    if (c.charAt(d - 1) == e[h]) {
                        d--,
                        g = !0;
                        break
                    }
                if (c.charAt(d - 1) == f && (d--,
                g = !0),
                !g)
                    break
            }
            return 0 == d ? -1 : -1 != c.lastIndexOf(a.TO, d) && c.lastIndexOf(a.TO, d) + a.TO.length == d ? c.lastIndexOf(a.TO, d) : -1 != c.lastIndexOf(a.FROM, d) && c.lastIndexOf(a.FROM, d) + a.FROM.length == d ? c.lastIndexOf(a.FROM, d) : -1 != c.lastIndexOf(a.DISCUSSIONS, d) && c.lastIndexOf(a.DISCUSSIONS, d) + a.DISCUSSIONS.length == d ? c.lastIndexOf(a.DISCUSSIONS, d) : -1 != c.lastIndexOf(a.COMMENTS, d) && c.lastIndexOf(a.COMMENTS, d) + a.COMMENTS.length == d ? c.lastIndexOf(a.COMMENTS, d) : -1 != c.lastIndexOf(a.IN, d) && c.lastIndexOf(a.IN, d) + a.IN.length == d ? c.lastIndexOf(a.IN, d) : -1 != c.lastIndexOf(a.IS, d) && c.lastIndexOf(a.IS, d) + a.IS.length == d ? c.lastIndexOf(a.IS, d) : -1 != c.lastIndexOf(a.HAS, d) && c.lastIndexOf(a.HAS, d) + a.HAS.length == d ? c.lastIndexOf(a.HAS, d) : -1 != c.lastIndexOf(a.GROUP, d) && c.lastIndexOf(a.GROUP, d) + a.GROUP.length == d ? c.lastIndexOf(a.GROUP, d) : -1 != c.lastIndexOf(a.USER, d) && c.lastIndexOf(a.USER, d) + a.USER.length == d ? c.lastIndexOf(a.USER, d) : -1 != c.lastIndexOf(a.TAG, d) && c.lastIndexOf(a.TAG, d) + a.TAG.length == d ? c.lastIndexOf(a.TAG, d) : -1 != c.lastIndexOf(a.FILENAME, d) && c.lastIndexOf(a.FILENAME, d) + a.FILENAME.length == d ? c.lastIndexOf(a.FILENAME, d) : -1 != c.lastIndexOf(a.TEXT, d) && c.lastIndexOf(a.TEXT, d) + a.TEXT.length == d ? c.lastIndexOf(a.TEXT, d) : d + 1
        }
        var e = [" ", "+", " and ", " or ", '"', "(", ")", "@", ".", "<", ">", "|"]
          , f = ":";
        return {
            searchForKey: b,
            getType: c,
            getSearchStart: d
        }
    }
    ]),
    b.module("convoApp").directive("cnvUploadFileUi", function() {
        return {
            restrict: "A",
            scope: !0,
            link: function(a, b, c) {},
            controller: ["$scope", "UploadService", "popoverUtils", "$timeout", function(a, b, c, d) {
                a.message && a.message.fileInfo.file && (a.file = a.message.fileInfo.file),
                a.file.eventHandlers = {},
                a.remove = function() {
                    a.file.onFileRemoved(a.file.fileId),
                    a.$emit("fileRemovedClicked", a.message)
                }
                ,
                a.retry = function() {
                    a.file.status === b.FILE_STATUS_UPLOAD_FAILED ? a.file.restartUploadCallback() : e && b.fileConversionReq(e, a.file),
                    a.file.status = b.FILE_STATUS_UPLOADING
                }
                ,
                a.isInProgress = function() {
                    return a.file.status != b.FILE_STATUS_CONVERSION_COMPLETED && a.file.status != b.FILE_STATUS_UPLOAD_FAILED && a.file.status != b.FILE_STATUS_CONVERSION_REQ_FAILED && a.file.status != b.FILE_STATUS_CONVERSION_FAILED
                }
                ,
                a.converting = function() {
                    return a.file.status == b.FILE_STATUS_CONVERSION_REQ_SUCCESS
                }
                ,
                a.completed = function() {
                    return a.file.status == b.FILE_STATUS_CONVERSION_COMPLETED || a.file.status == b.FILE_STATUS_CONVERSION_FAILED
                }
                ,
                a.failed = function() {
                    return a.file.status == b.FILE_STATUS_UPLOAD_FAILED || a.file.status == b.FILE_STATUS_CONVERSION_REQ_FAILED
                }
                ,
                a.file.eventHandlers.EVENT_UPLOAD_PROGRESS = function() {
                    console.log("EVENT_UPLOAD_PROGRESS")
                }
                ,
                a.file.eventHandlers.EVENT_UPLOAD_COMPLETE = function() {
                    console.log("EVENT_UPLOAD_COMPLETE")
                }
                ,
                a.file.eventHandlers.EVENT_UPLOAD_FAILED = function() {
                    console.log("EVENT_UPLOAD_FAILED"),
                    "chat-window" != a.file.uploadFrom || a.$$phase || a.$digest(a.files)
                }
                ,
                a.file.eventHandlers.EVENT_FILE_CONVERSION_REQ_SUCCESS = function() {
                    console.log("EVENT_FILE_CONVERSION_REQ_SUCCESS")
                }
                ;
                var e = null ;
                a.file.eventHandlers.EVENT_FILE_CONVERSION_REQ_FAILED = function(b) {
                    e = b,
                    console.log("EVENT_FILE_CONVERSION_REQ_FAILED"),
                    "chat-window" != a.file.uploadFrom || a.$$phase || a.$digest(a.files)
                }
                ,
                a.file.eventHandlers.EVENT_FILE_CONVERSION_PENDING = function() {
                    console.log("EVENT_FILE_CONVERSION_PENDING")
                }
                ,
                a.file.eventHandlers.EVENT_FILE_CONVERSION_FAILED = function() {
                    console.log("EVENT_FILE_CONVERSION_FAILED"),
                    "chat-window" != a.file.uploadFrom || a.$$phase || a.$digest(a.files)
                }
                ,
                a.file.eventHandlers.EVENT_FILE_CONVERSION_COMPLETE = function() {
                    console.log("EVENT_FILE_CONVERSION_COMPLETE"),
                    a.message && a.message.fileInfo.file && (a.file.fileUploaded = !0,
                    a.$broadcast("render"))
                }
                ,
                a.$emit("fileDidAppear"),
                a.$on("$destroy", function(a) {
                    c.hide()
                })
            }
            ]
        }
    }),
    b.module("convoApp").directive("cnvUploadFilesUiManager", function() {
        return {
            restrict: "A",
            templateUrl: "fileUpload/cnvUploadFilesUiManager.tpl.html",
            scope: {
                ctrl: "=cnvUploadFilesUiManagerCtrl",
                fileInputController: "=cnvInsertAddItemOptionsCtrl"
            },
            link: function(a, b, c) {
                b.on("mousewheel", function(a, b) {
                    0 !== a.originalEvent.wheelDeltaX && a.preventDefault()
                }),
                a.scrollToEnd = function() {
                    var a = b.find(".scrollable");
                    a.length && a.animate({
                        scrollLeft: a[0].scrollWidth
                    }, "500", "swing")
                }
            },
            controller: ["$scope", "$rootScope", "UploadService", "getNoteThumbnailPathFilter", "getFileIconByTypeFilter", function(a, b, c, d, e) {
                function f(b) {
                    b.onFileRemoved = g,
                    a.files.push(b),
                    a.ctrl.filesUnderProcessCount = a.files.length,
                    "chat-window" == b.uploadFrom && a.$digest(a.files)
                }
                function g(b) {
                    var c = j(b);
                    c.jqXHR && c.jqXHR.abort(),
                    c.onFileRemovedFromService && c.onFileRemovedFromService();
                    for (var d = 0, e = a.files; d < e.length; d++)
                        if (e[d].fileId == b) {
                            e.splice(d, 1);
                            break
                        }
                    a.ctrl.filesUnderProcessCount = a.files.length
                }
                function h() {
                    var b = a.files;
                    for (var c in b)
                        g(b[c].fileId);
                    a.$emit("all-files-removed")
                }
                function i() {
                    var b = a.files
                      , d = c;
                    for (var e in b)
                        if (b[e].status === d.FILE_STATUS_WAITING || b[e].status === d.FILE_STATUS_UPLOADING || b[e].status === d.FILE_STATUS_UPLOADED || b[e].status === d.FILE_STATUS_CONVERSION_REQ_SUCCESS)
                            return;
                    a.$emit("filesUploadManagerCtrl_allFilesProcessed", {})
                }
                function j(b) {
                    for (var c = 0, d = a.files; c < d.length; c++)
                        if (d[c].fileId == b)
                            return d[c]
                }
                var k = a
                  , l = c;
                k.type = k.ctrl.templateType,
                k.FILE_STATUS_WAITING = l.FILE_STATUS_WAITING,
                k.FILE_STATUS_UPLOADING = l.FILE_STATUS_UPLOADING,
                k.FILE_STATUS_UPLOADED = l.FILE_STATUS_UPLOADED,
                k.FILE_STATUS_UPLOAD_FAILED = l.FILE_STATUS_UPLOAD_FAILED,
                k.FILE_STATUS_CONVERSION_REQ_SUCCESS = l.FILE_STATUS_CONVERSION_REQ_SUCCESS,
                k.FILE_STATUS_CONVERSION_REQ_FAILED = l.FILE_STATUS_CONVERSION_REQ_FAILED,
                k.FILE_STATUS_CONVERSION_COMPLETED = l.FILE_STATUS_CONVERSION_COMPLETED,
                k.FILE_STATUS_CONVERSION_FAILED = l.FILE_STATUS_CONVERSION_FAILED,
                k.fileInputController.onChange = function(a) {
                    if (!a.file.eventHandlers)
                        return "No file scope has been created yet. ";
                    switch (a.event) {
                    case l.EVENT_UPLOAD_PROGRESS:
                        a.file.eventHandlers.EVENT_UPLOAD_PROGRESS();
                        break;
                    case l.EVENT_UPLOAD_COMPLETE:
                        a.file.eventHandlers.EVENT_UPLOAD_COMPLETE();
                        break;
                    case l.EVENT_UPLOAD_FAILED:
                        a.file.eventHandlers.EVENT_UPLOAD_FAILED(),
                        i();
                        break;
                    case l.EVENT_FILE_CONVERSION_REQ_SUCCESS:
                        a.file.eventHandlers.EVENT_FILE_CONVERSION_REQ_SUCCESS();
                        break;
                    case l.EVENT_FILE_CONVERSION_REQ_FAILED:
                        a.file.eventHandlers.EVENT_FILE_CONVERSION_REQ_FAILED(a.file_input_context),
                        i();
                        break;
                    case l.EVENT_FILE_CONVERSION_PENDING:
                        a.file.eventHandlers.EVENT_FILE_CONVERSION_PENDING();
                        break;
                    case l.EVENT_FILE_CONVERSION_FAILED:
                        a.file.eventHandlers.EVENT_FILE_CONVERSION_FAILED(),
                        i();
                        break;
                    case l.EVENT_FILE_CONVERSION_COMPLETE:
                        a.file.eventHandlers.EVENT_FILE_CONVERSION_COMPLETE(),
                        i();
                        break;
                    default:
                        console.log("Invalid Event fired.")
                    }
                }
                ,
                k.openFileChooser = function() {
                    k.fileInputController.onTriggerFileChooser()
                }
                ,
                k.$on("enqueueFile", function(a, b) {
                    for (var c = 0; c < b.length; c++)
                        f(b[c])
                });
                var m = _.debounce(function() {
                    k.scrollToEnd()
                }, 1e3);
                if (k.$on("fileDidAppear", function(a, b) {
                    a.stopPropagation(),
                    m()
                }),
                k.ctrl.addSuccessfullyProcessedFile = function(b) {
                    file = {},
                    file.fileId = b.file_id,
                    file.fileUploadName = b.original_name,
                    file.localUrl = b.thumbnail_name ? d(b, b.item_id) : e(b.type, 16),
                    file.noTitle = b.thumbnail_name ? !0 : !1,
                    file.name = b.name,
                    file.noteId = b.item_id,
                    file.retryAllowed = !1,
                    file.size = b.size,
                    file.status = c.FILE_STATUS_CONVERSION_COMPLETED,
                    file.type = b.type,
                    file.serverFileId = b.file_id,
                    file.onFileRemoved = g,
                    a.files.push(file),
                    a.ctrl.filesCount = a.files.length
                }
                ,
                k.ctrl.isBusy = function() {
                    var b = a.files;
                    if (!b)
                        return !1;
                    var d = c;
                    for (var e in b)
                        if (b[e].status === d.FILE_STATUS_WAITING || b[e].status === d.FILE_STATUS_UPLOADING || b[e].status === d.FILE_STATUS_UPLOADED || b[e].status === d.FILE_STATUS_CONVERSION_REQ_SUCCESS)
                            return !0;
                    return !1
                }
                ,
                k.ctrl.getSuccessfullyProcessedFiles = function() {
                    var b = []
                      , d = a.files
                      , e = c;
                    for (var f in d)
                        (d[f].status === e.FILE_STATUS_CONVERSION_COMPLETED || d[f].status === e.FILE_STATUS_CONVERSION_FAILED || d[f].status === e.FILE_STATUS_CONVERSION_REQ_FAILED) && b.push(d[f]);
                    return b
                }
                ,
                k.ctrl.getAllFiles = function() {
                    return a.files
                }
                ,
                k.ctrl.removeFile = function(b) {
                    var c = a.files;
                    for (var d in c)
                        if (c[d].fileId === b) {
                            g(c[d].fileId);
                            break
                        }
                    i()
                }
                ,
                k.ctrl.removeAllFiles = h,
                a.ctrl.filesArrayObj)
                    k.files = a.ctrl.filesArrayObj;
                else if (k.files = [],
                k.ctrl.files)
                    for (var n in k.ctrl.files)
                        f(k.ctrl.files[n]);
                a.$on("$destroy", function(a) {
                    h()
                }),
                a.ctrl.initialized = !0
            }
            ]
        }
    }),
    b.module("convoApp").factory("UploadService", ["ServerComm", "$rootScope", "$http", "$interval", "$q", "utils", "Note", "awsService", "$filter", "datetimeService", "nativeCommBridge", "config", function(a, b, c, d, e, f, g, h, i, j, k, l) {
        var m = {
            FILE_STATUS_WAITING: "fsw",
            FILE_STATUS_UPLOADING: "fsug",
            FILE_STATUS_UPLOADED: "fsud",
            FILE_STATUS_UPLOAD_FAILED: "fsuf",
            FILE_STATUS_CONVERSION_REQ_SUCCESS: "fscrs",
            FILE_STATUS_CONVERSION_REQ_FAILED: "fscrf",
            FILE_STATUS_CONVERSION_COMPLETED: "fscc",
            FILE_STATUS_CONVERSION_FAILED: "fscf",
            CONCURRENT_FILE_UPLOAD_LIMIT: 2,
            EVENT_FILE_SELECTED: "fileselected",
            EVENT_UPLOAD_PROGRESS: "uploadprogress",
            EVENT_UPLOAD_COMPLETE: "uploadcomplete",
            EVENT_UPLOAD_FAILED: "uploadfailed",
            EVENT_FILE_CONVERSION_REQ_SUCCESS: "fileconversionrequestsuccess",
            EVENT_FILE_CONVERSION_REQ_FAILED: "fileconversionrequestfailed",
            EVENT_FILE_CONVERSION_COMPLETE: "fileconversioncomplete",
            EVENT_FILE_CONVERSION_PENDING: "fileconversionpending",
            EVENT_FILE_CONVERSION_FAILED: "fileconversionfailed",
            UPLAOD_MAX_PERCENT: 80,
            init: function(a) {
                (l.IS_NATIVE || l.IS_MENULET) && $(a.pasteZoneId).on("paste", function(b) {
                    b.originalEvent.clipboardData.getData("text") || (k.getImageFromClipboard(a.pasteZoneId),
                    b.stopPropagation(),
                    b.preventDefault())
                });
                var b = {
                    url: h.getS3BucketUrl(),
                    type: "POST",
                    dropZone: a.dropZoneId ? $(a.dropZoneId) : !1,
                    pasteZone: a.pasteZoneId ? $(a.pasteZoneId) : !1,
                    maxRetries: 1,
                    retryTimeout: 100,
                    limitConcurrentUploads: m.CONCURRENT_FILE_UPLOAD_LIMIT,
                    fileConversionStatusReqInterval: null ,
                    fileConversionReq: m.fileConversionReq,
                    pollForFilesStatus: m.pollForFilesStatus,
                    filesConversionStatusReq: m.filesConversionStatusReq,
                    filesConversionContext: function(a) {
                        var b = {
                            pendingFilesConversionIds: [],
                            files: {},
                            setFileById: function(a, c) {
                                b.files[+a] = c
                            },
                            getFileById: function(a) {
                                return b.files[+a] || null 
                            },
                            removeFileById: function(a) {
                                delete b.files[+a]
                            },
                            input_element_id: a,
                            event_dispacher: {
                                dispach: function(b) {
                                    $(a).trigger("cnvchange", [b])
                                }
                            }
                        };
                        return b
                    }(a.id),
                    add: function(b, c) {
                        var d = c && c.files && c.files.length ? c.files[0] : null ;
                        if (d && (!a.hasOwnProperty("uploadAcknowledgement") || typeof a.uploadAcknowledgement != typeof Function || a.uploadAcknowledgement.apply(this))) {
                            var e = {};
                            if (e.name = d.name || (new Date).getTime() + (-1 != d.type.indexOf("image") ? ".png" : ""),
                            e.size = d.size ? d.size : 1,
                            -1 != e.name.lastIndexOf(".") ? e.type = e.name.substr(e.name.lastIndexOf(".") + 1).toLowerCase() : e.type = -1 != d.type.indexOf("image") ? "png" : d.type,
                            e.fileId = f.generateGuid(),
                            e.fileUploadName = e.fileId + "." + e.type,
                            e.localUrl = i("getFileIconByType")(e.type, 32),
                            e.uploadFrom = a.uploadFrom,
                            e.status = m.FILE_STATUS_WAITING,
                            e.mp_attachment_source = "Local Photos",
                            e.retryAllowed = !1,
                            "Image" === f.getFileFormat(e.type)) {
                                var g = new FileReader;
                                g.readAsDataURL(d),
                                g.onload = function(a) {
                                    var b = a.target.result;
                                    if (0 === b.indexOf("data:image") && -1 === b.indexOf("IMAGE/TIFF") && -1 === b.indexOf("image/tiff")) {
                                        var c = new Image
                                          , d = 250
                                          , f = 250;
                                        c.src = a.target.result,
                                        c.onload = function() {
                                            var a = document.createElement("canvas")
                                              , b = a.getContext("2d");
                                            if (a.setAttribute("crossOrigin", "anonymous"),
                                            c.width > d || c.height > f) {
                                                var g = d / c.width
                                                  , h = f / c.height
                                                  , i = Math.min(g, h);
                                                c.width = c.width * i,
                                                c.height = c.height * i,
                                                a.width = c.width,
                                                a.height = c.height
                                            } else
                                                a.width = c.width,
                                                a.height = c.height;
                                            b.drawImage(c, 0, 0, c.width, c.height),
                                            e.noTitle = !0,
                                            e.showImage = !0,
                                            e.localUrl = a.toDataURL("image/png", .4)
                                        }
                                    }
                                }
                            }
                            m.dispach(this, {
                                event: m.EVENT_FILE_SELECTED,
                                file: e
                            }),
                            d.renderedSelectedFileData = e,
                            c.formData = {
                                "x-amz-server-side-encryption": "AES256",
                                AWSAccessKeyId: h.getAwsData().access_key,
                                acl: "private",
                                policy: h.getAwsData().s3_policy,
                                Filename: e.fileUploadName,
                                signature: h.getAwsData().s3_signature,
                                success_action_status: "201",
                                "Content-Type": e.type,
                                key: m.getFileUploadPath(e.noteId, e.appInstanceId, e.fileUploadName)
                            },
                            c.paramName && "files[]" == c.paramName[0] && (c.paramName[0] = "file"),
                            e.jqXHR = c.submit()
                        }
                    },
                    progress: function(a, b) {
                        var c = b.files[0].renderedSelectedFileData;
                        c.status = m.FILE_STATUS_UPLOADING,
                        c.progress = m.calculateProgress(b),
                        m.dispach(this, {
                            event: m.EVENT_UPLOAD_PROGRESS,
                            file: c
                        })
                    },
                    done: function(a, b) {
                        var c = b.files[0].renderedSelectedFileData;
                        c.progress = m.UPLAOD_MAX_PERCENT,
                        c.status = m.FILE_STATUS_UPLOADED,
                        m.dispach(this, {
                            event: m.EVENT_UPLOAD_COMPLETE,
                            file: c
                        }),
                        b.fileConversionReq(b.filesConversionContext, c)
                    },
                    fail: function(a, b) {
                        var c = b.files[0].renderedSelectedFileData;
                        c.status = m.FILE_STATUS_UPLOAD_FAILED,
                        c.retryAllowed = !0,
                        c.restartUploadCallback = function() {
                            b.submit(),
                            c.restartUploadCallback = null 
                        }
                        ,
                        m.dispach(this, {
                            event: m.EVENT_UPLOAD_FAILED,
                            file: c
                        })
                    }
                };
                return {
                    context: b.filesConversionContext,
                    input_element: $(a.id).fileupload(b)
                }
            },
            fileConversionReq: function(b, c) {
                var d = {
                    file: {
                        item_id: c.noteId,
                        name: c.name,
                        file_upload_name: c.fileUploadName,
                        type: c.type,
                        size: c.size,
                        file_url: c.file_url,
                        file_source: c.source || null ,
                        file_access_token: c.file_access_token || null ,
                        file_preview_url: c.file_preview_url || null 
                    }
                };
                isString(c.conversationId) && (d.file.conversation_uid = c.conversationId,
                d.file.app_instance_id = parseInt(c.appInstanceId)),
                a.post("files", d).success(function(a, d) {
                    a && a.file && "converting" == a.file.status.toLowerCase() || "success" == a.file.status.toLowerCase() ? (c.serverFileId = a.file.file_id,
                    c.fileFormat = a.file.file_format,
                    "converting" == a.file.status.toLowerCase() ? (c.status = m.FILE_STATUS_CONVERSION_REQ_SUCCESS,
                    c.progress = 80,
                    b.setFileById(c.serverFileId, c),
                    b.pendingFilesConversionIds.push(c.serverFileId),
                    c.onFileRemovedFromService = function() {
                        b.removeFileById(c.serverFileId),
                        m.removeValueFromArray(b.pendingFilesConversionIds, c.serverFileId)
                    }
                    ,
                    m.pollForFilesStatus(b),
                    b.event_dispacher.dispach({
                        event: m.EVENT_FILE_CONVERSION_REQ_SUCCESS,
                        file: c
                    })) : (c.width = a.file.width,
                    c.height = a.file.height,
                    c.thumbnailName = a.file.thumbnail_name,
                    c.originalName = a.file.original_name,
                    c.preview_name = a.file.preview_name,
                    c.available_previews = a.file.available_previews,
                    c.no_of_pages = a.file.no_of_pages,
                    c.fileObjFromServer = a.file,
                    !c.showImage && a.file.thumbnail_name && (c.localUrl = i("getNoteThumbnailPath")(a.file, c.noteId, 0, c.appInstanceId),
                    c.showImage = !0,
                    c.noTitle = !0),
                    c.status = m.FILE_STATUS_CONVERSION_COMPLETED,
                    b.event_dispacher.dispach({
                        event: m.EVENT_FILE_CONVERSION_COMPLETE,
                        file: c
                    }))) : (c.status = m.FILE_STATUS_CONVERSION_REQ_FAILED,
                    c.retryAllowed = !0,
                    b.event_dispacher.dispach({
                        event: m.EVENT_FILE_CONVERSION_REQ_FAILED,
                        file: c,
                        file_input_context: b
                    }))
                }).error(function(a, d) {
                    c.status = m.FILE_STATUS_CONVERSION_REQ_FAILED,
                    c.retryAllowed = !0,
                    b.event_dispacher.dispach({
                        event: m.EVENT_FILE_CONVERSION_REQ_FAILED,
                        file: c,
                        file_input_context: b
                    })
                })
            },
            pollForFilesStatus: function(a) {
                if (a.pendingFilesConversionIds.length && !a.pollingForConversionStatus) {
                    var b = a.pendingFilesConversionIds
                      , c = m.filesConversionStatusReq(a.pendingFilesConversionIds);
                    a.pollingForConversionStatus = !0;
                    var d = !1;
                    console.log("POLLING FOR FILES CONVERSION STATUS"),
                    c.success(function(c, e) {
                        if (a.pollingForConversionStatus = !1,
                        c && c.files_status)
                            for (var f in c.files_status) {
                                var g = a.getFileById(c.files_status[f].file_id);
                                g && ("success" == c.files_status[f].status.toLowerCase() ? (a.removeFileById(g.serverFileId),
                                g.width = c.files_status[f].width,
                                g.height = c.files_status[f].height,
                                g.thumbnailName = c.files_status[f].thumbnail_name,
                                g.originalName = c.files_status[f].original_name,
                                g.preview_name = c.files_status[f].preview_name,
                                g.available_previews = c.files_status[f].available_previews,
                                g.no_of_pages = c.files_status[f].no_of_pages,
                                g.fileObjFromServer = c.files_status[f],
                                !g.showImage && c.files_status[f].thumbnail_name && (g.localUrl = i("getNoteThumbnailPath")(c.files_status[f], g.noteId, 0, g.appInstanceId),
                                g.showImage = !0,
                                g.noTitle = !0),
                                m.removeValueFromArray(a.pendingFilesConversionIds, c.files_status[f].file_id),
                                g.progress = 100,
                                g.status = m.FILE_STATUS_CONVERSION_COMPLETED,
                                a.event_dispacher.dispach({
                                    event: m.EVENT_FILE_CONVERSION_COMPLETE,
                                    file: g
                                })) : "converting" == c.files_status[f].status.toLowerCase() ? (d = !0,
                                g.progress < 90 ? g.progress += (100 - g.progress) / 4 : g.progress < 96 && (g.progress += .2),
                                a.event_dispacher.dispach({
                                    event: m.EVENT_FILE_CONVERSION_PENDING,
                                    file: g
                                })) : (a.removeFileById(g.serverFileId),
                                m.removeValueFromArray(a.pendingFilesConversionIds, c.files_status[f].file_id),
                                g.retryAllowed = !1,
                                g.status = m.FILE_STATUS_CONVERSION_FAILED,
                                a.event_dispacher.dispach({
                                    event: m.EVENT_FILE_CONVERSION_FAILED,
                                    file: g
                                })))
                            }
                        else
                            for (var f = 0; f < b.length; f++) {
                                var g = a.getFileById(b[f]);
                                g && (g.retryAllowed = !1,
                                g.status = m.FILE_STATUS_CONVERSION_FAILED,
                                a.removeFileById(g.serverFileId),
                                m.removeValueFromArray(a.pendingFilesConversionIds, b[f]),
                                a.event_dispacher.dispach({
                                    event: m.EVENT_FILE_CONVERSION_FAILED,
                                    file: g
                                }))
                            }
                        (d || a.pendingFilesConversionIds.length > 0) && setTimeout(function() {
                            m.pollForFilesStatus(a)
                        }, 3e3)
                    }),
                    c.error(function(c, d) {
                        a.pollingForConversionStatus = !1;
                        for (var e = 0; e < b.length; e++) {
                            var f = a.getFileById(b[e]);
                            f && (f.retryAllowed = !1,
                            f.status = m.FILE_STATUS_CONVERSION_FAILED,
                            a.removeFileById(f.serverFileId),
                            m.removeValueFromArray(a.pendingFilesConversionIds, b[e]),
                            a.event_dispacher.dispach({
                                event: m.EVENT_FILE_CONVERSION_FAILED,
                                file: f
                            }))
                        }
                    })
                }
            },
            filesConversionStatusReq: function(b) {
                return a.post("files", {
                    converting_file_ids: b.join()
                })
            },
            dispach: function(a, b) {
                $(a).trigger("cnvchange", [b])
            },
            removeValueFromArray: function(a, b) {
                var c = a.indexOf(b);
                -1 != c && a.splice(c, 1)
            },
            getFileUploadPath: function(a, c, d) {
                var e = "";
                return e = 4 == c ? "link" : "note",
                b.login_data.account_id + "/" + e + a + "/" + d
            },
            calculateProgress: function(a) {
                return parseInt(a.loaded / a.total * 100, 10) / 100 * m.UPLAOD_MAX_PERCENT
            }
        };
        return m
    }
    ]),
    b.module("convoApp").factory("filterInfo", function() {
        var a = {};
        return a.filterApplied = !1,
        a.filterLink = null ,
        a.waitingForServerDataBeforeEvaluatingTheFilter = !1,
        a
    }),
    b.module("convoApp").factory("FilterTypes", [function() {
        var a = {};
        return a.ALL_TYPES = ["to", "from", "in", "is", "discussions", "comments", "has", "tag", "filename", "like", "post", "vls", "from_date", "to_date", "date"],
        a.TO = "to",
        a.FROM = "from",
        a.DATA_TYPE = "is",
        a.IN = "in",
        a.TEXT = "text",
        a.DISCUSSIONS = "discussions",
        a.HAS = "has",
        a.TAG = "tag",
        a.FILENAME = "filename",
        a.POST = "post",
        a.ANY_VALUE = "any",
        a.NONE_VALUE = "none",
        a.IS_SYSTEM_MESSAGE = "systemmessage",
        a.IN_DRAFTS = "drafts",
        a.IN_TRASH = "trash",
        a.IN_STARRED = "starred",
        a.IS = "is",
        a.USER = "USER",
        a.GROUP = "GROUP",
        a.WORDS = "words",
        a.DRAFTS = "drafts",
        a.TRASH = "trash",
        a.LIKE = "like",
        a.VLS = "vls",
        a.FROM_DATE = "from_date",
        a.TO_DATE = "to_date",
        a.DATE = "date",
        a.COMMENTS = "comments",
        a
    }
    ]),
    b.module("convoApp").factory("Filters", ["FilterTypes", "utils", function(a, b) {
        var c = {
            OFFICE_FILES: "Office files",
            OFFICE_FILES_VALUE: "docx,pptx,xlsx,doc,ppt,xls",
            ALL_FILES: "Files",
            ALL_FILES_VALUE: "docx,pptx,xlsx,doc,ppt,xls,pdf,mp4",
            IMAGES: "Images",
            IMAGES_VALUE: "jpg,jpeg,jfif,tif,png,gif,bmp,ppm,pgm,pbm,pnm,svg,psd,tga",
            VIDEOS: "Videos",
            VIDEOS_VALUE: "video",
            WORD_DOCS: "Word docs",
            WORD_DOCS_VALUE: "docx,doc",
            EXCEL_SHEETS: "Excel sheets",
            EXCEL_SHEETS_VALUE: "xlsx,xls",
            SLIDE_SHOWS: "Powerpoint slideshows",
            SLIDE_SHOWS_VALUE: "pptx,ppt",
            PDF: "PDF",
            PDF_VALUE: "pdf",
            PHOTOSHOP: "Photoshop files",
            PHOTOSHOP_VALUE: "psd"
        }
          , d = {};
        return d.newFilter = function(a, b, c) {
            return {
                type: a,
                value: b,
                description: c,
                nature: "PERMANENT"
            }
        }
        ,
        d.newFromFilter = function(b, c) {
            return d.newFilter(a.FROM, b, c)
        }
        ,
        d.newANDFiltersChain = function(a, b) {
            return {
                type: "AND_CHAIN",
                description: b,
                numberOfFilters: a.length,
                nature: "PERMANENT",
                id: "123",
                filters: a
            }
        }
        ,
        d.isGroupFilter = function(c) {
            return c.type === a.TO && b.isGroupIdLike(c.value)
        }
        ,
        d.hasAnySearchFilter = function(b) {
            for (var c = 0; c < b.length; c++) {
                var d = b[c].type;
                if (d == a.TEXT || d == a.TAG || d == a.HAS || d == a.FILENAME || d == a.DISCUSSIONS)
                    return {
                        hasTextFilter: d == a.TEXT
                    }
            }
            return !1
        }
        ,
        d.hasAnyTextFilter = function(b) {
            for (var c = 0; c < b.length; c++) {
                var d = b[c].type;
                if (d == a.TEXT || d == a.TAG)
                    return !0
            }
            return !1
        }
        ,
        d.hasAnyUserFilter = function(c) {
            for (var d = [], e = 0; e < c.length; e++) {
                var f = c[e].type
                  , g = c[e].value;
                (f === a.FROM || f === a.TO && !b.isGroupIdLike(g)) && d.push(c[e])
            }
            return d.length > 0 ? d : !1
        }
        ,
        d.hasAnyGroupFilter = function(c) {
            for (var d = 0; d < c.length; d++) {
                var e = c[d].type
                  , f = c[d].value;
                if (e === a.TO && b.isGroupIdLike(f))
                    return !0
            }
            return !1
        }
        ,
        d.hasAnyPostFilter = function(b) {
            for (var c = 0; c < b.length; c++)
                if (b[c].type === a.POST)
                    return !0;
            return !1
        }
        ,
        d.hasAnyFromOrToFilters = function(b) {
            for (var c = {
                fromFilters: [],
                toFilters: []
            }, d = 0; d < b.length; d++) {
                var e = b[d].type;
                b[d].value;
                e === a.FROM ? c.fromFilters.push(b[d]) : e === a.TO && c.toFilters.push(b[d])
            }
            return c.fromFilters.length > 0 || c.toFilters.length > 0 ? c : !1
        }
        ,
        d.hasAnyFromOrToFiltersWithNonIdValues = function(c) {
            for (var d = {
                fromFilters: [],
                toFilters: []
            }, e = 0; e < c.length; e++) {
                var f = c[e].type
                  , g = c[e].value;
                f === a.FROM ? b.isUserIdLike(g) || d.fromFilters.push(c[e]) : f === a.TO && (b.isUserIdLike(g) || b.isGroupIdLike(g) || d.toFilters.push(c[e]))
            }
            return d.fromFilters.length > 0 || d.toFilters.length > 0 ? d : !1
        }
        ,
        d.getSearchWordsIfHasWordSearchFilter = function(b) {
            for (var c = 0; c < b.length; c++)
                if (b[c].type == a.TEXT)
                    return b[c].value;
            return null 
        }
        ,
        d.getTextFilterValue = function(a) {}
        ,
        d.newHasFilter = function(b) {
            b = $.trim(b.toLowerCase());
            var e = null 
              , f = null 
              , g = c;
            return b == g.OFFICE_FILES.toLowerCase() ? (e = g.OFFICE_FILES_VALUE,
            f = g.OFFICE_FILES) : b == g.ALL_FILES.toLowerCase() || "all files" == b ? (e = g.ALL_FILES_VALUE,
            f = g.ALL_FILES) : b == g.IMAGES.toLowerCase() ? (e = g.IMAGES_VALUE,
            f = g.IMAGES) : b == g.VIDEOS.toLowerCase() ? (e = g.VIDEOS_VALUE,
            f = g.VIDEOS) : b.indexOf("jpg") >= 0 ? (e = b.replace("jpg", "jpeg,jpg,jfif"),
            f = b) : b.indexOf("jpeg") >= 0 ? (e = b.replace("jpeg", "jpeg,jpg,jfif"),
            f = b) : b.indexOf("jfif") >= 0 ? (e = b.replace("jfif", "jpeg,jpg,jfif"),
            f = b) : (e = b,
            f = b),
            d.newFilter(a.HAS, e, f)
        }
        ,
        d.hasFilter = c,
        d
    }
    ]),
    b.module("convoApp").factory("Group", ["$q", "ServerComm", function(a, c) {
        function d(a) {
            a.sort(function(a, b) {
                var c = a.first_name + " " + a.last_name
                  , d = b.first_name + " " + b.last_name;
                c = c.toLowerCase(),
                d = d.toLowerCase();
                var e = a.user_email_id
                  , f = b.user_email_id;
                if (e = e.toLowerCase(),
                f = f.toLowerCase(),
                c && d) {
                    if (d > c)
                        return -1;
                    if (c > d)
                        return 1
                } else if (e && f) {
                    if (f > e)
                        return -1;
                    if (e > f)
                        return 1
                }
                return 0
            })
        }
        function e(a) {
            var b = [];
            if (a)
                for (var c = 0; c < a.length; c++)
                    "ADMINISTRATOR" == a[c].user_role && b.push(a[c]);
            return b
        }
        function f(a) {
            var b = [];
            if (a)
                for (var c = 0; c < a.length; c++)
                    ("ACTIVE" == a[c].user_status || "INVITED" == a[c].user_status) && b.push(a[c]);
            return b
        }
        function g(a, c, d, e) {
            var f = a.get(c);
            f ? e && f && (f.length = 0) : f = e ? [] : {},
            a.set(c, b.extend(f, d))
        }
        var h = Backbone.Model.extend({
            fetchingDetailsFromServer: !1,
            detailsDeferred: null ,
            initialize: function() {},
            defaults: {},
            getDetails: function(b) {
                var h = this;
                return h.fetchingDetailsFromServer && !b ? h.detailsDeferred.promise : (h.fetchingDetailsFromServer = !0,
                h.detailsDeferred = a.defer(),
                c.postx("groups", {
                    group_id: h.get("id"),
                    method: "getGroupDetails",
                    get_notification_settings: "1"
                }).then(function(a) {
                    a = a.data,
                    a.type ? (h.set({
                        title: a.data.title,
                        description: a.data.description ? a.data.description : "",
                        access: a.data.access,
                        groupEmail: a.data.email,
                        thisUserCanLeave: a.data.this_user_can_leave,
                        createdBy: a.data.created_by,
                        membersCanInvite: a.data.members_can_invite,
                        membersCanPinContent: a.data.members_can_pin_content,
                        membersCanSetupIntegrations: a.data.members_can_setup_integrations,
                        hideFromFeedForThisUser: a.data.hide_from_feed_for_this_user,
                        autoFollowEnabled: a.data.auto_follow_enabled,
                        creator: a.data.creator,
                        email: a.data.email,
                        pendingInviteCount: a.data.pending_invite_count,
                        _hint_this_user_action: a.data._hint_this_user_action
                    }),
                    g(h, "groupMembers", f(a.data.users), !0),
                    g(h, "groupAdmins", e(a.data.users), !0),
                    g(h, "pinnedContents", a.data.pinned_contents, !0),
                    g(h, "notificationSettings", a.data.notification_settings, !1),
                    d(h.get("groupMembers")),
                    h.fetchingDetailsFromServer = !1,
                    h.detailsDeferred.resolve()) : (h.fetchingDetailsFromServer = !1,
                    h.detailsDeferred.reject(a))
                }, function(a) {
                    h.fetchingDetailsFromServer = !1,
                    h.detailsDeferred.reject(a)
                }),
                h.detailsDeferred.promise)
            },
            updateGroupDetails: function(a) {
                var b = this
                  , e = {
                    method: "updateGroupDetails",
                    group_id: this.get("id")
                };
                a.title && (e.title = a.title),
                a.description && (e.description = a.description),
                a.access && (e.access = a.access),
                "undefined" != typeof a.membersCanInvite && (e.members_can_invite = a.membersCanInvite),
                "undefined" != typeof a.membersCanPinContent && (e.members_can_pin_content = a.membersCanPinContent),
                "undefined" != typeof a.membersCanSetupIntegrations && (e.members_can_setup_integrations = a.membersCanSetupIntegrations),
                "undefined" != typeof a.autoFollowEnabled && (e.auto_follow_enabled = a.autoFollowEnabled),
                "undefined" != typeof a.hideFromFeedForThisUser && (e.hide_from_feed_for_this_user = a.hideFromFeedForThisUser),
                a.notificationSettings && (e.notification_settings = a.notificationSettings),
                a.addedAdminIds && (e.make_admins = a.addedAdminIds),
                a.removedAdminIds && (e.revoke_admins = a.removedAdminIds);
                var f = c.post("groups", e).success(function(c, e) {
                    if (c.type) {
                        if (c.data.users_added) {
                            for (var f = c.data.users_added, g = b.get("groupMembers"), h = 0; h < f.length; h++)
                                g.push(f[h]);
                            d(b.get("groupMembers")),
                            b.trigger("Group:groupMembersUpdated")
                        }
                        if (a.title && b.set("title", a.title),
                        a.description && b.set("description", a.description),
                        a.access && b.set("access", a.access),
                        "undefined" != typeof a.membersCanInvite && b.set("membersCanInvite", a.membersCanInvite),
                        "undefined" != typeof a.membersCanPinContent && b.set("membersCanPinContent", a.membersCanPinContent),
                        "undefined" != typeof a.membersCanSetupIntegrations && b.set("membersCanSetupIntegrations", a.membersCanSetupIntegrations),
                        "undefined" != typeof a.autoFollowEnabled && b.set("autoFollowEnabled", a.autoFollowEnabled),
                        "undefined" != typeof a.hideFromFeedForThisUser && b.set("hideFromFeedForThisUser", a.hideFromFeedForThisUser),
                        a.notificationSettings) {
                            var i = b.get("notificationSettings");
                            i.desktop = a.notificationSettings.desktop,
                            i.mobile = a.notificationSettings.mobile,
                            i.in_app = a.notificationSettings.in_app,
                            i.email = a.notificationSettings.email
                        }
                        if (a.addedAdminIds)
                            for (var j, k = 0; k < a.addedAdminIds.length; k++)
                                if (j = _.find(b.get("groupMembers"), function(b) {
                                    return b.user_id == a.addedAdminIds[k] ? !0 : void 0
                                })) {
                                    j.user_role = "ADMINISTRATOR";
                                    var l = _.where(b.get("adminMembers"), {
                                        user_id: j.user_id
                                    });
                                    l.length || b.get("groupAdmins").push(_.extend({}, j))
                                }
                        if (a.removedAdminIds)
                            for (var j, m, k = 0; k < a.removedAdminIds.length; k++) {
                                j = _.find(b.get("groupMembers"), function(b) {
                                    return b.user_id == a.removedAdminIds[k] ? !0 : void 0
                                }),
                                j && (j.user_role = "USER"),
                                m = _.find(b.get("groupAdmins"), function(b) {
                                    return b.user_id == a.removedAdminIds[k] ? !0 : void 0
                                });
                                var n = _.indexOf(b.get("groupAdmins"), m);
                                n >= 0 && b.get("groupAdmins").splice(n, 1)
                            }
                    }
                });
                return f
            },
            getDescription: function() {
                var a = this;
                return a.getDetails().then(function() {
                    return a.get("description")
                })
            },
            getGroupEmail: function() {
                var a = this;
                return a.getDetails().then(function() {
                    return a.get("groupEmail")
                })
            },
            getThisUserCanLeave: function() {
                var a = this;
                return a.getDetails().then(function() {
                    return a.get("thisUserCanLeave")
                })
            },
            getGroupMembers: function(a) {
                var b = this;
                return b.getDetails(a).then(function() {
                    return b.get("groupMembers")
                })
            },
            getPinnedContents: function() {
                var a = this;
                return a.getDetails().then(function() {
                    return a.get("pinnedContents")
                })
            },
            updateDescription: function(a) {
                var b = this
                  , d = {
                    method: "updateGroupDetails",
                    group_id: b.get("id"),
                    title: b.get("title"),
                    members_can_invite: b.get("membersCanInvite"),
                    description: a
                };
                return c.post("groups", d).then(function(c) {
                    return c.data && 1 === c.data.type && b.set({
                        description: a
                    }),
                    c.data
                })
            },
            pinPost: function(a) {
                var b, c = this;
                return b = c.get("pinnedContents") ? c.get("pinnedContents").slice() : [],
                b.push(a),
                c.updatePinnedContents(b).success(function(b, d) {
                    var e = c.get("pinnedContents") || [];
                    e.push(a),
                    c.set("pinnedContents", e),
                    c.trigger("Group:pinnedContentsUpdated")
                })
            },
            removePinnedPostAtIndex: function(a) {
                var b = this
                  , c = b.get("pinnedContents").slice().splice(a, 1);
                return b.updatePinnedContents(c).success(function(c, d) {
                    b.set("pinnedContents", b.get("pinnedContents").splice(a, 1))
                })
            },
            updatePinnedContents: function(a) {
                var b = this
                  , d = {
                    method: "updatePinnedContents",
                    group_id: b.get("id"),
                    pinned_contents: a
                };
                return c.post("groups", d).success(function(a, b) {})
            },
            pinContentToGroup: function(a) {
                var b = this
                  , d = {
                    method: "addPinnedContent",
                    group_id: b.get("id"),
                    pinned_content: a
                };
                return c.post("groups", d).success(function(a, c) {
                    var d = b.get("pinnedContents") || [];
                    d.push(a.data),
                    b.set("pinnedContents", d),
                    b.trigger("Group:pinnedContentsUpdated")
                })
            },
            unpinContentFromGroup: function(a) {
                var b = this
                  , d = {
                    method: "removePinnedContent",
                    group_id: b.get("id"),
                    pinned_content_id: a
                };
                return c.post("groups", d).success(function(c, d) {
                    if (c.type) {
                        var e = b.get("pinnedContents").map(function(a) {
                            return a.id
                        }).indexOf(a);
                        b.get("pinnedContents").splice(e, 1)
                    }
                })
            },
            editPinnedContentInGroup: function(a, b) {
                var d = this
                  , e = {
                    method: "editPinnedContent",
                    group_id: d.get("id"),
                    pinned_content_id: a,
                    pinned_content: b
                };
                return c.post("groups", e).success(function(b, c) {
                    if (b.type) {
                        var e = _.find(d.get("pinnedContents"), function(b) {
                            return b.id == a ? !0 : void 0
                        });
                        "WEB" == b.data.type ? (e.id = b.data.id,
                        e.resource_name = b.data.resource_name,
                        e.url = b.data.url,
                        e.type = b.data.type) : "SCRYBE" == b.data.type && (e.id = b.data.id,
                        e.resource_name = b.data.resource_name,
                        e.url = b.data.url,
                        e.type = b.data.type,
                        e.resource_id = b.data.resource_id,
                        e.app_instance_id = b.data.app_instance_id,
                        e.resource_type = b.data.resource_type)
                    }
                })
            },
            getGroupJoinReqs: function() {
                var a, b = this, d = {
                    method: "getGroupJoinRequests",
                    group_id: b.get("id")
                };
                return c.post("groups", d).success(function(c, d) {
                    if (c.type && c.data) {
                        a = _.toArray(c.data);
                        for (var e = _.keys(c.data), f = 0; f < a.length; f++)
                            _.extend(a[f], {
                                user_id: e[f]
                            })
                    }
                    b.set("groupJoinReqs", a)
                })
            },
            updateGroupJoinReqStatus: function(a, b, e) {
                var f, g = this, h = {
                    method: "updateGroupJoinRequestStatus",
                    group_id: g.get("id"),
                    group_join_req_id: a,
                    status: b
                }, i = {};
                return c.post("groups", h).success(function(c, h) {
                    if (c.type) {
                        var j = _.find(g.get("groupJoinReqs"), function(b) {
                            return b.group_join_req_id == a ? !0 : void 0
                        });
                        g.get("groupJoinReqs").splice(_.indexOf(g.get("groupJoinReqs"), j), 1),
                        "ACCEPTED" == b && (i.user_id = e.user_id,
                        i.user_email_id = e.email,
                        f = e.name.split(" "),
                        i.first_name = f[0],
                        i.last_name = f.length > 1 ? f[f.length - 1] : "",
                        i.user_role = "USER",
                        i.user_status = "ACTIVE",
                        i.profile_image_type = e.profile_image_type,
                        i.profile_image_version = e.profile_image_version,
                        g.get("groupMembers").push(i),
                        d(g.get("groupMembers")),
                        g.trigger("Group:groupMembersUpdated"))
                    }
                })
            },
            inviteUserToGroupAgain: function(a) {
                var b = this
                  , d = {
                    method: "inviteUsers",
                    group_id: b.get("id"),
                    emails: a
                };
                return c.post("invite", d)
            },
            inviteUsersToGroup: function(a, b) {
                var e = this
                  , f = {
                    method: "inviteUsers",
                    group_id: e.get("id"),
                    emails: a
                };
                return b && (f.message = b),
                c.post("invite", f).success(function(a, b) {
                    var c = a.data.users_invited;
                    if (c && c.length) {
                        for (var f = e.get("groupMembers"), g = 0; g < c.length; g++) {
                            var h = _.pick(c[g].invitee_global_profile, "user_id", "first_name", "last_name", "profile_image_type", "profile_image_version");
                            if (!_.findWhere(f, {
                                user_id: h.user_id
                            })) {
                                if (h.user_email_id = c[g].invitee_global_profile.email,
                                "REQUESTED" == c[g].invitee_status_in_group) {
                                    h.user_status = "ACTIVE";
                                    var i = _.find(e.get("groupJoinReqs"), function(a) {
                                        return a.user_id == h.user_id ? !0 : void 0
                                    });
                                    e.get("groupJoinReqs").splice(_.indexOf(e.get("groupJoinReqs"), i), 1)
                                } else
                                    h.user_status = c[g].invitee_status_in_group;
                                h.user_role = "USER",
                                f.push(h)
                            }
                        }
                        d(f),
                        e.trigger("Group:groupMembersUpdated")
                    }
                })
            },
            resetUnreadCount: function() {
                this.set("unreadCount", 0)
            },
            removeMemberFromGroup: function(a) {
                var b = this
                  , d = {
                    groupId: b.get("id"),
                    userId: a,
                    method: "removeUserFromGroup"
                };
                return c.post("groups", d).success(function(c, d) {
                    if (c.type) {
                        var e = _.find(b.get("groupMembers"), function(b) {
                            return b.user_id == a ? !0 : void 0
                        })
                          , f = _.indexOf(b.get("groupMembers"), e);
                        if (f >= 0 && (b.get("groupMembers").splice(f, 1),
                        b.trigger("Group:groupMembersUpdated")),
                        "ADMINISTRATOR" == e.user_role) {
                            var g = _.find(b.get("groupAdmins"), function(b) {
                                return b.user_id == a ? !0 : void 0
                            })
                              , h = _.indexOf(b.get("groupAdmins"), g);
                            h >= 0 && (b.get("groupAdmins").splice(h, 1),
                            b.trigger("Group:groupAdminsUpdated"))
                        }
                    }
                })
            },
            makeMemberAsGroupAdmin: function(a) {
                var b = this
                  , d = {
                    method: "makeUserGroupAdmin",
                    group_id: b.get("id"),
                    user_id: a
                };
                return c.post("groups", d).success(function(c, d) {
                    if (c.type) {
                        var e = _.find(b.get("groupMembers"), function(b) {
                            return b.user_id == a ? !0 : void 0
                        });
                        if (e) {
                            e.user_role = "ADMINISTRATOR";
                            var f = _.where(b.get("groupAdmins"), {
                                user_id: e.user_id
                            });
                            f.length || (b.get("groupAdmins").push(_.extend({}, e)),
                            b.trigger("Group:groupAdminsUpdated"))
                        }
                    }
                })
            },
            revokeGroupAdminPrivileges: function(a) {
                var b = this
                  , d = {
                    method: "revokeAdminPrivileges",
                    group_id: b.get("id"),
                    user_id: a
                };
                return c.post("groups", d).success(function(c, d) {
                    if (c.type) {
                        var e = _.find(b.get("groupMembers"), function(b) {
                            return b.user_id == a ? !0 : void 0
                        });
                        e && (e.user_role = "USER");
                        var f = _.find(b.get("groupAdmins"), function(b) {
                            return b.user_id == a ? !0 : void 0
                        })
                          , g = _.indexOf(b.get("groupAdmins"), f);
                        g >= 0 && (b.get("groupAdmins").splice(g, 1),
                        b.trigger("Group:groupAdminsUpdated"))
                    }
                })
            },
            hideFromFeedForThisUser: function(a) {
                var b = {
                    method: "updateGroupDetails",
                    group_id: this.get("id"),
                    hide_from_feed_for_this_user: a
                };
                return c.post("groups", b)
            },
            setIsHidden: function(a) {
                var b = this;
                b.set("isHidden", a)
            },
            getNotificationSettings: function() {
                var a = this;
                return a.getDetails().then(function() {
                    return a.get("notificationSettings")
                })
            },
            isGroupAdmin: function(a) {
                var b = this
                  , c = _.where(b.get("groupAdmins"), {
                    user_id: a
                });
                return c.length > 0
            },
            isThisUserIsTheOnlyGroupAdmin: function(a) {
                var b = this;
                return b.get("groupAdmins") && 1 == b.get("groupAdmins").length && b.get("groupAdmins")[0].user_id == a
            },
            isNonMemberPrivateGroup: function() {
                return !this.get("isMember") && ("PRIVATE" === this.get("access") || "SECRET" === this.get("access"))
            },
            isNonMemberPublicGroup: function() {
                return "PUBLIC" === this.get("access") && !this.get("isMember")
            }
        });
        return h
    }
    ]),
    b.module("convoApp").directive("cnvJoinedBtn", [function() {
        return {
            restrict: "E",
            scope: !1,
            templateUrl: "groups/groupActionBtns/templates/cnvJoinedBtn.tpl.html",
            link: function(a, b, c) {
                $(b).on("mouseenter", function() {
                    a.showBtn = "leave",
                    a.$broadcast("render")
                }),
                $(b).on("mouseleave", function() {
                    a.showBtn = "joined",
                    a.$broadcast("render")
                })
            },
            controller: ["$scope", function(a) {
                a.showBtn = "joined",
                a.$broadcast("render")
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvGroupSettings", ["profilePicService", "awsService", function(c, d) {
        return {
            restrict: "E",
            scope: !1,
            templateUrl: "groups/groupSettings/templates/cnvGroupSettings.tpl.html",
            link: function(b, c, d) {
                var e = function() {
                    Math.ceil($(a).scrollTop()) + $(a).height() >= $(document).height() ? b.selectedView == b.MEMBERS_VIEW ? (b.searchGrpMemCtrl.inSearchMode ? b.searchGrpMemCtrl.filteredMembers.length > b.lazyLoadMembersShowLimit + b.lazyLoadLimit && (b.lazyLoadMembersShowLimit += b.lazyLoadLimit) : b.groupMembers.length > b.lazyLoadMembersShowLimit + b.lazyLoadLimit && (b.lazyLoadMembersShowLimit += b.lazyLoadLimit),
                    b.$broadcast("render:boRepeat:GroupSettingsList"),
                    b.$broadcast("render")) : b.selectedView == b.REQUESTS_VIEW && (b.groupJoinReqs.length > b.lazyLoadMembersShowLimit + b.lazyLoadLimit && (b.lazyLoadMembersShowLimit += b.lazyLoadLimit),
                    b.$broadcast("render:boRepeat:GroupSettingsList"),
                    b.$broadcast("render")) : 0 == $(a).scrollTop() && (b.selectedView == b.MEMBERS_VIEW ? (b.searchGrpMemCtrl.inSearchMode ? b.searchGrpMemCtrl.filteredMembers.length > b.lazyLoadLimit && (b.lazyLoadMembersShowLimit = b.lazyLoadLimit) : b.groupMembers.length > b.lazyLoadLimit && (b.lazyLoadMembersShowLimit = b.lazyLoadLimit),
                    b.$broadcast("render:boRepeat:GroupSettingsList"),
                    b.$broadcast("render")) : b.selectedView == b.REQUESTS_VIEW && (b.groupJoinReqs.length > b.lazyLoadLimit && (b.lazyLoadMembersShowLimit = b.lazyLoadLimit),
                    b.$broadcast("render:boRepeat:GroupSettingsList"),
                    b.$broadcast("render")))
                }
                ;
                $(a).on("scroll", e),
                b.$on("$destroy", function() {
                    $(a).off("scroll", e)
                }),
                b.animateToGroupTitleField = function() {
                    setTimeout(function() {
                        $("body").animate({
                            scrollTop: 0
                        }, 1e3)
                    }, 0)
                }
            },
            controller: ["$scope", "Groups", "Users", "Group", "userInfo", "usersGroupsListProvider", "User", "$q", "alertsService", "config", "utils", "AppLinks", "bannerService", "webhooksService", "accountInfo", "$location", "$window", "$anchorScroll", "bannerService", "twitterService", "gmailService", "gdriveService", "dropboxService", "boxService", "facebookService", "mixpanelService", "o365Service", "gcalService", function(c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, o, u, v, w, x, y, z, A, B, C) {
                function D() {
                    c.pinnedContentsToShow > c.pinnedContentLimit && (c.pinnedContentsToShow = c.grpSettingsExProperts.pinnedContent.length)
                }
                function E(a, b, d) {
                    var e, f, h, i;
                    "enable" == b ? (e = gb,
                    f = hb,
                    h = ib,
                    i = jb) : "disable" == b && (e = cb,
                    f = db,
                    h = eb,
                    i = fb),
                    c.$broadcast("render"),
                    k.promptModal(e, f, function() {
                        var d = p.disableIntegration(a, b, g.getUserId());
                        d.then(function(a) {
                            for (var b = 0; b < c.groupIntegrations.length; b++)
                                if (c.groupIntegrations[b].webhook_id == a.webhookID) {
                                    var d = c.groupIntegrations[b].status;
                                    c.groupIntegrations[b].status = "INACTIVE" == d ? "ACTIVE" : "INACTIVE",
                                    c.groupIntegrations[b].modified_by = a.modified_by,
                                    c.groupIntegrations[b].modified_desc = a.modified_desc;
                                    break
                                }
                            c.$broadcast("render")
                        })
                    }, null , h, i, null , !0)
                }
                function F() {
                    console.log("settings app activated")
                }
                function G() {
                    console.log("settings app deactivated")
                }
                function H(a) {
                    return console.log("group settings app okToClose() called"),
                    c.isAnySettingUpdated() && !c.navigateAwayForcefully ? {
                        promptMessage: wa.replace("[groupName]", c.group.get("title")),
                        promptTitle: va,
                        promptOkBtnLabel: xa,
                        promptCancelBtnLabel: ya,
                        promptOkCallback: function() {
                            c.updateGroupSettings()
                        },
                        promptCancelCallback: function() {
                            c.navigateAwayForcefully = !0,
                            c.closeTab()
                        },
                        onlyDismissModalOnCloseBtn: !0
                    } : void 0
                }
                function I() {
                    console.log("group settings app closing() called"),
                    d.off("groupModifiedByRemoteUser", fa),
                    d.off("usersInvitedToGroupByRemoteUser", ca),
                    d.off("userRemovedFromGroupByRemoteUser", da),
                    d.off("groupJoinReqStatusUpdatedByRemoteUser", ea),
                    c.group && (c.group.off("Group:groupMembersUpdated", O),
                    c.group.off("Group:groupAdminsUpdated", P))
                }
                function J(a) {
                    var b;
                    ma.resourceLink.resourcePath.hierarchy.length > 1 ? (b = ma.resourceLink.resourcePath.hierarchy[1].type,
                    "GroupSettings" === b ? c.toggleSelectedView(c.SETTINGS_VIEW) : "GroupMembers" === b ? c.toggleSelectedView(c.MEMBERS_VIEW) : "GroupRequests" === b ? c.toggleSelectedView(c.REQUESTS_VIEW) : "GroupIntegrations" === b && c.toggleSelectedView(c.INTEGRATIONS_VIEW)) : ma.resourceLink.view && "GroupRequests" == ma.resourceLink.view ? c.toggleSelectedView(c.REQUESTS_VIEW) : c.toggleSelectedView(c.SETTINGS_VIEW)
                }
                function K() {
                    L() ? k.promptModal(ra, sa, function() {
                        R(c.thisUserId, !0)
                    }, null , ua, Ca, null , !0) : c.group.get("is_admin") ? k.promptModal(ra, ta, function() {
                        R(c.thisUserId, !0)
                    }, null , ua, Ca, null , !0) : k.promptModal(ra, Oa, function() {
                        R(c.thisUserId, !0)
                    }, null , ua, Ca, null , !0)
                }
                function L() {
                    return 1 == c.groupSettings.groupAdmins.length && c.groupSettings.groupAdmins[0].user_id == c.thisUserId
                }
                function M(a) {
                    var b = _.find(c.groupMembers, function(b) {
                        return b.user_id == a ? !0 : void 0
                    });
                    k.promptModal(Da, Ea.replace("[username]", b.first_name + " " + b.last_name), function() {
                        d.revokeGroupAdminPrivileges(c.group, a).success(function(a, b) {
                            a.type && c.$broadcast("render")
                        })
                    }, null , Ba, Ca, null , !0)
                }
                function N(a) {
                    var b = _.find(c.groupMembers, function(b) {
                        return b.user_id == a ? !0 : void 0
                    });
                    k.promptModal(Ua, Va.replace("[username]", b.first_name + " " + b.last_name), function() {
                        d.makeMemberAsGroupAdmin(c.group, a).success(function(a, b) {
                            a.type && c.$broadcast("render")
                        })
                    }, null , Wa, Ca, null , !0)
                }
                function O() {
                    V(),
                    c.$broadcast("inviteTeammates:groupMembersUpdated"),
                    c.$broadcast("render:boRepeat:GroupSettingsList"),
                    c.$broadcast("render")
                }
                function P() {
                    W(),
                    c.$broadcast("render")
                }
                function Q(a) {
                    var b = _.find(c.groupMembers, function(b) {
                        return b.user_id == a ? !0 : void 0
                    });
                    k.promptModal(Pa, Qa.replace("[username]", b.first_name + " " + b.last_name), function() {
                        R(a)
                    }, null , Fa, Ca, null , !0)
                }
                function R(a, b) {
                    d.removeMemberFromGroup(c.group, a).success(function(a, d) {
                        a.type && (b || (c.searchGrpMemCtrl.filterGroupMembers(),
                        c.$broadcast("render:boRepeat:GroupSettingsList"),
                        c.$broadcast("render")))
                    })
                }
                function S(a) {
                    return c.group.getDetails(!0).then(function() {
                        if (c.groupSettings.title = c.group.get("title"),
                        c.groupSettings.description = c.group.get("description"),
                        c.groupSettings.access = c.group.get("access"),
                        c.groupSettings.type = c.group.get("type"),
                        c.groupMembers = c.group.get("groupMembers"),
                        c.groupSettings.groupAdmins = c.group.get("groupAdmins"),
                        c.grpSettingsExProperts.pinnedContent = c.group.get("pinnedContents"),
                        c.groupSettings.membersCanInvite = c.group.get("membersCanInvite"),
                        c.groupSettings.membersCanPinContent = c.group.get("membersCanPinContent"),
                        c.groupSettings.membersCanSetupIntegrations = c.group.get("membersCanSetupIntegrations"),
                        c.groupSettings.autoFollowEnabled = c.group.get("autoFollowEnabled"),
                        c.groupSettings.hideFromFeedForThisUser = c.group.get("hideFromFeedForThisUser"),
                        c.groupSettings.notificationSettings.desktop = c.group.get("notificationSettings").desktop,
                        c.groupSettings.notificationSettings.mobile = c.group.get("notificationSettings").mobile,
                        c.groupSettings.notificationSettings.in_app = c.group.get("notificationSettings").in_app,
                        c.groupSettings.notificationSettings.email = c.group.get("notificationSettings").email,
                        a ? (V(),
                        W(),
                        c.searchGrpMemCtrl.filterGroupMembers()) : (U(),
                        c.group.on("Group:groupMembersUpdated", O),
                        c.group.on("Group:groupAdminsUpdated", P)),
                        c.groupSettings.access == c.PRIVATE_GROUP_TYPE ? c.grpSettingsExProperts.listInDirectory = !0 : c.grpSettingsExProperts.listInDirectory = !1,
                        !c.isGroupAdminOrNetworkAdminMode() && c.selectedView === c.REQUESTS_VIEW && !c.groupSettings.membersCanInvite) {
                            var b = n.newResourceLink(c.tab.appInstanceId, [{
                                uid: c.group.get("id"),
                                type: "22"
                            }, {
                                uid: "2",
                                type: "GroupSettings"
                            }], null , c.group.get("title") + " (Settings)")
                              , d = n.linkToUrl(b, !0);
                            r.url(d.slice(1))
                        }
                        c.isGroupAdminOrNetworkAdminMode() || c.groupSettings.membersCanInvite ? T() : c.initialized || (c.initialized = !0,
                        J(!0)),
                        D(),
                        c.$broadcast("render:boRepeat:GroupSettingsList"),
                        c.$broadcast("render")
                    })
                }
                function T() {
                    c.group.getGroupJoinReqs().success(function(a, b) {
                        a.type && (c.groupJoinReqs = c.group.get("groupJoinReqs"),
                        c.initialized ? c.$broadcast("render") : (c.initialized = !0,
                        J(!0)))
                    })
                }
                function U() {
                    for (var a = 0; a < c.groupMembers.length; a++)
                        "ACTIVE" == c.groupMembers[a].user_status && (c.autoCompleteItems.push(h.createUserListItemForSpecificGroup(new i(c.groupMembers[a]))),
                        "ADMINISTRATOR" == c.groupMembers[a].user_role && c.groupAdmins.push(h.createUserListItemForSpecificGroup(new i(c.groupMembers[a]))))
                }
                function V() {
                    var a, b, d, e = _.pluck(c.groupMembers, "user_id"), f = _.pluck(c.autoCompleteItems, "id"), g = _.difference(e, f), j = _.difference(f, e);
                    for (a = 0; a < g.length; a++)
                        b = _.find(c.groupMembers, function(b) {
                            return b.user_id == g[a]
                        }),
                        "ACTIVE" == b.user_status && c.autoCompleteItems.push(h.createUserListItemForSpecificGroup(new i(b)));
                    for (a = 0; a < j.length; a++)
                        d = _.find(c.autoCompleteItems, function(b) {
                            return b.id == j[a]
                        }),
                        c.autoCompleteItems.splice(_.indexOf(c.autoCompleteItems, d), 1)
                }
                function W(a) {
                    var b, d, e, f, g = _.pluck(c.groupAdmins, "id"), j = _.pluck(c.groupSettings.groupAdmins, "user_id"), k = _.difference(j, g), l = _.difference(g, j);
                    for (b = 0; b < k.length; b++)
                        d = _.find(c.groupSettings.groupAdmins, function(a) {
                            return a.user_id == k[b] ? !0 : void 0
                        }),
                        c.groupAdmins.push(h.createUserListItemForSpecificGroup(new i(d)));
                    for (b = 0; b < l.length; b++)
                        e = _.find(c.groupAdmins, function(a) {
                            return a.id == l[b] ? !0 : void 0
                        }),
                        f = _.indexOf(c.groupAdmins, e),
                        f >= 0 && c.groupAdmins.splice(f, 1)
                }
                function X() {
                    d.getGroup_promise(oa).then(function(a) {
                        a || c.closeTab(),
                        c.group = a,
                        c.invtTeammtCtrl.group = c.group,
                        c.vcfUrl = l.REST_URL + "groups?method=getvcf&group_id=" + c.group.get("id"),
                        S()
                    })
                }
                function Y(a) {
                    var b;
                    return b = 1 == a.length ? Ga.replace("[email]", a[0].invitee_global_profile.email) : 2 == a.length ? Ha.replace("[email1]", a[0].invitee_global_profile.email).replace("[email2]", a[1].invitee_global_profile.email) : Ia.replace("[email1]", a[0].invitee_global_profile.email).replace("[email2]", a[1].invitee_global_profile.email).replace("[count]", a.length - 2)
                }
                function Z(a) {
                    var b;
                    return b = 1 == a.length ? a[0].error_message ? a[0].error_message : Ja.replace("[email]", a[0].invitee_email) : 2 == a.length ? Ka.replace("[email1]", a[0].invitee_email).replace("[email2]", a[1].invitee_email) : La.replace("[email1]", a[0].invitee_email).replace("[email2]", a[1].invitee_email).replace("[count]", a.length - 2)
                }
                function $(a) {
                    o.showBanner(Y(a), !1, !1)
                }
                function aa(a) {
                    o.showBanner(Z(a), !1, !1)
                }
                function ba(a, b) {
                    var c = {
                        inviteSuccessEmails: function() {
                            return a
                        },
                        inviteFailEmails: function() {
                            return b
                        }
                    };
                    k.customModal(Xa, Ya, c, Za)
                }
                function ca(a) {
                    c.group && c.group.get("id") == a && (S(!0),
                    c.$broadcast("inviteTeammates:groupMembersUpdated"))
                }
                function da(a) {
                    c.group && c.group.get("id") == a && (S(!0).then(function(a) {}, function(a) {
                        404 == a.errorCode && r.path("/feed").search({}).hash("title=My Feed")
                    }),
                    c.$broadcast("inviteTeammates:groupMembersUpdated"))
                }
                function ea(a) {
                    c.group && c.group.get("id") == a && T()
                }
                function fa(a) {
                    var b = a.groupId;
                    !c.group || c.group.get("id") != b || kb || a.change && "reqToJoinGroup" === a.change && !c.canThisUserAcceptGroupJoinRequests() || (k.alertModal(Ma, Na, Ba, function() {
                        S(!0),
                        kb = !1
                    }, !0, !0),
                    kb = !0)
                }
                function ga() {
                    c.selectedDefaultIcon = "direct.png",
                    promise = p.getIntegrationsByRecipients(g.getUserId(), oa, q.getAccountId()),
                    c.groupIntegrations = [],
                    promise.then(function(a) {
                        var b = [];
                        c.dropdownCtrl = {},
                        c.dropdownCtrl.options = [],
                        c.dropdownCtrl.options.push({
                            label: "Manage this integration",
                            callback: ka
                        }),
                        c.dropdownCtrl.options.push({
                            isDivider: !0
                        }),
                        c.dropdownCtrl.options.push({
                            label: "Remove this integration",
                            callback: la
                        }),
                        c.dropdownCtrlAdmin = {},
                        c.dropdownCtrlAdmin.options = [],
                        c.dropdownCtrlAdmin.options.push({
                            label: "Remove this integration",
                            callback: la
                        });
                        for (var d = 0; d < a.length; d++)
                            a[d].integration_id = a[d].webhook_id,
                            b.push(a[d]);
                        c.groupIntegrations = b,
                        c.renderGroupIntegrations && (c.renderGroupIntegrations = !1,
                        c.initialized = !0,
                        c.$broadcast("render")),
                        ob && (clearInterval(ob),
                        ob = null ,
                        pb = 0),
                        a && a.length > 0 && (ob = setInterval(ja, 2e3, a[0].integration_id, a[0].profile_image_version)),
                        c.$broadcast("render")
                    })
                }
                function ha(a, b) {
                    for (var c = [], d = 0; d < a.length; d++)
                        (null  != a[d].display_name.match(b) || null  != a[d].description.match(b) || a[d].modified_desc && null  != a[d].modified_desc.match(b)) && c.push(a[d]);
                    return c
                }
                function ia() {
                    c.isFilteredView = !1,
                    X(),
                    ga()
                }
                function ja(a, d) {
                    return pb > 5 ? (pb = 0,
                    clearInterval(ob),
                    !1) : (pb++,
                    promise = p.getIntegrationDetails(a),
                    void promise.then(function(e) {
                        if (e.profile_image_version != d) {
                            clearInterval(ob);
                            for (var f = 0; f < c.groupIntegrations.length; f++)
                                if (c.groupIntegrations[f].integration_id == a) {
                                    var g = b.copy(c.groupIntegrations[f]);
                                    g.profile_image_type = e.profile_image_type,
                                    g.profile_image_version = e.profile_image_version,
                                    c.groupIntegrations[f] = g,
                                    c.$broadcast("render");
                                    break
                                }
                        }
                    }))
                }
                function ka(a, b) {
                    c.manageIntegration(a.integration_type, a)
                }
                function la(a, b) {
                    k.promptModal($a, _a, function() {
                        c.deleteIntegration(a.webhook_id, a.integration_type, a.zap_source)
                    }, null , ab, bb, null , !0)
                }
                c.IS_WINDOWS = l.IS_WINDOWS;
                var ma = c.tab
                  , na = ma.appContCtrl.appCtrl
                  , oa = ma.resourceId
                  , pa = "home/groupView/rightPanelWidgets/cnvAddPinContentModal.tpl.html"
                  , qa = "cnvAddPinContentModalCtrl"
                  , ra = "Leave Group"
                  , sa = "Are you sure you want to leave this group? As the only group administrator, if you leave no one will be authorized to manage this group."
                  , ta = "You are an admin of this group. Are you sure you want to leave it?"
                  , ua = "Leave group"
                  , va = "Save Settings"
                  , wa = 'You\'ve made some changes to the "[groupName]" group. Are you sure you want to leave without saving them?'
                  , xa = "Save changes"
                  , ya = "Leave this page"
                  , za = "Remove Group Admin"
                  , Aa = "As the only group administrator, if you remove [yourself/Member] as a group admin no one will be authorized to manage this group."
                  , Ba = "OK"
                  , Ca = "Cancel"
                  , Da = "Remove as group admin"
                  , Ea = 'You\'re about to remove "[username]" as group admin.'
                  , Fa = "Remove"
                  , Ga = "Your invitation has been sent to <b>[email]</b>."
                  , Ha = "Your invitation to <b>[email1]</b> and <b>[email2]</b> has been sent."
                  , Ia = "Your invitation to <b>[email1]</b> and <b>[email2]</b> and <b>[count] others</b> has been sent."
                  , Ja = "Your invitation has not been sent to <b>[email]</b>."
                  , Ka = "Your invitation to <b>[email1]</b> and <b>[email2]</b> has not been sent."
                  , La = "Your invitation to <b>[email1]</b> and <b>[email2]</b> and <b>[count] others</b> has not been sent."
                  , Ma = "Group Settings"
                  , Na = "This group has been modified by another user. Your view will refresh to reflect the changes."
                  , Oa = "Are you sure you want to leave this group?"
                  , Pa = "Remove"
                  , Qa = 'Are you sure you want to remove "[username]"?'
                  , Ra = "Delete group"
                  , Sa = '<b>There is no undo for this action.</b><br/><br/>Are you sure you want to delete the "[groupname]" group and all content shared with this group? Deleting this group will remove all members from the group, and remove the group from the directory.<br/><br/>Posts that are shared with this group and also shared with any other group or person will continue to remain available.'
                  , Ta = "Delete"
                  , Ua = "Add group admin"
                  , Va = 'As a group admin, "[username]" will be able to edit group settings, remove members and give other members admin status.'
                  , Wa = "Make admin"
                  , Xa = "components/groupInvtStatusDialog/templates/groupInvtStatusDialog.tpl.html"
                  , Ya = "groupInvtStatusDialogCtrl"
                  , Za = "invt-status-modal"
                  , $a = "Remove Integration"
                  , _a = "Are you sure you want to remove this integration?"
                  , ab = "Remove Integration"
                  , bb = "Cancel"
                  , cb = "Disable Integration"
                  , db = "Are you sure you want to disable this integration?"
                  , eb = "Ok"
                  , fb = "Cancel"
                  , gb = "Enable Integration"
                  , hb = "Are you sure you want to re-enable this integration?"
                  , ib = "Ok"
                  , jb = "Cancel"
                  , kb = !1
                  , lb = "Your settings have been saved."
                  , mb = "Unable to save your group settings, please try again.";
                d.on("groupModifiedByRemoteUser", fa),
                d.on("usersInvitedToGroupByRemoteUser", ca),
                d.on("userRemovedFromGroupByRemoteUser", da),
                d.on("groupJoinReqStatusUpdatedByRemoteUser", ea),
                c.thisUserRole = g.userRole,
                na.activated = F,
                na.deactivated = G,
                na.okToClose = H,
                na.closing = I,
                na.navigate = J,
                na.initialized = !0,
                c.SETTINGS_VIEW = "settings",
                c.MEMBERS_VIEW = "members",
                c.REQUESTS_VIEW = "requests",
                c.INTEGRATIONS_VIEW = "integrations",
                c.PUBLIC_GROUP_TYPE = "PUBLIC",
                c.PRIVATE_GROUP_TYPE = "PRIVATE",
                c.SECRET_GROUP_TYPE = "SECRET",
                c.groupSettings = {},
                c.groupSettings.notificationSettings = {},
                c.grpSettingsExProperts = {},
                c.thisUserId = g.user_id,
                c.groupAdmins = [],
                c.autoCompleteItems = [],
                c.addedAdminIds = [],
                c.removedAdminIds = [],
                c.pinnedContentLimit = 5,
                c.pinnedContentsToShow = c.pinnedContentLimit,
                c.lazyLoadLimit = 20,
                c.lazyLoadMembersShowLimit = 20,
                c.isUpdatingGrpSettings = !1,
                c.navigateAwayForcefully = !1,
                c.invtTeammtCtrl = {},
                c.invtTeammtCtrl.inviteTeammates = function(a, b) {
                    d.inviteUsersToGroupRTC(c.group, a, b).success(function(a, b) {
                        if (a.type) {
                            var d = a.data.users_invited
                              , e = a.data.users_not_invited;
                            a.data.users_inivites_already_pending,
                            a.data.users_invites_pending;
                            d.length && e.length ? ba(d, e) : d.length ? $(d) : e.length && aa(e),
                            c.groupMembers = c.group.get("groupMembers"),
                            c.$broadcast("render")
                        }
                    })
                }
                ,
                c.invtTeammtCtrl.filterContacts = function(a) {
                    for (var b, d = [], e = 0; e < a.length; e++)
                        b = _.where(c.groupMembers, {
                            user_email_id: a[e].email
                        }),
                        0 == b.length && (a[e].isChecked = !0,
                        d.push(a[e]));
                    return d
                }
                ,
                c.invtTeammtCtrl.getAutoCompleteUserItem = function() {
                    var a, b = [];
                    return e.getPublishableUsers().then(function(d) {
                        for (var e = 0; e < d.length; e++)
                            isActiveMember = _.where(c.groupMembers, {
                                user_id: d.models[e].id
                            }),
                            isActiveMember.length || (a = _.extend({}, d.models[e].toJSON()),
                            a.user_email_id = d.models[e].get("email"),
                            b.push(h.createUserListItemForSpecificGroup(new i(a))));
                        return b
                    })
                }
                ,
                c.invtTeammtCtrl.noContactMessage = "The teammates you're trying to invite are already added to this group.",
                c.invtTeammtCtrl.initialized = !0,
                c.form = {},
                c.shareWith = [],
                c.renderGroupIntegrations = !1;
                var nb = a.IS_NATIVE_MENULET ? 3 : 5;
                c.file = null ;
                var ob = null 
                  , pb = 0;
                c.searchGrpMemCtrl = {},
                c.searchGrpIntegrationCtrl = {},
                c.searchGrpMemCtrl.filteredMembers = [],
                c.searchGrpMemCtrl.searchFragment,
                c.searchGrpIntegrationCtrl.searchFragment,
                c.searchGrpMemCtrl.inSearchMode = !1,
                c.searchGrpIntegrationCtrl.inSearchMode = !1,
                c.searchGrpMemCtrl.filterGroupMembers = function() {
                    if (c.searchGrpMemCtrl.searchFragment && c.searchGrpMemCtrl.searchFragment.length) {
                        var a, b, d, e, f = c.groupMembers;
                        c.searchGrpMemCtrl.inSearchMode || (c.searchGrpMemCtrl.inSearchMode = !0,
                        c.$broadcast("render")),
                        c.searchGrpMemCtrl.filteredMembers = [];
                        for (var g = 0; g < f.length; g++)
                            d = f[g].first_name + " " + f[g].last_name,
                            e = f[g].user_email_id,
                            a = m.getUserGroupSearchRegex(c.searchGrpMemCtrl.searchFragment),
                            b = m.getUserGroupSearchRegex(c.searchGrpMemCtrl.searchFragment),
                            (a.test(d) || b.test(e)) && c.searchGrpMemCtrl.filteredMembers.push(f[g])
                    } else
                        c.searchGrpMemCtrl.inSearchMode = !1;
                    c.$broadcast("render:boRepeat:GroupSettingsList"),
                    c.$broadcast("render")
                }
                ,
                c.searchGrpIntegrationCtrl.filterGroupIntegrations = function() {
                    if (c.searchGrpIntegrationCtrl.searchFragment && c.searchGrpIntegrationCtrl.searchFragment.length) {
                        var a = m.getUserGroupSearchRegex(c.searchGrpIntegrationCtrl.searchFragment);
                        c.filteredGroupIntegrations = ha(c.groupIntegrations, a),
                        c.searchGrpIntegrationCtrl.inSearchMode || (c.searchGrpIntegrationCtrl.inSearchMode = !0),
                        c.$broadcast("render")
                    } else
                        c.searchGrpIntegrationCtrl.inSearchMode = !1,
                        c.$broadcast("render")
                }
                ,
                c.searchGrpMemCtrl.debouncedFiltering = _.debounce(c.searchGrpMemCtrl.filterGroupMembers, 20),
                c.searchGrpMemCtrl.onSearchFragmentChanged = function() {
                    c.searchGrpMemCtrl.debouncedFiltering()
                }
                ,
                c.toggleGroupType = function(a) {
                    !c.isGroupAdminOrNetworkAdminMode() || c.isUpdatingGrpSettings || a == c.groupSettings.access || c.isAccountAnnouncementsGroup() || (c.grpSettingsExProperts.listInDirectory || a != c.PRIVATE_GROUP_TYPE ? c.groupSettings.access = a : c.groupSettings.access = c.SECRET_GROUP_TYPE,
                    c.$broadcast("render"))
                }
                ,
                c.onToggleListInDirectory = function() {
                    c.grpSettingsExProperts.listInDirectory ? c.groupSettings.access = c.PRIVATE_GROUP_TYPE : c.grpSettingsExProperts.listInDirectory || (c.groupSettings.access = c.SECRET_GROUP_TYPE)
                }
                ,
                c.toggleSelectedView = function(a) {
                    return c.selectedView == a ? (c.$broadcast("render:boRepeat:GroupSettingsList"),
                    void c.$broadcast("render")) : (a == c.MEMBERS_VIEW || a == c.REQUESTS_VIEW ? c.lazyLoadMembersShowLimit = c.lazyLoadLimit : a == c.INTEGRATIONS_VIEW && (c.manageIntegrationState = "Add a new ",
                    c.addIntegrationView = !1,
                    c.isUpdatingWebhook = !1),
                    c.selectedView = a,
                    c.$broadcast("render:boRepeat:GroupSettingsList"),
                    void c.$broadcast("render"))
                }
                ,
                c.selfMemDrpDwnCtrl = {},
                c.selfMemDrpDwnCtrl.align = "right",
                c.selfMemDrpDwnCtrl.options = [],
                c.selfMemDrpDwnCtrl.options.push({
                    label: "Leave group",
                    callback: K
                }),
                c.memDrpDwnCtrl = {},
                c.memDrpDwnCtrl.align = "right",
                c.memDrpDwnCtrl.options = [],
                c.memDrpDwnCtrl.options.push({
                    label: "Remove from group",
                    callback: Q
                }),
                c.mkAdmRmMemDrpDwnCtrl = {},
                c.mkAdmRmMemDrpDwnCtrl.align = "right",
                c.mkAdmRmMemDrpDwnCtrl.options = [],
                c.mkAdmRmMemDrpDwnCtrl.options.push({
                    label: "Make group admin",
                    callback: N
                }),
                c.mkAdmRmMemDrpDwnCtrl.options.push({
                    label: "Remove from group",
                    callback: Q
                }),
                c.rmAdmRmMemDrpDwnCtrl = {},
                c.rmAdmRmMemDrpDwnCtrl.align = "right",
                c.rmAdmRmMemDrpDwnCtrl.options = [],
                c.rmAdmRmMemDrpDwnCtrl.options.push({
                    label: "Remove as group admin",
                    callback: M
                }),
                c.rmAdmRmMemDrpDwnCtrl.options.push({
                    label: "Remove from group",
                    callback: Q
                }),
                c.updateGroupSettings = function() {
                    var a = _.pick(c.groupSettings, function(a, b, d) {
                        return "notificationSettings" == b ? _.keys(_.pick(d[b], function(a, d, e) {
                            return e[d] != c.group.get(b)[d] ? !0 : void 0
                        })).length > 0 : d[b] != c.group.get(b) ? !0 : void 0
                    });
                    if (c.addedAdminIds.length > 0 && (a.addedAdminIds = c.addedAdminIds),
                    c.removedAdminIds.length > 0 && (a.removedAdminIds = c.removedAdminIds),
                    c.isRenamedGroupTitleAlreadyExists && (c.isRenamedGroupTitleAlreadyExists = !1),
                    c.isGroupTitleEmpty && (c.isGroupTitleEmpty = !1),
                    a.hasOwnProperty("title") && a.title.length)
                        d.getGroupInfo(a.title).success(function(b, e) {
                            for (var f = b.data, g = 0; f && g < f.length; g++)
                                if ("ACTIVE" === f[g].status)
                                    return c.isRenamedGroupTitleAlreadyExists = !0,
                                    c.$broadcast("render"),
                                    void c.animateToGroupTitleField();
                            c.isUpdatingGrpSettings = !0,
                            c.$broadcast("render"),
                            d.updateGroupDetails(c.group, a).success(function(a, b) {
                                a.type ? (c.addedAdminIds = [],
                                c.removedAdminIds = [],
                                o.showBanner(lb, !1, !1)) : o.showBanner(mb, !1, !1),
                                c.isUpdatingGrpSettings = !1,
                                c.$broadcast("render")
                            }).error(function(a, b) {
                                c.isUpdatingGrpSettings = !1,
                                c.$broadcast("render")
                            })
                        });
                    else if (_.keys(a).length > 0) {
                        if (a.hasOwnProperty("title") && 0 == a.title.length)
                            return c.isGroupTitleEmpty = !0,
                            c.$broadcast("render"),
                            void c.animateToGroupTitleField();
                        c.isUpdatingGrpSettings = !0,
                        c.$broadcast("render"),
                        d.updateGroupDetails(c.group, a).success(function(a, b) {
                            a.type ? (c.addedAdminIds = [],
                            c.removedAdminIds = [],
                            o.showBanner(lb, !1, !1)) : o.showBanner(mb, !1, !1),
                            c.isUpdatingGrpSettings = !1,
                            c.$broadcast("render")
                        }).error(function(a, b) {
                            c.isUpdatingGrpSettings = !1,
                            c.$broadcast("render")
                        })
                    }
                }
                ,
                c.isAnySettingUpdated = function() {
                    return c.selectedView != c.SETTINGS_VIEW ? !1 : _.keys(_.pick(c.groupSettings, function(a, b, d) {
                        if ("notificationSettings" == b)
                            return _.keys(_.pick(d[b], function(a, d, e) {
                                return e[d] != c.group.get(b)[d] ? !0 : void 0
                            })).length > 0;
                        if ("groupAdmins" == b) {
                            var e = _.pluck(c.groupAdmins, "id")
                              , f = _.pluck(c.groupSettings.groupAdmins, "user_id");
                            return c.addedAdminIds = _.difference(e, f),
                            c.removedAdminIds = _.difference(f, e),
                            c.addedAdminIds.length > 0 || c.removedAdminIds.length > 0
                        }
                        return d[b] != c.group.get(b) ? !0 : void 0
                    })).length > 0
                }
                ,
                c.removePinnedContent = function(a) {
                    d.unpinContentFromGroup(c.group, a).success(function(a, b) {
                        a.type && c.$broadcast("render")
                    })
                }
                ,
                c.editPinnedContent = function(a) {
                    var b = _.find(c.grpSettingsExProperts.pinnedContent, function(b) {
                        return b.id == a ? !0 : void 0
                    })
                      , e = {
                        resource_name: function() {
                            return b.resource_name
                        },
                        resource_url: function() {
                            if ("SCRYBE" == b.type) {
                                var a = n.newResourceLink(b.app_instance_id, [{
                                    type: b.resource_type,
                                    uid: b.resource_id
                                }], null , b.resource_name)
                                  , c = n.linkToUrl(a, !0).slice(1);
                                return l.CONVO_LINKS_BASE_URL + c
                            }
                            return b.url
                        },
                        provided_desc: function() {
                            return "Paste a link to a Convo post or an external website to pin it to the top of the group."
                        },
                        title: function() {
                            return null 
                        },
                        btnTitle: function() {
                            return !1
                        },
                        source: function() {
                            return "no_suggestion"
                        }
                    }
                      , f = k.customModal(pa, qa, e);
                    f.result.then(function(a) {
                        var e = _.pick(a, "url", "type", "app_instance_id", "resource_name", "resource_id", "resource_type");
                        d.editPinnedContentInGroup(c.group, b.id, e).success(function(a, b) {
                            a.type && c.$broadcast("render")
                        })
                    })
                }
                ,
                c.getGroupMembersDropDownItems = function(a, b) {
                    var d = j.defer();
                    return d.resolve(h.queryCustomList(c.autoCompleteItems, a, b + 4)),
                    d.promise
                }
                ,
                c.onEscKeyPressInToField = function() {
                    console.log("onEscKeyPressInToField")
                }
                ,
                c.onItemAddedInToAdminField = function(a) {
                    k.promptModal(Ua, Va.replace("[username]", a.formattedlabel), function() {}, function() {
                        c.groupAdmins.splice(_.indexOf(c.groupAdmins, a), 1)
                    }, Wa, Ca, null , !0),
                    console.log("onItemAddedInToField")
                }
                ,
                c.onItemRemovedFromToAdminField = function(a) {
                    0 == c.groupAdmins.length ? k.promptModal(za, a.id == c.thisUserId ? Aa.replace("[yourself/Member]", "yourself") : Aa.replace("[yourself/Member]", "this member"), function() {}, function() {
                        c.groupAdmins.push(a)
                    }, Ba, Ca, null , !0) : k.promptModal(Da, a.id == c.thisUserId ? Ea.replace("[username]", "yourself") : Ea.replace("[username]", a.formattedlabel), function() {}, function() {
                        c.groupAdmins.push(a)
                    }, Ba, Ca, null , !0)
                }
                ,
                c.updateGroupJoinReqStatus = function(a, b, e) {
                    d.updateGroupJoinReqStatus(c.group, a, b, e).success(function(a, b) {
                        a.type && c.$broadcast("render");
                    })
                }
                ,
                c.openPinnedContentModal = function() {
                    var a = {
                        resource_name: function() {
                            return ""
                        },
                        resource_url: function() {
                            return ""
                        },
                        provided_desc: function() {
                            return "Paste a link to a Convo post or an external website to pin it to the top of the group."
                        },
                        title: function() {
                            return null 
                        },
                        btnTitle: function() {
                            return !1
                        },
                        source: function() {
                            return "no_suggestion"
                        }
                    }
                      , b = k.customModal(pa, qa, a);
                    b.result.then(function(a) {
                        d.pinContentToGroup(c.group, a).success(function(a, b) {
                            a.type && (D(),
                            c.$broadcast("render"))
                        })
                    })
                }
                ,
                c.isGrpAdmin = function(a) {
                    return _.keys(_.find(c.groupSettings.groupAdmins, function(b) {
                        return b.user_id == a ? !0 : void 0
                    })).length > 0
                }
                ,
                c.isNetworkAdminMode = function(a) {
                    return g.isAdminMode()
                }
                ,
                c.isThisUser = function(a) {
                    return c.thisUserId == a
                }
                ,
                c.isGrpOwner = function(a) {
                    return a == c.group.get("createdBy")
                }
                ,
                c.isGroupAdminOrNetworkAdminMode = function() {
                    return g.isAdminMode() || c.isGrpAdmin(c.thisUserId)
                }
                ,
                c.isAccountAnnouncementsGroup = function() {
                    return "ACCOUNT_ANNOUNCEMENTS" === c.groupSettings.type
                }
                ,
                c.canThisUserAcceptGroupJoinRequests = function() {
                    return c.group && c.group.get("access") !== c.PUBLIC_GROUP_TYPE && (c.isGroupAdminOrNetworkAdminMode() || c.groupSettings.membersCanInvite)
                }
                ,
                c.closeTab = function() {
                    c.$emit("closeTab", ma)
                }
                ,
                c.inviteTeammateAgain = function(a) {
                    c.group.inviteUserToGroupAgain([a]).success(function(a, b) {
                        if (a.type) {
                            var c = a.data.users_invited
                              , d = a.data.users_not_invited;
                            c.length ? $(c) : d.length && aa(d)
                        }
                    })
                }
                ,
                c.copyGroupEmail = function() {
                    m.copyToClipboard(c.group.get("email"))
                }
                ,
                c.showMoreOrLessPinnedCont = function(a) {
                    "MORE" == a ? c.pinnedContentsToShow = c.grpSettingsExProperts.pinnedContent.length : "LESS" == a && (c.pinnedContentsToShow = c.pinnedContentLimit),
                    c.$broadcast("render")
                }
                ,
                c.leaveGroup = function() {
                    K()
                }
                ,
                c.deleteGroup = function() {
                    k.promptModal(Ra, Sa.replace("[groupname]", c.group.get("title")), function() {
                        d.deleteGroup(c.group.get("id"))
                    }, null , Ta, Ca, null , !0)
                }
                ,
                c.getShareWithDropdownItems = function(a) {
                    var b = j.defer();
                    return b.resolve(h.getPublishableGroupsAndUsersOrPreviousHistory(a, nb)),
                    b.promise
                }
                ,
                c.onItemAddedInToField = function(a) {
                    m.findInObjectArray(c.shareWith, "id", a.id) || c.shareWith.push(a),
                    c.validateWebhookForm()
                }
                ,
                c.deleteIntegration = function(a, b, d) {
                    if (c.searchGrpIntegrationCtrl.inSearchMode)
                        for (var e = 0; e < c.filteredGroupIntegrations.length; e++)
                            c.filteredGroupIntegrations[e].webhook_id == a && c.filteredGroupIntegrations.splice(e, 1);
                    else
                        for (var e = 0; e < c.groupIntegrations.length; e++)
                            c.groupIntegrations[e].webhook_id == a && c.groupIntegrations.splice(e, 1);
                    c.$broadcast("render");
                    var f = null 
                      , g = "Direct";
                    switch (b) {
                    case "gcal":
                        f = "Google Calendar",
                        promise = C.deleteIntegration(a);
                        break;
                    case "gmail":
                        f = "Gmail",
                        promise = v.deleteIntegration(a);
                        break;
                    case "gdrive":
                        f = "Google Drive",
                        promise = w.deleteIntegration(a);
                        break;
                    case "dropbox":
                        f = "Dropbox",
                        promise = x.deleteIntegration(a);
                        break;
                    case "box":
                        f = "Box",
                        promise = y.deleteIntegration(a);
                        break;
                    case "twitter":
                        f = "Twitter",
                        promise = u.deleteIntegration(a);
                        break;
                    case "zapier":
                        f = d ? d : "Zapier",
                        g = "Zapier",
                        promise = p.deleteIntegration(a);
                        break;
                    case "webhook":
                        f = "Webhook",
                        promise = p.deleteIntegration(a);
                        break;
                    case "facebook":
                        f = "Facebook",
                        promise = z.deleteIntegration(a);
                        break;
                    case "o365_mail":
                        f = "O365 Mail",
                        promise = B.deleteIntegration(a, "mail");
                        break;
                    case "o365_calendar":
                        f = "O365 Calendar",
                        promise = B.deleteIntegration(a, "calendar");
                        break;
                    case "o365_drive":
                        f = "O365 OneDrive",
                        promise = B.deleteIntegration(a, "drive");
                        break;
                    default:
                        promise = p.deleteIntegration(a)
                    }
                    return o.showBanner_promise(promise, "Deleting integration...", "Integration deleted", "Error... try again", !1, !1, promise),
                    promise.then(function(a) {
                        c.logMixpanelEvent(A.USER_REMOVED_INTEGRATION, {
                            Source: f,
                            Via: g,
                            From: "Standard Newsfeed"
                        }),
                        c.isFilteredView = !1
                    }),
                    promise
                }
                ,
                c.manageIntegration = function(a, b) {
                    switch (a) {
                    case "zapier":
                        var c = b.zap_id;
                        return s.open("https://zapier.com/app/editor/" + c),
                        !1;
                    case "ifttt":
                        var d = b.recipe_id;
                        return s.open("https://ifttt.com/myrecipes/personal/" + d),
                        !1;
                    case "webhook":
                        var e = b.webhook_id + ":" + oa
                          , f = n.newResourceLink("100", [{
                            uid: e,
                            type: "100"
                        }, {
                            uid: "2",
                            type: "AddIntegration"
                        }], null , "Update Integration")
                          , g = n.linkToUrl(f, !0);
                        r.url(g.slice(1));
                        break;
                    case "twitter":
                        var e = b.webhook_id + ":" + oa
                          , f = n.newResourceLink("100", [{
                            uid: e,
                            type: "100"
                        }, {
                            uid: "2",
                            type: "AddTwitterIntegration"
                        }], null , "Update Integration")
                          , g = n.linkToUrl(f, !0);
                        r.url(g.slice(1));
                        break;
                    case "gcal":
                        var e = b.webhook_id + ":" + oa
                          , f = n.newResourceLink("100", [{
                            uid: e,
                            type: "100"
                        }, {
                            uid: "2",
                            type: "AddGcalIntegration"
                        }], null , "Update Integration")
                          , g = n.linkToUrl(f, !0);
                        r.url(g.slice(1));
                        break;
                    case "gmail":
                        var e = b.webhook_id + ":" + oa
                          , f = n.newResourceLink("100", [{
                            uid: e,
                            type: "100"
                        }, {
                            uid: "2",
                            type: "AddGmailIntegration"
                        }], null , "Update Integration")
                          , g = n.linkToUrl(f, !0);
                        r.url(g.slice(1));
                        break;
                    case "gdrive":
                        var e = b.webhook_id + ":" + oa
                          , f = n.newResourceLink("100", [{
                            uid: e,
                            type: "100"
                        }, {
                            uid: "2",
                            type: "AddGdriveIntegration"
                        }], null , "Update Integration")
                          , g = n.linkToUrl(f, !0);
                        r.url(g.slice(1));
                        break;
                    case "box":
                        var e = b.webhook_id + ":" + oa
                          , f = n.newResourceLink("100", [{
                            uid: e,
                            type: "100"
                        }, {
                            uid: "2",
                            type: "AddBoxIntegration"
                        }], null , "Update Integration")
                          , g = n.linkToUrl(f, !0);
                        r.url(g.slice(1));
                        break;
                    case "dropbox":
                        var e = b.webhook_id + ":" + oa
                          , f = n.newResourceLink("100", [{
                            uid: e,
                            type: "100"
                        }, {
                            uid: "2",
                            type: "AddDropboxIntegration"
                        }], null , "Update Integration")
                          , g = n.linkToUrl(f, !0);
                        r.url(g.slice(1));
                        break;
                    case "facebook":
                        var e = b.webhook_id + ":" + oa
                          , f = n.newResourceLink("100", [{
                            uid: e,
                            type: "100"
                        }, {
                            uid: "2",
                            type: "AddFacebookIntegration"
                        }], null , "Update Integration")
                          , g = n.linkToUrl(f, !0);
                        r.url(g.slice(1));
                        break;
                    case "o365_mail":
                        var e = b.webhook_id + ":" + oa
                          , f = n.newResourceLink("100", [{
                            uid: e,
                            type: "100"
                        }, {
                            uid: "2",
                            type: "AddO365MailIntegration"
                        }], null , "Update Integration")
                          , g = n.linkToUrl(f, !0);
                        r.url(g.slice(1));
                        break;
                    case "o365_calendar":
                        var e = b.webhook_id + ":" + oa
                          , f = n.newResourceLink("100", [{
                            uid: e,
                            type: "100"
                        }, {
                            uid: "2",
                            type: "AddO365CalendarIntegration"
                        }], null , "Update Integration")
                          , g = n.linkToUrl(f, !0);
                        r.url(g.slice(1));
                        break;
                    case "o365_drive":
                        var e = b.webhook_id + ":" + oa
                          , f = n.newResourceLink("100", [{
                            uid: e,
                            type: "100"
                        }, {
                            uid: "2",
                            type: "AddO365DriveIntegration"
                        }], null , "Update Integration")
                          , g = n.linkToUrl(f, !0);
                        r.url(g.slice(1))
                    }
                }
                ,
                c.createWebhookIntegration = function() {
                    var a = n.newResourceLink("100", [{
                        uid: oa,
                        type: "100"
                    }, {
                        uid: "2",
                        type: "AllIntegrations"
                    }], null , "(All Integrations)")
                      , b = n.linkToUrl(a);
                    r.path(b.slice(1))
                }
                ,
                c.getIntegrationStatusClass = function(a) {
                    return "INACTIVE" == a ? "integration-enable" : "integration-disable"
                }
                ,
                c.getIntegrationStatusClassForActionsContainer = function(a) {
                    return "INACTIVE" == a ? "details-wrapper-content-right-configured-int-disabled" : "details-wrapper-content-right-configured-int-enabled"
                }
                ,
                c.toggleIntegrationStatus = function(a) {
                    for (var b = "INACTIVE", d = 0; d < c.groupIntegrations.length; d++)
                        if (c.groupIntegrations[d].webhook_id == a.webhook_id) {
                            b = c.groupIntegrations[d].status;
                            break
                        }
                    var e = "INACTIVE" == b ? "enable" : "disable";
                    if ("enable" == e)
                        if (a.integration_type && "webhook" != a.integration_type && "zapier" != a.integration_type && "ifttt" != a.integration_type) {
                            var f = p.getIntegrationCompletionStatus(a.webhook_id, a.integration_type);
                            f.then(function(b) {
                                return b ? void E(a.webhook_id, e, g.getUserId()) : void k.alertModal("Integration alert!!!", "Could not enable integration because it is incomplete.", "OK", function() {}, function() {}, !1)
                            })
                        } else
                            E(a.webhook_id, e, g.getUserId());
                    else
                        E(a.webhook_id, e, g.getUserId())
                }
                ,
                c.searchGrpIntegrationCtrl.debouncedFiltering = _.debounce(c.searchGrpIntegrationCtrl.filterGroupIntegrations, 20),
                c.searchGrpIntegrationCtrl.onSearchFragmentChanged = function() {
                    c.searchGrpIntegrationCtrl.debouncedFiltering()
                }
                ,
                c.logMixpanelEvent = function(a, b) {
                    b = b || {},
                    A.trackEvent(a, b, !0)
                }
                ,
                d.on("toggledShowHidePostsInFeed", function(a, b, d) {
                    c.group && c.group.get("id") === a && d && S()
                }),
                ia(),
                c.$broadcast("render")
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvGroupsDirectory", ["utils", function(b) {
        return {
            restrict: "E",
            scope: !1,
            templateUrl: "groups/groupsDirectory/templates/cnvGroupsDirectory.tpl.html",
            link: function(c, d, e) {
                var f = function(a) {
                    var b = $(a.target).val();
                    c.getAllGroupsFilteredItems(b)
                }
                ;
                c.getAllGroupsFilteredItems = function(a) {
                    if (c.allGroupsSearchFragment = a,
                    c.allGroupsSearchFragment && c.allGroupsSearchFragment.length) {
                        c.isAllGroupsInSearchMode = !0,
                        c.groups = [];
                        for (var d, e, f = 0; f < c.sortedAllGroups.length; f++)
                            d = c.sortedAllGroups[f].title,
                            e = b.getUserGroupSearchRegex(c.allGroupsSearchFragment),
                            e.test(d) && c.groups.push(c.sortedAllGroups[f])
                    } else
                        c.isAllGroupsInSearchMode = !1,
                        c.groups = _.clone(c.sortedAllGroups);
                    c.lazyLoadShowLimit = c.lazyLoadLimit,
                    c.$broadcast("render:boRepeat:GroupsDirectoryList"),
                    c.$broadcast("render")
                }
                ,
                c.getMyGroupsFilteredItems = function(a) {
                    if (c.myGroupsSearchFragment = a,
                    c.myGroupsSearchFragment && c.myGroupsSearchFragment.length) {
                        c.isMyGroupsInSearchMode = !0,
                        c.manageGroups = [],
                        c.memberGroups = [];
                        for (var d, e, f = 0; f < c.sortedManageGroups.length; f++)
                            d = c.sortedManageGroups[f].title,
                            e = b.getUserGroupSearchRegex(c.myGroupsSearchFragment),
                            e.test(d) && c.manageGroups.push(c.sortedManageGroups[f]);
                        for (var f = 0; f < c.sortedMemberGroups.length; f++)
                            d = c.sortedMemberGroups[f].title,
                            e = b.getUserGroupSearchRegex(c.myGroupsSearchFragment),
                            e.test(d) && c.memberGroups.push(c.sortedMemberGroups[f])
                    } else
                        c.isMyGroupsInSearchMode = !1,
                        c.manageGroups = _.clone(c.sortedManageGroups),
                        c.memberGroups = _.clone(c.sortedMemberGroups);
                    c.lazyLoadShowLimit = c.lazyLoadLimit,
                    c.$broadcast("render:boRepeat:GroupsDirectoryList"),
                    c.$broadcast("render")
                }
                ;
                var g = function(a) {
                    var b = $(a.target).val();
                    c.getMyGroupsFilteredItems(b)
                }
                  , h = _.debounce(f, 20)
                  , i = _.debounce(g, 20);
                c.registerAllGroupsViewInputEvents = function() {
                    setTimeout(function() {
                        d.find(".all-groups input[type=text]").on("input", function(a) {
                            h(a)
                        })
                    }, 1)
                }
                ,
                c.registerMyGroupsViewInputEvents = function() {
                    setTimeout(function() {
                        d.find(".my-groups input[type=text]").on("input", function(a) {
                            i(a)
                        })
                    }, 1)
                }
                ;
                var j = function() {
                    Math.ceil($(a).scrollTop()) + $(a).height() >= $(document).height() ? (c.selectedView == c.ALL_GROUPS_VIEW ? c.groups.length > c.lazyLoadShowLimit + c.lazyLoadLimit ? c.lazyLoadShowLimit += c.lazyLoadLimit : c.lazyLoadShowLimit = c.groups.length : c.selectedView == c.MY_GROUPS_VIEW ? c.manageGroups.length + c.memberGroups.length > c.lazyLoadShowLimit + c.lazyLoadLimit ? c.lazyLoadShowLimit += c.lazyLoadLimit : c.lazyLoadShowLimit = 2 * (c.manageGroups.length > c.memberGroups.length ? c.manageGroups.length : c.memberGroups.length) : c.selectedView == c.GROUPS_REQUESTS_VIEW && (c.groupsJoinReqs.length > c.lazyLoadShowLimit + c.lazyLoadLimit ? c.lazyLoadShowLimit += c.lazyLoadLimit : c.lazyLoadShowLimit = c.groupsJoinReqs.length),
                    c.$broadcast("render:boRepeat:GroupsDirectoryList"),
                    c.$broadcast("render")) : 0 == $(a).scrollTop() && (c.lazyLoadShowLimit = c.lazyLoadLimit,
                    c.$broadcast("render:boRepeat:GroupsDirectoryList"),
                    c.$broadcast("render"))
                }
                ;
                $(a).on("scroll", j),
                c.toggleGroupMobileCheckBox = function() {
                    $("#ccGrpMobile").is(":checked") ? $("#ccGrpMobile").prop("checked", !1) : $("#ccGrpMobile").prop("checked", !0)
                }
                ,
                c.toggleGroupEmailCheckBox = function() {
                    $("#ccGrpEmail").is(":checked") ? $("#ccGrpEmail").prop("checked", !1) : $("#ccGrpEmail").prop("checked", !0)
                }
                ,
                c.$on("$destroy", function() {
                    $(a).off("scroll", j)
                })
            },
            controller: ["$scope", "alertsService", "Groups", "userInfo", "AppLinks", "$location", "usersGroupsListProvider", "Users", "User", "bannerService", "Contacts", function(a, b, c, d, e, f, g, h, i, j, k) {
                function l(a) {
                    a.sort(function(a, b) {
                        var c = a.title
                          , d = b.title;
                        if (c && d) {
                            if (c = c.toLowerCase(),
                            d = d.toLowerCase(),
                            d > c)
                                return -1;
                            if (c > d)
                                return 1
                        }
                        return 0
                    })
                }
                function m(a) {
                    a.sort(function(a, b) {
                        return a.creation_date < b.creation_date ? 1 : a.creation_date > b.creation_date ? -1 : 0
                    })
                }
                function n() {
                    a.groups = [];
                    for (var b = 0; b < a.originalGroups.length; b++)
                        "PUBLIC" == a.originalGroups[b].access && a.groups.push(a.originalGroups[b])
                }
                function o() {
                    a.groups = [];
                    for (var b = 0; b < a.originalGroups.length; b++)
                        "PUBLIC" != a.originalGroups[b].access && a.groups.push(a.originalGroups[b])
                }
                function p() {
                    a.manageGroups = [],
                    a.memberGroups = [];
                    for (var b = 0; b < a.originalGroups.length; b++)
                        a.originalGroups[b]._hint_this_user_manages_group && "PUBLIC" == a.originalGroups[b].access ? a.manageGroups.push(a.originalGroups[b]) : a.originalGroups[b]._hint_this_user_is_in_group && "PUBLIC" == a.originalGroups[b].access && a.memberGroups.push(a.originalGroups[b])
                }
                function q() {
                    a.manageGroups = [],
                    a.memberGroups = [];
                    for (var b = 0; b < a.originalGroups.length; b++)
                        a.originalGroups[b]._hint_this_user_manages_group && "PUBLIC" != a.originalGroups[b].access ? a.manageGroups.push(a.originalGroups[b]) : a.originalGroups[b]._hint_this_user_is_in_group && "PUBLIC" != a.originalGroups[b].access && a.memberGroups.push(a.originalGroups[b])
                }
                function r(a) {
                    var b = e.newResourceLink("9", [{
                        uid: a.group.group_id,
                        type: "22"
                    }, {
                        uid: "2",
                        type: "GroupSettings"
                    }], null , a.group.title + " (Settings)")
                      , c = e.linkToUrl(b, !0);
                    f.url(c.slice(1))
                }
                function s(b, d) {
                    a.toggleGroupEmailCheckBox(),
                    c.updateGroupEmailNotification(b.group.group_id, Number(!b.group.notification_settings.email)).success(function(a, c) {
                        a.type ? (b.group.notification_settings.email = Number(!b.group.notification_settings.email),
                        b.group.notification_settings.email ? j.showBanner("You will receive email notifications for any new content posted in <b>" + b.group.title + "</b> group.", !1, !1, null ) : j.showBanner("You will no longer receive email notifications for any new content posted in <b>" + b.group.title + "</b> group.", !1, !1, null )) : j.showBanner("Unable to save your notification preferences. Try again.", !1, !1, null )
                    }),
                    d.stopPropagation(),
                    d.preventDefault()
                }
                function t(b, d) {
                    a.toggleGroupMobileCheckBox(),
                    c.updateGroupMobileNotification(b.group.group_id, Number(!b.group.notification_settings.mobile)).success(function(a, c) {
                        a.type ? (b.group.notification_settings.mobile = Number(!b.group.notification_settings.mobile),
                        b.group.notification_settings.mobile ? j.showBanner("You will receive mobile push notifications for any new content posted in <b>" + b.group.title + "</b> group.", !1, !1, null ) : j.showBanner("You will no longer receive mobile push notifications for any new content posted in <b>" + b.group.title + "</b> group.", !1, !1, null )) : j.showBanner("Unable to save your notification preferences. Try again.", !1, !1, null )
                    }),
                    d.stopPropagation(),
                    d.preventDefault()
                }
                function u(a) {
                    var b = Number(!a.group.hide_from_feed);
                    c.toggleShowHidePostsInFeed(c.getGroup(a.group.group_id), b).success(function(c, d) {
                        c.type && (a.group.hide_from_feed = b)
                    })
                }
                function v(b) {
                    var c = _.findWhere(a.originalGroups, {
                        group_id: b
                    });
                    _.indexOf(a.manageGroups, c) >= 0 && a.manageGroups.splice(_.indexOf(a.manageGroups, c), 1),
                    _.indexOf(a.sortedManageGroups, c) >= 0 && a.sortedManageGroups.splice(_.indexOf(a.sortedManageGroups, c), 1),
                    _.indexOf(a.memberGroups, c) >= 0 && a.memberGroups.splice(_.indexOf(a.memberGroups, c), 1),
                    _.indexOf(a.sortedMemberGroups, c) >= 0 && a.sortedMemberGroups.splice(_.indexOf(a.sortedMemberGroups, c), 1);
                    for (var d = _.where(a.groupsJoinReqs, {
                        group_id: b
                    }), g = 0; g < d.length; g++)
                        a.groupsJoinReqs.splice(_.indexOf(a.groupsJoinReqs, d[g]), 1);
                    if ((c._hint_this_user_manages_group || c._hint_this_user_is_in_group) && a.myGroupsCount--,
                    a.selectedView == a.GROUPS_REQUESTS_VIEW && 0 == a.groupsJoinReqs.length) {
                        var h = e.newResourceLink("22", [{
                            uid: "1",
                            type: "26"
                        }, {
                            uid: "2",
                            type: "AllGroups"
                        }], null , "Groups Directory (All Groups)")
                          , i = e.linkToUrl(h, !0);
                        f.url(i.slice(1))
                    }
                }
                function w() {
                    console.log("groups directory app activated")
                }
                function x() {
                    console.log("groups directory app deactivated")
                }
                function y() {
                    console.log("groups directory app closing"),
                    clearInterval(J)
                }
                function z(b) {
                    var c;
                    G.resourceLink.resourcePath.hierarchy.length > 1 ? (c = G.resourceLink.resourcePath.hierarchy[1].type,
                    "AllGroups" === c ? a.toggleSelectedView(a.ALL_GROUPS_VIEW) : "MyGroups" === c ? a.toggleSelectedView(a.MY_GROUPS_VIEW) : "GroupsRequests" === c && a.toggleSelectedView(a.GROUPS_REQUESTS_VIEW)) : a.toggleSelectedView(a.ALL_GROUPS_VIEW)
                }
                function A() {
                    a.manageGroups = [],
                    a.memberGroups = [];
                    for (var b = 0; b < a.originalGroups.length; b++)
                        a.originalGroups[b]._hint_this_user_manages_group ? a.manageGroups.push(a.originalGroups[b]) : a.originalGroups[b]._hint_this_user_is_in_group && a.memberGroups.push(a.originalGroups[b])
                }
                function B() {
                    for (var b, c = 0; c < a.groupsJoinReqs.length; c++)
                        b = _.findWhere(a.originalGroups, {
                            group_id: a.groupsJoinReqs[c].group_id
                        }),
                        a.groupsJoinReqs[c].group_name = b.title
                }
                function C() {
                    for (var b = 0; b < a.originalGroups.length; b++)
                        a.originalGroups[b].creation_date || (a.originalGroups[b].creation_date = "1970-01-01 00:00:00.000"),
                        a.originalGroups[b].creation_date = new Date(a.originalGroups[b].creation_date.replace(" ", "T") + "Z")
                }
                function D() {
                    J = setInterval(function() {
                        c.getGroupsDirectory(I).success(function(b, c) {
                            if (b.type) {
                                if (I == b.revisionNo)
                                    return;
                                if (I = b.revisionNo,
                                a.originalGroups = b.data.groups,
                                C(),
                                a.groups = _.clone(a.originalGroups),
                                "name" == a.allGroupsLastSortedBy ? l(a.groups) : "private" == a.allGroupsLastSortedBy ? (o(),
                                l(a.groups)) : "public" == a.allGroupsLastSortedBy ? (n(),
                                l(a.groups)) : "date" == a.allGroupsLastSortedBy && m(a.groups),
                                a.sortedAllGroups = _.clone(a.groups),
                                a.groupsJoinReqs = b.data.group_join_requests,
                                B(),
                                A(),
                                "name" == a.myGroupsLastSortedBy ? (l(a.manageGroups),
                                l(a.memberGroups)) : "private" == a.myGroupsLastSortedBy ? (q(),
                                l(a.manageGroups),
                                l(a.memberGroups)) : "public" == a.myGroupsLastSortedBy ? (p(),
                                l(a.manageGroups),
                                l(a.memberGroups)) : "date" == a.myGroupsLastSortedBy && (m(a.manageGroups),
                                m(a.memberGroups)),
                                a.sortedManageGroups = _.clone(a.manageGroups),
                                a.sortedMemberGroups = _.clone(a.memberGroups),
                                a.myGroupsCount = a.manageGroups.length + a.memberGroups.length,
                                a.selectedView == a.ALL_GROUPS_VIEW && a.isAllGroupsInSearchMode)
                                    a.getAllGroupsFilteredItems(a.allGroupsSearchFragment);
                                else if (a.selectedView == a.MY_GROUPS_VIEW && a.isMyGroupsInSearchMode)
                                    a.getMyGroupsFilteredItems(a.myGroupsSearchFragment);
                                else if (a.selectedView != a.GROUPS_REQUESTS_VIEW || a.groupsJoinReqs && 0 != a.groupsJoinReqs.length)
                                    a.$broadcast("render:boRepeat:GroupsDirectoryList"),
                                    a.$broadcast("render"),
                                    a.$broadcast("refreshImage");
                                else {
                                    var d = e.newResourceLink("22", [{
                                        uid: "1",
                                        type: "26"
                                    }, {
                                        uid: "2",
                                        type: "AllGroups"
                                    }], null , "Groups Directory (All Groups)")
                                      , g = e.linkToUrl(d, !0);
                                    f.url(g.slice(1))
                                }
                            }
                        })
                    }, 3e4)
                }
                function E() {
                    c.getGroupsDirectory().success(function(b, c) {
                        b.type && (I = b.revisionNo,
                        a.originalGroups = b.data.groups,
                        C(),
                        a.groups = _.clone(a.originalGroups),
                        l(a.groups),
                        a.sortedAllGroups = _.clone(a.groups),
                        a.allGroupsLastSortedBy = "name",
                        a.groupsJoinReqs = b.data.group_join_requests,
                        B(),
                        A(),
                        l(a.manageGroups),
                        a.sortedManageGroups = _.clone(a.manageGroups),
                        l(a.memberGroups),
                        a.sortedMemberGroups = _.clone(a.memberGroups),
                        a.myGroupsLastSortedBy = "name",
                        a.myGroupsCount = a.manageGroups.length + a.memberGroups.length,
                        a.initialized = !0,
                        z(!0),
                        D())
                    })
                }
                function F() {
                    E()
                }
                var G = a.tab
                  , H = G.appContCtrl.appCtrl;
                H.activated = w,
                H.deactivated = x,
                H.closing = y,
                H.navigate = z,
                H.initialized = !0,
                a.initialized = !1;
                var I, J;
                a.ALL_GROUPS_VIEW = "AllGroups",
                a.MY_GROUPS_VIEW = "MyGroups",
                a.GROUPS_REQUESTS_VIEW = "GroupsRequests",
                a.HINT_PENDING_ACTION = "pending",
                a.HINT_REQ_ACTION = "request_to_join",
                a.HINT_JOINED_ACTION = "joined",
                a.HINT_JOIN_ACTION = "join",
                a.HINT_INVITE_ACTION = "invite_members",
                a.lazyLoadLimit = 40,
                a.lazyLoadShowLimit = 40,
                a.thisUserId = d.user_id,
                a.allGroupsLabelIconConditions = {
                    name: !0
                },
                a.myGroupsLabelIconConditions = {
                    name: !0
                },
                a.userInfo = d,
                a.toggleSelectedView = function(b) {
                    a.selectedView != b && (a.isAllGroupsInSearchMode && (a.isAllGroupsInSearchMode = !1,
                    a.groups = _.clone(a.sortedAllGroups)),
                    a.isMyGroupsInSearchMode && (a.isMyGroupsInSearchMode = !1,
                    a.manageGroups = _.clone(a.sortedManageGroups),
                    a.memberGroups = _.clone(a.sortedMemberGroups)),
                    a.lazyLoadShowLimit = a.lazyLoadLimit,
                    a.selectedView = b,
                    a.$broadcast("render:boRepeat:GroupsDirectoryList"),
                    a.$broadcast("render"),
                    a.selectedView == a.ALL_GROUPS_VIEW ? a.registerAllGroupsViewInputEvents() : a.selectedView == a.MY_GROUPS_VIEW && a.registerMyGroupsViewInputEvents())
                }
                ,
                a.openCreateGroupModal = function() {
                    var a = "home/components/createGroupWidget/createGroupModal.tpl.html"
                      , c = "createGroupModalCtrl"
                      , d = "group-create-details"
                      , e = {
                        createPublic: function() {
                            return !1
                        },
                        createPrivate: function() {
                            return !1
                        },
                        sourceGS: function() {
                            return !1
                        }
                    };
                    b.customModal(a, c, e, d)
                }
                ,
                a.deleteGroup = function(a) {
                    var b = c.deleteGroup(a.group.group_id);
                    j.showBanner_promise(b, "Deleting group", null , null , !1, !1),
                    b.then(function(a) {
                        E()
                    })
                }
                ,
                a.generateGroupDropdownCtrl = function(b) {
                    var c = {};
                    return c.align = "right",
                    c.options = [],
                    (1 == b._hint_this_user_manages_group || d.isAdminMode() || "ACCOUNT_ANNOUNCEMENTS" === b.type) && c.options.push({
                        label: "Edit group settings",
                        callback: r
                    }, {
                        isDivider: !0
                    }),
                    1 == b._hint_this_user_is_in_group && 0 == b.hide_from_feed ? c.options.push({
                        label: "Hide from feed",
                        callback: u
                    }, {
                        isDivider: !0
                    }) : 1 == b._hint_this_user_is_in_group && c.options.push({
                        label: "Show in feed",
                        callback: u
                    }, {
                        isDivider: !0
                    }),
                    "1" == b._hint_this_user_is_in_group && c.options.push({
                        label: "Notification preferences:",
                        isNotHoverable: !0,
                        callback: function() {}
                    }, {
                        label: "Mobile",
                        checkBox: !0,
                        checkBoxId: "ccGrpMobile",
                        callback: t
                    }, {
                        label: "Email",
                        checkBox: !0,
                        checkBoxId: "ccGrpEmail",
                        callback: s
                    }),
                    b._hint_this_user_can_leave && c.options.push({
                        label: "Leave group",
                        conditionalLabel: !0,
                        condition: "cLeaveGrp",
                        callback: function(b) {
                            a.leaveGroup(b)
                        }
                    }),
                    d.isAdminMode() && "ACCOUNT_ANNOUNCEMENTS" !== b.type && c.options.push({
                        label: "Delete group",
                        callback: function(b) {
                            a.deleteGroup(b)
                        }
                    }),
                    c
                }
                ,
                a.allGrpsSrtngDrpDwnCtrl = {},
                a.allGrpsSrtngDrpDwnCtrl.options = [{
                    label: "Sort by:",
                    isNotHoverable: !0,
                    callback: function() {}
                }, {
                    label: "Name",
                    conditionalLabelIcon: !0,
                    icon: "cnv-icons-20 check-lightgray",
                    condition: "name",
                    callback: function() {
                        "name" != a.allGroupsLastSortedBy && (a.allGroupsLabelIconConditions = {
                            name: !0
                        },
                        ("public" == a.allGroupsLastSortedBy || "private" == a.allGroupsLastSortedBy) && (a.groups = _.clone(a.originalGroups)),
                        l(a.groups),
                        a.sortedAllGroups = _.clone(a.groups),
                        a.allGroupsLastSortedBy = "name",
                        a.$broadcast("render:boRepeat:GroupsDirectoryList"),
                        a.$broadcast("render"))
                    }
                }, {
                    label: "Public",
                    conditionalLabelIcon: !0,
                    icon: "cnv-icons-20 check-lightgray",
                    condition: "public",
                    callback: function() {
                        "public" != a.allGroupsLastSortedBy && (a.allGroupsLabelIconConditions = {
                            "public": !0
                        },
                        n(),
                        l(a.groups),
                        a.sortedAllGroups = _.clone(a.groups),
                        a.allGroupsLastSortedBy = "public",
                        a.$broadcast("render:boRepeat:GroupsDirectoryList"),
                        a.$broadcast("render"))
                    }
                }, {
                    label: "Private",
                    conditionalLabelIcon: !0,
                    icon: "cnv-icons-20 check-lightgray",
                    condition: "private",
                    callback: function() {
                        "private" != a.allGroupsLastSortedBy && (a.allGroupsLabelIconConditions = {
                            "private": !0
                        },
                        o(),
                        l(a.groups),
                        a.sortedAllGroups = _.clone(a.groups),
                        a.allGroupsLastSortedBy = "private",
                        a.$broadcast("render:boRepeat:GroupsDirectoryList"),
                        a.$broadcast("render"))
                    }
                }, {
                    label: "Creation date",
                    conditionalLabelIcon: !0,
                    icon: "cnv-icons-20 check-lightgray",
                    condition: "date",
                    callback: function() {
                        "date" != a.allGroupsLastSortedBy && (a.allGroupsLabelIconConditions = {
                            date: !0
                        },
                        ("public" == a.allGroupsLastSortedBy || "private" == a.allGroupsLastSortedBy) && (a.groups = _.clone(a.originalGroups)),
                        m(a.groups),
                        a.sortedAllGroups = _.clone(a.groups),
                        a.allGroupsLastSortedBy = "date",
                        a.$broadcast("render:boRepeat:GroupsDirectoryList"),
                        a.$broadcast("render"))
                    }
                }],
                a.myGrpsSrtngDrpDwnCtrl = {},
                a.myGrpsSrtngDrpDwnCtrl.options = [{
                    label: "Sort by:",
                    isNotHoverable: !0,
                    callback: function() {}
                }, {
                    label: "Name",
                    conditionalLabelIcon: !0,
                    icon: "cnv-icons-20 check-lightgray",
                    condition: "name",
                    callback: function() {
                        "name" != a.myGroupsLastSortedBy && (a.myGroupsLabelIconConditions = {
                            name: !0
                        },
                        ("public" == a.myGroupsLastSortedBy || "private" == a.myGroupsLastSortedBy) && A(),
                        l(a.manageGroups),
                        a.sortedManageGroups = _.clone(a.manageGroups),
                        l(a.memberGroups),
                        a.sortedMemberGroups = _.clone(a.memberGroups),
                        a.myGroupsLastSortedBy = "name",
                        a.$broadcast("render:boRepeat:GroupsDirectoryList"),
                        a.$broadcast("render"))
                    }
                }, {
                    label: "Public",
                    conditionalLabelIcon: !0,
                    icon: "cnv-icons-20 check-lightgray",
                    condition: "public",
                    callback: function() {
                        "public" != a.myGroupsLastSortedBy && (a.myGroupsLabelIconConditions = {
                            "public": !0
                        },
                        p(),
                        l(a.manageGroups),
                        l(a.memberGroups),
                        a.sortedManageGroups = _.clone(a.manageGroups),
                        a.sortedMemberGroups = _.clone(a.memberGroups),
                        a.myGroupsLastSortedBy = "public",
                        a.$broadcast("render:boRepeat:GroupsDirectoryList"),
                        a.$broadcast("render"))
                    }
                }, {
                    label: "Private",
                    conditionalLabelIcon: !0,
                    icon: "cnv-icons-20 check-lightgray",
                    condition: "private",
                    callback: function() {
                        "private" != a.myGroupsLastSortedBy && (a.myGroupsLabelIconConditions = {
                            "private": !0
                        },
                        q(),
                        l(a.manageGroups),
                        l(a.memberGroups),
                        a.sortedManageGroups = _.clone(a.manageGroups),
                        a.sortedMemberGroups = _.clone(a.memberGroups),
                        a.myGroupsLastSortedBy = "private",
                        a.$broadcast("render:boRepeat:GroupsDirectoryList"),
                        a.$broadcast("render"))
                    }
                }, {
                    label: "Creation date",
                    conditionalLabelIcon: !0,
                    icon: "cnv-icons-20 check-lightgray",
                    condition: "date",
                    callback: function() {
                        "date" != a.myGroupsLastSortedBy && (a.myGroupsLabelIconConditions = {
                            date: !0
                        },
                        ("public" == a.myGroupsLastSortedBy || "private" == a.myGroupsLastSortedBy) && A(),
                        m(a.manageGroups),
                        a.sortedManageGroups = _.clone(a.manageGroups),
                        m(a.memberGroups),
                        a.sortedMemberGroups = _.clone(a.memberGroups),
                        a.myGroupsLastSortedBy = "date",
                        a.$broadcast("render:boRepeat:GroupsDirectoryList"),
                        a.$broadcast("render"))
                    }
                }],
                a.leaveGroup = function(d) {
                    var e = "Leave Group"
                      , f = "Leave group"
                      , g = "Cancel";
                    c.getGroup_promise(d.group.group_id).then(function(h) {
                        if (h)
                            if (h.isThisUserIsTheOnlyGroupAdmin(a.thisUserId)) {
                                var i = "Are you sure you want to leave this group? As the only group administrator, if you leave no one will be authorized to manage this group.";
                                b.promptModal(e, i, function() {
                                    c.removeUserFromGroup(d.group.group_id, a.thisUserId).then(function(b) {
                                        d.group._hint_this_user_is_in_group = 0,
                                        d.group._hint_this_user_manages_group = 0,
                                        d.group.user_status = null ,
                                        "PUBLIC" == d.group.access ? d.group._hint_this_user_action = a.HINT_JOIN_ACTION : d.group._hint_this_user_action = a.HINT_REQ_ACTION,
                                        v(d.group.group_id),
                                        a.$broadcast("render:boRepeat:GroupsDirectoryList"),
                                        a.$broadcast("render")
                                    })
                                }, null , f, g, null , !0)
                            } else if (h.get("is_admin")) {
                                var i = "You are an admin of this group. Are you sure you want to leave it?";
                                b.promptModal(e, i, function() {
                                    c.removeUserFromGroup(d.group.group_id, a.thisUserId).then(function(b) {
                                        d.group._hint_this_user_is_in_group = 0,
                                        d.group._hint_this_user_manages_group = 0,
                                        d.group.user_status = null ,
                                        "PUBLIC" == d.group.access ? d.group._hint_this_user_action = a.HINT_JOIN_ACTION : d.group._hint_this_user_action = a.HINT_REQ_ACTION,
                                        v(d.group.group_id),
                                        a.$broadcast("render:boRepeat:GroupsDirectoryList"),
                                        a.$broadcast("render")
                                    })
                                }, null , f, g, null , !0)
                            } else {
                                var i = "Are you sure you want to leave this group?";
                                b.promptModal(e, i, function() {
                                    c.removeUserFromGroup(d.group.group_id, a.thisUserId).then(function(b) {
                                        d.group._hint_this_user_is_in_group = 0,
                                        d.group._hint_this_user_manages_group = 0,
                                        d.group.user_status = null ,
                                        "PUBLIC" == d.group.access ? d.group._hint_this_user_action = a.HINT_JOIN_ACTION : d.group._hint_this_user_action = a.HINT_REQ_ACTION,
                                        v(d.group.group_id),
                                        a.$broadcast("render:boRepeat:GroupsDirectoryList"),
                                        a.$broadcast("render")
                                    })
                                }, null , f, g, null , !0)
                            }
                    })
                }
                ,
                a.joinGroup = function(b) {
                    c.reqToJoinGroup(b.group_id).success(function(c, d) {
                        c.type && ("PUBLIC" == b.access ? (b.hint_this_user_is_in_group = 1,
                        b.user_role = "USER",
                        b.user_status = "ACTIVE",
                        b.members_count++,
                        b.notification_settings = {
                            email: 0,
                            mobile: 0
                        },
                        a.sortedMemberGroups.push(b),
                        a.myGroupsCount++,
                        b.members_can_invite ? b._hint_this_user_action = a.HINT_INVITE_ACTION : b._hint_this_user_action = a.HINT_JOINED_ACTION) : b._hint_this_user_action = a.HINT_PENDING_ACTION,
                        a.$broadcast("render:boRepeat:GroupsDirectoryList"),
                        a.$broadcast("render"))
                    })
                }
                ,
                a.inviteUsers = function(a) {
                    a.showSpinner = !0,
                    c.getGroup_promise(a.group_id).then(function(b) {
                        b ? b.getGroupMembers(!0).then(function(c) {
                            k.initContactsInviteModal({
                                include_off_domain: !0,
                                origin: "Manage_Groups",
                                invite_via: "Invite_Dialog",
                                group: b
                            }).then(function() {
                                a.showSpinner = !1
                            })
                        }, function(b) {
                            a.showSpinner = !1
                        }) : a.showSpinner = !1
                    })
                }
                ,
                a.updateGroupJoinReqStatus = function(b, d, g) {
                    c.updateGrpJoinReqStatus(b, d, g).success(function(c, h) {
                        if (c.type) {
                            var i = _.findWhere(a.originalGroups, {
                                group_id: b
                            });
                            i.join_requests_count--,
                            "ACCEPTED" == g && i.members_count++;
                            var j = _.findWhere(a.groupsJoinReqs, {
                                req_id: d
                            });
                            if (a.groupsJoinReqs.splice(_.indexOf(a.groupsJoinReqs, j), 1),
                            a.selectedView == a.GROUPS_REQUESTS_VIEW && 0 == a.groupsJoinReqs.length) {
                                var k = e.newResourceLink("22", [{
                                    uid: "1",
                                    type: "26"
                                }, {
                                    uid: "2",
                                    type: "AllGroups"
                                }], null , "Groups Directory (All Groups)")
                                  , l = e.linkToUrl(k, !0);
                                f.url(l.slice(1))
                            } else
                                a.$broadcast("render:boRepeat:GroupsDirectoryList"),
                                a.$broadcast("render")
                        }
                    })
                }
                ,
                a.getGroupDetails = function(a) {
                    a._hint_this_user_can_leave && c.getGroup_promise(a.group_id).then(function(a) {
                        a && a.getDetails(!0).then(function(a) {
                            console.log("get group details fetched")
                        })
                    })
                }
                ,
                F()
            }
            ]
        }
    }
    ]),
    b.module("convoApp").factory("Groups", ["ServerComm", "accountInfo", "userInfo", "$q", "relevanciesService", "Group", "accountDataService", "AccountDataChangeNotificationType", "localStore", "RTCNotification", "$injector", function(a, b, c, d, e, g, h, i, j, k, l) {
        function m() {
            return Da
        }
        function n() {
            if (Ea) {
                var a = j.readData(m());
                return a && (a.version === Ca ? (o(a.data),
                Fa = d(function(a) {
                    a()
                })) : j.clearData(m())),
                Ea = !1,
                Fa
            }
            return Fa
        }
        function o(a) {
            for (var b, d = [], e = [], f = [], h = [], i = c.getUserId(), j = {}, k = [], l = a.length, m = 0; l > m; m++) {
                var n = new g(a[m]);
                d.push(n),
                j[n.id] = !0,
                Aa.hasOwnProperty(n.id) && (Aa[n.id] = "p"),
                "PROFILE" === n.get("type") && n.get("created_by") === i && (b = n.id)
            }
            _.each(Aa, function(a, b) {
                "p" !== a && wa.get(b).get("isMember") && k.push(b)
            }),
            wa.set(d),
            Aa = j,
            wa.forEach(function(a) {
                a.get("isPublishable") && e.push(a),
                a.get("isListable") && f.push(a),
                a.get("isSearchable") && h.push(a)
            }),
            xa.set(e),
            ya.set(f),
            za.set(h),
            c.setAccountUserProfileGroupId(b),
            k.length > 0 && (console.log("groupsService.getGroups(): groupsDeletedOrUserRemovedFrom:", k),
            qa.trigger("groupsDeletedOrUserRemovedFrom", k))
        }
        function p(b) {
            var e = n();
            if (!sa && (!ta || b)) {
                ra = d.defer();
                var f = a.getx("groups");
                sa = !0,
                f.then(function(a) {
                    a = a.data,
                    o(a),
                    sa = !1,
                    ta = !0,
                    c.isAdminMode() || j.writeData(m(), a, Ca) || j.writeData(m(), "", Ca),
                    ra.resolve(),
                    Fa && (Fa = null ,
                    qa.trigger("groupsUpdated"))
                }, function(a) {
                    sa = !1,
                    ta = !1,
                    ra.reject(a)
                })
            }
            return e ? e : ra.promise
        }
        function q(a) {
            wa.add(a),
            Aa[a.id] = !0
        }
        function r() {
            p(!0).then(function(a) {
                console.log("JK: triggering groupsUpdated event"),
                qa.trigger("groupsUpdated")
            })
        }
        function s() {
            return p().then(function(a) {
                return xa
            })
        }
        function t() {
            return p().then(function(a) {
                return ya
            })
        }
        function u() {
            return p().then(function(a) {
                return za
            })
        }
        function v(a) {
            return t().then(function(b) {
                var c = b;
                return Ba ? c : e.getRelevancies(c.pluck("id"), !1, a).then(function(a) {
                    var b = a.groups;
                    if (!b)
                        return c;
                    for (var d = 0; d < b.length; d++) {
                        var e = c.get(b[d].term);
                        e && e.set("rank", b[d].rank)
                    }
                    return Ba = !0,
                    c
                })
            })
        }
        function w(a) {
            return p().then(function(b) {
                for (var c = !1, d = 0; d < a.length; d++) {
                    var e = a[d]
                      , f = parseInt(e.updates_count)
                      , g = wa.get(e.group_id);
                    g && f != g.get("unreadCount") && (g.set("unreadCount", f),
                    c = !0)
                }
                return c
            })
        }
        function x(a) {
            if (a)
                for (var b in a)
                    a.hasOwnProperty(b) && wa.get(b).set("pinned_at", a[b])
        }
        function y(a) {
            return p().then(function(b) {
                return wa.get(a)
            })
        }
        function z(b) {
            return p().then(function(c) {
                var d = wa.get(b);
                return d ? d : a.getx("groups?group_id=" + encodeURIComponent(b)).then(function(a) {
                    return d = a.data.length > 0 ? a.data[0] : null ,
                    d && q(d),
                    d
                })
            })
        }
        function A(a) {
            return wa.get(a)
        }
        function B(a) {
            return wa.get(a) ? wa.get(a).get("title") : "Unknown"
        }
        function C(a) {
            var b = a.toLowerCase();
            return wa.find(function(a) {
                return a.get("title").toLowerCase() == b
            })
        }
        function D(b, c, d, e, f, g, h, i) {
            var j = {
                method: "createGroup",
                name: b,
                description: c,
                access: d,
                auto_follow: e,
                members_can_invite_others: f,
                users_to_invite: g
            };
            return h && (j.custom_message = h),
            i && (j.mp_selection_type = i),
            a.post("groups", j).success(function(a, b) {
                console.log(a)
            })
        }
        function E(b, c) {
            var e = {
                groupId: b,
                userId: c,
                method: "removeUserFromGroup"
            }
              , f = a.post("groups", e)
              , g = d.defer();
            return f.success(function(a, d) {
                aa(a, {
                    groupId: b,
                    userId: c
                }),
                g.resolve(a)
            }),
            g.promise
        }
        function F(b) {
            var c = {
                method: "pinGroup",
                group_id: b
            };
            return a.post("groups", c).success(function(a, b) {
                x(a.data),
                qa.trigger("groupsUpdated")
            })
        }
        function G(b) {
            var c = {
                method: "unpinGroup",
                group_id: b
            };
            return a.post("groups", c).success(function(a, c) {
                wa.get(b).unset("pinned_at"),
                x(a.data),
                qa.trigger("groupsUpdated")
            })
        }
        function H(b) {
            var c = {
                method: "getGroupsInfo",
                group_name: b
            }
              , d = a.post("groups", c);
            return d
        }
        function I(b) {
            var d = {
                method: "requestToJoinGroup",
                group_id: b
            }
              , e = a.post("groups", d).success(function(a, d) {
                a.type && (V(a, {
                    groupId: b,
                    change: "reqToJoinGroup"
                }),
                ea(a, {
                    groupId: b,
                    userId: c.user_id
                }))
            });
            return e
        }
        function J(b, c, d) {
            var e = {
                method: "inviteUsers",
                group_id: b,
                emails: c
            };
            return d && (e.message = d),
            a.post("invite", e)
        }
        function K(a, b) {
            return a.updateGroupDetails(b).success(function(c, d) {
                c.type && (b.hasOwnProperty("notificationSettings") || b.hasOwnProperty("hideFromFeedForThisUser") || V(c, {
                    groupId: a.get("id")
                }),
                b.hasOwnProperty("hideFromFeedForThisUser") && ga(a.get("id"), b.hideFromFeedForThisUser, !1));
            })
        }
        function L(b) {
            var c = {
                method: "deleteGroup",
                groupId: b
            };
            return a.postx("groups", c).then(function(a) {
                1 == a.data.type && X(a, {
                    groupId: b
                })
            })
        }
        function M(a, b) {
            return a.pinContentToGroup(b).success(function(b, c) {
                b.type && V(b, {
                    groupId: a.get("id")
                })
            })
        }
        function N(a, b) {
            return a.unpinContentFromGroup(b).success(function(b, c) {
                b.type && V(b, {
                    groupId: a.get("id")
                })
            })
        }
        function O(a, b, c) {
            return a.editPinnedContentInGroup(b, c).success(function(b, c) {
                b.type && V(b, {
                    groupId: a.get("id")
                })
            })
        }
        function P(a, b) {
            return a.revokeGroupAdminPrivileges(b).success(function(b, c) {
                b.type && V(b, {
                    groupId: a.get("id")
                })
            })
        }
        function Q(a, b) {
            return a.makeMemberAsGroupAdmin(b).success(function(b, c) {
                b.type && V(b, {
                    groupId: a.get("id")
                })
            })
        }
        function R(a, b, c, d) {
            return a.updateGroupJoinReqStatus(b, c, d).success(function(b, c) {
                b.type && ca(b, {
                    groupId: a.get("id")
                })
            })
        }
        function S(a, b, c) {
            return a.inviteUsersToGroup(b, c).success(function(b, c) {
                b.type && Z(b, {
                    groupId: a.get("id")
                })
            })
        }
        function T(a, b) {
            return a.removeMemberFromGroup(b).success(function(c, d) {
                c.type && aa(c, {
                    groupId: a.get("id"),
                    userId: b
                })
            })
        }
        function U(a, b) {
            var c = a.hideFromFeedForThisUser(b);
            return c.success(function(c, d) {
                c.type && ga(a.get("id"), b, !1)
            }),
            c
        }
        function V(a, b) {
            W(b, !1),
            h.sendAccountDataChangeNotification(i.GROUP_MODIFIED, b)
        }
        function W(a, b) {
            b && qa.trigger("groupModifiedByRemoteUser", a)
        }
        function X(a, b) {
            Y(b, !1),
            h.sendAccountDataChangeNotification(i.GROUP_DELETED, b)
        }
        function Y(a, b) {
            b ? qa.trigger("groupDeletedByRemoteUser", a.groupId) : qa.trigger("groupDeleted", a.groupId)
        }
        function Z(a, b) {
            $(b, !1),
            h.sendAccountDataChangeNotification(i.USERS_INVITED_TO_GROUP, b)
        }
        function $(a, b) {
            b && qa.trigger("usersInvitedToGroupByRemoteUser", a.groupId)
        }
        function aa(a, b) {
            ba(b, !1),
            h.sendAccountDataChangeNotification(i.USER_REMOVED_FROM_GROUP, b)
        }
        function ba(a, b) {
            b ? qa.trigger("userRemovedFromGroupByRemoteUser", a.groupId, a.userId) : qa.trigger("userRemovedFromGroup", a.groupId, a.userId)
        }
        function ca(a, b) {
            da(b, !1),
            h.sendAccountDataChangeNotification(i.GROUP_JOIN_REQ_STATUS_UPDATED, b)
        }
        function da(a, b) {
            b && qa.trigger("groupJoinReqStatusUpdatedByRemoteUser", a.groupId)
        }
        function ea(a, b) {
            fa(b, !1),
            h.sendAccountDataChangeNotification(i.GROUP_JOIN_REQ_SENT, b)
        }
        function fa(a, b) {
            b ? qa.trigger("groupJoinReqSentByRemoteUser", a.groupId, a.userId) : qa.trigger("groupJoinReqSent", a.groupId, a.userId)
        }
        function ga(a, b, c) {
            qa.trigger("toggledShowHidePostsInFeed", a, b, c),
            c || oa(va, {
                groupId: a,
                hideFromFeedForThisUser: b
            })
        }
        function ha() {
            qa.trigger("relevanciesFetched")
        }
        function ia(b) {
            var c = {
                method: "getGroupsDirectory"
            };
            return b && (c.account_data_revision_no = b),
            a.post("groups", c)
        }
        function ja(b, c) {
            var d = {
                method: "updateGroupDetails",
                group_id: b,
                notification_settings: {
                    email: c
                }
            };
            return a.post("groups", d)
        }
        function ka(b, c) {
            var d = {
                method: "updateGroupDetails",
                group_id: b,
                notification_settings: {
                    mobile: c
                }
            };
            return a.post("groups", d)
        }
        function la(b, c, d) {
            var e = {
                method: "updateGroupJoinRequestStatus",
                group_id: b,
                group_join_req_id: c,
                status: d
            };
            return a.post("groups", e).success(function(a, c) {
                a.type && ca(a, {
                    groupId: b
                })
            })
        }
        function ma() {
            return a.get("admin/groups?method=getAllCompanyGroups")
        }
        function na(a) {
            if (a.notification.data && a.notification.data.userId === c.getUserId() && a.notification.type === k.USER_GROUP_SETTINGS_UPDATED) {
                console.log("RECEIVED: RTCNotification.USER_GROUP_SETTINGS_UPDATED");
                var b = a.notification.data;
                b.type === va && ga(b.data.groupId, b.data.hideFromFeedForThisUser, !0)
            }
        }
        function oa(a, b) {
            var d = new k;
            d.type = k.USER_GROUP_SETTINGS_UPDATED,
            d.data = {
                userId: c.getUserId(),
                type: a,
                data: b
            },
            ua.send(d),
            console.log("SENT: RTCNotification.USER_GROUP_SETTINGS_UPDATED")
        }
        function pa() {
            ua = l.get("rtcNotificationManager"),
            ua.addListener(f.rtc.PubsubEvents.NOTIFICATION_RECEIVE, na)
        }
        var qa = {};
        _.extend(qa, Backbone.Events);
        var ra, sa, ta, ua, va = 1, wa = new Backbone.Collection([],{
            model: g
        }), xa = new Backbone.Collection([],{
            model: g
        }), ya = new Backbone.Collection([],{
            model: g
        }), za = new Backbone.Collection([],{
            model: g
        }), Aa = {}, Ba = !1, Ca = 1, Da = "USR_GRPS", Ea = !0, Fa = null ;
        return b.on("accountDataRevisionNoChanged", function() {
            p(!0).then(function(a) {
                console.log("JK: triggering groupsUpdated event"),
                qa.trigger("groupsUpdated")
            })
        }),
        h.on("groupModifiedByRemoteUser", function(a) {
            W(a, !0)
        }),
        h.on("groupDeletedByRemoteUser", function(a) {
            Y(a, !0)
        }),
        h.on("usersInvitedToGroupByRemoteUser", function(a) {
            $(a, !0)
        }),
        h.on("userRemovedFromGroupByRemoteUser", function(a) {
            ba(a, !0)
        }),
        h.on("groupJoinReqStatusUpdatedByRemoteUser", function(a) {
            da(a, !0)
        }),
        h.on("groupJoinReqSentByRemoteUser", function(a) {
            fa(a, !0)
        }),
        e.on("relevanciesFetched", ha),
        qa.getGroups = p,
        qa.getPublishableGroups = s,
        qa.getListableGroups = t,
        qa.getSearchableGroups = u,
        qa.fillRelevanciesInListableGroups = v,
        qa.getGroup = A,
        qa.findGroupHavingName = C,
        qa.createGroup = D,
        qa.removeUserFromGroup = E,
        qa.fillGroupsUnreadCounts = w,
        qa.pinGroup = F,
        qa.unpinGroup = G,
        qa.getGroupInfo = H,
        qa.reqToJoinGroup = I,
        qa.getGroup_promise = y,
        qa.inviteUsersToGroup = J,
        qa.updateGroupDetails = K,
        qa.deleteGroup = L,
        qa.pinContentToGroup = M,
        qa.unpinContentFromGroup = N,
        qa.editPinnedContentInGroup = O,
        qa.revokeGroupAdminPrivileges = P,
        qa.makeMemberAsGroupAdmin = Q,
        qa.updateGroupJoinReqStatus = R,
        qa.inviteUsersToGroupRTC = S,
        qa.removeMemberFromGroup = T,
        qa.getGroupName = B,
        qa.getGroupsDirectory = ia,
        qa.updateGroupEmailNotification = ja,
        qa.updateGroupMobileNotification = ka,
        qa.updateGrpJoinReqStatus = la,
        qa.getGroupFromServerIfNotAvailableLocally = z,
        qa.getGroupsFromServer = r,
        qa.getCompanyGroups = ma,
        qa.toggleShowHidePostsInFeed = U,
        qa.initRTC = pa,
        qa
    }
    ]),
    b.module("convoApp").controller("FeedRightPanelCtrl", ["$scope", "AppLinks", "$location", "alertsService", "accountInfo", "Users", "bannerService", "userInfo", "config", "AppLinks", "$filter", function(a, b, c, d, e, f, g, h, i, b, j) {
        a.userInfo = h,
        a.thisUserRole = h.userRole,
        a.twitterIntegrationsLink = j("getResourceLinkUrl")(100, [{
            uid: 0,
            type: "100"
        }, {
            uid: "2",
            type: "AddTwitterIntegration"
        }], null , "Add Twitter Integration"),
        a.gmailIntegrationsLink = j("getResourceLinkUrl")(100, [{
            uid: 0,
            type: "100"
        }, {
            uid: "2",
            type: "AddGmailIntegration"
        }], null , "Add Gmail Integration"),
        a.dropboxIntegrationsLink = j("getResourceLinkUrl")(100, [{
            uid: 0,
            type: "100"
        }, {
            uid: "2",
            type: "AddDropboxIntegration"
        }], null , "Add Dropbox Integration"),
        a.gDriveIntegrationsLink = j("getResourceLinkUrl")(100, [{
            uid: 0,
            type: "100"
        }, {
            uid: "2",
            type: "AddGdriveIntegration"
        }], null , "Add Google Drive Integration"),
        a.boxIntegrationsLink = j("getResourceLinkUrl")(100, [{
            uid: 0,
            type: "100"
        }, {
            uid: "2",
            type: "AddBoxIntegration"
        }], null , "Add Box Integration"),
        a.salesForceIntegrationsLink = "https://zapier.com/app/min/1243/start",
        a.$broadcast("render"),
        a.adminSettingsFlexURL = i.FLEX_APP_URL + b.linkToUrl(b.newActionLink_flexFormat("manageAccount", "Manage Network"), !0),
        a.openDownloadAppsModal = function() {
            var a = "home/components/downloadAppsModal/downloadAppsModal.tpl.html"
              , b = "DownloadAppsModalCtrl";
            d.customModal(a, b, null , "download-apps-modal-wrapper")
        }
        ,
        a.openIntegrationsPage = function() {
            var a = b.newResourceLink("100", [{
                uid: 0,
                type: "100"
            }], null , "Integrations")
              , d = b.linkToUrl(a);
            c.path(d.slice(1))
        }
    }
    ]),
    b.module("convoApp").controller("HomeLeftPanelCtrl", ["$scope", "Groups", "$rootScope", "AppLinks", "Filters", "FilterTypes", "userInfo", "alertsService", "serverPingService", "directsService", "$location", "Users", "User", "usersGroupsListProvider", "$filter", "homeViewStateInfo", "feedDirtyInfo", "mixpanelService", "onboardingService", "Contacts", "advSearchService", "$timeout", "searchService", function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w) {
        function x() {
            a.activeFilter = null ,
            a.filteredGroupId = null ;
            var b = c.filterInfo;
            if (b.filterApplied && b.filterLink.filter) {
                if (1 == b.filterLink.filter.filters.length) {
                    var d = b.filterLink.filter.filters[0];
                    d.type == f.TO ? (a.filteredGroupId = d.value,
                    d.value == a.thisUserId && (a.activeFilter = a.mentionsFilter)) : d.type == f.IN && (d.value == f.IN_STARRED ? a.activeFilter = a.starredFilter : d.value == f.IN_DRAFTS ? a.activeFilter = a.draftsFilter : d.value == f.IN_TRASH && (a.activeFilter = a.trashFilter))
                }
            } else
                a.activeFilter = a.newsFeedFilter;
            a.activeFilter === a.newsFeedFilter && (a.showFeedDirtyDot = !1,
            q.setIsDirty(!1)),
            a.$broadcast("render")
        }
        function y() {
            b.getListableGroups().then(function() {
                b.fillRelevanciesInListableGroups(!0).then(function(b) {
                    N = b.length;
                    var c = b.sortBy(function(a) {
                        return -a.get("rank")
                    });
                    c = _.sortBy(c, function(a) {
                        return a.get("pinned_at")
                    }),
                    a.groupsArray = new Backbone.Collection(c),
                    z(),
                    a.$broadcast("render"),
                    a.$broadcast("render:boRepeat:leftPanelGroupsList")
                })
            })
        }
        function z() {
            a.numberOfPinnedGroups = 0,
            a.privateGroupsArray = new Backbone.Collection,
            a.publicGroupsArray = new Backbone.Collection;
            for (var b = 0; b < a.groupsArray.length; b++) {
                var c = a.groupsArray.at(b)
                  , d = c.get("id");
                c.get("pinned_at") && (a.numberOfPinnedGroups += 1),
                B(c, d);
                var e = c.get("access");
                "SECRET" == e || "PRIVATE" == e ? (a.privateGroupsArray.add(c),
                O += 1) : "PUBLIC" == e && (a.publicGroupsArray.add(c),
                P += 1)
            }
            a.MAX_GROUPS_TO_DISPLAY = a.numberOfPinnedGroups > a.MAX_GROUPS_TO_DISPLAY ? a.numberOfPinnedGroups : a.MAX_GROUPS_TO_DISPLAY
        }
        function A() {
            r.trackEvent(r.CLICK_IN_LEFT_MENU, {
                Type: "Group Dropdown"
            })
        }
        function B(c, e) {
            if (a.menuOptions[e] = {
                type: "circleLessChevron",
                wrapperClass: "wrapper",
                onMenuOpen: A,
                options: []
            },
            a.menuOptions[e].options.push({
                label: "Manage group settings",
                url: G(c)
            }),
            c.get("is_admin") || 1 == c.get("membersCanInvite") || g.isAdminMode() ? a.menuOptions[e].options.push({
                label: "Invite users to group",
                callback: function() {
                    H(c)
                }
            }) : a.menuOptions[e].options.push({
                label: "View members",
                callback: function() {
                    var a = d.newResourceLink("9", [{
                        uid: c.get("id"),
                        type: "22"
                    }, {
                        uid: "2",
                        type: "GroupMembers"
                    }], null , c.get("title") + " (Members)");
                    k.url(d.linkToUrl(a, !0).slice(1))
                }
            }),
            g.isAdminMode() || c.isGroupAdmin(a.thisUserId) || 1 == c.get("integrationsEnabled") && g.userRole != g.USER_ROLE_GUEST) {
                var f = d.newResourceLink("9", [{
                    uid: c.get("id"),
                    type: "22"
                }, {
                    uid: "2",
                    type: "GroupIntegrations"
                }], null , "Group Integrations")
                  , h = d.linkToUrl(f);
                a.menuOptions[e].options.push({
                    label: "Manage integrations",
                    url: h,
                    callback: function() {
                        k.path(h.slice(1))
                    }
                })
            }
            (g.isAdminMode() || c.isGroupAdmin(a.thisUserId) || "1" == c.get("membersCanPinContent")) && a.menuOptions[e].options.push({
                label: "Add important posts or links",
                callback: function() {
                    C(c)
                }
            }),
            c.get("isMember") && a.menuOptions[e].options.push({
                isDivider: !0
            }, {
                label: "Notification preferences",
                callback: function() {
                    J(c)
                }
            });
            var i = {};
            i.callback = function() {
                "Show posts in my feed" == i.label ? b.toggleShowHidePostsInFeed(c, 0).success(function(a, b) {
                    a.type && (i.label = "Hide posts from my feed")
                }) : b.toggleShowHidePostsInFeed(c, 1).success(function(a, b) {
                    a.type && (i.label = "Show posts in my feed")
                })
            }
            ,
            "1" == c.get("isHidden") ? i.label = "Show posts in my feed" : i.label = "Hide posts from my feed",
            c.get("isMember") && a.menuOptions[e].options.push(i),
            c.get("pinned_at") && !g.isAdminMode() ? a.menuOptions[e].options.push({
                label: "Unpin from top of my group list",
                callback: function() {
                    E(e)
                }
            }) : g.isAdminMode() || a.menuOptions[e].options.push({
                label: "Pin to top of my group list",
                callback: function() {
                    D(e)
                }
            }),
            c.get("this_user_can_leave") && a.menuOptions[e].options.push({
                isDivider: !0
            }, {
                label: "Leave group",
                callback: function() {
                    I(c)
                }
            })
        }
        function C(a) {
            var c = {
                resource_name: function() {
                    return ""
                },
                resource_url: function() {
                    return ""
                },
                provided_desc: function() {
                    return "Paste a link to a Convo post or an external website to pin it to the top of the group."
                },
                title: function() {
                    return !1
                },
                btnTitle: function() {
                    return !1
                },
                source: function() {
                    return "no_suggestion"
                }
            }
              , d = "home/groupView/rightPanelWidgets/cnvAddPinContentModal.tpl.html"
              , e = "cnvAddPinContentModalCtrl"
              , f = h.customModal(d, e, c);
            f.result.then(function(c) {
                b.pinContentToGroup(a, c).success(function(a, b) {
                    a.type || (c.error = !0),
                    c.is_posting = !1
                }),
                c.is_posting = !0
            }, function() {})
        }
        function D(a) {
            b.pinGroup(a).then(function() {
                y()
            })
        }
        function E(a) {
            b.unpinGroup(a).then(function() {
                y()
            })
        }
        function F(b) {
            a.directsUnreadCount = b,
            a.$broadcast("render")
        }
        function G(a) {
            var b = d.newResourceLink("9", [{
                uid: a.get("id"),
                type: "22"
            }, {
                uid: "2",
                type: "GroupSettings"
            }], null , a.get("title") + " (Settings)");
            return d.linkToUrl(b, !0)
        }
        function H(a) {
            t.initContactsInviteModal({
                invite_via: "Invite_Dialog",
                include_off_domain: !0,
                get_details_first: !0,
                group: a
            })
        }
        function I(c) {
            var d = "Leave Group"
              , e = "Are you sure you want to leave this group? As the only group administrator, if you leave no one will be authorized to manage this group."
              , f = "You are an admin of this group. Are you sure you want to leave it?"
              , g = "Are you sure you want to leave this group?"
              , i = "Leave group"
              , j = "Cancel";
            c.isThisUserIsTheOnlyGroupAdmin(a.thisUserId) ? h.promptModal(d, e, function() {
                b.removeUserFromGroup(c.get("id"), a.thisUserId)
            }, null , i, j, null , !0) : c.get("is_admin") ? h.promptModal(d, f, function() {
                b.removeUserFromGroup(c.get("id"), a.thisUserId)
            }, null , i, j, null , !0) : h.promptModal(d, g, function() {
                b.removeUserFromGroup(c.get("id"), a.thisUserId)
            }, null , i, j, null , !0)
        }
        function J(a) {
            var b = "home/components/groupNotificationsWidget/templates/groupNotificationsModal.tpl.html"
              , c = "groupNotificationsModalCtrl"
              , d = "group-notification-preferences"
              , e = {
                Group: function() {
                    return a
                }
            };
            h.customModal(b, c, e, d)
        }
        function K() {
            var b = a.showFeedDirtyDot;
            return a.showFeedDirtyDot = a.activeFilter !== a.newsFeedFilter && q.getIsDirty(),
            a.showFeedDirtyDot !== b
        }
        function L() {
            K() && a.$broadcast("render")
        }
        a.groupsArray = null ,
        a.privateGroupsArray = null ,
        a.publicGroupsArray = null ,
        a.menuOptions = {};
        var M = 5;
        a.MAX_GROUPS_TO_DISPLAY = M,
        a.MAX_PRIVATE_GROUPS_TO_DISPLAY = M,
        a.MAX_PUBLIC_GROUPS_TO_DISPLAY = M,
        a.groupsCollapsed = !0,
        a.privateGroupsCollapsed = !0,
        a.publicGroupsCollapsed = !0,
        a.filteredGroupId = null ,
        a.numberOfPinnedGroups = 0,
        a.thisUserId = g.getUserId(),
        a.thisUserRole = g.userRole,
        a.userInfo = g,
        a.showFeedDirtyDot = !1;
        var N = 0
          , O = 0
          , P = 0
          , Q = !1;
        a.newsFeedFilter = {
            url: "#/feed"
        },
        a.mentionsFilter = {
            url: d.linkToUrl(d.newFilterLink(e.newANDFiltersChain([e.newFilter(f.TO, "me", "me")]), "Mentions"), !0)
        },
        a.starredFilter = {
            url: d.linkToUrl(d.newFilterLink(e.newANDFiltersChain([e.newFilter(f.IN, f.IN_STARRED, f.IN_STARRED)]), "Starred"), !0)
        },
        a.draftsFilter = {
            url: d.linkToUrl(d.newFilterLink(e.newANDFiltersChain([e.newFilter(f.IN, f.IN_DRAFTS, f.IN_DRAFTS)]), "Drafts"), !0)
        },
        a.trashFilter = {
            url: d.linkToUrl(d.newFilterLink(e.newANDFiltersChain([e.newFilter(f.IN, f.IN_TRASH, f.IN_TRASH)]), "Trash"), !0)
        },
        a.activeFilter = null ,
        b.on("toggledShowHidePostsInFeed", function(a, c, d) {
            if (d) {
                var e = b.getGroup(a);
                e && (e.setIsHidden(Boolean(c)),
                B(e, a))
            }
        }),
        a.toggleGroupsView = function() {
            a.groupsCollapsed = !a.groupsCollapsed,
            a.groupsCollapsed ? a.MAX_GROUPS_TO_DISPLAY = a.numberOfPinnedGroups > M ? a.numberOfPinnedGroups : M : a.MAX_GROUPS_TO_DISPLAY = N,
            a.$broadcast("render"),
            a.$broadcast("render:boRepeat:leftPanelGroupsList")
        }
        ,
        a.togglePrivateGroupsView = function() {
            a.privateGroupsCollapsed = !a.privateGroupsCollapsed,
            a.privateGroupsCollapsed ? a.MAX_PRIVATE_GROUPS_TO_DISPLAY = M : a.MAX_PRIVATE_GROUPS_TO_DISPLAY = O,
            a.$broadcast("render"),
            a.$broadcast("render:boRepeat:leftPanelGroupsList")
        }
        ,
        a.togglePublicGroupsView = function() {
            a.publicGroupsCollapsed = !a.publicGroupsCollapsed,
            a.publicGroupsCollapsed ? a.MAX_PUBLIC_GROUPS_TO_DISPLAY = M : a.MAX_PUBLIC_GROUPS_TO_DISPLAY = P,
            a.$broadcast("render"),
            a.$broadcast("render:boRepeat:leftPanelGroupsList")
        }
        ,
        a.onNewsFeedFilterMouseDown = function() {
            a.activeFilter == a.newsFeedFilter && c.$broadcast("pollFeedRequest", !0, "USER_ACTION: clicked news feed again"),
            w.clearSearch(),
            u.closePanelWithoutAnim()
        }
        ,
        a.createGroup = function(a, c, d) {
            var e = "home/components/createGroupWidget/createGroupModal.tpl.html"
              , f = "createGroupModalCtrl"
              , g = "group-create-details"
              , i = {
                createPublic: function() {
                    return c
                },
                createPrivate: function() {
                    return a
                },
                sourceGS: function() {
                    return Q
                }
            }
              , j = h.customModal(e, f, i, g);
            Q = d,
            j.result.then(function(a) {
                b.getGroups(!0).then(function(b) {
                    y(),
                    s.checkState() ? s.checkState() && 0 == s.getChecklist().create_a_group_done : k.url(o("idToFilterUrlForApp")(a).slice(1))
                })
            }, function() {
                d && s.onboardingDismissedCallback()
            })
        }
        ,
        a.resetDirectsCount = function() {
            if (a.directsUnreadCount > 0) {
                var b = j.resetDirectsCount();
                b.then(function(b, c) {
                    a.directsUnreadCount = 0,
                    a.$broadcast("render")
                })
            }
        }
        ,
        a.openIntegrationsPage = function() {
            var a = d.newResourceLink("100", [{
                uid: 0,
                type: "100"
            }], null , "Integrations")
              , b = d.linkToUrl(a, !0);
            k.url(b.slice(1))
        }
        ,
        a.openGroupsDirectory = function() {
            var a = d.newResourceLink("22", [{
                uid: "1",
                type: "26"
            }, {
                uid: "2",
                type: "AllGroups"
            }], null , "Groups Directory (All Groups)")
              , b = d.linkToUrl(a, !0);
            k.url(b.slice(1))
        }
        ,
        a.trackClick = function(a) {
            r.trackEvent(r.CLICK_IN_LEFT_MENU, {
                Type: a
            })
        }
        ,
        b.on("groupsUpdated", y),
        b.on("relevanciesFetched", y),
        y(),
        i.on("directsUnreadCountUpdate", F),
        q.on("feedDirty", L),
        q.on("feedDirtyClear", L),
        a.$on("createGroupModalCtrl:InvitationModalClosed", function() {
            if (s.checkState() && 0 == s.getChecklist().create_a_group_done) {
                var b = s.recordAction("create_a_group_done");
                b.then(function(b, c) {
                    s.setLastPlayedStep("create_group"),
                    a.$emit("cnvOnboarding:updateOnboardingChecklist", Q ? !1 : !0)
                })
            }
        }),
        c.$on("filterChange", x),
        c.$on("cnvOnboarding:openCreateGroupModal", function() {
            a.createGroup(null , !0, !0)
        }),
        x()
    }
    ]),
    b.module("convoApp").controller("HomeRightPanelCtrl", ["$scope", "homeViewStateInfo", "userInfo", "onboardingService", function(a, b, c, d) {
        a.userInfo = c,
        a.viewState = b.getState(),
        a.onboardingStateActive = d.checkState(),
        a.$on("homeViewStateChange", function() {
            a.viewState = b.getState()
        }),
        d.on("cnvOnboarding:stateChange", function() {
            a.onboardingStateActive = d.checkState()
        })
    }
    ]),
    b.module("convoApp").directive("cnvHome", [function() {
        return {
            restrict: "AE",
            priority: 0,
            scope: !1,
            templateUrl: "home/home.tpl.html",
            compile: function(a, b, c) {
                return function(a, b, c, d) {}
            },
            controller: ["$scope", "homeViewStateInfo", "$rootScope", "Filters", function(a, b, c, d) {
                function e() {
                    a.activeFilter = null ;
                    var b = a.filterInfo;
                    b.filterApplied ? a.feed_title = b.filterLink.title : a.feed_title = "My Feed"
                }
                function f() {
                    var b = a.filterInfo;
                    if (b.filterApplied && b.filterLink.filter) {
                        var c = d.hasAnyUserFilter(b.filterLink.filter.filters)
                          , e = d.hasAnyGroupFilter(b.filterLink.filter.filters)
                          , f = d.hasAnyTextFilter(b.filterLink.filter.filters);
                        !e && !c || f ? a.is_search = !0 : a.is_search = !1
                    } else
                        a.is_search = !1
                }
                var g = a.tab.appContCtrl.appCtrl;
                g.activated = function() {
                    console.log("home tab activated")
                }
                ,
                g.initialized = !0,
                b.init(a),
                a.feed_title = "News Feed",
                a.newsFeedFilter = {
                    url: "#/feed"
                },
                a.is_search = !1,
                a.$on("openEditProfileModal", function(b, c) {
                    a.$broadcast("openEditProfileWidget", c)
                }),
                a.$on("reRenderUserView", function(b) {
                    a.$broadcast("reRenderUserProfile")
                }),
                a.$on("filterChange", e),
                e(),
                a.$on("userUnfollowed", function() {
                    a.$broadcast("reRenderUserView")
                }),
                a.$on("userFollowed", function() {
                    a.$broadcast("reRenderUserView")
                }),
                a.$on("reqToJoinGroupSuccessful", function() {
                    a.$broadcast("grpJoinReqSuccessful")
                }),
                a.$on("homeViewStateChange", f)
            }
            ]
        }
    }
    ]),
    b.module("convoApp").controller("cnvAddTagsWidgetCtrl", ["$scope", "$modalInstance", "tags", "hashtagsProvider", "$q", "Feed", "utils", function(a, b, c, d, e, f, g) {
        var h = c.split(",");
        a.tags = [];
        for (var i = 0; i < h.length; i++)
            if ("" != h[i]) {
                var j = "#" == h[i].charAt(0) ? h[i] : "#" + h[i];
                a.tags.push({
                    id: g.generateHash(j),
                    label: j,
                    locked: !0
                })
            }
        a.getHashtags = function(a) {
            var b = e.defer();
            return b.resolve(d.getHashtagsDropdownItems("#" + a)),
            b.promise
        }
        ,
        a.onSubmit = function() {
            b.close(a.tags)
        }
        ,
        a.dismiss = function() {
            b.dismiss()
        }
    }
    ]),
    b.module("convoApp").controller("cnvFeedLinkThis", ["$scope", "$modalInstance", "keyword", "feedId", "feedLikeThisService", "$modalInstance", "$sce", "utils", function(a, b, c, d, e, b, f, g) {
        function h(b) {
            a.keywords.length = 0;
            for (var c = 0; c < b.length; c++)
                a.keywords.push({
                    id: g.generateHash(b[c]),
                    label: b[c],
                    readonly: !1
                });
            a.currentKeywords = a.keywords
        }
        a.feedLikeThisData = {},
        a.feedLikeThisSuggestions = [],
        a.showBody = !0,
        a.processing = !0,
        a.loadMore = "Load More",
        a.top_terms = "",
        a.currentKeywords = c,
        a.feed = d,
        a.keywords = [];
        var i = 0;
        console.log("////////////////////////////////////////////Feed Like This CONTROLLER/////////////////////////////////////"),
        console.log(c),
        console.log(d),
        a.dismiss = function() {
            b.dismiss()
        }
        ,
        a.loadData = function(b, c, d, g) {
            a.loadMore = "Please Wait",
            b || (b = a.keywords),
            1 == d && (a.feedLikeThisSuggestions = [],
            i = 0);
            for (var j = [], k = 0; k < b.length; k++)
                j.push(b[k].label);
            a.currentKeywords = b,
            promise = e.getFeeds(j.join(" "), c, i, g),
            console.log(promise),
            promise.then(function(b) {
                a.feedLikeThisData = b.data,
                a.feedLikeThisSuggestions = a.feedLikeThisSuggestions.concat(b.data.suggestions),
                h(a.feedLikeThisData.top_terms),
                setTimeout(function() {
                    for (a.top_terms = "",
                    k = 0; k < a.feedLikeThisData.top_terms.length; k++)
                        a.top_terms += "<span class='high" + (k + 1) + "'>",
                        a.top_terms += a.feedLikeThisData.top_terms[k] + "</span>",
                        k < a.feedLikeThisData.top_terms.length - 1 ? a.top_terms += ", " : a.top_terms += " ",
                        $("div.fetchMore").highlight(a.feedLikeThisData.top_terms[k], {
                            element: "em",
                            className: ("high" + (k + 1)).toString()
                        });
                    for (a.rest_terms = "",
                    k = 0; k < a.feedLikeThisData.rest_terms.length; k++)
                        a.rest_terms += "<span class='restTerms'>",
                        a.rest_terms += a.feedLikeThisData.rest_terms[k] + "</span>",
                        k < a.feedLikeThisData.rest_terms.length - 1 ? a.rest_terms += ", " : a.rest_terms += " ",
                        $("div.fetchMore").highlight(a.feedLikeThisData.rest_terms[k], {
                            element: "em",
                            className: "restTerms"
                        });
                    a.top_terms_sec = f.trustAsHtml(a.top_terms),
                    a.rest_terms_sec = f.trustAsHtml(a.rest_terms),
                    a.$$phase || a.$digest()
                }, 0),
                a.processing = !1,
                i += 50,
                a.loadMore = "Load More"
            })
        }
        ,
        a.onEscKeyPressInToField = function() {}
        ,
        a.onItemAddedInToField = function(a) {}
        ,
        a.onItemRemovedInToField = function(a) {}
        ,
        a.onCtrlOrCmdEnterPressInTextEditor = function() {}
        ,
        a.getShareWithDropdownItems = function(a) {}
        ,
        a.loadData([{
            label: a.currentKeywords
        }], a.feed, !1, !1)
    }
    ]),
    b.module("convoApp").directive("cnvGroupsFilterList", ["Groups", "$compile", "$rootScope", function(a, b, c) {
        return {
            restrict: "A",
            scope: {},
            controller: ["$scope", function(d) {
                function e() {
                    var a = c.filter_info;
                    a.filter_applied ? d.filtered_group_id = a.filter.filters[0].value : d.filtered_group_id = null 
                }
                d.filtered_group_id = null ,
                d.getGroupsData = function() {
                    d.groups = [],
                    a.getAccessibleRegularAndStreamGroupsSortedByRelevancy().then(function(a) {
                        d.groups = a
                    })
                }
                ,
                d.applyFilterToTop3 = function(a, b) {}
                ,
                d.expandGroupList = function() {
                    0 != $("div.group_list").length || d.isAlreadyRemoved ? d.isAlreadyRemoved = !1 : $("div.expand").append(b('<div class="group_list" cnv-groups-filter-expand-list></div>')(d))
                }
                ,
                c.$on("filterChange", e)
            }
            ],
            link: function(a, b, c) {
                a.getGroupsData()
            },
            templateUrl: "home/components/cnvGroupsFilterList/cnvGroupsFilterList.tpl.html"
        }
    }
    ]).directive("cnvGroupsFilterExpandList", function() {
        return {
            restrict: "A",
            controller: ["$scope", function(a) {
                a.setFocusToInputField = function() {
                    $("div.group_list").find("input").focus(),
                    $("div.group_list").find("input").text(""),
                    a.searchGroupText = ""
                }
                ,
                a.applyFilter = function(b, c) {
                    $("div.group_list").length > 0 && $("div.group_list").remove(),
                    a.isAlreadyRemoved = !0
                }
                ,
                a.highlightItemOnKeyup = function(b) {
                    if (27 == b.keyCode && $("div.group_list").length > 0 && $("div.group_list").remove(),
                    13 == b.keyCode && a.prevHighlightedItem) {
                        $(a.prevHighlightedItem).find("a").attr("href");
                        $(a.prevHighlightedItem).find("a").click(),
                        $("div.group_list").length > 0 && $("div.group_list").remove()
                    }
                    (a.keypress || 8 == b.keyCode) && (a.keypress ? (a.prevHighlightedItem ? ($(a.prevHighlightedItem).css("background-color", "transparent"),
                    a.searchGroupText && a.searchGroupText.length > 0 && $("div.group_list").find("tr:nth-child(2)").css("background-color", "#7eced1"),
                    a.prevHighlightedItem = $("div.group_list").find("tr:nth-child(2)")) : (a.searchGroupText && a.searchGroupText.length > 0 && $("div.group_list").find("tr:nth-child(2)").css("background-color", "#7eced1"),
                    a.prevHighlightedItem = $("div.group_list").find("tr:nth-child(2)")),
                    a.keypress = !1) : a.prevHighlightedItem && (a.searchGroupText && a.searchGroupText.length > 0 ? ($(a.prevHighlightedItem).css("background-color", "transparent"),
                    $("div.group_list").find("tr:nth-child(2)").css("background-color", "#7eced1"),
                    a.prevHighlightedItem = $("div.group_list").find("tr:nth-child(2)")) : ($(a.prevHighlightedItem).css("background-color", "transparent"),
                    a.prevHighlightedItem = null )))
                }
                ,
                a.highlightItemOnKeypress = function(b) {
                    13 != b.keyCode && (a.keypress = !0)
                }
                ,
                a.highlightItemOnKeydown = function(b) {
                    38 == b.keyCode && (b.preventDefault(),
                    a.prevHighlightedItem && 0 == $(a.prevHighlightedItem).prev("tr").find("input").length ? ($(a.prevHighlightedItem).css("background-color", "transparent"),
                    $(a.prevHighlightedItem).prev().css("background-color", "#7eced1"),
                    $(a.prevHighlightedItem).prev().scrollintoview({
                        duration: 10,
                        direction: "vertical"
                    }),
                    a.prevHighlightedItem = $(a.prevHighlightedItem).prev("tr")) : a.prevHighlightedItem && $(a.prevHighlightedItem).prev().scrollintoview({
                        duration: 10,
                        direction: "vertical"
                    })),
                    40 == b.keyCode && (b.preventDefault(),
                    a.prevHighlightedItem && $(a.prevHighlightedItem).next("tr").find("td").length > 0 ? ($(a.prevHighlightedItem).css("background-color", "transparent"),
                    $(a.prevHighlightedItem).next().css("background-color", "#7eced1"),
                    $(a.prevHighlightedItem).next().scrollintoview({
                        duration: 10,
                        direction: "vertical"
                    }),
                    a.prevHighlightedItem = $(a.prevHighlightedItem).next("tr")) : null  == a.prevHighlightedItem && ($("div.group_list").find("tr:nth-child(2)").css("background-color", "#7eced1"),
                    a.prevHighlightedItem = $("div.group_list").find("tr:nth-child(2)")))
                }
            }
            ],
            link: function(b, c, d) {
                b.setFocusToInputField(),
                b.prevHighlightedItem = null ,
                b.iteration = 1,
                a.addEventListener("mousedown", function(a) {
                    0 == $(a.target).closest("div.group_list").length && $("div.group_list").length > 0 && $("div.group_list").remove()
                })
            },
            templateUrl: "home/components/cnvGroupsFilterList/cnvGroupsFilterExpandList.tpl.html"
        }
    }),
    b.module("convoApp").directive("cnvHomeCenterPanelFeedPinnedPostWidget", function() {
        return {
            restrict: "E",
            scope: !0,
            templateUrl: "home/components/cnvHomeCenterPanelFeedPinnedPostWidget/cnvHomeCenterPanelFeedPinnedPostWidget.tpl.html",
            controller: ["$scope", "Feed", "homeViewStateInfo", "userInfo", function(a, b, c, d) {
                function e() {
                    c.getState() === c.STATE_DEFAULT && (a.pinnedFeedItems = b.getPinnedItems(),
                    a.$broadcast("render"))
                }
                a.MINIMUM_PINS_TO_SHOW = 3,
                a.MAXIMUM_PINS_TO_SHOW = a.MINIMUM_PINS_TO_SHOW,
                a.showAll = !0,
                a.pinnedFeedItems = b.getPinnedItems(),
                a.userInfo = d;
                var f = null ;
                a.showAllPins = function() {
                    a.MAXIMUM_PINS_TO_SHOW = a.pinnedFeedItems.length,
                    a.showAll = !1,
                    a.$broadcast("render")
                }
                ,
                a.showFewerPins = function() {
                    a.MAXIMUM_PINS_TO_SHOW = a.MINIMUM_PINS_TO_SHOW,
                    a.showAll = !0,
                    a.$broadcast("render")
                }
                ,
                b.on("feedService:pinnedItemsUpdated", function(b) {
                    a.pinnedFeedItems = b,
                    a.$broadcast("render")
                }),
                a.$on("homeViewStateChange", e),
                a.$broadcast("render"),
                a.$on("cnvOnboarding:setOnboardingFeedData", function() {
                    f = a.pinnedFeedItems,
                    a.pinnedFeedItems = null ,
                    a.$broadcast("render")
                }),
                a.$on("cnvOnboarding:removeOnboardingFeedData", function() {
                    a.pinnedFeedItems = f,
                    a.$broadcast("render")
                }),
                a.$on("$destroy", function() {
                    b.off("feedService:pinnedItemsUpdated")
                })
            }
            ]
        }
    }),
    b.module("convoApp").directive("cnvHomeHeaderPanel", ["resourcesTabsManager", "alertsService", "AppLinks", "$location", "$rootScope", "onboardingService", "userInfo", "adminService", "bannerService", function(b, c, d, e, f, g, h, i, j) {
        return {
            restrict: "A",
            link: function(k, l, m) {
                function n(a) {
                    var b = "home/userView/centerPanelWidgets/profilePictureModal.tpl.html"
                      , d = "ProfilePictureModalCtrl"
                      , e = {
                        startWebcam: function() {
                            return !1
                        },
                        file: function() {
                            return a
                        }
                    }
                      , f = c.customModal(b, d, e, "cnvUserProfilePictureModal", !0);
                    f.result.then(function(a) {
                        k.$emit("userProfilePictureUpdated")
                    })
                }
                function o() {
                    q = [],
                    q.push({
                        label: k.user_info.first_name + " " + k.user_info.last_name,
                        subtext: k.user_info.email,
                        callback: k.openUserProfile
                    }, {
                        label: "Edit profile",
                        callback: k.editUserProfile
                    }, {
                        isDivider: !0
                    }, {
                        label: "Change your photo",
                        callback: k.openCombinedSetProfilePictureModal
                    }, {
                        label: "Notification preferences",
                        callback: function() {
                            var a = d.newResourceLink("12", [{
                                type: "9",
                                uid: 0
                            }, {
                                type: "notificationsSettings",
                                uid: 0
                            }], null , "Notification Settings")
                              , b = d.linkToUrl(a, !0);
                            e.url(b.slice(1))
                        }
                    }, {
                        isDivider: !0
                    }),
                    q.push({
                        label: "Settings",
                        callback: function() {
                            var a = d.newResourceLink("12", [{
                                type: "9",
                                uid: 0
                            }, {
                                type: "myAccountSettings",
                                uid: 0
                            }], null , "My account settings")
                              , b = d.linkToUrl(a, !0);
                            e.url(b.slice(1))
                        }
                    }),
                    h.isAdmin() && h.isAdminMode() ? q.push({
                        label: "Exit admin mode",
                        callback: k.exitAdminMode
                    }) : h.isAdmin() && q.push({
                        label: "Enter admin mode",
                        callback: k.enterAdminMode
                    }),
                    q.push({
                        label: "Sign Out",
                        callback: k.logoutUser
                    }),
                    k.userMenuDropdownCtrl.options = q
                }
                k.isAdminMode = h.isAdminMode(),
                k.userMenuDropdownCtrl = {},
                k.userMenuDropdownCtrl.options = [],
                k.onboardingStateActive = g.checkState();
                var p, q = k.userMenuDropdownCtrl.options, r = l.find(".network-logo-wrapper"), s = ".floating-panel-wrapper", t = ".menu-icon";
                a.setTimeout(function() {
                    p = l.find(".network-logo-container .name"),
                    b.isHomeTabSelected() || b.isSettingTabSelected() || w()
                }, 0);
                var u = function() {
                    r.css("background", "#2b2b2b"),
                    r.css("border-bottom", "1px solid #3f4142"),
                    p.css("color", "#fff")
                }
                  , v = function() {
                    r.css("background", "#2b2b2b"),
                    r.css("border-bottom", "1px solid #3f4142"),
                    p.css("color", "#fff")
                }
                  , w = function() {
                    r.css("background", "#ffffff"),
                    r.css("border-bottom", "1px solid #e5e5e5"),
                    p.css("color", "#2b2b2b")
                }
                  , x = l.find("#headerDpUploadInput");
                x.on("change", function(a) {
                    this.files.length > 0 && n(this.files[0])
                }),
                k.openDpFilePicker = function() {
                    x.click()
                }
                ,
                k.openCombinedSetProfilePictureModal = function() {
                    var a = "components/combinedSetProfilePictureModal/combinedSetProfilePictureModal.tpl.html"
                      , b = "CombinedSetProfilePictureModalCtrl"
                      , d = c.customModal(a, b, null , "combined-set-pic-modal");
                    d.result.then(function() {
                        k.$emit("userProfilePictureUpdated")
                    })
                }
                ,
                k.enterAdminMode = function() {
                    var a = i.switchToAdminMode();
                    j.showBanner_promise(a, "Switching to Admin Mode", "Switched to Admin Mode", "Error Switching to Admin Mode. Please try again.", !1, !1),
                    a.then(function(a) {
                        e.url("/feed"),
                        k.$emit("refetchFeed")
                    })
                }
                ,
                k.exitAdminMode = function() {
                    var a = i.exitAdminMode();
                    j.showBanner_promise(a, "Exiting Admin Mode", null , "Error exiting admin mode. Please try again.", !1, !1),
                    a.then(function(a) {
                        e.url("/feed"),
                        k.$emit("refetchFeed")
                    })
                }
                ,
                b.on("homeTabSelected", u),
                b.on("settingTabSelected", v),
                b.on("homeTabUnselected", w),
                k.user_info.on("userAccountEmailUpdated", o),
                h.on("userInfo:adminModeChanged", function() {
                    k.isAdminMode = h.isAdminMode(),
                    o()
                }),
                o(),
                f.$on("cnvHomeLeftPanel:fullMenuVisible", function() {}),
                f.$on("cnvHomeLeftPanel:fullMenuHidden", function() {});
                var y = function(a) {
                    var b = l.find(s)
                      , c = l.find(t);
                    b.is(a.target) || 0 !== b.has(a.target).length || c.is(a.target) || 0 !== c.has(a.target).length || (k.showFloatingColumn = !1,
                    k.$$phase || k.$digest(),
                    $(document).off("mouseup", y))
                }
                ;
                k.toggleFloatingColumn = function() {
                    k.showFloatingColumn = !k.showFloatingColumn,
                    k.showFloatingColumn ? $(document).on("mouseup", y) : $(document).off("mouseup", y)
                }
                ,
                k.$on("showHideHeaderFloatingColumn", function(a, b) {
                    k.showFloatingColumn = b,
                    k.$$phase || k.$digest(),
                    k.showFloatingColumn && $(document).on("mouseup", y)
                }),
                k.$on("$destroy", function() {
                    x.off("change")
                })
            },
            controller: ["$scope", "$filter", "$location", "AppLinks", "Filters", "FilterTypes", "$window", "$rootScope", "homeViewStateInfo", function(a, b, c, d, e, f, h, i, j) {
                a.showFloatingColumn = !1,
                a.openUserProfile = function(a) {
                    var b = {
                        url: d.linkToUrl(d.newFilterLink(e.newANDFiltersChain([e.newFilter(f.FROM, "me", "me")]), "User Profile"), !0)
                    };
                    c.url(decodeURIComponent(b.url.slice(1)))
                }
                ,
                a.editUserProfile = function() {
                    var a = {
                        url: d.linkToUrl(d.newFilterLink(e.newANDFiltersChain([e.newFilter(f.FROM, "me", "me")]), "User Profile"), !0)
                    };
                    c.url(decodeURIComponent(a.url.slice(1))).search("action", "editProfile"),
                    i.$broadcast("openEditProfileWidget")
                }
                ,
                a.logoutUser = function() {
                    a.$emit("userSignOutClick")
                }
                ,
                a.toggleDropdown = function() {
                    a.$broadcast("toggleCnvDropdown")
                }
                ,
                a.viewState = j.getState(),
                a.$on("homeViewStateChange", function() {
                    a.viewState = j.getState()
                }),
                g.on("cnvOnboarding:stateChange", function() {
                    a.onboardingStateActive = g.checkState()
                })
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvHomeLeftPanel", ["$rootScope", "$location", "$filter", function(a, b, c) {
        return {
            restrict: "E",
            scope: !1,
            templateUrl: "home/components/cnvHomeLeftPanel/cnvHomeLeftPanel.tpl.html",
            link: function(a, d, e) {
                var f = $(document).find(".network-logo-wrapper")
                  , g = d.find(".left-panel-wrapper-slim")
                  , h = d.find(".left-panel-wrapper-full")
                  , i = $(document).find(".app-wrapper")
                  , j = d.find(".private-grps-list > ul")
                  , k = d.find(".public-grps-list > ul");
                a.showFullMenu = !1,
                j.on("mousewheel DOMMouseScroll", function(a) {
                    var b = a.originalEvent.wheelDelta || -a.originalEvent.detail
                      , c = b > 0 ? "up" : "down"
                      , d = "up" == c && 0 == this.scrollTop || "down" == c && this.scrollTop == this.scrollHeight - this.offsetHeight;
                    d && a.preventDefault()
                }),
                k.on("mousewheel DOMMouseScroll", function(a) {
                    var b = a.originalEvent.wheelDelta || -a.originalEvent.detail
                      , c = b > 0 ? "up" : "down"
                      , d = "up" == c && 0 == this.scrollTop || "down" == c && this.scrollTop == this.scrollHeight - this.offsetHeight;
                    d && a.preventDefault()
                }),
                a.changeLocation = function(a) {
                    b.url(c("idToFilterUrlForApp")(a, "GROUP"))
                }
                ,
                a.$on("$destroy", function() {
                    j.off("mousewheel DOMMouseScroll"),
                    k.off("mousewheel DOMMouseScroll"),
                    f = null ,
                    g = null ,
                    h = null ,
                    i = null 
                })
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvHomeLeftPanelScrollHandler", [function() {
        return {
            restrict: "A",
            link: function(a, b, c) {
                var d = b.find(".left-panel-wrapper-full")
                  , e = b.find(".groupsItemsContainer")
                  , f = null 
                  , g = !1
                  , h = function(a, b) {
                    g || d.css("overflow-y", "auto");
                    var c = $(this).scrollTop();
                    if (0 === c && b > 0 || $(this)[0].scrollHeight - c == $(this).outerHeight() && 0 > b)
                        return void a.preventDefault();
                    if ($(a.target).is(".wrapper *, .wrapper"))
                        return void a.preventDefault();
                    var h = $(this);
                    e.find("ul > li > div.pull-right > .wrapper").filter(function() {
                        return "none" == $(this).css("display")
                    }).each(function(a, b) {
                        $(this).css("display", "")
                    }),
                    e.find("ul > li > div.pull-right > .wrapper").filter(function() {
                        return "block" == $(this).css("display")
                    }).each(function(b, c) {
                        0 == h.scrollTop() || f && f == a.offsetY || ($(this).css("display", "none"),
                        $(this).find(".dropdown-menu").is(":visible") && $(this).find(".dropdown-menu").hide())
                    }),
                    f = a.offsetY
                }
                  , i = function(a) {
                    g = !0,
                    d.css("overflow-y", "auto")
                }
                  , j = function(a) {
                    g = !1,
                    d.css("overflow-y", "hidden")
                }
                ;
                d.on({
                    "mousewheel DOMMouseScroll touchstart touchmove": h,
                    mouseenter: i,
                    mouseleave: j
                }),
                a.scrollTop = function() {
                    $("html, body").animate({
                        scrollTop: 0
                    }, {
                        duration: 400
                    })
                }
                ,
                a.$on("scrollTop", function() {
                    a.scrollTop()
                }),
                d[0].addEventListener("scroll", h, !0),
                a.$on("$destroy", function() {
                    d.off({
                        "mousewheel DOMMouseScroll touchstart touchmove": h,
                        mouseenter: i,
                        mouseleave: j
                    }),
                    d[0].removeEventListener("scroll", h, !0)
                })
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvInFeedFilterWidget", function() {
        return {
            restrict: "AE",
            templateUrl: "home/components/cnvInFeedFilterWidget/cnvInFeedFilterWidget.tpl.html",
            link: function(a, b, c) {},
            controller: ["$scope", "AppLinks", "FilterTypes", "homeViewStateInfo", "Filters", "usersGroupsListProvider", function(a, b, c, d, e, f) {
                function g() {
                    var a = d
                      , f = a.getState()
                      , g = a.getHasFilter()
                      , i = null ;
                    f === a.STATE_DEFAULT ? (i = {
                        description: ""
                    },
                    h.active = !0) : f === a.STATE_GROUP ? (i = a.getToFilter(),
                    h.active = !0) : f === a.STATE_USER && (i = a.getFromFilter(),
                    h.active = !0),
                    h.active && (h.filterLinkWithAll = b.linkToUrl(b.newFilterLink(e.newANDFiltersChain([i]), i.description), !0),
                    h.filterLinkWithFiles = b.linkToUrl(b.newFilterLink(e.newANDFiltersChain([i, e.newFilter(c.HAS, e.hasFilter.ALL_FILES, e.hasFilter.ALL_FILES)]), i.description), !0),
                    h.filterLinkWithImages = b.linkToUrl(b.newFilterLink(e.newANDFiltersChain([i, e.newFilter(c.HAS, e.hasFilter.IMAGES, e.hasFilter.IMAGES)]), i.description), !0),
                    g && g.description === e.hasFilter.ALL_FILES ? h.activeFilter = h.FILTER_TYPE_FILES : g && g.description === e.hasFilter.IMAGES ? h.activeFilter = h.FILTER_TYPE_IMAGES : h.activeFilter = h.FILTER_TYPE_ALL)
                }
                var h = a;
                h.filterLinkWithAll = "javascript:void(0);",
                h.filterLinkWithFiles = "javascript:void(0);",
                h.filterLinkWithImages = "javascript:void(0);",
                h.FILTER_TYPE_ALL = 1,
                h.FILTER_TYPE_FILES = 2,
                h.FILTER_TYPE_IMAGES = 3,
                h.activeFilter = null ,
                h.active = !1,
                h.$on("homeViewStateChange", g),
                g()
            }
            ]
        }
    }),
    b.module("convoApp").controller("cnvInviteTeammatesModalCtrl", ["$scope", "$modalInstance", "usersGroupsListProvider", "$q", "teammate_email", "showAutoComplete", "autoCompleteFieldLabelText", "autoCompleteItems", function(a, b, c, d, e, f, g, h) {
        a.title = "Invite your teammates",
        a.inviteTo = [],
        a.messageTxt,
        a.providedTeammateEmail = e,
        a.showAutoComplete = f,
        a.autoCompleteFieldLabelText = g,
        a.autoCompleteItems = h,
        a.providedTeammateEmail && a.inviteTo.push(a.providedTeammateEmail),
        a.getAutoCompleteUserItems = function(b, e) {
            var f = d.defer();
            return a.showAutoComplete && f.resolve(c.queryCustomList(a.autoCompleteItems, b, e + 4)),
            f.promise
        }
        ,
        a.cancel = function() {
            b.dismiss()
        }
        ,
        a.inviteTeammates = function() {
            b.close({
                inviteTo: a.inviteTo,
                messageText: a.messageTxt
            })
        }
        ,
        a.$broadcast("render")
    }
    ]),
    b.module("convoApp").directive("cnvLeftPanelGroupsList", ["utils", function(a) {
        return {
            restrict: "E",
            replace: !0,
            scope: !0,
            templateUrl: "home/components/cnvLeftPanelGroupsList/cnvLeftPanelGroupsList.tpl.html",
            controller: ["$scope", "Groups", "serverPingService", function(a, b, c) {
                function d() {
                    b.fillGroupsUnreadCounts(c.getGroupsUnreadCounts()).then(function(b) {
                        b && a.$broadcast("render")
                    })
                }
                c.on("groupsUnreadCountsUpdate", d),
                d(),
                a.renderItem = function() {
                    a.$broadcast("render")
                }
                ,
                a.resetUnreadCount = function(b) {
                    var c = a.groupsArray.get(b);
                    c.resetUnreadCount()
                }
            }
            ],
            link: function(b, c, d) {
                var e = null 
                  , f = function(b) {
                    var c = $(this)
                      , d = $(".wrapper", c)
                      , e = c.position();
                    d.css({
                        top: e.top,
                        left: e.left + (a.isIE() ? 168 : 175)
                    })
                }
                ;
                b.$on("render:boRepeat:leftPanelGroupsList", function() {
                    e && e.off("mouseover", f),
                    e = c.find("li.parent"),
                    e.on("mouseover", f)
                })
            }
        }
    }
    ]),
    b.module("convoApp").controller("cnvSharePostWidgetCtrl", ["$scope", "$modalInstance", "sharingInfo", "usersGroupsListProvider", "$q", "Feed", "preventProcessSharingInfo", "submitAnyway", function(a, b, c, d, e, f, g, h) {
        function i() {
            var b = !0
              , c = [];
            if (h)
                a.sharingInfo.length || (b = !1);
            else
                for (var d = 0, e = a.sharingInfo.length; e > d; ++d)
                    c.push(a.sharingInfo[d].id),
                    a.sharingInfo[d].readonly && (b = !1);
            return b || m.toString() !== c.toString()
        }
        if (a.sharingInfo = [],
        a.dirty = !1,
        a.submitAnyway = h,
        g)
            a.sharingInfo = c.slice();
        else
            for (var j = 0; j < c.length; j++)
                if ("USER" == c[j].type) {
                    var k = {
                        type: "USER",
                        id: c[j].published_to,
                        label: f.getNameById(c[j].published_to),
                        readonly: h ? 1 === parseInt(c[j].is_at_mentioned) : !0
                    };
                    a.sharingInfo.push(k)
                } else if ("GROUP" == c[j].type) {
                    var l = f.getGroup(c[j].published_to)
                      , k = {
                        type: "GROUP",
                        id: c[j].published_to,
                        label: f.getGroupName(c[j].published_to),
                        readonly: h ? 1 === parseInt(c[j].is_at_mentioned) : !0
                    };
                    k.classes = "group ",
                    l && "PRIVATE" == l.access ? k.classes += 'privateGroup_icon-lightgray"' : l && "PUBLIC" == l.access ? k.classes += "Icon1_PublicChannel-01-lightgray" : l && "SECRET" == l.access && (k.classes += "privateGroup_icon-lightgray"),
                    a.sharingInfo.push(k)
                }
        for (var m = [], j = 0, n = a.sharingInfo.length; n > j; ++j)
            m.push(a.sharingInfo[j].id);
        a.getShareWithDropdownItems = function(a) {
            var b = e.defer();
            return b.resolve(d.getPublishableGroupsAndUsersOrPreviousHistory(a)),
            b.promise
        }
        ,
        a.onItemAddedInToField = function(b) {
            a.dirty = i() ? !0 : !1
        }
        ,
        a.onItemRemovedInToField = function(b) {
            a.dirty = i() ? !0 : !1
        }
        ,
        a.onSubmit = function() {
            i() && b.close(a.sharingInfo)
        }
        ,
        a.dismiss = function() {
            b.dismiss()
        }
        ,
        a.onCtrlOrCmdEnterPressInTextEditor = a.onSubmit,
        a.onEscKeyPressInToField = a.dismiss,
        a.dirty = i() ? !0 : !1
    }
    ]),
    b.module("convoApp").directive("cnvCreateGroupDomManpltr", function() {
        return {
            restrict: "E",
            scope: !1,
            link: function(a, b, c) {
                var d = a;
                d.domManpltrCtrl.isInitialized = !1,
                d.domManpltrCtrl.getGroupDesc = function() {
                    var a = b.parent();
                    return a.find("textArea.group-desc").val()
                }
                ,
                d.domManpltrCtrl.getGroupName = function() {
                    var a = b.parent();
                    return a.find("input.group-name").val()
                }
                ,
                d.domManpltrCtrl.setGroupDetails = function() {
                    var a = b.parent();
                    d.groupName.length > 0 && a.find("input.group-name").val(d.groupName),
                    d.groupDesc.length > 0 && a.find("textArea.group-desc").val(d.groupDesc),
                    d.GROUP_TYPE == d.GROUP_TYPE_PUBLIC ? d.GROUP_EXTENDED_PROPERTIES.AUTO_FOLLOW_ENABLED ? a.find("input.group-auto-follow").attr("checked", "true") : a.find("input.group-auto-follow").removeAttr("checked") : d.GROUP_EXTENDED_PROPERTIES.LIST_IN_GROUP_DIRECTORY ? a.find("input.group-vis").attr("checked", "true") : a.find("input.group-vis").removeAttr("checked"),
                    d.GROUP_EXTENDED_PROPERTIES.CAN_INVITE_OTHERS ? a.find("input.group-edit-settings").attr("checked", "true") : a.find("input.group-edit-settings").removeAttr("checked")
                }
                ,
                d.domManpltrCtrl.showError = function() {
                    var a = b.parent();
                    a.find("input.group-name").attr("required", "true")
                }
                ,
                d.domManpltrCtrl.setFocusToGrpNameField = function() {
                    var a = b.parent().find("input.group-name");
                    a.focus(),
                    a.select()
                }
                ,
                d.domManpltrCtrl.disableNextBtn = function() {
                    $("#crtGrpNxtBtn").attr("disabled", "true")
                }
                ,
                d.domManpltrCtrl.enableNextBtn = function() {
                    $("#crtGrpNxtBtn").removeAttr("disabled")
                }
                ,
                d.domManpltrCtrl.isInitialized = !0
            }
        }
    }),
    b.module("convoApp").controller("createGroupModalCtrl", ["$scope", "$modalInstance", "Groups", "usersGroupsListProvider", "$q", "Users", "alertsService", "config", "createPublic", "createPrivate", "mixpanelService", "sourceGS", "onboardingService", "$rootScope", function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
        function o() {
            a.title = "What kind of a group are you creating?",
            i ? (a.STATE = a.CREATE_GROUP_STEP2,
            a.GROUP_TYPE = a.GROUP_TYPE_PUBLIC,
            a.updateCreateGroupState(a.CREATE_GROUP_STEP2, !1)) : j ? (a.STATE = a.CREATE_GROUP_STEP2,
            a.GROUP_TYPE = a.GROUP_TYPE_PRIVATE,
            a.updateCreateGroupState(a.CREATE_GROUP_STEP2, !1)) : (a.STATE = a.CREATE_GROUP_STEP1,
            a.GROUP_TYPE = a.GROUP_TYPE_PUBLIC),
            a.$broadcast("render")
        }
        function p(b) {
            var c = a;
            if (c.invitesCtrl) {
                var d = {};
                d.Via = c.invitesCtrl.contacts.invite_via,
                d["Scraped Master List"] = d["Personal List"] = d["Master List"] = d.Email = 0,
                c.invitesCtrl.inputObj.inviteMessage ? c.invitesCtrl.inputObj.inviteMessage == c.invitesCtrl.inputObj.originalMessage ? d["Personal Message"] = "Default" : d["Personal Message"] = "Edited" : d["Personal Message"] = "None";
                for (var e = [], f = 0, h = c.invitesCtrl.addedList.length; h > f; f++) {
                    var i = c.invitesCtrl.addedList[f];
                    e.push(i.email),
                    "0" == i.rank ? ++d["Scraped Master List"] : "1" == i.rank ? ++d["Personal List"] : "2" == i.rank ? ++d["Master List"] : ++d.Email
                }
                if (d["Invite To"] = "Group",
                k.trackEvent(k.INVITE_SENT, d),
                b.data && b.data.invitation_data) {
                    var j = "common/cnvInviteTeammates/templates/cnvFindTeammatesBasicSplash.tpl.html"
                      , l = "findContactsSplashCtrl"
                      , m = {
                        data: function() {
                            return {
                                response: {
                                    response: b,
                                    totalInvitesSent: a.invitesCtrl.addedList.length,
                                    invited_to: "GROUP"
                                },
                                requestedView: "COMPLETE"
                            }
                        }
                    };
                    g.customModal(j, l, m).result.then(function(a) {
                        console.log("invite complete."),
                        n.$broadcast("createGroupModalCtrl:InvitationModalClosed")
                    }, function() {
                        console.log("invite complete."),
                        n.$broadcast("createGroupModalCtrl:InvitationModalClosed")
                    })
                } else
                    n.$broadcast("createGroupModalCtrl:InvitationModalClosed")
            } else
                n.$broadcast("createGroupModalCtrl:InvitationModalClosed")
        }
        a.CREATE_GROUP_STEP1 = "cg1",
        a.CREATE_GROUP_STEP2 = "cg2",
        a.CREATE_GROUP_STEP3 = "cg3",
        a.GROUP_TYPE_PUBLIC = "groupTypePublic",
        a.GROUP_TYPE_PRIVATE = "groupTypePrivate",
        a.domManpltrCtrl = {},
        a.existedGroupDetails = {},
        a.groupValidator = {},
        a.groupValidator.groupName = "",
        a.isNative = h.IS_NATIVE,
        a.isMac = h.IS_MAC,
        a.GROUP_EXTENDED_PROPERTIES = {},
        a.GROUP_EXTENDED_PROPERTIES.AUTO_FOLLOW_ENABLED = !1,
        a.GROUP_EXTENDED_PROPERTIES.CAN_INVITE_OTHERS = !1,
        a.GROUP_EXTENDED_PROPERTIES.LIST_IN_GROUP_DIRECTORY = !0,
        a.GROUP_EXTENDED_PROPERTIES.CAN_INVITE_OTHERS = !1,
        a.toggleGroupType = function(b) {
            a.GROUP_TYPE = b,
            a.$broadcast("render")
        }
        ,
        a.switchViewTo = function(b) {
            b == a.GROUP_TYPE_PUBLIC ? a.GROUP_TYPE = a.GROUP_TYPE_PUBLIC : a.GROUP_TYPE = a.GROUP_TYPE_PRIVATE,
            a.updateCreateGroupState(a.CREATE_GROUP_STEP2, !0)
        }
        ,
        a.updateCreateGroupState = function(b, c) {
            a.domManpltrCtrl.isInitialized && (a.groupName = a.domManpltrCtrl.getGroupName(),
            a.groupDesc = a.domManpltrCtrl.getGroupDesc()),
            b == a.CREATE_GROUP_STEP2 ? (a.STATE = a.CREATE_GROUP_STEP2,
            a.GROUP_TYPE === a.GROUP_TYPE_PUBLIC ? a.title = "Set up your public group" : a.title = "Set up your private group",
            c || (a.groupName = "",
            a.groupDesc = "",
            a.showGrpAlreadyExistsAlert = !1,
            a.GROUP_TYPE === a.GROUP_TYPE_PUBLIC ? (a.GROUP_EXTENDED_PROPERTIES.AUTO_FOLLOW_ENABLED = !1,
            a.GROUP_EXTENDED_PROPERTIES.CAN_INVITE_OTHERS = !1) : (a.GROUP_EXTENDED_PROPERTIES.LIST_IN_GROUP_DIRECTORY = !0,
            a.GROUP_EXTENDED_PROPERTIES.CAN_INVITE_OTHERS = !1)),
            a.$broadcast("render"),
            setTimeout(function() {
                a.domManpltrCtrl.isInitialized && a.domManpltrCtrl.setGroupDetails()
            }, 1)) : b == a.CREATE_GROUP_STEP3 && a.showAlertIfGroupExists()
        }
        ,
        a.onEscKeyPressInToField = function() {
            console.log("onEscKeyPressInToField")
        }
        ,
        a.onItemAddedInToField = function(a) {
            console.log("onItemAddedInToField")
        }
        ,
        a.getInviteToDropdownItems = function(a, b) {
            var c = e.defer();
            return c.resolve(d.queryCustomList(d.lists[d.LIST_NAMES.USERS][0], a, b + 4)),
            c.promise
        }
        ,
        a.toggleAutoFollowEnabled = function() {
            var b = !a.GROUP_EXTENDED_PROPERTIES.AUTO_FOLLOW_ENABLED;
            a.GROUP_EXTENDED_PROPERTIES.AUTO_FOLLOW_ENABLED = b,
            a.$broadcast("render")
        }
        ,
        a.toggleGroupVisibility = function() {
            var b = !a.GROUP_EXTENDED_PROPERTIES.LIST_IN_GROUP_DIRECTORY;
            a.GROUP_EXTENDED_PROPERTIES.LIST_IN_GROUP_DIRECTORY = b
        }
        ,
        a.toggleEditGroupSettings = function() {
            var b = !a.GROUP_EXTENDED_PROPERTIES.CAN_INVITE_OTHERS;
            a.GROUP_EXTENDED_PROPERTIES.CAN_INVITE_OTHERS = b
        }
        ,
        a.submit = function() {
            a.isCreateGroupAlreadyInProgress = !0;
            var d, e = a.GROUP_EXTENDED_PROPERTIES;
            a.GROUP_TYPE === a.GROUP_TYPE_PUBLIC ? d = "PUBLIC" : a.GROUP_TYPE === a.GROUP_TYPE_PRIVATE && (d = e.LIST_IN_GROUP_DIRECTORY ? "PRIVATE" : "SECRET",
            e.AUTO_FOLLOW_ENABLED = !1),
            a.groupName || a.groupDesc || a.domManpltrCtrl.isInitialized && (a.groupName = a.domManpltrCtrl.getGroupName(),
            a.groupDesc = a.domManpltrCtrl.getGroupDesc());
            var g, h = [], i = "";
            if (!a.GROUP_EXTENDED_PROPERTIES.AUTO_FOLLOW_ENABLED && a.invitesCtrl) {
                for (var j = 0, k = a.invitesCtrl.addedList.length; k > j; j++)
                    g = f.getUserById(a.invitesCtrl.addedList[j].id),
                    g ? h.push(a.invitesCtrl.addedList[j].email) : h.push(a.invitesCtrl.addedList[j].label);
                i = a.invitesCtrl.inputObj.inviteMessage
            }
            var n = m.checkState() && l ? "GS" : null ;
            c.createGroup(a.groupName, a.groupDesc, d, e.AUTO_FOLLOW_ENABLED, e.CAN_INVITE_OTHERS, h, i, n).success(function(a, c) {
                b.close(a.data.group_info.group_id),
                p(a)
            }).error(function(b, c) {
                a.cancel()
            }),
            console.log("<<<<<<<<<<<<<< GROUP CREATION DETAILS >>>>>>>>>>>>"),
            console.log("GROUP TYPE : " + a.GROUP_TYPE),
            console.log("GROUP NAME : " + a.groupName),
            console.log("GROUP DESC : " + a.groupDesc),
            console.log("AUTO FOLLOW ENABLED : " + a.GROUP_EXTENDED_PROPERTIES.AUTO_FOLLOW_ENABLED),
            console.log("CAN INVITE OTHERS : " + a.GROUP_EXTENDED_PROPERTIES.CAN_INVITE_OTHERS),
            console.log("LIST IN DIRECTORY : " + a.GROUP_EXTENDED_PROPERTIES.LIST_IN_GROUP_DIRECTORY),
            console.log("USERS TO INVITE : " + h)
        }
        ,
        a.isGrpNameEmptyAndGrpNameExists = function() {
            return !(a.groupValidator.groupName.length && a.existedGroupDetails.groupName != a.groupValidator.groupName)
        }
        ,
        a.joinGroup = function(d) {
            c.reqToJoinGroup(d).success(function(c, e) {
                "PUBLIC" == a.existedGroupDetails.groupAccess ? b.close(d) : a.cancel()
            })
        }
        ,
        a.resetGroupName = function() {
            a.showGrpAlreadyExistsAlert = !1,
            a.$broadcast("render"),
            a.domManpltrCtrl.isInitialized && a.domManpltrCtrl.setFocusToGrpNameField()
        }
        ,
        a.cancel = function() {
            b.dismiss()
        }
        ,
        a.showAlertIfGroupExists = function(b) {
            a.domManpltrCtrl.isInitialized && (a.groupName = a.domManpltrCtrl.getGroupName(),
            a.groupDesc = a.domManpltrCtrl.getGroupDesc()),
            a.domManpltrCtrl.isInitialized && a.domManpltrCtrl.disableNextBtn(),
            a.groupName = a.groupName.trim(),
            c.getGroupInfo(a.groupName).success(function(c, d) {
                a.domManpltrCtrl.isInitialized && a.domManpltrCtrl.enableNextBtn();
                for (var e, f, g, h, i, j = c.data, k = 0; j && k < j.length; k++)
                    if ("ACTIVE" === j[k].status) {
                        f = j[k].group_id,
                        g = j[k].access,
                        h = j[k].is_user_member,
                        i = j[k].auto_follow_enabled,
                        e = !0;
                        break
                    }
                e ? (a.existedGroupDetails.groupId = f,
                a.existedGroupDetails.groupName = a.groupName,
                a.existedGroupDetails.groupAccess = g,
                a.existedGroupDetails.is_Member = h,
                a.existedGroupDetails.auto_Follow_Enabled = Number(i),
                a.showGrpAlreadyExistsAlert = !0) : b ? a.submit() : (a.inviteListCtrl = {},
                a.inviteTo = [],
                a.title = "Invite teammates to " + a.groupName,
                a.STATE = a.CREATE_GROUP_STEP3,
                a.showGrpAlreadyExistsAlert = !1,
                a.invitesCtrl = {},
                a.invitesCtrl.contacts = {},
                a.invitesCtrl.contacts.include_off_domain = !0,
                a.invitesCtrl.contacts.origin = "Create_Group_Dialog",
                a.invitesCtrl.contacts.invite_via = "Create_Group_Dialog",
                a.invitesCtrl.contacts.new_group = {
                    name: a.groupName
                }),
                a.$broadcast("render")
            })
        }
        ,
        a.onCSVInputFileChange = function(b) {
            a.invitesCtrl.onCSVInputFileChange(b)
        }
        ,
        o()
    }
    ]),
    b.module("convoApp").controller("CreateGroupWidgetCtrl", ["$scope", "$modal", "Groups", function(a, b, c) {
        var d = "home/components/createGroupWidget/templates/dialog.tpl.html";
        a.openCreateGroupDialog = function() {
            b.open({
                templateUrl: d,
                controller: m,
                windowClass: "createGroupWidgetDialog"
            })
        }
    }
    ]);
    var m = function(a, b) {
        a.createGroupData = {},
        a.title = "Add new group",
        a.submitBtn = !0,
        a.submitBtnText = "Create Group",
        a.cancelBtn = !0,
        a.cancelBtnText = "Cancel",
        a.headerTemplate = "common/dialogs/templates/dialogHeader.tpl.html",
        a.bodyTemplate = "home/components/createGroupWidget/templates/body.tpl.html",
        a.footerTemplate = "common/dialogs/templates/dialogFooter.tpl.html",
        a.submit = function() {
            console.log(a.createGroupData)
        }
        ,
        a.cancel = function() {
            b.dismiss()
        }
    }
    ;
    m.$inject = ["$scope", "$modalInstance"],
    b.module("convoApp").controller("DownloadAppsModalCtrl", ["$scope", "$modalInstance", "appsService", "userInfo", "config", "mixpanelService", "utils", function(a, b, c, d, e, f, g) {
        a.userInfo = d,
        a.MODES = {
            MOBILE: "Mobile",
            DESKTOP: "Desktop"
        },
        a.models = {},
        e.IS_NATIVE ? a.models.radioModel = a.MODES.MOBILE : a.models.radioModel = a.MODES.DESKTOP,
        a.isNative = e.IS_NATIVE,
        a.DesktopDownloadFlag = !1,
        a.MobileDownloadFlag = !1,
        a.mobileInstallText = "Install for iOS and Android",
        a.HTML_APP_DOWNLOAD_URL = e.HTML_APP_DOWNLOAD_URL,
        a.isIE = g.isIE(),
        a.desktopTabClicked = function(a) {
            $(a.target).closest(".modal-body").find(".Mobile-upper-half, .btn-downlpad-mobile-apps").addClass("ng-hide")
        }
        ,
        a.mobileTabClicked = function(a) {
            $(a.target).closest(".modal-body").find(".Desktop-upper-half").addClass("ng-hide")
        }
        ,
        a.sendInvitation = function(b) {
            a.invitationSuccess = !1,
            a.$broadcast("render");
            var d = c.sendDownloadAppEmail(b);
            d.then(function(b) {
                a.invitationSuccess = !0,
                a.$broadcast("render"),
                a.MobileDownloadFlag = !0
            }),
            "ios" == b ? f.trackEvent(f.Clicked_Download_iOS_App, {
                Source: "Download Dialog in Web"
            }) : "android" == b && f.trackEvent(f.Clicked_Download_Android_App, {
                Source: "Download Dialog in Web"
            })
        }
        ,
        a.downloadNativeApp = function(b) {
            $(b.target).closest(".modal-body").find(".Desktop-upper-half").addClass("ng-hide"),
            a.MobileDownloadFlag || (a.DesktopDownloadFlag = !0),
            a.mobileInstallText = "Don't forget to install <br /> the mobile app.",
            a.models.radioModel = a.MODES.MOBILE;
            var c = navigator.platform.toUpperCase().indexOf("MAC") >= 0 ? "Mac" : "Windows";
            f.trackEvent(f.Clicked_Download_Dekstop_App, {
                Source: "Download Dialog in Web",
                "App Type": c
            })
        }
        ,
        showHideDesktopAppButton = function() {
            e.IS_NATIVE ? a.showDesktopAppBtn = !1 : a.showDesktopAppBtn = !0
        }
        ,
        a.dismissModal = function() {
            b.dismiss()
        }
        ,
        showHideDesktopAppButton()
    }
    ]),
    b.module("convoApp").controller("groupNotificationsModalCtrl", ["$scope", "$modalInstance", "Group", function(a, b, c) {
        a.title = "Notify me when posts are shared with this group",
        a.cancel = function() {
            b.dismiss()
        }
        ,
        a.groupNotifications = {},
        a.group = c,
        a.isUpdatingSettings = !1,
        a.initialized = !1,
        a.isAnySettingUpdated = function() {
            return _.keys(_.pick(a.groupNotifications, function(b, c, d) {
                return d[c] != a.group.get("notificationSettings")[c] ? !0 : void 0
            })).length > 0
        }
        ,
        a.group.getNotificationSettings().then(function(b) {
            a.groupNotifications = _.clone(b),
            a.initialized = !0,
            a.$broadcast("render")
        }),
        a.saveNotificationSettings = function() {
            a.group.updateGroupDetails({
                notificationSettings: a.groupNotifications
            }),
            a.cancel()
        }
        ,
        a.$broadcast("render")
    }
    ]),
    b.module("convoApp").controller("resourceLikeInfoModalCtrl", ["$scope", "$modalInstance", "$interval", "modalDetails", "likeDetails", function(a, b, c, d, e) {
        function f() {
            "active" == a.modalDetails.state && (a.$broadcast("render"),
            c.cancel(a.modalInterval))
        }
        a.title = "People who like this",
        a.cancel = function() {
            b.dismiss()
        }
        ,
        a.modalDetails = d,
        a.likeDetails = e,
        a.modalInterval,
        "wait" == a.modalDetails.state && (a.modalInterval = c(f, 5)),
        a.$on("$destroy", function() {
            a.modalInterval && c.cancel(a.modalInterval)
        })
    }
    ]),
    b.module("convoApp").factory("resourceLikeInfoModalService", ["alertsService", "Likes", "AppLinks", function(a, b, c) {
        function d(a, c, d, e) {
            var f = {}
              , g = {}
              , i = {
                modalDetails: function() {
                    return f
                },
                likeDetails: function() {
                    return g
                }
            };
            f.state = k,
            f.modalId = "pstMd",
            j(i);
            var m = b.getLikesDetailWithUsersInfo(a, c, d, e);
            m.then(function(a) {
                g.resources = h(a.data.users, a.data.resources),
                f.state = l
            })
        }
        function e(a) {
            var c = {}
              , d = {}
              , e = {
                modalDetails: function() {
                    return c
                },
                likeDetails: function() {
                    return d
                }
            };
            c.state = k,
            c.modalId = "cmmMd",
            j(e);
            var f = b.getLikesDetailWithUsersInfo(null , null , null , null , a);
            f.then(function(a) {
                d.users = g(a.data),
                c.state = l
            })
        }
        function f(a, c, d) {
            var e = {}
              , f = {}
              , h = {
                modalDetails: function() {
                    return e
                },
                likeDetails: function() {
                    return f
                }
            };
            e.state = k,
            e.modalId = "pstSbRscMd",
            j(h);
            var i = b.getLikesDetailWithUsersInfo(a, c, d);
            i.then(function(a) {
                f.users = g(a.data),
                e.state = l
            })
        }
        function g(a) {
            var b = [];
            for (var c in a)
                b.push(_.extend({
                    id: c
                }, a[c]));
            return b
        }
        function h(a, b) {
            var c = [];
            for (var d in b)
                c.push({
                    rscName: b[d].path_names[b[d].path_names.length - 1],
                    users: _.map(b[d].user_ids_who_liked, function(b) {
                        return _.extend({
                            id: b
                        }, a[b])
                    }),
                    rscLink: i(b[d])
                });
            return c
        }
        function i(a) {
            for (var b = [], d = a.path_ids.split(","), e = a.path_types, f = 0; f < e.length; f++)
                b.push({
                    uid: d[f],
                    type: e[f]
                });
            var g = c.newResourceLink(a.app_instance_id, b, null , a.path_names[a.path_names.length - 1]);
            return c.linkToUrl(g, !0)
        }
        function j(b) {
            a.customModal(m, n, b, o, !0)
        }
        var k = "wait"
          , l = "active"
          , m = "home/components/resourceLikeInfoWidget/templates/resourceLikeInfoModal.tpl.html"
          , n = "resourceLikeInfoModalCtrl"
          , o = "cnv-like-info-modal";
        return {
            openPostLikeInfoModal: d,
            openCommentLikeInfoModal: e,
            openPostSubResourceLikeInfoModal: f
        }
    }
    ]),
    b.module("convoApp").controller("selectFolderModalCtrl", ["$scope", "$modalInstance", "dropboxService", "gdriveService", "boxService", "folderConfig", "o365Service", function(a, b, c, d, e, f, g) {
        function h() {
            switch (a.title = "Please wait while loading folders...",
            a.fetchingDirectory = !0,
            a.isDirectoryEmpty = !1,
            f.provider) {
            case "dropbox":
                promise = c.getDirectoryList(f.accessToken, a.path),
                promise.then(function(b) {
                    if (a.title = a.selectedFolder,
                    a.directoryList = [],
                    500 == b)
                        a.initialized = !0,
                        a.$broadcast("render"),
                        bannerService.showBanner("An error occured: please try again later.", !1, !1, promise);
                    else {
                        a.dropboxDirectoryCache[a.path] = [];
                        for (var c = 0; c < b.length; c++)
                            a.directoryList.push(b[c]),
                            a.dropboxDirectoryCache[a.path].push(b[c])
                    }
                    a.fetchingDirectory = !1,
                    a.path != a.rootFolder && (a.canGoBack = !0),
                    0 == a.directoryList.length && (a.isDirectoryEmpty = !0)
                });
                break;
            case "gdrive":
                promise = d.getFolderList(f.accessToken, a.path),
                promise.then(function(b) {
                    if (a.title = a.selectedFolder,
                    a.directoryList = [],
                    500 == b)
                        a.initialized = !0,
                        a.$broadcast("render"),
                        bannerService.showBanner("An error occured: please try again later.", !1, !1, promise);
                    else {
                        a.gdriveFolderCache[a.path + " " + a.selectedFolder] = [];
                        for (var c = 0; c < b.length; c++) {
                            var d = [];
                            d.path = b[c].folder_id,
                            d.name = b[c].title,
                            a.directoryList.push(d),
                            a.gdriveFolderCache[a.path + " " + a.selectedFolder].push(d)
                        }
                    }
                    a.fetchingDirectory = !1,
                    a.path != a.rootFolder && (a.canGoBack = !0),
                    0 == a.directoryList.length && (a.isDirectoryEmpty = !0)
                });
                break;
            case "box":
                promise = e.getFolderList(f.accessToken, a.path),
                promise.then(function(b) {
                    if (a.title = a.selectedFolder,
                    a.directoryList = [],
                    500 == b)
                        a.initialized = !0,
                        a.$broadcast("render"),
                        bannerService.showBanner("An error occured: please try again later.", !1, !1, promise);
                    else {
                        a.boxFolderCache[a.path + " " + a.selectedFolder] = [];
                        for (var c = 0; c < b.length; c++) {
                            var d = [];
                            d.path = b[c].id,
                            d.name = b[c].name,
                            a.directoryList.push(d),
                            a.boxFolderCache[a.path + " " + a.selectedFolder].push(d)
                        }
                    }
                    a.fetchingDirectory = !1,
                    a.path != a.rootFolder && (a.canGoBack = !0),
                    0 == a.directoryList.length && (a.isDirectoryEmpty = !0)
                });
                break;
            case "odrive":
                promise = g.getDriveFoldersList(f.accessToken, a.path),
                promise.then(function(b) {
                    if (a.title = a.selectedFolder,
                    a.directoryList = [],
                    500 == b)
                        a.initialized = !0,
                        a.$broadcast("render"),
                        bannerService.showBanner("An error occured: please try again later.", !1, !1, promise);
                    else {
                        a.odriveFolderCache[a.path + " " + a.selectedFolder] = [];
                        for (var c = 0; c < b.length; c++) {
                            var d = [];
                            d.path = b[c].id,
                            d.name = b[c].title,
                            a.directoryList.push(d),
                            a.odriveFolderCache[a.path + " " + a.selectedFolder].push(d)
                        }
                    }
                    a.fetchingDirectory = !1,
                    a.path != a.rootFolder && (a.canGoBack = !0),
                    0 == a.directoryList.length && (a.isDirectoryEmpty = !0)
                })
            }
        }
        function i() {
            h()
        }
        switch (f.provider) {
        case "dropbox":
            a.rootFolder = "/";
            break;
        case "gdrive":
            a.rootFolder = "root";
            break;
        case "box":
            a.rootFolder = "0";
            break;
        case "odrive":
            a.rootFolder = "root"
        }
        a.title = f.defaultFolder,
        a.path = a.rootFolder,
        a.selectedFolder = f.defaultFolder,
        a.pathSeperator = f.pathSeparator,
        a.dropboxDirectoryCache = {},
        a.gdriveFolderCache = {},
        a.boxFolderCache = {},
        a.odriveFolderCache = {},
        a.gdriveParents = [],
        a.boxParents = [],
        a.odriveParents = [],
        a.directoryList = [],
        a.isDirectoryEmpty = !1,
        a.fetchingDirectory = !1,
        a.selectButtonText = "Select",
        a.backButtonText = "Go Back",
        a.canGoBack = !1,
        a.cancel = function() {
            b.dismiss()
        }
        ,
        a.getChildren = function(b, c) {
            switch (a.isDirectoryEmpty = !1,
            f.provider) {
            case "dropbox":
                a.path += a.path == a.rootFolder ? b : a.pathSeperator + b,
                a.selectedFolder = b,
                a.path in a.dropboxDirectoryCache ? (a.directoryList = [],
                $.each(a.dropboxDirectoryCache[a.path], function(b, c) {
                    a.directoryList.push(c)
                }),
                a.path != a.rootFolder && (a.canGoBack = !0),
                a.title = a.selectedFolder,
                0 == a.directoryList.length && (a.isDirectoryEmpty = !0)) : h();
                break;
            case "gdrive":
                var d = c + " " + b;
                -1 === $.inArray(d, a.gdriveParents) && (a.gdriveParents[d] = a.path + " " + a.selectedFolder),
                a.path = c,
                a.selectedFolder = b,
                d in a.gdriveFolderCache ? (a.directoryList = [],
                $.each(a.gdriveFolderCache[d], function(b, c) {
                    a.directoryList.push(c)
                }),
                a.path != a.rootFolder && (a.canGoBack = !0),
                a.title = a.selectedFolder,
                0 == a.directoryList.length && (a.isDirectoryEmpty = !0)) : h();
                break;
            case "box":
                var d = c + " " + b;
                -1 === $.inArray(d, a.boxParents) && (a.boxParents[d] = a.path + " " + a.selectedFolder),
                a.path = c,
                a.selectedFolder = b,
                d in a.boxFolderCache ? (a.directoryList = [],
                $.each(a.boxFolderCache[d], function(b, c) {
                    a.directoryList.push(c)
                }),
                a.path != a.rootFolder && (a.canGoBack = !0),
                a.title = a.selectedFolder,
                0 == a.directoryList.length && (a.isDirectoryEmpty = !0)) : h();
                break;
            case "odrive":
                var d = c + " " + b;
                -1 === $.inArray(d, a.odriveParents) && (a.odriveParents[d] = a.path + " " + a.selectedFolder),
                a.path = c,
                a.selectedFolder = b,
                d in a.odriveFolderCache ? (a.directoryList = [],
                $.each(a.odriveFolderCache[d], function(b, c) {
                    a.directoryList.push(c)
                }),
                a.path != a.rootFolder && (a.canGoBack = !0),
                a.title = a.selectedFolder,
                0 == a.directoryList.length && (a.isDirectoryEmpty = !0)) : h()
            }
        }
        ,
        a.getParent = function() {
            switch (a.isDirectoryEmpty = !1,
            f.provider) {
            case "dropbox":
                a.path = a.path.replace(a.pathSeperator + a.selectedFolder, ""),
                "" == a.path ? (a.path = a.rootFolder,
                a.selectedFolder = a.rootFolder,
                a.canGoBack = !1) : a.selectedFolder = a.path.substring(a.path.lastIndexOf(a.pathSeperator) + 1),
                a.path in a.dropboxDirectoryCache ? (a.directoryList = [],
                $.each(a.dropboxDirectoryCache[a.path], function(b, c) {
                    a.directoryList.push(c)
                }),
                a.title = a.selectedFolder,
                0 == a.directoryList.length && (a.isDirectoryEmpty = !0)) : h();
                break;
            case "gdrive":
                var b = a.gdriveParents[a.path + " " + a.selectedFolder];
                b = b.split(" ");
                var c = b[0];
                b.shift();
                var d = b.join(" ");
                "root" == c ? (a.path = a.rootFolder,
                a.selectedFolder = a.rootFolder,
                a.canGoBack = !1) : (a.selectedFolder = d,
                a.path = c);
                var e = c + " " + d;
                e in a.gdriveFolderCache ? (a.directoryList = [],
                $.each(a.gdriveFolderCache[e], function(b, c) {
                    a.directoryList.push(c)
                }),
                a.title = a.selectedFolder,
                0 == a.directoryList.length && (a.isDirectoryEmpty = !0)) : h();
                break;
            case "box":
                var b = a.boxParents[a.path + " " + a.selectedFolder];
                b = b.split(" ");
                var c = b[0];
                b.shift();
                var d = b.join(" ");
                "0" == c ? (a.path = a.rootFolder,
                a.selectedFolder = f.defaultFolder,
                a.canGoBack = !1) : (a.selectedFolder = d,
                a.path = c);
                var e = c + " " + d;
                e in a.boxFolderCache ? (a.directoryList = [],
                $.each(a.boxFolderCache[e], function(b, c) {
                    a.directoryList.push(c)
                }),
                a.title = a.selectedFolder,
                0 == a.directoryList.length && (a.isDirectoryEmpty = !0)) : h();
                break;
            case "odrive":
                var b = a.odriveParents[a.path + " " + a.selectedFolder];
                b = b.split(" ");
                var c = b[0];
                b.shift();
                var d = b.join(" ");
                "root" == c ? (a.path = a.rootFolder,
                a.selectedFolder = a.rootFolder,
                a.canGoBack = !1) : (a.selectedFolder = d,
                a.path = c);
                var e = c + " " + d;
                e in a.odriveFolderCache ? (a.directoryList = [],
                $.each(a.odriveFolderCache[e], function(b, c) {
                    a.directoryList.push(c)
                }),
                a.title = a.selectedFolder,
                0 == a.directoryList.length && (a.isDirectoryEmpty = !0)) : h()
            }
        }
        ,
        a.selectFolder = function() {
            switch (f.provider) {
            case "dropbox":
                b.close(a.path);
                break;
            case "gdrive":
            case "box":
            case "odrive":
                b.close({
                    id: a.path,
                    name: a.selectedFolder
                })
            }
        }
        ,
        i()
    }
    ]),
    b.module("convoApp").controller("sharedInfoModalCtrl", ["$scope", "$modalInstance", "sharedInfo", function(a, b, c) {
        a.title = "Shared with",
        a.sharedInfo = c,
        a.cancel = function() {
            b.dismiss()
        }
    }
    ]),
    b.module("convoApp").directive("cnvDragDrop", ["$rootScope", "config", function(b, c) {
        return {
            restrict: "A",
            scope: !0,
            link: function(d, e, f) {
                $.fn.cnvDragDrop = function(b) {
                    return this.each(function() {
                        function b() {
                            f = $(),
                            e.trigger("cnv-drag-end")
                        }
                        var e = $(this)
                          , f = $();
                        e.on("dragenter", function(a) {
                            ("Files" == a.originalEvent.dataTransfer.types[0] || c.IS_NATIVE) && (0 === f.size() && e.trigger("cnv-drag-start"),
                            f = f.add(a.target))
                        }),
                        e.on("dragleave", function(a) {
                            setTimeout(function() {
                                f = f.not(a.target),
                                0 === f.size() && e.trigger("cnv-drag-end")
                            }, 1)
                        }),
                        a.addEventListener("drop", b, !0),
                        a.addEventListener("dragdrop", b, !0),
                        d.$on("$destroy", function() {
                            a.removeEventListener("drop", b, !0),
                            a.removeEventListener("dragdrop", b, !0)
                        })
                    })
                }
                ,
                e.cnvDragDrop().on({
                    "cnv-drag-start": function(a) {
                        return a.stopPropagation(),
                        a.preventDefault(),
                        console.log("drag start"),
                        b.$broadcast("cnv-drag-start"),
                        !1
                    },
                    "cnv-drag-end": function(a) {
                        return a.stopPropagation(),
                        a.preventDefault(),
                        console.log("drag stop"),
                        b.$broadcast("cnv-drag-end"),
                        !1
                    }
                })
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvHomeCenterPanelHeaderManager", [function() {
        return {
            restrict: "AE",
            controller: ["$scope", "homeViewStateInfo", "$timeout", function(a, b, c) {
                function d() {
                    a.STATE = b.getState(),
                    a.$$phase || a.$digest()
                }
                a.$on("homeViewStateChange", d),
                d()
            }
            ]
        }
    }
    ]),
    b.module("convoApp").controller("GroupsRightPanelCtrl", ["$scope", "Groups", "alertsService", "homeViewStateInfo", "userInfo", "AppLinks", function(a, b, c, d, e, f) {
        function g(a) {}
        function h() {
            var c = d.getToFilter();
            return (k = b.getGroup(c.value)) ? void k.getDetails().then(function() {
                if (k.get("id") == c.value) {
                    a.MAXIMUM_USERS_IN_LIST = 11,
                    a.group = k,
                    a.groupMembers = k.get("groupMembers"),
                    a.pinnedContents = k.get("pinnedContents"),
                    12 == a.groupMembers.length ? (a.additionalGroupMembers = 0,
                    a.MAXIMUM_USERS_IN_LIST = 12) : a.groupMembers.length > a.MAXIMUM_USERS_IN_LIST ? a.additionalGroupMembers = a.groupMembers.length - a.MAXIMUM_USERS_IN_LIST : a.additionalGroupMembers = 0;
                    var b = f.newResourceLink("9", [{
                        uid: k.get("id"),
                        type: "22"
                    }, {
                        uid: "2",
                        type: "GroupMembers"
                    }], null , k.get("title") + " (Members)");
                    a.groupMembersViewUrl = f.linkToUrl(b, !0),
                    a.$broadcast("render"),
                    clearTimeout(j),
                    j = setTimeout(h, i)
                }
            }) : void a.$broadcast("render")
        }
        a.MAXIMUM_USERS_IN_LIST = 11;
        var i = 5e3
          , j = null 
          , k = null ;
        a.$on("homeViewStateChange", function() {
            d.getState() == d.STATE_GROUP && h()
        }),
        a.thisUserId = e.user_id,
        a.isAdminMode = e.isAdminMode(),
        a.isGroupAdminOrNetworkAdminMode = function() {
            return k && (k.isGroupAdmin(a.thisUserId) || a.isAdminMode)
        }
        ,
        b.on("groupModifiedByRemoteUser", g),
        b.on("usersInvitedToGroupByRemoteUser", g),
        b.on("userRemovedFromGroupByRemoteUser", g),
        a.$on("$destroy", function() {
            b.off("groupModifiedByRemoteUser", g),
            b.off("usersInvitedToGroupByRemoteUser", g),
            b.off("userRemovedFromGroupByRemoteUser", g),
            clearTimeout(j)
        }),
        a.addPinnedContent = function() {
            var d = {
                resource_name: function() {
                    return ""
                },
                resource_url: function() {
                    return ""
                },
                provided_desc: function() {
                    return "Paste a link to a Convo post or an external website to pin it to the top of the group."
                },
                title: function() {
                    return !1
                },
                btnTitle: function() {
                    return !1
                },
                source: function() {
                    return "no_suggestion"
                }
            }
              , e = "home/groupView/rightPanelWidgets/cnvAddPinContentModal.tpl.html"
              , f = "cnvAddPinContentModalCtrl"
              , g = c.customModal(e, f, d);
            g.result.then(function(c) {
                b.pinContentToGroup(k, c).success(function(b, d) {
                    b.data.type || (c.error = !0),
                    c.is_posting = !1,
                    a.$broadcast("render")
                }),
                c.is_posting = !0,
                a.$broadcast("render")
            }, function() {})
        }
        ,
        a.$on("reRenderGroupView", function(a) {
            h()
        }),
        b.getGroups()["finally"](function() {
            h()
        })
    }
    ]),
    b.module("convoApp").directive("cnvHomeCenterPanelGroupPinnedPostWidget", ["homeViewStateInfo", "Groups", function(a, b) {
        return {
            restrict: "E",
            scope: !0,
            templateUrl: "home/groupView/centerPanelWidgets/cnvHomeCenterPanelGroupPinnedPostWidget/cnvHomeCenterPanelGroupPinnedPostWidget.tpl.html",
            link: function(c, d, e) {
                function f() {
                    h && (c.pinnedContents = h.get("pinnedContents"),
                    c.$broadcast("render"))
                }
                function g() {
                    if (c.pinnedContents = null ,
                    c.$broadcast("render"),
                    a.getState() === a.STATE_GROUP) {
                        var d = a.getToFilter();
                        h = b.getGroup(d.value),
                        h && h.getDetails().then(function() {
                            h.get("id") == d.value && (c.pinnedContents = h.get("pinnedContents"),
                            c.$broadcast("render"),
                            h.on("Group:pinnedContentsUpdated", f))
                        })
                    }
                }
                c.MAXIMUM_PINS_TO_SHOW = 3,
                c.pinnedContents;
                var h;
                c.expand = !1,
                c.showAll = function() {
                    c.MAXIMUM_PINS_TO_SHOW = c.pinnedContents.length,
                    c.expand = !0,
                    c.$broadcast("render")
                }
                ,
                c.showLess = function() {
                    c.MAXIMUM_PINS_TO_SHOW = 3,
                    c.expand = !1,
                    c.$broadcast("render")
                }
                ,
                c.$on("homeViewStateChange", g),
                b.getGroups()["finally"](function() {
                    g()
                })
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvHomeCenterPanelGroupHeader", function() {
        return {
            restrict: "AE",
            scope: !0,
            templateUrl: "home/groupView/cnvHomeCenterPanelGroupHeader.tpl.html",
            link: function(a, b, c) {},
            controller: ["$scope", "homeViewStateInfo", "Groups", "$filter", "$timeout", "alertsService", "userInfo", "$location", "alertsService", "AppLinks", "$location", "Users", "userInfo", "usersGroupsListProvider", "User", "Contacts", function(a, b, c, d, e, f, g, h, f, i, h, j, g, k, l, m) {
                function n() {
                    A.getDetails().then(function() {
                        A.get("id") == B.value && (z.item.description = A.get("description") || null ,
                        z.item.isEditable = A.get("isEditable"),
                        z.model.truncated = !0,
                        s(),
                        A.isNonMemberPrivateGroup() || A.isNonMemberPublicGroup() ? A.isNonMemberPrivateGroup() ? z.model.state = z.STATE_NON_MEMBER_PRIVATE_GROUP : A.isNonMemberPublicGroup() && (z.model.state = z.STATE_NON_MEMBER_PUBLIC_GROUP) : z.model.state = z.STATE_NORMAL,
                        z.$broadcast("render"))
                    })
                }
                function o(a) {}
                function p() {
                    return A && (A.isGroupAdmin(z.thisUserId) || z.isAdminMode)
                }
                function q(d) {
                    if (b.getState() === b.STATE_GROUP && (B = b.getToFilter(),
                    d || !A || B.value !== A.get("id"))) {
                        if (A = c.getGroup(B.value),
                        a.group = A,
                        !A)
                            return z.model.state = z.STATE_ERROR,
                            void z.$broadcast("render");
                        z.model.state = z.STATE_WAITING,
                        z.feed_title = A.get("title"),
                        z.groupDropdownCtrl = {},
                        z.$broadcast("render"),
                        n()
                    }
                }
                function r(a) {
                    z.model.saving = !0,
                    z.model.error = !1,
                    A.updateDescription(z.item.description).then(function(a) {
                        a && 1 === a.type || (z.model.error = !0),
                        z.model.state = z.STATE_NORMAL,
                        z.model.saving = !1,
                        z.model.truncated = !0,
                        z.$broadcast("render")
                    }),
                    z.$broadcast("render")
                }
                function s() {
                    var b = A.toJSON();
                    if (z.groupDropdownCtrl.options = [{
                        label: "Manage group settings",
                        url: w()
                    }],
                    p() || "1" == b.membersCanInvite ? z.groupDropdownCtrl.options.push({
                        label: "Invite users to group",
                        callback: u
                    }) : z.groupDropdownCtrl.options.push({
                        label: "View members",
                        callback: v
                    }),
                    p() || 1 == A.get("integrationsEnabled") && a.user_info.userRole != a.user_info.USER_ROLE_GUEST) {
                        var d = i.newResourceLink("9", [{
                            uid: A.get("id"),
                            type: "22"
                        }, {
                            uid: "2",
                            type: "GroupIntegrations"
                        }], null , "Group Integrations")
                          , e = i.linkToUrl(d);
                        z.groupDropdownCtrl.options.push({
                            label: "Manage integrations",
                            url: e,
                            callback: function() {
                                h.path(e.slice(1))
                            }
                        })
                    }
                    (g.isAdminMode() || p() || "1" == b.membersCanPinContent) && z.groupDropdownCtrl.options.push({
                        label: "Add important posts or links",
                        callback: y
                    }),
                    z.groupDropdownCtrl.options.push({
                        isDivider: !0
                    }),
                    A.get("isMember") && z.groupDropdownCtrl.options.push({
                        label: "Notification preferences",
                        callback: function() {
                            x(A)
                        }
                    });
                    var f = {};
                    f.callback = function() {
                        "Show posts in my feed" == f.label ? c.toggleShowHidePostsInFeed(A, 0).success(function(a, b) {
                            a.type && (f.label = "Hide posts from my feed")
                        }) : c.toggleShowHidePostsInFeed(A, 1).success(function(a, b) {
                            a.type && (f.label = "Show posts in my feed")
                        })
                    }
                    ,
                    "1" == b.hideFromFeedForThisUser && A.get("isMember") ? (f.label = "Show posts in my feed",
                    z.groupDropdownCtrl.options.push(f)) : A.get("isMember") && (f.label = "Hide posts from my feed",
                    z.groupDropdownCtrl.options.push(f)),
                    A.get("pinned_at") || g.isAdminMode() ? g.isAdminMode() || z.groupDropdownCtrl.options.push({
                        label: "Unpin from top of my group list",
                        callback: function() {
                            c.unpinGroup(A.get("id")).then(function() {
                                q(!0)
                            })
                        }
                    }) : z.groupDropdownCtrl.options.push({
                        label: "Pin to top of my group list",
                        callback: function() {
                            c.pinGroup(A.get("id")).then(function() {
                                q(!0)
                            })
                        }
                    }),
                    b.thisUserCanLeave && (z.groupDropdownCtrl.options.push({
                        isDivider: !0
                    }),
                    z.groupDropdownCtrl.options.push({
                        label: "Leave group",
                        callback: t
                    })),
                    z.showGroupDropdown = !0,
                    z.$broadcast("render")
                }
                function t() {
                    var b = "Leave Group"
                      , d = "Are you sure you want to leave this group? As the only group administrator, if you leave no one will be authorized to manage this group."
                      , e = "You are an admin of this group. Are you sure you want to leave it?"
                      , g = "Are you sure you want to leave this group?"
                      , h = "Leave group"
                      , i = "Cancel";
                    A.isThisUserIsTheOnlyGroupAdmin(a.thisUserId) ? f.promptModal(b, d, function() {
                        c.removeUserFromGroup(A.get("id"), a.thisUserId)
                    }, null , h, i, null , !0) : A.get("is_admin") ? f.promptModal(b, e, function() {
                        c.removeUserFromGroup(A.get("id"), a.thisUserId)
                    }, null , h, i, null , !0) : f.promptModal(b, g, function() {
                        c.removeUserFromGroup(A.get("id"), a.thisUserId)
                    }, null , h, i, null , !0)
                }
                function u() {
                    m.initContactsInviteModal({
                        invite_via: "Invite_Dialog",
                        include_off_domain: !0,
                        get_details_first: !0,
                        group: A
                    })
                }
                function v() {
                    var a = i.newResourceLink("9", [{
                        uid: A.get("id"),
                        type: "22"
                    }, {
                        uid: "2",
                        type: "GroupMembers"
                    }], null , A.get("title") + " (Members)")
                      , b = i.linkToUrl(a, !0);
                    h.url(b.slice(1))
                }
                function w() {
                    var a = i.newResourceLink("9", [{
                        uid: A.get("id"),
                        type: "22"
                    }, {
                        uid: "2",
                        type: "GroupSettings"
                    }], null , A.get("title") + " (Settings)");
                    return i.linkToUrl(a, !0)
                }
                function x(a) {
                    var b = "home/components/groupNotificationsWidget/templates/groupNotificationsModal.tpl.html"
                      , c = "groupNotificationsModalCtrl"
                      , d = "group-notification-preferences"
                      , e = {
                        Group: function() {
                            return a
                        }
                    };
                    f.customModal(b, c, e, d)
                }
                function y() {
                    var b = {
                        resource_name: function() {
                            return ""
                        },
                        resource_url: function() {
                            return ""
                        },
                        provided_desc: function() {
                            return "Paste a link to a Convo post or an external website to pin it to the top of the group."
                        },
                        title: function() {
                            return !1
                        },
                        btnTitle: function() {
                            return !1
                        },
                        source: function() {
                            return "no_suggestion"
                        }
                    }
                      , d = "home/groupView/rightPanelWidgets/cnvAddPinContentModal.tpl.html"
                      , e = "cnvAddPinContentModalCtrl"
                      , g = f.customModal(d, e, b);
                    g.result.then(function(b) {
                        c.pinContentToGroup(A, b).success(function(c, d) {
                            c.type || (b.error = !0),
                            b.is_posting = !1,
                            a.$broadcast("render")
                        }),
                        b.is_posting = !0,
                        a.$broadcast("render")
                    }, function() {})
                }
                var z = a;
                z.STATE_WAITING = 1,
                z.STATE_NORMAL = 2,
                z.STATE_SAVING = 3,
                z.STATE_ERROR = 4,
                z.STATE_EDIT = 5,
                z.STATE_NON_MEMBER_PRIVATE_GROUP = 6,
                z.STATE_NON_MEMBER_PUBLIC_GROUP = 7,
                z.model = {},
                z.model.state = z.STATE_WAITING,
                z.item = {},
                a.user_info = g,
                z.thisUserId = g.user_id,
                z.isAdminMode = g.isAdminMode();
                var A = null ;
                c.on("groupModifiedByRemoteUser", o),
                c.on("usersInvitedToGroupByRemoteUser", o),
                c.on("userRemovedFromGroupByRemoteUser", o),
                c.on("toggledShowHidePostsInFeed", function(a, b, c) {
                    A && A.get("id") === a && c && n()
                });
                var B;
                z.$on("$destroy", function() {
                    c.off("groupModifiedByRemoteUser", o),
                    c.off("usersInvitedToGroupByRemoteUser", o),
                    c.off("userRemovedFromGroupByRemoteUser", o)
                }),
                a.isGroupAdminOrNetworkAdminMode = p,
                a.isAccountAnnouncementsGroup = function() {
                    return A && "ACCOUNT_ANNOUNCEMENTS" === A.get("type")
                }
                ;
                var C = {
                    ENTER: 13
                };
                z.toggle = function() {
                    z.model.truncated = !z.model.truncated,
                    a.$broadcast("render")
                }
                ,
                z.enableEdit = function() {
                    z.model.state = z.STATE_EDIT,
                    z.$broadcast("render"),
                    e(function() {
                        $(".feed-filter-description textarea").focus()
                    }, 0)
                }
                ,
                z.onKeydown = function(a) {
                    var b = a.shiftKey || a.altKey || a.ctrlKey || a.metaKey;
                    return b || a.keyCode != C.ENTER || a.isPropagationStopped() ? void 0 : (z.initSubmit(),
                    a.preventDefault(),
                    a.stopPropagation(),
                    !1)
                }
                ,
                z.initSubmit = function() {
                    var a = !0;
                    z.item.description = z.item.description || "",
                    a && z.item.description === A.get("description") && (z.model.state = z.STATE_NORMAL,
                    a = !1),
                    a && r(),
                    z.$broadcast("render")
                }
                ,
                a.$on("homeViewStateChange", q),
                b.getState() === b.STATE_GROUP && c.getGroups()["finally"](function() {
                    q()
                })
            }
            ]
        }
    }),
    b.module("convoApp").controller("cnvAddPinContentModalCtrl", ["$scope", "$modalInstance", "$timeout", "Link", "AppLinks", "utils", "resource_name", "resource_url", "provided_desc", "title", "btnTitle", "source", "config", function(b, c, d, f, g, h, i, j, k, l, m, n, o) {
        function p(a) {
            var b = a || "";
            return b.match(/^[a-zA-Z]+:/) || (b = r + b),
            b
        }
        var q = b;
        q.data = {};
        var r = "http://";
        q.resolving = !1,
        n = n || !1,
        q.providedResourceName = i || "",
        q.providedResourceUrl = j || "",
        q.suggestedTitle = "",
        q.backupProvidedResourceName = q.providedResourceName,
        q.hasUserTyped = !1,
        q.title = l || !1,
        q.btnTitle = m || !1,
        k.length > 0 && (q.providedDesc = k);
        var s = function(a) {
            q.resolving = !0;
            var c = g.parseUrl(a);
            c && c.type == g.RESOURCE_LINK ? ("" == q.data.resource_name || "no_suggestion" == n ? q.data.resource_name = decodeURIComponent(c.title) : q.suggestedTitle = decodeURIComponent(c.title),
            q.data.app_instance_id = c.resourcePath.appInstance.uid,
            q.data.resource_id = c.resourcePath.hierarchy[0].uid,
            q.data.resource_type = c.resourcePath.hierarchy[0].type,
            q.resolving = !1,
            b.$digest()) : f.getLink(a).then(function(a) {
                "" == q.data.resource_name || "no_suggestion" == n ? q.data.resource_name = a.ResponseData.title : q.suggestedTitle = a.ResponseData.title,
                q.providedResourceName = q.backupProvidedResourceName,
                q.resolving = !1
            })
        }
          , t = e(s, 250);
        q.validateUrl = function() {
            var a = p(q.data.url);
            return q.data && q.data.url ? h.isValidUrl(a) : void 0
        }
        ,
        q.setResourceUrl = function() {
            if (q.providedResourceUrl) {
                var a = p(q.providedResourceUrl);
                q.data.url = a
            }
        }
        ,
        q.setResourceName = function() {
            q.providedResourceName && (q.data.resource_name = q.providedResourceName)
        }
        ,
        q.setSuggestedTitle = function() {
            q.data.resource_name = q.suggestedTitle
        }
        ,
        q.onChange = function() {
            console.log("on changed"),
            q.hasUserTyped = !0,
            d(function() {
                var a = p(q.data.url);
                a && h.isValidUrl(a) ? t(a) : q.data.resource_name == q.suggestedTitle && (q.data.resource_name = "")
            }, 0)
        }
        ,
        q.onPaste = function() {
            console.log("on paste"),
            d(function() {
                var a = p(q.data.url);
                a && h.isValidUrl(a) ? t(a) : q.data.resource_name == q.suggestedTitle && (q.data.resource_name = "")
            }, 0)
        }
        ,
        q.onSubmit = function() {
            console.log("on submit"),
            q.data.resource_name || (q.data.resource_name = q.providedResourceName || q.data.url);
            var a = p(q.data.url)
              , b = g.parseUrl(a);
            b && b.type == g.RESOURCE_LINK ? (q.data.type = "SCRYBE",
            q.data.app_instance_id = b.resourcePath.appInstance.uid,
            q.data.resource_id = b.resourcePath.hierarchy[0].uid,
            q.data.resource_type = b.resourcePath.hierarchy[0].type) : q.data.type = "WEB",
            q.data.url = p(q.data.url),
            c.close(q.data)
        }
        ,
        q.dismiss = function() {
            c.dismiss("cancel")
        }
        ,
        q.test = function() {
            if (q.data.url) {
                var b = p(q.data.url)
                  , c = 800
                  , d = 300;
                if (o.IS_NATIVE)
                    h.openInBrowser(b);
                else {
                    var e = a.open(b, "popUpWindow", "height=" + d + ", width=" + c + ", left=" + screen.width / 2 - c / 2 + ", top=" + screen.width / 2 - d / 2 + ", resizable=yes, scrollbars=yes, toolbar=no, menubar=no, location=yes, directories=no, status=yes");
                    a.focus && e.focus()
                }
                return !1
            }
        }
        ,
        q.setResourceName(),
        q.setResourceUrl()
    }
    ]),
    b.module("convoApp").directive("cnvGroupEmailSharingWidget", ["utils", function(a) {
        return {
            restrict: "E",
            replace: !0,
            scope: !0,
            templateUrl: "home/groupView/rightPanelWidgets/cnvGroupEmailSharingWidget.tpl.html",
            link: function(b, c, d) {
                b.copyEmailPopup = function() {
                    b.group && a.copyToClipboard(b.group.get("title") + " <" + b.group.get("groupEmail") + ">")
                }
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvGroupIntegrationsWidget", [function() {
        return {
            restrict: "E",
            scope: !0,
            templateUrl: "home/groupView/rightPanelWidgets/cnvGroupIntegrationsWidget.tpl.html"
        }
    }
    ]),
    b.module("convoApp").directive("cnvGroupInviteWidget", [function() {
        return {
            restrict: "E",
            scope: !0,
            replace: !0,
            templateUrl: "home/groupView/rightPanelWidgets/cnvGroupInviteWidget.tpl.html",
            controller: ["$scope", "Groups", "Users", "User", "$timeout", "accountInfo", "bannerService", "usersGroupsListProvider", "$q", "alertsService", "mixpanelService", function(a, b, c, d, e, f, g, h, i, j, k) {
                function l(a) {
                    var b;
                    return b = 1 == a.length ? t.replace("[email]", a[0].invitee_global_profile.email) : 2 == a.length ? u.replace("[email1]", a[0].invitee_global_profile.email).replace("[email2]", a[1].invitee_global_profile.email) : v.replace("[email1]", a[0].invitee_global_profile.email).replace("[email2]", a[1].invitee_global_profile.email).replace("[count]", a.length - 2)
                }
                function m(a) {
                    var b;
                    return b = 1 == a.length ? a[0].error_message ? a[0].error_message : w.replace("[email]", a[0].invitee_email) : 2 == a.length ? x.replace("[email1]", a[0].invitee_email).replace("[email2]", a[1].invitee_email) : y.replace("[email1]", a[0].invitee_email).replace("[email2]", a[1].invitee_email).replace("[count]", a.length - 2)
                }
                function n(a) {
                    g.showBanner(l(a), !1, !1)
                }
                function o(a) {
                    g.showBanner(m(a), !1, !1)
                }
                function p(a, b) {
                    var c = {
                        inviteSuccessEmails: function() {
                            return a
                        },
                        inviteFailEmails: function() {
                            return b
                        }
                    };
                    j.customModal(q, r, c, s)
                }
                a.invtTeammtCtrl = {},
                a.invitedTo = [],
                a.invtTeammtCtrl.isNotShowingAutoComplete = !0;
                var q = "components/groupInvtStatusDialog/templates/groupInvtStatusDialog.tpl.html"
                  , r = "groupInvtStatusDialogCtrl"
                  , s = "invt-status-modal"
                  , t = "Your invitation has been sent to <b>[email]</b>."
                  , u = "Your invitation to <b>[email1]</b> and <b>[email2]</b> has been sent."
                  , v = "Your invitation to <b>[email1]</b> and <b>[email2]</b> and <b>[count] others</b> has been sent."
                  , w = "Your invitation has not been sent to <b>[email]</b>."
                  , x = "Your invitation to <b>[email1]</b> and <b>[email2]</b> has not been sent."
                  , y = "Your invitation to <b>[email1]</b> and <b>[email2]</b> and <b>[count] others</b> has not been sent.";
                a.placeholderText = "teammate@" + f.getPrimaryAccountDomain().user_email_domain,
                a.inviting = !1,
                a.invtTeammtCtrl.inviteTeammates = function(c, d) {
                    a.inviting || (a.inviting = !0,
                    a.$broadcast("render"),
                    b.inviteUsersToGroupRTC(a.group, c, d).success(function(a, b) {
                        if (a.type) {
                            var c = a.data.users_invited
                              , d = a.data.users_not_invited;
                            a.data.users_inivites_already_pending,
                            a.data.users_invites_pending;
                            c.length && d.length ? p(c, d) : c.length ? n(c) : d.length && o(d)
                        }
                    })["finally"](function() {
                        a.inviting = !1,
                        a.$broadcast("render")
                    }))
                }
                ,
                a.invtTeammtCtrl.filterContacts = function(b) {
                    for (var c, d = [], e = 0; e < b.length; e++)
                        c = _.where(a.groupMembers, {
                            user_email_id: b[e].email
                        }),
                        0 == c.length && (b[e].isChecked = !0,
                        d.push(b[e]));
                    return d
                }
                ,
                a.getAutoCompleteUserItemsToInvite = function(b, c) {
                    var d, e = i.defer();
                    b && b.trim().split("@")[0] && !b.trim().split("@")[1] && (d = {
                        type: "USER",
                        id: b.trim().split("@")[0],
                        label: b.trim().split("@")[0] + "@" + f.getPrimaryAccountDomain().user_email_domain,
                        formattedlabel: b.trim().split("@")[0],
                        desclabel: b.trim().split("@")[0] + "@" + f.getPrimaryAccountDomain().user_email_domain,
                        formatteddesclabel: b.trim().split("@")[0] + "@" + f.getPrimaryAccountDomain().user_email_domain,
                        classes: "user invite-user-avatar",
                        imgurl: ""
                    });
                    var g = h.queryCustomList(a.nonActiveAutoCompleteItems, b, c + 4);
                    return d && g.splice(0, 0, d),
                    e.resolve(g),
                    e.promise
                }
                ,
                a.invtTeammtCtrl.noContactMessage = "The teammates you're trying to invite are already added to this group.",
                a.invtTeammtCtrl.initialized = !0,
                a.invtTeammtCtrl.getAutoCompleteUserItem = function() {
                    a.nonActiveAutoCompleteItems = [];
                    var b;
                    c.getPublishableUsers().then(function(c) {
                        for (var e = 0; e < c.length; e++)
                            isActiveMember = _.where(a.groupMembers, {
                                user_id: c.models[e].id
                            }),
                            isActiveMember.length || (b = _.extend({}, c.models[e].toJSON()),
                            b.user_email_id = c.models[e].get("email"),
                            a.nonActiveAutoCompleteItems.push(h.createUserListItemForSpecificGroup(new d(b))))
                    })
                }
                ,
                a.invtTeammtCtrl.getAutoCompleteUserItem(),
                a.inviteUser = function(d) {
                    if (!a.inviting) {
                        for (var e, f = a.invitedTo, g = [], h = 0; f && h < f.length; h++)
                            e = c.getUserById(f[h].id),
                            e ? g.push(e.email) : g.push(f[h].label);
                        a.inviting || 0 == g.length || (a.inviting = !0,
                        a.$broadcast("render"),
                        b.inviteUsersToGroupRTC(a.group, g, d).success(function(b, c) {
                            if (b.type) {
                                var d = b.data.users_invited
                                  , e = b.data.users_not_invited;
                                b.data.users_inivites_already_pending,
                                b.data.users_invites_pending;
                                d.length && e.length ? p(d, e) : d.length ? n(d) : e.length && o(e),
                                a.invitedTo = []
                            }
                            a.inviting = !1,
                            a.$broadcast("render")
                        })["finally"](function() {
                            a.inviting = !1,
                            a.$broadcast("render")
                        }),
                        k.trackEvent(k.CLICK_ON_INVITE_FROM_NEWSFEED, {
                            Using: "Group Newsfeed"
                        }))
                    }
                }
            }
            ],
            link: function(b, c, d) {
                c.find(".to-field-cont")[0].addEventListener("keydown", function(c) {
                    13 == c.keyCode && a.setTimeout(function() {
                        b.inviteUser()
                    }, 0)
                }, !1),
                b.$on("$destroy", function(a) {
                    c.find(".to-field-cont")[0].removeEventListener("keydown")
                })
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvGroupMembersListWidget", [function() {
        return {
            restrict: "E",
            scope: !0,
            replace: !0,
            templateUrl: "home/groupView/rightPanelWidgets/cnvGroupMembersListWidget.tpl.html",
            controller: ["$scope", "userInfo", "Groups", "$location", "alertsService", function(a, b, c, d, e) {
                a.userInfo = b,
                a.showBtn = "joined",
                a.showHideBtn = function(b) {
                    a.group && a.group.get("thisUserCanLeave") && (a.showBtn = b,
                    a.$broadcast("render"))
                }
                ,
                a.reqToJoinGroup = function() {
                    var b = c.reqToJoinGroup(a.group.get("id"));
                    b.then(function(b, c) {
                        a.reqToJoinGroupSuccessful = !0,
                        a.$emit("reqToJoinGroupSuccessful"),
                        a.$broadcast("render")
                    })
                }
                ,
                a.$on("grpJoinReqSuccessful", function() {
                    a.reqToJoinGroupSuccessful = !0
                }),
                a.leaveGroup = function() {
                    var f = "Leave Group"
                      , g = "Are you sure you want to leave this group? As the only group administrator, if you leave no one will be authorized to manage this group."
                      , h = "You are an admin of this group. Are you sure you want to leave it?"
                      , i = "Are you sure you want to leave this group?"
                      , j = "Leave group"
                      , k = "Cancel";
                    a.group.isThisUserIsTheOnlyGroupAdmin(b.getUserId()) ? e.promptModal(f, g, function() {
                        c.removeUserFromGroup(a.group.get("id"), b.getUserId()).then(function(b) {
                            a.$emit("refetchMainFeedRequest"),
                            d.path("/feed").search({}).hash("title=News Feed")
                        })
                    }, null , j, k, null , !0) : a.group.get("is_admin") ? e.promptModal(f, h, function() {
                        c.removeUserFromGroup(a.group.get("id"), b.getUserId()).then(function(b) {
                            a.$emit("refetchMainFeedRequest"),
                            d.path("/feed").search({}).hash("title=News Feed")
                        })
                    }, null , j, k, null , !0) : e.promptModal(f, i, function() {
                        c.removeUserFromGroup(a.group.get("id"), b.getUserId()).then(function(b) {
                            a.$emit("refetchMainFeedRequest"),
                            d.path("/feed").search({}).hash("title=News Feed")
                        })
                    }, null , j, k, null , !0)
                }
            }
            ],
            link: function(a, b, c) {}
        }
    }
    ]),
    b.module("convoApp").directive("cnvGroupPinnedPostsWidget", function() {
        return {
            restrict: "E",
            scope: !0,
            templateUrl: "home/groupView/rightPanelWidgets/cnvGroupPinnedPostsWidget.tpl.html",
            controller: ["$scope", "datetimeService", "Groups", function(a, b, c) {
                a.MINIMUM_PINS_TO_SHOW = 3,
                a.MAXIMUM_PINS_TO_SHOW = a.MINIMUM_PINS_TO_SHOW,
                a.showAll = !0,
                a.server_now_timestamp = b.getServerTimestamp(),
                a.$broadcast("render"),
                a.showAllPins = function() {
                    a.MAXIMUM_PINS_TO_SHOW = a.pinnedContents.length,
                    a.showAll = !1,
                    a.showLess = !0,
                    a.$broadcast("render")
                }
                ,
                a.showFewerPins = function() {
                    a.MAXIMUM_PINS_TO_SHOW = a.MINIMUM_PINS_TO_SHOW,
                    a.showAll = !0,
                    a.showLess = !1,
                    a.$broadcast("render")
                }
                ,
                a.removePin = function(b) {
                    c.unpinContentFromGroup(a.group, b).success(function(b, c) {
                        b.type && a.$broadcast("render")
                    })
                }
                ,
                a.reRender = function() {
                    a.$broadcast("render")
                }
            }
            ]
        }
    }),
    b.module("convoApp").controller("HomeCenterPanelCtrl", ["$scope", "Groups", "homeViewStateInfo", "AppLinks", "Filters", "FilterTypes", "$rootScope", "tagsService", "searchService", "$location", "userInfo", function(a, b, c, d, e, f, g, h, i, j, k) {
        function l(b) {
            a.feedRelatedSuggestions = i.getSearchSuggestions(b)
        }
        function m(b) {
            var c = h.getRelatedTags(b);
            c.then(function(b, c) {
                a.relatedTags = b.data
            })
        }
        function n() {
            a.activeFilter = null ,
            a.filteredGroupId = null ,
            a.relatedTags = null ,
            a.feedRelatedSuggestions = null ;
            var b = g.filterInfo;
            if (b.filterApplied && b.filterLink.filter) {
                var c = (e.hasAnySearchFilter(b.filterLink.filter.filters),
                e.hasAnyTextFilter(b.filterLink.filter.filters));
                if (c && (l(b.filterLink.filter.filters),
                m(b.filterLink.filter.filters)),
                1 == b.filterLink.filter.filters.length) {
                    var d = b.filterLink.filter.filters[0];
                    d.type == f.TO ? (a.filteredGroupId = d.value,
                    d.value == a.thisUserId && (a.activeFilter = a.mentionsFilter)) : d.type == f.IN ? d.value == f.IN_STARRED ? a.activeFilter = a.starredFilter : d.value == f.IN_DRAFTS ? a.activeFilter = a.draftsFilter : d.value == f.IN_TRASH && (a.activeFilter = a.trashFilter) : d.type == f.POST && (a.activeFilter = a.postFilter)
                }
            } else
                a.activeFilter = a.newsFeedFilter
        }
        function o() {
            a.$on("homeViewStateChange", q)
        }
        function p() {
            var d = c.getToFilter();
            a.group = b.getGroup(d.value),
            a.group && a.group.getDetails()
        }
        function q() {
            c.getState() == c.STATE_GROUP && (p(),
            a.reqJoinGrpSuccess = !1)
        }
        a.newsFeedFilter = {
            url: "#/feed"
        },
        a.mentionsFilter = {
            url: d.linkToUrl(d.newFilterLink(e.newANDFiltersChain([e.newFilter(f.TO, "me", "me")]), "Mentions"), !0)
        },
        a.starredFilter = {
            url: d.linkToUrl(d.newFilterLink(e.newANDFiltersChain([e.newFilter(f.IN, f.IN_STARRED, f.IN_STARRED)]), "Starred"), !0)
        },
        a.draftsFilter = {
            url: d.linkToUrl(d.newFilterLink(e.newANDFiltersChain([e.newFilter(f.IN, f.IN_DRAFTS, f.IN_DRAFTS)]), "Drafts"), !0)
        },
        a.trashFilter = {
            url: d.linkToUrl(d.newFilterLink(e.newANDFiltersChain([e.newFilter(f.IN, f.IN_TRASH, f.IN_TRASH)]), "Trash"), !0)
        },
        a.postFilter = "POST_FILTER",
        a.activeFilter = null ,
        a.MAX_RELATED_TAGS = 7,
        a.isNonMemberPrivateGroupFilterAppliedAndNotAdminMode = function() {
            return c.getState() == c.STATE_GROUP && a.group ? !k.isAdminMode() && a.group.isNonMemberPrivateGroup() : !1
        }
        ,
        a.isNonMemberPublicGroupFilterAppliedAndNotAdminMode = function() {
            return c.getState() == c.STATE_GROUP && a.group ? !k.isAdminMode() && a.group.isNonMemberPublicGroup() : !1
        }
        ,
        a.reqToJoinGroup = function() {
            var c = b.reqToJoinGroup(a.group.get("id"));
            c.then(function(b, c) {
                a.reqJoinGrpSuccess = !0,
                a.$emit("reqToJoinGroupSuccessful")
            })
        }
        ,
        a.$on("grpJoinReqSuccessful", function() {
            a.reqJoinGrpSuccess = !0
        }),
        a.openUrl = function(a) {
            j.url(a)
        }
        ,
        g.$on("filterChange", n),
        n(),
        o()
    }
    ]),
    b.module("convoApp").factory("homeViewStateInfo", ["$rootScope", "FilterTypes", function(a, b) {
        function c() {
            return {
                fromFilter: null ,
                toFilter: null ,
                hasFilter: null ,
                groupFilter: null ,
                userFilter: null 
            }
        }
        function d() {
            if (g != e.ONBOARDING) {
                g = e.STATE_DEFAULT,
                h = c();
                var d = a.filterInfo;
                if (!d.filterApplied || !d.filterLink.filter)
                    return void f.$broadcast("homeViewStateChange");
                for (var i = d.filterLink.filter.filters, j = 0; j < i.length; j++) {
                    var k = i[j];
                    k.type == b.FROM ? h.fromFilter = k : k.type == b.TO ? h.toFilter = k : k.type == b.HAS && (h.hasFilter = k)
                }
                if (h.fromFilter)
                    g = e.STATE_USER;
                else if (h.toFilter) {
                    var l = h.toFilter.value;
                    (0 == l.indexOf("g_") || 0 == l.indexOf("grp-")) && (g = e.STATE_GROUP)
                }
                f.$broadcast("homeViewStateChange")
            }
        }
        var e = {};
        e.STATE_DEFAULT = "DEFAULT",
        e.STATE_GROUP = "GROUP",
        e.STATE_USER = "USER",
        e.ONBOARDING = "ONBOARDING";
        var f, g = e.STATE_DEFAULT, h = c();
        return e.init = function(a) {
            f = a,
            f.$on("filterChange", d),
            d()
        }
        ,
        e.getState = function() {
            return g
        }
        ,
        e.setState = function(a) {
            g = a,
            f.$broadcast("homeViewStateChange")
        }
        ,
        e.getFromFilter = function() {
            return h.fromFilter
        }
        ,
        e.getToFilter = function() {
            return h.toFilter
        }
        ,
        e.getHasFilter = function() {
            return h.hasFilter
        }
        ,
        e
    }
    ]),
    b.module("convoApp").controller("UsersRightPanelCtrl", ["$scope", "homeViewStateInfo", "Users", "userInfo", "accountInfo", function(a, b, c, d, e) {
        function f() {
            h = b.getFromFilter().value,
            g()
        }
        function g() {
            c.getUserDetails(h).then(function(b) {
                b && (a.user = b,
                a.thisUser = h == d.getUserId() ? !0 : !1,
                a.$broadcast("render"))
            })
        }
        a.accountInfo = e;
        var h = null ;
        a.$on("reRenderUserProfile", function(a) {
            f()
        }),
        a.$on("homeViewStateChange", function() {
            b.getState() === b.STATE_USER && f()
        }),
        c.getUsers()["finally"](function() {
            f()
        })
    }
    ]),
    b.module("convoApp").controller("ProfilePictureModalCtrl", ["$scope", "$modalInstance", "startWebcam", "file", function(a, b, c, d) {
        a.startWebcam = c,
        a.file = d,
        a.onSubmit = function() {
            b.close()
        }
        ,
        a.dismiss = function() {
            a.$broadcast("dismissModal"),
            b.dismiss()
        }
        ,
        a.$on("dismissModal", function(a, c) {
            c ? b.close(!0) : b.dismiss(),
            a.preventDefault()
        })
    }
    ]),
    b.module("convoApp").directive("cnvProfilePictureWidget", ["profilePicService", "awsService", "userInfo", "accountInfo", "$rootScope", "mixpanelService", "homeViewStateInfo", "onboardingService", function(b, c, d, e, f, g, h, i) {
        return {
            restrict: "A",
            scope: !0,
            controller: ["$scope", function(a) {}
            ],
            link: function(h, i, j) {
                function k(a, c, i) {
                    var j = b.getThumbnailGenerationRequestStatus(a);
                    j.then(function(j, k) {
                        if ("SUCCESS" == j.data.status) {
                            var l = b.updateUserProfileImageIfUploaded(a, d.getUserId(), e.getAccountId());
                            clearInterval(c),
                            l.then(function(a, b) {
                                var c, d;
                                a.hasOwnProperty("data") && (c = a.data.user_profile_image_type,
                                d = a.data.user_profile_image_version),
                                h.isUploading = !1,
                                h.$broadcast("render"),
                                f.$broadcast("userProfilePictureUpdated", c, d),
                                f.$broadcast("refreshImage"),
                                g.trackEvent(g.Upload_Profile_Pic, {
                                    Source: i
                                }),
                                h.$emit("dismissModal", !0)
                            })
                        }
                    })
                }
                function l(a, d, e, f, g, i, j, l) {
                    d = d.toLowerCase(),
                    h.alerts = {
                        success: "Uploading photo..."
                    },
                    h.currentStep = "profilePic:stepsComplete",
                    h.$broadcast("render");
                    var m = b.generateRequestUUID();
                    m.then(function(m, n) {
                        var o = m.data
                          , p = c.uploadFile(a, o + "-original." + d, "temp/requests/" + o + "/" + o + "-original." + d, e);
                        p.then(function(c, e) {
                            var m = b.generateProfileThumbnails(o, o + "." + d, a.size, 100, {
                                x: g,
                                y: f,
                                width: i,
                                height: j
                            });
                            h.alerts = {
                                success: "Generating thumbnails..."
                            },
                            h.$broadcast("render"),
                            m.then(function(a, b) {
                                var c = setInterval(function() {
                                    k(o, c, l)
                                }, 5e3)
                            })
                        })
                    })
                }
                function m() {
                    C.draggable({
                        start: function(a, b) {
                            b.position
                        },
                        drag: function(a, b) {
                            var c = b.position;
                            c.left >= 50 && (b.position.left = 50),
                            c.top >= 50 && (b.position.top = 50),
                            x * u - -1 * b.position.left < 250 && (b.position.left = -(x * u - 250)),
                            y * u - -1 * b.position.top < 250 && (b.position.top = -(y * u - 250))
                        }
                    })
                }
                function n() {
                    i.find('input[type="range"]').change(function() {
                        u = $(this).val();
                        var a = x * u
                          , b = y * u;
                        C.css("width", a).css("height", b);
                        var c = 150 - a / 2
                          , d = 150 - b / 2;
                        C.css("left", c).css("top", d)
                    })
                }
                function o(a) {
                    var b;
                    b = a.split(",")[0].indexOf("base64") >= 0 ? atob(a.split(",")[1]) : unescape(a.split(",")[1]);
                    for (var c = a.split(",")[0].split(":")[1].split(";")[0], d = new Uint8Array(b.length), e = 0; e < b.length; e++)
                        d[e] = b.charCodeAt(e);
                    return new Blob([d],{
                        type: c
                    })
                }
                h.$broadcast("render");
                var p = !1
                  , q = null 
                  , r = i.find("video")[0]
                  , s = (i.find(".step2"),
                0)
                  , t = 0
                  , u = 1
                  , v = 200
                  , w = 200
                  , x = 0
                  , y = 0
                  , z = 0
                  , A = null 
                  , B = null 
                  , C = i.find("#nativeUserUploadPhoto");
                if (h.containerWidth = v,
                h.containerHeight = w,
                h.isUploading = !1,
                navigator.getMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia,
                h.startWebcam)
                    h.currentStep = "profilePic:enableCamera",
                    h.$broadcast("render"),
                    r.addEventListener("canplay", function(a) {
                        p || (actualWidth = r.videoWidth,
                        z = r.videoHeight,
                        x = 300,
                        y = r.videoHeight / (r.videoWidth / x),
                        r.setAttribute("width", x),
                        r.setAttribute("height", y),
                        p = !0)
                    }, !1),
                    h.initializeCam = function() {
                        i.find('input[type="range"]').val(1),
                        navigator.getMedia({
                            video: !0,
                            audio: !1
                        }, function(b) {
                            if (h.currentStep = "profilePic:showVideoFeed",
                            navigator.mozGetUserMedia)
                                r.mozSrcObject = b;
                            else {
                                var c = a.URL || a.webkitURL;
                                r.src = c.createObjectURL(b)
                            }
                            r.play(),
                            q = b,
                            h.$broadcast("render")
                        }, function(a) {
                            h.alerts = {
                                error: "Error accessing camera, please try again."
                            },
                            h.$broadcast("render")
                        })
                    }
                    ,
                    h.initializeCam();
                else if (h.file)
                    switch (A = h.file,
                    A.name.substring(A.name.lastIndexOf(".") + 1).toLowerCase()) {
                    case "gif":
                    case "jpg":
                    case "png":
                    case "jpeg":
                        h.currentStep = "profilePic:adjustImage",
                        h.$broadcast("render");
                        var D = new FileReader;
                        D.onload = function(a) {
                            C.attr("src", a.target.result);
                            var b = new Image;
                            b.onload = function() {
                                if (actualWidth = b.width,
                                z = b.height,
                                actualWidth <= z) {
                                    var a = v / actualWidth;
                                    x = actualWidth * a,
                                    y = z * a
                                } else {
                                    var a = w / z;
                                    x = actualWidth * a,
                                    y = z * a
                                }
                                C.css("width", x).css("height", y);
                                var c = 150 - x / 2
                                  , d = 150 - y / 2;
                                C.css("left", c).css("top", d),
                                h.takePicture()
                            }
                            ,
                            b.src = a.target.result,
                            h.$broadcast("render")
                        }
                        ,
                        D.readAsDataURL(A);
                        break;
                    default:
                        h.alerts = {
                            error: "The file you attached is not supported."
                        },
                        h.$broadcast("render")
                    }
                h.takePicture = function() {
                    if (h.startWebcam) {
                        h.currentStep = "profilePic:adjustImage",
                        h.$broadcast("render"),
                        i.find(".step2").css("width", 300).css("height", 300);
                        var a = document.createElement("canvas");
                        a.setAttribute("crossOrigin", "anonymous"),
                        a.width = x,
                        a.height = y,
                        a.getContext("2d").drawImage(r, 0, 0, x, y);
                        var b = a.toDataURL("image/png");
                        B = b;
                        var c = new Image;
                        c.onload = function() {
                            if (actualWidth = c.width,
                            z = c.height,
                            actualWidth <= z) {
                                var a = v / actualWidth;
                                x = actualWidth * a,
                                y = z * a
                            } else {
                                var a = w / z;
                                x = actualWidth * a,
                                y = z * a
                            }
                            C.attr("src", c.src),
                            C.css("width", x).css("height", y);
                            var b = 150 - x / 2
                              , d = 150 - y / 2;
                            C.css("left", b).css("top", d),
                            console.log(actualWidth, z, x, y)
                        }
                        ,
                        c.src = b,
                        q && q.getVideoTracks().length > 0 && q.getVideoTracks()[0].stop(),
                        r.pause(),
                        m(),
                        n()
                    } else
                        m(),
                        n()
                }
                ,
                h.cancelPicture = function() {
                    q && q.getVideoTracks().length > 0 && q.getVideoTracks()[0].stop(),
                    r && r.pause(),
                    h.$emit("dismissModal")
                }
                ,
                h.printCoordinates = function() {
                    var a = v
                      , b = w
                      , c = 50 - C.position().left
                      , d = 50 - C.position().top
                      , e = actualWidth / (x * u) * a
                      , f = z / (y * u) * b
                      , g = (actualWidth / x,
                    c * (actualWidth / (x * u)))
                      , i = d * (actualWidth / (x * u));
                    h.isUploading = !0,
                    h.$broadcast("render"),
                    C.draggable("disable"),
                    console.log(s, t, u, c, d, g, i, e, f)
                }
                ,
                h.submitPhoto = function() {
                    var a = v
                      , c = w
                      , d = 50 - C.position().left
                      , e = 50 - C.position().top
                      , f = actualWidth / (x * u) * a
                      , g = z / (y * u) * c
                      , i = (actualWidth / x,
                    d * (actualWidth / (x * u)))
                      , j = e * (actualWidth / (x * u));
                    if (h.isUploading = !0,
                    h.$broadcast("render"),
                    C.draggable("disable"),
                    h.startWebcam) {
                        var k = o(B)
                          , m = (b.generateRequestUUID(),
                        "png");
                        l(k, m, m, j, i, f, g, "Camera")
                    } else {
                        var m = (b.generateRequestUUID(),
                        A.name.substring(A.name.lastIndexOf(".") + 1));
                        l(A, m, A.type, j, i, f, g, "File")
                    }
                }
                ,
                h.$on("dismissModal", function(a) {
                    q && q.getVideoTracks().length > 0 && q.getVideoTracks()[0].stop(),
                    r && r.pause()
                }),
                h.$on("$destroy", function() {
                    q && q.getVideoTracks().length > 0 && q.getVideoTracks()[0].stop(),
                    r && r.pause()
                })
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvHomeCenterPanelUserHeader", ["alertsService", "utils", function(a, b) {
        return {
            restrict: "AE",
            scope: !0,
            templateUrl: "home/userView/cnvHomeCenterPanelUserHeader.tpl.html",
            link: function(c, d, e) {
                function f(b) {
                    var d = "home/userView/centerPanelWidgets/profilePictureModal.tpl.html"
                      , e = "ProfilePictureModalCtrl"
                      , f = {
                        startWebcam: function() {
                            return !1
                        },
                        file: function() {
                            return b
                        }
                    }
                      , g = a.customModal(d, e, f, "cnvUserProfilePictureModal", !0);
                    g.result.then(function(a) {
                        c.$emit("userProfilePictureUpdated")
                    })
                }
                c.openEditProfileWidget = function(a, b) {
                    a ? c.showEditProfileModal = !0 : c.showEditProfileModal = !1,
                    c.$broadcast("render"),
                    a && b && (d.find("#" + b)[0].select(),
                    d.find("#" + b)[0].focus())
                }
                ,
                c.openPostBox = function() {
                    $(".inline-insert-cont .dummy-text-area").trigger("onCustomClick")
                }
                ,
                c.openProfilePictureModal = function() {
                    var b = "components/combinedSetProfilePictureModal/combinedSetProfilePictureModal.tpl.html"
                      , c = "CombinedSetProfilePictureModalCtrl"
                      , d = a.customModal(b, c, null , "combined-set-pic-modal");
                    d.result.then(function() {})
                }
                ;
                var g = d.find("#profileImageUpload");
                g.on("change", function(a) {
                    this.files.length > 0 && f(this.files[0])
                }),
                c.openFilePicker = function() {
                    b.fireEvent(g[0], "click")
                }
                ,
                c.$on("$destroy", function() {
                    g.off("change")
                })
            },
            controller: ["$scope", "homeViewStateInfo", "Users", "utils", "userInfo", "$timeout", "chatService", "alertsService", "AppLinks", "$location", "utils", "config", "webhooksService", "$window", "bannerService", function(a, b, c, d, e, f, g, h, i, j, d, k, l, m, n) {
                function o() {
                    if (u.item.user_id == e.getUserId()) {
                        var b = function() {
                            var a = i.newResourceLink("12", [{
                                type: "9",
                                uid: 0
                            }, {
                                type: "myAccountSettings",
                                uid: 0
                            }], null , "My account settings")
                              , b = i.linkToUrl(a);
                            j.path(b.slice(1))
                        }
                          , c = function() {
                            var a = i.newResourceLink("12", [{
                                type: "9",
                                uid: 0
                            }, {
                                type: "notificationsSettings",
                                uid: 0
                            }], null , "Notification Settings")
                              , b = i.linkToUrl(a);
                            j.path(b.slice(1))
                        }
                        ;
                        u.dropdownCtrl.options = [{
                            label: "Edit profile",
                            callback: p
                        }],
                        e.isGuestUser() || u.dropdownCtrl.options.push({
                            label: "Manage groups",
                            callback: function() {
                                var a = i.newResourceLink("22", [{
                                    uid: "1",
                                    type: "26"
                                }, {
                                    uid: "2",
                                    type: "AllGroups"
                                }], null , "Groups Directory (All Groups)")
                                  , b = i.linkToUrl(a, !0);
                                j.url(b.slice(1))
                            }
                        }),
                        u.dropdownCtrl.options.push({
                            label: "Notification preferences",
                            callback: c
                        }, {
                            isDivider: !0
                        }, {
                            label: "Settings",
                            callback: b
                        }),
                        d.isIE() || d.isSafari() || k.IS_NATIVE || u.dropdownCtrl.options.push({
                            label: "Set Profile Picture",
                            callback: t
                        }),
                        u.dropdownCtrl.options.push({
                            label: "Upload Profile Picture",
                            callback: a.openFilePicker
                        })
                    } else
                        "SYSTEM" != u.item.user_type || u.item.integration_creator_id != e.getUserId() && !e.isAdminMode() ? "SYSTEM" !== u.item.user_type && (u.dropdownCtrl.options = [],
                        "GUEST" != u.item.user_role && (u.item.logged_in_user_follows ? u.dropdownCtrl.options = [{
                            label: "Unfollow",
                            callback: r
                        }] : u.dropdownCtrl.options = [{
                            label: "Follow",
                            callback: q
                        }]),
                        u.dropdownCtrl.options.push({
                            label: "Share a post with " + u.item.first_name,
                            callback: function() {
                                a.openPostBox()
                            }
                        }),
                        e.isAdminMode() || u.dropdownCtrl.options.push({
                            label: "Start a chat with " + u.item.first_name,
                            callback: s
                        })) : (u.dropdownCtrl.options = [],
                        u.item.integration_creator_id == e.getUserId() && u.dropdownCtrl.options.push({
                            label: "Manage integration ",
                            callback: function() {
                                a.manageIntegration(u.item.webhook_id)
                            }
                        }),
                        u.dropdownCtrl.options.push({
                            label: "Remove integration ",
                            callback: function() {
                                a.deleteIntegration(u.item.webhook_id)
                            }
                        }));
                    a.$broadcast("render")
                }
                function p() {
                    j.search("action", null ),
                    a.showEditProfileModal = !0,
                    a.$broadcast("render")
                }
                function q() {
                    var b = c.followUser(u.item.user_id);
                    b.then(function(b, c) {
                        u.item.logged_in_user_follows = !0,
                        o(),
                        a.$emit("userFollowed")
                    })
                }
                function r() {
                    var b = c.unfollowUser(u.item.user_id);
                    b.then(function(b, c) {
                        u.item.logged_in_user_follows = !1,
                        o(),
                        a.$emit("userUnfollowed")
                    })
                }
                function s() {
                    g.openChatWithUserId(u.item.user_id)
                }
                function t() {
                    var b = "home/userView/centerPanelWidgets/profilePictureModal.tpl.html"
                      , c = "ProfilePictureModalCtrl"
                      , d = {
                        startWebcam: function() {
                            return !0
                        },
                        file: function() {
                            return null 
                        }
                    }
                      , e = h.customModal(b, c, d, "cnvUserProfilePictureModal");
                    e.result.then(function(b) {
                        a.$emit("userProfilePictureUpdated")
                    })
                }
                var u = a;
                a.utils = d;
                var v = null ;
                a.setContent = function(d) {
                    if (b.getState() === b.STATE_USER && (u.filter = b.getFromFilter(),
                    u.filter.value != v || d)) {
                        u.item = {},
                        u.dropdownCtrl = {};
                        var f = c.getUser(u.filter.value);
                        u.item.feedTitle = f ? f.getFullName() : u.filter.description,
                        u.item.thisUser = u.filter.value == e.getUserId(),
                        a.$broadcast("render"),
                        a.$broadcast("refreshImage"),
                        c.getUserDetails(u.filter.value).then(function(b) {
                            b && b.user_id === u.filter.value && (u.item = b,
                            u.item.feedTitle = u.item.first_name + (u.item.last_name ? " " + u.item.last_name : ""),
                            u.item.thisUser = b.user_id == e.getUserId(),
                            u.item.formattedDesignation = u.item.designation ? u.item.designation : "What is your job title?",
                            u.item.formattedAboutMe = u.item.about_me ? u.item.about_me : u.item.thisUser ? "Your bio is a mystery." : u.item.first_name + "'s bio is a mystery.",
                            v = u.filter.value,
                            o(),
                            u.dropdownCtrl.options.length > 0 && (a.showUserDropdown = !0),
                            ("REMOVED" === b.user_status || "INVITED" === b.user_status) && (a.showUserDropdown = !1),
                            j.search().action && "editProfile" == j.search().action && !d && p(),
                            a.$broadcast("render"))
                        })
                    }
                }
                ,
                a.setProfilePictureViaWebcam = t,
                a.$on("openEditProfileWidget", function(b, c) {
                    a.openEditProfileWidget(!0, c)
                }),
                a.$on("reRenderUserView", function(b) {
                    a.setContent(!0)
                }),
                a.$on("homeViewStateChange", function(b) {
                    a.setContent()
                }),
                a.manageIntegration = function(a) {
                    promise = l.getIntegrationDetails(a),
                    promise.then(function(b) {
                        if ("REVOKED" == b.status)
                            return n.showBanner("This integration has been revoked.", !1, !1, promise),
                            !1;
                        var c = null ;
                        if (c = b.gcal_integration_id ? "AddGcalIntegration" : b.twitter_integration_id ? "AddTwitterIntegration" : b.gmail_integration_id ? "AddGmailIntegration" : b.zap_id ? "zapier" : "AddIntegration",
                        "zapier" == c)
                            m.open("https://zapier.com/app/editor/");
                        else {
                            var d = a + ":w"
                              , e = i.newResourceLink("100", [{
                                uid: d,
                                type: "100"
                            }, {
                                uid: "2",
                                type: c
                            }], null , "Update Integration")
                              , f = i.linkToUrl(e, !0);
                            j.url(f.slice(1))
                        }
                    })
                }
                ,
                a.deleteIntegration = function(a) {
                    promise = l.deleteIntegration(a),
                    n.showBanner_promise(promise, "Deleting integration...", "Integration deleted", "This integration has already been revoked.", !1, !1, promise),
                    promise.then(function(a) {
                        j.url("/feed")
                    })
                }
                ,
                b.getState() === b.STATE_USER && c.getUsers()["finally"](function() {
                    a.setContent()
                })
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvUserProfileDetailsWidget", [function() {
        return {
            restrict: "E",
            scope: !0,
            replace: !0,
            templateUrl: "home/userView/rightPanelWidgets/cnvUserProfileDetailsWidget.tpl.html",
            controller: ["$scope", "homeViewStateInfo", "Users", function(a, b, c) {
                var d = null ;
                a.followUser = function() {
                    d = b.getFromFilter().value,
                    a.showSpinner = !0,
                    a.$broadcast("render"),
                    c.followUser(d).then(function(b, c) {
                        a.showSpinner = !1,
                        a.$emit("reRenderUserProfile"),
                        a.$emit("userFollowed")
                    })
                }
                ,
                a.unfollowUser = function() {
                    d = b.getFromFilter().value,
                    a.showSpinner = !0,
                    a.$broadcast("render"),
                    c.unfollowUser(d).then(function(b, c) {
                        a.showSpinner = !1,
                        a.$emit("reRenderUserProfile"),
                        a.$emit("userUnfollowed")
                    })
                }
                ,
                a.showUnfollowBtn = function(b) {
                    b ? a.unfollowBtn = !0 : a.unfollowBtn = !1,
                    a.showSpinner || a.$broadcast("render")
                }
                ,
                a.getPhoneNumbers = function(a) {
                    var b = a.split(",");
                    return b.map(function(a) {
                        return String.prototype.trim.apply(a)
                    })
                }
            }
            ],
            link: function(b, c, d) {
                b.showPromptForSkype = function() {
                    a.prompt("Use Ctrl+C to copy the text below.", b.user.skype_name)
                }
                ,
                b.openEditProfileWidget = function(a) {
                    b.$emit("openEditProfileModal", a)
                }
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvUserProfileDiscussionsWidget", [function() {
        return {
            restrict: "E",
            scope: !0,
            replace: !0,
            templateUrl: "home/userView/rightPanelWidgets/cnvUserProfileDiscussionsWidget.tpl.html"
        }
    }
    ]),
    b.module("convoApp").directive("cnvUserProfileEditWidget", [function() {
        return {
            restrict: "E",
            scope: !0,
            replace: !0,
            templateUrl: "home/userView/rightPanelWidgets/cnvUserProfileEditWidget.tpl.html",
            controller: ["$scope", "Users", "utils", "config", "nativeCommBridge", "alertsService", function(a, b, c, d, e, f) {
                function g(a) {
                    var b = new RegExp("^https?://");
                    return b.test(a) || (a = "http://" + a),
                    a
                }
                a.utils = c,
                a.IS_NATIVE = d.IS_NATIVE,
                a.TWITTER_REGEX_PATTERN = "/^https?://([wd]+.)?twitter.com$/ig",
                a.$watch("item", function() {
                    a.user = {
                        first_name: a.item.first_name,
                        last_name: a.item.last_name,
                        designation: a.item.designation,
                        about_me: a.item.about_me,
                        location: a.item.location,
                        phone_no: a.item.phone_no,
                        email: a.item.email,
                        linked_in_link: a.item.linked_in_link,
                        twitter_link: a.item.twitter_link
                    },
                    console.log(a.user.twitter_link),
                    a.user.twitter_link || a.appendTwitterUrlOnClick(),
                    a.linked_in_link || a.appendLinkedinUrlOnClick()
                }),
                a.openProfilePictureModal = function() {
                    var b = "components/combinedSetProfilePictureModal/combinedSetProfilePictureModal.tpl.html"
                      , c = "CombinedSetProfilePictureModalCtrl"
                      , d = f.customModal(b, c, null , "combined-set-pic-modal");
                    a.openEditProfileWidget(!1),
                    d.result.then(function() {})
                }
                ,
                a.submitUserDetails = function() {
                    a.showSpinner = !0,
                    a.$broadcast("render"),
                    !a.user || a.updateDetails.$error.maxlength || a.updateDetails.$error.pattern ? (a.updateDetails.$error.maxlength || a.updateDetails.$error.pattern) && (a.showSpinner = !1,
                    a.$broadcast("render")) : (a.user.linked_in_link && (a.user.linked_in_link = g(a.user.linked_in_link)),
                    a.user.twitter_link && (a.user.twitter_link = g(a.user.twitter_link)),
                    b.updateUserProfile(a.user).then(function(b, c) {
                        a.showSpinner = !1,
                        a.$broadcast("render"),
                        a.$emit("reRenderUserView"),
                        a.openEditProfileWidget(!1),
                        d.IS_NATIVE && e.refreshMenulet()
                    }))
                }
                ,
                a.uploadDpFromEditProfileWidget = function() {
                    a.openEditProfileWidget(!1),
                    a.openFilePicker()
                }
                ,
                a.setDpFromEditProfileWidget = function() {
                    a.openEditProfileWidget(!1),
                    a.setProfilePictureViaWebcam()
                }
            }
            ],
            link: function(a, b, c) {
                a.appendTwitterUrlOnClick = function() {}
                ,
                a.appendLinkedinUrlOnClick = function() {}
                ,
                a.editProfileKeyBindings = function(b) {
                    27 == b.keyCode && a.openEditProfileWidget(!1)
                }
                ;
                var d = function(a) {
                    a.preventDefault()
                }
                ;
                b.on("mousewheel", d),
                b.on("scroll", d),
                $("body").on("keydown", a.editProfileKeyBindings),
                a.$on("$destroy", function() {
                    b.off("mousewheel", d),
                    b.off("scroll", d),
                    $("body").off("keydown", a.editProfileKeyBindings)
                })
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvUserProfileTopGroupsWidget", [function() {
        return {
            restrict: "E",
            scope: !0,
            replace: !0,
            templateUrl: "home/userView/rightPanelWidgets/cnvUserProfileTopGroupsWidget.tpl.html",
            controller: ["$scope", "Users", "homeViewStateInfo", "Groups", function(a, b, c, d) {
                function e() {
                    var d = b.getTopGroups(c.getFromFilter().value);
                    d.then(function(b) {
                        a.topGroups = b,
                        a.$broadcast("render")
                    })
                }
                a.$on("homeViewStateChange", function() {
                    "USER" == c.getState() && e()
                }),
                d.on("groupsUpdated", function() {
                    a.$broadcast("render")
                }),
                e()
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvInlineInsert", ["utils", function(b) {
        return {
            restrict: "E",
            priority: 0,
            scope: !0,
            templateUrl: "inlineInsert/cnvInlineInsert.tpl.html",
            link: function(c, d, e) {
                c.setFocusOnTagsfield = function() {
                    d.find(".tags-field-cont tags-input .tags").trigger("click")
                }
                ,
                c.focusTagsInput = function() {
                    setTimeout(function() {
                        b.fireEvent(d.find(".to-field-cont tags-input .tags")[0], "click")
                    }, 0)
                }
                ,
                c.pasteFromClipboard = function() {
                    setTimeout(function() {
                        b.fireEvent(d.find(".ql-editor")[0], "click")
                    }, 0)
                }
                ,
                c.focusNoteTitle = function() {
                    var a = d.find("#noteTitleField");
                    a.focus()
                }
                ,
                c.hideDummyTextArea = function() {
                    d.find(".dummy-text-area").addClass("ng-hide")
                }
                ,
                d.find(".dummy-text-area").on("onCustomClick", function(a, b, d) {
                    c.onDummyTextAreaClick({
                        noteEditorHtmlText: b,
                        noteEditorTitle: d
                    })
                }),
                c.scrollWindowToTop = function() {
                    $(a).scrollTop()
                }
                ,
                c.openGiphyPopUp = function() {
                    d.find("#iShowGiphyPopup").trigger("showGiphyPopover")
                }
                ,
                c.__FIX__collapseInstantly = function() {
                    d.find(".dummy-text-area").addClass("block"),
                    d.find(".inline-insert-active-cont-wrapper").css("display", "none"),
                    setTimeout(function() {
                        d.find(".dummy-text-area").removeClass("block"),
                        d.find(".inline-insert-active-cont-wrapper").css("display", "")
                    }, 0)
                }
            },
            controller: ["$scope", "$q", "Users", "Groups", "usersGroupsListProvider", "Note", "Link", "userInfo", "accountInfo", "alertsService", "mentionsHistory", "popoverUtils", "$interval", "$rootScope", "FilterTypes", "hashtagsProvider", "homeViewStateInfo", "$injector", "nativeCommBridge", "$timeout", "nativeHeightUpdate", "draftService", "config", "getResourceLinkUrlFilter", "bannerService", "settingsService", "mixpanelService", "atMentionsListProvider", "onboardingService", "UploadService", function(c, d, e, f, g, h, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C, D, E, F, G) {
                function H() {
                    c.postPermissions = 7,
                    c.iconCondtions = {
                        canEdit: !0,
                        canComment: !1,
                        canView: !1
                    }
                }
                function I() {
                    c.postPermissions = 3,
                    c.iconCondtions = {
                        canEdit: !1,
                        canComment: !0,
                        canView: !1
                    }
                }
                function J() {
                    c.postPermissions = 1,
                    c.iconCondtions = {
                        canEdit: !1,
                        canComment: !1,
                        canView: !0
                    }
                }
                function K() {
                    console.log("state changed.");
                    var a = t.getToFilter() || t.getFromFilter();
                    Ia.canShareWith = [],
                    a && a.value !== k.getUserId() && e.getUsers().then(function() {
                        var b = g.getUserListItem(a.value);
                        null  != b && (console.log("get users."),
                        Ia.canShareWith.push(b),
                        Ia.$broadcast("refreshImage"))
                    })
                }
                function L() {
                    Ea = p(fa, 15e3)
                }
                function M() {
                    p.cancel(Ea)
                }
                function N() {
                    var a = Ia.mode
                      , b = !1;
                    return a == ya ? (b = Ia.model.noteTitleText || Ia.noteEditorCtrl.initialized && Ia.noteEditorCtrl.getEditorText().trim().length > 0,
                    !b && Ia.filesUploadManagerCtrl.initialized && (Ia.filesUploadManagerCtrl.isBusy() || Ia.filesUploadManagerCtrl.getSuccessfullyProcessedFiles().length > 0) && (b = !0),
                    !b && Ia.tagList.length && (b = !0)) : a == za && (b = Ia.linkResolveCtrl.initialized),
                    b
                }
                function O(a) {
                    Ia.toolbarActive = a
                }
                function P(a) {
                    if (Ia.scrollWindowToTop(),
                    a = [a],
                    Ia.active) {
                        Ia.mode != ya && aa();
                        for (var b in a)
                            a[b].noteId = Ia.noteId;
                        Ia.$broadcast("enqueueFile", a)
                    } else
                        R(ya, {
                            files: a
                        });
                    z.IS_MENULET && setTimeout(function() {
                        x.updateHeight("on file select")
                    }, 0),
                    Ia.$$phase || Ia.$digest()
                }
                function Q() {
                    Ia.active && (Ia.tagField || (Ia.tagField = !0),
                    setTimeout(Ia.setFocusOnTagsfield, 0),
                    z.IS_MENULET && setTimeout(x.updateHeight("on onToggleTagsField"), 0))
                }
                function R(a, c) {
                    if (Ia.model = {},
                    Ia.shareWith = [],
                    Ia.shareWithSelf = [],
                    Ia.tagList = [],
                    Ia.model.noteTitleText = c.noteEditorTitle || "",
                    Aa = !1,
                    Ia.noteSaveText = "",
                    Da = null ,
                    Ca = null ,
                    ca(),
                    z.IS_MENULET && y.dataAvailableInLocalStorage() ? X() : S(T),
                    Ia.noteId = b.generateUniqueId(),
                    c.files)
                        for (var d in c.files)
                            c.files[d].noteId = Ia.noteId;
                    if (a == ya) {
                        var e = {};
                        Ia.noteEditorCtrl = {
                            initialized: !1,
                            initialHtmlText: c.noteEditorHtmlText || "",
                            height: sa,
                            captureEvents: e,
                            editorInitialized: V
                        },
                        Ia.filesUploadManagerCtrl = {
                            initialized: !1,
                            templateType: "inlineinsert",
                            files: c.files || []
                        }
                    } else if (a == za) {
                        var e = {};
                        Ia.linkCommentEditorCtrl = {
                            initialized: !1,
                            initialHtmlText: c.linkCommentEditorHtmlText || "",
                            height: sa,
                            editorInitialized: W
                        },
                        Ia.linkResolveCtrl = {
                            initialized: !1,
                            url: c.url
                        }
                    }
                    Ia.mode = a,
                    Ia.active = !0,
                    L(),
                    Ia.hideDummyTextArea && Ia.hideDummyTextArea(),
                    q.login_data.onboarding_state && 0 == q.login_data.onboarding_state.used_inline_insert ? Ia.Edited_Recipients = 0 : Ia.Edited_Recipients = 1
                }
                function S(a) {
                    f.getGroups().then(function() {
                        e.getUsers().then(function() {
                            a()
                        })
                    })
                }
                function T() {
                    var a = null 
                      , b = q.filterInfo;
                    if (b.filterApplied && b.filterLink.filter && 1 == b.filterLink.filter.filters.length) {
                        var c = b.filterLink.filter.filters[0];
                        if (c.type == r.TO || c.type == r.FROM) {
                            var a = g.getPublishableUserListItem(c.value);
                            a || (a = g.getPublishableGroupListItem(c.value))
                        }
                    }
                    a ? Ia.shareWith.push(a) : C.getGeneralSettings().then(function(a) {
                        for (i = 0; i < a.sharing_options_list.length; i++) {
                            var b = null ;
                            "GROUP" == a.sharing_options_list[i].type && (b = g.getGroupListItem(a.sharing_options_list[i].share_to)),
                            "USER" == a.sharing_options_list[i].type && (b = g.getUserListItem(a.sharing_options_list[i].share_to)),
                            null  != b && Ia.shareWith.push(b)
                        }
                    }),
                    z.IS_MENULET && x.updateHeight("groupsResponse.success")
                }
                function U() {
                    sharingData = g.getUserListItem(k.user_id),
                    null  != sharingData && Ia.shareWithSelf.push(sharingData)
                }
                function V() {
                    z.IS_MENULET && (Ia.noteEditorCtrl.captureEvents.on("text-change", function(a, b) {
                        x.updateHeight("text-change")
                    }),
                    setTimeout(function() {
                        x.updateHeight("editor initilizaed")
                    }, 400)),
                    q.$broadcast("inlineInsertOpen")
                }
                function W() {
                    z.IS_MENULET && (Ia.linkCommentEditorCtrl.captureEvents.on("text-change", function(a, b) {
                        x.updateHeight("text-change")
                    }),
                    setTimeout(function() {
                        x.updateHeight("editor initilizaed")
                    }, 400))
                }
                function X() {
                    var a, b = null ;
                    a = y.getLocalStorageData(),
                    promise = h.getNote(a[1]),
                    promise.success(function(a) {
                        if (S(function() {
                            if (Fa = !0,
                            +a.data.item.draft) {
                                b = a.data.mappings["mappings_" + a.data.item_id];
                                for (var c = b.length - 1; c >= 0; c--) {
                                    var d = null ;
                                    "GROUP" == b[c].type && (d = g.getGroupListItem(b[c].published_to)),
                                    "USER" == b[c].type && (d = g.getUserListItem(b[c].published_to)),
                                    null  != d && (+b[c].is_at_mentioned && (d.readonly = !0),
                                    Ia.shareWith.push(d))
                                }
                            } else
                                T();
                            z.IS_MENULET && x.updateHeight("groupsResponse.success")
                        }),
                        +a.data.item.draft && (Ia.noteId = a.data.item_id,
                        Da = a.revisionNo,
                        +a.data.item.show_title && (Ia.model.noteTitleText = a.data.item.title),
                        Ia.mode == ya,
                        Ia.noteEditorCtrl.setContent(a.data.item.complete_text),
                        a.data.files.hasOwnProperty("files_" + a.data.item_id))) {
                            files = a.data.files["files_" + a.data.item_id];
                            for (var c = 0, d = files.length; d > c; c++)
                                Ia.filesUploadManagerCtrl.addSuccessfullyProcessedFile(files[c])
                        }
                    })
                }
                function Y(a, b) {
                    var c = {};
                    a == ya ? Ia.noteEditorCtrl = {
                        initialized: !1,
                        initialHtmlText: b.noteEditorHtmlText || "",
                        height: sa,
                        captureEvents: c,
                        editorInitialized: V
                    } : a == za && (Ia.linkCommentEditorCtrl = {
                        initialized: !1,
                        initialHtmlText: b.linkCommentEditorHtmlText || "",
                        height: sa,
                        captureEvents: c,
                        editorInitialized: W
                    },
                    Ia.linkResolveCtrl = {
                        initialized: !1,
                        url: b.url
                    }),
                    Ia.mode = a,
                    z.IS_MENULET && x.updateHeight("Switch Mode")
                }
                function Z(a) {
                    var b = {
                        url: a,
                        linkCommentEditorHtmlText: Ia.model.noteTitleText || ""
                    };
                    Y(za, b)
                }
                function aa() {
                    var a = Ia.linkCommentEditorCtrl.getEditorHtmlText().trim();
                    Y(ya, {
                        noteEditorHtmlText: a || ""
                    })
                }
                function ba() {
                    Ia.__FIX__collapseInstantly(),
                    M(),
                    Fa = !1,
                    Ga = !1,
                    Ia.noteSaveText = "",
                    Da = Ca = null ,
                    Ia.insertOptionsCtrl.textToolbar.hide(),
                    -Ia.insertOptionsCtrl.resetGiphySearchText(),
                    Ia.active = Ia.sharing = Ia.tagField = !1,
                    Ia.mode = "",
                    qa && qa.off("feedPolled", ba),
                    z.IS_MENULET && setTimeout(Ia.onDummyTextAreaClick, 0);
                    var a = document.activeElement;
                    a.classList.contains("ql-ie-10") && a.blur(),
                    Ha.off()
                }
                function ca() {
                    c.postPermissions = 7,
                    c.iconCondtions = {
                        canEdit: !0,
                        canComment: !1,
                        canView: !1
                    }
                }
                function da(a) {
                    N() || ba()
                }
                function ea() {
                    var a = !1;
                    Ia.mode == ya && Ia.filesUploadManagerCtrl.initialized && Ia.filesUploadManagerCtrl.isBusy() ? a = !0 : Ia.mode == za && Ia.linkResolveCtrl.isBusy() && (a = !0),
                    a ? m.promptModal("Unsaved changes", "Are you sure you want to discard the unsaved changes?", function() {
                        ba()
                    }, null , "Discard") : (fa(),
                    ba())
                }
                function fa() {
                    var a = Ia.mode
                      , b = !1;
                    if (a == ya ? (b = Ia.model.noteTitleText || Ia.noteEditorCtrl.initialized && Ia.noteEditorCtrl.getEditorText().trim().length > 0,
                    !b && Ia.filesUploadManagerCtrl.initialized && Ia.filesUploadManagerCtrl.getSuccessfullyProcessedFiles().length > 0 && (b = !0),
                    !b && Fa && (b = !0)) : a == za && (b = Ia.linkResolveCtrl.initialized),
                    b) {
                        var c = !0;
                        a == ya && Ia.filesUploadManagerCtrl.initialized && Ia.filesUploadManagerCtrl.isBusy() && (c = !1),
                        a == za && (c = !1),
                        0 == Ia.shareWith.length && 0 === Ia.shareWithSelf.length && U(),
                        c && ga()
                    }
                }
                function ga() {
                    if (Aa || Ia.sharing)
                        return !1;
                    var a = ka(1);
                    -1 === a ? (Ia.noteSaveText = va,
                    Aa = !1) : (Aa = !0,
                    Ia.noteSaveText = wa)
                }
                function ha(a) {
                    Ba = a || {}
                }
                function ia() {
                    var a = !1;
                    return Ia.mode == ya && Ca && Ca.item_id === Ia.noteId && (a = !0),
                    a
                }
                function ja() {
                    if (0 == Ia.shareWith.length || Aa)
                        return void (Ia.validSharingInfo = !1);
                    var a = Ia.mode
                      , b = !1;
                    if (a == ya) {
                        if (b = Ia.model.noteTitleText || Ia.noteEditorCtrl.initialized && Ia.noteEditorCtrl.getEditorText().trim().length > 0,
                        !b && Ia.filesUploadManagerCtrl.initialized && (Ia.filesUploadManagerCtrl.isBusy() || Ia.filesUploadManagerCtrl.getSuccessfullyProcessedFiles().length > 0)) {
                            var c = !1;
                            if (!Ia.filesUploadManagerCtrl.isBusy()) {
                                c = !0;
                                for (var d = Ia.filesUploadManagerCtrl.getSuccessfullyProcessedFiles(), e = 0; e < d.length; e++)
                                    if (d[e].status === G.FILE_STATUS_CONVERSION_COMPLETED || d[e].status === G.FILE_STATUS_CONVERSION_FAILED) {
                                        c = !1;
                                        break
                                    }
                            }
                            b = c ? !1 : !0
                        }
                    } else
                        a == za && (b = Ia.linkResolveCtrl.initialized);
                    if (b) {
                        Ia.sharing = !0;
                        var f = !0;
                        if (a == ya) {
                            if (Ia.filesUploadManagerCtrl.initialized && Ia.filesUploadManagerCtrl.isBusy()) {
                                Ga = !0;
                                var g = Ia.$on("filesUploadManagerCtrl_allFilesProcessed", function() {
                                    g();
                                    var a = Ia.filesUploadManagerCtrl.getSuccessfullyProcessedFiles()
                                      , b = !0
                                      , c = "";
                                    if (0 == a.length && (Ia.sharing = !1,
                                    b = !1,
                                    c = "The files could not be attached. Please try again."),
                                    b)
                                        for (var d = 0; d < a.length; d++) {
                                            var e = a[d];
                                            if (e.status === G.FILE_STATUS_UPLOAD_FAILED || e.status === G.FILE_STATUS_CONVERSION_REQ_FAILED || e.status === G.FILE_STATUS_CONVERSION_FAILED) {
                                                b = !1,
                                                Ia.sharing = !1,
                                                c = "Some files could not be attached. please try again.";
                                                break
                                            }
                                        }
                                    b || m.alertModal("Convo", c, "Okay", function() {
                                        Ga = !1
                                    }),
                                    b && ka()
                                });
                                f = !1
                            }
                        } else if (a == za && Ia.linkResolveCtrl.isBusy()) {
                            var g = Ia.$on("linkResolveCtrl_completed", function() {
                                g(),
                                ka()
                            });
                            f = !1
                        }
                        f && ka()
                    }
                }
                function ka(b) {
                    for (var d, e = [], f = 0; f < Ia.shareWith.length; f++) {
                        var g = Ia.shareWith[f];
                        e.push({
                            published_to: g.id,
                            type: g.type,
                            access_level: "ALL"
                        }),
                        b || la(g)
                    }
                    for (var f = 0; f < Ia.shareWithSelf.length; f++) {
                        var g = Ia.shareWithSelf[f];
                        e.push({
                            published_to: g.id,
                            type: g.type,
                            access_level: "ALL"
                        })
                    }
                    if (Ia.shareWithSelf = [],
                    b || (Ia.noteSaveText = "",
                    Ia.insertOptionsCtrl.textToolbar.hide(),
                    M()),
                    Ia.mode == ya) {
                        var i = "";
                        Ia.mode == ya && (i = Ia.model.noteTitleText || "");
                        var n = ""
                          , o = "";
                        Ia.noteEditorCtrl.initialized && (n = Ia.noteEditorCtrl.getEditorText() || "",
                        o = Ia.noteEditorCtrl.getEditorHtmlText() || "");
                        var p = [];
                        if (Ia.mode == ya && Ia.filesUploadManagerCtrl.initialized)
                            for (var r = Ia.filesUploadManagerCtrl.getSuccessfullyProcessedFiles(), f = 0; f < r.length; f++) {
                                var s = r[f];
                                s.serverFileId && p.push({
                                    name: s.name,
                                    size: s.size,
                                    file_name_id: s.fileId,
                                    file_id: s.serverFileId,
                                    type: s.type
                                })
                            }
                        for (var t = "", u = Ia.tagList || [], f = 0, w = u.length; w > f; f++)
                            t += u[f].label + ",";
                        var x = {
                            noteId: Ia.noteId,
                            title: i,
                            bodyText: n,
                            bodyHtmlText: o,
                            shareWith: e,
                            attachedFiles: p,
                            draft: b || 0,
                            tags: t,
                            auto_save: b || 0,
                            permissions: c.postPermissions
                        };
                        if (b && JSON.stringify(x) == JSON.stringify(Ba))
                            return -1;
                        b || Ia.noteEditorCtrl.blur(),
                        d = h.createNote(x.noteId, x.title, x.bodyText, x.bodyHtmlText, x.shareWith, x.attachedFiles, x.draft, Da || 0, x.tags, x.auto_save, x.permissions),
                        ha(x)
                    } else {
                        var A = Ia.linkResolveCtrl.url
                          , B = Ia.linkResolveCtrl.getData()
                          , C = null ;
                        Ia.linkCommentEditorCtrl.initialized && Ia.linkCommentEditorCtrl.getEditorText().trim().length > 0 && (C = Ia.linkCommentEditorCtrl.getEditorHtmlText());
                        var x = {
                            url: A,
                            resolvedData: B,
                            selectedIndex: B.selectedIndex,
                            commentHtmlText: C,
                            shareWith: e,
                            draft: b || 0,
                            permissions: c.postPermissions
                        };
                        if (b && JSON.stringify(x) == JSON.stringify(Ba))
                            return -1;
                        b || Ia.linkCommentEditorCtrl.blur(),
                        d = j.createLink(x.url, x.resolvedData, x.selectedIndex, x.commentHtmlText, x.shareWith, 0, null , Da || 0, x.permissions),
                        ha(x)
                    }
                    return d.then(function(a) {
                        var a = a.data;
                        if ((Ia.mode != ya || Ia.noteId == a.item_id) && (Ca = a,
                        Fa = !0,
                        b ? (Ia.active && (a && a.item && a.item.revision_no && (Da = a.item.revision_no),
                        Ia.noteSaveText = va),
                        y.saveDraftToLocalStorage(a.item.type, a.item_id),
                        Aa = !1,
                        Ha.trigger("draft-shared")) : (qa ? qa.once("feedPolled", function(a) {
                            if (l.getAccountLevel() !== l.ACCOUNT_LEVELS.STARTER && c.postPermissions.checkBitAt(3) && q.login_data && q.login_data.onboarding_state && q.login_data.onboarding_state.show_post_permissions_tooltip) {
                                var b = null ;
                                if (b = q.filterInfo && q.filterInfo.filterApplied ? a.filter_feed_items : a.feed_items,
                                b && b.length) {
                                    for (var d = null , e = 0; e < b.length; e++)
                                        "ADDED" === b[e].action && b[e].created_by === k.getUserId() && (d = b[e]);
                                    d && (d.enable_permissions_tooltip = !0)
                                }
                            }
                            ba()
                        }) : ba(),
                        y.removeDraftFromLocalStorage(),
                        Ia.$emit("newPostPublishedViaAddBox"),
                        z.IS_MENULET && v.postShared()),
                        F.checkState() && 0 == F.getChecklist().share_a_post_done)) {
                            var d = F.recordAction("share_a_post_done");
                            d.then(function(a, b) {
                                F.setLastPlayedStep("share_post"),
                                c.$emit("cnvOnboarding:updateOnboardingChecklist", !0)
                            })
                        }
                    }, function(c) {
                        if (Aa = !1,
                        Ia.sharing = !1,
                        ha(null ),
                        0 == z.IS_MENULET)
                            if (b)
                                Ia.noteSaveText = xa;
                            else {
                                Ia.noteSaveText = "";
                                var d = "The " + (Ia.mode === ya ? "note" : "link");
                                d += "no_net" === c.customStatus ? " could not be shared because you're disconnected from the internet. Please check your connection and try again." : " could not be shared because of an unknown error. Please try again.",
                                m.alertModal("", d),
                                L()
                            }
                        else
                            $(a).trigger("disconnected")
                    }),
                    !0
                }
                function la(a) {
                    n.addItemToHistory(a.type, a.id)
                }
                function ma() {
                    fa(),
                    y.removeDraftFromLocalStorage(),
                    ba()
                }
                function na() {
                    Ia.noteEditorCtrl.focus()
                }
                function oa() {
                    Ia.$emit("newPostPublishedViaAddBoxInMenulet")
                }
                function pa() {
                    z.IS_NATIVE && v.on("newPostShared", oa)
                }
                var qa = null 
                  , ra = null ;
                if (!z.IS_MENULET)
                    var qa = u.get("Feed");
                var sa = z.IS_MENULET ? {
                    min: 267,
                    max: 350
                } : {
                    min: 85,
                    max: 250
                }
                  , ta = z.IS_MENULET ? 3 : 5
                  , ua = {
                    ENTER: 13,
                    ESCAPE: 27,
                    SAVE: 83,
                    TAB: 9
                }
                  , va = "Saved in Drafts"
                  , wa = "Saving Draft..."
                  , xa = "Couldn't save changes."
                  , ya = 2
                  , za = 3
                  , Aa = !1
                  , Ba = {}
                  , Ca = null 
                  , Da = null 
                  , Ea = null 
                  , Fa = !1
                  , Ga = !1
                  , Ha = {};
                _.extend(Ha, Backbone.Events);
                var Ia = c;
                Ia.IS_NATIVE_MENULET = z.IS_MENULET || !1,
                Ia.maximizeButtonTarget = z.IS_NATIVE ? "_self" : "_blank",
                Ia.RICH_NOTE_MODE = ya,
                Ia.LINK_MODE = za,
                Ia.insertOptionsCtrl = null ,
                Ia.noteSaveText = "",
                Ia.toolbarActive = !1,
                Ia.cnv_mainPlaceholder = z.IS_MENULET && "Type to create a post \nPress ^⌘N at anytime to show this window" || "Write something...",
                Ia.nativeIconColor = z.IS_MENULET && "darkgray" || "darkgray",
                Ia.canShareWith = [],
                Ia.tagField = !1,
                Ia.Edited_Recipients = 1,
                Ia.starter_network = l.getAccountLevel() === l.ACCOUNT_LEVELS.STARTER,
                Ia.validSharingInfo = !0,
                Ia.active = !1,
                Ia.dropdownCtrl = {},
                Ia.isGuest = k.isGuestUser(),
                Ia.tab.appContCtrl.appCtrl.closing = function() {
                    fa()
                }
                ,
                function() {
                    Ia.dropdownCtrl.options = [],
                    Ia.dropdownCtrl.attrs = [],
                    Ia.dropdownCtrl.attrs.push({
                        selector: "a.dropdown-toggle",
                        key: "tabindex",
                        value: "-1"
                    }),
                    Ia.dropdownCtrl.type = "inline_insert_permissions",
                    l.getAccountLevel() !== l.ACCOUNT_LEVELS.STARTER ? (Ia.dropdownCtrl.options.push({
                        label: "Can edit and comment",
                        icon: "cnv-icons-14 cnv-tick v-align-m",
                        conditionalLabelIcon: !0,
                        condition: "canEdit",
                        callback: H
                    }),
                    Ia.dropdownCtrl.options.push({
                        label: "Comment only",
                        icon: "cnv-icons-14 cnv-tick v-align-m",
                        conditionalLabelIcon: !0,
                        condition: "canComment",
                        callback: I
                    }),
                    Ia.dropdownCtrl.options.push({
                        label: "View only",
                        icon: "cnv-icons-14 cnv-tick v-align-m",
                        conditionalLabelIcon: !0,
                        condition: "canView",
                        callback: J
                    })) : Ia.isGuest || Ia.dropdownCtrl.options.push({
                        label: "Permissions (Upgrade)",
                        icon: "cnv-icons-20 icons_Lock-white",
                        callback: function() {
                            q.$emit("upgrade-to-permium")
                        }
                    })
                }(),
                Ia.onTitleKeydown = function(a) {
                    var b = !1;
                    (a.ctrlKey || a.metaKey) && a.keyCode === ua.ENTER ? (Ia.onCtrlOrCmdEnterPressInTextEditor(),
                    b = !0) : (a.ctrlKey || a.metaKey) && a.keyCode === ua.SAVE ? (Ia.onCtrlOrCmdSavePressInTextEditor(),
                    b = !0) : a.keyCode === ua.ESCAPE ? (Ia.onEscKeyPressInTextEditor(),
                    b = !0) : a.shiftKey && a.keyCode === ua.TAB ? (Ia.focusTagsInput(),
                    b = !0) : a.keyCode === ua.ENTER && (Ia.noteEditorCtrl.focus(),
                    b = !0),
                    b && (a.preventDefault(),
                    a.stopImmediatePropagation())
                }
                ,
                Ia.onDummyTextAreaClick = function(a) {
                    Ia.active && N() ? m.promptModal("Unsaved changes", "Are you sure you want to discard the unsaved changes?", function() {
                        ba(),
                        setTimeout(function() {
                            R(ya, a || {})
                        }, 0)
                    }, null , "Discard") : R(ya, a || {})
                }
                ,
                Ia.onAtMentionAdded = function(a) {
                    b.findInObjectArray(Ia.shareWith, "id", a.id) || Ia.shareWith.push(a);
                    var c = b.findInObjectArray(Ia.shareWith, "id", a.id);
                    c && (c.readonly = !0),
                    z.IS_MENULET && x.updateHeight("On AtMentionAdded"),
                    Ia.validSharingInfo = !0
                }
                ,
                Ia.OnCommandExecuted = function(a, b) {
                    setTimeout(function() {
                        ra = Ia.noteEditorCtrl.getSelection(),
                        Ia.insertOptionsCtrl.setGiphySearchText(b),
                        Ia.openGiphyPopUp()
                    }, 0)
                }
                ,
                Ia.$on("giphyPopupClosed", function() {
                    if (ra) {
                        var a = Ia.noteEditorCtrl.getSelection();
                        a || Ia.noteEditorCtrl.setSelection(ra, "USER"),
                        ra = null 
                    } else
                        Ia.noteEditorCtrl.focus()
                }),
                Ia.onHashTagAdded = function(a) {}
                ,
                Ia.onAtMentionRemoved = function(a) {
                    for (var b in Ia.shareWith)
                        if (Ia.shareWith[b].id === a.id) {
                            "GROUP" == Ia.shareWith[b].type && "PROFILE" == Ia.shareWith[b].grouptype ? Ia.shareWith[b].readonly = !1 : Ia.shareWith.splice(b, 1);
                            break
                        }
                    z.IS_MENULET && x.updateHeight("atMention Removed")
                }
                ,
                Ia.onTextSelectionRemoved = function(a) {
                    for (var b = 0; b < Ia.shareWith.length; b++)
                        if (-1 == a.indexOf(Ia.shareWith[b].id)) {
                            if ("GROUP" == Ia.shareWith[b].type && "PROFILE" == Ia.shareWith[b].grouptype) {
                                Ia.shareWith[b].readonly = !1;
                                continue
                            }
                            Ia.shareWith[b].readonly && (Ia.shareWith.splice(b, 1),
                            --b)
                        }
                    z.IS_MENULET && x.updateHeight("Text selection removed")
                }
                ,
                Ia.onItemAddedInToField = function(a) {
                    Ia.validSharingInfo = !0,
                    0 == Ia.Edited_Recipients && (D.trackEvent(D.Edited_Recipients_On_First_Compose_Click),
                    Ia.Edited_Recipients = 1),
                    z.IS_MENULET && x.updateHeight("On onItemAddedInToField")
                }
                ,
                Ia.onItemRemovedInToField = function(a) {
                    0 == Ia.Edited_Recipients && (D.trackEvent(D.Edited_Recipients_On_First_Compose_Click),
                    Ia.Edited_Recipients = 1),
                    z.IS_MENULET && x.updateHeight("On onItemRemovedInToField")
                }
                ,
                Ia.onUrlAddedInNoteEditor = function(a) {
                    console.log("url added: " + a),
                    a = b.partialToFullUrl(a),
                    Z(a)
                }
                ,
                Ia.onEscKeyPressInToField = function() {
                    z.IS_MENULET || Ia.onBoarding_info && Ia.onBoarding_info.preventInlineInsertCollapse || (console.log("esc key press in to-field"),
                    ea())
                }
                ,
                Ia.onCancelPressed = function() {
                    console.log("Cancel pressed in inline-insertField"),
                    ea()
                }
                ,
                Ia.onEscKeyPressInTextEditor = function() {
                    z.IS_MENULET || Ia.onBoarding_info && Ia.onBoarding_info.preventInlineInsertCollapse || (console.log("esc key press"),
                    ea())
                }
                ,
                Ia.onShiftTabPressInTextEditor = function() {
                    z.IS_MENULET || (Ia.focusNoteTitle(),
                    console.log("Shift-Tab key press"))
                }
                ,
                Ia.isClickOnEmojiPopover = function(a) {
                    return $(".custom-emoji-popover").find(a.target || a.srcElement).length > 0
                }
                ,
                Ia.onClickedOutsideInlineInsert = function() {
                    Ga || z.IS_MENULET || Ia.onBoarding_info && Ia.onBoarding_info.preventInlineInsertCollapse || Ia.isClickOnEmojiPopover(event) || (console.log("func called: onClickedOutsideInlineInsert"),
                    Ia.active && da())
                }
                ,
                Ia.onCtrlOrCmdEnterPressInTextEditor = function() {
                    ja()
                }
                ,
                Ia.onCtrlOrCmdSavePressInTextEditor = function() {
                    fa()
                }
                ,
                Ia.onShareBtnClick = function() {
                    ja()
                }
                ,
                Ia.getShareWithDropdownItems = function(a, b, c) {
                    var e = d.defer()
                      , f = [];
                    return "@" == b ? f = Ia.mode == za ? E.queryPublishableUsersAndGroups(a, c + ta) : E.queryPublishableUsersGroupsAndCommands(a, c + ta, E.sources.INLINE_INSERT) : ":" == b && (f = E.queryEmojiData(a, ta)),
                    e.resolve(f),
                    e.promise
                }
                ,
                Ia.getShareWithDropdownItemsWithoutCommands = function(a, b) {
                    var c = d.defer()
                      , e = [];
                    return e = E.queryPublishableUsersAndGroups(a, b + ta),
                    c.resolve(e),
                    c.promise
                }
                ,
                Ia.getHashtagDropdownItems = function(a) {
                    var b = d.defer();
                    return b.resolve(s.getHashtagsDropdownItems(a, ta)),
                    b.promise
                }
                ,
                Ia.onItemAddedInTagField = function(a) {
                    D.trackEvent(D.ADDED_TAGS_TO_POST, {
                        Via: "Compose"
                    })
                }
                ,
                Ia.onItemRemovedInTagField = function(a) {}
                ,
                Ia.getHashtagDropdownItems = function(a) {
                    var b = d.defer();
                    return b.resolve(s.getHashtagsDropdownItems(a, ta)),
                    b.promise
                }
                ,
                Ia.openWithDetailsView = function(b) {
                    var d = !1;
                    if (ia()) {
                        var g = Ca.item.type
                          , h = (Ca.item.resource_type,
                        Ca.item.item_id)
                          , i = Ca.item.title;
                        b.target.href = A(g, [{
                            type: g,
                            uid: h,
                            title: i
                        }], null , i),
                        Ia.onEscKeyPressInTextEditor()
                    } else if (N()) {
                        if (!z.IS_NATIVE) {
                            b.target.href = "javascript:void(0);",
                            Ia.onEscKeyPressInTextEditor();
                            var j = a.open("", "_blank")
                        }
                        var m = function() {
                            var a = Ca.item.type
                              , b = (Ca.item.resource_type,
                            Ca.item.item_id)
                              , c = Ca.item.title
                              , d = A(a, [{
                                type: a,
                                uid: b,
                                title: c
                            }], null , c);
                            z.IS_NATIVE ? (Ia.onEscKeyPressInTextEditor(),
                            location.href = d) : j.open(d, "_self").focus()
                        }
                        ;
                        Ha.once("draft-shared", m),
                        fa(),
                        Ia.noteEditorCtrl.focus(),
                        d = !0
                    } else {
                        Ia.onEscKeyPressInTextEditor();
                        var n = {}
                          , o = (new Date).toUTCString();
                        n.type = "local_details_object",
                        n.data = {},
                        n.data.data = {},
                        n.data.data.item = {
                            item_id: Ia.noteId,
                            title: "Draft note",
                            show_title: "0",
                            preview_text: "",
                            complete_text: "",
                            is_text_broken: "0",
                            note_type: "TEXT",
                            resource_type: "100",
                            type: "6",
                            revision_changes: "",
                            tags: null ,
                            draft: "1",
                            revision_no: "0",
                            created_by: k.getUserId(),
                            created_date: o,
                            last_edit_by: k.getUserId(),
                            last_edit_date: o,
                            deleted: "0",
                            is_system_message: "0",
                            hide_from_feed: "0",
                            permissions: c.postPermissions,
                            logged_in_user_permissions: 7,
                            can_change_permissions: 1,
                            permissions_changed_by: null ,
                            permissions_change_date: null ,
                            starred: 0,
                            muted: 0
                        },
                        n.data.data.item_id = Ia.noteId,
                        n.data.data.resource_type_actions = [],
                        n.data.data.files = {},
                        n.data.data.mappings = {},
                        n.data.data.feed_id = "",
                        n.data.data.likes_info = {
                            last_liked_by: null ,
                            like_count: 0,
                            like_timestamp: "0",
                            liked_by_me: !1
                        };
                        for (var p = [], q = {}, r = {}, s = Ia.shareWith.concat(Ia.shareWithSelf), t = 0, u = s.length; u > t; t++) {
                            var v = s[t];
                            if ("USER" == v.type) {
                                var w = e.getUser(v.id);
                                q[v.id] = {
                                    name: v.label,
                                    profile_image_type: w.get("profile_image_type"),
                                    profile_image_version: w.get("profile_image_version"),
                                    accessible: !0
                                },
                                p.push({
                                    type: "USER",
                                    account_id: l.getAccountId(),
                                    resource_id: Ia.noteId,
                                    published_to: v.id,
                                    access_level: "ALL",
                                    is_at_mentioned: "0"
                                })
                            } else if ("GROUP" == v.type) {
                                var x = f.getGroup(v.id);
                                r[v.id] = {
                                    type: v.grouptype,
                                    title: v.label,
                                    access: x.get("access"),
                                    group_id: v.id,
                                    created_by: x.get("created_by"),
                                    accessible: !0
                                },
                                p.push({
                                    type: "GROUP",
                                    account_id: l.getAccountId(),
                                    resource_id: Ia.noteId,
                                    access_level: "ALL",
                                    published_to: v.id,
                                    is_at_mentioned: "0"
                                })
                            }
                        }
                        if (!q.hasOwnProperty(k.getUserId())) {
                            var w = e.getUser(k.getUserId());
                            q[w.id] = {
                                name: (w.first_name || "") + " " + (w.last_name || ""),
                                profile_image_type: w.get("profile_image_type"),
                                profile_image_version: w.get("profile_image_version")
                            }
                        }
                        n.data.data.mappings["mappings_" + Ia.noteId] = p,
                        n.data.data.users = q,
                        n.data.data.groups = r;
                        var y = A("6", [{
                            type: "6",
                            uid: Ia.noteId,
                            title: n.data.data.item.title
                        }], null , n.data.data.item.title);
                        y += "&local_details_object=" + JSON.stringify(n),
                        b.target.href = y
                    }
                    d && (b.stopImmediatePropagation(),
                    b.preventDefault())
                }
                ,
                Ia.$on("homeViewStateChange", function() {
                    K()
                }),
                Ia.$on("onLinkModeClose", function(a) {
                    aa()
                }),
                Ia.$on("$destroy", function() {
                    M()
                }),
                K(),
                z.IS_MENULET && Ia.$on("fileRemovedClicked", function(a, b) {
                    x.updateHeight("on file remove clicked")
                }),
                Ia.insertOptionsCtrl = {
                    toggleToolbar: O,
                    onFileSelected: P,
                    toggleTagsField: Q
                },
                z.IS_MENULET && (Ia.onDummyTextAreaClick(),
                v.on("onDummyTextAreaClick", Ia.onDummyTextAreaClick),
                v.on("newPostClick", ma),
                v.on("shareClick", Ia.onShareBtnClick),
                v.on("pasteFromClipboard", Ia.pasteFromClipboard),
                v.on("focusMenulet", na)),
                z.IS_NATIVE ? pa() : z.on("clientTypeUpdated", pa)
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvInsertAddItemOptions", ["utils", "UploadService", "nativeHeightUpdate", "config", "nativeCommBridge", function(a, b, c, d, e) {
        return {
            restrict: "AE",
            templateUrl: "inlineInsert/cnvInsertAddItemOptions.tpl.html",
            scope: !0,
            link: function(f, g, h) {
                function i(a) {
                    a.preventDefault()
                }
                var j = f.$eval(h.cnvInsertAddItemOptionsCtrl)
                  , k = {
                    $self: g.find(".editor-toolbar"),
                    active: !1,
                    toggle: function() {
                        if (d.IS_MENULET) {
                            var a = $("#mainApp").height();
                            f.toolbarActive ? a -= 37 : a += 37,
                            c.updateHeight("On textToolbar toogle", 0, a)
                        }
                        f.toolbarActive ? k.hide() : k.show()
                    },
                    hide: function() {
                        k.$self.removeClass("pressed"),
                        j.toggleToolbar(!1)
                    },
                    show: function() {
                        k.$self.addClass("pressed"),
                        j.toggleToolbar(!0)
                    }
                };
                f.textToolbar = k,
                j.textToolbar = k,
                j.resetGiphySearchText = function() {
                    f.giphyObject = {
                        searchText: "",
                        actionType: ""
                    }
                }
                ,
                j.onTriggerFileChooser = function() {
                    g.find("div input[type=file]").trigger("click")
                }
                ;
                var l = a.generateUniqueCharId();
                g.find("div input[type=file]").attr("id", l),
                f.uploadAcknowledgement = function() {
                    return !0
                }
                ;
                var m = {
                    id: "#" + l,
                    dropZoneId: "body",
                    excludeZone: Array(".chatWindow", ".cnv-note-editor"),
                    pasteZoneId: "#inline-insert-files-paste-target",
                    uploadAcknowledgement: f.uploadAcknowledgement
                }
                  , n = b.init(m);
                if (f.fileInputContext = n.context,
                n.input_element.on("cnvchange", function(a, c) {
                    c && c.event && (c.event == b.EVENT_FILE_SELECTED ? j.onFileSelected(c.file) : j.onChange(c))
                }),
                g[0].addEventListener("mousedown", i, !0),
                f.$on("$destroy", function() {
                    g[0].removeEventListener("mousedown", i)
                }),
                d.IS_MENULET) {
                    fileField = g.find("input[type=file]"),
                    fileField.on("click", function() {
                        e.overlayStatus("true")
                    }),
                    fileField.on("change", function() {
                        e.overlayStatus("false")
                    }),
                    document.addEventListener("keydown", p, !1),
                    f.$on("$destroy", o);
                    var o = function() {
                        document.removeEventListener("keydown", p, !1)
                    }
                      , p = function(a) {
                        if (79 === a.which && a.metaKey) {
                            var b = document.getElementById(l);
                            b.click ? b.click() : g.find("div input[type=file]").trigger("click"),
                            a.stopImmediatePropagation(),
                            a.preventDefault()
                        }
                    }
                }
                f.toggleTagsField = j.toggleTagsField,
                f.giphyObject = {
                    searchText: "",
                    actionType: ""
                },
                j.setGiphySearchText = function(a) {
                    f.giphyObject = {
                        searchText: a,
                        actionType: "command"
                    }
                }
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvDropzone", function() {
        return {
            restrict: "E",
            scope: !1,
            templateUrl: "inlineInsert/dropzone/cnvDropzone.tpl.html",
            link: function(a, b, c) {
                var d;
                try {
                    d = a.$eval(c.dropzoneId)
                } catch (e) {
                    d = c.dropzoneId
                } finally {
                    d || (d = c.dropzoneId)
                }
                $(b).find(".dropzone-target").attr("id", d)
            },
            controller: ["$scope", function(a) {
                function b() {
                    var b = "";
                    return b = a.dropzoneCtrl && a.dropzoneCtrl.message ? a.dropzoneCtrl.message : "Drop files here"
                }
                function c() {
                    var b = "";
                    return b = a.dropzoneCtrl && a.dropzoneCtrl.messageClasses ? a.dropzoneCtrl.messageClasses : ""
                }
                a.activated = !1,
                a.expand = !1,
                a.$on("cnv-drag-start", function(d, e) {
                    a.dropzoneMessage = b(),
                    a.messageClass = c(),
                    a.activated = !0,
                    a.expand = !0,
                    a.$apply(a.expand)
                }),
                a.$on("cnv-drag-end", function(b, c) {
                    a.activated = !0,
                    a.expand = !1,
                    a.$apply(a.expand)
                }),
                a.$on("fileSelected", function(b, c) {
                    a.activated = !0,
                    a.expand = !1,
                    a.$apply(a.expand)
                })
            }
            ]
        }
    }),
    b.module("convoApp").directive("cnvShareLink", function() {
        return {
            restrict: "A",
            templateUrl: "inlineInsert/shareLink/cnvShareLink.tpl.html",
            scope: {
                data: "=cnvLinkResolverCtrl"
            },
            link: function(a, b, c) {
                var d = a;
                d.editTitle = function(a) {
                    d.editTitleMode = !0,
                    setTimeout(function() {
                        $(a.target).closest(".link-info").find("textarea.title").focus().select()
                    }, 0)
                }
                ,
                d.editDesc = function(a) {
                    d.editDescMode = !0,
                    setTimeout(function() {
                        $(a.target).closest(".link-info").find("textarea.desc").focus().select()
                    }, 0)
                }
                ,
                d.onBlur = function(a) {
                    -1 != a.target.className.indexOf("title") ? d.editTitleMode = !1 : d.editDescMode = !1
                }
            },
            controller: ["$scope", "Link", "$filter", "nativeHeightUpdate", "config", "utils", function(a, b, c, d, e, f) {
                function g(a) {
                    n.state = n.LINK_STATE_PROCESSED;
                    var b = a.ResponseData;
                    b && (200 != a.ResponseStatus || a.ResponseData.errNo ? i(b) : h(b)),
                    n.$emit("linkResolveCtrl_completed", {}),
                    e.IS_MENULET && d.updateHeight("cnvShareLink onGetLinkData")
                }
                function h(a) {
                    n.state = n.LINK_RESOLVE_STATE_SUCCESS,
                    n.data = a,
                    n.data && n.data.preview_text && (n.data.preview_text = f.removeTags(n.data.preview_text)),
                    n.data.domain = c("getDomainNameFormUrl")(n.data.url);
                    var b = n.data.images_urls;
                    for (var g in b)
                        (null  == b[g] || "" == b[g]) && delete b[g];
                    if (b) {
                        var h = Object.keys(b).length;
                        h && (n.thumbnails = b,
                        n.data.selectedIndex = Object.keys(b)[0],
                        h >= 2 && (n.navigation = !0,
                        n.prevNavigation = !1))
                    }
                    console.log("*** Link RENDERED ***"),
                    e.IS_MENULET && d.updateHeight("cnvShareLink onLinkResolveSuccess")
                }
                function i(b) {
                    a.state = a.LINK_RESOLVE_STATE_FAILED,
                    console.log("Error No: " + b.errNo + "\nError Message: " + b.errorMsg),
                    e.IS_MENULET && d.updateHeight("cnvShareLink onLinkResolveError")
                }
                function j() {
                    a.$emit("onLinkModeClose", {}),
                    e.IS_MENULET && d.updateHeight("cnvShareLink onRemove")
                }
                function k(a) {
                    var b = new URI(a)
                      , c = new URI(a);
                    return c = c.resolve(b),
                    c.toString()
                }
                function l() {
                    var a = Object.keys(n.thumbnails)
                      , b = a.indexOf(n.data.selectedIndex);
                    b > 0 && (n.data.selectedIndex = a[--b],
                    n.nextNavigation = !0,
                    n.prevNavigation = !0),
                    0 >= b && (n.prevNavigation = !1),
                    e.IS_MENULET && d.updateHeight("cnvShareLink onShowPrevIcon")
                }
                function m() {
                    var a = Object.keys(n.thumbnails)
                      , b = a.indexOf(n.data.selectedIndex);
                    b < a.length - 1 && (n.data.selectedIndex = a[++b],
                    n.nextNavigation = !0,
                    n.prevNavigation = !0),
                    b >= a.length - 1 && (n.nextNavigation = !1),
                    e.IS_MENULET && d.updateHeight("cnvShareLink onShowNextIcon")
                }
                var n = a;
                n.LINK_STATE_PROCESSING = "lspg",
                n.LINK_STATE_PROCESSED = "lspd",
                n.LINK_RESOLVE_STATE_SUCCESS = "lrss",
                n.LINK_RESOLVE_STATE_FAILED = "lrsf",
                n.remove = j,
                n.relativeToAbsolute = k,
                n.showPrevIcon = l,
                n.showNextIcon = m,
                n.navigation = !1,
                n.nextNavigation = !0,
                n.prevNavigation = !0,
                n.editTitleMode = !1,
                n.editDescMode = !1,
                n.url = c("removeTags")(n.data.url),
                n.state = a.LINK_STATE_PROCESSING,
                b.getLink(a.url).then(g),
                n.data.isBusy = function() {
                    return n.state != n.LINK_STATE_PROCESSED && n.state != n.LINK_RESOLVE_STATE_SUCCESS && n.state != n.LINK_RESOLVE_STATE_FAILED
                }
                ,
                n.data.getData = function() {
                    return n.data
                }
                ,
                n.data.initialized = !0
            }
            ]
        }
    }),
    b.module("convoApp").factory("appearinVideoCallService", ["config", function(a) {
        var b, c = {}, d = function() {
            var a = new AppearIn;
            return a.isWebRtcCompatible()
        }
        , e = function() {
            b || (b = new AppearIn);
            var c = b.getRandomRoomName().then(function(b) {
                var c = b.split("/")[1]
                  , d = {
                    directLink: a.APPEARIN_VIDEO_CALL_DIRECT_LINK_PREFIX + c,
                    roomName: c
                };
                return d
            });
            return c
        }
        ;
        return c.generateAppearinVideoCallLink = e,
        c.isWebRtcCompatible = d,
        c
    }
    ]),
    b.module("convoApp").directive("cnvBoxFilesIntegrator", [function() {
        return {
            restrict: "A",
            scope: {
                fileInputServiceContext: "=cnvFileInputServiceContext"
            },
            controller: ["$scope", "utils", "$filter", "UploadService", "nativeCommBridge", "config", function(a, b, c, d, e, f) {
                function g(e) {
                    for (var f in e) {
                        var g = {};
                        h(e[f].link, g, function(a, b, c) {
                            a && (c.localUrl = b)
                        }),
                        g.name = e[f].name,
                        g.size = e[f].bytes ? e[f].bytes : 1,
                        g.fileExt = e[f].name.substr(e[f].name.lastIndexOf(".") + 1).toLowerCase(),
                        g.type = g.fileExt,
                        g.fileId = b.generateGuid(),
                        g.fileUploadName = g.fileId + "." + g.type,
                        g.source = e[f].source,
                        g.file_url = e[f].link,
                        g.localUrl = c("getFileIconByType")(g.type, 32),
                        g.status = d.FILE_STATUS_WAITING,
                        a.fileInputServiceContext.event_dispacher.dispach({
                            event: d.EVENT_FILE_SELECTED,
                            file: g
                        }),
                        d.fileConversionReq(a.fileInputServiceContext, g)
                    }
                }
                function h(a, b, c) {
                    var d = new Image;
                    d.onload = function() {
                        c(!0, a, b)
                    }
                    ,
                    d.onerror = function() {
                        c(!1)
                    }
                    ,
                    d.src = a
                }
                a.initializeBox = function() {
                    var b = "addpyhjq1e097z9o4qcg47hmvanbhj1m"
                      , c = {
                        clientId: b,
                        linkType: "direct",
                        multiselect: !0
                    }
                      , d = new BoxSelect(c);
                    d.isBrowserSupported() && (a.$emit("showOverlay", ["Box"]),
                    f.IS_MENULET && e.overlayStatus("true"),
                    d.success(function(b) {
                        var c = [];
                        for (var h in b) {
                            var i = {};
                            i.source = "BOX",
                            i.link = b[h].url,
                            i.bytes = b[h].size,
                            i.name = b[h].name,
                            c.push(i)
                        }
                        g(c),
                        d.unregister(d.SUCCESS_EVENT_TYPE),
                        d.unregister(d.CANCEL_EVENT_TYPE),
                        d = null ,
                        a.$emit("removeOverlay"),
                        f.IS_MENULET && e.overlayStatus("false")
                    }),
                    d.cancel(function() {
                        d.unregister(d.SUCCESS_EVENT_TYPE),
                        d.unregister(d.CANCEL_EVENT_TYPE),
                        d = null ,
                        a.$emit("removeOverlay"),
                        f.IS_MENULET && e.overlayStatus("false")
                    }),
                    d.launchPopup())
                }
            }
            ],
            link: function(a, b, c) {
                b.bind("click", function(b) {
                    a.initializeBox()
                })
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvDropBoxFilesIntegrator", [function() {
        return {
            restrict: "A",
            scope: {
                fileInputServiceContext: "=cnvFileInputServiceContext"
            },
            controller: ["$scope", "utils", "$filter", "UploadService", "nativeCommBridge", "config", function(a, b, c, d, e, f) {
                function g(e) {
                    for (var f in e) {
                        var g = {};
                        h(e[f].link, g, function(a, b, c) {
                            a && (c.localUrl = b)
                        }),
                        g.name = e[f].name,
                        g.size = e[f].bytes ? e[f].bytes : 1,
                        g.fileExt = e[f].name.substr(e[f].name.lastIndexOf(".") + 1).toLowerCase(),
                        g.type = g.fileExt,
                        g.fileId = b.generateGuid(),
                        g.fileUploadName = g.fileId + "." + g.type,
                        g.source = e[f].source,
                        g.file_url = e[f].link,
                        g.localUrl = c("getFileIconByType")(g.type, 32),
                        g.status = d.FILE_STATUS_WAITING,
                        a.fileInputServiceContext.event_dispacher.dispach({
                            event: d.EVENT_FILE_SELECTED,
                            file: g
                        }),
                        d.fileConversionReq(a.fileInputServiceContext, g)
                    }
                }
                function h(a, b, c) {
                    var d = new Image;
                    d.onload = function() {
                        c(!0, a, b)
                    }
                    ,
                    d.onerror = function() {
                        c(!1)
                    }
                    ,
                    d.src = a
                }
                a.initializeDropBox = function() {
                    if (Dropbox.isBrowserSupported()) {
                        a.$emit("showOverlay", ["Dropbox"]),
                        f.IS_MENULET && e.overlayStatus("true");
                        var b = {
                            success: function(b) {
                                var c = [];
                                for (var d in b) {
                                    var h = {};
                                    h.source = "DROPBOX",
                                    h.name = b[d].name,
                                    h.link = b[d].link,
                                    h.bytes = b[d].bytes,
                                    c.push(h)
                                }
                                g(c),
                                a.$emit("removeOverlay"),
                                f.IS_MENULET && e.overlayStatus("false")
                            },
                            cancel: function() {
                                a.$emit("removeOverlay"),
                                f.IS_MENULET && e.overlayStatus("false")
                            },
                            linkType: "direct",
                            multiselect: !0
                        };
                        Dropbox.choose(b)
                    }
                }
            }
            ],
            link: function(a, b, c) {
                b.bind("click", function(b) {
                    a.initializeDropBox()
                })
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvEmoji", ["$http", "$compile", "utils", "emojiDataService", "$rootScope", "mixpanelService", "$window", function(b, c, d, e, f, g, h) {
        function k() {
            return _.debounce(function(a) {
                a.searchEmojiText && g.trackEvent(g.SEARCH_EMOJI, {
                    Source: a.mixpanelSource,
                    "Search Term": a.searchEmojiText
                })
            }, 500)
        }
        function l() {
            return _.debounce(function(a) {
                var b = $(".cnv-emoji-container");
                b.length > 0 && e.setScrollPosition(b.scrollTop())
            }, 500)
        }
        return {
            scope: !0,
            templateUrl: "integrations/emoji/cnvEmoji.tpl.html",
            link: function(b, g, m) {
                function n() {
                    $(".popover." + b.sourceId).length > 0 && $(".popover." + b.sourceId).css("top", $("#" + b.sourceId).offset().top - 332 + "px")
                }
                function o() {
                    $(".popover." + b.sourceId).length > 0 && ("top" === b._positionString ? setTimeout(function() {
                        $(".popover." + b.sourceId).css("top", $("#" + b.sourceId).offset().top - 332 + "px")
                    }, 0) : "bottom" === b._positionString ? setTimeout(function() {
                        $(".popover." + b.sourceId).css("top", $("#" + b.sourceId).offset().top + 20.7 + "px")
                    }, 0) : ("left" === b._positionString || "right" === b._positionString) && setTimeout(function() {
                        $(".popover." + b.sourceId).css("top", $("#" + b.sourceId).offset().top - 166 + 8 + "px")
                    }, 0))
                }
                var p, q = m.cnvChatWindowIdForEmoji, r = e.getParsedEmojiData(), s = k(), t = l(), u = [], v = {};
                b.selected = -1,
                b.searchingEmojis = !1,
                b.clearSearchButton = !1,
                b.mixpanelSource = q,
                r.then(function(a) {
                    b.emojis = a[0],
                    b.frequent = a[1],
                    b.categories_toolbar_append_text = "",
                    b.emoji_popover_append_text = "",
                    b.searchedEmojis_append_text = "";
                    var d = e.GetFrequentEmojisFromServer();
                    d.then(function(a) {
                        console.log("aa :" + a);
                        var d = b.updateFrequentlyUsedElements()
                          , e = c(d)(b);
                        $(".emoji-category:contains('Frequently')").find(".emoji-list").html(e)
                    }, function() {}),
                    b.generateFrequentlyUsed(),
                    b.generateAllEmojis(),
                    b.generateCategoryToolbar(),
                    b.viewFrequentlyUsed(),
                    b.viewAllEmojis(),
                    b.viewCategoryToolbar(),
                    g.find(".cnv-emoji-container").scrollTop(b.scrollPosition)
                }, function() {}),
                g.find(".cnv-emoji-container").on({
                    mousewheel: function(a, c) {
                        this.scrollTop -= c * a.deltaFactor,
                        t(b),
                        a.preventDefault(),
                        a.stopPropagation()
                    }
                }),
                "Chat" === m.cnvChatWindowIdForEmoji ? $(a).on("scroll", n) : $(a).on("mousewheel", o),
                b.generateFrequentlyUsed = function() {
                    var a = e.getShowImageEmojiesList();
                    for (b.frequent_append_text = "",
                    b.categories_toolbar_append_text += "<li class=" + b.frequent["Frequently Used"].category + '-icon ng-click="select(0)" ng-class="{selected:0 == selected}"></li>',
                    b.frequent_append_text += '<li class="emoji-category"> <div class="category-label">' + b.frequent["Frequently Used"].category + '</div><div class="category-label2" >' + b.frequent["Frequently Used"].category + '</div> <ul class="emoji-list">',
                    j = 0; j < b.frequent["Frequently Used"].emojisList.length; j++)
                        d.isOsX() && a.indexOf(b.frequent["Frequently Used"].emojisList[j].name) >= 0 ? b.frequent_append_text += '<li class="emoji-item"><div title="' + b.frequent["Frequently Used"].emojisList[j].title + '"ng-click="onEmojiClick(\'' + b.frequent["Frequently Used"].emojisList[j].unicode + "','" + b.frequent["Frequently Used"].emojisList[j].short_name + "')\"style='height:31px;'><div class='emoji_div' style='background-position: " + 23 * -b.frequent["Frequently Used"].emojisList[j].sheet_x + "px " + (23 * -b.frequent["Frequently Used"].emojisList[j].sheet_y - 1) + "px'> </div></div></li>" : b.frequent_append_text += '<li class="emoji-item"><div title="' + b.frequent["Frequently Used"].emojisList[j].title + '"ng-click="onEmojiClick(\'' + b.frequent["Frequently Used"].emojisList[j].unicode + "','" + b.frequent["Frequently Used"].emojisList[j].short_name + "')\"> " + b.frequent["Frequently Used"].emojisList[j].unicode + "</div></li>";
                    b.frequent_append_text += '</ul><div class="category-label-bottom">' + b.frequent["Frequently Used"].category + "</div></li>"
                }
                ,
                b.updateFrequentlyUsedElements = function() {
                    var a = e.getShowImageEmojiesList()
                      , c = "";
                    for (j = 0; j < b.frequent["Frequently Used"].emojisList.length; j++)
                        c += d.isOsX() && a.indexOf(b.frequent["Frequently Used"].emojisList[j].name) >= 0 ? '<li class="emoji-item"><div title="' + b.frequent["Frequently Used"].emojisList[j].title + '"ng-click="onEmojiClick(\'' + b.frequent["Frequently Used"].emojisList[j].unicode + "','" + b.frequent["Frequently Used"].emojisList[j].short_name + "')\"style='height:31px;'><div class='emoji_div' style='background-position: " + 23 * -b.frequent["Frequently Used"].emojisList[j].sheet_x + "px " + (23 * -b.frequent["Frequently Used"].emojisList[j].sheet_y - 1) + "px'> </div></div></li>" : '<li class="emoji-item"><div title="' + b.frequent["Frequently Used"].emojisList[j].title + '"ng-click="onEmojiClick(\'' + b.frequent["Frequently Used"].emojisList[j].unicode + "','" + b.frequent["Frequently Used"].emojisList[j].short_name + "')\"> " + b.frequent["Frequently Used"].emojisList[j].unicode + "</div></li>";
                    return c
                }
                ,
                b.viewFrequentlyUsed = function() {
                    var a = c(b.frequent_append_text)(b);
                    $(g[0].querySelector(".emoji-categories-list")).append(a)
                }
                ,
                b.generateAllEmojis = function() {
                    var a = e.getEmojisHtmlFromStore();
                    if (a)
                        return void (b.emoji_popover_append_text = a);
                    var c = e.getShowImageEmojiesList();
                    for (i = 0; i < b.emojis.length; i++) {
                        for (b.emoji_popover_append_text += '<li class="emoji-category"> <div class="category-label">' + b.emojis[i].category + '</div><div class="category-label2">' + b.emojis[i].category + '</div> <ul class="emoji-list">',
                        j = 0; j < b.emojis[i].emojisList.length; j++)
                            d.isOsX() && c.indexOf(b.emojis[i].emojisList[j].name) >= 0 ? b.emoji_popover_append_text += '<li class="emoji-item"><div title="' + b.emojis[i].emojisList[j].title + '"onclick="onEmojiClick(\'' + b.emojis[i].emojisList[j].unicode + "','" + b.emojis[i].emojisList[j].short_name + "')\" style='height:31px;'> <div class='emoji_div' style='background-position: " + 23 * -b.emojis[i].emojisList[j].sheet_x + "px " + (23 * -b.emojis[i].emojisList[j].sheet_y - 1) + "px'> </div></div></li>" : b.emoji_popover_append_text += '<li class="emoji-item"><div title="' + b.emojis[i].emojisList[j].title + '"onclick="onEmojiClick(\'' + b.emojis[i].emojisList[j].unicode + "','" + b.emojis[i].emojisList[j].short_name + "')\"> " + b.emojis[i].emojisList[j].unicode + "</div></li>";
                        b.emoji_popover_append_text += '</ul><div class="category-label-bottom">' + b.emojis[i].category + "</div></li>"
                    }
                    e.storeEmojisHtml(b.emoji_popover_append_text)
                }
                ,
                b.viewAllEmojis = function() {
                    $(g[0].querySelector(".emoji-categories-list")).append(b.emoji_popover_append_text)
                }
                ,
                b.generateCategoryToolbar = function() {
                    for (i = 0; i < b.emojis.length; i++)
                        b.categories_toolbar_append_text += "<li class=" + b.emojis[i].category + '-icon ng-click="select(' + (i + 1) + ')" ng-class="{selected:' + (i + 1) + ' == selected}"></li>'
                }
                ,
                b.viewCategoryToolbar = function() {
                    var a = c(b.categories_toolbar_append_text)(b);
                    $(g[0].querySelector(".categorires-icon-list")).append(a),
                    p = $(g[0].querySelectorAll(".emoji-category"));
                    for (var d = 0, e = p.length; e > d; d++)
                        u.push(p[d].offsetTop - 52)
                }
                ,
                g.find(".cnv-emoji-container").on({
                    scroll: function(a) {
                        if (console.log("scrolling."),
                        !b.searchingEmojis) {
                            var c = this.scrollTop;
                            _.each(p, function(a, d) {
                                var e = (a.querySelector(".category-label"),
                                a.querySelector(".category-label2"))
                                  , f = a.querySelector(".category-label-bottom");
                                c + 51 >= a.offsetTop ? (b.selected = d,
                                f.offsetTop <= c + 52 ? (e.style.display = "none",
                                f.style.visibility = "visible") : (e.style.display = "block",
                                f.style.visibility = "hidden")) : c - 52 <= a.offsetTop && (e.style.display = "none",
                                f.style.visibility = "hidden"),
                                c - 52 < f.offsetTop
                            })
                        }
                        t(b),
                        b.$$phase || b.$digest()
                    }
                }),
                b.select = function(a) {
                    b.selected = a,
                    console.log("clicked");
                    var c = g.find(".cnv-emoji-container");
                    p[a];
                    c.animate({
                        scrollTop: u[a] + 1
                    }, 400),
                    event.stopPropagation()
                }
                ,
                b.searchChanged = function() {
                    b.searchingEmojis = !0,
                    b.searchEmojiText = g[0].querySelector(".cnv-emoji-search-field").value.trim(),
                    "" != b.searchEmojiText ? (b.clearSearchButton = !0,
                    b.selected = -1) : (b.clearSearchButton = !1,
                    b.searchingEmojis = !1,
                    b.selected = 0),
                    b.seachEmojis(b.searchEmojiText),
                    s(b)
                }
                ,
                g.find(".cnv-emoji-search-field").on("focus", function() {
                    var a = $(this);
                    setTimeout(function() {
                        a.select()
                    }, 0)
                }).focus(),
                g.find(".cnv-emoji-search-field").on("mouseup", function(a) {
                    a.stopPropagation()
                }),
                g.find(".cnv-emoji-popout-inner").on("click", function(a) {
                    a.preventDefault(),
                    a.stopPropagation()
                }),
                b.clearSearch = function() {
                    g[0].querySelector(".cnv-emoji-search-field").value = "",
                    b.clearSearchButton = !1,
                    b.searchingEmojis = !1,
                    b.seachEmojis($(g[0].querySelector(".cnv-emoji-search-field").value).selector)
                }
                ,
                b.seachEmojis = function(a) {
                    v = e.searchingEmojis(a);
                    var f = e.getShowImageEmojiesList();
                    for (b.searchedEmojis_append_text = "",
                    b.searchedEmojis_append_text += '<li class="emoji-category"> <ul class="emoji-list">',
                    0 === v.length && (b.searchedEmojis_append_text += '<li class="emoji-item-not-found"> No emoji found </li>'),
                    j = 0; j < v.length; j++)
                        d.isOsX() && f.indexOf(v[j].emoji.name) >= 0 ? b.searchedEmojis_append_text += '<li class="emoji-item"><div title="' + v[j].emoji.title + '"ng-click="onEmojiClick(\'' + v[j].emoji.unicode + "','" + v[j].emoji.short_name + "')\" style='height:31px;'><div class='emoji_div' style='background-position: " + 23 * -v[j].emoji.sheet_x + "px " + (23 * -v[j].emoji.sheet_y - 1) + "px'> </div></div></li>" : b.searchedEmojis_append_text += '<li class="emoji-item"><div title="' + v[j].emoji.title + '"ng-click="onEmojiClick(\'' + v[j].emoji.unicode + "','" + v[j].emoji.short_name + "')\"> " + v[j].emoji.unicode + "</div></li>";
                    if (b.searchedEmojis_append_text += "</ul></li>",
                    a.length > 0) {
                        var h = c(b.searchedEmojis_append_text)(b);
                        $(g[0].querySelector("#current-category-label")).html(""),
                        $(g[0].querySelector(".emoji-categories-list")).html(""),
                        $(g[0].querySelector(".emoji-categories-list")).append(h)
                    } else
                        $(g[0].querySelector(".emoji-categories-list")).html(""),
                        b.viewFrequentlyUsed(),
                        b.viewAllEmojis(),
                        b.searchingEmojis = !1,
                        p = $(g[0].querySelectorAll(".emoji-category")),
                        b.selected = 0,
                        g.find(".cnv-emoji-container").trigger("scroll")
                }
                ,
                f.$broadcast("cnvEmoji::emojiPopupOpened", g[0].id),
                b.$on("$destroy", function() {
                    var b = $(".cnv-emoji-container");
                    b.length > 0 && e.setScrollPosition(b.scrollTop()),
                    "Chat" === m.cnvChatWindowIdForEmoji ? $(a).off("scroll", n) : $(a).off("mousewheel", o)
                }),
                h.onEmojiClick = b.onEmojiClick
            },
            controller: ["$scope", "$element", function(a, b) {
                function c() {
                    var b = "";
                    return b = "noteEditorCtrl" === a.editorName ? a.noteEditorCtrl : a.textEditorCtrl
                }
                a.onEmojiClick = function(b, d) {
                    g.trackEvent(g.SEND_EMOJI, {
                        Source: a.mixpanelSource,
                        "Emoji Type": ":" + d + ":"
                    });
                    var f = c();
                    f && f.initialized ? (f.emoji.focus(),
                    f.emoji.set(b)) : a.commentEditorCtrl ? a.commentEditorCtrl.activate(b) : console.error("No editor initialized"),
                    a.hidePopover(),
                    a.frequent = e.updateFrequentEmojiData(d)
                }
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvEmojiPopover", ["emojiDataService", "$position", "$rootScope", "utils", "mixpanelService", "$window", "config", function(b, c, d, e, f, g, h) {
        return {
            scope: !0,
            replace: !0,
            template: function() {
                return "<div class='emoji-action-container' id='{{::sourceId}}'><div class='emoji-popup-btn unselected' popover-trigger=\"showEmojiPopover click\" popover-template='emojiPopover' popover-class='custom-emoji-popover {{::sourceId}}' popover-placement='{{_positionString}}' ng-class='cnvEmojiIconClass' popover-append-to-body='true'></div></div>"
            },
            link: function(i, j, k) {
                function l(a) {
                    var c = a.target
                      , d = $(".popover." + i.sourceId);
                    if (d.length > 0 && !d[0].contains(c) && !c.classList.contains("emoji-popup-btn")) {
                        var e = $(".cnv-emoji-container");
                        e.length > 0 && q && (b.setScrollPosition(e.scrollTop()),
                        j.find(".emoji-popup-btn").trigger("hideEmojiPopover"),
                        j.find(".emoji-popup-btn.emoji-hover-icon-thick-" + o)[0].classList.add("unselected"),
                        j.find(".emoji-popup-btn.emoji-hover-icon-thick-" + o)[0].classList.remove("clicked"),
                        j.find(".emoji-popup-btn.emoji-hover-icon-thick-" + o)[0].classList.remove("emoji-hover-icon-thick-" + o)),
                        q = !1
                    }
                }
                var m, n, o, p = c.positionElements, q = !1;
                i.sourceId = e.generateUniqueCharId(),
                i.emojiPopover = "integrations/emoji/cnvEmojiPopover.tpl.html",
                i.emojiFixedOnScroll = k.cnvEmojiFixedOnScroll,
                i.editorName = k.cnvEditorCtrl,
                "true" === i.emojiFixedOnScroll ? i.mixpanelSource = "Chat" : i.mixpanelSource = "Comment",
                c.positionElements = function(a, b, d, e) {
                    return a.parent()[0].id === i.sourceId ? (console.log("popover flag : " + q),
                    n = r(a, !0),
                    console.log("position : :" + n.top + "," + n.left),
                    n) : p.apply(c, arguments)
                }
                ;
                b.getParsedEmojiData();
                i.hidePopover = function() {
                    var a = $(".cnv-emoji-container");
                    a.length > 0 && (b.setScrollPosition(a.scrollTop()),
                    j[0].id == i.sourceId && (j.find(".emoji-popup-btn").trigger("hideEmojiPopover").trigger("setFocusOnHideEmojiPopover"),
                    j.find(".emoji-popup-btn.emoji-hover-icon-thick-" + o)[0].classList.add("unselected"),
                    j.find(".emoji-popup-btn.emoji-hover-icon-thick-" + o)[0].classList.remove("clicked"),
                    j.find(".emoji-popup-btn.emoji-hover-icon-thick-" + o)[0].classList.remove("emoji-hover-icon-thick-" + o))),
                    q = !1,
                    console.log("changing popover flag : " + q)
                }
                ,
                $(".emoji-popup-btn", j).hover(function() {
                    if (!$(this)[0].classList.contains("clicked")) {
                        if (!$(this)[0].classList.contains("hover")) {
                            var a = Math.floor(10 * Math.random() + 1);
                            o = a.toString(),
                            1 === o.length && (o = "0" + o)
                        }
                        $(this).addClass("emoji-hover-icon-thick-" + o),
                        $(this).removeClass("unselected")
                    }
                    $(this).addClass("hover")
                }, function() {
                    $(this)[0].classList.contains("clicked") || ($(this).removeClass("emoji-hover-icon-thick-" + o),
                    $(this).addClass("unselected")),
                    $(this).removeClass("hover")
                }),
                i.$on("miniChatWin", function(a, b) {
                    i.hidePopover()
                }),
                i.$on("maxChatWin", function(a, b) {
                    i.hidePopover()
                }),
                i.$on("closeChatEmojiPopover", function(a, b) {
                    j.parents(".chatWindow").length > 0 && i.hidePopover()
                });
                var r = function(b, c) {
                    function d(a) {
                        return r >= a.top && (a.top = r),
                        p >= a.left && (a.left = p),
                        q <= a.left + l && (a.left -= a.left + l - q + 5,
                        m = j.offset().left - a.left + 8),
                        o <= a.top + k && (a.top -= a.top + k - o + 5),
                        a
                    }
                    var e, f, g, i, k, l, n, o, p, q, r, s, t, u, v, w, x, y, z;
                    return w = function(a) {
                        return r < a.top && p < a.left && q > a.left + l && o > a.top + k
                    }
                    ,
                    g = b,
                    y = $.extend({}, g.offset(), {
                        width: b.width(),
                        height: b.height()
                    }),
                    l = 352,
                    k = 332,
                    r = $(document).scrollTop(),
                    p = $(document).scrollLeft(),
                    q = p + $(a).width(),
                    o = r + $(a).height(),
                    s = {
                        top: y.top - k,
                        left: y.left + y.width / 2 - l / 2
                    },
                    h.IS_MENULET && (s = {
                        top: y.top - k + 1,
                        left: y.left + y.width / 2 - l / 2
                    }),
                    t = {
                        top: y.top + y.height + 2,
                        left: y.left + y.width / 2 - l / 2
                    },
                    u = {
                        top: y.top + y.height / 2 - k / 2,
                        left: y.left - l - 4
                    },
                    v = {
                        top: y.top + y.height / 2 - k / 2,
                        left: y.left + y.width - 5
                    },
                    i = w(s),
                    n = w(t),
                    x = w(u),
                    z = w(v),
                    i || n || x || z ? m = "50%" : (s = d(s),
                    i = w(s),
                    i || (t = d(t),
                    n = w(t),
                    n || (u = d(u),
                    x = w(u),
                    x || (v = d(v),
                    z = w(v))))),
                    i ? (e = "top",
                    f = s) : n ? (e = "bottom",
                    f = t) : x ? (e = "left",
                    f = u) : z ? (e = "right",
                    f = v) : e = "none",
                    c ? f : e
                }
                ;
                $(".emoji-action-container").on("mouseenter", function() {
                    i.$apply(function() {
                        i._positionString = r(j, !1)
                    })
                }),
                i.$on("cnvEventBinding::keyup::ESCAPE", function(a, c) {
                    console.log("FLAG-1: " + i.sourceId + ": ESC");
                    var d = $(".popover." + i.sourceId);
                    if (d.length > 0) {
                        var e = $(".cnv-emoji-container");
                        e.length > 0 && (b.setScrollPosition(e.scrollTop()),
                        j[0].id == i.sourceId && (j.find(".emoji-popup-btn").trigger("hideEmojiPopover"),
                        j.find(".emoji-popup-btn.emoji-hover-icon-thick-" + o)[0].classList.add("unselected"),
                        j.find(".emoji-popup-btn.emoji-hover-icon-thick-" + o)[0].classList.remove("clicked"),
                        j.find(".emoji-hover-icon-thick-" + o)[0].classList.remove("emoji-hover-icon-thick-" + o),
                        q = !1)),
                        console.log("changing popover flag : " + q)
                    }
                }),
                i.$on("cnvEventBinding::click", function(a, c) {
                    var d = $(".popover." + i.sourceId);
                    if (d.length > 0)
                        if (d[0].contains(c) || j[0].contains(c)) {
                            if (c.classList.contains("emoji-popup-btn")) {
                                var e = $(".cnv-emoji-container");
                                e.length > 0 && q ? (q = !1,
                                b.setScrollPosition(e.scrollTop()),
                                j.find(".emoji-popup-btn.emoji-hover-icon-thick-" + o)[0].classList.add("unselected"),
                                j.find(".emoji-popup-btn.emoji-hover-icon-thick-" + o)[0].classList.remove("clicked"),
                                j.find(".emoji-popup-btn.emoji-hover-icon-thick-" + o)[0].classList.remove("emoji-hover-icon-thick-" + o)) : ($(".popover.top > .arrow").css("left", m || "50%"),
                                q = !0,
                                f.trackEvent(f.CLICK_EMOJI_BUTTON, {
                                    Source: i.mixpanelSource
                                }),
                                setTimeout(function() {
                                    c.classList.contains("unselected") && c.classList.remove("unselected"),
                                    (c.classList.contains("hover") || !c.classList.contains("emoji-hover-icon-thick-" + o)) && c.classList.add("emoji-hover-icon-thick-" + o),
                                    c.classList.add("clicked")
                                }, 0))
                            }
                        } else {
                            var e = $(".cnv-emoji-container");
                            e.length > 0 && q && (b.setScrollPosition(e.scrollTop()),
                            j[0].id == i.sourceId && (j.find(".emoji-popup-btn").trigger("hideEmojiPopover"),
                            j.find(".emoji-popup-btn.emoji-hover-icon-thick-" + o)[0].classList.add("unselected"),
                            j.find(".emoji-popup-btn.emoji-hover-icon-thick-" + o)[0].classList.remove("clicked"),
                            j.find(".emoji-popup-btn.emoji-hover-icon-thick-" + o)[0].classList.remove("emoji-hover-icon-thick-" + o))),
                            q = !1
                        }
                }),
                g.addEventListener("mousedown", l, !0),
                i.$on("$destroy", function() {
                    var a = $(".cnv-emoji-container");
                    a.length > 0 && b.setScrollPosition(a.scrollTop()),
                    q = !1,
                    g.removeEventListener("mousedown", l, !0)
                }),
                d.$on("cnvEmoji::emojiPopupOpened", function(a, c, d) {
                    "true" === i.emojiFixedOnScroll && $(".popover." + i.sourceId).css("z-index", "101"),
                    i.sourceId === j[0].getAttribute("id") && (i.scrollPosition = b.getScrollPosition())
                })
            }
        }
    }
    ]),
    b.module("convoApp").factory("emojiDataService", ["$http", "ServerComm", "$q", "config", "mixpanelService", "appTabs", "utils", function(a, b, c, d, e, f, g) {
        function h() {
            return M
        }
        function j() {
            m(),
            k("assets/vendor/emoji-data/sheet_apple_64.png"),
            k("assets/img/Emoji-icons/Selected/2x/selected_emoji_icons-01_36x36.png"),
            k("assets/img/Emoji-icons/Selected/2x/selected_emoji_icons-01_36x36.png"),
            k("assets/img/Emoji-icons/Selected/2x/selected_emoji_icons-02_36x36.png"),
            k("assets/img/Emoji-icons/Selected/2x/selected_emoji_icons-03_36x36.png"),
            k("assets/img/Emoji-icons/Selected/2x/selected_emoji_icons-04_36x36.png"),
            k("assets/img/Emoji-icons/Selected/2x/selected_emoji_icons-05(2)_36x36.png"),
            k("assets/img/Emoji-icons/Selected/2x/selected_emoji_icons-09_36x36.png"),
            k("assets/img/Emoji-icons/Selected/2x/selected_emoji_icons-11_36x36.png"),
            k("assets/img/Emoji-icons/Selected/2x/selected_emoji_icons-10_36x36.png")
        }
        function k(a) {
            N.push(l(a))
        }
        function l(a) {
            var b = new Image;
            return b.src = a,
            b
        }
        function m() {
            function e() {
                f.success(function(a) {
                    a = r(a, "sort_order"),
                    emojiRaw = a,
                    z = [],
                    B = [];
                    var b, c, d, e = {};
                    for (b = 0,
                    c = a.length; c > b; b++)
                        if (d = a[b],
                        null  !== d.category) {
                            if (!(d.category in e)) {
                                var f;
                                switch (d.category) {
                                case "Frequently Used":
                                    f = 1;
                                    break;
                                case "People":
                                    f = 2;
                                    break;
                                case "Nature":
                                    f = 3;
                                    break;
                                case "Food":
                                    f = 4;
                                    break;
                                case "Celebration":
                                    f = 5;
                                    break;
                                case "Activity":
                                    f = 6;
                                    break;
                                case "Places":
                                    f = 7;
                                    break;
                                case "Symbols":
                                    f = 8
                                }
                                e[d.category] = {
                                    category: d.category,
                                    emojisList: [],
                                    categoryOrder: f
                                },
                                z.push(e[d.category])
                            }
                            if (z = r(z, "categoryOrder"),
                            -1 === d.unified.indexOf("-")) {
                                d.unicode = q(d.unified),
                                d.name = d.name.toLowerCase(),
                                d.name = d.name.charAt(0).toUpperCase() + d.name.slice(1);
                                var h = {
                                    name: d.name,
                                    unified: d.unified,
                                    variations: d.variations,
                                    short_name: d.short_name,
                                    short_names: d.short_names,
                                    category: d.category,
                                    sort_order: d.sort_order,
                                    unicode: d.unicode,
                                    sheet_x: d.sheet_x,
                                    sheet_y: d.sheet_y
                                }
                                  , i = h.name;
                                _.each(h.short_names, function(a) {
                                    i += " :" + a + ":"
                                }),
                                h.title = i;
                                var j = "";
                                _.each(h.short_names, function(a) {
                                    j = M.indexOf(h.name) >= 0 && g.isOsX() ? "<div class='emojiMenton'><div class='emoji_div' style='background-position: " + 32 * -h.sheet_x + "px " + (32 * -h.sheet_y - 1) + "px'> </div></div>" : "<div class='emojiMenton'>" + h.unicode + "</div>",
                                    K[a] = {
                                        short_name: a,
                                        emoji: h,
                                        formatteddesclabel: h.title,
                                        formattedlabel: ":" + a + ":",
                                        type: "EMOJI",
                                        label: ":" + a + ":",
                                        render: j,
                                        unicode: h.unicode
                                    }
                                }),
                                e[d.category].emojisList.push(h)
                            }
                        }
                    if (D = !1,
                    F = !0,
                    I["Frequently Used"] = {
                        category: "Frequently Used",
                        emojisList: [],
                        categoryOrder: 1
                    },
                    A) {
                        for (var b = 0; b < A.length; b++)
                            A[b] = A[b].substring(1, A[b].length - 1);
                        p()
                    }
                    B.push(z),
                    B.push(I),
                    C.resolve(B)
                })
            }
            if (D)
                return C.promise;
            if (F && G)
                return C.promise;
            C = c.defer(),
            E = !0,
            b.getx("emoji").then(function(a) {
                A = a.data.EMOJI_HISTORY,
                A && (A = A.split(",")),
                G = !0,
                e()
            }, function() {})["finally"](function() {
                E = !1
            });
            var f = a.get(d.APP_BASE_URL + "assets/vendor/emoji-data/emoji.json");
            return D = !0,
            C.promise
        }
        function n(a) {
            var b = _.filter(K, function(b) {
                return -1 != b.emoji.title.toLowerCase().indexOf(a.toLowerCase())
            });
            if (a.length > 0) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c].emoji.title
                      , e = new RegExp("(" + a + ")|(([\\s,:]|^) (" + a + "))","gi");
                    for (match = e.exec(d),
                    b[c].searchPriority = 0; null  != match; )
                        0 === match.index && (b[c].searchPriority = 1),
                        console.log(match.index),
                        match = e.exec(d)
                }
                b.sort(function(a, b) {
                    return a.searchPriority > b.searchPriority ? -1 : a.searchPriority < b.searchPriority ? 1 : a.formatteddesclabel < b.formatteddesclabel ? -1 : a.formatteddesclabel > b.formatteddesclabel ? 1 : 0
                })
            }
            return _.uniq(b, function(a, b) {
                return a.emoji
            })
        }
        function o(a, b) {
            b || (b = O);
            var c = [];
            if (a.length < 2)
                return c;
            var d = g.getUserGroupSearchRegex(a)
              , e = Object.keys(K);
            if (e.sort(),
            "" == a && A)
                for (i = 0; i < A.length && c.length != b; i++)
                    K[A[i]].formattedlabel = "<b>:</b>" + K[A[i]].short_name + ":",
                    c.push(K[A[i]]);
            for (i = 0; i < e.length && c.length != b; i++) {
                var f = K[e[i]].short_name.substr(0, a.length);
                f.toLowerCase() == a.toLowerCase() && (K[e[i]].formattedlabel = "<b>:</b>" + K[e[i]].short_name.replace(d, "$1<b>$3</b>") + ":",
                c.push(K[e[i]]))
            }
            return c
        }
        function p() {
            for (var a = 0; a < A.length; a++)
                I["Frequently Used"].emojisList.push(K[A[a].toString()].emoji)
        }
        function q(a) {
            var b = a.split("-").map(function(a, b) {
                return parseInt(a, 16)
            });
            return String.fromCodePoint || !function() {
                var a = function() {
                    var a;
                    try {
                        var b = {}
                          , c = Object.defineProperty;
                        a = c(b, b, b) && c
                    } catch (d) {}
                    return a
                }()
                  , b = String.fromCharCode
                  , c = Math.floor
                  , d = function() {
                    var a, d, e = 16384, f = [], g = -1, h = arguments.length;
                    if (!h)
                        return "";
                    for (var i = ""; ++g < h; ) {
                        var j = Number(arguments[g]);
                        if (!isFinite(j) || 0 > j || j > 1114111 || c(j) != j)
                            throw RangeError("Invalid code point: " + j);
                        65535 >= j ? f.push(j) : (j -= 65536,
                        a = (j >> 10) + 55296,
                        d = j % 1024 + 56320,
                        f.push(a, d)),
                        (g + 1 == h || f.length > e) && (i += b.apply(null , f),
                        f.length = 0)
                    }
                    return i
                }
                ;
                a ? a(String, "fromCodePoint", {
                    value: d,
                    configurable: !0,
                    writable: !0
                }) : String.fromCodePoint = d
            }(),
            String.fromCodePoint.apply(null , b)
        }
        function r(a, b) {
            return a.sort(function(a, c) {
                var d = a[b]
                  , e = c[b];
                return e > d ? -1 : d > e ? 1 : 0
            })
        }
        function s(a) {
            var c = {
                method: "add",
                emoji: ":" + a + ":"
            }
              , d = b.postx("emoji", c);
            return d.then(function(a) {
                if (A = a.data.data.split(","),
                E = !1,
                G = !0,
                I["Frequently Used"] = {
                    category: "Frequently Used",
                    emojisList: [],
                    categoryOrder: 1
                },
                A) {
                    for (var b = 0; b < A.length; b++)
                        A[b] = A[b].substring(1, A[b].length - 1);
                    p()
                }
                return f.dispatchTabsEvent2("emojiDataService::onFrequentUpdate", I),
                I
            }),
            I
        }
        function t(a, b) {
            var c = jQuery.parseHTML(a)
              , d = "";
            if (c)
                for (var e = 0; e < c.length; e++)
                    c[e] = u(c[e], b),
                    d += c[e].outerHTML;
            return d
        }
        function u(a, b) {
            for (var c = 0; c < a.childNodes.length; c++) {
                var d = a.childNodes[c];
                3 == d.nodeType ? d.textContent = v(d.textContent, b) : d = u(d, b),
                a.childNodes[c] = d
            }
            return a
        }
        function v(a, b) {
            var c = new RegExp(":[a-z_0-9]+:|(\\s)(\\(y\\)|<3|&lt;3|</3|&lt;/3|8\\)|D:|:'\\(|:&apos;\\(|:o\\)|:\\*|:\\-\\*|=\\)|=\\-\\)|:D|:\\-D|;\\)|;\\-\\)|:>|:&gt;|:\\->|:\\-&gt;|:\\||:\\-\\||:o|:\\-o|>:\\(|&gt;:\\(|>:\\-\\(|&gt;:\\-\\(|:\\)|\\(:|:-\\)|:\\(|\\):|:\\-\\(|:\\/|:\\-\\/|:\\\\|:\\-\\\\|:p|:\\-p|:b|:\\-b|;p|;\\-p|;b|;\\-b)(\\s)","ig")
              , d = "";
            a = " " + a + " ",
            a = a.replace(/\s/g, "  ");
            var a = a.replace(c, function(a) {
                var b, c = !1, e = a.trim();
                return L[e] ? (b = L[e],
                c = !0) : b = e,
                b = b.substring(1, b.length - 1),
                K[b] ? (s(b),
                d = d + e + ", ",
                1 == c ? " " + K[b].emoji.unicode + " " : K[b].emoji.unicode) : a
            });
            return d.length > 0 && (d = d.substring(0, d.length - 2),
            e.trackEvent(e.Enter_Emoji_Shortcut, {
                Source: b,
                "Emoji Type": d
            })),
            a = a.replace(/\s\s/g, " "),
            a = a.substring(1, a.length - 1)
        }
        function w() {
            return J
        }
        function x(a) {
            J = a,
            f.dispatchTabsEvent2("emojiDataService::onScrollPositionUpdate", a)
        }
        function y() {
            var a = b.getx("emoji").then(function(a) {
                if (A = a.data.EMOJI_HISTORY,
                A && (A = A.split(",")),
                E = !1,
                G = !0,
                I["Frequently Used"] = {
                    category: "Frequently Used",
                    emojisList: [],
                    categoryOrder: 1
                },
                A) {
                    for (var b = 0; b < A.length; b++)
                        A[b] = A[b].substring(1, A[b].length - 1);
                    p()
                }
                return I
            }, function() {})["finally"](function() {});
            return a
        }
        var z, A, B, C, D, E, F, G, H, I = {}, J = 0, K = {}, L = [], M = [], N = [], O = 5;
        return L["<3"] = ":heart:",
        L["&lt;3"] = ":heart:",
        L["</3"] = ":broken_heart:",
        L["&lt;/3"] = ":broken_heart:",
        L["8)"] = ":sunglasses:",
        L["D:"] = ":anguished:",
        L[":'("] = ":cry:",
        L[":&apos;("] = ":cry:",
        L[":o)"] = ":monkey_face:",
        L[":*"] = ":kiss:",
        L[":-*"] = ":kiss:",
        L["=)"] = ":smiley:",
        L["=-)"] = ":smiley:",
        L[":D"] = ":grinning:",
        L[":-D"] = ":grinning:",
        L[";)"] = ":wink:",
        L[";-)"] = ":wink:",
        L[":>"] = ":laughing:",
        L[":&gt;"] = ":laughing:",
        L[":->"] = ":laughing:",
        L[":-&gt;"] = ":laughing:",
        L[":|"] = ":neutral_face:",
        L[":-|"] = ":neutral_face:",
        L[":o"] = ":open_mouth:",
        L[":-o"] = ":open_mouth:",
        L[">:("] = ":angry:",
        L["&gt;:("] = ":angry:",
        L[">:-("] = ":angry:",
        L["&gt;:-("] = ":angry:",
        L[":)"] = ":blush:",
        L["(:"] = ":blush:",
        L[":-)"] = ":blush:",
        L[":("] = ":disappointed:",
        L["):"] = ":disappointed:",
        L[":-("] = ":disappointed:",
        L[":/"] = ":confused:",
        L[":-/"] = ":confused:",
        L[":\\"] = ":confused:",
        L[":-\\"] = ":confused:",
        L[":p"] = ":stuck_out_tongue:",
        L[":P"] = ":stuck_out_tongue:",
        L[":-p"] = ":stuck_out_tongue:",
        L[":-P"] = ":stuck_out_tongue:",
        L[":b"] = ":stuck_out_tongue:",
        L[":-b"] = ":stuck_out_tongue:",
        L[";p"] = ":stuck_out_tongue_winking_eye:",
        L[";P"] = ":stuck_out_tongue_winking_eye:",
        L[";-p"] = ":stuck_out_tongue_winking_eye:",
        L[";-P"] = ":stuck_out_tongue_winking_eye:",
        L[";b"] = ":stuck_out_tongue_winking_eye:",
        L[";-b"] = ":stuck_out_tongue_winking_eye:",
        L["(y)"] = ":+1:",
        L["(Y)"] = ":+1:",
        M.push("White smiling face"),
        M.push("White up pointing index"),
        M.push("Victory hand"),
        M.push("Black sun with rays"),
        M.push("Cloud"),
        M.push("Snowflake"),
        M.push("Heavy black heart"),
        M.push("Baseball"),
        M.push("Airplane"),
        f.addTabsEventListener2("emojiDataService::onFrequentUpdate", function(a) {
            B[1] = a,
            I = a
        }),
        f.addTabsEventListener2("emojiDataService::onScrollPositionUpdate", function(a) {
            J = a
        }),
        {
            getParsedEmojiData: m,
            updateFrequentEmojiData: s,
            GetFrequentEmojisFromServer: y,
            searchingEmojis: n,
            queryEmojisByShortCodes: o,
            replaceEmojiCodes: t,
            getShowImageEmojiesList: h,
            getScrollPosition: w,
            setScrollPosition: x,
            loadAssets: j,
            getEmojisHtmlFromStore: function() {
                return H
            },
            storeEmojisHtml: function(a) {
                H = a
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvGiphyPopover", ["$rootScope", function(a) {
        function b(a) {
            return "Editor" === a
        }
        return {
            replace: !0,
            scope: {
                cnvChatWindowId: "=",
                cnvFileContext: "=",
                cnvGiphyInformation: "=",
                cnvCustomClasses: "=cnvGiphyCustomClasses"
            },
            template: function(a, b) {
                var c = "true" === b.cnvGiphyRelativeToBody ? " popover-append-to-body='true' " : ""
                  , d = "true" === b.cnvGiphyRelativeToBody ? "" : "inLineInsertGiphy";
                return "<div class='giphy-action-container'><div id='iShowGiphyPopup' " + c + " popover-template='giphyDirective' popover-class='custom-giphy-popover {{cnvChatWindowId}} {{::cnvCustomClasses}}' popover-placement='{{dynamicPopoverPlacement}}' popover-trigger='showGiphyPopover click' ng-class='cnvGiphyIconClass' class='" + d + "'></div></div>"
            },
            link: function(a, c, d) {
                function e(b) {
                    "true" === d.cnvGiphyRelativeToBody ? 0 === $(".popover." + a.cnvChatWindowId).find(b).length && 0 === c.find(b).length && c.find("#iShowGiphyPopup").trigger("hideGiphyPopover") : 0 === c.find(b).length && c.find("#iShowGiphyPopup").trigger("hideGiphyPopover")
                }
                a.cnvGiphyIconClass = d.cnvGiphyIconClass,
                a.mixpanelInfo = d.cnvGiphyMixpanelInfo,
                a.giphyDirective = "integrations/giphy/templates/giphyDirective.tpl.html",
                a.dynamicPopoverPlacement = b(d.cnvGiphyMixpanelInfo) ? "right" : "top";
                var f = a.dynamicPopoverPlacement;
                c.find("#iShowGiphyPopup").on("showGiphyPopover click", function(b) {
                    if ("top" == f) {
                        var c = b.target.getBoundingClientRect();
                        c.top < 250 ? a.dynamicPopoverPlacement = "bottom" : a.dynamicPopoverPlacement = "top"
                    }
                }),
                a.getGiphySearchText = function(b) {
                    a.cnvGiphyInformation && (a.cnvGiphyInformation.searchText = b)
                }
                ,
                a.$on("cnvEventBinding::keyup::ESCAPE", function(a, b) {
                    c.find("#iShowGiphyPopup").trigger("hideGiphyPopover")
                }),
                a.$on("cnvEventBinding::click", function(a, b) {
                    e(b)
                })
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvGiphy", ["$http", "$timeout", "UploadService", "utils", "mixpanelService", "$filter", function(b, d, e, f, g, h) {
        function i(a) {
            a.find(".cnv-giphy-gallary")[0].scrollLeft = 0,
            a.find("img.lazy").lazyload({
                container: a.find(".cnv-giphy-gallary")
            }).each(function(a, b) {
                b.src.indexOf("data:image/png") > -1 && (b.src = $(b).data("thumbnail"))
            })
        }
        function j(a, b, d) {
            var i = {};
            i.name = "giphy.gif",
            i.size = b.size,
            i.fileExt = "gif",
            i.type = i.fileExt,
            i.fileId = f.generateGuid(),
            i.fileUploadName = i.fileId + "." + i.type,
            i.localUrl = h("getFileIconByType")(i.type, 32),
            i.source = "url",
            i.file_url = b.original,
            i.mp_attachment_source = "Giphy",
            i.status = e.FILE_STATUS_WAITING,
            i.uploadFrom = "chat-window",
            d.event_dispacher.dispach({
                event: e.EVENT_FILE_SELECTED,
                file: i
            }),
            e.fileConversionReq(d, i),
            g.trackEvent(g.SEND_GIF, {
                Source: a.mixpanelInfo,
                "Search Term": (a.giphySearchText || "").trim() || c
            })
        }
        function k() {
            return _.debounce(function(a) {
                var b = (a.giphySearchText || "").trim();
                b && g.trackEvent(g.SEARCH_FOR_GIF, {
                    Source: a.mixpanelInfo,
                    "Search Term": b
                })
            }, 2e3)
        }
        return {
            templateUrl: "integrations/giphy/templates/cnv-giphy.tpl.html",
            restrict: "E",
            replace: !0,
            scope: {
                cnvChatWindowIdForGiphy: "=",
                fileInputContext: "=cnvFileContextOfParentScope",
                rating: "=cnvGiphyRating",
                giphySearchText: "=cnvGiphySearchText",
                updateParentScope: "&cnvUpdateParentScope",
                mixpanelInfo: "=",
                giphyActionType: "=cnvGiphyActionType"
            },
            link: function(b, c) {
                var d, e;
                d = k(),
                b.searchingGifs = !0,
                e = {
                    rating: b.rating || "pg",
                    limit: 20,
                    api_key: "xTiTnI9GNUe8rosXMQ"
                },
                b.gifSelected = function(a) {
                    j(b, a, b.fileInputContext),
                    c.remove(),
                    b.cnvChatWindowIdForGiphy && b.$emit("setWindInFocus", b.cnvChatWindowIdForGiphy.slice(1))
                }
                ,
                b.searchChanged = function() {
                    b.searchingGifs = !0,
                    d(b)
                }
                ,
                d(b),
                b.$watch("giphySearchText", function(a) {
                    var d, f, g, h;
                    b.updateParentScope({
                        giphySearchText: a
                    }),
                    e.q = a || "happy reactions",
                    d = "//api.giphy.com/v1/gifs/search?" + $.param(e),
                    f = "fixed_height_small",
                    h = "fixed_height_small_still",
                    g = $.getJSON(d),
                    g.done(function(a) {
                        b.images = a.data.map(function(a) {
                            return {
                                original: a.images.original.url,
                                src: a.images[f].url,
                                thumbnail: a.images[h].url,
                                size: a.images[f].size
                            }
                        }),
                        b.searchingGifs = !1,
                        b.$digest(),
                        i(c)
                    })
                }),
                c.on("mouseup", function(a) {
                    a.stopPropagation()
                }),
                c.find(".cnv-giphy-gallary").on({
                    mousewheel: function(a, b) {
                        this.scrollLeft += a.deltaX * a.deltaFactor,
                        a.preventDefault(),
                        a.stopPropagation()
                    }
                }),
                b.cnvChatWindowIdForGiphy && $(a).on("scroll." + b.cnvChatWindowIdForGiphy + " resize." + b.cnvChatWindowIdForGiphy, function() {
                    $(".popover").css("top", $("#" + b.cnvChatWindowIdForGiphy).find("#iShowGiphyPopup").offset().top - 223 + "px")
                }),
                c.find(".cnv-giphy-search-field").on("focus", function() {
                    var a = $(this);
                    setTimeout(function() {
                        a.select()
                    }, 0)
                }).focus(),
                g.trackEvent(g.CLICK_GIF_BUTTON, {
                    Source: b.mixpanelInfo,
                    "Giphy Command": "command" === b.giphyActionType ? "True" : "False"
                }),
                b.giphyActionType = "",
                b.$on("$destroy", function() {
                    b.$emit("giphyPopupClosed"),
                    b.cnvChatWindowIdForGiphy && $(a).off("scroll." + b.cnvChatWindowIdForGiphy + " resize." + b.cnvChatWindowIdForGiphy)
                })
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvGoogleDriveFilesIntegrator", [function() {
        return {
            restrict: "A",
            scope: {
                fileInputServiceContext: "=cnvFileInputServiceContext"
            },
            controller: ["$scope", "utils", "$filter", "UploadService", "nativeCommBridge", "config", function(b, d, e, f, g, h) {
                function i(a) {
                    for (var c in a) {
                        var g = {};
                        j(a[c].thumbnailLink, g, function(a, b, c) {
                            a && (c.localUrl = b)
                        }),
                        g.name = a[c].name,
                        g.size = a[c].bytes ? a[c].bytes : 1,
                        g.fileExt = a[c].name.substr(a[c].name.lastIndexOf(".") + 1).toLowerCase(),
                        g.type = g.fileExt,
                        g.fileId = d.generateGuid(),
                        g.fileUploadName = g.fileId + "." + g.type,
                        g.source = a[c].source,
                        g.file_url = a[c].link,
                        g.file_access_token = a[c].fileAccessToken,
                        g.file_preview_url = a[c].previewLink,
                        g.localUrl = e("getFileIconByType")(g.type, 32),
                        g.status = f.FILE_STATUS_WAITING,
                        b.fileInputServiceContext.event_dispacher.dispach({
                            event: f.EVENT_FILE_SELECTED,
                            file: g
                        }),
                        f.fileConversionReq(b.fileInputServiceContext, g)
                    }
                }
                function j(a, b, c) {
                    var d = new Image;
                    d.onload = function() {
                        c(!0, a, b)
                    }
                    ,
                    d.onerror = function() {
                        c(!1)
                    }
                    ,
                    d.src = a
                }
                b.initializeGoogleDrive = function() {
                    function d() {
                        r = !0,
                        j()
                    }
                    function e() {
                        q = !0,
                        j()
                    }
                    function f(a) {
                        a && !a.error && (l = a.access_token,
                        j())
                    }
                    function j() {
                        r && l && q && (m = (new google.picker.PickerBuilder).enableFeature(google.picker.Feature.MULTISELECT_ENABLED).addView(google.picker.ViewId.DOCS).setOAuthToken(l).setDeveloperKey(n).setCallback(k).build(),
                        m.setVisible(!0),
                        b.$emit("showOverlay", ["Google Drive"]),
                        h.IS_MENULET && g.overlayStatus("true"))
                    }
                    function k(a) {
                        if (a[google.picker.Response.ACTION] == google.picker.Action.PICKED) {
                            var d = []
                              , e = a[google.picker.Response.DOCUMENTS].length;
                            for (var f in a[google.picker.Response.DOCUMENTS]) {
                                var j = a[google.picker.Response.DOCUMENTS][f][google.picker.Document.ID]
                                  , k = gapi.client.drive.files.get({
                                    fileId: j
                                });
                                k.execute(function(a) {
                                    var f = {};
                                    a.exportLinks != c && a.exportLinks["application/pdf"] != c ? (f.link = a.exportLinks["application/pdf"],
                                    f.name = a.title + ".pdf") : a.downloadUrl != c && (f.link = a.downloadUrl),
                                    f.source = "GOOGLE_DRIVE",
                                    f.previewLink = a.alternateLink,
                                    f.fileAccessToken = l,
                                    f.thumbnailLink = a.thumbnailLink,
                                    a.originalFilename != c && (f.name = a.originalFilename),
                                    a.fileSize != c ? f.bytes = a.fileSize : f.bytes = 0,
                                    d.push(f),
                                    d.length == e && (i(d),
                                    m = null ,
                                    b.$emit("removeOverlay"),
                                    h.IS_MENULET && g.overlayStatus("false"))
                                })
                            }
                        } else
                            a[google.picker.Response.ACTION] == google.picker.Action.CANCEL && (m = null ,
                            b.$emit("removeOverlay"),
                            h.IS_MENULET && g.overlayStatus("false"))
                    }
                    var l, m, n = "AIzaSyAUhLtPqg_buEVOEtzHwHSIGabtJuIT2DY", o = "275461782742-da796gpica1pgn8n3n41lq7f76taoafi.apps.googleusercontent.com", p = ["https://www.googleapis.com/auth/drive.readonly"], q = !1, r = !1;
                    gapi.load("auth"),
                    gapi.load("picker", {
                        callback: d
                    }),
                    gapi.client.load("drive", "v2", e),
                    a.gapi.auth.authorize({
                        client_id: o,
                        scope: p,
                        immediate: !1
                    }, f)
                }
            }
            ],
            link: function(a, b, c) {
                b.bind("click", function() {
                    a.initializeGoogleDrive()
                })
            }
        }
    }
    ]),
    b.module("convoApp").factory("googleHangoutsService", ["config", "ServerComm", "$q", "utils", "chatUsersManager", "$filter", function(b, c, d, e, g, h) {
        var i = {}
          , j = "621646051265"
          , k = 2e3
          , l = 60
          , m = b.APP_DOMAIN + b.REST_URL + "hangouts"
          , n = function(c) {
            var d, i, k, l, n, p = e.generateUniqueId(), q = e.generateUniqueId(), r = "", s = 3, t = 0, u = ",";
            for (var v in c)
                d = c[v],
                d.status === f.chatsdk.ParticipantStatus.JOINED && (s > t && (n = g.getUserById(d.userId),
                i = d.name,
                k = n ? n.email : "empty",
                l = h("userIdToImgUrl")(d.userId, null , !0),
                r += u + i + u + k + u + l),
                t++);
            var w = encodeURI(b.GOOGLE_HANGOUTS_CONVO_APP_LINK_PREFIX + "?gid=" + j + "&gd=" + m + u + p + u + t + r);
            return a.open(w, "_blank"),
            o(p, q)
        }
          , o = function(a, b) {
            var e = {
                method: "registerAuthKey",
                data: {
                    key: a,
                    secret: b
                }
            }
              , f = d.defer();
            return c.postx("hangouts", e).then(function(a) {
                a.data.type && p(b).then(function(a) {
                    a.type && f.resolve(a.data)
                })
            }),
            f.promise
        }
          , p = function(a) {
            var b = 0
              , e = {
                params: {
                    secret: a
                }
            }
              , f = d.defer()
              , g = setInterval(function() {
                return b === l ? void clearInterval(g) : (c.get("hangouts", e).success(function(a, b) {
                    a.type && (clearInterval(g),
                    f.resolve(a))
                }),
                void (b += 1))
            }, k);
            return f.promise
        }
        ;
        return i.startGoogleHangouts = n,
        i
    }
    ]),
    b.module("convoApp").directive("cnvIntegrationsDirectory", ["utils", "profilePicService", "awsService", "userInfo", "$window", "gcalService", "twitterService", "gmailService", "gdriveService", "dropboxService", "boxService", "config", "facebookService", "alertsService", "o365Service", "$timeout", function(c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
        return {
            restrict: "E",
            scope: !1,
            templateUrl: "integrations/integrationsDirectory/templates/cnvIntegrationsDirectoryMain.tpl.html",
            link: function(a, b, s) {
                function t(a, b) {
                    for (var c = [], d = 0; d < a.length; d++)
                        (null  != a[d].title.match(b) || null  != a[d].description.match(b)) && c.push(a[d]);
                    return c
                }
                function u(a, b) {
                    for (var c = [], d = 0; d < a.length; d++)
                        (null  != a[d].display_name.match(b) || null  != a[d].description.match(b) || a[d].modified_desc && null  != a[d].modified_desc.match(b)) && c.push(a[d]);
                    return c
                }
                function v(a, b) {
                    for (var c = [], d = 0; d < a.length; d++)
                        (null  != a[d].client_name.match(b) || null  != a[d].description.match(b)) && c.push(a[d]);
                    return c
                }
                function w(b, c, f, g, h, i, j) {
                    a.alerts = {
                        success: "Uploading profile image..."
                    },
                    a.$broadcast("render");
                    var k = d.generateRequestUUID();
                    k.then(function(d, g) {
                        var h = d.data
                          , i = e.uploadFile(b, h + "-original." + c, "temp/requests/" + h + "/" + h + "-original." + c, f);
                        i.then(function(b, c) {
                            a.alerts = {
                                success: "Profile image uploaded successfully..."
                            },
                            a.file.requestID = h,
                            a.selectedDefaultIcon = "custom",
                            setTimeout(function() {
                                a.alerts = {
                                    success: ""
                                }
                            }, 3e3),
                            a.uploadingFile = !1,
                            a.$broadcast("render")
                        })
                    })
                }
                function x(a, c) {
                    if (a.files[0]) {
                        var d = new FileReader;
                        d.onload = function(a) {
                            var d = b.find("#" + c);
                            d.attr("src", a.target.result),
                            d.removeClass("hidden"),
                            d.addClass("selected")
                        }
                        ,
                        d.readAsDataURL(a.files[0])
                    }
                }
                function y(b) {
                    if (b.source == A)
                        "error" !== b.data && (a.oauth2.gcal_status = !0,
                        a.oauth2.gcal_token = b.data.token_id,
                        a.gcalConnectionText = "Disconnect " + b.data.user_identity,
                        a.getCalendarList());
                    else if (b.source == B)
                        "error" !== b.data && (a.oauth2.twitter_status = !0,
                        a.oauth2.twitter_token = b.data.token_id,
                        a.oauth2.twitter_user_identity = b.data.user_identity,
                        a.twitterLoggedinText = 'Logged into Twitter as: <b><a target="_blank" href="https://twitter.com/' + b.data.user_identity + '">@' + b.data.user_identity + "</a></b>",
                        a.getTwitterLists());
                    else if (b.source == C)
                        "error" !== b.data && (a.oauth2.gmail_status = !0,
                        a.oauth2.gmail_token = b.data.token_id,
                        a.gmailConnectionText = "Disconnect " + b.data.user_identity,
                        a.getGmailLabelList(!0));
                    else if (b.source == D)
                        "error" !== b.data && (a.oauth2.gdrive_status = !0,
                        a.oauth2.gdrive_token = b.data.token_id,
                        a.gdriveConnectionText = "Disconnect " + b.data.user_identity,
                        a.resetDefaultFolderValue("gdrive"));
                    else if (b.source == E)
                        "error" !== b.data && (a.oauth2.dropbox_status = !0,
                        a.oauth2.dropbox_token = b.data.token_id,
                        a.dropboxConnectionText = "Disconnect " + b.data.user_identity,
                        a.resetDefaultFolderValue("dropbox"));
                    else if (b.source == F)
                        "error" !== b.data && (a.oauth2.box_status = !0,
                        a.oauth2.box_token = b.data.token_id,
                        a.boxConnectionText = "Disconnect " + b.data.user_identity,
                        a.resetDefaultFolderValue("box"));
                    else if (b.source == G)
                        "error" !== b.data && (a.oauth2.facebook_status = !0,
                        a.oauth2.facebook_token = b.data.token_id,
                        a.facebookConnectionText = "Disconnect from " + b.data.user_identity,
                        a.getFBPageList());
                    else if (b.source == H) {
                        if ("error" === b.data)
                            return void p.alertModal("Alert!!!", "There was an error connecting to your Office365 account. You may not have access to the Office365 apps required by Convo.", "OK", function() {}, function() {}, !1);
                        a.oauth2.o365_status = !0,
                        a.oauth2.o365_token = b.data.token_id,
                        a.O365ConnectionText = "Disconnect from " + b.data.user_identity,
                        a.resetDefaultFolderValue("odrive"),
                        a.getO365MailFolderList(),
                        a.getO365CalendarsList()
                    }
                    a.$broadcast("render"),
                    a.$$phase || a.$digest()
                }
                function z(b) {
                    for (var c = 0; c < a.connectedAccounts.length; c++)
                        a.connectedAccounts[c].client_id == b && a.connectedAccounts.splice(c, 1);
                    a.$broadcast("render")
                }
                var A = null 
                  , B = null 
                  , C = null 
                  , D = null 
                  , E = null 
                  , F = null 
                  , G = null 
                  , H = null ;
                a.oauth2 = {},
                a.oauth2.gcal_status = !1,
                a.oauth2.twitter_status = !1,
                a.oauth2.facebook_status = !1,
                a.oauth2.o365_status = !1;
                var I = n.TWITTER_SPLASH_URL
                  , J = n.GOOGLE_SPLASH_URL
                  , K = n.DROPBOX_SPLASH_URL
                  , L = n.BOX_SPLASH_URL
                  , M = n.FACEBOOK_SPLASH_URL
                  , N = n.O365_SPLASH_URL
                  , O = function(b) {
                    if ($(b.target).val()) {
                        var d = c.getUserGroupSearchRegex($(b.target).val());
                        a.isConfiguredIntegrationsView ? a.filteredConfiguredIntegrations = u(a.configuredIntegrations, d) : a.isConnectedAccountsView ? a.filteredConnectedAccounts = v(a.connectedAccounts, d) : (a.filteredUsers = t(a.users, d),
                        a.filteredDirectIntegrations = t(a.directIntegrationsList, d)),
                        a.isFilteredView = !0
                    } else
                        a.isFilteredView = !1;
                    a.$broadcast("render")
                }
                  , P = function(c) {
                    var d = $(c.target).val()
                      , e = a.stopWords;
                    if (d && d.length >= 3 && -1 === e.indexOf(d.toLowerCase()) && -1 === d.indexOf(",")) {
                        var f = b.find(".twitter-search-term");
                        f.removeClass("no-recipient"),
                        a.twitterIntegration.twitter_search_process_text = ""
                    }
                }
                  , Q = function(b) {
                    var c = $(b.target).val();
                    if ("," == c[c.length - 1] || "blur" == b.type) {
                        for (var d = c.split(","), e = 0; e < d.length; e++)
                            d[e] && "#" != d[e][0] && (d[e] = "#" + d[e]);
                        $(b.target).val(d.join()),
                        a.twitterIntegration.hashtags = $(b.target).val()
                    }
                }
                  , R = function(c) {
                    var d = $(c.target).val()
                      , e = b.find("#twitter-handles-process-text");
                    if (188 != c.which && "blur" != c.type || "" == d || 32 == c.which)
                        "" == d && (a.twitterIntegration.invalidHandles = [],
                        a.twitterIntegration.twitter_handles_process_text_1 = "",
                        e.html(""),
                        e.removeClass("twitter-handles-process-verify"),
                        e.removeClass("twitter-handles-process-fail"),
                        a.$broadcast("render"));
                    else {
                        a.twitterIntegration.verifyingHandles = 0,
                        a.twitterIntegration.invalidHandles = [],
                        a.twitterIntegration.twitter_handles_process_text_1 = "",
                        e.html("verifying handles..."),
                        e.removeClass("twitter-handles-process-fail"),
                        e.addClass("twitter-handles-process-verify"),
                        a.$broadcast("render"),
                        d = d.split(/[, ]+/).join(","),
                        d = d.replace(/\s*$/, "");
                        for (var f = d.split(","), g = 0; g < f.length; g++)
                            f[g] && "@" != f[g][0] && (f[g] = "@" + f[g]);
                        $(c.target).val(f.join()),
                        a.twitterIntegration.handles = $(c.target).val(),
                        promise = i.verifyTwitterHandles(a.oauth2.twitter_token, encodeURIComponent($(c.target).val())),
                        promise.then(function(b) {
                            if (b.length > 0) {
                                a.twitterIntegration.invalidHandles = b,
                                a.twitterIntegration.invalidHandlesCount = "+" + (b.length - 2);
                                var d = "";
                                1 == b.length ? (d = "We couldn't find " + b[0] + " on Twitter.",
                                e.html(d)) : 2 == b.length ? (d = "We couldn't find " + b[0] + " and " + b[1] + " on Twitter.",
                                e.html(d)) : (e.html(""),
                                a.twitterIntegration.twitter_handles_process_text_1 = "We couldn't find " + b[0] + ", " + b[1] + ", ",
                                a.$broadcast("render")),
                                e.removeClass("twitter-handles-process-verify"),
                                e.addClass("twitter-handles-process-fail")
                            } else
                                a.twitterIntegration.invalidHandles = [],
                                a.twitterIntegration.twitter_handles_process_text_1 = "",
                                e.html(""),
                                e.removeClass("twitter-handles-process-verify"),
                                e.removeClass("twitter-handles-process-fail"),
                                a.$broadcast("render");
                            a.twitterIntegration.verifyingHandles = 1,
                            188 == c.which && a.focusElementByID("twitter_handles")
                        })
                    }
                }
                  , S = _.debounce(O, 200)
                  , T = _.debounce(P, 200)
                  , U = _.debounce(Q, 200)
                  , V = _.debounce(R, 200);
                a.registerInputEvent = function() {}
                ,
                a.focusElementByID = function(a) {
                    var c = b.find("#" + a);
                    r(function() {
                        c.focus()
                    })
                }
                ,
                a.filerListViews = function(a) {
                    S(a)
                }
                ,
                a.validateTwitterSearchTerm = function(a) {
                    T(a)
                }
                ,
                a.validateTwitterHashtags = function(a) {
                    U(a)
                }
                ,
                a.validateTwitterHandles = function(a) {
                    V(a)
                }
                ,
                a.onFileSelectionChanged = function(b, c) {
                    if (b.files.length > 0) {
                        a.uploadingFile = !0,
                        a.selectedDefaultIcon = null ,
                        a.file = b.files[0];
                        var d = a.file.name.substring(a.file.name.lastIndexOf(".") + 1);
                        a.showIntegrationProfileImage = !1,
                        w(a.file, d, a.file.type, 0, 0, 0, 0),
                        x(b, c)
                    }
                }
                ,
                a.invalidateWebhookForm = function() {
                    var a = b.find(".tags");
                    a.removeClass("no-suggestion"),
                    a.addClass("no-recipient")
                }
                ,
                a.invalidateTwitterSearchTermField = function() {
                    var c = b.find(".twitter-search-term");
                    c.addClass("no-recipient"),
                    a.twitterIntegration.twitter_search_process_text = "Should be atleast three characters long and must not be a very common word",
                    a.$broadcast("render")
                }
                ,
                a.invalidateTwitterHashtagsField = function() {
                    var a = b.find("#twitter_hashtags");
                    a.addClass("no-recipient")
                }
                ,
                a.validateWebhookForm = function() {
                    console.log("validating...");
                    var a = b.find(".tags");
                    a.removeClass("no-recipient")
                }
                ,
                a.oauth2Redirect = function(b) {
                    switch (b) {
                    case "gcal":
                        if (a.oauth2.gcal_status)
                            p.promptModal(a.disconnectIntegrationAlertTitle, a.disconnectIntegrationAlertText, function() {
                                a.oauth2.gcal_status = !1,
                                a.gcalConnectionText = "Connect to Google Calendar Account",
                                console.log(a.oauth2.gcal_token),
                                a.initialized = !1,
                                a.$broadcast("render"),
                                promise = h.deleteAuthorization(a.oauth2.gcal_token),
                                promise.then(function(b) {
                                    z(a.oauth2.gcal_token),
                                    a.oauth2.gcal_token = null ,
                                    a.initialized = !0,
                                    a.$broadcast("render")
                                })
                            }, null , a.disconnectIntegrationAlertOKText, a.disconnectIntegrationAlertCANCELText, null , !0);
                        else {
                            var c = J + "?state=" + f.getUserId() + "_gcal";
                            A = g.open(c, "name", "height=600,width=1024"),
                            g.focus && A.focus()
                        }
                        break;
                    case "gmail":
                        if (a.oauth2.gmail_status)
                            p.promptModal(a.disconnectIntegrationAlertTitle, a.disconnectIntegrationAlertText, function() {
                                a.oauth2.gmail_status = !1,
                                a.gmailConnectionText = "Connect to Gmail Account",
                                a.initialized = !1,
                                a.$broadcast("render"),
                                promise = j.deleteAuthorization(a.oauth2.gmail_token),
                                promise.then(function(b) {
                                    z(a.oauth2.gmail_token),
                                    a.oauth2.gmail_token = null ,
                                    a.initialized = !0,
                                    a.$broadcast("render")
                                })
                            }, null , a.disconnectIntegrationAlertOKText, a.disconnectIntegrationAlertCANCELText, null , !0);
                        else {
                            var c = J + "?state=" + f.getUserId() + "_gmail";
                            C = g.open(c, "name", "height=600,width=1024"),
                            g.focus && C.focus()
                        }
                        break;
                    case "twitter":
                        if (a.oauth2.twitter_status) {
                            var d = "Disconnect your Twitter account: " + a.oauth2.twitter_user_identity
                              , e = "Some twitter integrations may be affected by disconnecting this account.";
                            p.promptModal(d, e, function() {
                                a.oauth2.twitter_status = !1,
                                a.twitterConnectionText = "Connect to Twitter account",
                                a.initialized = !1,
                                a.$broadcast("render"),
                                promise = i.deleteAuthorization(a.oauth2.twitter_token),
                                promise.then(function(b) {
                                    z(a.oauth2.twitter_token),
                                    a.oauth2.twitter_token = null ,
                                    a.initialized = !0,
                                    a.$broadcast("render")
                                })
                            }, null , a.disconnectIntegrationAlertOKText, a.disconnectIntegrationAlertCANCELText, null , !0)
                        } else {
                            var c = I + "?state=" + f.getUserId();
                            B = g.open(c, "name", "height=600,width=1024"),
                            g.focus && B.focus()
                        }
                        break;
                    case "gdrive":
                        if (a.oauth2.gdrive_status)
                            p.promptModal(a.disconnectIntegrationAlertTitle, a.disconnectIntegrationAlertText, function() {
                                a.oauth2.gdrive_status = !1,
                                a.gdriveConnectionText = "Connect to Google Drive Account",
                                a.initialized = !1,
                                a.$broadcast("render"),
                                promise = k.deleteAuthorization(a.oauth2.gdrive_token),
                                promise.then(function(b) {
                                    z(a.oauth2.gdrive_token),
                                    a.oauth2.gdrive_token = null ,
                                    a.initialized = !0,
                                    a.$broadcast("render")
                                })
                            }, null , a.disconnectIntegrationAlertOKText, a.disconnectIntegrationAlertCANCELText, null , !0);
                        else {
                            var c = J + "?state=" + f.getUserId() + "_gdrive";
                            D = g.open(c, "name", "height=600,width=1024"),
                            g.focus && D.focus()
                        }
                        break;
                    case "dropbox":
                        if (a.oauth2.dropbox_status)
                            p.promptModal(a.disconnectIntegrationAlertTitle, a.disconnectIntegrationAlertText, function() {
                                a.oauth2.dropbox_status = !1,
                                a.dropboxConnectionText = "Connect to Dropbox Account",
                                a.initialized = !1,
                                a.$broadcast("render"),
                                promise = l.deleteAuthorization(a.oauth2.dropbox_token),
                                promise.then(function(b) {
                                    z(a.oauth2.dropbox_token),
                                    a.oauth2.dropbox_token = null ,
                                    a.initialized = !0,
                                    a.$broadcast("render")
                                })
                            }, null , a.disconnectIntegrationAlertOKText, a.disconnectIntegrationAlertCANCELText, null , !0);
                        else {
                            var c = K + "?user_id=" + f.getUserId();
                            E = g.open(c, "name", "height=600,width=1024"),
                            g.focus && E.focus()
                        }
                        break;
                    case "box":
                        if (a.oauth2.box_status)
                            p.promptModal(a.disconnectIntegrationAlertTitle, a.disconnectIntegrationAlertText, function() {
                                a.oauth2.box_status = !1,
                                a.boxConnectionText = "Connect to Box Account",
                                a.initialized = !1,
                                a.$broadcast("render"),
                                promise = m.deleteAuthorization(a.oauth2.box_token),
                                promise.then(function(b) {
                                    z(a.oauth2.box_token),
                                    a.oauth2.box_token = null ,
                                    a.initialized = !0,
                                    a.$broadcast("render")
                                })
                            }, null , a.disconnectIntegrationAlertOKText, a.disconnectIntegrationAlertCANCELText, null , !0);
                        else {
                            var c = L + "?user_id=" + f.getUserId();
                            F = g.open(c, "name", "height=600,width=1024"),
                            g.focus && F.focus()
                        }
                        break;
                    case "facebook":
                        if (a.oauth2.facebook_status)
                            p.promptModal(a.disconnectIntegrationAlertTitle, a.disconnectIntegrationAlertText, function() {
                                a.oauth2.facebook_status = !1,
                                a.facebookConnectionText = "Connect to Facebook Account",
                                a.initialized = !1,
                                a.$broadcast("render"),
                                promise = o.deleteAuthorization(a.oauth2.facebook_token),
                                promise.then(function(b) {
                                    z(a.oauth2.facebook_token),
                                    a.oauth2.facebook_token = null ,
                                    a.initialized = !0,
                                    a.$broadcast("render")
                                })
                            }, null , a.disconnectIntegrationAlertOKText, a.disconnectIntegrationAlertCANCELText, null , !0);
                        else {
                            var c = M + "?user_id=" + f.getUserId();
                            G = g.open(c, "name", "height=600,width=1024"),
                            g.focus && G.focus()
                        }
                        break;
                    case "o365":
                        if (a.oauth2.o365_status)
                            p.promptModal(a.disconnectIntegrationAlertTitle, a.disconnectIntegrationAlertText, function() {
                                a.oauth2.o365_status = !1,
                                a.O365ConnectionText = "Connect to Office 365 Account",
                                a.initialized = !1,
                                a.$broadcast("render"),
                                promise = q.deleteAuthorization(a.oauth2.o365_token),
                                promise.then(function(b) {
                                    z(a.oauth2.o365_token),
                                    a.oauth2.o365_token = null ,
                                    a.initialized = !0,
                                    a.$broadcast("render")
                                })
                            }, null , a.disconnectIntegrationAlertOKText, a.disconnectIntegrationAlertCANCELText, null , !0);
                        else {
                            var c = N + "?state=" + f.getUserId();
                            H = g.open(c, "name", "height=600,width=1024"),
                            g.focus && H.focus()
                        }
                    }
                    return !1
                }
                ,
                g.addEventListener && g.addEventListener("message", y, !1),
                a.hideDefaultIcon = function(a) {
                    var c = b.find("#" + a);
                    c.addClass("hidden")
                }
            },
            controller: ["$scope", "$element", "$q", "usersGroupsListProvider", "accountInfo", "webhooksService", "userInfo", "$http", "$window", "$location", "$anchorScroll", "bannerService", "AppLinks", "gcalService", "Groups", "Users", "alertsService", "twitterService", "gmailService", "gdriveService", "dropboxService", "boxService", "facebookService", "mixpanelService", "o365Service", "config", "utils", "$filter", function(c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C, D) {
                function E(a, b, d, e) {
                    var f, g, i, j;
                    "enable" == b ? (f = la,
                    g = ma,
                    i = na,
                    j = oa) : "disable" == b && (f = ha,
                    g = ia,
                    i = ja,
                    j = ka),
                    c.$broadcast("render"),
                    s.promptModal(f, g, function() {
                        var f = null ;
                        f = "gmail" == e ? u.disableIntegration(a, b, d) : h.disableIntegration(a, b, d),
                        f.then(function(a) {
                            for (var b = 0; b < c.configuredIntegrations.length; b++)
                                if (c.configuredIntegrations[b].webhook_id == a.webhookID) {
                                    var d = c.configuredIntegrations[b].status;
                                    c.configuredIntegrations[b].status = "INACTIVE" == d ? "ACTIVE" : "INACTIVE",
                                    c.configuredIntegrations[b].modified_by = a.modified_by,
                                    c.configuredIntegrations[b].modified_desc = a.modified_desc;
                                    break
                                }
                            c.$broadcast("render")
                        })
                    }, null , i, j, null , !0)
                }
                function F() {
                    c.showIntegrationProfileImage = !0,
                    c.selectedDefaultIcon = "custom",
                    c.saveButtonText = "Save changes",
                    c.initialized = !0,
                    c.$broadcast("render")
                }
                function G(a) {
                    var b;
                    $.resourceLink.resourcePath.hierarchy.length > 1 ? (b = $.resourceLink.resourcePath.hierarchy[1].type,
                    "AllIntegrations" === b ? c.toggleSelectedView(c.ALL_INTEGRATIONS) : "ConfiguredIntegrations" === b ? c.toggleSelectedView(c.CONFIGURED_INTEGRATIONS) : "ConnectedAccounts" === b ? c.toggleSelectedView(c.CONNECTED_ACCOUNTS) : "AddIntegration" === b ? c.toggleSelectedView(c.ADD_WEBHOOK_INTEGRATION) : "AddGcalIntegration" === b ? c.toggleSelectedView(c.ADD_GCAL_INTEGRATION) : "AddTwitterIntegration" === b ? c.toggleSelectedView(c.ADD_TWITTER_INTEGRATION) : "AddGmailIntegration" === b ? c.toggleSelectedView(c.ADD_GMAIL_INTEGRATION) : "AddGdriveIntegration" === b ? c.toggleSelectedView(c.ADD_GDRIVE_INTEGRATION) : "AddDropboxIntegration" === b ? c.toggleSelectedView(c.ADD_DROPBOX_INTEGRATION) : "AddBoxIntegration" === b ? c.toggleSelectedView(c.ADD_BOX_INTEGRATION) : "AddFacebookIntegration" === b ? c.toggleSelectedView(c.ADD_FACEBOOK_INTEGRATION) : "AddO365MailIntegration" === b ? c.toggleSelectedView(c.ADD_O365MAIL_INTEGRATION) : "AddO365CalendarIntegration" === b ? c.toggleSelectedView(c.ADD_O365CALENDAR_INTEGRATION) : "AddO365DriveIntegration" === b && c.toggleSelectedView(c.ADD_O365DRIVE_INTEGRATION)) : (c.toggleSelectedView(c.ALL_INTEGRATIONS),
                    c.initialized = !0,
                    c.$broadcast("render"))
                }
                function H() {
                    console.log("Users Directory app activated")
                }
                function I() {
                    console.log("Users Directory app deactivated")
                }
                function J() {
                    console.log("Users Directory app closing")
                }
                function K(a, b) {
                    var c = a.title.toLowerCase()
                      , d = b.title.toLowerCase();
                    return c && d ? d > c ? -1 : c > d ? 1 : void 0 : 0
                }
                function L() {
                    c.users = [{
                        image: "bitbucket.png",
                        title: "Bitbucket",
                        description: "Whenever you commit a changeset, it will become a post on Convo.",
                        link: "https://zapier.com/app/min/1237/start"
                    }, {
                        image: "calendar.png",
                        title: "Google Calendar Reminder",
                        description: "Get a reminder on Convo when your event is about to start on Google Calendar.",
                        link: "https://zapier.com/app/min/1240/start"
                    }, {
                        image: "calendar.png",
                        title: "Google Calendar Events",
                        description: "Create a post on Convo whenever an event is added to your Google Calendar.",
                        link: "https://zapier.com/app/min/1239/start"
                    }, {
                        image: "googledrive.png",
                        title: "Google Drive",
                        description: "Create a post in Convo whenever a new document is shared in Google Drive.",
                        link: "https://zapier.com/app/min/1236/start"
                    }, {
                        image: "gmail.png",
                        title: "Gmail",
                        description: "Send emails from Gmail directly into Convo.",
                        link: "https://zapier.com/app/min/1238/start"
                    }, {
                        image: "jira.png",
                        title: "JIRA",
                        description: "Create posts from new issues in Jira",
                        link: "https://zapier.com/app/min/1241/start"
                    }, {
                        image: "salesforce_01.png",
                        title: "Salesforce New Lead",
                        description: "Use Salesforce CRM platform to send leads directly into Convo.",
                        link: "https://zapier.com/app/min/1242/start"
                    }, {
                        image: "salesforce_01.png",
                        title: "Salesforce New Opportunity",
                        description: "Use Salesforce CRM platform to send opportunities directly into Convo.",
                        link: "https://zapier.com/app/min/1243/start"
                    }, {
                        image: "twitter.png",
                        title: "Twitter Search",
                        description: "Create a new post in Convo when a Tweet matching your search is found on Twitter.",
                        link: "https://zapier.com/app/min/1232/start"
                    }, {
                        image: "twitter.png",
                        title: "Your Favorite Tweets",
                        description: "Create a new post on Convo whenever you favorite a tweet on Twitter.",
                        link: "https://zapier.com/app/min/1235/start"
                    }, {
                        image: "dropbox.png",
                        title: "Dropbox",
                        description: "Create a post on Convo whenever a new file is added to Dropbox.",
                        link: "https://zapier.com/app/min/1244/start"
                    }, {
                        image: "box.png",
                        title: "Box",
                        description: "Create a post on Convo whenever a new file is added to Box.",
                        link: "https://zapier.com/app/min/1744/start"
                    }, {
                        image: "facebook.png",
                        title: "Facebook",
                        description: "Share posts published on a Facebook page to Convo.",
                        link: "https://zapier.com/app/min/2000/start"
                    }, {
                        image: "onedrive.png",
                        title: "OneDrive",
                        description: "Post new files from OneDrive to Convo.",
                        link: "https://zapier.com/app/min/1999/start"
                    }, {
                        image: "zapier.png",
                        title: "Zapier",
                        description: "Choose from 400+ applications and create your own Zapier integration.",
                        link: "https://zapier.com/app/editor"
                    }],
                    c.directIntegrationsList = [{
                        type: "Twitter",
                        image: "twitter.png",
                        title: "Twitter",
                        description: "Create a post on Convo when a search term or @username is mentioned on Twitter. Twitter replies are added to the same thread on Convo too.",
                        link: "tab.appInstanceId | getResourceLinkUrl:[{uid: groupId, type: '100'}, {uid: '2', type: 'AddTwitterIntegration'}]:null:'Add Twitter Integration'"
                    }, {
                        type: "Gmail",
                        image: "gmail.png",
                        title: "Gmail",
                        description: "Create a new post on Convo when someone sends you an email. Email replies are added to the same thread on Convo too. Never miss an important email again.",
                        link: "tab.appInstanceId | getResourceLinkUrl:[{uid: groupId, type: '100'}, {uid: '2', type: 'AddGmailIntegration'}]:null:'Add Gmail Integration'"
                    }, {
                        type: "O365Mail",
                        image: "o365_mail.png",
                        title: "Office 365 - Mail",
                        description: "Create a new post on Convo when someone sends you an email. Email replies are added to the same thread on Convo too. Never miss an important email again.",
                        link: "tab.appInstanceId | getResourceLinkUrl:[{uid: groupId, type: '100'}, {uid: '2', type: 'AddO365MailIntegration'}]:null:'Add Office 365 - Mail Integration'"
                    }, {
                        type: "O365Calendar",
                        image: "o365_calendar.png",
                        title: "Office 365 - Calendar",
                        description: "Create a post on Convo when a new event is added to your Office 365 Calendar. Get a reminder before your event starts, so you are never late for an amazing opportunity.",
                        link: "tab.appInstanceId | getResourceLinkUrl:[{uid: groupId, type: '100'}, {uid: '2', type: 'AddO365CalendarIntegration'}]:null:'Add Office 365 - Calendar Integration'"
                    }, {
                        type: "O365Drive",
                        image: "onedrive.png",
                        title: "Office 365 - OneDrive",
                        description: "Post new files from OneDrive to Convo.",
                        link: "tab.appInstanceId | getResourceLinkUrl:[{uid: groupId, type: '100'}, {uid: '2', type: 'AddO365DriveIntegration'}]:null:'Add Office 365 - OneDrive Integration'"
                    }, {
                        type: "Dropbox",
                        image: "dropbox.png",
                        title: "Dropbox",
                        description: "This integration imports files into Convo when new files are added to Dropbox.",
                        link: "tab.appInstanceId | getResourceLinkUrl:[{uid: groupId, type: '100'}, {uid: '2', type: 'AddDropboxIntegration'}]:null:'Add Dropbox Integration'"
                    }, {
                        type: "Box",
                        image: "box.png",
                        title: "Box",
                        description: "This integration imports files into Convo when new files are added to Box.",
                        link: "tab.appInstanceId | getResourceLinkUrl:[{uid: groupId, type: '100'}, {uid: '2', type: 'AddBoxIntegration'}]:null:'Add Box Integration'"
                    }, {
                        type: "Gdrive",
                        image: "googledrive.png",
                        title: "Google Drive",
                        description: "This integration imports files into Convo when new files are added to Google Drive.",
                        link: "tab.appInstanceId | getResourceLinkUrl:[{uid: groupId, type: '100'}, {uid: '2', type: 'AddGdriveIntegration'}]:null:'Add Google Drive Integration'"
                    }, {
                        type: "Gcal",
                        image: "calendar.png",
                        title: "Google Calendar",
                        description: "Create a post on Convo when a new event is added to your Google Calendar. Get a reminder before your event starts, so you are never late for an amazing opportunity.",
                        link: "tab.appInstanceId | getResourceLinkUrl:[{uid: groupId, type: '100'}, {uid: '2', type: 'AddGcalIntegration'}]:null:'Add Google Calendar Integration'"
                    }],
                    c.directIntegrationsList.push({
                        type: "Facebook",
                        image: "facebook.png",
                        title: "Facebook",
                        description: "Share posts published on a Facebook page to Convo.",
                        link: "tab.appInstanceId | getResourceLinkUrl:[{uid: groupId, type: '100'}, {uid: '2', type: 'AddFacebookIntegration'}]:null:'Add Facebook Integration'"
                    }),
                    c.directIntegrationsList.push({
                        type: "ifttt",
                        image: "ifttt.png",
                        title: "IFTTT",
                        description: "IFTTT puts the internet to work for you. Create simple connections between the products you use every day.",
                        link: ""
                    }, {
                        type: "Webhook",
                        image: "direct.png",
                        title: "Incoming Webhook",
                        description: "Create an incoming webhook. Third party apps can use these webhooks to create posts on Convo.",
                        link: "tab.appInstanceId | getResourceLinkUrl:[{uid: groupId, type: '100'}, {uid: '2', type: 'AddIntegration'}]:null:'Add Webhook Integration'"
                    }),
                    c.users.sort(K),
                    M(!0)
                }
                function M(a) {
                    c.configuredIntegrations.length > 0 && (c.initialized = !0),
                    promise = h.getIntegrations(i.getUserId(), g.getAccountId()),
                    promise.then(function(b) {
                        var d = [];
                        c.dropdownCtrl = {},
                        c.dropdownCtrl.options = [],
                        c.dropdownCtrl.options.push({
                            label: "Manage this integration",
                            callback: Q
                        }),
                        c.dropdownCtrl.options.push({
                            isDivider: !0
                        }),
                        c.dropdownCtrl.options.push({
                            label: "Remove this integration",
                            callback: R
                        }),
                        c.dropdownCtrlAdmin = {},
                        c.dropdownCtrlAdmin.options = [],
                        c.dropdownCtrlAdmin.options.push({
                            label: "Remove this integration",
                            callback: R
                        }),
                        c.configuredIntegrations = [];
                        for (var e = 0; e < b.length; e++) {
                            var f = 0
                              , g = "ConfiguredIntegrations";
                            switch (f = b[e].webhook_id,
                            b[e].integration_type) {
                            case "gcal":
                                g = "AddGcalIntegration";
                                break;
                            case "twitter":
                                g = "AddTwitterIntegration";
                                break;
                            case "gmail":
                                g = "AddGmailIntegration";
                                break;
                            case "gdrive":
                                g = "AddGdriveIntegration";
                                break;
                            case "dropbox":
                                g = "AddDropboxIntegration";
                                break;
                            case "box":
                                g = "AddBoxIntegration";
                                break;
                            case "facebook":
                                g = "AddFacebookIntegration";
                                break;
                            case "o365_mail":
                                g = "AddO365MailIntegration";
                                break;
                            case "o365_calendar":
                                g = "AddO365CalendarIntegration";
                                break;
                            case "o365_drive":
                                g = "AddO365DriveIntegration";
                                break;
                            case "webhook":
                                g = "AddIntegration"
                            }
                            b[e].integration_id = f,
                            b[e].resource_type = g,
                            d.push(b[e])
                        }
                        c.configuredIntegrations = d,
                        a || (aa && (clearInterval(aa),
                        aa = null ,
                        ba = 0),
                        b && b.length > 0 && (aa = setInterval(P, 2e3, b[0].integration_id, b[0].profile_image_version)),
                        c.initialized = !0,
                        c.$broadcast("render"))
                    })
                }
                function N(a) {
                    promise = h.getConnectedAccounts(i.getUserId()),
                    c.connectedAccounts = [],
                    promise.then(function(b) {
                        for (var d = [], e = 0; e < b.length; e++)
                            d.push(b[e]);
                        c.connectedAccounts = d,
                        a && (c.initialized = !0,
                        c.$broadcast("render")),
                        G(!0)
                    })
                }
                function O(a) {
                    for (var b = 0; b < c.configuredIntegrations.length; b++)
                        if (c.configuredIntegrations[b].integration_id == a)
                            return c.configuredIntegrations[b];
                    return null 
                }
                function P(a, d) {
                    return ba > 5 ? (ba = 0,
                    clearInterval(aa),
                    !1) : (ba++,
                    promise = h.getIntegrationDetails(a),
                    void promise.then(function(e) {
                        if (e.profile_image_version != d) {
                            clearInterval(aa);
                            for (var f = 0; f < c.configuredIntegrations.length; f++)
                                if (c.configuredIntegrations[f].integration_id == a) {
                                    var g = b.copy(c.configuredIntegrations[f]);
                                    g.profile_image_type = e.profile_image_type,
                                    g.profile_image_version = e.profile_image_version,
                                    c.configuredIntegrations[f] = g,
                                    c.$broadcast("render");
                                    break
                                }
                        }
                    }))
                }
                function Q(a, b) {
                    c.manageIntegration(a.integration_type, a);
                    var d = o.newResourceLink("100", [{
                        uid: a.integration_id + ":w",
                        type: "100"
                    }, {
                        uid: "2",
                        type: a.resource_type
                    }], null , "Update Integration")
                      , e = o.linkToUrl(d, !0);
                    l.url(e.slice(1))
                }
                function R(a, b) {
                    s.promptModal(da, ea, function() {
                        c.deleteIntegration(a.webhook_id, a.integration_type, a.zap_source)
                    }, null , fa, ga, null , !0)
                }
                function S(a) {
                    var b = null ;
                    switch (a) {
                    case "mail":
                        return b = c.form.o365MailFolder.folder_id;
                    case "calendar":
                        return b = {
                            calendar_id: c.form.o365Calendar.id,
                            notification_time: c.form.ocal_time_before
                        },
                        JSON.stringify(b);
                    case "drive":
                        return b = c.odriveFolderID
                    }
                }
                function T() {
                    var a = null ;
                    return a = {
                        search_term: c.twitterIntegration.searchTerm,
                        hash_tags: c.twitterIntegration.hashtags ? c.twitterIntegration.hashtags.replace(/,\s*$/, "") : "",
                        twitter_list: c.twitterIntegration.list ? c.twitterIntegration.list.id : "",
                        handles: c.twitterIntegration.handles ? c.twitterIntegration.handles.replace(/,\s*$/, "") : "",
                        from_user: c.twitterIntegration.enableHandlesFrom,
                        to_user: c.twitterIntegration.enableHandlesTo,
                        reply: c.twitterIntegration.enableHandlesReply,
                        retweet: c.twitterIntegration.enableHandlesRetweet,
                        enable_search: c.twitterIntegration.enableSearch,
                        enable_handles: c.twitterIntegration.enableHandles,
                        enable_hashtags: c.twitterIntegration.enableHashtags,
                        enable_list: c.twitterIntegration.enableList
                    }
                }
                function U() {
                    var a = !0;
                    if (c.twitterIntegration.searchTerm)
                        for (var b = c.twitterIntegration.searchTerm.split(","), d = 0; d < b.length; d++) {
                            var e = b[d].trim();
                            (!e || e.length < 3) && (a = !1)
                        }
                    return c.twitterIntegration.searchTerm && c.twitterIntegration.searchTerm.length < 3 || c.twitterIntegration.searchTerm && -1 !== c.stopWords.indexOf(c.twitterIntegration.searchTerm.toLowerCase()) || !a ? (c.invalidateTwitterSearchTermField(),
                    !1) : !0
                }
                function V() {
                    var a = !0;
                    if (c.twitterIntegration.hashtags)
                        for (var b = c.twitterIntegration.hashtags.split(","), d = 0; d < b.length; d++) {
                            var e = b[d].trim();
                            e && "#" !== e || (a = !1)
                        }
                    return a ? !0 : (c.invalidateTwitterHashtagsField(),
                    !1)
                }
                function W(a) {
                    var b = !1
                      , d = "";
                    if (!(a.enable_search || a.enable_hashtags || a.enable_handles || a.enable_list))
                        return s.promptModal("Trigger not working", "You should select at least one of the triggers, otherwise no Tweets will be posted.", function() {
                            c.moveToPageSection("hash_twitter_triggers")
                        }, function() {
                            c.cancelAddIntegration()
                        }, "Set up trigger", "Leave this page", null , !0, !0, !1),
                        !1;
                    if (a.enable_handles && a.handles && c.twitterIntegration.invalidHandles.length > 0)
                        b = !0,
                        d = "twitter_handles";
                    else {
                        if (a.enable_handles && a.handles && 0 == c.twitterIntegration.invalidHandles.length || a.enable_search && a.search_term || a.enable_hashtags && a.hash_tags || a.enable_list && a.twitter_list)
                            return !0;
                        a.enable_handles && !a.handles ? (b = !0,
                        d = "twitter_handles") : a.enable_search && !a.search_term ? (b = !0,
                        d = "twitter_search_term") : a.enable_hashtags && !a.hash_tags ? (b = !0,
                        d = "twitter_hashtags") : a.enable_list && !a.twitter_list && (b = !0,
                        d = "twitter_list")
                    }
                    return b ? (s.promptModal("Trigger not working", "You should select at least one of the triggers, otherwise no Tweets will be posted.", function() {
                        c.focusElementByID(d)
                    }, function() {
                        c.cancelAddIntegration()
                    }, "Set up trigger", "Leave this page", null , !0, !0, !1),
                    !1) : !0
                }
                function X() {
                    c.twitterIntegration = {},
                    c.twitterIntegration.twitterLists = [],
                    c.twitterIntegration.enableHandles = 1,
                    c.twitterIntegration.enableSearch = 0,
                    c.twitterIntegration.enableHashtags = 0,
                    c.twitterIntegration.enableList = 0,
                    c.twitterIntegration.enableHandlesTo = 1,
                    c.twitterIntegration.enableHandlesFrom = 1,
                    c.twitterIntegration.enableHandlesReply = 1,
                    c.twitterIntegration.enableHandlesRetweet = 1,
                    c.twitterIntegration.verifyingHandles = 1,
                    c.twitterIntegration.invalidHandles = [],
                    c.twitterIntegration.twitterListsError = !1,
                    c.twitterIntegration.twitterListsErrorMessage = ""
                }
                function Y() {
                    c.initialized = !1,
                    c.invitedUsers = [],
                    c.showingListLimit = 20,
                    c.isConfiguredIntegrationsView = !1,
                    c.addIntegrationView = !1,
                    c.addGcalIntegrationView = !1,
                    c.addGmailIntegrationView = !1,
                    c.addTwitterIntegrationView = !1,
                    c.addGdriveIntegrationView = !1,
                    c.addDropboxIntegrationView = !1,
                    c.addBoxIntegrationView = !1,
                    c.integrationPreview = !1,
                    c.selectedDefaultIcon = "direct.png",
                    c.searchPlaceHolder = "integrations",
                    c.gcalConnectionText = "Connect to Google Calendar Account",
                    c.gmailConnectionText = "Connect to Gmail Account",
                    c.gdriveConnectionText = "Connect to Google Drive Account",
                    c.twitterConnectionText = "Connect to Twitter Account",
                    c.twitterLoggedinText = "",
                    c.dropboxConnectionText = "Connect to Dropbox Account",
                    c.boxConnectionText = "Connect to Box Account",
                    c.facebookConnectionText = "Connect to Facebook Account",
                    c.O365ConnectionText = "Connect to Office 365 Account",
                    L(),
                    N(!0)
                }
                var Z = a.IS_NATIVE_MENULET ? 3 : 5
                  , $ = c.tab
                  , _ = $.appContCtrl.appCtrl
                  , aa = null 
                  , ba = 0;
                c.groupId = $.resourceId,
                c.showingListLimit = 20,
                c.shareWith = [],
                c.isUpdatingWebhook = !1,
                c.isUpdatingGcal = !1,
                c.form = {},
                c.form.fetch_my_tweets = !1,
                c.showWebhookInstructions = !1,
                c.showWebhookInstrucitonsLinText = "show details",
                c.calendarList = [],
                c.gmailLabelList = [],
                c.fbPageList = [],
                c.configuredIntegrations = [],
                c.saveButtonText = "Save",
                c.updatingIntegrationUser = {},
                c.stopWords = ["a", "able", "about", "across", "after", "all", "almost", "also", "am", "among", "an", "and", "any", "are", "as", "at", "be", "because", "been", "but", "by", "can", "cannot", "could", "dear", "did", "do", "does", "either", "else", "ever", "every", "for", "from", "get", "got", "had", "has", "have", "he", "her", "hers", "him", "his", "how", "however", "i", "if", "in", "into", "is", "it", "its", "just", "least", "let", "like", "likely", "may", "me", "might", "most", "must", "my", "neither", "no", "nor", "not", "of", "off", "often", "on", "only", "or", "other", "our", "own", "rather", "said", "say", "says", "she", "should", "since", "so", "some", "than", "that", "the", "their", "them", "then", "there", "these", "they", "this", "tis", "to", "too", "twas", "us", "wants", "was", "we", "were", "what", "when", "where", "which", "while", "who", "whom", "why", "will", "with", "would", "yet", "you", "your", "ain't", "aren't", "can't", "could've", "couldn't", "didn't", "doesn't", "don't", "hasn't", "he'd", "he'll", "he's", "how'd", "how'll", "how's", "i'd", "i'll", "i'm", "i've", "isn't", "it's", "might've", "mightn't", "must've", "mustn't", "shan't", "she'd", "she'll", "she's", "should've", "shouldn't", "that'll", "that's", "there's", "they'd", "they'll", "they're", "they've", "wasn't", "we'd", "we'll", "we're", "weren't", "what'd", "what's", "when'd", "when'll", "when's", "where'd", "where'll", "where's", "who'd", "who'll", "who's", "why'd", "why'll", "why's", "won't", "would've", "wouldn't", "you'd", "you'll", "you're", "you've"],
                c.o365MailFolderList = [],
                c.o365CalendarsList = [],
                X();
                var ca = !1;
                c.file = null ,
                c.uploadingFile = !1,
                _.activated = H,
                _.deactivated = I,
                _.closing = J,
                _.initialized = !0,
                _.navigate = G,
                c.ALL_INTEGRATIONS = "allintegrations",
                c.CONFIGURED_INTEGRATIONS = "configuredintegrations",
                c.CONNECTED_ACCOUNTS = "connectedaccounts",
                c.ADD_WEBHOOK_INTEGRATION = "addwebhookintegration",
                c.ADD_GCAL_INTEGRATION = "addgcalintegration",
                c.ADD_TWITTER_INTEGRATION = "addtwitterintegration",
                c.ADD_GMAIL_INTEGRATION = "addgmailintegration",
                c.ADD_GDRIVE_INTEGRATION = "addgdriveintegration",
                c.ADD_DROPBOX_INTEGRATION = "adddropboxintegration",
                c.ADD_BOX_INTEGRATION = "addboxintegration",
                c.ADD_FACEBOOK_INTEGRATION = "addfacebookintegration",
                c.ADD_O365MAIL_INTEGRATION = "addo365mailintegration",
                c.ADD_O365CALENDAR_INTEGRATION = "addo365calendarintegration",
                c.ADD_O365DRIVE_INTEGRATION = "addo365driveintegration",
                c.dropboxDirectory = "/",
                c.boxFolder = "All Files",
                c.boxFolderID = "0",
                c.gdriveFolder = "root",
                c.gdriveFolderID = "root",
                c.odriveFolder = "root",
                c.odriveFolderID = "root",
                c.DROPBOX_DEFAULT_ROOT = "/",
                c.BOX_DEFAULT_ROOT_FOLDER = "All Files",
                c.BOX_DEFAULT_ROOT_FOLDER_ID = "0",
                c.GDRIVE_DEFAULT_ROOT_FOLDER = "root",
                c.GDRIVE_DEFAULT_ROOT_FOLDER_ID = "root",
                c.ODRIVE_DEFAULT_ROOT_FOLDER = "root",
                c.ODRIVE_DEFAULT_ROOT_FOLDER_ID = "root",
                c.selectedView = c.ALL_INTEGRATIONS,
                c.titleAllIntegrations = "All Integrations",
                c.titleConfiguredIntegrations = "Configured Integrations",
                c.titleConnectedAccounts = "Connected Accounts";
                var da = "Remove Integration"
                  , ea = "Are you sure you want to remove this integration?"
                  , fa = "Ok"
                  , ga = "Cancel";
                c.disconnectIntegrationAlertTitle = "Disconnect Integration",
                c.disconnectIntegrationAlertText = "Are you sure you want to disconnect this account? This will disable all connected integrations.",
                c.disconnectIntegrationAlertOKText = "Disconnect this account",
                c.disconnectIntegrationAlertCANCELText = "Cancel";
                var ha = "Disable Integration"
                  , ia = "Are you sure you want to disable this integration?"
                  , ja = "Ok"
                  , ka = "Cancel"
                  , la = "Enable Integration"
                  , ma = "Are you sure you want to re-enable this integration?"
                  , na = "Ok"
                  , oa = "Cancel";
                c.userDrpDwnCtrl = {},
                c.userDrpDwnCtrl.align = "right",
                c.toggleSelectedView = function(a) {
                    c.selectedView = a,
                    c.isFilteredView = !1,
                    c.users.length > 20 ? c.showingListLimit = 20 : c.showingListLimit = c.users.length,
                    a == c.ALL_INTEGRATIONS ? (c.isConfiguredIntegrationsView = !1,
                    c.isConnectedAccountsView = !1,
                    c.addIntegrationView = !1,
                    c.addGcalIntegrationView = !1,
                    c.addGmailIntegrationView = !1,
                    c.addGdriveIntegrationView = !1,
                    c.addTwitterIntegrationView = !1,
                    c.addDropboxIntegrationView = !1,
                    c.addBoxIntegrationView = !1,
                    c.addFacebookIntegrationView = !1,
                    c.addO365MailIntegrationView = !1,
                    c.addO365CalendarIntegrationView = !1,
                    c.addO365DriveIntegrationView = !1,
                    c.integrationPreview = !1,
                    c.searchPlaceHolder = "integrations",
                    c.initialized = !0) : a == c.CONFIGURED_INTEGRATIONS ? (c.isConfiguredIntegrationsView = !0,
                    c.isConnectedAccountsView = !1,
                    c.addIntegrationView = !1,
                    c.addGcalIntegrationView = !1,
                    c.addGmailIntegrationView = !1,
                    c.addGdriveIntegrationView = !1,
                    c.addDropboxIntegrationView = !1,
                    c.addBoxIntegrationView = !1,
                    c.addFacebookIntegrationView = !1,
                    c.addTwitterIntegrationView = !1,
                    c.addO365MailIntegrationView = !1,
                    c.addO365CalendarIntegrationView = !1,
                    c.addO365DriveIntegrationView = !1,
                    c.integrationPreview = !1,
                    c.searchPlaceHolder = "integrations",
                    M()) : a == c.CONNECTED_ACCOUNTS ? (c.isConnectedAccountsView = !0,
                    c.isConfiguredIntegrationsView = !1,
                    c.searchPlaceHolder = "connected accounts",
                    c.initialized = !0) : a == c.ADD_WEBHOOK_INTEGRATION ? c.createWebhookIntegration() : a == c.ADD_GCAL_INTEGRATION ? c.createGcalIntegration() : a == c.ADD_TWITTER_INTEGRATION ? c.createTwitterIntegration() : a == c.ADD_GMAIL_INTEGRATION ? c.createGmailIntegration() : a == c.ADD_GDRIVE_INTEGRATION ? c.createGdriveIntegration() : a == c.ADD_DROPBOX_INTEGRATION ? c.createDropboxIntegration() : a == c.ADD_BOX_INTEGRATION ? c.createBoxIntegration() : a == c.ADD_FACEBOOK_INTEGRATION ? c.createFacebookIntegration() : a == c.ADD_O365MAIL_INTEGRATION ? c.createO365MailIntegration() : a == c.ADD_O365CALENDAR_INTEGRATION ? c.createO365CalendarIntegration() : a == c.ADD_O365DRIVE_INTEGRATION && c.createO365DriveIntegration(),
                    d.find(".view-content .search-bar input[type=text]").val(""),
                    c.$broadcast("render")
                }
                ,
                c.getIntegrationStatusClass = function(a) {
                    return "INACTIVE" == a ? "integration-enable" : "integration-disable"
                }
                ,
                c.getIntegrationStatusClassForActionsContainer = function(a) {
                    return "INACTIVE" == a ? "details-wrapper-content-right-configured-int-disabled" : "details-wrapper-content-right-configured-int-enabled"
                }
                ,
                c.toggleIntegrationStatus = function(a) {
                    for (var b = "INACTIVE", d = 0; d < c.configuredIntegrations.length; d++)
                        if (c.configuredIntegrations[d].webhook_id == a.webhook_id) {
                            b = c.configuredIntegrations[d].status;
                            break
                        }
                    var e = "INACTIVE" == b ? "enable" : "disable";
                    if ("enable" == e)
                        if (a.integration_type && "webhook" != a.integration_type && "zapier" != a.integration_type && "ifttt" != a.integration_type) {
                            var f = h.getIntegrationCompletionStatus(a.webhook_id, a.integration_type);
                            f.then(function(b) {
                                return b ? void E(a.webhook_id, e, i.getUserId(), a.integration_type) : void s.alertModal("Integration alert!!!", "Could not enable integration because it is incomplete.", "OK", function() {}, function() {}, !1)
                            })
                        } else
                            E(a.webhook_id, e, i.getUserId(), a.integration_type);
                    else
                        E(a.webhook_id, e, i.getUserId(), a.integration_type)
                }
                ,
                c.deleteIntegration = function(a, b, d) {
                    if (c.isFilteredView)
                        for (var e = 0; e < c.filteredConfiguredIntegrations.length; e++)
                            c.filteredConfiguredIntegrations[e].webhook_id == a && c.filteredConfiguredIntegrations.splice(e, 1);
                    else
                        for (var e = 0; e < c.configuredIntegrations.length; e++)
                            c.configuredIntegrations[e].webhook_id == a && c.configuredIntegrations.splice(e, 1);
                    c.$broadcast("render");
                    var f = null 
                      , g = "Direct";
                    switch (b) {
                    case "gcal":
                        f = "Google Calendar",
                        promise = p.deleteIntegration(a);
                        break;
                    case "gmail":
                        f = "Gmail",
                        promise = u.deleteIntegration(a);
                        break;
                    case "gdrive":
                        f = "Google Drive",
                        promise = v.deleteIntegration(a);
                        break;
                    case "dropbox":
                        f = "Dropbox",
                        promise = w.deleteIntegration(a);
                        break;
                    case "box":
                        f = "Box",
                        promise = x.deleteIntegration(a);
                        break;
                    case "twitter":
                        f = "Twitter",
                        promise = t.deleteIntegration(a);
                        break;
                    case "facebook":
                        f = "Facebook",
                        promise = y.deleteIntegration(a);
                        break;
                    case "zapier":
                        f = d ? d : "Zapier",
                        g = "Zapier",
                        promise = h.deleteIntegration(a);
                        break;
                    case "webhook":
                        f = "Webhook",
                        promise = h.deleteIntegration(a);
                        break;
                    case "o365_mail":
                        f = "O365 Mail",
                        promise = A.deleteIntegration(a, "mail");
                        break;
                    case "o365_calendar":
                        f = "O365 Calendar",
                        promise = A.deleteIntegration(a, "calendar");
                        break;
                    case "o365_drive":
                        f = "O365 OneDrive",
                        promise = A.deleteIntegration(a, "drive");
                        break;
                    default:
                        promise = h.deleteIntegration(a)
                    }
                    n.showBanner_promise(promise, "Deleting integration...", "Integration deleted", "Error... try again", !1, !1, promise),
                    promise.then(function(a) {
                        c.logMixpanelEvent(z.USER_REMOVED_INTEGRATION, {
                            Source: f,
                            Via: g,
                            From: "Standard Newsfeed"
                        }),
                        c.isFilteredView = !1
                    })
                }
                ,
                c.deleteConnectedAccount = function(a, b) {
                    s.promptModal(c.disconnectIntegrationAlertTitle, c.disconnectIntegrationAlertText, function() {
                        c.initialized = !1,
                        c.$broadcast("render"),
                        promise = h.deleteConnectedAccount(a, i.getUserId(), b),
                        promise.then(function(a) {
                            N(!0)
                        })
                    }, null , c.disconnectIntegrationAlertOKText, c.disconnectIntegrationAlertCANCELText, null , !0)
                }
                ,
                c.manageIntegration = function(a, b) {
                    switch (c.showIntegrationProfileImage = !0,
                    c.form.webhook_status_text = "Manage",
                    c.addGcalIntegrationView = !1,
                    c.isUpdatingGcal = !1,
                    c.addTwitterIntegrationView = !1,
                    c.isUpdatingTwitter = !1,
                    c.addGdriveIntegrationView = !1,
                    c.isUpdatingGdrive = !1,
                    c.addDropboxIntegrationView = !1,
                    c.isUpdatingDropbox = !1,
                    c.addBoxIntegrationView = !1,
                    c.isUpdatingBox = !1,
                    c.addIntegrationView = !1,
                    c.isUpdatingWebhook = !1,
                    c.initialized = !1,
                    c.$broadcast("render"),
                    a) {
                    case "zapier":
                        F();
                        var d = b.zap_id;
                        return k.open("https://zapier.com/app/editor/" + d),
                        !1;
                    case "ifttt":
                        F();
                        var e = b.recipe_id;
                        return k.open("https://ifttt.com/myrecipes/personal/" + e),
                        !1;
                    case "webhook":
                        var g = b.webhook_id;
                        promise = h.getIntegrationDetails(g),
                        promise.then(function(a) {
                            c.errMessage = "",
                            c.form.display_name = a.display_name,
                            c.form.webhook_id = g,
                            c.form.webhook_url = a.webhook_url,
                            c.shareWith = [];
                            for (var d = 0; d < a.recipients.length; d++) {
                                var e = null ;
                                "group" == a.recipients[d].recipient_type ? e = f.getGroupListItem(a.recipients[d].recipient_id) : "user" == a.recipients[d].recipient_type && (e = f.getUserListItem(a.recipients[d].recipient_id)),
                                c.shareWith.push(e)
                            }
                            c.updatingIntegrationUsers = [],
                            c.updatingIntegrationUser = O(b.webhook_id, "webhook"),
                            c.addIntegrationView = !0,
                            c.isUpdatingWebhook = !0,
                            F()
                        });
                        break;
                    case "gcal":
                        var g = b.webhook_id;
                        promise = p.getIntegrationDetails(g),
                        promise.then(function(a) {
                            c.errMessage = "",
                            c.form.display_name = a.display_name,
                            c.form.webhook_id = g,
                            c.shareWith = [];
                            for (var d = 0; d < a.recipients.length; d++) {
                                var e = null ;
                                "group" == a.recipients[d].recipient_type ? e = f.getGroupListItem(a.recipients[d].recipient_id) : "user" == a.recipients[d].recipient_type && (e = f.getUserListItem(a.recipients[d].recipient_id)),
                                c.shareWith.push(e)
                            }
                            c.updatingIntegrationUser = O(b.webhook_id, "gcal"),
                            c.addGcalIntegrationView = !0,
                            c.isUpdatingGcal = !0,
                            c.form.gcal_time_before = a.notification_time;
                            for (var d = 0; d < c.calendarList.length; d++)
                                c.calendarList[d].id == a.calendar_id && (c.form.calendar = c.calendarList[d]);
                            F()
                        });
                        break;
                    case "twitter":
                        var g = b.webhook_id;
                        promise = t.getIntegrationDetails(g),
                        promise.then(function(a) {
                            c.errMessage = "",
                            c.form.display_name = a.display_name,
                            c.twitterIntegration.searchTerm = a.search_term,
                            c.twitterIntegration.hashtags = a.hash_tags,
                            c.twitterIntegration.handles = a.handles,
                            c.twitterIntegration.enableHandles = parseInt(a.enable_handles),
                            c.twitterIntegration.enableSearch = parseInt(a.enable_search),
                            c.twitterIntegration.enableHashtags = parseInt(a.enable_hashtags),
                            c.twitterIntegration.enableList = parseInt(a.enable_list),
                            c.twitterIntegration.enableHandlesTo = parseInt(a.to_user),
                            c.twitterIntegration.enableHandlesFrom = parseInt(a.from_user),
                            c.twitterIntegration.enableHandlesReply = parseInt(a.reply),
                            c.twitterIntegration.enableHandlesRetweet = parseInt(a.retweet),
                            c.form.webhook_id = g,
                            c.form.fetch_my_tweets = a.follow_user_id ? !0 : !1,
                            c.shareWith = [];
                            for (var d = 0; d < a.recipients.length; d++) {
                                var e = null ;
                                "group" == a.recipients[d].recipient_type ? e = f.getGroupListItem(a.recipients[d].recipient_id) : "user" == a.recipients[d].recipient_type && (e = f.getUserListItem(a.recipients[d].recipient_id)),
                                c.shareWith.push(e)
                            }
                            for (var d = 0; d < c.twitterIntegration.twitterLists.length; d++)
                                if (c.twitterIntegration.twitterLists[d].id == a.twitter_list) {
                                    c.twitterIntegration.list = c.twitterIntegration.twitterLists[d];
                                    break
                                }
                            c.updatingIntegrationUser = O(b.webhook_id, "twitter"),
                            c.addTwitterIntegrationView = !0,
                            c.isUpdatingTwitter = !0,
                            F()
                        });
                        break;
                    case "gmail":
                        var g = b.webhook_id;
                        promise = u.getIntegrationDetails(g),
                        promise.then(function(a) {
                            c.errMessage = "",
                            c.form.display_name = a.display_name,
                            c.form.webhook_id = g,
                            c.shareWith = [];
                            for (var d = 0; d < a.recipients.length; d++) {
                                var e = null ;
                                "group" == a.recipients[d].recipient_type ? e = f.getGroupListItem(a.recipients[d].recipient_id) : "user" == a.recipients[d].recipient_type && (e = f.getUserListItem(a.recipients[d].recipient_id)),
                                c.shareWith.push(e)
                            }
                            c.manageGmailLabelID = a.label_id;
                            for (var d = 0; d < c.gmailLabelList.length; d++)
                                c.gmailLabelList[d].id == c.manageGmailLabelID && (c.form.gmailLabel = c.gmailLabelList[d]);
                            c.updatingIntegrationUser = O(b.webhook_id, "gmail"),
                            c.addGmailIntegrationView = !0,
                            c.isUpdatingGmail = !0,
                            F()
                        });
                        break;
                    case "gdrive":
                        var g = b.webhook_id;
                        promise = v.getIntegrationDetails(g),
                        promise.then(function(a) {
                            c.errMessage = "",
                            c.form.display_name = a.display_name,
                            c.gdriveFolderID = a.folder_id,
                            c.gdriveFolder = a.folder_name,
                            c.form.webhook_id = g,
                            c.shareWith = [];
                            for (var d = 0; d < a.recipients.length; d++) {
                                var e = null ;
                                "group" == a.recipients[d].recipient_type ? e = f.getGroupListItem(a.recipients[d].recipient_id) : "user" == a.recipients[d].recipient_type && (e = f.getUserListItem(a.recipients[d].recipient_id)),
                                c.shareWith.push(e)
                            }
                            c.updatingIntegrationUser = O(b.webhook_id, "gdrive"),
                            c.addGdriveIntegrationView = !0,
                            c.isUpdatingGdrive = !0,
                            F()
                        });
                        break;
                    case "dropbox":
                        var g = b.webhook_id;
                        promise = w.getIntegrationDetails(g),
                        promise.then(function(a) {
                            c.errMessage = "",
                            c.form.display_name = a.display_name,
                            c.dropboxDirectory = a.directory,
                            c.form.webhook_id = g,
                            c.shareWith = [];
                            for (var d = 0; d < a.recipients.length; d++) {
                                var e = null ;
                                "group" == a.recipients[d].recipient_type ? e = f.getGroupListItem(a.recipients[d].recipient_id) : "user" == a.recipients[d].recipient_type && (e = f.getUserListItem(a.recipients[d].recipient_id)),
                                c.shareWith.push(e)
                            }
                            c.updatingIntegrationUser = O(b.webhook_id, "dropbox"),
                            c.addDropboxIntegrationView = !0,
                            c.isUpdatingDropbox = !0,
                            F()
                        });
                        break;
                    case "box":
                        var g = b.webhook_id;
                        promise = x.getIntegrationDetails(g),
                        promise.then(function(a) {
                            c.errMessage = "",
                            c.form.display_name = a.display_name,
                            c.boxFolderID = a.folder_id,
                            c.boxFolder = a.folder_name,
                            c.form.webhook_id = g,
                            c.shareWith = [];
                            for (var d = 0; d < a.recipients.length; d++) {
                                var e = null ;
                                "group" == a.recipients[d].recipient_type ? e = f.getGroupListItem(a.recipients[d].recipient_id) : "user" == a.recipients[d].recipient_type && (e = f.getUserListItem(a.recipients[d].recipient_id)),
                                c.shareWith.push(e)
                            }
                            c.updatingIntegrationUser = O(b.webhook_id, "box"),
                            c.addBoxIntegrationView = !0,
                            c.isUpdatingBox = !0,
                            F()
                        });
                        break;
                    case "facebook":
                        var g = b.webhook_id;
                        c.initialized = !1,
                        c.$broadcast("render"),
                        promise = y.getIntegrationDetails(g),
                        promise.then(function(a) {
                            c.errMessage = "",
                            c.form.display_name = a.display_name,
                            c.form.webhook_id = g,
                            c.shareWith = [];
                            for (var d = 0; d < a.recipients.length; d++) {
                                var e = null ;
                                "group" == a.recipients[d].recipient_type ? e = f.getGroupListItem(a.recipients[d].recipient_id) : "user" == a.recipients[d].recipient_type && (e = f.getUserListItem(a.recipients[d].recipient_id)),
                                c.shareWith.push(e)
                            }
                            c.updatingIntegrationUser = O(b.webhook_id, "facebook"),
                            c.addFacebookIntegrationView = !0,
                            c.isUpdatingFacebook = !0,
                            c.selectedDefaultIcon = "custom",
                            c.saveButtonText = "Update";
                            for (var d = 0; d < c.fbPageList.length; d++)
                                c.fbPageList[d].id == a.page_id && (c.form.fbPage = c.fbPageList[d]);
                            F()
                        });
                        break;
                    case "o365_mail":
                        var g = b.webhook_id;
                        c.initialized = !1,
                        c.$broadcast("render"),
                        promise = A.getIntegrationDetails(g, "mail"),
                        promise.then(function(a) {
                            c.errMessage = "",
                            c.form.display_name = a.display_name,
                            c.form.webhook_id = g,
                            c.shareWith = [];
                            for (var d = 0; d < a.recipients.length; d++) {
                                var e = null ;
                                "group" == a.recipients[d].recipient_type ? e = f.getGroupListItem(a.recipients[d].recipient_id) : "user" == a.recipients[d].recipient_type && (e = f.getUserListItem(a.recipients[d].recipient_id)),
                                c.shareWith.push(e)
                            }
                            c.updatingIntegrationUser = O(b.webhook_id, "o365_mail"),
                            c.addO365MailIntegrationView = !0,
                            c.isUpdatingO365 = !0,
                            c.selectedDefaultIcon = "custom",
                            c.saveButtonText = "Update";
                            for (var d = 0; d < c.o365MailFolderList.length; d++)
                                c.o365MailFolderList[d].folder_id == a.folder_id && (c.form.o365MailFolder = c.o365MailFolderList[d]);
                            F()
                        });
                        break;
                    case "o365_calendar":
                        var g = b.webhook_id;
                        c.initialized = !1,
                        c.$broadcast("render"),
                        promise = A.getIntegrationDetails(g, "calendar"),
                        promise.then(function(a) {
                            c.errMessage = "",
                            c.form.display_name = a.display_name,
                            c.form.webhook_id = g,
                            c.shareWith = [];
                            for (var d = 0; d < a.recipients.length; d++) {
                                var e = null ;
                                "group" == a.recipients[d].recipient_type ? e = f.getGroupListItem(a.recipients[d].recipient_id) : "user" == a.recipients[d].recipient_type && (e = f.getUserListItem(a.recipients[d].recipient_id)),
                                c.shareWith.push(e)
                            }
                            c.updatingIntegrationUser = O(b.webhook_id, "o365_mail"),
                            c.addO365CalendarIntegrationView = !0,
                            c.isUpdatingO365 = !0,
                            c.selectedDefaultIcon = "custom",
                            c.saveButtonText = "Update",
                            c.form.ocal_time_before = a.notification_time;
                            for (var d = 0; d < c.o365CalendarsList.length; d++)
                                c.o365CalendarsList[d].id == a.calendar_id && (c.form.o365Calendar = c.o365CalendarsList[d]);
                            F()
                        });
                        break;
                    case "o365_drive":
                        var g = b.webhook_id;
                        c.initialized = !1,
                        c.$broadcast("render"),
                        promise = A.getIntegrationDetails(g, "drive"),
                        promise.then(function(a) {
                            c.errMessage = "",
                            c.form.display_name = a.display_name,
                            c.form.webhook_id = g,
                            c.shareWith = [];
                            for (var d = 0; d < a.recipients.length; d++) {
                                var e = null ;
                                "group" == a.recipients[d].recipient_type ? e = f.getGroupListItem(a.recipients[d].recipient_id) : "user" == a.recipients[d].recipient_type && (e = f.getUserListItem(a.recipients[d].recipient_id)),
                                c.shareWith.push(e)
                            }
                            c.updatingIntegrationUser = O(b.webhook_id, "o365_drive"),
                            c.odriveFolderID = a.folder_id,
                            c.odriveFolder = a.folder_name,
                            c.addO365DriveIntegrationView = !0,
                            c.isUpdatingO365 = !0,
                            c.selectedDefaultIcon = "custom",
                            c.saveButtonText = "Update",
                            F()
                        })
                    }
                }
                ,
                c.createDirectIntegration = function(a) {
                    var b = null ;
                    switch (a) {
                    case "Gmail":
                        b = "Gmail",
                        c.createGmailIntegration();
                        break;
                    case "Webhook":
                        b = "Webhook",
                        c.createWebhookIntegration();
                        break;
                    case "Gcal":
                        b = "Google Calendar",
                        c.createGcalIntegration();
                        break;
                    case "Twitter":
                        b = "Twitter",
                        c.createTwitterIntegration();
                        break;
                    case "Gdrive":
                        b = "Google Drive",
                        c.createGdriveIntegration();
                        break;
                    case "Dropbox":
                        b = "Dropbox",
                        c.createDropboxIntegration();
                        break;
                    case "Box":
                        b = "Box",
                        c.createBoxIntegration();
                        break;
                    case "Facebook":
                        b = "Facebook",
                        c.createFacebookIntegration();
                        break;
                    case "ifttt":
                        B.IS_NATIVE ? C.openInBrowser("https://ifttt.com/convo") : k.open("https://ifttt.com/convo");
                        break;
                    case "O365Mail":
                        b = "O365 Mail",
                        c.createO365MailIntegration();
                        break;
                    case "O365Calendar":
                        b = "O365 Calendar",
                        c.createO365CalendarIntegration();
                        break;
                    case "O365Drive":
                        b = "O365 OneDrive",
                        c.createO365DriveIntegration()
                    }
                    c.logMixpanelEvent(z.CLICK_ADD_INTEGRATION, {
                        From: "Standard Newsfeed",
                        Via: "Direct",
                        Source: b
                    })
                }
                ,
                c.createWebhookIntegration = function() {
                    c.initialized = !1;
                    var a = !0;
                    if (c.groupId && 0 != c.groupId) {
                        var b = c.groupId.split(":");
                        if (b.length > 1) {
                            a = !1;
                            var d = {};
                            c.updatingWebhookID = b[1],
                            d.webhook_id = b[0],
                            c.initialized = !1,
                            c.manageIntegration("webhook", d)
                        }
                    }
                    if (a) {
                        if (c.saveButtonText = "Save",
                        c.form.webhook_status_text = "Add a new",
                        c.selectedDefaultIcon = "direct.png",
                        c.addIntegrationView = !0,
                        c.isUpdatingWebhook = !1,
                        c.form = {},
                        c.shareWith = [],
                        c.errMessage = "",
                        c.groupId && 0 != c.groupId) {
                            var e = f.getGroupListItem(c.groupId);
                            c.shareWith.push(e)
                        }
                        c.hideDefaultIcon("custom-selected-image")
                    }
                    c.initialized = !0,
                    c.$broadcast("render")
                }
                ,
                c.createGcalIntegration = function() {
                    c.initialized = !1,
                    promise = p.getUserInfo(i.getUserId()),
                    promise.then(function(a) {
                        a && a.token_id && (c.oauth2.gcal_status = !0,
                        c.oauth2.gcal_token = a.token_id,
                        c.gcalConnectionText = "Disconnect " + a.user_identity,
                        c.getCalendarList());
                        var b = !0;
                        if (c.groupId && 0 != c.groupId) {
                            var d = c.groupId.split(":");
                            if (d.length > 1) {
                                b = !1;
                                var e = {};
                                c.updatingWebhookID = d[1],
                                e.webhook_id = d[0],
                                c.initialized = !1,
                                c.manageIntegration("gcal", e)
                            }
                        }
                        if (b) {
                            if (c.saveButtonText = "Save",
                            c.updatingWebhookID = null ,
                            c.isUpdatingGcal = !1,
                            c.form.gcal_status_text = "Add a new",
                            c.addGcalIntegrationView = !0,
                            c.selectedDefaultIcon = "gcaladd.png",
                            c.form = {},
                            c.form.display_name = "Google Calendar",
                            c.shareWith = [],
                            c.errMessage = "",
                            c.groupId && 0 != c.groupId) {
                                var g = f.getGroupListItem(c.groupId);
                                c.shareWith.push(g)
                            }
                            c.form.calendar = c.calendarList[0],
                            c.form.gcal_time_before = -1,
                            c.hideDefaultIcon("custom-selected-image-gcal"),
                            c.initialized = !0,
                            c.$broadcast("render")
                        }
                    })
                }
                ,
                c.createTwitterIntegration = function() {
                    c.initialized = !1,
                    promise = t.getUserInfo(i.getUserId()),
                    promise.then(function(a) {
                        a && a.token_id && (c.oauth2.twitter_status = !0,
                        c.oauth2.twitter_token = a.token_id,
                        c.oauth2.twitter_user_identity = a.user_identity,
                        c.twitterLoggedinText = 'Logged into Twitter as: <b><a target="_blank" href="https://twitter.com/' + a.user_identity + '">@' + a.user_identity + "</a></b>");
                        var b = !0;
                        if (c.groupId && 0 != c.groupId) {
                            var d = c.groupId.split(":");
                            if (d.length > 1) {
                                b = !1;
                                var e = {};
                                c.updatingWebhookID = d[1],
                                e.webhook_id = d[0],
                                c.initialized = !1,
                                a && a.token_id ? c.getTwitterLists(!0, e) : c.manageIntegration("twitter", e)
                            }
                        }
                        if (b) {
                            if (c.getTwitterLists(),
                            c.saveButtonText = "Save",
                            c.updatingWebhookID = null ,
                            c.isUpdatingTwitter = !1,
                            c.form.twitter_status_text = "Add a new",
                            c.addTwitterIntegrationView = !0,
                            c.selectedDefaultIcon = "twitter.png",
                            c.form = {},
                            X(),
                            c.form.display_name = "Twitter",
                            c.shareWith = [],
                            c.errMessage = "",
                            c.groupId && 0 != c.groupId) {
                                var g = f.getGroupListItem(c.groupId);
                                c.shareWith.push(g)
                            }
                            c.initialized = !0,
                            c.$broadcast("render")
                        }
                    })
                }
                ,
                c.createGmailIntegration = function() {
                    c.initialized = !1,
                    promise = u.getUserInfo(i.getUserId()),
                    promise.then(function(a) {
                        var b = !0;
                        if (c.groupId && 0 != c.groupId) {
                            var d = c.groupId.split(":");
                            if (d.length > 1) {
                                b = !1;
                                var e = {};
                                c.updatingWebhookID = d[1],
                                e.webhook_id = d[0],
                                c.initialized = !1,
                                c.manageIntegration("gmail", e)
                            }
                        }
                        if (a && a.token_id && (c.oauth2.gmail_status = !0,
                        c.oauth2.gmail_token = a.token_id,
                        c.gmailConnectionText = "Disconnect " + a.user_identity,
                        c.getGmailLabelList(!1, b)),
                        b) {
                            if (c.saveButtonText = "Save",
                            c.updatingWebhookID = null ,
                            c.isUpdatingGmail = !1,
                            c.form.gmail_status_text = "Add a new",
                            c.addGmailIntegrationView = !0,
                            c.selectedDefaultIcon = "gmail.png",
                            c.form = {},
                            c.form.display_name = "Gmail",
                            c.shareWith = [],
                            c.errMessage = "",
                            c.groupId && 0 != c.groupId) {
                                var g = f.getGroupListItem(c.groupId);
                                c.shareWith.push(g)
                            }
                            c.initialized = !0,
                            c.$broadcast("render")
                        }
                    })
                }
                ,
                c.createGdriveIntegration = function() {
                    c.initialized = !1,
                    promise = v.getUserInfo(i.getUserId()),
                    promise.then(function(a) {
                        a && a.token_id && (c.oauth2.gdrive_status = !0,
                        c.oauth2.gdrive_token = a.token_id,
                        c.gdriveConnectionText = "Disconnect " + a.user_identity);
                        var b = !0;
                        if (c.groupId && 0 != c.groupId) {
                            var d = c.groupId.split(":");
                            if (d.length > 1) {
                                b = !1;
                                var e = {};
                                c.updatingWebhookID = d[1],
                                e.webhook_id = d[0],
                                c.initialized = !1,
                                c.manageIntegration("gdrive", e)
                            }
                        }
                        if (b) {
                            if (c.saveButtonText = "Save",
                            c.updatingWebhookID = null ,
                            c.isUpdatingGdrive = !1,
                            c.form.gdrive_status_text = "Add a new",
                            c.addGdriveIntegrationView = !0,
                            c.selectedDefaultIcon = "gdrive.png",
                            c.form = {},
                            c.form.display_name = "Google Drive",
                            c.shareWith = [],
                            c.errMessage = "",
                            c.groupId && 0 != c.groupId) {
                                var g = f.getGroupListItem(c.groupId);
                                c.shareWith.push(g)
                            }
                            c.initialized = !0,
                            c.$broadcast("render")
                        }
                    })
                }
                ,
                c.createDropboxIntegration = function() {
                    c.initialized = !1,
                    promise = w.getUserInfo(i.getUserId()),
                    promise.then(function(a) {
                        a && a.token_id && (c.oauth2.dropbox_status = !0,
                        c.oauth2.dropbox_token = a.token_id,
                        c.dropboxConnectionText = "Disconnect " + a.user_identity);
                        var b = !0;
                        if (c.groupId && 0 != c.groupId) {
                            var d = c.groupId.split(":");
                            if (d.length > 1) {
                                b = !1;
                                var e = {};
                                c.updatingWebhookID = d[1],
                                e.webhook_id = d[0],
                                c.initialized = !1,
                                c.manageIntegration("dropbox", e)
                            }
                        }
                        if (b) {
                            if (c.saveButtonText = "Save",
                            c.updatingWebhookID = null ,
                            c.isUpdatingDropbox = !1,
                            c.form.dropbox_status_text = "Add a new",
                            c.addDropboxIntegrationView = !0,
                            c.selectedDefaultIcon = "dropbox.png",
                            c.form = {},
                            c.form.display_name = "Dropbox",
                            c.shareWith = [],
                            c.errMessage = "",
                            c.groupId && 0 != c.groupId) {
                                var g = f.getGroupListItem(c.groupId);
                                c.shareWith.push(g)
                            }
                            c.initialized = !0,
                            c.$broadcast("render")
                        }
                    })
                }
                ,
                c.createBoxIntegration = function() {
                    c.initialized = !1,
                    promise = x.getUserInfo(i.getUserId()),
                    promise.then(function(a) {
                        a && a.token_id && (c.oauth2.box_status = !0,
                        c.oauth2.box_token = a.token_id,
                        c.boxConnectionText = "Disconnect " + a.user_identity);
                        var b = !0;
                        if (c.groupId && 0 != c.groupId) {
                            var d = c.groupId.split(":");
                            if (d.length > 1) {
                                b = !1;
                                var e = {};
                                c.updatingWebhookID = d[1],
                                e.webhook_id = d[0],
                                c.initialized = !1,
                                c.manageIntegration("box", e)
                            }
                        }
                        if (b) {
                            if (c.saveButtonText = "Save",
                            c.updatingWebhookID = null ,
                            c.isUpdatingBox = !1,
                            c.form.box_status_text = "Add a new",
                            c.addBoxIntegrationView = !0,
                            c.selectedDefaultIcon = "box.png",
                            c.form = {},
                            c.form.display_name = "Box",
                            c.shareWith = [],
                            c.errMessage = "",
                            c.groupId && 0 != c.groupId) {
                                var g = f.getGroupListItem(c.groupId);
                                c.shareWith.push(g)
                            }
                            c.initialized = !0,
                            c.$broadcast("render")
                        }
                    })
                }
                ,
                c.createFacebookIntegration = function() {
                    c.initialized = !1,
                    promise = y.getUserInfo(i.getUserId()),
                    promise.then(function(a) {
                        a && a.token_id && (c.oauth2.facebook_status = !0,
                        c.oauth2.facebook_token = a.token_id,
                        c.facebookConnectionText = "Disconnect from " + a.user_identity);
                        var b = !0;
                        if (c.groupId && 0 != c.groupId) {
                            var d = c.groupId.split(":");
                            if (d.length > 1) {
                                b = !1;
                                var e = {};
                                c.updatingWebhookID = d[1],
                                e.webhook_id = d[0],
                                c.initialized = !1,
                                a && a.token_id ? c.getFBPageList(!0, e) : c.manageIntegration("facebook", e)
                            }
                        }
                        if (b) {
                            if (c.getFBPageList(),
                            c.saveButtonText = "Save",
                            c.updatingWebhookID = null ,
                            c.isUpdatingFacebook = !1,
                            c.form.facebook_status_text = "Add a new",
                            c.addFacebookIntegrationView = !0,
                            c.selectedDefaultIcon = "facebook.png",
                            c.form = {},
                            c.form.display_name = "Facebook",
                            c.shareWith = [],
                            c.errMessage = "",
                            c.groupId && 0 != c.groupId) {
                                var g = f.getGroupListItem(c.groupId);
                                c.shareWith.push(g)
                            }
                            c.form.fbPage = c.fbPageList[0],
                            c.hideDefaultIcon("custom-selected-image-facebook"),
                            c.initialized = !0,
                            c.$broadcast("render")
                        }
                    })
                }
                ,
                c.createO365MailIntegration = function() {
                    c.initialized = !1,
                    promise = A.getUserInfo(i.getUserId()),
                    promise.then(function(a) {
                        a && a.token_id && (c.oauth2.o365_status = !0,
                        c.oauth2.o365_token = a.token_id,
                        c.O365ConnectionText = "Disconnect from " + a.user_identity);
                        var b = !0;
                        if (c.groupId && 0 != c.groupId) {
                            var d = c.groupId.split(":");
                            if (d.length > 1) {
                                b = !1;
                                var e = {};
                                c.updatingWebhookID = d[1],
                                e.webhook_id = d[0],
                                a && a.token_id ? c.getO365MailFolderList(!0, e) : c.manageIntegration("o365_mail", e)
                            }
                        }
                        if (b) {
                            if (c.saveButtonText = "Save",
                            c.updatingWebhookID = null ,
                            c.isUpdatingO365 = !1,
                            c.form.o365mail_status_text = "Add a new",
                            c.addO365MailIntegrationView = !0,
                            c.selectedDefaultIcon = "o365_mail.png",
                            c.form = {},
                            c.form.display_name = "Office 365 Mail",
                            c.shareWith = [],
                            c.errMessage = "",
                            c.groupId && 0 != c.groupId) {
                                var g = f.getGroupListItem(c.groupId);
                                c.shareWith.push(g)
                            }
                            c.hideDefaultIcon("custom-selected-image-facebook"),
                            c.getO365MailFolderList()
                        }
                    })
                }
                ,
                c.createO365CalendarIntegration = function() {
                    c.initialized = !1,
                    promise = A.getUserInfo(i.getUserId()),
                    promise.then(function(a) {
                        a && a.token_id && (c.oauth2.o365_status = !0,
                        c.oauth2.o365_token = a.token_id,
                        c.O365ConnectionText = "Disconnect from " + a.user_identity);
                        var b = !0;
                        if (c.groupId && 0 != c.groupId) {
                            var d = c.groupId.split(":");
                            if (d.length > 1) {
                                b = !1;
                                var e = {};
                                c.updatingWebhookID = d[1],
                                e.webhook_id = d[0],
                                a && a.token_id ? c.getO365CalendarsList(!0, e) : c.manageIntegration("o365_calendar", e)
                            }
                        }
                        if (b) {
                            if (c.saveButtonText = "Save",
                            c.updatingWebhookID = null ,
                            c.isUpdatingO365 = !1,
                            c.form.o365calendar_status_text = "Add a new",
                            c.addO365CalendarIntegrationView = !0,
                            c.selectedDefaultIcon = "o365_calendar.png",
                            c.form = {},
                            c.form.display_name = "Office 365 Calendar",
                            c.shareWith = [],
                            c.errMessage = "",
                            c.groupId && 0 != c.groupId) {
                                var g = f.getGroupListItem(c.groupId);
                                c.shareWith.push(g)
                            }
                            c.form.ocal_time_before = -1,
                            c.hideDefaultIcon("custom-selected-image-facebook"),
                            c.getO365CalendarsList()
                        }
                    })
                }
                ,
                c.createO365DriveIntegration = function() {
                    c.initialized = !1,
                    promise = A.getUserInfo(i.getUserId()),
                    promise.then(function(a) {
                        a && a.token_id && (c.oauth2.o365_status = !0,
                        c.oauth2.o365_token = a.token_id,
                        c.O365ConnectionText = "Disconnect from " + a.user_identity);
                        var b = !0;
                        if (c.groupId && 0 != c.groupId) {
                            var d = c.groupId.split(":");
                            if (d.length > 1) {
                                b = !1;
                                var e = {};
                                c.updatingWebhookID = d[1],
                                e.webhook_id = d[0],
                                c.manageIntegration("o365_drive", e)
                            }
                        }
                        if (b) {
                            if (c.saveButtonText = "Save",
                            c.updatingWebhookID = null ,
                            c.isUpdatingO365 = !1,
                            c.form.o365drive_status_text = "Add a new",
                            c.addO365DriveIntegrationView = !0,
                            c.selectedDefaultIcon = "onedrive.png",
                            c.form = {},
                            c.form.display_name = "Office 365 OneDrive",
                            c.shareWith = [],
                            c.errMessage = "",
                            c.groupId && 0 != c.groupId) {
                                var g = f.getGroupListItem(c.groupId);
                                c.shareWith.push(g)
                            }
                            c.form.ocal_time_before = -1,
                            c.hideDefaultIcon("custom-selected-image-o365drive"),
                            c.initialized = !0,
                            c.$broadcast("render")
                        }
                    })
                }
                ,
                c.cancelAddIntegration = function() {
                    if (c.isUpdatingWebhook || c.isUpdatingGcal || c.isUpdatingGmail || c.isUpdatingDropbox || c.isUpdatingBox || c.isUpdatingGdrive || c.isUpdatingFacebook || c.isUpdatingO365 || c.isUpdatingTwitter)
                        if (c.isUpdatingWebhook = !1,
                        c.isUpdatingGcal = !1,
                        c.isUpdatingGmail = !1,
                        c.isUpdatingDropbox = !1,
                        c.isUpdatingBox = !1,
                        c.isUpdatingGdrive = !1,
                        c.isUpdatingTwitter = !1,
                        c.isUpdatingFacebook = !1,
                        c.isUpdatingO365 = !1,
                        c.updatingWebhookID && "w" != c.updatingWebhookID) {
                            var a = o.newResourceLink("9", [{
                                uid: c.updatingWebhookID,
                                type: "22"
                            }, {
                                uid: "2",
                                type: "GroupIntegrations"
                            }], null , "Group Integrations")
                              , b = o.linkToUrl(a, !0);
                            l.url(b.slice(1))
                        } else {
                            var a = o.newResourceLink("100", [{
                                uid: 0,
                                type: "100"
                            }, {
                                uid: "2",
                                type: "ConfiguredIntegrations"
                            }], null , "Configured Integrations")
                              , b = o.linkToUrl(a, !0);
                            l.url(b.slice(1))
                        }
                    else {
                        var a = o.newResourceLink("100", [{
                            uid: 0,
                            type: "100"
                        }, {
                            uid: "2",
                            type: "AllIntegrations"
                        }], null , "All Integrations")
                          , b = o.linkToUrl(a, !0);
                        l.url(b.slice(1))
                    }
                }
                ,
                c.toggleDefaultIconSelection = function(a) {
                    c.selectedDefaultIcon = a,
                    c.$broadcast("render")
                }
                ,
                c.toggleInstructionsView = function() {
                    c.showWebhookInstructions ? (c.showWebhookInstructions = !1,
                    c.showWebhookInstrucitonsLinText = "show details") : (c.showWebhookInstructions = !0,
                    c.showWebhookInstrucitonsLinText = "hide details"),
                    c.$broadcast("render")
                }
                ,
                c.getShareWithDropdownItems = function(a) {
                    var b = e.defer()
                      , c = f.getPublishableGroupsOrPreviousHistory(a, Z)
                      , d = f.getUserListItem(i.getUserId());
                    c.push(d),
                    usersGroupsListFinal = [];
                    for (var g = 0; g < c.length; g++)
                        if ("GROUP" == c[g].type) {
                            var h = q.getGroup(c[g].id);
                            0 != h.get("integrationsEnabled") && usersGroupsListFinal.push(c[g])
                        }
                    return usersGroupsListFinal.push(d),
                    b.resolve(usersGroupsListFinal),
                    b.promise
                }
                ,
                c.onItemAddedInToField = function(a) {
                    C.findInObjectArray(c.shareWith, "id", a.id) || c.shareWith.push(a),
                    c.validateWebhookForm()
                }
                ,
                c.createWebhook = function() {
                    var a = "";
                    if (c.form.display_name || (a = "Display Name field is required. <br/>"),
                    0 == c.shareWith.length && (c.invalidateWebhookForm(),
                    a += "Please select atleast one recipient."),
                    "" != a)
                        return !1;
                    c.initialized = !1,
                    c.$broadcast("render");
                    for (var b = [], d = "", e = 0; e < c.shareWith.length; e++) {
                        var f = c.shareWith[e];
                        b.push({
                            id: f.id,
                            type: f.type.toLowerCase()
                        })
                    }
                    if (c.selectedDefaultIcon && "custom" != c.selectedDefaultIcon ? d = "direct.png" == c.selectedDefaultIcon ? {
                        file_url: "https://s3.amazonaws.com/test-scrybe-files/temp/integrations/default_icons/direct.png",
                        file_type: "url"
                    } : {
                        file_name: c.selectedDefaultIcon,
                        file_type: "default"
                    } : null  != c.file && c.file.requestID && (d = {
                        request_id: c.file.requestID,
                        file_size: c.file.size,
                        file_name: c.file.name
                    }),
                    c.isUpdatingWebhook) {
                        var j = {
                            webhookID: c.form.webhook_id,
                            displayName: c.form.display_name,
                            actionType: "create_note",
                            recipients: JSON.stringify(b),
                            profile_image_info: d ? JSON.stringify(d) : null 
                        };
                        promise = h.updateWebhook(j.webhookID, j.displayName, j.actionType, j.recipients, j.profile_image_info),
                        promise.then(function(a) {
                            if (c.file = null ,
                            c.updatingWebhookID && "w" != c.updatingWebhookID) {
                                var b = o.newResourceLink("9", [{
                                    uid: c.updatingWebhookID,
                                    type: "22"
                                }, {
                                    uid: "2",
                                    type: "GroupIntegrations"
                                }], null , "Group Integrations")
                                  , d = o.linkToUrl(b, !0);
                                c.updatingWebhookID = null ,
                                l.url(d.slice(1))
                            } else {
                                c.updatingWebhookID = null ;
                                var b = o.newResourceLink("100", [{
                                    uid: 0,
                                    type: "100"
                                }, {
                                    uid: "2",
                                    type: "ConfiguredIntegrations"
                                }], null , "Configured Integrations")
                                  , d = o.linkToUrl(b, !0);
                                l.url(d.slice(1))
                            }
                        })
                    } else {
                        var j = {
                            accountID: g.getAccountId(),
                            creatorID: i.getUserId(),
                            displayName: c.form.display_name,
                            actionType: "create_note",
                            accessLevel: "webhook",
                            recipients: JSON.stringify(b),
                            profile_image_info: d ? JSON.stringify(d) : null 
                        };
                        promise = h.createWebhook(j.accountID, j.creatorID, j.displayName, j.actionType, j.accessLevel, j.recipients, j.profile_image_info),
                        promise.then(function(a) {
                            c.file = null ,
                            c.initialized = !0,
                            c.$broadcast("render"),
                            c.showIntegrationPreview(a)
                        })
                    }
                    return !0
                }
                ,
                c.showIntegrationPreview = function(a) {
                    c.form.webhook_url = a.webhook_url,
                    c.integrationPreview = !0,
                    c.$broadcast("render")
                }
                ,
                c.cancelIntegrationPreview = function() {
                    c.addIntegrationView = !1,
                    c.integrationPreview = !1,
                    c.isFilteredView = !1,
                    c.initialized = !1,
                    c.$broadcast("render"),
                    M()
                }
                ,
                c.copy = function() {
                    console.log("inside copy function.")
                }
                ,
                c.finishWebhookCreation = function() {
                    if (c.logMixpanelEvent(z.ADDED_INTEGRATION, {
                        From: "Groups Newsfeed",
                        Via: "Direct",
                        Source: "Webhook"
                    }),
                    c.groupId && 0 != c.groupId) {
                        var a = o.newResourceLink("9", [{
                            uid: c.groupId,
                            type: "22"
                        }, {
                            uid: "2",
                            type: "GroupIntegrations"
                        }], null , "Group Integrations")
                          , b = o.linkToUrl(a, !0);
                        l.url(b.slice(1))
                    } else {
                        var a = o.newResourceLink("100", [{
                            uid: 0,
                            type: "100"
                        }, {
                            uid: "2",
                            type: "ConfiguredIntegrations"
                        }], null , "Configured Integrations")
                          , b = o.linkToUrl(a, !0);
                        l.url(b.slice(1))
                    }
                }
                ,
                c.moveToPageStart = function() {
                    l.hash("integrations-page-start"),
                    m()
                }
                ,
                c.moveToPageSection = function(a) {
                    k.scrollTo(0, b.element(a).offsetTop)
                }
                ,
                c.getCalendarList = function() {
                    promise = p.getCalendarList(c.oauth2.gcal_token),
                    promise.then(function(a) {
                        c.calendarList = [];
                        for (var b = 0; b < a.length; b++)
                            c.calendarList.push(a[b]);
                        c.form.calendar = c.calendarList[0],
                        c.$broadcast("render")
                    })
                }
                ,
                c.saveGcalIntegration = function() {
                    var a = "";
                    if (c.form.display_name || (a = "Display Name field is required. <br/>"),
                    0 == c.shareWith.length && (c.invalidateWebhookForm(),
                    a += "Please select atleast one recipient."),
                    c.form.calendar || (a += "Please select a calendar."),
                    "" != a)
                        return !1;
                    c.initialized = !1,
                    c.$broadcast("render");
                    for (var b = [], d = "", e = 0; e < c.shareWith.length; e++) {
                        var f = c.shareWith[e];
                        b.push({
                            id: f.id,
                            type: f.type.toLowerCase()
                        })
                    }
                    if (c.selectedDefaultIcon && "custom" != c.selectedDefaultIcon ? d = "direct.png" == c.selectedDefaultIcon ? {
                        file_url: "https://s3.amazonaws.com/test-scrybe-files/temp/integrations/default_icons/direct.png",
                        file_type: "url"
                    } : {
                        file_name: c.selectedDefaultIcon,
                        file_type: "default"
                    } : null  != c.file && c.file.requestID && (d = {
                        request_id: c.file.requestID,
                        file_size: c.file.size,
                        file_name: c.file.name
                    }),
                    c.isUpdatingGcal) {
                        var h = {
                            webhookID: c.form.webhook_id,
                            displayName: c.form.display_name,
                            actionType: "create_note",
                            recipients: JSON.stringify(b),
                            profile_image_info: d ? JSON.stringify(d) : null ,
                            calendarID: c.form.calendar.id,
                            notificationTime: c.form.gcal_time_before,
                            tokenID: c.oauth2.gcal_token
                        };
                        promise = p.updateIntegration(h.webhookID, h.displayName, h.actionType, h.recipients, h.profile_image_info, h.calendarID, h.notificationTime, h.tokenID),
                        promise.then(function(a) {
                            if (c.file = null ,
                            500 == a)
                                c.initialized = !0,
                                c.$broadcast("render"),
                                n.showBanner("An error occured: cannot create watch on this calendar.", !1, !1, promise);
                            else if (n.showBanner("Your settings have been changed", !1, !1, promise),
                            c.updatingWebhookID && "w" != c.updatingWebhookID) {
                                var b = o.newResourceLink("9", [{
                                    uid: c.updatingWebhookID,
                                    type: "22"
                                }, {
                                    uid: "2",
                                    type: "GroupIntegrations"
                                }], null , "Group Integrations")
                                  , d = o.linkToUrl(b, !0);
                                c.updatingWebhookID = null ,
                                l.url(d.slice(1))
                            } else {
                                var b = o.newResourceLink("100", [{
                                    uid: 0,
                                    type: "100"
                                }, {
                                    uid: "2",
                                    type: "ConfiguredIntegrations"
                                }], null , "Configured Integrations")
                                  , d = o.linkToUrl(b, !0);
                                l.url(d.slice(1))
                            }
                        })
                    } else {
                        var h = {
                            accountID: g.getAccountId(),
                            creatorID: i.getUserId(),
                            displayName: c.form.display_name,
                            actionType: "create_note",
                            accessLevel: "gcal",
                            recipients: JSON.stringify(b),
                            profile_image_info: d ? JSON.stringify(d) : null ,
                            calendarID: c.form.calendar.id,
                            notificationTime: c.form.gcal_time_before,
                            tokenID: c.oauth2.gcal_token
                        };
                        promise = p.createGcalIntegration(h.accountID, h.creatorID, h.displayName, h.actionType, h.accessLevel, h.recipients, h.profile_image_info, h.calendarID, h.notificationTime, h.tokenID),
                        promise.then(function(a) {
                            if (c.file = null ,
                            500 == a)
                                c.initialized = !0,
                                c.$broadcast("render"),
                                n.showBanner("An error occured: cannot create watch on this calendar.", !1, !1, promise);
                            else if (c.logMixpanelEvent(z.ADDED_INTEGRATION, {
                                From: "Groups Newsfeed",
                                Via: "Direct",
                                Source: "Google Calendar"
                            }),
                            c.groupId && 0 != c.groupId) {
                                var b = o.newResourceLink("9", [{
                                    uid: c.groupId,
                                    type: "22"
                                }, {
                                    uid: "2",
                                    type: "GroupIntegrations"
                                }], null , "Group Integrations")
                                  , d = o.linkToUrl(b, !0);
                                l.url(d.slice(1))
                            } else {
                                var b = o.newResourceLink("100", [{
                                    uid: 0,
                                    type: "100"
                                }, {
                                    uid: "2",
                                    type: "ConfiguredIntegrations"
                                }], null , "Configured Integrations")
                                  , d = o.linkToUrl(b, !0);
                                l.url(d.slice(1))
                            }
                        })
                    }
                    return !0
                }
                ,
                c.saveTwitterIntegration = function() {
                    var a = ""
                      , b = (c.stopWords,
                    U())
                      , d = V();
                    (b === !1 || d === !1) && (a = "Search terms are invalid. <br/>"),
                    c.form.display_name || (a = "Display Name field is required. <br/>"),
                    0 == c.shareWith.length && (c.invalidateWebhookForm(),
                    a += "Please select atleast one recipient.");
                    var e = T()
                      , f = W(e);
                    if (f === !1 && (a = "You must select atleast one trigger for this integration."),
                    "" != a)
                        return !1;
                    c.initialized = !1,
                    c.$broadcast("render");
                    for (var h = [], j = "", k = 0; k < c.shareWith.length; k++) {
                        var m = c.shareWith[k];
                        h.push({
                            id: m.id,
                            type: m.type.toLowerCase()
                        })
                    }
                    if (c.selectedDefaultIcon && "custom" != c.selectedDefaultIcon ? j = "direct.png" == c.selectedDefaultIcon ? {
                        file_url: "https://s3.amazonaws.com/test-scrybe-files/temp/integrations/default_icons/direct.png",
                        file_type: "url"
                    } : {
                        file_name: c.selectedDefaultIcon,
                        file_type: "default"
                    } : null  != c.file && c.file.requestID && (j = {
                        request_id: c.file.requestID,
                        file_size: c.file.size,
                        file_name: c.file.name
                    }),
                    c.isUpdatingTwitter) {
                        var p = {
                            webhookID: c.form.webhook_id,
                            displayName: c.form.display_name,
                            actionType: "create_note",
                            recipients: JSON.stringify(h),
                            profile_image_info: j ? JSON.stringify(j) : null ,
                            searchTerm: c.form.search_term,
                            triggerData: e,
                            tokenID: c.oauth2.twitter_token
                        };
                        promise = t.updateIntegration(p.webhookID, p.displayName, p.actionType, p.recipients, p.profile_image_info, p.searchTerm, p.triggerData, p.tokenID),
                        promise.then(function(a) {
                            if (c.file = null ,
                            500 == a)
                                c.initialized = !0,
                                c.$broadcast("render"),
                                n.showBanner("An error occured: please try again.", !1, !1, promise);
                            else if (n.showBanner("Your settings have been changed", !1, !1, promise),
                            c.updatingWebhookID && "w" != c.updatingWebhookID) {
                                var b = o.newResourceLink("9", [{
                                    uid: c.updatingWebhookID,
                                    type: "22"
                                }, {
                                    uid: "2",
                                    type: "GroupIntegrations"
                                }], null , "Group Integrations")
                                  , d = o.linkToUrl(b, !0);
                                c.updatingWebhookID = null ,
                                l.url(d.slice(1))
                            } else {
                                var b = o.newResourceLink("100", [{
                                    uid: 0,
                                    type: "100"
                                }, {
                                    uid: "2",
                                    type: "ConfiguredIntegrations"
                                }], null , "Configured Integrations")
                                  , d = o.linkToUrl(b, !0);
                                l.url(d.slice(1))
                            }
                        })
                    } else {
                        var p = {
                            accountID: g.getAccountId(),
                            creatorID: i.getUserId(),
                            displayName: c.form.display_name,
                            actionType: "create_note",
                            accessLevel: "twitter",
                            recipients: JSON.stringify(h),
                            profile_image_info: j ? JSON.stringify(j) : null ,
                            searchTerm: c.form.search_term,
                            triggerData: e,
                            tokenID: c.oauth2.twitter_token
                        };
                        promise = t.createTwitterIntegration(p.accountID, p.creatorID, p.displayName, p.actionType, p.accessLevel, p.recipients, p.profile_image_info, p.searchTerm, p.triggerData, p.tokenID),
                        promise.then(function(a) {
                            if (c.file = null ,
                            c.logMixpanelEvent(z.ADDED_INTEGRATION, {
                                From: "Groups Newsfeed",
                                Via: "Direct",
                                Source: "Twitter"
                            }),
                            c.groupId && 0 != c.groupId) {
                                var b = o.newResourceLink("9", [{
                                    uid: c.groupId,
                                    type: "22"
                                }, {
                                    uid: "2",
                                    type: "GroupIntegrations"
                                }], null , "Group Integrations")
                                  , d = o.linkToUrl(b, !0);
                                l.url(d.slice(1))
                            } else {
                                var b = o.newResourceLink("100", [{
                                    uid: 0,
                                    type: "100"
                                }, {
                                    uid: "2",
                                    type: "ConfiguredIntegrations"
                                }], null , "Configured Integrations")
                                  , d = o.linkToUrl(b, !0);
                                l.url(d.slice(1))
                            }
                        })
                    }
                    return !0
                }
                ,
                c.getGmailLabelList = function(a, b) {
                    promise = u.getLabelList(c.oauth2.gmail_token),
                    promise.then(function(d) {
                        c.gmailLabelList = [];
                        for (var e = 0; e < d.length; e++)
                            c.gmailLabelList.push(d[e]);
                        if (c.isUpdatingGmail)
                            for (var e = 0; e < c.gmailLabelList.length; e++)
                                c.gmailLabelList[e].id == c.manageGmailLabelID && (c.form.gmailLabel = c.gmailLabelList[e]);
                        else
                            for (var e = 0; e < c.gmailLabelList.length; e++)
                                "INBOX" == c.gmailLabelList[e].id && (c.form.gmailLabel = c.gmailLabelList[e]);
                        (a || c.isUpdatingGmail || b) && (c.initialized = !0,
                        c.$broadcast("render"))
                    })
                }
                ,
                c.saveGmailIntegration = function() {
                    var a = "";
                    if (c.form.display_name || (a = "Display Name field is required. <br/>"),
                    0 == c.shareWith.length && (c.invalidateWebhookForm(),
                    a += "Please select atleast one recipient."),
                    "" != a)
                        return !1;
                    c.initialized = !1,
                    c.$broadcast("render");
                    for (var b = [], d = "", e = 0; e < c.shareWith.length; e++) {
                        var f = c.shareWith[e];
                        b.push({
                            id: f.id,
                            type: f.type.toLowerCase()
                        })
                    }
                    if (c.selectedDefaultIcon && "custom" != c.selectedDefaultIcon ? d = "direct.png" == c.selectedDefaultIcon ? {
                        file_url: "https://s3.amazonaws.com/test-scrybe-files/temp/integrations/default_icons/direct.png",
                        file_type: "url"
                    } : {
                        file_name: c.selectedDefaultIcon,
                        file_type: "default"
                    } : null  != c.file && c.file.requestID && (d = {
                        request_id: c.file.requestID,
                        file_size: c.file.size,
                        file_name: c.file.name
                    }),
                    c.isUpdatingGmail) {
                        var h = {
                            webhookID: c.form.webhook_id,
                            displayName: c.form.display_name,
                            actionType: "create_note",
                            recipients: JSON.stringify(b),
                            profile_image_info: d ? JSON.stringify(d) : null ,
                            labelID: c.form.gmailLabel.id,
                            tokenID: c.oauth2.gmail_token
                        };
                        promise = u.updateIntegration(h.webhookID, h.displayName, h.actionType, h.recipients, h.profile_image_info, h.labelID, h.tokenID),
                        promise.then(function(a) {
                            if (c.file = null ,
                            500 == a)
                                c.initialized = !0,
                                c.$broadcast("render"),
                                n.showBanner("An error occured: please try again later.", !1, !1, promise);
                            else if (n.showBanner("Your settings have been changed", !1, !1, promise),
                            c.updatingWebhookID && "w" != c.updatingWebhookID) {
                                var b = o.newResourceLink("9", [{
                                    uid: c.updatingWebhookID,
                                    type: "22"
                                }, {
                                    uid: "2",
                                    type: "GroupIntegrations"
                                }], null , "Group Integrations")
                                  , d = o.linkToUrl(b, !0);
                                c.updatingWebhookID = null ,
                                l.url(d.slice(1))
                            } else {
                                var b = o.newResourceLink("100", [{
                                    uid: 0,
                                    type: "100"
                                }, {
                                    uid: "2",
                                    type: "ConfiguredIntegrations"
                                }], null , "Configured Integrations")
                                  , d = o.linkToUrl(b, !0);
                                l.url(d.slice(1))
                            }
                        })
                    } else {
                        var h = {
                            accountID: g.getAccountId(),
                            creatorID: i.getUserId(),
                            displayName: c.form.display_name,
                            actionType: "create_note",
                            accessLevel: "gmail",
                            recipients: JSON.stringify(b),
                            profile_image_info: d ? JSON.stringify(d) : null ,
                            labelID: c.form.gmailLabel.id,
                            tokenID: c.oauth2.gmail_token
                        };
                        promise = u.createGmailIntegration(h.accountID, h.creatorID, h.displayName, h.actionType, h.accessLevel, h.recipients, h.profile_image_info, h.labelID, h.tokenID),
                        promise.then(function(a) {
                            if (c.file = null ,
                            c.logMixpanelEvent(z.ADDED_INTEGRATION, {
                                From: "Groups Newsfeed",
                                Via: "Direct",
                                Source: "Gmail"
                            }),
                            c.groupId && 0 != c.groupId) {
                                var b = o.newResourceLink("9", [{
                                    uid: c.groupId,
                                    type: "22"
                                }, {
                                    uid: "2",
                                    type: "GroupIntegrations"
                                }], null , "Group Integrations")
                                  , d = o.linkToUrl(b, !0);
                                l.url(d.slice(1))
                            } else {
                                var b = o.newResourceLink("100", [{
                                    uid: 0,
                                    type: "100"
                                }, {
                                    uid: "2",
                                    type: "ConfiguredIntegrations"
                                }], null , "Configured Integrations")
                                  , d = o.linkToUrl(b, !0);
                                l.url(d.slice(1))
                            }
                        })
                    }
                    return !0
                }
                ,
                c.saveDropboxIntegration = function() {
                    var a = "";
                    if (c.form.display_name || (a = "Display Name field is required. <br/>"),
                    0 == c.shareWith.length && (c.invalidateWebhookForm(),
                    a += "Please select atleast one recipient."),
                    "" != a)
                        return !1;
                    c.initialized = !1,
                    c.$broadcast("render");
                    for (var b = [], d = "", e = 0; e < c.shareWith.length; e++) {
                        var f = c.shareWith[e];
                        b.push({
                            id: f.id,
                            type: f.type.toLowerCase()
                        })
                    }
                    if (c.selectedDefaultIcon && "custom" != c.selectedDefaultIcon ? d = "direct.png" == c.selectedDefaultIcon ? {
                        file_url: "https://s3.amazonaws.com/test-scrybe-files/temp/integrations/default_icons/direct.png",
                        file_type: "url"
                    } : {
                        file_name: c.selectedDefaultIcon,
                        file_type: "default"
                    } : null  != c.file && c.file.requestID && (d = {
                        request_id: c.file.requestID,
                        file_size: c.file.size,
                        file_name: c.file.name
                    }),
                    c.isUpdatingDropbox) {
                        var h = {
                            webhookID: c.form.webhook_id,
                            displayName: c.form.display_name,
                            actionType: "create_note",
                            recipients: JSON.stringify(b),
                            profile_image_info: d ? JSON.stringify(d) : null ,
                            directory: c.dropboxDirectory,
                            tokenID: c.oauth2.dropbox_token
                        };
                        promise = w.updateIntegration(h.webhookID, h.displayName, h.actionType, h.recipients, h.profile_image_info, h.directory, h.tokenID),
                        promise.then(function(a) {
                            if (c.file = null ,
                            500 == a)
                                c.initialized = !0,
                                c.$broadcast("render"),
                                n.showBanner("An error occured: please try again later.", !1, !1, promise);
                            else if (n.showBanner("Your settings have been changed", !1, !1, promise),
                            c.updatingWebhookID && "w" != c.updatingWebhookID) {
                                var b = o.newResourceLink("9", [{
                                    uid: c.updatingWebhookID,
                                    type: "22"
                                }, {
                                    uid: "2",
                                    type: "GroupIntegrations"
                                }], null , "Group Integrations")
                                  , d = o.linkToUrl(b, !0);
                                c.updatingWebhookID = null ,
                                l.url(d.slice(1))
                            } else {
                                var b = o.newResourceLink("100", [{
                                    uid: 0,
                                    type: "100"
                                }, {
                                    uid: "2",
                                    type: "ConfiguredIntegrations"
                                }], null , "Configured Integrations")
                                  , d = o.linkToUrl(b, !0);
                                l.url(d.slice(1))
                            }
                        })
                    } else {
                        var h = {
                            accountID: g.getAccountId(),
                            creatorID: i.getUserId(),
                            displayName: c.form.display_name,
                            actionType: "create_note",
                            accessLevel: "dropbox",
                            recipients: JSON.stringify(b),
                            profile_image_info: d ? JSON.stringify(d) : null ,
                            directory: c.dropboxDirectory,
                            tokenID: c.oauth2.dropbox_token
                        };
                        promise = w.createDropboxIntegration(h.accountID, h.creatorID, h.displayName, h.actionType, h.accessLevel, h.recipients, h.profile_image_info, h.directory, h.tokenID),
                        promise.then(function(a) {
                            if (c.file = null ,
                            c.logMixpanelEvent(z.ADDED_INTEGRATION, {
                                From: "Groups Newsfeed",
                                Via: "Direct",
                                Source: "Dropbox"
                            }),
                            c.groupId && 0 != c.groupId) {
                                var b = o.newResourceLink("9", [{
                                    uid: c.groupId,
                                    type: "22"
                                }, {
                                    uid: "2",
                                    type: "GroupIntegrations"
                                }], null , "Group Integrations")
                                  , d = o.linkToUrl(b, !0);
                                l.url(d.slice(1))
                            } else {
                                var b = o.newResourceLink("100", [{
                                    uid: 0,
                                    type: "100"
                                }, {
                                    uid: "2",
                                    type: "ConfiguredIntegrations"
                                }], null , "Configured Integrations")
                                  , d = o.linkToUrl(b, !0);
                                l.url(d.slice(1))
                            }
                        })
                    }
                    return !0
                }
                ,
                c.saveBoxIntegration = function() {
                    var a = "";
                    if (c.form.display_name || (a = "Display Name field is required. <br/>"),
                    0 == c.shareWith.length && (c.invalidateWebhookForm(),
                    a += "Please select atleast one recipient."),
                    "" != a)
                        return !1;
                    c.initialized = !1,
                    c.$broadcast("render");
                    for (var b = [], d = "", e = 0; e < c.shareWith.length; e++) {
                        var f = c.shareWith[e];
                        b.push({
                            id: f.id,
                            type: f.type.toLowerCase()
                        })
                    }
                    if (c.selectedDefaultIcon && "custom" != c.selectedDefaultIcon ? d = "direct.png" == c.selectedDefaultIcon ? {
                        file_url: "https://s3.amazonaws.com/test-scrybe-files/temp/integrations/default_icons/direct.png",
                        file_type: "url"
                    } : {
                        file_name: c.selectedDefaultIcon,
                        file_type: "default"
                    } : null  != c.file && c.file.requestID && (d = {
                        request_id: c.file.requestID,
                        file_size: c.file.size,
                        file_name: c.file.name
                    }),
                    c.isUpdatingBox) {
                        var h = {
                            webhookID: c.form.webhook_id,
                            displayName: c.form.display_name,
                            actionType: "create_note",
                            recipients: JSON.stringify(b),
                            profile_image_info: d ? JSON.stringify(d) : null ,
                            folderID: c.boxFolderID,
                            tokenID: c.oauth2.box_token
                        };
                        promise = x.updateIntegration(h.webhookID, h.displayName, h.actionType, h.recipients, h.profile_image_info, h.folderID, h.tokenID),
                        promise.then(function(a) {
                            if (c.file = null ,
                            500 == a)
                                c.initialized = !0,
                                c.$broadcast("render"),
                                n.showBanner("An error occured: please try again later.", !1, !1, promise);
                            else if (n.showBanner("Your settings have been changed", !1, !1, promise),
                            c.updatingWebhookID && "w" != c.updatingWebhookID) {
                                var b = o.newResourceLink("9", [{
                                    uid: c.updatingWebhookID,
                                    type: "22"
                                }, {
                                    uid: "2",
                                    type: "GroupIntegrations"
                                }], null , "Group Integrations")
                                  , d = o.linkToUrl(b, !0);
                                c.updatingWebhookID = null ,
                                l.url(d.slice(1))
                            } else {
                                var b = o.newResourceLink("100", [{
                                    uid: 0,
                                    type: "100"
                                }, {
                                    uid: "2",
                                    type: "ConfiguredIntegrations"
                                }], null , "Configured Integrations")
                                  , d = o.linkToUrl(b, !0);
                                l.url(d.slice(1))
                            }
                        })
                    } else {
                        var h = {
                            accountID: g.getAccountId(),
                            creatorID: i.getUserId(),
                            displayName: c.form.display_name,
                            actionType: "create_note",
                            accessLevel: "box",
                            recipients: JSON.stringify(b),
                            profile_image_info: d ? JSON.stringify(d) : null ,
                            folderID: c.boxFolderID,
                            tokenID: c.oauth2.box_token
                        };
                        promise = x.createBoxIntegration(h.accountID, h.creatorID, h.displayName, h.actionType, h.accessLevel, h.recipients, h.profile_image_info, h.folderID, h.tokenID),
                        promise.then(function(a) {
                            if (c.file = null ,
                            c.logMixpanelEvent(z.ADDED_INTEGRATION, {
                                From: "Groups Newsfeed",
                                Via: "Direct",
                                Source: "Box"
                            }),
                            c.groupId && 0 != c.groupId) {
                                var b = o.newResourceLink("9", [{
                                    uid: c.groupId,
                                    type: "22"
                                }, {
                                    uid: "2",
                                    type: "GroupIntegrations"
                                }], null , "Group Integrations")
                                  , d = o.linkToUrl(b, !0);
                                l.url(d.slice(1))
                            } else {
                                var b = o.newResourceLink("100", [{
                                    uid: 0,
                                    type: "100"
                                }, {
                                    uid: "2",
                                    type: "ConfiguredIntegrations"
                                }], null , "Configured Integrations")
                                  , d = o.linkToUrl(b, !0);
                                l.url(d.slice(1))
                            }
                        })
                    }
                    return !0
                }
                ,
                c.selectBoxFolder = function() {
                    var a = "home/components/selectFolderWidget/templates/selectFolderModal.tpl.html"
                      , b = "selectFolderModalCtrl"
                      , d = "cnv-select-info-modal"
                      , e = {
                        folderConfig: function() {
                            return {
                                accessToken: c.oauth2.box_token,
                                defaultFolder: "All files",
                                provider: "box",
                                pathSeparator: null 
                            }
                        }
                    }
                      , f = s.customModal(a, b, e, d, !0);
                    f.result.then(function(a) {
                        c.boxFolder = a.name,
                        c.boxFolderID = a.id
                    })
                }
                ,
                c.selectDropboxDirectory = function() {
                    var a = "home/components/selectFolderWidget/templates/selectFolderModal.tpl.html"
                      , b = "selectFolderModalCtrl"
                      , d = "cnv-select-info-modal"
                      , e = {
                        folderConfig: function() {
                            return {
                                accessToken: c.oauth2.dropbox_token,
                                defaultFolder: "/",
                                provider: "dropbox",
                                pathSeparator: "/"
                            }
                        }
                    }
                      , f = s.customModal(a, b, e, d, !0);
                    f.result.then(function(a) {
                        c.dropboxDirectory = a
                    })
                }
                ,
                c.selectGDriveFolder = function() {
                    var a = "home/components/selectFolderWidget/templates/selectFolderModal.tpl.html"
                      , b = "selectFolderModalCtrl"
                      , d = "cnv-select-info-modal"
                      , e = {
                        folderConfig: function() {
                            return {
                                accessToken: c.oauth2.gdrive_token,
                                defaultFolder: "root",
                                provider: "gdrive",
                                pathSeparator: "null"
                            }
                        }
                    }
                      , f = s.customModal(a, b, e, d, !0);
                    f.result.then(function(a) {
                        c.gdriveFolder = a.name,
                        c.gdriveFolderID = a.id
                    })
                }
                ,
                c.saveGdriveIntegration = function() {
                    var a = "";
                    if (c.form.display_name || (a = "Display Name field is required. <br/>"),
                    0 == c.shareWith.length && (c.invalidateWebhookForm(),
                    a += "Please select atleast one recipient."),
                    "" != a)
                        return !1;
                    c.initialized = !1,
                    c.$broadcast("render");
                    for (var b = [], d = "", e = 0; e < c.shareWith.length; e++) {
                        var f = c.shareWith[e];
                        b.push({
                            id: f.id,
                            type: f.type.toLowerCase()
                        })
                    }
                    if (c.selectedDefaultIcon && "custom" != c.selectedDefaultIcon ? d = "direct.png" == c.selectedDefaultIcon ? {
                        file_url: "https://s3.amazonaws.com/test-scrybe-files/temp/integrations/default_icons/direct.png",
                        file_type: "url"
                    } : {
                        file_name: c.selectedDefaultIcon,
                        file_type: "default"
                    } : null  != c.file && c.file.requestID && (d = {
                        request_id: c.file.requestID,
                        file_size: c.file.size,
                        file_name: c.file.name
                    }),
                    c.isUpdatingGdrive) {
                        var h = {
                            webhookID: c.form.webhook_id,
                            displayName: c.form.display_name,
                            actionType: "create_note",
                            recipients: JSON.stringify(b),
                            profile_image_info: d ? JSON.stringify(d) : null ,
                            folderID: c.gdriveFolderID,
                            tokenID: c.oauth2.gdrive_token
                        };
                        promise = v.updateIntegration(h.webhookID, h.displayName, h.actionType, h.recipients, h.profile_image_info, h.folderID, h.tokenID),
                        promise.then(function(a) {
                            if (c.file = null ,
                            500 == a)
                                c.initialized = !0,
                                c.$broadcast("render"),
                                n.showBanner("An error occured: please try again later.", !1, !1, promise);
                            else if (n.showBanner("Your settings have been changed", !1, !1, promise),
                            c.updatingWebhookID && "w" != c.updatingWebhookID) {
                                var b = o.newResourceLink("9", [{
                                    uid: c.updatingWebhookID,
                                    type: "22"
                                }, {
                                    uid: "2",
                                    type: "GroupIntegrations"
                                }], null , "Group Integrations")
                                  , d = o.linkToUrl(b, !0);
                                c.updatingWebhookID = null ,
                                l.url(d.slice(1))
                            } else {
                                var b = o.newResourceLink("100", [{
                                    uid: 0,
                                    type: "100"
                                }, {
                                    uid: "2",
                                    type: "ConfiguredIntegrations"
                                }], null , "Configured Integrations")
                                  , d = o.linkToUrl(b, !0);
                                l.url(d.slice(1))
                            }
                        })
                    } else {
                        var h = {
                            accountID: g.getAccountId(),
                            creatorID: i.getUserId(),
                            displayName: c.form.display_name,
                            actionType: "create_note",
                            accessLevel: "gdrive",
                            recipients: JSON.stringify(b),
                            profile_image_info: d ? JSON.stringify(d) : null ,
                            folderID: c.gdriveFolderID,
                            tokenID: c.oauth2.gdrive_token
                        };
                        promise = v.createGdriveIntegration(h.accountID, h.creatorID, h.displayName, h.actionType, h.accessLevel, h.recipients, h.profile_image_info, h.folderID, h.tokenID),
                        promise.then(function(a) {
                            if (c.file = null ,
                            c.logMixpanelEvent(z.ADDED_INTEGRATION, {
                                From: "Groups Newsfeed",
                                Via: "Direct",
                                Source: "Google Drive"
                            }),
                            c.groupId && 0 != c.groupId) {
                                var b = o.newResourceLink("9", [{
                                    uid: c.groupId,
                                    type: "22"
                                }, {
                                    uid: "2",
                                    type: "GroupIntegrations"
                                }], null , "Group Integrations")
                                  , d = o.linkToUrl(b, !0);
                                l.url(d.slice(1))
                            } else {
                                var b = o.newResourceLink("100", [{
                                    uid: 0,
                                    type: "100"
                                }, {
                                    uid: "2",
                                    type: "ConfiguredIntegrations"
                                }], null , "Configured Integrations")
                                  , d = o.linkToUrl(b, !0);
                                l.url(d.slice(1))
                            }
                        })
                    }
                    return !0
                }
                ,
                c.getIntegrationStatusText = function(a) {
                    for (var b = 0; b < c.configuredIntegrations.length; b++)
                        if (c.configuredIntegrations[b].webhook_id == a)
                            return "INACTIVE" == c.configuredIntegrations[b].status ? "Enable" : "Disable";
                    return "Disable"
                }
                ,
                c.logMixpanelEvent = function(a, b) {
                    b = b || {},
                    z.trackEvent(a, b, !0)
                }
                ,
                c.createZapierIntegration = function(a) {
                    c.logMixpanelEvent(z.CLICK_ADD_INTEGRATION, {
                        From: "Standard Newsfeed",
                        Via: "Zapier",
                        Source: a.title
                    })
                }
                ,
                c.resetDefaultFolderValue = function(a) {
                    switch (a) {
                    case "gdrive":
                        c.gdriveFolder = c.GDRIVE_DEFAULT_ROOT_FOLDER,
                        c.gdriveFolderID = c.GDRIVE_DEFAULT_ROOT_FOLDER_ID;
                        break;
                    case "box":
                        c.boxFolder = c.BOX_DEFAULT_ROOT_FOLDER,
                        c.boxFolderID = c.BOX_DEFAULT_ROOT_FOLDER_ID;
                        break;
                    case "dropbox":
                        c.dropboxDirectory = c.DROPBOX_DEFAULT_ROOT;
                        break;
                    case "odrive":
                        c.odriveFolder = c.ODRIVE_DEFAULT_ROOT_FOLDER,
                        c.odriveFolderID = c.ODRIVE_DEFAULT_ROOT_FOLDER_ID
                    }
                }
                ,
                c.saveFacebookIntegration = function() {
                    var a = "";
                    if (c.form.display_name || (a = "Display Name field is required. <br/>"),
                    0 == c.shareWith.length && (c.invalidateWebhookForm(),
                    a += "Please select atleast one recipient."),
                    "" != a)
                        return !1;
                    c.initialized = !1,
                    c.$broadcast("render");
                    for (var b = [], d = "", e = 0; e < c.shareWith.length; e++) {
                        var f = c.shareWith[e];
                        b.push({
                            id: f.id,
                            type: f.type.toLowerCase()
                        })
                    }
                    if (c.selectedDefaultIcon && "custom" != c.selectedDefaultIcon ? d = "direct.png" == c.selectedDefaultIcon ? {
                        file_url: "https://s3.amazonaws.com/test-scrybe-files/temp/integrations/default_icons/direct.png",
                        file_type: "url"
                    } : {
                        file_name: c.selectedDefaultIcon,
                        file_type: "default"
                    } : null  != c.file && c.file.requestID && (d = {
                        request_id: c.file.requestID,
                        file_size: c.file.size,
                        file_name: c.file.name
                    }),
                    c.isUpdatingFacebook) {
                        var h = {
                            webhookID: c.form.webhook_id,
                            displayName: c.form.display_name,
                            actionType: "create_note",
                            recipients: JSON.stringify(b),
                            profile_image_info: d ? JSON.stringify(d) : null ,
                            pageID: c.form.fbPage.id,
                            tokenID: c.oauth2.facebook_token
                        };
                        promise = y.updateIntegration(h.webhookID, h.displayName, h.actionType, h.recipients, h.profile_image_info, h.pageID, h.tokenID),
                        promise.then(function(a) {
                            if (c.file = null ,
                            500 == a)
                                c.initialized = !0,
                                c.$broadcast("render"),
                                n.showBanner("An error occured: cannot subscribe to this Page.", !1, !1, promise);
                            else if (n.showBanner("Your settings have been changed", !1, !1, promise),
                            c.updatingWebhookID && "w" != c.updatingWebhookID) {
                                var b = o.newResourceLink("9", [{
                                    uid: c.updatingWebhookID,
                                    type: "22"
                                }, {
                                    uid: "2",
                                    type: "GroupIntegrations"
                                }], null , "Group Integrations")
                                  , d = o.linkToUrl(b, !0);
                                c.updatingWebhookID = null ,
                                l.url(d.slice(1))
                            } else {
                                var b = o.newResourceLink("100", [{
                                    uid: 0,
                                    type: "100"
                                }, {
                                    uid: "2",
                                    type: "ConfiguredIntegrations"
                                }], null , "Configured Integrations")
                                  , d = o.linkToUrl(b, !0);
                                l.url(d.slice(1))
                            }
                        })
                    } else {
                        var h = {
                            accountID: g.getAccountId(),
                            creatorID: i.getUserId(),
                            displayName: c.form.display_name,
                            actionType: "create_note",
                            accessLevel: "facebook",
                            recipients: JSON.stringify(b),
                            profile_image_info: d ? JSON.stringify(d) : null ,
                            pageID: c.form.fbPage.id,
                            tokenID: c.oauth2.facebook_token
                        };
                        promise = y.createFacebookIntegration(h.accountID, h.creatorID, h.displayName, h.actionType, h.accessLevel, h.recipients, h.profile_image_info, h.pageID, h.tokenID),
                        promise.then(function(a) {
                            if (c.file = null ,
                            500 == a)
                                c.initialized = !0,
                                c.$broadcast("render"),
                                n.showBanner("An error occured: cannot subscribe to this Page.", !1, !1, promise);
                            else if (c.groupId && 0 != c.groupId) {
                                var b = o.newResourceLink("9", [{
                                    uid: c.groupId,
                                    type: "22"
                                }, {
                                    uid: "2",
                                    type: "GroupIntegrations"
                                }], null , "Group Integrations")
                                  , d = o.linkToUrl(b, !0);
                                l.url(d.slice(1))
                            } else {
                                var b = o.newResourceLink("100", [{
                                    uid: 0,
                                    type: "100"
                                }, {
                                    uid: "2",
                                    type: "ConfiguredIntegrations"
                                }], null , "Configured Integrations")
                                  , d = o.linkToUrl(b, !0);
                                l.url(d.slice(1))
                            }
                        })
                    }
                    return !0
                }
                ,
                c.saveO365Integration = function(a) {
                    var b = "";
                    if (c.form.display_name || (b = "Display Name field is required. <br/>"),
                    0 == c.shareWith.length && (c.invalidateWebhookForm(),
                    b += "Please select atleast one recipient."),
                    "" != b)
                        return !1;
                    c.initialized = !1,
                    c.$broadcast("render");
                    for (var d = [], e = "", f = 0; f < c.shareWith.length; f++) {
                        var h = c.shareWith[f];
                        d.push({
                            id: h.id,
                            type: h.type.toLowerCase()
                        })
                    }
                    c.selectedDefaultIcon && "custom" != c.selectedDefaultIcon ? e = "direct.png" == c.selectedDefaultIcon ? {
                        file_url: "https://s3.amazonaws.com/test-scrybe-files/temp/integrations/default_icons/direct.png",
                        file_type: "url"
                    } : {
                        file_name: c.selectedDefaultIcon,
                        file_type: "default"
                    } : null  != c.file && c.file.requestID && (e = {
                        request_id: c.file.requestID,
                        file_size: c.file.size,
                        file_name: c.file.name
                    });
                    var j = S(a);
                    if (c.isUpdatingO365) {
                        var k = {
                            webhookID: c.form.webhook_id,
                            displayName: c.form.display_name,
                            actionType: "create_note",
                            recipients: JSON.stringify(d),
                            profile_image_info: e ? JSON.stringify(e) : null ,
                            integration_data: j,
                            tokenID: c.oauth2.o365_token
                        };
                        promise = A.updateIntegration(k.webhookID, k.displayName, k.actionType, k.recipients, k.profile_image_info, k.integration_data, k.tokenID, a),
                        promise.then(function(a) {
                            if (c.file = null ,
                            500 == a)
                                c.initialized = !0,
                                c.$broadcast("render"),
                                n.showBanner("An error occured: cannot subscribe to this Page.", !1, !1, promise);
                            else if (n.showBanner("Your settings have been changed", !1, !1, promise),
                            c.updatingWebhookID && "w" != c.updatingWebhookID) {
                                var b = o.newResourceLink("9", [{
                                    uid: c.updatingWebhookID,
                                    type: "22"
                                }, {
                                    uid: "2",
                                    type: "GroupIntegrations"
                                }], null , "Group Integrations")
                                  , d = o.linkToUrl(b, !0);
                                c.updatingWebhookID = null ,
                                l.url(d.slice(1))
                            } else {
                                var b = o.newResourceLink("100", [{
                                    uid: 0,
                                    type: "100"
                                }, {
                                    uid: "2",
                                    type: "ConfiguredIntegrations"
                                }], null , "Configured Integrations")
                                  , d = o.linkToUrl(b, !0);
                                l.url(d.slice(1))
                            }
                        })
                    } else {
                        var k = {
                            accountID: g.getAccountId(),
                            creatorID: i.getUserId(),
                            displayName: c.form.display_name,
                            actionType: "create_note",
                            accessLevel: a,
                            recipients: JSON.stringify(d),
                            profile_image_info: e ? JSON.stringify(e) : null ,
                            integration_data: j,
                            tokenID: c.oauth2.o365_token
                        };
                        promise = A.createO365Integration(k.accountID, k.creatorID, k.displayName, k.actionType, k.accessLevel, k.recipients, k.profile_image_info, k.integration_data, k.tokenID, a),
                        promise.then(function(a) {
                            if (c.file = null ,
                            500 == a)
                                c.initialized = !0,
                                c.$broadcast("render"),
                                n.showBanner("An error occured: cannot subscribe to this Page.", !1, !1, promise);
                            else if (c.groupId && 0 != c.groupId) {
                                var b = o.newResourceLink("9", [{
                                    uid: c.groupId,
                                    type: "22"
                                }, {
                                    uid: "2",
                                    type: "GroupIntegrations"
                                }], null , "Group Integrations")
                                  , d = o.linkToUrl(b, !0);
                                l.url(d.slice(1))
                            } else {
                                var b = o.newResourceLink("100", [{
                                    uid: 0,
                                    type: "100"
                                }, {
                                    uid: "2",
                                    type: "ConfiguredIntegrations"
                                }], null , "Configured Integrations")
                                  , d = o.linkToUrl(b, !0);
                                l.url(d.slice(1))
                            }
                        })
                    }
                    return !0
                }
                ,
                c.getFBPageList = function(a, b) {
                    c.oauth2.facebook_token && (promise = y.getPageList(c.oauth2.facebook_token),
                    promise.then(function(d) {
                        c.fbPageList = [];
                        for (var e = 0; e < d.length; e++)
                            c.fbPageList.push(d[e]);
                        c.form.fbPage = c.fbPageList[0],
                        a ? c.manageIntegration("facebook", b) : c.$broadcast("render")
                    }))
                }
                ,
                c.getO365MailFolderList = function(a, b) {
                    c.oauth2.o365_token ? (promise = A.getMailFolderList(c.oauth2.o365_token),
                    promise.then(function(d) {
                        c.o365MailFolderList = [];
                        for (var e = 0; e < d.length; e++)
                            c.o365MailFolderList.push(d[e]);
                        for (var e = 0; e < c.o365MailFolderList.length; e++)
                            "Inbox" == c.o365MailFolderList[e].title && (c.form.o365MailFolder = c.o365MailFolderList[e]);
                        a ? c.manageIntegration("o365_mail", b) : (c.initialized = !0,
                        c.$broadcast("render"))
                    })) : (c.initialized = !0,
                    c.$broadcast("render"))
                }
                ,
                c.getO365CalendarsList = function(a, b) {
                    c.oauth2.o365_token ? (promise = A.getCalendarsList(c.oauth2.o365_token),
                    promise.then(function(d) {
                        c.o365CalendarsList = [];
                        for (var e = 0; e < d.length; e++)
                            c.o365CalendarsList.push(d[e]);
                        c.form.o365Calendar = c.o365CalendarsList[0],
                        a ? c.manageIntegration("o365_calendar", b) : (c.initialized = !0,
                        c.$broadcast("render"))
                    })) : (c.initialized = !0,
                    c.$broadcast("render"))
                }
                ,
                c.selectODriveFolder = function() {
                    var a = "home/components/selectFolderWidget/templates/selectFolderModal.tpl.html"
                      , b = "selectFolderModalCtrl"
                      , d = "cnv-select-info-modal"
                      , e = {
                        folderConfig: function() {
                            return {
                                accessToken: c.oauth2.o365_token,
                                defaultFolder: "root",
                                provider: "odrive",
                                pathSeparator: "null"
                            }
                        }
                    }
                      , f = s.customModal(a, b, e, d, !0);
                    f.result.then(function(a) {
                        c.odriveFolder = a.name,
                        c.odriveFolderID = a.id
                    })
                }
                ,
                c.getTwitterLists = function(a, b) {
                    c.oauth2.twitter_token && (promise = t.getTwitterLists(c.oauth2.twitter_token, c.oauth2.twitter_user_identity),
                    promise.then(function(d) {
                        if (d.error)
                            c.twitterIntegration.twitterListsError = !0,
                            88 == d.code ? c.twitterIntegration.twitterListsErrorMessage = "You’ve hit the Twitter API rate limit which restricts the number of lists it can get in 15 minutes. Refresh and try again in 15 minutes." : 89 == d.code && (c.twitterIntegration.twitterListsErrorMessage = "You need to re authorize your account.");
                        else {
                            c.twitterIntegration.twitterListsError = !1,
                            c.twitterIntegration.twitterLists = [];
                            for (var e = 0; e < d.length; e++)
                                c.twitterIntegration.twitterLists.push(d[e]);
                            c.twitterIntegration.list = c.twitterIntegration.twitterLists[0]
                        }
                        a ? c.manageIntegration("twitter", b) : c.$broadcast("render")
                    }))
                }
                ,
                c.openTwitterHandlesConfig = function() {
                    var a = "integrations/integrationsDirectory/templates/cnvTwitterHandlesConfigModal.tpl.html"
                      , b = "twitterHandlesConfigModalCtrl"
                      , d = "cnv-select-info-modal"
                      , e = {
                        handlesConfig: function() {
                            return {
                                enableHandlesTo: c.twitterIntegration.enableHandlesTo,
                                enableHandlesFrom: c.twitterIntegration.enableHandlesFrom,
                                enableHandlesReply: c.twitterIntegration.enableHandlesReply,
                                enableHandlesRetweet: c.twitterIntegration.enableHandlesRetweet,
                                enableHandles: c.twitterIntegration.enableHandles
                            }
                        }
                    }
                      , f = s.customModal(a, b, e, d, !0);
                    f.result.then(function(a) {
                        c.twitterIntegration.enableHandlesTo = a.enableHandlesTo,
                        c.twitterIntegration.enableHandlesFrom = a.enableHandlesFrom,
                        c.twitterIntegration.enableHandlesReply = a.enableHandlesReply,
                        c.twitterIntegration.enableHandlesRetweet = a.enableHandlesRetweet;
                        var b = T();
                        c.isUpdatingTwitter && b.enable_handles && b.handles && (promise = t.saveHandlesConfig(c.form.webhook_id, b, c.oauth2.twitter_token),
                        promise.then(function(a) {}))
                    })
                }
                ,
                c.createGroup = function(a, b, d) {
                    var e = "home/components/createGroupWidget/createGroupModal.tpl.html"
                      , g = "createGroupModalCtrl"
                      , h = "group-create-details"
                      , i = {
                        createPublic: function() {
                            return b
                        },
                        createPrivate: function() {
                            return a
                        },
                        sourceGS: function() {
                            return ca
                        }
                    }
                      , j = s.customModal(e, g, i, h);
                    ca = d,
                    j.result.then(function(a) {
                        q.getGroups(!0).then(function(b) {
                            var d = f.getGroupListItem(a);
                            c.shareWith.push(d),
                            c.$broadcast("render")
                        })
                    })
                }
                ,
                c.likeInfoTooltipText = function(a) {
                    D("getTwitterInvalidHandlesInfo")(c.twitterIntegration.invalidHandles, a)
                }
                ,
                Y(),
                c.$broadcast("render")
            }
            ]
        }
    }
    ]),
    b.module("convoApp").controller("twitterHandlesConfigModalCtrl", ["$scope", "$modalInstance", "handlesConfig", function(a, b, c) {
        function d() {}
        a.enableHandlesTo = c.enableHandlesTo,
        a.enableHandlesFrom = c.enableHandlesFrom,
        a.enableHandlesReply = c.enableHandlesReply,
        a.enableHandlesRetweet = c.enableHandlesRetweet,
        a.enableHandles = c.enableHandles,
        a.modalError = !1,
        a.cancel = function() {
            b.dismiss()
        }
        ,
        a.saveConfig = function() {
            return 1 == a.enableHandles && 0 == a.enableHandlesTo && 0 == a.enableHandlesFrom && 0 == a.enableHandlesReply && 0 == a.enableHandlesRetweet ? (a.modalError = !0,
            a.$broadcast("render"),
            !1) : void b.close({
                enableHandlesTo: a.enableHandlesTo,
                enableHandlesFrom: a.enableHandlesFrom,
                enableHandlesReply: a.enableHandlesReply,
                enableHandlesRetweet: a.enableHandlesRetweet
            })
        }
        ,
        a.twitterIntegrationConfigChanged = function(a) {}
        ,
        d()
    }
    ]),
    b.module("convoApp").factory("roomVideoCallService", ["utils", "config", function(a, b) {
        var c = {}
          , d = function() {
            var c = b.ROOM_VIDEO_CALL_DIRECT_LINK_PREFIX + a.generateUniqueIdForAppearin();
            return c
        }
        ;
        return c.generateRoomVideoCallLink = d,
        c
    }
    ]),
    b.module("convoApp").directive("cnvSelectedUsersBox", function() {
        return {
            scope: !0,
            templateUrl: "invites/cnvSelectedUsersBox/cnvSelectedUsersBox.tpl.html",
            controller: ["$scope", function(a) {
                var b = a
                  , c = !1;
                b.addedUsersDisplayLimit = 10,
                b.cnvAddedUsers = b.addedList,
                b["delete"] = function(a) {
                    for (var c = 0, d = b.cnvAddedUsers.length; d > c; c++)
                        if (b.cnvAddedUsers[c].id === a) {
                            b.cnvAddedUsers.splice(c, 1),
                            b.$emit("DeleteSelectedUser", a);
                            break
                        }
                }
                ,
                b.onScrolledBottom = function(a) {
                    return c ? (a.preventDefault(),
                    a.stopImmediatePropagation(),
                    !1) : (c = !0,
                    b.addedUsersDisplayLimit = Math.min(b.addedUsersDisplayLimit + 15, b.contacts.length),
                    void setTimeout(function() {
                        c = !1
                    }, 0))
                }
            }
            ]
        }
    }),
    b.module("convoApp").factory("Contacts", ["accountInfo", "utils", "$q", "alertsService", "ServerComm", "FilterTypes", "usersGroupsListProvider", "mixpanelService", "userInfo", function(a, b, c, d, e, f, g, h, i) {
        function j(a) {
            for (var c = 0; c < a.length; c++) {
                var d = a[c];
                d.label = d.email,
                d.desclabel = "",
                d.id = b.generateHash(d.email) + c.toString(),
                d.type = "CONTACT",
                d.classes = "no-border cnv-smiley " + b.getRandomSmiley() + " as-bg"
            }
            return a
        }
        function k(a) {
            for (var b = 0; b < a.length; b++)
                "1" == a[b].join_status && (a.splice(b, 1),
                --b);
            return a
        }
        function l(a, c) {
            for (var d = 0, e = c.length; e > d; ++d) {
                var f = b.findIndexInObjectArray(a, "email", c[d].desclabel);
                -1 != f && a.splice(f, 1)
            }
            return a
        }
        function m(b) {
            if (b)
                for (var c = a.getAccountDomains(), d = (a.getAccountId(),
                0), e = c.length; e > d; d++)
                    if (0 == c[d].user_email_domain.indexOf(b))
                        return d;
            return -1
        }
        function n(a) {
            var b = c.defer();
            return e.post("usercontacts", {
                method: "addUserContacts",
                src: a.src,
                contacts: a.contacts
            }).success(function(a, c) {
                b.resolve(a)
            }).error(function(a, c) {
                b.reject(a)
            }),
            h.trackEvent(h.IMPORT_CONTACTS, {
                Medium: a.src
            }),
            b.promise
        }
        function o(a) {
            var d = c.defer();
            return e.post("usercontacts", {
                method: "getAccountUserContacts",
                include_off_domain: a.include_off_domain
            }).success(function(c, e) {
                var f = j(c.data)
                  , h = b.copyObject(f)
                  , i = [];
                a.include_off_domain ? (v.all = f,
                i = l(h, g.getList(g.LIST_NAMES.USERS)[0])) : (v.on_domain = f,
                i = k(h)),
                d.resolve(h)
            }).error(function(a, b) {
                d.reject(a)
            }),
            d.promise
        }
        function p(a, b) {
            q(a);
            for (var c = 0, d = 0; c < a.length; ++c)
                if ("0" == a[c].rank && "0" == a[c].join_status) {
                    if (d >= b) {
                        a.splice(c, 1),
                        --c;
                        continue
                    }
                    ++d
                }
            return v.scrap.splice(0, b),
            a
        }
        function q(a) {
            v.scrap.length = 0;
            for (var b = 0, c = a.length; c > b; ++b)
                "0" == a[b].rank && "0" == a[b].join_status && (a[b].scrap = !0,
                v.scrap.push(a[b]))
        }
        function r() {
            return v.scrap.shift()
        }
        function s(a) {
            var b = c.defer();
            return n({
                src: a.source,
                contacts: a.contacts
            }).then(function() {
                o({
                    include_off_domain: a.include_off_domain
                }).then(function(a) {
                    b.resolve(a)
                })
            }, function(a) {
                b.reject(a)
            }),
            b.promise
        }
        function t(c, d, e, g) {
            if (!c || !d)
                return [];
            e || (e = 5),
            e = Math.min(e, d.length);
            var h = b.getUserGroupSearchRegex(c)
              , j = []
              , k = 0
              , l = c.toLowerCase().trim()
              , n = l.lastIndexOf("@")
              , o = !1
              , p = {}
              , q = "";
            if (-1 != n && (q = l.substr(n + 1),
            q || (l = l.slice(0, -1))),
            q) {
                var r = m(q);
                if (-1 != r) {
                    var s = l.substr(0, n) + "@" + a.getAccountDomains()[r].user_email_domain;
                    b.isValidEmail(s) ? (p.label = s,
                    p.available = !0) : p.available = !1
                } else
                    g ? (p.available = !1,
                    p.message = {
                        text: "External email addresses can only be added in groups",
                        classes: "error-state-red"
                    }) : b.isValidEmail(l) ? (p.label = l,
                    p.available = !0) : p.available = !1
            } else {
                var s = l + "@" + a.getPrimaryAccountDomain().user_email_domain;
                b.isValidEmail(s) ? (p.label = s,
                p.available = !0) : (p.label = "",
                p.available = !1)
            }
            p.available && i.getEmail() === p.label && (o = !0);
            for (var t = 0, u = d.length; u > t && e > k; ++t) {
                var v = d[t]
                  , w = v.type === f.USER ? v.desclabel : v.label
                  , y = v.label.replace(h, "$1b1%b1_1$3b2%b2_2")
                  , z = v.type === f.USER ? v.desclabel.replace(h, "$1b1%b1_1$3b2%b2_2") : v.desclabel;
                (p.available && p.label === w || i.getEmail() === p.label) && (o = !0),
                (y != v.label || z != v.desclabel) && (v.formattedlabel = y,
                v.formatteddesclabel = z,
                j.push(v),
                k++)
            }
            return p.message ? j.push({
                label: p.message.text,
                formattedlabel: p.message.text,
                formatteddesclabel: "",
                type: "ERROR",
                classes: "no-border " + p.message.classes,
                id: b.generateHash(p.message.text)
            }) : (p.available && !o && j.push({
                label: p.label,
                formattedlabel: p.label,
                formatteddesclabel: "",
                type: "CONTACT",
                extended_type: "AUTO_TYPE_SUGGESTION",
                classes: "no-border cnv-smiley " + b.getRandomSmiley() + " as-bg",
                email: p.label,
                id: b.generateHash(p.label)
            }),
            j.push({
                label: "Select from your email contacts",
                formattedlabel: "Select from your email contacts",
                formatteddesclabel: "",
                type: x.GOOGLE_CONTACT_IMPORT,
                classes: "import-gmail",
                id: b.generateHash("Select from your email contacts")
            })),
            j
        }
        function u(a) {
            var b = c.defer()
              , e = "invites/templates/cnvBasicInviteModal.tpl.html"
              , f = "basicInviteModalCtrl"
              , g = {
                contacts: a
            }
              , h = {
                data: function() {
                    return g
                }
            };
            return d.customModal(e, f, h).result.then(function(a) {
                var c = "common/cnvInviteTeammates/templates/cnvFindTeammatesBasicSplash.tpl.html"
                  , e = "findContactsSplashCtrl"
                  , f = {
                    data: function() {
                        return {
                            response: a,
                            requestedView: "COMPLETE"
                        }
                    }
                };
                d.customModal(c, e, f).result.then(function(a) {
                    console.log("invite complete."),
                    b.resolve()
                }, function() {
                    console.log("invite complete."),
                    b.resolve()
                })
            }, function() {
                b.resolve()
            }),
            b.promise
        }
        var v = {
            on_domain: [],
            all: [],
            scrap: []
        }
          , w = {
            ON_DOMAIN: "on_domain",
            ALL: "all",
            SCRAP: "scrap"
        }
          , x = {
            GOOGLE_CONTACT_IMPORT: "googlecontactimport"
        };
        return {
            addUserContactsAndGetAccountUserContacts: s,
            initContactsInviteModal: u,
            query: t,
            limitScrapContacts: p,
            getScrapContact: r,
            getAccountUserContacts: o,
            addUserContacts: n,
            CONTACT_LIST_TYPES: w,
            CONTACT_TYPES: x
        }
    }
    ]),
    b.module("convoApp").controller("ImportCSVContactsCtrl", ["$scope", "Contacts", "importContactsService", "importCSVContacts", "utils", function(a, b, c, d, e) {
        var f = a;
        f.findCSVFileContacts = function(a) {
            e.fireEvent($(a.target).closest(".invite-CSV-contacts").find(".file-input")[0], "click")
        }
        ;
        var g = !1;
        f.CSVFileInputChange = function(a) {
            function d(a) {
                b.initContactsInviteModal({
                    local_list: c.csvFileLoadingCompleteHandler(a.target.result),
                    source: "csv",
                    include_off_domain: g,
                    origin: "Right_Column",
                    invite_via: "Invite_Dialog"
                })
            }
            var e = a.files[0];
            if (e) {
                var f = new FileReader;
                f.readAsText(e),
                f.onload = d
            }
        }
    }
    ]),
    b.module("convoApp").controller("ImportGoogleContactsCtrl", ["$scope", "importGoogleContacts", "Contacts", "importContactsService", function(a, b, c, d) {
        function e(a) {
            h && (h = !1,
            c.initContactsInviteModal({
                local_list: a,
                source: "google",
                include_off_domain: i,
                origin: "Right_Column",
                invite_via: "Invite_Dialog"
            }),
            f.close())
        }
        var f, g = a, h = !1;
        g.findGoogleContacts = function() {
            f = b.find(),
            h = !0
        }
        ;
        var i = !1;
        d.on("contactsReceivedFromGmail", e)
    }
    ]),
    b.module("convoApp").controller("ImportMacContactsCtrl", ["$scope", "Contacts", "alertsService", "importMacContacts", function(a, b, c, d) {
        var e = a;
        e.findMacContacts = function(a) {
            d.initContactsInviteModal(a ? a : "Right_Column")
        }
    }
    ]),
    b.module("convoApp").controller("basicInviteModalCtrl", ["$scope", "$modalInstance", "data", "accountInfo", "$q", "Contacts", "usersGroupsListProvider", "utils", "Users", "importContactsService", "alertsService", "Groups", "config", "mixpanelService", function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
        var o = a;
        o.invitesCtrl = c,
        o.invitesCtrl.initialized = !1,
        o.isNative = m.IS_NATIVE,
        o.isMac = m.IS_MAC,
        o.modalTitle = "Invite teammates",
        c.contacts.group && (o.modalTitle += " to " + c.contacts.group.get("title"));
        var p = (m.WEBSITE_DOMAIN + "join/" + d.getPrimaryAccountDomain().account_domain).substring(8);
        o.inviteEmailSubject = "Join me on " + d.getAccountName(),
        o.inviteEmailBody = "Hi there,%0D%0A%0D%0ALet's use Convo to make our internal communication faster!%0D%0A%0D%0ASign up with your work email at this link: https://" + p + "%0D%0A%0D%0ATake a look around and see what others are working on. Add a question or a great idea in comments. Then share a post and get really fast feedback.%0D%0A%0D%0ATry sharing posts instead of emails - even a complicated thread is easy to consume.";
        var q = {};
        o.invite = function() {
            q.Via = o.invitesCtrl.contacts.invite_via,
            q["Scraped Master List"] = q["Personal List"] = q["Master List"] = q.Email = 0,
            o.invitesCtrl.inputObj.inviteMessage ? o.invitesCtrl.inputObj.inviteMessage == o.invitesCtrl.inputObj.originalMessage ? q["Personal Message"] = "Default" : q["Personal Message"] = "Edited" : q["Personal Message"] = "None";
            for (var a = [], d = 0, e = o.invitesCtrl.addedList.length; e > d; d++) {
                var f = o.invitesCtrl.addedList[d];
                a.push(f.email),
                "0" == f.rank ? ++q["Scraped Master List"] : "1" == f.rank ? ++q["Personal List"] : "2" == f.rank ? ++q["Master List"] : ++q.Email
            }
            c.contacts.hasOwnProperty("group") ? (q["Invite To"] = "Group",
            l.inviteUsersToGroupRTC(c.contacts.group, a, o.invitesCtrl.inputObj.inviteMessage).success(function(c, d) {
                b.close({
                    response: c,
                    totalInvitesSent: a.length,
                    invited_to: "GROUP"
                })
            }).error(function(a, c) {
                b.close({
                    response: response
                })
            })) : (q["Invite To"] = "Network",
            i.inviteUsersToNetwork(a, o.invitesCtrl.inputObj.inviteMessage).then(function(c) {
                b.close({
                    response: c,
                    totalInvitesSent: a.length,
                    invited_to: "NETWORK"
                })
            }, function(a) {
                b.close({
                    response: a
                })
            })),
            n.trackEvent(n.INVITE_SENT, q)
        }
        ,
        o.dismiss = function() {
            b.dismiss("cancel")
        }
        ,
        a.onCSVInputFileChange = function(b) {
            a.invitesCtrl.onCSVInputFileChange(b)
        }
    }
    ]),
    b.module("convoApp").directive("cnvInvites", [function() {
        return {
            restrict: "EA",
            scope: !0,
            templateUrl: "invites/templates/cnvInvites.tpl.html",
            link: function(a, b, c) {
                function d(a) {
                    if (!$(a.target).closest(".added-users-list-item").length) {
                        e.itemAddedIndicator = !1;
                        for (var b = 0, c = e.addedList.length; c > b; b++)
                            e.addedList[b].highlight = !1
                    }
                }
                var e = a;
                document.addEventListener("click", d, !0),
                e.scrollToEndInAddedList = function() {
                    var a = b.find(".addedUsers");
                    a.animate({
                        scrollTop: a[0].scrollHeight - a[0].clientHeight - 16
                    }, {
                        duration: 250
                    })
                }
                ,
                e.scrollToTopInAddedList = function() {
                    b.find(".addedUsers").animate({
                        scrollTop: 0
                    }, {
                        duration: 250
                    })
                }
                ,
                e.__nuke__ = function() {
                    document.removeEventListener("click", d, !1)
                }
            },
            controller: ["$scope", "accountInfo", "importContactsService", "utils", "$q", "Contacts", "alertsService", "Users", "usersGroupsListProvider", "User", "userInfo", "mixpanelService", "$timeout", function(c, d, e, f, g, h, i, j, k, l, m, n, o) {
                function p(a, c) {
                    if (z) {
                        for (var d = x.contacts.group.get("groupMembers"), e = 0, g = d.length; g > e; ++e) {
                            var i = f.findIndexInObjectArray(a, "email", d[e].user_email_id);
                            -1 != i && a.splice(i, 1)
                        }
                        j.getPublishableUsers().then(function(a) {
                            var b = q(a, d);
                            u.contacts.prepend(b),
                            u.noContactFound = c && !u.contacts.length ? !0 : !1,
                            u.noRecentContactFound = !u.noContactFound && k && u.contacts.length === k ? !0 : !1
                        })
                    } else
                        A && j.getPublishableUsers().then(function(a) {
                            var b = t(q(a, []));
                            u.contacts.prepend(b),
                            t(u.contacts),
                            u.noContactFound = c && !u.contacts.length ? !0 : !1,
                            u.noRecentContactFound = !u.noContactFound && k && u.contacts.length === k ? !0 : !1
                        });
                    a = h.limitScrapContacts(a, D);
                    var k = u.contacts.length;
                    u.contacts.length = 0,
                    b.extend(u.contacts, a),
                    u.noContactFound = c && !u.contacts.length ? !0 : !1,
                    u.noRecentContactFound = !u.noContactFound && k && a.length === k ? !0 : !1
                }
                function q(a, b) {
                    for (var c = [], d = 0, e = a.length; e > d; ++d)
                        if (!_.where(b, {
                            user_id: a.models[d].id
                        }).length) {
                            var f = _.extend({}, a.models[d].toJSON());
                            f.user_email_id = a.models[d].get("email"),
                            c.push(k.createUserListItemForSpecificGroup(new l(f)))
                        }
                    return c
                }
                function r(a) {
                    u.waiting = !0,
                    h.addUserContactsAndGetAccountUserContacts(a).then(function(a) {
                        u.waiting = !1,
                        p(a, !0),
                        u.mode = u.contacts.length ? u.VIEW_MODES.DEFAULT : u.VIEW_MODES.EMPTY
                    }, function() {
                        alert("Couldn't get contacts, please try again!"),
                        u.waiting = !1
                    }),
                    x.contacts.origin && n.trackEvent(n.CLICK_IMPORT_CONTACTS, {
                        Source: x.contacts.origin
                    })
                }
                function s(a) {
                    y.close(),
                    r({
                        contacts: a,
                        source: "google",
                        include_off_domain: B
                    })
                }
                function t(a) {
                    for (var b = m.getEmail().trim(), c = 0; c < a.length; c++)
                        a[c].email.trim() === b && (a.splice(c, 1),
                        --c);
                    return a
                }
                var u = c
                  , v = {
                    LOCAL: "local_list",
                    MASTER: "master_list"
                }
                  , w = 5
                  , x = u.invitesCtrl
                  , y = null 
                  , z = x.contacts.hasOwnProperty("group") ? x.contacts.group : null 
                  , A = x.contacts.hasOwnProperty("new_group") ? x.contacts.new_group : null 
                  , B = x.contacts.include_off_domain
                  , C = !1
                  , D = 10
                  , E = {
                    NETWORK_LEVEL: "Hi team,\n\nLet's use Convo to make our internal communication faster!\n\nTake a look around and see what others are working on. Add a question or a great idea in comments. Then share a post and get really fast feedback.\n\nTry sharing posts instead of emails - even a complicated thread is easy to consume.",
                    GROUP_LEVEL: "Hi team,\n\nLet's organize our team communication in the " + (A ? A.name : z ? z.get("title") : "") + " group.\n\nTake a look around, create posts about what you're working on and start a chat with a teammate.\n\nTry sending posts instead of emails - posts are easier to consume and will make our communication faster.\n\n" + m.getUserInfo().name
                }
                  , F = {
                    NETWORK_LEVEL: "Enter email addresses",
                    GROUP_LEVEL: "Enter names or email addresses"
                };
                u.VIEW_MODES = {
                    DEFAULT: "default",
                    EMPTY: "empty"
                },
                u.inputObj = {},
                u.inputObj.inviteMessage = z || A ? E.GROUP_LEVEL : E.NETWORK_LEVEL,
                u.inputObj.originalMessage = f.copyObject(u.inputObj.inviteMessage),
                u.emailInputTitle = z || A ? F.GROUP_LEVEL : F.NETWORK_LEVEL,
                u.accountInfo = d,
                u.itemAddedIndicator = !1,
                u.inviteTo = [],
                u.waiting = !1,
                u.contacts = [],
                u.addedList = [],
                u.widgets = {},
                u.widgets.isEnable = !1,
                u.inviteListPanel = !1,
                u.allSelected = !1,
                u.noContactFound = !1,
                u.contactsDisplayLimit = 10,
                x.contacts.hasOwnProperty(v.MASTER) ? (u.contacts = x.contacts.master_list,
                u.contacts.length || (u.noContactFound = !0)) : x.contacts.hasOwnProperty(v.LOCAL) ? r({
                    contacts: x.contacts.local_list,
                    source: x.contacts.source,
                    include_off_domain: B
                }) : (u.waiting = !0,
                h.getAccountUserContacts({
                    include_off_domain: B
                }).then(function(a) {
                    x.contacts.get_details_first ? x.contacts.group.getDetails().then(function() {
                        u.waiting = !1,
                        p(a, !1),
                        u.mode = u.contacts.length ? u.VIEW_MODES.DEFAULT : u.VIEW_MODES.EMPTY
                    }, function() {
                        u.waiting = !1,
                        alert("Couldn't get contacts, please try again!")
                    }) : (u.waiting = !1,
                    p(a, !1)),
                    u.mode = u.contacts.length ? u.VIEW_MODES.DEFAULT : u.VIEW_MODES.EMPTY
                }, function() {
                    u.waiting = !1,
                    alert("Couldn't get contacts, please try again!")
                })),
                u.mode = u.contacts.length ? u.VIEW_MODES.DEFAULT : u.VIEW_MODES.EMPTY,
                u.onEscKeyPressInEmailField = function() {}
                ,
                u.onItemAddedInEmailField = function(a) {
                    var b = !1;
                    if ("ERROR" === a.type)
                        ;
                    else if (a.type === h.CONTACT_TYPES.GOOGLE_CONTACT_IMPORT)
                        u.find_googleContacts();
                    else {
                        if ("CONTACT" === a.type || "USER" === a.type)
                            for (var c = 0, d = u.contacts.length; d > c; c++)
                                u.contacts[c].email.trim() === a.email.trim() && (u.contacts[c].selected = !0);
                        a.highlight = u.itemAddedIndicator = !0;
                        for (var c = 0, d = u.addedList.length; d > c; c++)
                            if (u.addedList[c].email.trim() === a.email.trim()) {
                                b = !0;
                                break
                            }
                        b ? console.log("TODO: Set tag in view.") : (u.addedList.unshift(a),
                        u.inviteListPanel = !0,
                        u.mode = u.VIEW_MODES.DEFAULT,
                        setTimeout(function() {
                            u.scrollToTopInAddedList()
                        }, 0))
                    }
                    u.inviteTo.splice(0, 1)
                }
                ,
                u.onItemRemovedInEmailField = function(a) {}
                ,
                u.onCtrlOrCmdEnterPressInEmailField = function() {}
                ,
                u.onCtrlOrCmdSavePressInEmailField = function() {}
                ,
                u.toggleItemSelection = function(a, b) {
                    if (b.selected) {
                        var c = f.findIndexInObjectArray(u.addedList, "email", b.email);
                        -1 != c && (u.addedList.splice(c, 1),
                        b.selected = !1,
                        b.highlight = !1,
                        u.allSelected = !1,
                        u.addedList.length || (u.itemAddedIndicator = !1))
                    } else {
                        var c = f.findIndexInObjectArray(u.addedList, "email", b.email);
                        if (b.highlight = u.inviteListPanel = u.itemAddedIndicator = b.selected = !0,
                        -1 == c) {
                            if (u.addedList.unshift(b),
                            b.scrap) {
                                var d = h.getScrapContact();
                                d && u.contacts.push(d)
                            }
                            u.addedList.length === u.contacts.length && (u.allSelected = !0),
                            setTimeout(function() {
                                u.scrollToTopInAddedList()
                            }, 0)
                        }
                    }
                }
                ,
                u.$on("DeleteSelectedUser", function(a, b) {
                    a.preventDefault();
                    var c = f.findInObjectArray(u.contacts, "id", b);
                    c && (c.selected = !1,
                    c.highlight = !1,
                    u.allSelected = !1),
                    u.addedList.length || (u.itemAddedIndicator = !1)
                });
                var G = [];
                j.getPublishableUsers().then(function(a) {
                    G = a
                }),
                u.getInviteToDropdownItems = function(a, b) {
                    for (var c = g.defer(), d = h.query(a, u.contacts, w, !B), e = 0; e < d.length; e++)
                        if ("AUTO_TYPE_SUGGESTION" === d[e].extended_type)
                            if (x.contacts.group) {
                                var f = x.contacts.group.get("groupMembers")
                                  , i = _.where(f, {
                                    user_email_id: d[e].email
                                });
                                if (i.length) {
                                    d.splice(e, 1);
                                    break
                                }
                            } else
                                for (var j = 0; j < G.length; j++)
                                    if (G.models[j].get("email") === d[e].email) {
                                        d.splice(e, 1);
                                        break
                                    }
                    for (var e = 0; e < d.length; e++)
                        if (d[e].email)
                            for (var j = e + 1; j < d.length; j++)
                                d[j].email && d[e].email === d[j].email && (d.splice(j, 1),
                                --j);
                    return c.resolve(d),
                    c.promise
                }
                ,
                u.find_googleContacts = function() {
                    y = a.open("/app/contacts/ImportGmailContacts.php", "_blank", "left=400, top=100,width=500, height=500"),
                    y && (y.onbeforeunload = function() {
                        o(function() {
                            u.waiting = !1
                        }, 0)
                    }
                    )
                }
                ,
                u.find_macContacts = function() {
                    var a = "common/cnvInviteTeammates/templates/cnvFindTeammatesBasicSplash.tpl.html"
                      , b = "findContactsSplashCtrl"
                      , c = {
                        data: function() {
                            return {
                                include_off_domain: B
                            }
                        }
                    }
                      , d = i.customModal(a, b, c);
                    u.waiting = !0,
                    d.result.then(function(a) {
                        u.waiting = !1,
                        p(a.contacts, !0)
                    }, function(a) {
                        if (a.hasOwnProperty("promise"))
                            a.promise.then(function(a) {
                                u.waiting = !1,
                                p(a.contacts, !0)
                            }, function() {
                                u.waiting = !1,
                                alert("There seems to be an error reaching server. Please try again!")
                            });
                        else if (a.hasOwnProperty("error"))
                            if (u.waiting = !1,
                            "permission_denied" === a.error) {
                                var b = "common/cnvInviteTeammates/templates/cnvFindContactsPermissionDenied.tpl.html"
                                  , c = "findContactsPermissionDenied"
                                  , d = "find-contacts-permission-denied"
                                  , e = {
                                    data: function() {
                                        return {}
                                    }
                                };
                                i.customModal(b, c, e, d).result.then(function() {}, function() {})
                            } else
                                "no_contacts_found" === a.error ? (u.noContactFound = u.contacts.length ? !1 : !0,
                                u.noRecentContactFound = u.noContactFound ? !1 : !0) : "exception" === a.error ? console.error("Exception occurs while reading contacts from native.") : alert("There seems to be an error reaching server. Please try again!");
                        else
                            u.waiting = !1
                    })
                }
                ,
                u.find_csvContacts = function(a) {
                    f.fireEvent($(a.currentTarget).find(".file-input")[0], "click")
                }
                ,
                u.onCSVInputFileChange = function(a) {
                    function b() {
                        u.waiting = !1,
                        alert("Can't read that file. Please try another CSV file.")
                    }
                    function c(a) {
                        var c = e.csvFileLoadingCompleteHandler(a.target.result);
                        c.length ? (u.waiting = !0,
                        r({
                            contacts: c,
                            source: "csv",
                            include_off_domain: B
                        })) : b()
                    }
                    var d = a.files[0];
                    if (d)
                        if (d.name.toLowerCase().lastIndexOf("csv") === d.name.length - 3) {
                            var f = new FileReader;
                            f.readAsText(d),
                            f.onload = c
                        } else
                            b()
                }
                ,
                u.widgets.enable = function() {
                    u.widgets.isEnable || (u.widgets.isEnable = !0)
                }
                ,
                u.selectAllItems = function() {
                    for (var a = 0, b = u.contacts.length; b > a; a++)
                        u.contacts[a].selected || (u.addedList.unshift(u.contacts[a]),
                        u.inviteListPanel = u.contacts[a].highlight = !0,
                        u.contacts[a].selected = !0);
                    u.allSelected = u.itemAddedIndicator = !0,
                    setTimeout(function() {
                        u.scrollToTopInAddedList()
                    }, 0)
                }
                ,
                u.deSelectAllItems = function() {
                    for (var a = 0, b = u.contacts.length; b > a; a++)
                        if (u.contacts[a].selected) {
                            var c = u.addedList.indexOf(u.contacts[a]);
                            -1 != c && u.addedList.splice(c, 1),
                            u.contacts[a].selected = !1
                        }
                    u.allSelected = !1
                }
                ,
                u.onScrolledBottom = function(a) {
                    return C ? (a.preventDefault(),
                    a.stopImmediatePropagation(),
                    !1) : (C = !0,
                    u.contactsDisplayLimit = Math.min(u.contactsDisplayLimit + 15, u.contacts.length),
                    void setTimeout(function() {
                        C = !1
                    }, 0))
                }
                ,
                u.dismissNoRecentContactFound = function() {
                    u.noRecentContactFound = !1
                }
                ,
                e.on("contactsReceivedFromGmail", s),
                u.$on("$destroy", function(a) {
                    e.off("contactsReceivedFromGmail", s),
                    u.__nuke__()
                }),
                u.invitesCtrl.API = {},
                u.invitesCtrl.find_googleContacts = u.find_googleContacts,
                u.invitesCtrl.find_macContacts = u.find_macContacts,
                u.invitesCtrl.find_csvContacts = u.find_csvContacts,
                u.invitesCtrl.onCSVInputFileChange = u.onCSVInputFileChange,
                u.invitesCtrl.masterList = u.contacts,
                u.invitesCtrl.addedList = u.addedList,
                u.invitesCtrl.inputObj = u.inputObj,
                u.invitesCtrl.widgets = u.widgets,
                u.invitesCtrl.initialized = !0
            }
            ]
        }
    }
    ]),
    b.module("convoApp").constant("ItemsConstants", {
        ITEM_SHARING_INFO_UPDATED: 101,
        ITEM_DELETED_PERMANENTLY: 100,
        ITEM_MOVED_TO_TRASH: 90,
        ITEM_RESTORED: 91,
        ITEM_UPDATED: 92,
        ITEM_TAGS_UPDATED: 102,
        ITEM_STARRED: 103,
        ITEM_PERMISSION_CHANGED: 2050,
        ITEM_UPDATED_2: 5
    }),
    b.module("convoApp").factory("Likes", ["ServerComm", "$q", "rtcNotificationManager", "RTCNotification", "Comments", "userInfo", function(a, b, c, d, e, g) {
        c.addListener(f.rtc.PubsubEvents.NOTIFICATION_RECEIVE, function(a) {
            var b = a.notification
              , a = b.data;
            if (b.type == d.RESOURCE_LIKE || b.type == d.RESOURCE_UNLIKE || b.type == d.COMMENT_LIKE || b.type == d.COMMENT_UNLIKE) {
                if (b.type == d.COMMENT_LIKE || b.type == d.COMMENT_UNLIKE) {
                    var c = e.getCommentFromStore(a.conversation_uid, a.resource_id, a.app_instance_id);
                    if (!c)
                        return;
                    a.like_info.like_timestamp > c.like_info.like_timestamp && (e.updateCommentLikeInfoReceivedOnRTCNotification(c, a.like_info),
                    b.type == d.COMMENT_LIKE ? h.trigger("commentLikedByRemoteUser", a) : h.trigger("commentUnlikedByRemoteUser", a))
                } else
                    (b.type == d.RESOURCE_LIKE || b.type == d.RESOURCE_UNLIKE) && (b.type == d.RESOURCE_LIKE ? h.trigger("resourceLikedByRemoteUser", a) : h.trigger("resourceUnlikedByRemoteUser", a));
                console.log("RECEIVED: RTCNotification.RESOURCE/COMMENT_LIKE/UNLIKE"),
                h.trigger("likeRTCChangeReceived")
            }
        });
        var h = {
            likeResource: function(e, f, h, i, j, k, l, m) {
                var n = {
                    feed_id: e,
                    resource_id: f,
                    app_instance_id: h,
                    action: i,
                    path_id: f,
                    path_names: '["' + j + '"]',
                    path_types: '["' + k + '"]'
                }
                  , o = b.defer()
                  , p = a.post("like", n);
                return p.success(function(a, b) {
                    o.resolve(a);
                    var e = {};
                    e.like_timestamp = a.likeTimestamp,
                    e.likes_count = a.like_count;
                    var j = {
                        resource_id: f,
                        app_instance_id: h,
                        path_ids: f
                    };
                    j.user = {},
                    j.user[g.user_id] = _.extend({
                        accessible: !0
                    }, _.omit(g.getUserInfo(), "user_id")),
                    m && (e.sub_res_likes_count = m);
                    var k = new d;
                    "like" == i ? (j.last_liked_by = g.user_id,
                    e.liked_by = g.user_id,
                    k.type = d.RESOURCE_LIKE) : (j.last_unliked_by = g.user_id,
                    e.liked_by = a.likedBy,
                    k.type = d.RESOURCE_UNLIKE),
                    j.like_info = e,
                    k.data = j,
                    c.send(k),
                    console.log("SENT: RTCNotification.RESOURCE_LIKE_OR_UNLIKE")
                }),
                o.promise
            },
            likeResourceNewApi: function(e, f, h, i, j, k) {
                var l = {
                    method: "like",
                    path_id: e,
                    resource_id: f,
                    app_instance_id: h,
                    path_names: i,
                    path_types: j,
                    created_by: k
                }
                  , m = b.defer()
                  , n = a.post("likes", l);
                return n.success(function(a, b) {
                    m.resolve(a);
                    var i = {};
                    i.like_timestamp = a.data.like_timestamp,
                    i.likes_count = a.data.like_count,
                    i.liked_by = g.user_id;
                    var j = {
                        resource_id: f,
                        app_instance_id: h,
                        path_ids: e,
                        last_liked_by: g.user_id,
                        like_info: i
                    };
                    j.user = {},
                    j.user[g.user_id] = _.extend({
                        accessible: !0
                    }, _.omit(g.getUserInfo(), "user_id"));
                    var k = new d;
                    k.type = d.RESOURCE_LIKE,
                    k.data = j,
                    c.send(k),
                    console.log("SENT: RTCNotification.RESOURCE_LIKE_OR_UNLIKE")
                }),
                m.promise
            },
            likeConversation: function(e, f, h, i) {
                var j = {
                    conversation_id: e,
                    action: i
                }
                  , k = b.defer()
                  , l = a.post("like", j);
                return l.success(function(a, b) {
                    k.resolve(a);
                    var j = {};
                    j.likes_count = a.like_count,
                    j.like_timestamp = a.like_timestamp;
                    var l = {
                        conversation_uid: e,
                        resource_id: f,
                        app_instance_id: h
                    };
                    l.user = {},
                    l.user[g.user_id] = _.extend({
                        accessible: !0
                    }, _.omit(g.getUserInfo(), "user_id"));
                    var m = new d;
                    "like" == i ? (j.liked_by = g.user_id,
                    l.last_liked_by = g.user_id,
                    m.type = d.COMMENT_LIKE) : (j.liked_by = a.liked_by,
                    l.last_unliked_by = g.user_id,
                    m.type = d.COMMENT_UNLIKE),
                    l.like_info = j,
                    m.data = l,
                    c.send(m),
                    console.log("SENT: RTCNotification.COMMENT_LIKE_OR_UNLIKE")
                }),
                k.promise
            },
            fetchLikesDetails: function(c, d, e, f, g, h) {
                var i = {};
                i = h ? {
                    conversation_id: h
                } : {
                    feed_id: c,
                    resource_id: d,
                    path_id: d,
                    app_instance_id: f,
                    path_names: '["' + g + '"]',
                    path_types: '["' + e + '"]'
                },
                i.action = "getUsers";
                var j = b.defer()
                  , k = a.post("like", i);
                return k.success(function(a, b) {
                    j.resolve(a)
                }),
                j.promise
            },
            getLikeInfo: function(c, d, e, f, g) {
                var h = {
                    method: "getLikeInfo",
                    path_id: d,
                    resource_id: e,
                    app_instance_id: f,
                    include_sub_resources: g
                };
                c && (h.feed_id = c);
                var i = b.defer()
                  , j = a.post("likes", h);
                return j.success(function(a, b) {
                    i.resolve(a)
                }),
                i.promise
            },
            getLikesDetailWithUsersInfo: function(c, d, e, f, g) {
                var h;
                h = g ? {
                    conversation_uid: g
                } : {
                    path_id: c,
                    resource_id: d,
                    app_instance_id: e,
                    include_sub_resources: f || null 
                },
                h.method = "getLikeDetails";
                var i = b.defer()
                  , j = a.post("likes", h);
                return j.success(function(a, b) {
                    i.resolve(a)
                }),
                i.promise
            },
            unlikeResource: function(e, f, h) {
                var i = {
                    method: "unlike",
                    path_id: e,
                    resource_id: f,
                    app_instance_id: h
                }
                  , j = b.defer()
                  , k = a.post("likes", i);
                return k.then(function(a, b) {
                    j.resolve(a);
                    var i = {};
                    i.like_timestamp = a.data.data.like_timestamp,
                    i.likes_count = a.data.data.like_count,
                    i.liked_by = a.data.data.liked_by;
                    var k = {
                        resource_id: f,
                        app_instance_id: h,
                        path_ids: e,
                        last_unliked_by: g.user_id,
                        like_info: i
                    };
                    k.user = {},
                    k.user[g.user_id] = _.extend({
                        accessible: !0
                    }, _.omit(g.getUserInfo(), "user_id"));
                    var l = new d;
                    l.type = d.RESOURCE_UNLIKE,
                    l.data = k,
                    c.send(l),
                    console.log("SENT: RTCNotification.RESOURCE_LIKE_OR_UNLIKE")
                }),
                j.promise
            }
        };
        return _.extend(h, Backbone.Events),
        h
    }
    ]),
    b.module("convoApp").directive("cnvLinksApp", ["Likes", "userInfo", "Users", "snippetArrow", "textSelections", "loader", "appStateInfo", function(a, b, c, d, e, f, g) {
        return {
            restrict: "AE",
            priority: 0,
            scope: !1,
            templateUrl: "links/cnvLinksApp.tpl.html",
            compile: function(a, b, c) {
                return f.loadScript(f.SCRIPTS.GALLERY_VENDOR),
                function(b, c, d, e) {
                    function f(c) {
                        var d = !1;
                        a.find(".links-app-webview").find(c.target).length && (d = !0),
                        d && g.isAppInCompactView() && (b.enableCommentsPanel.active = !1,
                        b.slideCommentsPanelToRight())
                    }
                    document.addEventListener("click", f),
                    b.$on("$destroy", function() {
                        document.removeEventListener("click", f)
                    }),
                    b.registerEvent = function() {
                        function a() {
                            e = !0,
                            c.find(".submenu2").css("display", "block")
                        }
                        function b() {
                            e = !1,
                            setTimeout(function() {
                                e || c.find(".submenu2").css("display", "none")
                            }, 150)
                        }
                        var d = c.find(".sharing_preferences");
                        d.on("mouseenter", a),
                        d.on("mouseleave", b);
                        var e = !1
                    }
                }
            },
            controller: ["$scope", "$timeout", "linksAppDataProvider", "$rootScope", "accountInfo", "utils", "mixpanelService", "Feed", "Comments", "itemService", "bannerService", function(c, f, h, i, j, k, l, m, n, o, p) {
                function q() {
                    s(!0),
                    c.$emit("requestFullViewForApp", I)
                }
                function r() {
                    J.onItemMovedToTrashByRemoteUser = c.currentAppCtrl.onItemMovedToTrashByRemoteUser,
                    J.onItemRestoredByRemoteUser = c.currentAppCtrl.onItemRestoredByRemoteUser,
                    J.onItemSharingInfoUpdatedByRemoteUser = c.currentAppCtrl.onItemSharingInfoUpdatedByRemoteUser,
                    J.onItemTagsUpdatedByRemoteUser = c.currentAppCtrl.onItemTagsUpdatedByRemoteUser,
                    J.onItemPermissionsUpdatedByRemoteUser = x,
                    g.isAppInCompactView() && (c.enableCommentsPanel.active = !1),
                    setTimeout(c.registerEvent, 100)
                }
                function s(a) {
                    if (console.log("link tab navigate()"),
                    g.isAppInCompactView() && c.tab.resourceLink.collaborationInfo && c.tab.resourceLink.collaborationInfo.commentId) {
                        var b = m.getFeedIdOfResource(c.tab.resourceLink.resourcePath.appInstance.uid, c.tab.resourceLink.resourcePath.hierarchy[0].uid);
                        n.getComment(b, c.tab.resourceLink.resourcePath.hierarchy[0].uid, c.tab.resourceLink.resourcePath.appInstance.uid, c.tab.resourceLink.collaborationInfo.commentId).then(function(a) {
                            !a || !a.resource_link || a.resource_link.collaboration_info && a.resource_link.collaboration_info.snippet_data || (setTimeout(function() {
                                c.enableCommentsPanel.active = !0,
                                c.$$phase || c.$digest()
                            }, 0),
                            c.slideCommentsPanelToLeft())
                        })
                    }
                    2 == I.resourceLink.resourcePath.hierarchy.length || 1 == I.resourceLink.resourcePath.hierarchy.length && I.resourceLink.commentFileId ? (c.openWebview = !1,
                    c.currentAppCtrl = c.galleryCtrl,
                    c.currentAppCtrl.getItemData = t,
                    c.MP_DATA_SOURCE.currentSubApp = "gallery") : (c.openWebview = !0,
                    c.currentAppCtrl = c.webViewCtrl,
                    c.MP_DATA_SOURCE.currentSubApp = "link",
                    c.currentAppCtrl.appInitialized = function() {
                        c.linkData && (d.getSnippetOffset = c.currentAppCtrl.getSnippetOffset,
                        d.getCommentOffset = c.cnvInAppCommentsCtrl.getCommentOffset,
                        d.appContainer = ".links-app-webview",
                        c.currentAppCtrl.setLinkData(c.linkData))
                    }
                    ),
                    c.tab.resourceLink.collaborationInfo ? c.currentAppCtrl.commentId = c.tab.resourceLink.collaborationInfo.commentId : c.currentAppCtrl.commentId = null ,
                    setTimeout(function() {
                        c.cnvInAppCommentsCtrl.initialize()
                    }, 0)
                }
                function t() {
                    return c.linkData
                }
                function u(a) {
                    c.relatedPermissions.canChangePermissions = a.item.can_change_permissions,
                    c.relatedPermissions.permissions = a.item.permissions,
                    c.relatedPermissions.loggedInUserPermissions = a.item.logged_in_user_permissions,
                    c.relatedPermissions.canEdit = a.item.logged_in_user_permissions.checkBitAt(3),
                    c.relatedPermissions.canComment = a.item.logged_in_user_permissions.checkBitAt(2),
                    c.relatedPermissions.canView = a.item.logged_in_user_permissions.checkBitAt(1)
                }
                function v(a) {
                    c.openWebview && (d.getSnippetOffset = c.webViewCtrl.getSnippetOffset,
                    d.getCommentOffset = c.cnvInAppCommentsCtrl.getCommentOffset,
                    d.appContainer = ".links-app-webview"),
                    c.linkData = h.renderLinkDataResponse(a),
                    u(c.linkData),
                    c.cnvInAppCommentsCtrl.itemDataReceivedFromServer && c.cnvInAppCommentsCtrl.itemDataReceivedFromServer(c.linkData),
                    c.currentAppCtrl.setLinkData(c.linkData)
                }
                function w(a) {
                    c.linkData = h.renderLinkDataResponse(a),
                    u(c.linkData),
                    c.currentAppCtrl.initialized && c.currentAppCtrl.itemDataPolledFromServer(c.linkData),
                    c.cnvInAppCommentsCtrl.itemDataPolledFromServer && c.cnvInAppCommentsCtrl.itemDataPolledFromServer(c.linkData)
                }
                function x() {
                    c.currentAppCtrl && c.currentAppCtrl.onItemPermissionsUpdatedByRemoteUser && c.currentAppCtrl.onItemPermissionsUpdatedByRemoteUser(),
                    c.cnvInAppCommentsCtrl && c.cnvInAppCommentsCtrl.onItemPermissionsUpdatedByRemoteUser && c.cnvInAppCommentsCtrl.onItemPermissionsUpdatedByRemoteUser()
                }
                function y(a) {
                    c.likesInfo = a.data || {},
                    c.cnvInAppCommentsCtrl.setItemLikesInfo(a)
                }
                function z() {
                    var d = c.tab.resourceLink.resourcePath.appInstance.uid
                      , e = c.tab.resourceLink.resourcePath.hierarchy[0].uid
                      , f = c.tab.resourceLink.title;
                    c.likesInfo || (c.likesInfo = {}),
                    c.likesInfo.last_liked_by = b.getUserId(),
                    c.likesInfo.liked_by_me = !0,
                    c.likesInfo.like_count = c.likesInfo.like_count ? c.likesInfo.like_count : 1,
                    c.likesInfo.users || (c.likesInfo.users = {}),
                    c.likesInfo.users[b.getUserId()] = b.getUserInfo(),
                    c.likesInfo.users[b.getUserId()].accessible = !0;
                    var g = a.likeResource(-1, e, d, "like", f, null );
                    g.then(function(b, d) {
                        c.tab.appContCtrl.immediatePollForItemLikesInfo(),
                        a.trigger("resourceLikedUnliked")
                    }),
                    c.cnvInAppCommentsCtrl.setItemLikesInfo({
                        data: c.likesInfo
                    })
                }
                function A() {
                    var b = c.tab.resourceLink.resourcePath.appInstance.uid
                      , d = c.tab.resourceLink.resourcePath.hierarchy[0].uid
                      , e = c.tab.resourceLink.title
                      , f = a.likeResource(-1, d, b, "unlike", e, null );
                    f.then(function(b, d) {
                        c.likesInfo.liked_by_me = !1,
                        c.tab.appContCtrl.immediatePollForItemLikesInfo(),
                        a.trigger("resourceLikedUnliked")
                    })
                }
                function B() {
                    console.log("link tab activated")
                }
                function C() {
                    console.log("link tab deactivated")
                }
                function D() {
                    console.log("link tab closing")
                }
                function E(a) {
                    var b, d = c.tab.resourceLink.resourcePath.appInstance.uid, e = c.tab.resourceLink.resourcePath.hierarchy[0].uid;
                    if (c.tab.resourceLink.resourcePath.hierarchy[1] && (b = c.tab.resourceLink.resourcePath.hierarchy[1].uid),
                    !(a.resource_id != e || b && b != a.path_ids.split(",")[1] || d != a.app_instance_id)) {
                        var f = !1;
                        a.user || (f = !0),
                        f ? c.tab.appContCtrl.immediatePollForItemLikesInfo() : (c.likesInfo || (c.likesInfo = {}),
                        c.likesInfo.last_liked_by = a.like_info.liked_by,
                        c.likesInfo.like_count = a.like_info.likes_count,
                        c.likesInfo.users || (c.likesInfo.users = {}),
                        c.likesInfo.users[a.last_liked_by] = a.user[a.last_liked_by],
                        c.cnvInAppCommentsCtrl.setItemLikesInfo({
                            data: c.likesInfo
                        }))
                    }
                }
                function F(a) {
                    var b, d = c.tab.resourceLink.resourcePath.appInstance.uid, e = c.tab.resourceLink.resourcePath.hierarchy[0].uid;
                    if (c.tab.resourceLink.resourcePath.hierarchy[1] && (b = c.tab.resourceLink.resourcePath.hierarchy[1].uid),
                    !(a.resource_id != e || b && b != a.path_ids.split(",")[1] || d != a.app_instance_id)) {
                        var f = !1;
                        a.user || (f = !0),
                        f ? c.tab.appContCtrl.immediatePollForItemLikesInfo() : (c.likesInfo || (c.likesInfo = {}),
                        c.likesInfo.last_liked_by = a.like_info.liked_by,
                        c.likesInfo.like_count = a.like_info.likes_count,
                        c.likesInfo.users || (c.likesInfo.users = {}),
                        c.likesInfo.users.hasOwnProperty(a.last_unliked_by) && delete c.likesInfo.users[a.last_unliked_by],
                        c.cnvInAppCommentsCtrl.setItemLikesInfo({
                            data: c.likesInfo
                        }))
                    }
                }
                function G() {
                    c.enableCommentsPanel.active && (c.enableCommentsPanel.active = !1,
                    i.$emit("SnippetArrow:destroyAllInAppCompactView"),
                    c.$$Phase || c.$digest())
                }
                function H() {
                    c.removeCommentsPanelSlideClasses()
                }
                var I = c.tab;
                a.on("resourceLikedByRemoteUser", E),
                a.on("resourceUnlikedByRemoteUser", F),
                g.on("appSwitchedToCompactView", G),
                g.on("appSwitchedToNormalView", H),
                c.$on("$destroy", function() {
                    a.off("resourceLikedByRemoteUser", E),
                    a.off("resourceUnlikedByRemoteUser", F),
                    g.off("appSwitchedToCompactView", G),
                    g.off("appSwitchedToNormalView", H),
                    e.rmAllSelections(),
                    K()
                }),
                c.cnvInAppCommentsCtrl = {},
                c.cnvInAppCommentsCtrl.getItemData = t,
                c.enableCommentsPanel = {
                    active: !0
                },
                c.likesInfo = {},
                c.relatedPermissions = {
                    canEdit: !1,
                    canComment: !1,
                    canView: !1
                },
                c.IS_STARTER_NETWORK = j.getAccountLevel() === j.ACCOUNT_LEVELS.STARTER,
                c.MP_DATA_SOURCE = {},
                c.isGuest = b.isGuestUser();
                var J = I.appContCtrl.appCtrl;
                J.navigate = s,
                J.activated = B,
                J.deactivated = C,
                J.closing = D,
                J.itemDataReceivedFromServer = v,
                J.itemDataPolledFromServer = w,
                J.setItemLikesInfo = y,
                J.initialized = !0,
                c.webViewCtrl = {
                    initialized: !1
                },
                0 != j.getAccountImageType() ? c.networkLogo = j.getAccountImageUrl() : c.networkLogo = k.getCompanyDefaultLogo(),
                c.slideCommentsPanelToRight = function() {
                    c.slideCommentsToRight = !0,
                    c.slideCommentsToLeft = !1
                }
                ,
                c.slideCommentsPanelToLeft = function() {
                    c.slideCommentsToRight = !1,
                    c.slideCommentsToLeft = !0
                }
                ,
                c.removeCommentsPanelSlideClasses = function() {
                    c.slideCommentsToRight && (c.slideCommentsToRight = !1),
                    c.slideCommentsToLeft && (c.slideCommentsToLeft = !1)
                }
                ,
                c.showHideCommentsPanel = function() {
                    c.enableCommentsPanel.active ? (g.isAppInCompactView() ? c.slideCommentsPanelToRight() : i.$emit("SnippetArrow:destroyAll"),
                    setTimeout(function() {
                        c.enableCommentsPanel.active = !1,
                        c.$$phase || c.$digest()
                    }, 0),
                    l.trackEvent(l.CLICK_HIDE_PANEL)) : (setTimeout(function() {
                        c.enableCommentsPanel.active = !0,
                        c.$$phase || c.$digest()
                    }, 0),
                    g.isAppInCompactView() && c.slideCommentsPanelToLeft())
                }
                ,
                c.commentsCountClick = function() {
                    c.enableCommentsPanel.active ? setTimeout(c.cnvInAppCommentsCtrl.focusOnCommentsEditor, 0) : (setTimeout(function() {
                        c.enableCommentsPanel.active = !0,
                        c.$$phase || c.$digest()
                    }, 0),
                    g.isAppInCompactView() && c.slideCommentsPanelToLeft(),
                    setTimeout(function() {
                        c.cnvInAppCommentsCtrl.focusOnCommentsEditor()
                    }, 500))
                }
                ,
                c.changePermissions = function(a) {
                    if (c.webViewCtrl.headerData || c.webViewCtrl.headerData.initialized) {
                        var b = o.changePermissions(a, c.tab.resourceLink.resourcePath.appInstance.uid, c.tab.resourceLink.resourcePath.hierarchy[0].uid);
                        b.then(function(a) {
                            c.linkData.item.permissions = a.data.item.permissions,
                            c.linkData.item.logged_in_user_permissions = a.data.item.logged_in_user_permissions,
                            u(c.linkData),
                            c.webViewCtrl.updateHeaderData(),
                            c.cnvInAppCommentsCtrl && c.cnvInAppCommentsCtrl.onItemPermissionsUpdatedByThisUser && c.cnvInAppCommentsCtrl.onItemPermissionsUpdatedByThisUser(),
                            c.$broadcast("render"),
                            p.showBanner("Permissions updated")
                        })
                    }
                }
                ,
                c.webViewCtrl.onAppInitialized = r,
                c.likeButtonClick = function() {
                    c.likesInfo.liked_by_me ? A() : z()
                }
                ,
                c.$on("setItemDirty", function() {
                    c.$broadcast("render")
                }),
                c.$on("embedSnippetImage", function(a, b) {
                    var d = 500;
                    c.enableCommentsPanel.active ? d = 0 : c.$evalAsync(function() {
                        setTimeout(function() {
                            c.enableCommentsPanel.active = !0,
                            c.$$phase || c.$digest()
                        }, 0),
                        g.isAppInCompactView() && c.slideCommentsPanelToLeft()
                    }),
                    setTimeout(function() {
                        b.fileViewerTextAnnotation && (c.cnvInAppCommentsCtrl.enableSnippetsInComment = !0),
                        c.cnvInAppCommentsCtrl.embedSnippetImage(b)
                    }, d)
                }),
                c.$on("Notes:ClearSnippet", function(a) {
                    c.cnvInAppCommentsCtrl.clearSnippetImage()
                }),
                c.$on("snippetImagePosted", function(a) {
                    c.currentAppCtrl && c.currentAppCtrl.snippetImagePosted && c.currentAppCtrl.snippetImagePosted(a)
                });
                var K = i.$on("Editor:selectText", function(a, b, e) {
                    function f() {
                        setTimeout(function() {
                            c.currentAppCtrl.selectText && c.currentAppCtrl.selectText(b)
                        }, 100)
                    }
                    c.linkData ? d.isVisible(e) ? c.currentAppCtrl.removeSnippetsForComment(c.tab.resourceLink.collaborationInfo.commentId) : (b.commentId = e,
                    f()) : c.tab.appContCtrl.getItemDataFromServerPromise.then(f),
                    setTimeout(function() {
                        g.isAppInCompactView() && (c.enableCommentsPanel.active = !1,
                        c.slideCommentsPanelToRight(),
                        c.$$phase || c.$digest())
                    }, 0)
                });
                q()
            }
            ]
        }
    }
    ]),
    b.module("convoApp").factory("Link", ["ServerComm", "$rootScope", "$q", "$interval", function(a, b, c, d) {
        var e = {}
          , f = {
            getLinkPostStatus: function(b) {
                return a.postx("link", {
                    item_id: b,
                    _method_: "check_link_post_status"
                })
            },
            relativeToAbsolute: function(a, b) {
                var c = new URI(b)
                  , d = new URI(a);
                return d = d.resolve(c),
                d.toString()
            },
            getLink: function(b) {
                var d = {
                    method: "resolveLink",
                    url: b
                }
                  , f = c.defer()
                  , g = a.post("link2", d);
                return g.success(function(a, b) {
                    e.ResponseData = a,
                    e.ResponseStatus = b,
                    f.resolve(e)
                }),
                g.error(function(a, b) {
                    e.ResponseData = a,
                    e.ResponseStatus = b,
                    f.resolve(e)
                }),
                f.promise
            },
            getLinkDetails: function(b) {
                var c = {
                    item_id: b
                }
                  , d = a.get("link2", {
                    params: c
                });
                return d
            },
            createLink: function(d, e, g, h, i, j, k, l, m) {
                var n = null 
                  , o = c.defer();
                e.images_urls.length && (n = f.relativeToAbsolute(e.images_urls[g], d));
                var p = {
                    method: "shareLink",
                    url: d,
                    mappings: JSON.stringify(i),
                    image_url: n,
                    auto_image: 0,
                    title: e.title,
                    preview_text: e.preview_text,
                    comment: h,
                    draft: j,
                    tags: k,
                    permissions: m
                };
                return l && (p.revision_no = l),
                a.postx("link2", p).then(function(a) {
                    200 == a.status && a.data ? (o.resolve(a),
                    b.$broadcast("Link:newLinkCreated")) : o.reject(a)
                }, function(a) {
                    o.reject(a)
                }),
                o.promise
            }
        };
        return f
    }
    ]),
    b.module("convoApp").directive("cnvWebView", ["UploadService", "utils", "textSelections", "$rootScope", "mixpanelService", "loader", "datetimeService", "$interval", "userInfo", function(b, c, d, e, f, g, h, i, j) {
        return {
            restrict: "A",
            scope: !0,
            link: function(b, k, l) {
                function m(a) {
                    e.$emit("SnippetArrow:repositionAll")
                }
                function n() {
                    v && (v.parentNode.removeChild(v),
                    v = null ,
                    w = null ,
                    b.$emit("Notes:ClearSnippet"))
                }
                function o() {
                    n(),
                    d.rmAllSelections()
                }
                function p() {
                    o(),
                    d.rmSelection()
                }
                function q(a) {
                    return a.target !== v || a.target.parentNode !== v
                }
                function r() {
                    a.getSelection ? a.getSelection().removeAllRanges() : document.selection && document.selection.empty()
                }
                function s(a) {
                    if (x || !q(a) || b.linkData.item && !b.linkData.item.logged_in_user_permissions.checkBitAt(2))
                        return void (x = !1);
                    o(),
                    d.rmAllSelections();
                    var e = d.getSelection("body");
                    if (e && !v && e.text.trim()) {
                        v = d.showIcoAboveSel(k[0].querySelector(".note-resize-wrapper"), e.sel.getRangeAt(0).nativeRange);
                        var f = function(a) {
                            a.target.classList.contains("cross") ? (x = !0,
                            o(),
                            r()) : (x = !1,
                            w = e.sel,
                            delete e.sel,
                            d.rmSelection(),
                            d.highlighter.applyToSelection())
                        }
                        ;
                        v.addEventListener("mousedown", f, !0);
                        var g = function(a) {
                            var d = !1;
                            if (!x) {
                                d = !0;
                                var f = {};
                                f.resource_id = b.resourceId,
                                f.resource_type = b.resourceType,
                                f.fileViewerTextAnnotation = !0,
                                f.snippetData = {},
                                f.snippetData.type = "scrybe.components.snippet.NotesSnippet",
                                f.snippetData.data = e,
                                f.snippetData.data.snippetId = c.generateUniqueId(),
                                f.resourceLinkData = {},
                                f.resourceLinkData.app_instance = {},
                                f.resourceLinkData.app_instance.created_by = b.linkData.item.created_by,
                                f.resourceLinkData.app_instance.title = b.linkData.item.title,
                                f.resourceLinkData.app_instance.uid = b.appInstanceId,
                                f.resourceLinkData.app_instance.type = "APPINSTANCE",
                                f.resourceLinkData.app_instance.version = "-1",
                                f.resourceLinkData.app_instance.data = "",
                                f.resourceLinkData.hierarchy = [{}],
                                f.resourceLinkData.hierarchy[0].uid = b.resourceId,
                                f.resourceLinkData.hierarchy[0].type = b.resourceType,
                                f.resourceLinkData.hierarchy[0].title = b.linkData.item.title,
                                f.resourceLinkData.hierarchy[0].version = 1,
                                f.resourceLinkData.hierarchy[0].data = null ,
                                f.resourceLinkData.hierarchy[0].created_by = b.linkData.item.created_by,
                                x = !0,
                                b.$emit("embedSnippetImage", f),
                                o()
                            }
                            d && (a.preventDefault(),
                            a.stopPropagation())
                        }
                        ;
                        v.addEventListener("click", g)
                    } else
                        d.rmSelection(),
                        b.$emit("Notes:ClearSnippet"),
                        b.oldSelectionData = null 
                }
                b.isAdminMode = j.isAdminMode();
                var t = 6e4
                  , u = k.find(".note-resize-wrapper");
                b.$on("setItemDirty", function() {
                    b.$broadcast("render")
                }),
                u.scroll(m);
                var v, w, x;
                b.webViewCtrl.snippetImagePosted = p,
                k[0].querySelector(".note-wrapper").addEventListener("mouseup", function(a) {
                    setTimeout(function() {
                        s(a)
                    }, 0)
                }, !0),
                b.webViewCtrl.selectText = function(a) {
                    function c() {
                        return j.textContent
                    }
                    function h(c) {
                        a.commentId || (a.commentId = b.tab.resourceLink.collaborationInfo.commentId),
                        g.loadScript(g.SCRIPTS.GALLERY_VENDOR).then(function() {
                            e.$emit("SnippetArrow:draw", a.commentId, a)
                        }),
                        f.trackEvent(f.ANNOTATION_PLAYBACK, {
                            "Snippet Type": "Text",
                            Via: "Post View Comment Panel"
                        })
                    }
                    function i(a) {}
                    var j = k.find(".body")[0]
                      , l = {
                        data: a,
                        nodes: j,
                        scrollContainer: k[0].querySelector(".note-resize-wrapper"),
                        highlight: !0,
                        highlightRemoveTime: 8e3,
                        selectionOffset: 100,
                        getContent: c,
                        complete: h,
                        failure: i
                    };
                    d.selectText("nested", l)
                }
                ,
                b.webViewCtrl.removeSnippetsForComment = function(a) {
                    d.rmSelectionById(a),
                    e.$emit("SnippetArrow:destroy", a)
                }
                ,
                b.updateServerNowTimestampInScope = function() {
                    b.server_now_timestamp = h.getServerTimestamp()
                }
                ,
                b.updateServerNowTimestampInScope();
                var y = i(b.updateServerNowTimestampInScope, t);
                b.$watch("server_now_timestamp", function() {
                    setTimeout(function() {
                        b.$broadcast("render_date")
                    }, 0)
                }),
                b.$on("$destroy", function() {
                    i.cancel(y)
                })
            },
            controller: ["$scope", "$sce", "Note", "Likes", "userInfo", "usersGroupsListProvider", "hashtagsProvider", "alertsService", "itemService", "bannerService", "Comments", "config", "getResourceLinkUrlFilter", "getFeedItemLikeInfoFilter", "Feed", function(a, b, e, g, i, j, k, l, m, n, o, p, q, r, s) {
                function t(a) {
                    var b = D.tab.appContCtrl.immediatePollForItemData();
                    return b.then(function() {}),
                    b
                }
                function u() {
                    o.getComments_newApi(null , D.resourceId, D.appInstanceId, !0, 0, 3).then(function(a) {
                        F.headerData.totalComments = a.total_comments,
                        D.$broadcast("render"),
                        o.on("commentsUpdated", function(b) {
                            b.resource_id == D.resourceId && b.app_instance_id == D.appInstanceId && (F.headerData.totalComments = a.total_comments,
                            D.$broadcast("render"))
                        })
                    }),
                    F.onAppInitialized()
                }
                function v(a) {
                    var b = /(videos|video|channels|staffpicks|\.com)\/([\d]+)/
                      , c = a.match(b);
                    return c ? c[2] : !1
                }
                function w(a) {
                    var b = /^.*((youtu.be\/)|(v\/)|(\/u\/\w\/)|(embed\/)|(watch\?))\??v?=?([^#\&\?]*).*/
                      , c = a.match(b);
                    return c && 11 == c[7].length ? c[7] : !1
                }
                function x(b) {
                    D.linkData = b,
                    B(),
                    a.updateServerNowTimestampInScope(),
                    D.$broadcast("render")
                }
                function y() {
                    if (F.headerData.initialized) {
                        var a = "home/components/cnvSharePostWidget/cnvSharePostWidget.tpl.html";
                        controller = "cnvSharePostWidgetCtrl";
                        var b = {
                            sharingInfo: function() {
                                return D.linkData.sharedWithListItems
                            },
                            preventProcessSharingInfo: function() {
                                return !0
                            },
                            submitAnyway: function() {
                                return !1
                            }
                        };
                        l.customModal(a, controller, b).result.then(function(a) {
                            for (var b = [], c = 0; c < a.length; c++) {
                                var d = {
                                    published_to: a[c].id,
                                    type: a[c].type,
                                    access_level: "ALL"
                                };
                                b.push(d)
                            }
                            var e = m.updateSharingInfo(null , b, D.appInstanceId, D.resourceId);
                            e.then(function(a) {
                                console.log("Sharing Info Updated."),
                                t()
                            }),
                            n.showBanner_promise(e, "Sharing...", "Shared", "Error... try again", !1, !1, e)
                        })
                    }
                }
                function z() {
                    if (F.headerData.initialized) {
                        var b = "home/components/cnvAddTagsWidget/cnvAddTagsWidget.tpl.html"
                          , c = "cnvAddTagsWidgetCtrl"
                          , d = {
                            tags: function() {
                                return D.linkData.item.tags || ""
                            }
                        };
                        l.customModal(b, c, d).result.then(function(b) {
                            for (var c = [], d = 0; d < b.length; d++)
                                c.push(b[d].label);
                            var e = m.updateTags(null , c.join(), D.appInstanceId, D.resourceId);
                            e.then(function(b) {
                                console.log("Tags Updated."),
                                D.linkData.item.tags = c.join(),
                                a.$broadcast("render")
                            }),
                            n.showBanner_promise(e, "Updating tags", "Tags updated", "Error... try again", !1, !1, e)
                        })
                    }
                }
                function A(a) {
                    return d.calcSelDimensions({
                        nodes: d.getSelectionNodesById(a.commentId)
                    })
                }
                function B() {
                    F.headerData.starred = D.linkData.item.starred,
                    F.headerData.likes_info = D.linkData.likes_info,
                    F.headerData.muted = D.linkData.item.muted,
                    F.headerData.deletable = D.linkData.item.deletable,
                    F.headerData.deleted = D.linkData.item.deleted,
                    F.headerData.restorable = D.linkData.item.restorable,
                    C()
                }
                function C() {}
                var D = a
                  , E = D.tab;
                a.isYTURL = !1,
                a.isVimeoURL = !1,
                a.IS_NATIVE = p.IS_NATIVE,
                D.active = !1,
                D.this_user = i.getUserId(),
                D.resourceId = E.resourceLink.resourcePath.hierarchy[0].uid,
                D.resourceType = E.resourceLink.resourcePath.hierarchy[0].type,
                D.appInstanceId = E.resourceLink.resourcePath.appInstance.uid,
                D.server_now_timestamp = h.getServerTimestamp();
                var F = a.webViewCtrl;
                F.itemDataPolledFromServer = x,
                F.headerData = {},
                F.initialized = !0,
                F.setLinkData = function(b) {
                    if (D.linkData = b,
                    D.active = !0,
                    B(),
                    F.headerData.initialized = !0,
                    a.isYTURL = D.linkData.item.source.toLowerCase().indexOf("youtube.com") > -1 || D.linkData.item.source.toLowerCase().indexOf("youtu.be") > -1 ? !0 : !1,
                    a.isVimeoURL = D.linkData.item.source.toLowerCase().indexOf("vimeo.com") > -1 ? !0 : !1,
                    a.isVimeoURL && (a.isVimeoURL = p.IS_NATIVE ? !1 : !0),
                    a.isYTURL) {
                        var c = p.IS_NATIVE ? 0 : 1
                          , d = w(D.linkData.item.source);
                        a.YTLink = "https://www.youtube.com/embed/" + d + "?version=3&enablejsapi=1&fs=" + c + "&html5=1"
                    } else if (a.isVimeoURL) {
                        var e = v(D.linkData.item.source);
                        a.vimeoLink = "https://player.vimeo.com/video/" + e + "?api=1"
                    }
                    if (D.$broadcast("render"),
                    null  !== F.commentId) {
                        var f = s.getFeedIdOfResource(D.tab.resourceLink.resourcePath.appInstance.uid, D.tab.resourceLink.resourcePath.hierarchy[0].uid);
                        o.getComment(f, D.tab.resourceLink.resourcePath.hierarchy[0].uid, D.tab.resourceLink.resourcePath.appInstance.uid, F.commentId).then(function(a) {
                            setTimeout(function() {
                                a.resource_link && a.resource_link.collaboration_info.snippet_data && F.selectText(a.resource_link.collaboration_info.snippet_data.data)
                            }, 100)
                        })
                    }
                }
                ,
                D.onAddMoreSharingInfoClick = function() {
                    y()
                }
                ,
                D.onAddMoreTagsClick = function() {
                    z()
                }
                ,
                D.commentCountClick = function() {}
                ,
                D.starPost = function() {
                    if (F.headerData.initialized) {
                        var a = m.starPost(D.appInstanceId, D.resourceId);
                        a.then(function(a) {
                            D.linkData.item.starred = 1,
                            B(),
                            D.$broadcast("render")
                        }),
                        f.trackEvent(f.STARRED_POST, {
                            via: "post viewer"
                        })
                    }
                }
                ,
                D.unstarPost = function() {
                    if (F.headerData.initialized) {
                        var a = m.unStarPost(D.appInstanceId, D.resourceId);
                        a.then(function(a) {
                            D.linkData.item.starred = 0,
                            B(),
                            D.$broadcast("render")
                        })
                    }
                }
                ,
                D.mutePost = function() {
                    if (F.headerData.initialized) {
                        var a = m.mutePost(D.appInstanceId, D.resourceId);
                        a.then(function(a) {
                            D.linkData.item.muted = 1,
                            B(),
                            D.$broadcast("render")
                        }),
                        n.showBanner_promise(a, "Muting post...", "Muted", "Error... click here to try again", !1, !1, a),
                        console.log("Mute post")
                    }
                }
                ,
                D.unmutePost = function() {
                    if (F.headerData.initialized) {
                        var a = m.unmutePost(D.appInstanceId, D.resourceId);
                        a.then(function(a) {
                            D.linkData.item.muted = 0,
                            B(),
                            D.$broadcast("render")
                        }),
                        n.showBanner_promise(a, "Unmuting post...", "Unmuted", "Error... click here to try again", !1, !1, a)
                    }
                }
                ,
                D.copyLink = function() {
                    c.copyToClipboard(p.CONVO_LINKS_BASE_URL + q(D.appInstanceId, [{
                        type: D.linkData.item.type,
                        uid: D.resourceId,
                        title: D.linkData.item.title
                    }], null , D.linkData.item.title).slice(1))
                }
                ,
                D.moveToTrash = function() {
                    if (F.headerData.initialized) {
                        var a = D.tab.appContCtrl.moveItemToTrash();
                        a.then(function(a) {
                            -1 == a.errorCode && (D.linkData.item.deleted = 1,
                            D.linkData.item.deletable = !0,
                            D.linkData.item.restorable = !0,
                            B(),
                            D.$broadcast("render"),
                            t())
                        })
                    }
                }
                ,
                D.deletePostPermanently = function() {
                    F.headerData.initialized && D.tab.appContCtrl.deleteItemPermanently()
                }
                ,
                D.restorePost = function() {
                    if (F.headerData.initialized) {
                        var a = m.restorePost(D.appInstanceId, D.resourceId);
                        a.then(function(a) {
                            -1 == a.errorCode && (D.linkData.item.deleted = 0,
                            D.linkData.item.deletable = !0,
                            D.linkData.item.restorable = !1,
                            B(),
                            D.$broadcast("render"),
                            t())
                        }),
                        n.showBanner_promise(a, "Restoring post...", "Restored", "Error... click here to try again", !1, !1, a)
                    }
                }
                ,
                D.likeInfoTooltipText = function(a) {
                    r({
                        resource_id: D.resourceId,
                        app_instance_id: D.appInstanceId,
                        like_info: D.linkData.likes_info
                    }, a)
                }
                ,
                F.onItemSharingInfoUpdatedByRemoteUser = function(a) {
                    t()
                }
                ,
                F.onItemTagsUpdatedByRemoteUser = function(b) {
                    D.linkData.item.tags = b,
                    a.$broadcast("render")
                }
                ,
                F.onItemMovedToTrashByRemoteUser = function(a) {
                    D.linkData.item.deleted = 1,
                    D.linkData.item.deletable = !1,
                    D.linkData.item.restorable = D.linkData.item.restorable,
                    B(),
                    D.$broadcast("render")
                }
                ,
                F.onItemRestoredByRemoteUser = function(a) {
                    D.linkData.item.deleted = 0,
                    D.linkData.item.deletable = D.linkData.item.deletable,
                    D.linkData.item.restorable = !1,
                    B(),
                    D.$broadcast("render")
                }
                ,
                F.onItemPermissionsUpdatedByRemoteUser = function() {
                    D.$broadcast("render")
                }
                ,
                F.addMoreSharingInfo = y,
                F.addMoreTags = z,
                F.starPost = D.starPost,
                F.unstarPost = D.unstarPost,
                F.onLikeClick = D.onLikeClick,
                F.mutePost = D.mutePost,
                F.unmutePost = D.unmutePost,
                F.copyLink = D.copyLink,
                F.moveToTrash = D.moveToTrash,
                F.restorePost = D.restorePost,
                F.deletePostPermanently = D.deletePostPermanently,
                F.getSnippetOffset = A,
                F.updateHeaderData = B,
                u(),
                F.appInitialized && F.appInitialized()
            }
            ]
        }
    }
    ]),
    b.module("convoApp").controller("LoginCtrl", ["$scope", "authService", "config", function(a, b, c) {
        function d(d, e, f) {
            var g = a.onLoginFormSubmit(d, e);
            a.signing_in = !0,
            a.sign_in_failed = !1,
            g.success(function(g, h) {
                a.signing_in = !1,
                200 == h ? f && 1 == g.type ? b.setUser(d, e) : c.IS_MENULET || b.deleteUser() : (c.IS_MENULET || b.deleteUser(),
                a.sign_in_failed = !0)
            }),
            g.error(function(d, e) {
                a.signing_in = !1,
                a.sign_in_failed = !0,
                c.IS_MENULET || b.deleteUser(),
                console.log("sign in failed")
            })
        }
        a.signing_in = !1,
        a.sign_in_failed = !1;
        var e = b.getUser();
        e && (a.user = e,
        d(e.email, e.password, !0)),
        a.onSubmit = function() {
            d(loginForm.username.value, $.md5(loginForm.password.value), loginForm.savePassword.checked)
        }
    }
    ]),
    b.module("convoApp").factory("loginResponseData", function() {
        function a(a) {
            d = a,
            e = d.xmpp_session_token
        }
        function b() {
            return d
        }
        function c() {
            return e
        }
        var d, e, f = {};
        return f.set = a,
        f.get = b,
        f.getXmppSessionToken = c,
        f
    }),
    b.module("convoApp").factory("Login", ["ServerComm", "config", function(a, b) {
        var c = {
            signIn: function(c, d) {
                var e = a.post("login", {
                    email: c,
                    pass: d,
                    version: b.APP_VERSION,
                    ct: "w2",
                    timezoneOffset: -(new Date).getTimezoneOffset()
                });
                return e
            },
            signOut: function() {
                var b = a.post("login", {
                    logout: !0
                });
                return b
            }
        };
        return c
    }
    ]),
    b.module("convoApp").controller("MainCtrl", ["$scope", "$rootScope", "accountInfo", "userInfo", "alertsService", "resourcesTabsManager", "homeViewStateInfo", "Comments", "Likes", "rtcNotificationManager", "RTCNotification", "itemService", "Note", "$window", "$location", "AppLinks", "Users", "Groups", "ServerComm", "feedDirtyInfo", "nativeCommBridge", "config", "appTabs", "chatAppContext", "appStateInfo", "serverPingService", "mixpanelService", "Feed", "advSearchService", "$timeout", "searchService", "adminService", function(b, d, e, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C, D, E, F, G, H, I) {
        function J(a, c) {
            var e = u.getGroup(a);
            e && "PUBLIC" != e.get("access") || (b.$broadcast("reRenderGroupView"),
            b.$broadcast("forcePollFeedRequest"),
            (!i.isHomeTabSelected() || d.filterInfo.filterApplied && d.filterInfo.filterLink.filter) && b.$broadcast("refetchMainFeedRequest"))
        }
        function K(a, c) {
            var d = i.isHomeTabSelected()
              , e = j.getState() === j.STATE_GROUP && j.getToFilter().value === a;
            i.isGroupSettingsTabSelected(a) ? (i.closeTab(i.getSelectedTab(), !0),
            c ? (e && r.path("/feed").search({}).hash(""),
            g.isAdminMode() || b.$broadcast("cnvFeed.removeFeedItemsSharedWithGroups", [a])) : (e && r.path("/feed").search({}).hash(""),
            g.isAdminMode() || b.$broadcast("cnvFeed.removeFeedItemsSharedWithGroups", [a]))) : c ? (e && (d ? r.path("/feed").search({}).hash("") : b.$broadcast("cnvFeed.clearFilter")),
            g.isAdminMode() || b.$broadcast("cnvFeed.removeFeedItemsSharedWithGroups", [a])) : (e && r.path("/feed").search({}).hash(""),
            g.isAdminMode() || b.$broadcast("cnvFeed.removeFeedItemsSharedWithGroups", [a]))
        }
        function L() {
            b.$broadcast("refreshImage"),
            t.off("usersUpdated", L)
        }
        function M() {
            var a = new n;
            a.type = n.UPDATE_FEED,
            m.send(a),
            console.log("SENT: RTCNotification.UPDATE_FEED")
        }
        function N() {
            var a = s.newResourceLink("13", [{
                uid: 0,
                type: "11"
            }], null , "Team Directory");
            return s.linkToUrl(a, !0)
        }
        function O() {
            var a = s.newResourceLink("100", [{
                uid: 0,
                type: "100"
            }], null , "Integrations");
            return s.linkToUrl(a, !0)
        }
        function P() {
            var a = s.newResourceLink("12", [{
                type: "9",
                uid: 0
            }, {
                type: "networkInformation",
                uid: 0
            }], null , "Network Information");
            return s.linkToUrl(a, !0)
        }
        function Q() {
            U(),
            B.setSigningOut(),
            b.destroyAppView(),
            z.disposeThisTab(),
            q.Intercom("shutdown"),
            y.IS_NATIVE && x.logoutApp(),
            q.location.href = y.LOGOUT_URL
        }
        function R(a) {
            if (U(),
            b.destroyAppView(),
            a) {
                var c = z.getThisTabIdx();
                console.error("tag:apptabs: reload app after delay or on app focus. thisTabIdx: " + c),
                V(c, function() {
                    console.log("tag:apptabs: reloading app after delay or on app focus"),
                    z.disposeThisTab(),
                    S(!1)
                })
            } else
                z.disposeThisTab(),
                S(!1)
        }
        function S(a) {
            console.error("initiateWindowReload()"),
            ba = !0,
            q.location.reload(a)
        }
        function T(a) {
            U(),
            B.setSwitchingNetwork(),
            b.destroyAppView(),
            z.disposeThisTab(),
            q.location.href = y.LOGIN_URL + "?a=" + encodeURIComponent(a)
        }
        function U() {
            v.startBlockingRequests(),
            m.disconnect(),
            A.disconnect(),
            z.disposeLastActiveTabManagementProcess()
        }
        function V(a, b) {
            function c() {
                console.log("tag:apptabs: MainCtrl.onAfterDelayOrAppFocus: on app focus"),
                clearTimeout(e),
                b()
            }
            var d = 4;
            d += Math.floor(15 * Math.random()),
            B.on("appFocus", c);
            var e = setTimeout(function() {
                console.error("tag:apptabs: MainCtrl.onAfterDelayOrAppFocus: on delay timeout. delay: " + d + "s"),
                B.off("appFocus", c),
                b()
            }, 1e3 * d)
        }
        function W() {
            console.log("user sign out click"),
            D.trackEvent(D.SIGN_OUT_CLICK, null , !0),
            setTimeout(function() {
                z.dispatchTabsEvent2("userSignOutClickInTab", null , !0),
                Q()
            }, 10)
        }
        function X(a) {
            h.alertModal("Get the latest Convo", "A new version of Convo is available now.<br><br>Every update of Convo includes improvement for speed and reliability.", "Get it now", function() {
                z.dispatchTabsEvent2("appUpdateAvailableAlertClickedInTab", a, !0),
                B.setRefreshingOnAppUpdateAvailable(),
                R()
            }, !0, !0)
        }
        function Y() {
            B.setRefreshingOnUserRemovedFromNetwork(),
            Q()
        }
        function Z(a, b, c) {
            D.trackEvent(D.CLICK_IN_LEFT_MENU, {
                Type: "Network Switch"
            }, !0),
            console.log("switch to network: " + c),
            z.dispatchTabsEvent2("switchToNetworkClickInTab", c, !0),
            T(c)
        }
        function aa() {
            b.$broadcast("reFetchFeed"),
            r.url("/feed")
        }
        var ba = !1;
        document.addEventListener("DOMContentLoaded", function() {
            console.log("DOMContentLoaded");
            try {
                console.log(((new Date).getTime() - localStorage.getItem("__time__appLoad")) / 1e3 + " sec"),
                localStorage.removeItem("__time__appLoad")
            } catch (a) {
                console.debug(a.stack)
            }
        }, !1),
        b.account_info = e,
        b.onBoarding_info = {},
        b.onBoarding_info.active = !0,
        b.onBoarding_info.preventInlineInsertCollapse = !1,
        b.user_info = g,
        j.init(b),
        i.init(b),
        d.redirectToLink && (i.openResource(d.redirectToLink),
        d.redirectToLink = null ),
        b.$on("$locationChangeStart", function(a) {
            var c = b.locationAppLink
        }),
        b.$on("resourceLinkChange", function(a, b) {
            i.openResource(b)
        }),
        b.$on("filterChange", function(a) {
            i.switchToHomeTab(function(b) {
                b || a.preventDefault()
            }, function() {
                a.preventDefault()
            })
        }),
        b.$on("goHome", function(a) {
            if (i.isHomeTabSelected()) {
                var c = b.filterInfo;
                c.filterApplied && c.filterLink.filter ? r.path("/feed").search({}).hash("title=My Feed") : b.$broadcast("pollFeedRequest", !1, "USER_ACTION: goHome"),
                $(q).scrollTop(0)
            } else
                i.selectHomeTab()
        }),
        b.$on("networkLogoClicked", function(a, c) {
            var d = c;
            if (d.ctrlKey || d.metaKey || i.isHomeTabSelected() || i.signalHomeTabToScrollToTopUponActivation(),
            d.ctrlKey || d.metaKey || !i.isHomeTabSelected())
                return !0;
            var e = b.filterInfo;
            e.filterApplied && e.filterLink.filter || (b.$broadcast("pollFeedRequest", !1, "USER_ACTION: networkLogoClicked"),
            $("html, body").animate({
                scrollTop: 0
            }, {
                duration: 400
            })),
            H.clearSearch(),
            F.closePanelWithoutAnim()
        }),
        b.tabsSortableOptions = {
            start: function(a, b) {
                1 == b.item.scope().tab.fixed && b.item.sortable.cancel()
            },
            update: function(a, c) {
                1 == c.item.scope().tab.fixed && c.item.sortable.cancel(),
                console.log(b.tabs)
            },
            axis: "x"
        },
        b.$on("videoPlayback:MinimizeVideo", function() {
            b.$broadcast("videoPlayback:MinimizeVideoIfFullScreen")
        }),
        b.$on("refreshFeed", function(a, c, d) {
            b.$broadcast("pollFeedRequest", c, d)
        }),
        b.$on("refetchMainFeedRequest", function() {
            b.$broadcast("refetchMainFeed")
        }),
        k.on("commentRTCChangeReceived", function() {
            b.$broadcast("pollFeedRequest", !1, "RTC: comment")
        }),
        k.on("commentAdded", function() {
            b.$broadcast("pollFeedRequest", !1, "FORCE: comment added")
        }),
        k.on("commentUpdated", function() {
            b.$broadcast("pollFeedRequest", !1, "FORCE: comment updated")
        }),
        k.on("commentDeleted", function() {
            b.$broadcast("pollFeedRequest", !1, "FORCE: comment deleted")
        }),
        l.on("likeRTCChangeReceived", function() {
            b.$broadcast("pollFeedRequest", !1, "RTC: like")
        }),
        l.on("resourceLikedUnliked", function() {
            b.$broadcast("pollFeedRequest", !1, "FORCE: like/unlike")
        }),
        o.on("itemMovedToTrash", function() {
            b.$broadcast("pollFeedRequest", !1, "FORCE: item trashed"),
            M()
        }),
        o.on("itemRestored", function() {
            b.$broadcast("pollFeedRequest", !1, "FORCE: item restored"),
            M()
        }),
        o.on("itemDeletedPermanently", function() {
            b.$broadcast("pollFeedRequest", !1, "FORCE: item deleted permanently"),
            M()
        }),
        o.on("itemSharingInfoUpdated", function() {
            b.$broadcast("pollFeedRequest", !1, "FORCE: item sharing info updated"),
            M()
        }),
        o.on("itemTagsUpdated", function() {
            b.$broadcast("pollFeedRequest", !1, "FORCE: item tags updated"),
            M()
        }),
        o.on("itemStarred", function() {
            b.$broadcast("pollFeedRequest", !1, "FORCE: item starred")
        }),
        o.on("itemUnstarred", function() {
            b.$broadcast("pollFeedRequest", !1, "FORCE: item unstarred")
        }),
        o.on("itemPermissionChanged", function() {
            b.$broadcast("pollFeedRequest", !1, "FORCE: item permissions updated"),
            M()
        }),
        p.on("noteFileDeleted", function() {
            b.$broadcast("pollFeedRequest", !1, "FORCE: note file deleted"),
            M()
        }),
        u.on("userRemovedFromGroupByRemoteUser", function(a, b) {
            b === g.getUserId() && K(a, !0)
        }),
        u.on("userRemovedFromGroup", function(a, b) {
            b === g.getUserId() && K(a, !1)
        }),
        u.on("groupJoinReqSentByRemoteUser", function(a, b) {
            b === g.getUserId() && J(a, !0)
        }),
        u.on("groupJoinReqSent", function(a, b) {
            b === g.getUserId() && J(a, !1)
        }),
        u.on("groupDeletedByRemoteUser", function(a) {
            K(a, !0)
        }),
        u.on("groupDeleted", function(a) {
            K(a, !1)
        }),
        u.on("groupsDeletedOrUserRemovedFrom", function(a) {
            for (var b = 0; b < a.length; b++)
                K(a[b], !0)
        }),
        u.on("toggledShowHidePostsInFeed", function(a, c, d) {
            b.$broadcast("refetchMainFeedRequest")
        }),
        b.$on("newPostPublishedViaAddBox", function() {
            M()
        }),
        b.$on("newPostPublishedViaAddBoxInMenulet", function() {
            M()
        }),
        b.$on("notesApp:noteTextEdited", function() {
            console.log("EVENT: notesApp:noteTextEdited"),
            b.$broadcast("pollFeedRequest", !1, "FORCE: note text edited"),
            M()
        }),
        b.$on("userFollowed", function() {
            b.$broadcast("reFetchFeed")
        }),
        b.$on("refetchFeed", function() {
            b.$broadcast("reFetchFeed")
        }),
        b.$on("userUnfollowed", function() {
            b.$broadcast("reFetchFeed")
        }),
        b.$on("userProfilePictureUpdated", function(a, d, e) {
            d !== c && e !== c && (g.updateUserProfileImageTypeAndVersion(d, e),
            E.updateUserProfileImageInfo(g.getUserId(), d, e)),
            b.$broadcast("pollFeedRequest", !1, "FORCE: user profile pic updated"),
            t.on("usersUpdated", L)
        }),
        m.addListener(f.rtc.PubsubEvents.NOTIFICATION_RECEIVE, function(a) {
            var c = a.notification;
            c.type == n.UPDATE_FEED && (console.log("RECEIVED: RTCNotification.UPDATE_FEED"),
            b.$broadcast("pollFeedRequest", !1, "RTC: update feed"))
        }),
        Notify.needsPermission() && Notify.requestPermission(),
        b.showNotificationDropdown = !1,
        b.dropdownCtrl = {},
        b.dropdownCtrl.type = "header-network-menu",
        b.isLoggedIntoAccountCondition = {
            isLoggedIntoAccount: !0
        },
        b.showSlimNetworkMenuDropdown = function() {
            return i.isHomeTabSelected()
        }
        ;
        var ca = [];
        g.isGuestUser() || !g.isAdmin() && "STARTER" != e.getAccountLevel() || ca.push({
            label: "Network settings",
            url: P()
        }),
        b.user_info.userRole != b.user_info.USER_ROLE_GUEST && (ca.push({
            label: "Manage integrations",
            url: O()
        }),
        ca.push({
            label: "Team directory",
            url: N()
        })),
        g.isGuestUser() || !g.isAdmin() && "STARTER" != e.getAccountLevel() ? ca.push({
            isDivider: !0
        }) : (ca.push({
            label: "Change network logo",
            url: P()
        }),
        ca.push({
            isDivider: !0
        }));
        var da = e.getUserAccountsListForNetworkSwitchingMenu();
        if (da.length >= 2) {
            ca.push({
                label: "SWITCH NETWORKS",
                isNotHoverable: !0
            });
            for (var ea = 0; ea < da.length; ea++) {
                var fa = da[ea]
                  , ga = {
                    label: fa.accountName + (fa.isCompanyAccount ? " (my company)" : ""),
                    conditionalLabelIcon: !0,
                    icon: "cnv-icons-20 check-lightgray"
                };
                fa.isLoggedIntoAccount ? (ga.isNotHoverable = !0,
                ga.condition = "isLoggedIntoAccount") : (ga.callback = Z,
                ga.callbackParam = fa.accountId),
                ca.push(ga)
            }
            ca.push({
                isDivider: !0
            })
        }
        ca.push({
            label: "Get apps",
            callback: function() {
                var a = "home/components/downloadAppsModal/downloadAppsModal.tpl.html"
                  , b = "DownloadAppsModalCtrl";
                h.customModal(a, b, null , "download-apps-modal-wrapper")
            }
        }),
        g.isGuestUser() || ca.push({
            label: "Get shareable invite link",
            callback: function() {
                var a = "common/cnvInviteTeammates/templates/cnvFindTeammatesBasicSplash.tpl.html"
                  , b = "findContactsSplashCtrl"
                  , c = {
                    data: function() {
                        return {
                            requestedView: "VANITY_URL"
                        }
                    }
                };
                h.customModal(a, b, c).result.then(function(a) {
                    console.log("invite complete.")
                }, function() {
                    console.log("invite complete.")
                })
            }
        }),
        ca.push({
            label: "Contact support",
            url: "mailto:support@convo.com"
        }),
        ca.push({
            label: "Sign out",
            callback: W
        }),
        b.dropdownCtrl.options = ca,
        b.dropdownCtrlSlim = _.clone(b.dropdownCtrl),
        b.dropdownCtrlSlim.type = "header-network-menu-slim",
        w.setIsDirty(!1),
        b.$on("feedUpdatesFromOtherUsersReceived", function() {
            w.setIsDirty(!0)
        }),
        i.on("homeTabSelected", function() {
            w.setIsDirty(!1)
        }),
        i.on("homeTabUnselected", function() {
            b.$broadcast("clearFeedSearchBarText")
        }),
        x.on("nativeCommBridge::switchedToCompactSize", function() {
            b.$broadcast("MainCtrl::appSwitchedToCompactSize")
        }),
        x.on("nativeCommBridge::switchedToDefaultSize", function() {
            b.$broadcast("MainCtrl::appSwitchedToDefaultSize")
        }),
        q.addEventListener("beforeunload", function() {
            console.log("mainctrl: window.beforeunload event")
        }),
        q.addEventListener("unload", function() {
            console.log("mainctrl: window.unload event"),
            z.disposeThisTab(),
            ba = !1
        }),
        x.on("logout", Q),
        b.$on("userSignOutClick", W),
        z.addTabsEventListener2("userSignOutClickInTab", function() {
            console.log("user sign out click received from other tab"),
            Q()
        }),
        v.on("sessionExpired", function() {
            console.error("session expired"),
            B.getRefreshingOnSessionExpired() || (B.setRefreshingOnSessionExpired(),
            z.dispatchTabsEvent2("sessionExpiredInTab", null , !0),
            y.IS_NATIVE && x.logoutApp(),
            R())
        }),
        z.addTabsEventListener2("sessionExpiredInTab", function() {
            console.error("session expired received from other tab"),
            B.getRefreshingOnSessionExpired() || (B.setRefreshingOnSessionExpired(),
            R(!0))
        }),
        v.on("appUpdateAvailable", function(a) {
            console.log("app update available. current/new versions: " + y.APP_VERSION + "/" + a),
            B.getAppUpdateAvailable() || (B.setAppUpdateAvailable(),
            z.dispatchTabsEvent2("appUpdateAvailableInTab", a, !0),
            U(),
            X(a))
        }),
        z.addTabsEventListener2("appUpdateAvailableInTab", function(a) {
            console.log("app update available received from other tab. current/new versions: " + y.APP_VERSION + "/" + a),
            B.getAppUpdateAvailable() || a <= y.APP_VERSION || (B.setAppUpdateAvailable(),
            U(),
            X(a))
        }),
        z.addTabsEventListener2("appUpdateAvailableAlertClickedInTab", function(a) {
            console.log("app update available alert clicked in other tab. current/new versions: " + y.APP_VERSION + "/" + a),
            a > y.APP_VERSION && (B.setRefreshingOnAppUpdateAvailable(),
            R(!0))
        }),
        b.$on("cnvPremiumUpgrade:upgradedToPremium", function(a, b) {
            z.dispatchTabsEvent2("upgradedToPremiumRefreshAllTabs", null , !0),
            B.setRefreshingOnUpgradedToPremium(),
            R()
        }),
        z.addTabsEventListener2("upgradedToPremiumRefreshAllTabs", function() {
            B.setRefreshingOnUpgradedToPremium(),
            R(!0)
        }),
        z.addTabsEventListener2("closeChatWindow", function() {
            b.$broadcast("closeChatEmojiPopover");
            var a = new Event("recalculateAutocompletePosition");
            document.dispatchEvent(a)
        }),
        t.on("userRemovedFromNetwork", function(a) {
            a === g.getUserId() && (console.error("this user removed from network"),
            Y())
        }),
        t.on("userRemovedFromNetworkByRemoteUser", function(a) {
            a === g.getUserId() && (console.error("this user removed from network by remote user"),
            Y())
        }),
        C.on("networkNoLongerAccessibleToUser", function() {
            Y()
        }),
        z.addTabsEventListener2("switchToNetworkClickInTab", function(a) {
            console.log("switch to network received from other tab: " + a),
            T(a)
        }),
        a.triggerSessionExpiry = function() {
            v.trigger("sessionExpired")
        }
        ,
        I.on("refetchFeedOnAdminModeSwitched", aa)
    }
    ]),
    b.module("convoApp").directive("cnvInAppNotificationsDropdown", [function() {
        return {
            restrict: "E",
            scope: !0,
            templateUrl: "main/components/cnvInAppNotificationsDropdown/cnvInAppNotificationsDropdown.tpl.html",
            controller: ["$scope", "InAppNotifications", "$filter", "datetimeService", "serverPingService", "settingsService", "appTabs", "config", "mixpanelService", function(b, c, d, e, f, g, h, i, j) {
                function k(a) {
                    b.showMarkAllAsReadLink = !1;
                    for (var c = 0; c < b.notifications.length; c++)
                        if (0 == b.notifications[c].original.isRead) {
                            b.showMarkAllAsReadLink = !0;
                            break
                        }
                    a || b.$broadcast("render")
                }
                function l(a) {
                    var b, c, e;
                    a.pathTypes && (b = JSON.parse(a.pathTypes)),
                    a.pathIds && (c = a.pathIds.split(",")),
                    a.pathNames && (e = JSON.parse(a.pathNames));
                    var f = [];
                    if (b && c)
                        for (var g = 0; g < b.length; g++)
                            f.push({
                                uid: c[g],
                                type: b[g],
                                title: e[g]
                            });
                    a.actionBy = a.actionBy.split(",");
                    var h = d("inAppNotificationsTemplate")(a, f);
                    return {
                        template: h,
                        original: a
                    }
                }
                function m() {
                    var c = f.getIpnUnreadCount();
                    if (!(b.notifications.length && -1 != c.timestamp && c.timestamp <= b.notifications[0].original.timestamp)) {
                        var d = c.count
                          , e = d > b.sharedNotificationsContext.unreadNotificationsCount;
                        if (b.sharedNotificationsContext.unreadNotificationsCount = d,
                        b.oldestUnarchivedNotificationTimestamp = c.timestamp,
                        b.showNotificationDropdown && b.sharedNotificationsContext.unreadNotificationsCount > 0 && o(),
                        e) {
                            if (g.isBitONOFF(g.isSoundEnabled(), g.DESKTOP) && c.timestamp > u && a.Audio) {
                                var j = new Audio("assets/sounds/inApp_audio." + (i.IS_NATIVE ? "wav" : "mp3"));
                                j.play()
                            }
                            b.ipnUnreadCountUpdated && b.ipnUnreadCountUpdated()
                        }
                        h.dispatchTabsEvent2("ipnUnreadCountUpdateReceivedInTab", c.timestamp),
                        u = 0
                    }
                }
                function n(a) {
                    h.isThisTabLastActiveTab() || (u = a)
                }
                function o() {
                    if (!t) {
                        t = !0;
                        var a = c.getLatestUnreadNotifications();
                        a.then(function(a, c) {
                            if (a.type && a.data.length > 0) {
                                for (var d = a.data.length - 1; d >= 0; d--) {
                                    var e = _.find(b.notifications, function(b) {
                                        return b.original.notificationId == a.data[d].notificationId ? !0 : void 0
                                    });
                                    e || b.notifications.splice(0, 0, l(a.data[d]))
                                }
                                k()
                            }
                            q(),
                            t = !1
                        }, function(a) {
                            t = !1
                        })
                    }
                }
                function p() {
                    for (var a = 0; a < b.notifications.length; a++)
                        b.notifications[a].template.timeSeparator = d("dateSeparatorFromCurrentTimeByDayMonthOrYear")(b.notifications[a].original.timestamp)
                }
                function q() {
                    if (-1 != b.oldestUnarchivedNotificationTimestamp) {
                        var a = c.markAllAsViewed(b.oldestUnarchivedNotificationTimestamp);
                        a.then(function(a, c) {
                            b.sharedNotificationsContext.unreadNotificationsCount = 0,
                            b.$broadcast("render")
                        })
                    }
                }
                function r() {
                    b.server_now_timestamp = e.getServerTimestamp(),
                    b.$broadcast("render_date")
                }
                var s, t = !1, u = 0;
                b.sharedNotificationsContext = c.getSharedNotificationsContext(),
                b.notifications = b.sharedNotificationsContext.notifications,
                b.server_now_timestamp = e.getServerTimestamp(),
                b.showSpinner = !1,
                f.on("ipnUnreadCountUpdate", m),
                m(),
                b.showHideDropdown = function() {
                    if (b.showNotificationDropdown = !b.showNotificationDropdown,
                    b.showNotificationDropdown) {
                        b.notifications.length && b.notifications[0].template.timeSeparator != d("dateSeparatorFromCurrentTimeByDayMonthOrYear")(b.notifications[0].original.timestamp) && p(),
                        0 == b.notifications.length ? b.getNotifications(!1) : o(),
                        k(!0);
                        var a;
                        b.tab ? 1 == b.tab.resourceLink.resourcePath.hierarchy.length ? a = "Post Viewer" : 2 == b.tab.resourceLink.resourcePath.hierarchy.length && (a = "Image Viewer") : a = "Newsfeed",
                        j.trackEvent(j.CLICK_NAVIGATION_CENTER, {
                            Via: a
                        }),
                        b.$broadcast("render"),
                        b.$emit("refreshFeed")
                    }
                    r()
                }
                ,
                b.getNotifications = function(a) {
                    if (!t) {
                        t = !0,
                        b.showSpinner = !0,
                        b.$broadcast("render");
                        var d = c.getNotifications(a);
                        d.then(function(c, d) {
                            for (var e = 0; e < c.data.length; e++) {
                                var f = _.find(b.notifications, function(a) {
                                    return a.original.notificationId == c.data[e].notificationId ? !0 : void 0
                                });
                                f || b.notifications.push(l(c.data[e]))
                            }
                            a || q(),
                            t = !1,
                            b.showSpinner = !1,
                            b.$broadcast("render"),
                            k()
                        }, function(a) {
                            t = !1
                        })
                    }
                }
                ,
                b.markAsRead = function(a) {
                    var d = c.markAsRead(a);
                    d.then(function(c, d) {
                        for (var e = 0; e < b.notifications.length; e++)
                            if (b.notifications[e].original.notificationId == a) {
                                b.notifications[e].original.isRead = 1,
                                b.$broadcast("render");
                                break
                            }
                        k()
                    }),
                    b.showNotificationDropdown = !1,
                    b.$broadcast("render")
                }
                ,
                b.markAllAsRead = function() {
                    var a = c.markAllAsRead();
                    a.then(function(a, c) {
                        for (var d = 0; d < b.notifications.length; d++)
                            b.notifications[d].original.isRead = 1;
                        b.showMarkAllAsReadLink = !1,
                        j.trackEvent(j.CLICK_MARK_ALL_AS_READ),
                        b.$broadcast("render")
                    })
                }
                ,
                s = setInterval(function() {
                    b.showNotificationDropdown && r()
                }, 6e4),
                b.$on("$destroy", function() {
                    f.off("ipnUnreadCountUpdate", m),
                    h.removeTabsEventListener2("ipnUnreadCountUpdateReceivedInTab", n),
                    clearInterval(s)
                }),
                h.addTabsEventListener2("ipnUnreadCountUpdateReceivedInTab", n)
            }
            ],
            link: function(a, b, c) {
                function d(a, b) {
                    0 !== a.originalEvent.wheelDeltaY && a.preventDefault()
                }
                function f(c) {
                    b.is(c.target) || 0 != b.has(c.target).length || (a.showNotificationDropdown = !1,
                    a.$digest())
                }
                var g, h, i, j = b.find(".scrollable"), k = b.find(".scrollable").children(), l = b.find(".docked-date-separator"), m = $(b).find(".badge");
                a.ipnUnreadCountUpdated = function() {
                    m.addClass("badge-pulse"),
                    i = setTimeout(function() {
                        m.removeClass("badge-pulse")
                    }, 500)
                }
                ,
                b.on("mousewheel", d),
                $(document).on("mousedown", f);
                var n = function(b) {
                    g = j.find(".date-separator");
                    for (var c = 0; c < g.length; c++) {
                        if (!(g[c].offsetTop + 20 - j.scrollTop() < 0)) {
                            0 == c && (h = null );
                            break
                        }
                        h = $(g[c])
                    }
                    h ? l[0].innerText = h[0].innerText : l[0].innerText = a.notifications[0].template.timeSeparator,
                    j.scrollTop() + j.height() > k.height() - 80 && a.getNotifications(!0)
                }
                ;
                n = e(n, 30),
                j.on("scroll", n),
                a.$on("$destroy", function() {
                    m = null ,
                    clearTimeout(i),
                    b.off("mousewheel", d),
                    $(document).off("mousedown", f),
                    j.off("scroll", n)
                })
            }
        }
    }
    ]),
    b.module("convoApp").filter("inAppNotificationsActionIconClassFilter", function() {
        return function(a) {
            var b = " cnv-icons-15"
              , c = "icons_Comments-darkgray" + b
              , d = "icons2_Like-darkgray" + b
              , e = "icons2_mention-darkgray" + b
              , f = "icons2_Compose-darkgray" + b
              , g = "follow-icon"
              , h = "icons_Group_Icon-darkgray" + b
              , i = "icons_Post-darkgray" + b;
            return "COMMENTED" == a.action || "COMMENT_UPDATED" == a.action ? "TAGGED" == a.relationship ? e : c : "LIKE" == a.action ? d : "UPDATED" == a.action ? "DIRECTED" == a.relationship ? i : "TAGGED" == a.relationship ? e : f : "AT_MENTIONED" == a.action ? e : "FOLLOW" == a.action ? g : "GROUP_SHARED" == a.action ? h : "ADDED" == a.action ? "TAGGED" == a.relationship || 2 == a.version && "DIRECTED" == a.relationship ? e : i : void 0
        }
    }),
    b.module("convoApp").factory("InAppNotifications", ["ServerComm", "$q", "config", "$rootScope", function(a, b, c, d) {
        function e() {
            r = !0,
            f(),
            y.trigger("initialized")
        }
        function f() {
            if (x)
                return p.promise;
            p = b.defer(),
            x = !0;
            var c = {
                method: "getTemplatesForInProductNotifications"
            }
              , d = a.postx("notifications", c);
            return d.then(function(a) {
                for (var b = 0; b < a.data.data.length; b++) {
                    var c = a.data.data[b];
                    s[c.action + "-" + c.relationship + "-" + c.version] = c
                }
                p.resolve(a.data)
            }, function(a) {
                x = !1,
                p.reject(a.data)
            }),
            p.promise
        }
        function g(c) {
            return w ? o.promise : (o = b.defer(),
            w = !0,
            f().then(function(b) {
                var d;
                d = c ? {
                    method: "getOlderNotificationCollectionForGivenTimestamAndLimit",
                    time_stamp: u - 1,
                    limit: q
                } : {
                    method: "getOlderNotificationCollectionForGivenTimestamAndLimit",
                    time_stamp: 0,
                    limit: q
                };
                var e = a.postx("notifications", d);
                e.then(function(a) {
                    a.data.data.length > 0 && (0 == t && (t = parseInt(a.data.data[0].timestamp)),
                    u = parseInt(a.data.data[a.data.data.length - 1].timestamp)),
                    w = !1,
                    o.resolve(a.data)
                }, function(a) {
                    w = !1,
                    o.reject(a.data)
                })
            }, function(a) {
                w = !1,
                o.reject(a)
            }),
            o.promise)
        }
        function h() {
            if (w)
                return o.promise;
            o = b.defer(),
            w = !0;
            var c = {
                method: "getNotificationCollectionForThisUser",
                get_notifications_upto_last_week: !1,
                time_stamp: t + 1
            }
              , d = a.postx("notifications", c);
            return d.then(function(a) {
                a.data.data.length > 0 && (t = parseInt(a.data.data[0].timestamp)),
                w = !1,
                o.resolve(a.data)
            }, function(a) {
                w = !1,
                o.reject(a.data)
            }),
            o.promise
        }
        function i(c) {
            var d = {
                method: "markNotificationAsRead",
                notification_id: c
            }
              , e = a.post("notifications", d)
              , f = b.defer();
            return e.success(function(a, b) {
                f.resolve(a)
            }),
            f.promise
        }
        function j() {
            var c = {
                method: "markMultipleNotificationsAsRead"
            }
              , d = a.post("notifications", c)
              , e = b.defer();
            return d.success(function(a, b) {
                e.resolve(a)
            }),
            e.promise
        }
        function k(c) {
            var d = {
                method: "markAllNotificationsAsArchivedCreatedAfterSpecifiedTimestamp",
                timestamp: c
            }
              , e = a.post("notifications", d)
              , f = b.defer();
            return e.success(function(a, b) {
                f.resolve(a)
            }),
            f.promise
        }
        function l() {
            return s ? s : void 0
        }
        function m() {
            return v
        }
        function n() {
            if (c.IS_NATIVE) {
                console.log("Should call once.");
                var a = null ;
                Object.defineProperty(v, "unreadNotificationsCount", {
                    set: function(b) {
                        a !== b && (a = b,
                        y.trigger("unreadNotificationsCountChanged", {
                            value: a
                        }))
                    },
                    get: function() {
                        return a
                    }
                })
            }
        }
        var o, p, q = 15, r = !1, s = {}, t = 0, u = 0, v = {
            notifications: [],
            unreadNotificationsCount: 0
        }, w = !1, x = !1, y = {};
        return _.extend(y, Backbone.Events),
        c.on("clientTypeUpdated", n),
        y.initialize = e,
        y.getTemplatesFromServer = f,
        y.getNotifications = g,
        y.getLatestUnreadNotifications = h,
        y.getTemplates = l,
        y.markAsRead = i,
        y.markAllAsRead = j,
        y.markAllAsViewed = k,
        y.getSharedNotificationsContext = m,
        y
    }
    ]),
    b.module("convoApp").filter("inAppNotificationsTemplate", ["InAppNotifications", "AppLinks", "$filter", function(a, b, d) {
        function e(a) {
            var b = document.createElement("div");
            return b.innerHTML = a.replace(/<p>/g, "").replace(/<\/p>/g, " "),
            b.textContent || b.innertText || ""
        }
        function f(a, c, d, e) {
            var f = b.newResourceLink(a, c, d, e);
            return b.linkToUrl(f, !0)
        }
        return function(b, g) {
            function h(a) {
                var c;
                return "FROM" == a ? c = "FOLLOW" == b.action ? i.length > 2 ? "<b>" + _.escape(i[0].name) + "</b>, <b>" + _.escape(i[1].name) + "</b> and <b>" + (i.length - 2).toString() + (i.length > 3 ? " others" : " other") + "</b>" : 2 == i.length ? "<b>" + _.escape(i[0].name) + "</b> and <b>" + _.escape(i[1].name) + "</b>" : "<b>" + _.escape(i[0].name) + "</b>" : i.length > 2 ? "<b>" + _.escape(i[0].name) + "</b>, <b>" + _.escape(i[1].name) + "</b> and <b>" + (i.length - 2).toString() + (i.length > 3 ? " others" : " other") + "</b>" : 2 == i.length ? "<b>" + _.escape(i[0].name) + "</b> and <b>" + _.escape(i[1].name) + "</b>" : "<b>" + _.escape(i[0].name) + "</b>" : "DETAILS" == a ? (c = "",
                null  != b.description && b.description.length && (c = "<span class='detail'>" + d("limitText")(_.escape(e(b.description)), 160) + "</span>")) : (c = b[a],
                ("OWNER" == a || "DUE_ON" == a) && (c = "<b>" + _.escape(c) + "</b>")),
                c
            }
            var i = _.toArray(b.actionByUsers)
              , j = a.getTemplates()
              , k = {};
            k.text = j[b.action + "-" + b.relationship + "-" + b.version].template;
            for (var l = /[\[]<<([^\]]*)>>[\]]/g; ; ) {
                var m = l.exec(k.text);
                if (null  == m)
                    break;
                k.text = k.text.replace(m[0], m[1])
            }
            for (var n = /\{([^\}]*)\}/g, o = []; ; ) {
                var m = n.exec(k.text);
                if (null  == m)
                    break;
                o.push(m[1])
            }
            for (var p = 0; p < o.length; p++) {
                var q = h(o[p]);
                if (k.text = k.text.replace("{" + o[p] + "}", q),
                "DETAILS" == o[p] && "" == q) {
                    k.text = k.text.trim();
                    var r = k.text.length;
                    ":" == k.text[r - 1] && (k.text = k.text.substr(0, r - 1),
                    k.text += ".")
                }
            }
            var s, t, u;
            if ("LIKE" == b.action)
                if ("IMAGE" == b.relationship)
                    try {
                        t = {
                            preview_name: JSON.parse(JSON.parse(b.data)),
                            noteId: b.pathIds.split(",")[0]
                        }
                    } catch (v) {
                        t = c
                    }
                else if ("PROFILE_IMAGE" == b.relationship)
                    try {
                        s = JSON.parse(JSON.parse(b.data))
                    } catch (v) {
                        s = c
                    }
                else
                    "COMMENT" == b.relationship && b.thumbnail_name && (u = {
                        preview_name: b.thumbnail_name,
                        itemId: b.pathIds.split(",")[0]
                    });
            return ("COMMENTED" == b.action || "COMMENT_UPDATED" == b.action || "AT_MENTIONED" == b.action) && b.thumbnail_name && (u = {
                preview_name: b.thumbnail_name,
                itemId: b.pathIds.split(",")[0]
            }),
            k.actionRelationship = {
                action: b.action,
                relationship: b.relationship,
                version: b.version
            },
            k.latestActionByUser = i[0],
            k.pImageLikeData = s,
            k.imageLikeData = t,
            k.commentImageData = u,
            "FOLLOW" == b.action ? link = d("idToFilterUrl")(Object.keys(b.actionByUsers)[0], "USER") : b.resourceLink ? "null" === b.resourceLink ? link = "javascript:void(0)" : link = "#" + b.resourceLink : link = f(b.appInstanceId, g, b.conversationUid || null , g[g.length - 1].title),
            k.link = link,
            k.timeSeparator = d("dateSeparatorFromCurrentTimeByDayMonthOrYear")(b.timestamp),
            k
        }
    }
    ]),
    b.module("convoApp").directive("cnvNetworkLogoAndName", ["accountInfo", "utils", function(a, b) {
        return {
            restrict: "E",
            replace: !0,
            templateUrl: "main/components/cnvNetworkLogoAndName/cnvNetworkLogoAndName.tpl.html",
            scope: !0,
            link: function(c, d, e) {
                function f() {
                    c.networkLogo,
                    c.accountInfo = a,
                    console.log(a.getAccountImageType()),
                    0 != a.getAccountImageType() ? c.networkLogo = a.getAccountImageUrl() : c.networkLogo = b.getCompanyDefaultLogo(),
                    c.$broadcast("render")
                }
                c.showFullMenu = !1,
                a.on("accountImageVersionUpdated", f),
                a.on("accountNameUpdated", f),
                f()
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvUserInfoMenu", function() {
        return {
            restrict: "E",
            template: '<div cnv-clicked-outside-this="closeDetailPanel()" ng-click="toggleDetailPanel()" ><cnv-user-profile-image user-id="userData.user_id" size="32" full-name="userData.first_name | concatWithSpace: userData.last_name" profile-type="userData.profile_image_type" profile-version="userData.profile_image_version"></cnv-user-profile-image><div class="user_info" ng-show="show"><span>{{userData.first_name}} {{userData.last_name}}</span></br><span>{{userData.email}}</span></br><a href="{{userData.user_id | idToFilterUrl:\'USER\'}}">View Profile</a></br><a href="javascript:void(0)">Edit Profile</a></br><a href="#/logout">Sign Out</a></div></div>',
            scope: {
                userData: "=userInfo"
            },
            link: function(a, b, c) {
                a.show = !1,
                a.toggleDetailPanel = function() {
                    a.show = !a.show
                }
                ,
                a.closeDetailPanel = function() {
                    a.show = !1
                }
            }
        }
    }),
    b.module("convoApp").factory("resourcesTabsManager", ["$location", "AppLinks", "$window", "alertsService", "appStateInfo", "utils", function(b, c, d, e, f, g) {
        function h(e) {
            C = e,
            F = [],
            C.$on("$locationChangeStart", i),
            d.addEventListener("beforeunload", j),
            d.addEventListener("unload", k),
            C.$on("closeTab", function(a, b) {
                t(b, !0)
            }),
            C.$on("goBackInHistory", function(a, c) {
                var d = null ;
                F.length > 1 && (d = F[F.length - 2].url),
                d ? b.url(d.slice(1)) : t(c, !0)
            }),
            C.$on("gotoParentResourceInHistory", function(b, d) {
                var e = null 
                  , f = d.appInstanceId
                  , g = d.resourceId
                  , h = d.resourceLink.resourcePath.hierarchy.length - 1;
                if (1 == d.resourceLink.resourcePath.hierarchy.length && d.resourceLink.commentFileId && (h = 1),
                1 === h)
                    for (var i = F.length, j = i - 2; j >= 0; j--) {
                        var k = F[j].resourceLink;
                        if (!k)
                            break;
                        if (k.resourcePath.appInstance.uid !== f || k.resourcePath.hierarchy[0].uid !== g)
                            break;
                        if (k.resourcePath.hierarchy.length - 1 === 0) {
                            var l = $.extend(!0, {}, F[j].resourceLink);
                            l.collaborationInfo = null ,
                            e = c.linkToUrl(l, !0);
                            break
                        }
                    }
                null  === e ? t(d, !0) : a.location.hash = e
            }),
            C.$on("gotoPreviousResourceInHistory", function(a, d) {
                for (var e = null , f = d.appInstanceId, g = d.resourceId, h = F.length, i = h - 2; i >= 0; i--) {
                    var j = F[i].resourceLink;
                    if (!j)
                        break;
                    if (j.resourcePath.appInstance.uid !== f || j.resourcePath.hierarchy[0].uid !== g) {
                        var k = $.extend(!0, {}, F[i].resourceLink);
                        k.collaborationInfo = null ,
                        e = c.linkToUrl(k, !0);
                        break
                    }
                }
                null  === e ? t(d, !0) : b.url(e.slice(1))
            }),
            C.$on("requestFullViewForApp", function(a, b) {
                b.fullViewRequested = !0
            }),
            C.$on("unrequestFullViewForApp", function(a, b) {
                b.fullViewRequested = !1
            });
            var f = "#/feed";
            C.filterInfo.filterApplied && (f = "#" + decodeURI(b.url())),
            D = [{
                id: "home",
                appInstanceId: "home",
                title: "Home",
                url: f,
                templateUrl: "home/home.tpl.html",
                appContCtrl: {
                    initialized: !1
                },
                selected: !0,
                fixed: !0
            }],
            C.tabs = D,
            l(D[0])
        }
        function i(a) {
            var d = C.locationAppLink;
            if (d && null  != E && !v() && (d.type === c.FILTER_LINK || d.type === c.RESOURCE_LINK && !A(d) || d.type === c.ACTION_LINK && "show_feed" === d.action)) {
                var f = !0;
                !E.okToCloseChecked && E.appContCtrl.initialized && E.appContCtrl.okToClose && (f = E.appContCtrl.okToClose(!1),
                E.okToCloseChecked = !0),
                "object" == typeof f && f.promptMessage && (a.preventDefault(),
                e.promptModal(f.promptTitle ? f.promptTitle : "", f.promptMessage, function() {
                    f.promptOkCallback && f.promptOkCallback(),
                    b.url(c.linkToUrl(d, !0).slice(1))
                }, function() {
                    E.okToCloseChecked = !1,
                    f.promptCancelCallback && f.promptCancelCallback()
                }, f.promptOkBtnLabel ? f.promptOkBtnLabel : "Ok", f.promptCancelBtnLabel ? f.promptCancelBtnLabel : "Cancel", null , !1, f.onlyDismissModalOnCloseBtn))
            }
        }
        function j(a) {
            if (!(f.getIsForceRefreshing() || f.getSigningOut() || f.getSwitchingNetwork())) {
                var b = !0;
                return E.appContCtrl.initialized && E.appContCtrl.okToClose && (b = E.appContCtrl.okToClose(!0)),
                "object" == typeof b && b.promptMessage ? ((a || d.event).returnValue = b.promptMessage,
                b.promptMessage) : void 0
            }
        }
        function k(a) {
            E.appContCtrl.initialized && E.appContCtrl.closing && E.appContCtrl.closing()
        }
        function l(a) {
            if (F.push({
                resourceLink: a.resourceLink,
                url: a.url
            }),
            a != E) {
                if (E && (E.selected = !1,
                E.appContCtrl.initialized && E.appContCtrl.deactivated()),
                a.selected = !0,
                E = a,
                E.appContCtrl.initialized) {
                    var b = {};
                    E.signalTabToScrollToTopUponActivation && (b.scrollToTop = !0,
                    E.signalTabToScrollToTopUponActivation = !1),
                    E.appContCtrl.activated(b.scrollToTop)
                }
                C.selectedTab = E,
                v() ? G.trigger("homeTabSelected") : G.trigger("homeTabUnselected"),
                w() && G.trigger("settingTabSelected")
            }
        }
        function m(a, b, c) {
            return a + "_" + b + "_" + c
        }
        function n(a, b, c) {
            var d = m(a, b, c)
              , e = $.grep(D, function(a) {
                return a.id == d
            });
            return 0 == e.length ? null  : 1 == e.length ? e[0] : null 
        }
        function o(a, d, e, f, g) {
            var h = {
                id: m(d, e, f),
                appInstanceId: d,
                resourceType: e,
                resourceId: f,
                resourceLink: a,
                title: a.resourcePath.appInstance.title || "[Unknown]",
                url: g,
                appContCtrl: {
                    initialized: !1
                },
                selected: !1,
                fixed: !1,
                fullViewRequested: !1
            }
              , i = c.urlParamsStrToObj(b.hash() || "");
            return i.hasOwnProperty("local_details_object") && (h.localDetailsObject = JSON.parse(i.local_details_object)),
            console.log(h),
            h
        }
        function p(a, c) {
            r(!1, function() {
                var c = "#" + decodeURI(b.url())
                  , d = c != D[0].url;
                D[0].url = c,
                l(D[0]),
                a && a(d)
            }, function() {
                c && c()
            })
        }
        function q(a) {
            var c = a.resourcePath.appInstance.uid
              , d = a.resourcePath.hierarchy[0]
              , e = d.type
              , f = d.uid
              , g = n(c, e, f);
            if (g) {
                var h = "#" + decodeURI(b.url())
                  , i = h != g.url;
                g.resourceLink = a,
                g.url = h,
                l(g),
                g.appContCtrl.initialized && g.appContCtrl.navigate && g.appContCtrl.navigate(i)
            } else
                r(!1, function() {
                    g = o(a, c, e, f, "#" + decodeURI(b.url())),
                    D.push(g),
                    l(g)
                })
        }
        function r(a, b, c) {
            return D.length <= 1 ? void (b && b()) : void t(D[1], a, function() {
                r(a, b, c)
            }, c)
        }
        function s(a, b) {
            t(a, !0, null , null , b)
        }
        function t(a, b, c, d, f) {
            var g = a.appContCtrl
              , h = !0;
            if (!f && !a.okToCloseChecked && g.initialized && g.okToClose) {
                var i = g.okToClose(!1);
                "object" == typeof i && i.promptMessage && (h = !1,
                e.promptModal(i.promptTitle ? i.promptTitle : "", i.promptMessage, function() {
                    i.promptOkCallback && i.promptOkCallback(),
                    u(a, b),
                    c && c()
                }, function() {
                    a.okToCloseChecked = !1,
                    i.promptCancelCallback && i.promptCancelCallback(),
                    d && d()
                }, i.promptOkBtnLabel ? i.promptOkBtnLabel : "Ok", i.promptCancelBtnLabel ? i.promptCancelBtnLabel : "Cancel", null , !1, i.onlyDismissModalOnCloseBtn))
            }
            h && (u(a, b),
            c && c())
        }
        function u(a, c) {
            var d = a.appContCtrl;
            d.initialized && d.closing && d.closing();
            var e = D.indexOf(a);
            if (D.splice(e, 1),
            console.log("__: resourceTabsManager: closeTabs total-tabs: " + D.length),
            c && a == E && (E = null ,
            D.length > 0)) {
                var f = e;
                f == D.length && f--,
                b.url(D[f].url.slice(1))
            }
        }
        function v() {
            return E == D[0]
        }
        function w() {
            return "12" == E.appInstanceId
        }
        function x(a) {
            return "9" == E.appInstanceId && E.resourceId === a
        }
        function y() {
            v() || t(E, !0)
        }
        function z() {
            return E
        }
        function A(a) {
            if (null  == E)
                return !1;
            var b = a.resourcePath.hierarchy[0];
            return a.resourcePath.appInstance.uid == E.appInstanceId && b.type == E.resourceType && b.uid == E.resourceId
        }
        function B() {
            var a = D[0];
            a.signalTabToScrollToTopUponActivation = !0
        }
        var C, D, E, F, G = {
            init: h,
            closeTab: s,
            switchToHomeTab: p,
            openResource: q,
            isHomeTabSelected: v,
            isSettingTabSelected: w,
            isGroupSettingsTabSelected: x,
            selectHomeTab: y,
            getSelectedTab: z,
            signalHomeTabToScrollToTopUponActivation: B
        };
        return _.extend(G, Backbone.Events),
        G
    }
    ]),
    b.module("convoApp").controller("MainHeaderRightColumnCtrl", ["$scope", "$filter", "$location", "AppLinks", "Filters", "FilterTypes", function(a, b, c, d, e, f) {}
    ]),
    b.module("convoApp").directive("cnvNotesApp", ["$rootScope", "notesAppDataProvider", "Comments", "$q", "feedDirtyInfo", "userInfo", "Likes", "textSelections", "snippetArrow", "utils", "loader", "appStateInfo", function(a, b, c, d, e, f, g, h, i, j, k, l) {
        return {
            restrict: "AE",
            priority: 0,
            scope: !1,
            templateUrl: "notes/cnvNotesApp.tpl.html",
            compile: function(a, b, c) {
                return k.loadScript(k.SCRIPTS.GALLERY_VENDOR),
                function(b, c, d, e) {
                    function f(c) {
                        var d = !1;
                        (a.find(".notes-app-editor").find(c.target).length || a.find(".galleryHeaderContainer").find(c.target).length || a.find(".galleryTplContainer").find(c.target).length) && (d = !0),
                        d && l.isAppInCompactView() && (b.enableCommentsPanel.active = !1,
                        b.slideCommentsPanelToRight())
                    }
                    h.rmAllSelections();
                    var g, i;
                    b.openGalleryControlsPanelGracefully = function() {
                        i && (clearTimeout(i),
                        i = -1),
                        g = setTimeout(function() {
                            a.find(".app-header").removeClass("make-overflow-y-hidden"),
                            a.find(".app-header").addClass("make-overflow-y-visible"),
                            a.find(".galleryHeaderContainer").removeClass("make-overflow-hidden"),
                            a.find(".galleryHeaderContainer").addClass("make-overflow-visible")
                        }, 750)
                    }
                    ,
                    b.closeGalleryControlsPanelGracefully = function() {
                        g && (clearTimeout(g),
                        g = -1),
                        a.find(".app-header").removeClass("make-overflow-y-visible"),
                        a.find(".app-header").addClass("make-overflow-y-hidden"),
                        a.find(".galleryHeaderContainer").removeClass("make-overflow-visible"),
                        a.find(".galleryHeaderContainer").addClass("make-overflow-hidden"),
                        i = setTimeout(function() {
                            a.find(".app-header").removeClass("make-overflow-y-hidden"),
                            a.find(".app-header").addClass("make-overflow-y-visible")
                        }, 750)
                    }
                    ,
                    document.addEventListener("click", f),
                    b.$on("$destroy", function() {
                        document.removeEventListener("click", f)
                    }),
                    b.registerEvent = function() {
                        function a() {
                            e = !0,
                            c.find(".submenu2").css("display", "block")
                        }
                        function b() {
                            e = !1,
                            setTimeout(function() {
                                e || c.find(".submenu2").css("display", "none")
                            }, 150)
                        }
                        var d = c.find(".sharing_preferences");
                        d.on("mouseenter", a),
                        d.on("mouseleave", b);
                        var e = !1
                    }
                }
            },
            controller: ["$scope", "Note", "$timeout", "Likes", "Users", "accountInfo", "mixpanelService", "config", "$rootScope", "Feed", "Comments", "itemService", "bannerService", function(a, c, d, g, k, m, n, o, p, q, r, s, t) {
                function u(b) {
                    function c(b) {
                        a.currentAppCtrl.initialized ? a.cnvInAppCommentsCtrl.initialize(b) : a.currentAppCtrl.on("initialized", D)
                    }
                    if (ca.active = !0,
                    l.isAppInCompactView() && a.tab.resourceLink.collaborationInfo && a.tab.resourceLink.collaborationInfo.commentId) {
                        var e = q.getFeedIdOfResource(a.tab.resourceLink.resourcePath.appInstance.uid, a.tab.resourceLink.resourcePath.hierarchy[0].uid);
                        r.getComment(e, a.tab.resourceLink.resourcePath.hierarchy[0].uid, a.tab.resourceLink.resourcePath.appInstance.uid, a.tab.resourceLink.collaborationInfo.commentId).then(function(b) {
                            !b || !b.resource_link || b.resource_link.collaboration_info && b.resource_link.collaboration_info.snippet_data || Z.resourceLink.commentFileId || (setTimeout(function() {
                                a.enableCommentsPanel.active = !0,
                                a.$$phase || a.$digest()
                            }, 0),
                            a.slideCommentsPanelToLeft())
                        })
                    }
                    if (a.galleryCtrl.active ? a._prvOpenedApp = Y = "gallery" : a.openEditor && (a._prvOpenedApp = Y = "editor"),
                    2 == Z.resourceLink.resourcePath.hierarchy.length || 1 == Z.resourceLink.resourcePath.hierarchy.length && Z.resourceLink.commentFileId)
                        a.openEditor = !1,
                        a.MP_DATA_SOURCE.currentSubApp = "gallery",
                        a.currentAppCtrl = a.galleryCtrl,
                        a.currentAppCtrl.getItemData = F,
                        setTimeout(function() {
                            ca.initSnippetArrow()
                        }, 0),
                        c(G() == aa ? !1 : !0),
                        a.noteData && (a.noteData._prvOpenedApp = Y),
                        l.isAppInCompactView() && Z.resourceLink.commentFileId && (a.enableCommentsPanel.active = !1,
                        a.slideCommentsPanelToRight());
                    else {
                        var f = function(b) {
                            b && a.$emit("deactivate_gallery"),
                            a.openEditor = !0,
                            a.MP_DATA_SOURCE.currentSubApp = "editor",
                            a.currentAppCtrl = a.editorCtrl,
                            a.currentAppCtrl.commentId = Z.resourceLink.collaborationInfo ? Z.resourceLink.collaborationInfo.commentId : null ,
                            ca.initSnippetArrow(),
                            c(G() == aa ? !1 : !0),
                            a.$broadcast("render")
                        }
                        ;
                        a.galleryCtrl.active && a.tab.resourceLink.collaborationInfo ? a.currentAppCtrl.animateToNote().then(function() {
                            d(function() {
                                f(!0)
                            }, 0)
                        }) : f()
                    }
                    a.$broadcast("cnvGallery:dismissCommentBtn"),
                    a.$broadcast("render"),
                    console.log("note tab navigate()")
                }
                function v() {
                    ca.active = !0,
                    console.log("note tab activated")
                }
                function w() {
                    ca.active = !1,
                    console.log("note tab deactivated")
                }
                function x() {
                    ca.active = !1,
                    console.log("note tab closing")
                }
                function y(c) {
                    ca.active && (a.noteData = b.renderNoteDataResponse(c),
                    a.noteData._prvOpenedApp = Y,
                    C(a.noteData),
                    a.currentAppCtrl.setNoteData(a.noteData),
                    a.cnvInAppCommentsCtrl.itemDataReceivedFromServer && a.cnvInAppCommentsCtrl.itemDataReceivedFromServer(a.noteData))
                }
                function z(c) {
                    a.noteData = b.renderNoteDataResponse(c),
                    C(a.noteData),
                    a.currentAppCtrl.itemDataPolledFromServer && a.currentAppCtrl.itemDataPolledFromServer(a.noteData),
                    a.cnvInAppCommentsCtrl.itemDataPolledFromServer && a.cnvInAppCommentsCtrl.itemDataPolledFromServer(a.noteData)
                }
                function A(c) {
                    a.noteData = b.renderNoteDataResponse(c)
                }
                function B(b) {
                    a.likesInfo = b.data || {},
                    a.cnvInAppCommentsCtrl.setItemLikesInfo({
                        data: a.likesInfo
                    })
                }
                function C(b) {
                    a.relatedPermissions.canChangePermissions = b.item.can_change_permissions,
                    a.relatedPermissions.permissions = b.item.permissions,
                    a.relatedPermissions.loggedInUserPermissions = b.item.logged_in_user_permissions,
                    a.relatedPermissions.canEdit = b.item.logged_in_user_permissions.checkBitAt(3),
                    a.relatedPermissions.canComment = b.item.logged_in_user_permissions.checkBitAt(2),
                    a.relatedPermissions.canView = b.item.logged_in_user_permissions.checkBitAt(1)
                }
                function D() {
                    a.noteData && ca.active && (a.noteData._prvOpenedApp = Y,
                    a.currentAppCtrl.setNoteData(a.noteData)),
                    (a.tab.resourceLink.data && "21" == a.tab.resourceLink.data.resource_type || l.isAppInCompactView()) && (a.enableCommentsPanel.active = !1),
                    a.currentAppCtrl.itemDataSavedOnServer = A,
                    a.currentAppCtrl.showHideCommentsPanel(a.enableCommentsPanel.active),
                    ca.onItemMovedToTrashByRemoteUser = a.currentAppCtrl.onItemMovedToTrashByRemoteUser,
                    ca.onItemRestoredByRemoteUser = a.currentAppCtrl.onItemRestoredByRemoteUser,
                    ca.onItemSharingInfoUpdatedByRemoteUser = a.currentAppCtrl.onItemSharingInfoUpdatedByRemoteUser,
                    ca.onItemTagsUpdatedByRemoteUser = a.currentAppCtrl.onItemTagsUpdatedByRemoteUser,
                    ca.onItemUpdatedByRemoteUser = a.currentAppCtrl.onItemUpdatedByRemoteUser,
                    ca.onItemPermissionsUpdatedByRemoteUser = E,
                    a.cnvInAppCommentsCtrl.initialize && setTimeout(a.cnvInAppCommentsCtrl.initialize, 0),
                    ca.initSnippetArrow(),
                    setTimeout(a.registerEvent, 100)
                }
                function E(b) {
                    a.currentAppCtrl && a.currentAppCtrl.onItemPermissionsUpdatedByRemoteUser && a.currentAppCtrl.onItemPermissionsUpdatedByRemoteUser(),
                    a.cnvInAppCommentsCtrl && a.cnvInAppCommentsCtrl.onItemPermissionsUpdatedByRemoteUser && a.cnvInAppCommentsCtrl.onItemPermissionsUpdatedByRemoteUser()
                }
                function F() {
                    return a.noteData
                }
                function G() {
                    var a = Z.resourceLink.resourcePath.hierarchy[0].uid;
                    return Z.resourceLink.resourcePath.hierarchy[1] && (a += "," + Z.resourceLink.resourcePath.hierarchy[1].uid),
                    a
                }
                function H(b, c) {
                    a.enableCommentsPanel.active != c && (a.enableCommentsPanel.active = c,
                    a.$$phase || a.$digest(),
                    a.currentAppCtrl.initialized && a.currentAppCtrl.showHideCommentsPanel(c))
                }
                function I(b, c) {
                    var d = 500;
                    a.enableCommentsPanel.active ? d = 0 : a.$evalAsync(function() {
                        setTimeout(function() {
                            a.enableCommentsPanel.active = !0,
                            a.$$phase || a.$digest()
                        }, 0),
                        l.isAppInCompactView() && a.slideCommentsPanelToLeft()
                    }),
                    setTimeout(function() {
                        c.fileViewerTextAnnotation && (a.cnvInAppCommentsCtrl.enableSnippetsInComment = !0),
                        a.cnvInAppCommentsCtrl.embedSnippetImage(c)
                    }, d)
                }
                function J(b) {
                    a.cnvInAppCommentsCtrl.clearSnippetImage()
                }
                function K(b) {
                    a.currentAppCtrl && a.currentAppCtrl.snippetImagePosted && a.currentAppCtrl.snippetImagePosted()
                }
                function L(b, c, d) {
                    function e() {
                        setTimeout(function() {
                            a.currentAppCtrl.selectText && a.currentAppCtrl.selectText(c)
                        }, 100)
                    }
                    l.isAppInCompactView() && (a.enableCommentsPanel.active = !1,
                    a.slideCommentsPanelToRight()),
                    a.noteData ? i.isVisible(d) ? a.currentAppCtrl.removeSnippetsForComment(a.tab.resourceLink.collaborationInfo.commentId) : (c.commentId = d,
                    e()) : ba.then(e)
                }
                function M() {
                    if (a.currentAppCtrl) {
                        if (i.getSnippetOffset = a.currentAppCtrl.getSnippetOffset,
                        i.getCommentOffset = a.cnvInAppCommentsCtrl.getCommentOffset,
                        !i.getSnippetOffset || !i.getCommentOffset)
                            return void setTimeout(ca.initSnippetArrow, 100);
                        a.openEditor ? i.appContainer = ".notes-app-editor" : a.galleryCtrl.active && (a.galleryCtrl.fileFormat || setTimeout(ca.initSnippetArrow, 100),
                        i.appContainer = ".galleryAppContainer ",
                        "Doc" === a.galleryCtrl.fileFormat ? i.appContainer += "#outerContainer" : i.appContainer += ".galleryImageContainer")
                    }
                }
                function N() {
                    var b, c, d, e = a.tab.resourceLink.resourcePath.appInstance.uid, h = a.tab.resourceLink.resourcePath.hierarchy[0].uid, i = a.tab.resourceLink.resourcePath.hierarchy[0].type, j = a.noteData.item.title;
                    a.tab.resourceLink.resourcePath.hierarchy[1] && (b = a.tab.resourceLink.resourcePath.hierarchy[1].uid,
                    c = a.tab.resourceLink.resourcePath.hierarchy[1].type,
                    d = a.tab.resourceLink.title);
                    var k = h;
                    b && (k += "," + b);
                    var l = [i];
                    c && l.push(c);
                    var m = [j];
                    d && m.push(d),
                    a.likesInfo || (a.likesInfo = {}),
                    a.likesInfo.last_liked_by = f.getUserId(),
                    a.likesInfo.liked_by_me = !0,
                    a.likesInfo.like_count = a.likesInfo.like_count ? a.likesInfo.like_count : 1,
                    a.likesInfo.users || (a.likesInfo.users = {}),
                    a.likesInfo.users[f.getUserId()] = f.getUserInfo(),
                    a.likesInfo.users[f.getUserId()].accessible = !0;
                    var n = g.likeResourceNewApi(k, h, e, m, l, a.noteData.item.created_by);
                    n.then(function(b, c) {
                        a.tab.appContCtrl.immediatePollForItemLikesInfo(),
                        g.trigger("resourceLikedUnliked")
                    }),
                    a.cnvInAppCommentsCtrl.setItemLikesInfo({
                        data: a.likesInfo
                    })
                }
                function O() {
                    var b, c = a.tab.resourceLink.resourcePath.appInstance.uid, d = a.tab.resourceLink.resourcePath.hierarchy[0].uid;
                    a.tab.resourceLink.resourcePath.hierarchy[1] && (b = a.tab.resourceLink.resourcePath.hierarchy[1].uid);
                    var e = d;
                    b && (e += "," + b);
                    var f = g.unlikeResource(e, d, c);
                    f.then(function(b, c) {
                        a.likesInfo.liked_by_me = !1,
                        a.tab.appContCtrl.immediatePollForItemLikesInfo(),
                        g.trigger("resourceLikedUnliked")
                    })
                }
                function P(b) {
                    var c, d = a.tab.resourceLink.resourcePath.appInstance.uid, e = a.tab.resourceLink.resourcePath.hierarchy[0].uid;
                    if (a.tab.resourceLink.resourcePath.hierarchy[1] && (c = a.tab.resourceLink.resourcePath.hierarchy[1].uid),
                    !(b.resource_id != e || c && c != b.path_ids.split(",")[1] || d != b.app_instance_id)) {
                        var f = !1;
                        b.user || (f = !0),
                        f ? a.tab.appContCtrl.immediatePollForItemLikesInfo() : (a.likesInfo || (a.likesInfo = {}),
                        a.likesInfo.last_liked_by = b.like_info.liked_by,
                        a.likesInfo.like_count = b.like_info.likes_count,
                        a.likesInfo.users || (a.likesInfo.users = {}),
                        a.likesInfo.users[b.last_liked_by] = b.user[b.last_liked_by],
                        a.cnvInAppCommentsCtrl.setItemLikesInfo({
                            data: a.likesInfo
                        }))
                    }
                }
                function Q(b) {
                    var c, d = a.tab.resourceLink.resourcePath.appInstance.uid, e = a.tab.resourceLink.resourcePath.hierarchy[0].uid;
                    if (a.tab.resourceLink.resourcePath.hierarchy[1] && (c = a.tab.resourceLink.resourcePath.hierarchy[1].uid),
                    !(b.resource_id != e || c && c != b.path_ids.split(",")[1] || d != b.app_instance_id)) {
                        var f = !1;
                        b.user || (f = !0),
                        f ? a.tab.appContCtrl.immediatePollForItemLikesInfo() : (a.likesInfo || (a.likesInfo = {}),
                        a.likesInfo.last_liked_by = b.like_info.liked_by,
                        a.likesInfo.like_count = b.like_info.likes_count,
                        a.likesInfo.users || (a.likesInfo.users = {}),
                        a.likesInfo.users.hasOwnProperty(b.last_unliked_by) && delete a.likesInfo.users[b.last_unliked_by],
                        a.cnvInAppCommentsCtrl.setItemLikesInfo({
                            data: a.likesInfo
                        }))
                    }
                }
                function R() {
                    a.feedDirty = !0
                }
                function S() {
                    a.feedDirty = !1
                }
                function T() {
                    return $
                }
                function U(a) {
                    $ = a
                }
                function V() {
                    a.enableCommentsPanel.active && (p.$emit("SnippetArrow:destroyAllInAppCompactView"),
                    a.enableCommentsPanel.active = !1,
                    a.$$Phase || a.$digest())
                }
                function W() {
                    a.removeCommentsPanelSlideClasses()
                }
                function X() {
                    g.off("resourceLikedByRemoteUser", P),
                    g.off("resourceUnlikedByRemoteUser", Q),
                    l.off("appSwitchedToCompactView", V),
                    l.off("appSwitchedToNormalView", W),
                    e.off("feedDirty", R),
                    e.off("feedDirtyClear", S),
                    h.rmAllSelections(),
                    da()
                }
                var Y, Z = a.tab, $ = 0, aa = G(), ba = Z.appContCtrl.getItemDataFromServerPromise, ca = Z.appContCtrl.appCtrl;
                ca.navigate = u,
                ca.activated = v,
                ca.deactivated = w,
                ca.closing = x,
                ca.itemDataReceivedFromServer = y,
                ca.itemDataPolledFromServer = z,
                ca.setItemLikesInfo = B,
                ca.initSnippetArrow = M,
                ca.active = !1,
                ca.initialized = !0,
                a.editorCtrl = {},
                a.editorCtrl.initialized = !1,
                a.editorCtrl.getLastScrollPos = T,
                a.editorCtrl.setLastScrollPos = U,
                _.extend(a.editorCtrl, Backbone.Events),
                a.enableCommentsPanel = {
                    active: !0
                },
                a.cnvInAppCommentsCtrl = {},
                a.cnvInAppCommentsCtrl.getItemData = F,
                a.likesInfo = {},
                a.IS_WINDOWS = o.IS_WINDOWS,
                a.networkLogo = 0 != m.getAccountImageType() ? m.getAccountImageUrl() : j.getCompanyDefaultLogo(),
                a.feedDirty = e.getIsDirty(),
                a.IS_STARTER_NETWORK = m.getAccountLevel() === m.ACCOUNT_LEVELS.STARTER,
                a.relatedPermissions = {
                    canEdit: !1,
                    canComment: !1,
                    canView: !1
                },
                a.MP_DATA_SOURCE = {},
                a.isGuest = f.isGuestUser(),
                a.isAdminMode = f.isAdminMode();
                var da = p.$on("Editor:selectText", L);
                a.$emit("cnvNoteEditor:text-selection-for-snippet-popup-appeared"),
                g.on("resourceLikedByRemoteUser", P),
                g.on("resourceUnlikedByRemoteUser", Q),
                e.on("feedDirty", R),
                e.on("feedDirtyClear", S),
                l.on("appSwitchedToCompactView", V),
                l.on("appSwitchedToNormalView", W),
                a.$on("showHideCommentsPanel", H),
                a.$on("embedSnippetImage", I),
                a.$on("Notes:ClearSnippet", J),
                a.$on("snippetImagePosted", K),
                a.$on("$destroy", X),
                a.slideCommentsPanelToRight = function() {
                    a.slideCommentsToRight = !0,
                    a.slideCommentsToLeft = !1
                }
                ,
                a.slideCommentsPanelToLeft = function() {
                    a.slideCommentsToRight = !1,
                    a.slideCommentsToLeft = !0
                }
                ,
                a.removeCommentsPanelSlideClasses = function() {
                    a.slideCommentsToRight && (a.slideCommentsToRight = !1),
                    a.slideCommentsToLeft && (a.slideCommentsToLeft = !1)
                }
                ,
                a.commentsCountClick = function() {
                    a.enableCommentsPanel.active ? setTimeout(a.cnvInAppCommentsCtrl.focusOnCommentsEditor, 0) : (setTimeout(function() {
                        a.enableCommentsPanel.active = !0,
                        a.$$phase || a.$digest()
                    }, 0),
                    l.isAppInCompactView() && a.slideCommentsPanelToLeft(),
                    setTimeout(function() {
                        a.cnvInAppCommentsCtrl.focusOnCommentsEditor()
                    }, 500))
                }
                ,
                a.showHideCommentsPanel = function() {
                    a.enableCommentsPanel.active ? (a.enableCommentsPanel.active = !1,
                    l.isAppInCompactView() ? a.slideCommentsPanelToRight() : p.$emit("SnippetArrow:destroyAll"),
                    setTimeout(function() {
                        a.enableCommentsPanel.active = !1,
                        a.$$phase || a.$digest()
                    }, 0),
                    n.trackEvent(n.CLICK_HIDE_PANEL)) : (setTimeout(function() {
                        a.enableCommentsPanel.active = !0,
                        a.$$phase || a.$digest()
                    }, 0),
                    l.isAppInCompactView() && a.slideCommentsPanelToLeft()),
                    a.currentAppCtrl.initialized && a.currentAppCtrl.showHideCommentsPanel(a.enableCommentsPanel.active),
                    a.$$phase || a.$digest()
                }
                ,
                a.likeButtonClick = function() {
                    a.likesInfo.liked_by_me ? O() : N()
                }
                ,
                a.onGalleryControlsPanelMouseEnter = function() {
                    l.isAppInCompactViewModeWithGivenWidth(890) && a.openGalleryControlsPanelGracefully()
                }
                ,
                a.onGalleryControlsPanelMouseLeave = function() {
                    l.isAppInCompactViewModeWithGivenWidth(890) && a.closeGalleryControlsPanelGracefully()
                }
                ,
                a.changePermissions = function(b) {
                    if (a.editorCtrl.headerData || a.editorCtrl.headerData.initialized) {
                        var c = s.changePermissions(b, a.tab.resourceLink.resourcePath.appInstance.uid, a.tab.resourceLink.resourcePath.hierarchy[0].uid);
                        c.then(function(b) {
                            a.noteData.item.permissions = b.data.item.permissions,
                            a.noteData.item.logged_in_user_permissions = b.data.item.logged_in_user_permissions,
                            C(a.noteData),
                            a.currentAppCtrl.updateHeaderData(),
                            a.cnvInAppCommentsCtrl && a.cnvInAppCommentsCtrl.onItemPermissionsUpdatedByThisUser && a.cnvInAppCommentsCtrl.onItemPermissionsUpdatedByThisUser(),
                            a.$broadcast("render"),
                            t.showBanner("Permissions updated")
                        })
                    }
                }
                ,
                a.$on("drawSnippetOnCanvas", function(b, c, d) {
                    l.isAppInCompactView() && (a.enableCommentsPanel.active = !1,
                    a.slideCommentsPanelToRight()),
                    console.log(c, d, a.tab);
                    var e;
                    a.tab.resourceLink.resourcePath.hierarchy[1] && (e = a.tab.resourceLink.resourcePath.hierarchy[1].uid);
                    var f = a.tab.resourceLink.collaborationInfo;
                    i.isVisible(d) ? a.galleryCtrl.removeSnippetsForComment(d) : e == c.fileId && f && d == f.commentId && (M(),
                    a.galleryCtrl.drawSnippetOnCanvasViaComment(c))
                }),
                function() {
                    a.$emit("requestFullViewForApp", Z),
                    u(!0)
                }()
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvInAppComment", function() {
        return {
            restrict: "E",
            replace: !0,
            scope: !0,
            templateUrl: "notes/commentsPanel/templates/cnvInAppComment.tpl.html",
            controller: ["$scope", function(a) {
                console.log(a.comment),
                a.drawSnippetOnCanvas = function(b) {
                    a.$emit("drawSnippetOnCanvas", b)
                }
            }
            ]
        }
    }),
    b.module("convoApp").directive("cnvInAppCommentEditor", [function() {
        return {
            restrict: "E",
            priority: 0,
            scope: {
                onCommentEnter: "&cnvInAppCommentEditorOnCommentEnter",
                ctrl: "=cnvInAppCommentEditorCtrl"
            },
            templateUrl: "notes/commentsPanel/templates/cnvInAppCommentEditor.tpl.html",
            controller: ["$scope", "$q", "usersGroupsListProvider", "hashtagsProvider", function(a, b, c, d) {
                function e(a) {
                    g.textEditorCtrl = {
                        initialized: !1,
                        initialHtmlText: a || "",
                        height: i
                    },
                    g.active = !0
                }
                function f() {
                    g.active = !1
                }
                var g = a
                  , h = g.ctrl
                  , i = {
                    min: 50,
                    max: 100
                };
                g.active = !0,
                e(),
                g.onDummyTextAreaClick = function() {
                    e()
                }
                ,
                g.onEscKeyPressInTextEditor = function() {
                    f()
                }
                ,
                g.onClickOutsideWhenActive = function() {
                    g.textEditorCtrl.initialized && 0 != g.textEditorCtrl.getEditorText().trim().length || f()
                }
                ,
                g.onTextEditorSubmitOnEnter = function() {
                    g.onCommentEnter({
                        commentText: g.textEditorCtrl.getEditorText(),
                        commentHtmlText: g.textEditorCtrl.getEditorCleanHtmlText()
                    })
                }
                ,
                g.getSharedWithDropdownItems = function(a) {
                    var d = b.defer();
                    return d.resolve(c.getPublishableGroupsAndUsersOrPreviousHistory(a)),
                    d.promise
                }
                ,
                g.getHashtags = function(a) {
                    var c = b.defer();
                    return c.resolve(d.getHashtagsDropdownItems(a)),
                    c.promise
                }
                ,
                h.activate = function(a) {
                    g.active || e(a)
                }
                ,
                h.deactivate = function() {
                    f()
                }
                ,
                h.getEditorText = function() {
                    return g.textEditorCtrl.getEditorText()
                }
                ,
                h.getEditorHtmlText = function() {
                    return g.textEditorCtrl.getEditorHtmlText()
                }
                ,
                h.clearContent = function() {
                    return g.textEditorCtrl.clearContent()
                }
                ,
                h.initialized = !0
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvInAppCommentsPanel", ["$rootScope", "Comments", "usersGroupsListProvider", "idToFilterUrlFilter", "$q", "userInfo", "utils", "bannerService", "$filter", function(b, c, d, e, f, g, h, i, j) {
        return {
            restrict: "E",
            replace: !0,
            scope: !0,
            templateUrl: "notes/commentsPanel/templates/cnvInAppCommentsPanel.tpl.html",
            controller: ["$scope", "Comments", "Feed", "awsService", "accountInfo", "datetimeService", "Likes", "resourceLikeInfoModalService", "$interval", "mixpanelService", "alertsService", "UploadService", "itemService", function(c, d, e, g, h, i, k, l, m, n, o, p, q) {
                function r(a, b) {
                    for (var d = c.commentsData.comments, e = c.commentsData.total_comments, f = e - a, g = f + 10, h = !1; g > f; ) {
                        if (!d[f]) {
                            h = !0;
                            break
                        }
                        if (d[f].uid === b) {
                            h = !0;
                            break
                        }
                        f++
                    }
                    return h
                }
                function s(a, b) {
                    return f(function(d) {
                        var e = a - c.loadedCommentsCount;
                        return 10 > e ? (c.loadedCommentsCount = a,
                        void d()) : (c.loadingComments = !0,
                        void setTimeout(function f() {
                            var e = c.loadedCommentsCount + 10;
                            a > e ? (c.loadedCommentsCount = e,
                            r(e, b) ? (c.loadingComments = !1,
                            d()) : setTimeout(f, 100)) : (c.loadedCommentsCount = a,
                            c.loadingComments = !1,
                            d())
                        }, 100))
                    })
                }
                function t(a, e) {
                    var f = c.cnvInAppCommentsCtrl.getItemData();
                    if (f) {
                        var g, h = c.commentEditorCtrl.getCommentId(), a = {
                            text: a,
                            htmlText: e
                        }, i = c.commentEditorCtrl.snippetData;
                        if (!i || a.text.trim().length || !c.cnvInAppCommentsCtrl.enableSnippetsInComment)
                            if (i && a.text.trim().length > 0 && c.cnvInAppCommentsCtrl.enableSnippetsInComment) {
                                c.$emit("snippetImagePosted");
                                var j;
                                j = c.collaborationInfo ? c.collaborationInfo : {
                                    parent_resource_index: 0
                                },
                                c.commentEditorCtrl.snippetData = null ,
                                c.commentEditorCtrl.setAllowAttachments(!0),
                                g = d.postComment(a.htmlText, c.feedId, c.resourceId, c.resourceType, c.appInstanceId, i, h, i.resourceLinkData, j, null ),
                                c.comments_expanded ? c.loadedCommentsCount++ : c.loadedCommentsCount = 3,
                                g.then(function(a) {
                                    b.$broadcast("pollFeedRequest"),
                                    c.$broadcast("render")
                                })["finally"](function() {
                                    c.collaborationInfo = null ,
                                    c.$broadcast("render")
                                }),
                                c.removeCommentEditorSnippet();
                                var k = {};
                                if (k.Via = "Post View",
                                "comment" === i.snippetData.data.source)
                                    k.Type = "Comment",
                                    k.Using = "Text";
                                else if (1 === c.tab.resourceLink.resourcePath.hierarchy.length)
                                    "6" == c.tab.resourceLink.resourcePath.hierarchy[0].type ? k.Type = "Post" : "4" == c.tab.resourceLink.resourcePath.hierarchy[0].type && (k.Type = "Link"),
                                    k.Using = "Text";
                                else if (2 === c.tab.resourceLink.resourcePath.hierarchy.length)
                                    if ("files" === i.resourceLinkData.hierarchy[1].type.toLowerCase() ? k.Type = "File" : "image" === i.resourceLinkData.hierarchy[1].type.toLowerCase() && (k.Type = "Image"),
                                    "scrybe.components.snippet.MarkupBitmapSnippet" === i.snippetData.type) {
                                        var l = i.snippetData.data._items
                                          , m = l[0].type
                                          , q = "";
                                        20 == m ? q = "Box" : 0 == m ? q = "Pen" : 2 == m && (q = "Arrow");
                                        for (var r = 0, s = l.length; s > r; r++)
                                            if (l[r].type !== m) {
                                                q = "Multiple";
                                                break
                                            }
                                        k.Using = q
                                    } else
                                        k.Using = "Text";
                                n.trackEvent(n.ANNOTATED, k),
                                setTimeout(function() {
                                    c.$broadcast("render")
                                }, 0),
                                c.commentEditorCtrl.clearContent()
                            } else {
                                var j, t = null ;
                                if (j = c.collaborationInfo ? c.collaborationInfo : {
                                    parent_resource_index: 0
                                },
                                t = {
                                    app_instance: {
                                        uid: c.tab.resourceLink.resourcePath.appInstance.uid,
                                        title: c.tab.resourceLink.resourcePath.hierarchy[0].title,
                                        type: "APPINSTANCE",
                                        data: "",
                                        created_by: f.item.created_by,
                                        version: "-1"
                                    },
                                    hierarchy: [{
                                        uid: f.item.item_id,
                                        type: c.tab.resourceLink.resourcePath.hierarchy[0].type,
                                        title: f.item.title,
                                        version: 1,
                                        data: null ,
                                        created_by: f.item.created_by
                                    }]
                                },
                                c.tab.resourceLink.resourcePath.hierarchy.length > 1) {
                                    var u = _.where(f.note_files, {
                                        file_id: c.tab.resourceLink.resourcePath.hierarchy[1].uid
                                    });
                                    if (u.length) {
                                        var v;
                                        v = "IMAGE" == u[0].file_format ? "images" : "files",
                                        t.hierarchy.push({
                                            uid: c.tab.resourceLink.resourcePath.hierarchy[1].uid,
                                            type: v,
                                            title: u[0].name,
                                            version: u[0].ver,
                                            data: null ,
                                            created_by: u[0].created_by
                                        })
                                    }
                                }
                                var w = {
                                    serverData: [],
                                    data: []
                                };
                                if (c.commentEditorCtrl.waiting = !1,
                                c.commentEditorCtrl.attachments.controllers && c.commentEditorCtrl.attachments.controllers.manager_controller && c.commentEditorCtrl.attachments.controllers.manager_controller.initialized && c.commentEditorCtrl.attachments.controllers.manager_controller.isBusy()) {
                                    var x = c.$on("filesUploadManagerCtrl_allFilesProcessed", function() {
                                        x();
                                        for (var a = c.commentEditorCtrl.attachments.controllers.manager_controller.getSuccessfullyProcessedFiles(), b = 0; b < a.length; b++)
                                            a[b].status === p.FILE_STATUS_CONVERSION_REQ_FAILED && a.splice(b, 1);
                                        0 == a.length ? o.alertModal("", "The file could not be attached. Please try again.") : y(),
                                        c.commentEditorCtrl.waiting = !1
                                    });
                                    c.commentEditorCtrl.waiting = !0
                                }
                                var y = function() {
                                    if (c.commentEditorCtrl.attachments.controllers && c.commentEditorCtrl.attachments.controllers.manager_controller && c.commentEditorCtrl.attachments.controllers.manager_controller.initialized) {
                                        for (var e = c.commentEditorCtrl.attachments.controllers.manager_controller.getSuccessfullyProcessedFiles(), f = 0; f < e.length; f++)
                                            e[f].status === p.FILE_STATUS_CONVERSION_REQ_FAILED && e.splice(f, 1);
                                        for (var f = 0; f < e.length; f++) {
                                            var i = e[f]
                                              , k = null ;
                                            i.fileObjFromServer && (k = [i.fileObjFromServer]),
                                            w.serverData.push({
                                                name: i.name,
                                                size: i.size,
                                                file_name_id: i.fileId,
                                                file_id: i.serverFileId,
                                                type: i.type
                                            }),
                                            w.data.push({
                                                preLocalData: i.localUrl,
                                                thumbnail_name: i.thumbnailName,
                                                isDefaultThumbnail: -1 == i.localUrl.indexOf("files/fileIcons") ? !1 : !0,
                                                origional_file: k,
                                                height: i.height,
                                                width: i.width,
                                                mp_attachment_source: i.mp_attachment_source
                                            })
                                        }
                                    }
                                    if (0 !== a.text.trim().length || 0 !== w.serverData.length) {
                                        if (g = d.postComment(a.htmlText, c.feedId, c.resourceId, c.resourceType, c.appInstanceId, null , h, t, j, w),
                                        c.comments_expanded ? c.loadedCommentsCount++ : c.loadedCommentsCount = 3,
                                        w && w.serverData && w.serverData.length) {
                                            var l = {}
                                              , m = "";
                                            c.MP_DATA_SOURCE && ("editor" === c.MP_DATA_SOURCE.currentSubApp ? m = "Detail View" : "gallery" === c.MP_DATA_SOURCE.currentSubApp ? m = "Gallery" : "link" === c.MP_DATA_SOURCE.currentSubApp && (m = "Link View")),
                                            l.Source = m,
                                            l["Attachment Type"] = w.serverData[0].type,
                                            l["Attachment Source"] = w.data[0].mp_attachment_source,
                                            n.trackEvent(n.CLICK_SEND, l)
                                        }
                                        g.then(function(a) {
                                            c.$broadcast("render"),
                                            b.$broadcast("pollFeedRequest")
                                        })["finally"](function() {
                                            c.collaborationInfo = null ,
                                            c.$broadcast("render")
                                        }),
                                        setTimeout(function() {
                                            c.$broadcast("render")
                                        }, 0),
                                        c.commentEditorCtrl.clearContent()
                                    }
                                }
                                ;
                                c.commentEditorCtrl.waiting || y()
                            }
                    }
                }
                function u(a) {
                    a.resource_id === c.resourceId && a.updateInfo && a.updateInfo.addedComments && a.updateInfo.addedComments.length && (c.loadedCommentsCount += a.updateInfo.addedComments.length)
                }
                function v(a) {
                    x(a),
                    c.$broadcast("render")
                }
                function w(a) {
                    x(a)
                }
                function x(a) {
                    c.commentEditorCtrl.permissions = new y(a),
                    c.commentEditorCtrl.itemSharingInfoWithDropdownItems = a.itemSharingInfoWithDropdownItems,
                    c.commentEditorCtrl.render(),
                    c.$broadcast("cnvInappCommentsPanel:itemDataUpdated")
                }
                function y(a) {
                    var b = {};
                    if (a) {
                        if (b.disable = !1,
                        b.block = !a.item.logged_in_user_permissions.checkBitAt(2),
                        b.block) {
                            var d = ""
                              , e = "";
                            4 == a.item.type ? (d = j("idToNameForLinksApp")(a.item.permissions_changed_by),
                            e = j("idToFilterUrl")(a.item.permissions_changed_by, "USER")) : 6 == a.item.type && (d = j("idToNameForNotesApp")(a.item.permissions_changed_by),
                            e = j("idToFilterUrl")(a.item.permissions_changed_by, "USER")),
                            b.message = "Comments are closed for this post &nbsp;&nbsp;&nbsp;•&nbsp;&nbsp;&nbsp;<a class='meta' href='" + e + "'>" + j("limitText")(d, 80) + "</a>&nbsp;&nbsp;&nbsp;•&nbsp;&nbsp;&nbsp;<a class='meta' href='javascript:void(0);'>" + j("dateAgo")(a.item.permissions_change_date, c.server_now_timestamp, !0, !0) + "</a>"
                        }
                        b.allowLegitAtMentions = !a.item.logged_in_user_permissions.checkBitAt(3)
                    } else
                        b.block = !1,
                        b.disable = !0;
                    return b
                }
                function z(a) {
                    c.$$phase || c.$digest(),
                    c.$broadcast("render")
                }
                function A() {
                    c.server_now_timestamp = i.getServerTimestamp()
                }
                var B = {
                    min: 115,
                    max: 115
                }
                  , C = 6e4;
                k.on("commentLikedByRemoteUser", z),
                k.on("commentUnlikedByRemoteUser", z),
                d.on("commentAddedByRemoteUser", z),
                d.on("commentUpdatedByRemoteUser", z),
                d.on("commentDeletedByRemoteUser", z),
                c.commentsInEditModeCurrentFocus = {
                    state: null ,
                    status: "new_comment"
                },
                c.cnvInAppCommentsCtrl.enableSnippetsInComment = c.cnvInAppCommentsCtrl.enableSnippetsInComment || !1,
                c.commentEditorCtrl = {
                    initialized: !0,
                    height: B,
                    source: "InAppCommentsPanel",
                    getNoteId: function() {
                        return c.resourceId
                    },
                    getAppInstanceId: function() {
                        return c.appInstanceId
                    },
                    onEscInCommentEditorEditor: function() {
                        c.removeCommentEditorSnippet()
                    },
                    onFocus: function(a) {
                        c.commentsInEditModeCurrentFocus.state = a,
                        c.commentsInEditModeCurrentFocus.status = "new_comment"
                    },
                    permissions: y(null ),
                    onCommentEntered: t
                },
                c.pageSize = 10;
                var D = 3;
                c.loadedCommentsCount = D,
                c.commentsData = null ,
                c.loadingComments = !1,
                c.server_now_timestamp = i.getServerTimestamp(),
                c.resourceId = c.tab.resourceLink.resourcePath.hierarchy[0].uid,
                c.resourceType = c.tab.resourceLink.resourcePath.hierarchy[0].type,
                c.appInstanceId = c.tab.resourceLink.resourcePath.appInstance.uid,
                c.feedId = e.getFeedIdOfResource(c.appInstanceId, c.resourceId),
                c.commentsInEditMode = 0,
                d.getComments_newApi(c.feedId, c.resourceId, c.appInstanceId, !0, 0, 3).then(function(a) {
                    c.commentsData = a,
                    d.on("commentsUpdated", c.newCommentsBadge),
                    c.$broadcast("render")
                }),
                c.commentWillGoInEdit = function(a, b) {
                    c.commentsInEditMode++,
                    d.off("commentsUpdated", u),
                    d.on("commentsUpdated", u),
                    setTimeout(function() {
                        c.setElementInView(b)
                    }, 400)
                }
                ,
                c.$on("comment-will-exit-from-edit", function(a) {
                    a.stopPropagation(),
                    c.commentsInEditMode > 0 && c.commentsInEditMode--,
                    c.commentsInEditMode <= 0 && (d.off("commentsUpdated", u),
                    c.comments_expanded || (c.loadedCommentsCount = D))
                }),
                c.setCurrentCommentInEdit = function(a) {
                    c.commentsInEditModeCurrentFocus.state = a,
                    c.commentsInEditModeCurrentFocus.status = null 
                }
                ,
                c.likeInfoTooltipText = function(a) {
                    j("getFeedItemLikeInfo")({
                        resource_id: c.resourceId,
                        app_instance_id: c.appInstanceId,
                        like_info: {
                            liked_by: c.likesInfo.last_liked_by
                        }
                    }, a)
                }
                ,
                c.showHideCommentsPanel = function(a) {
                    c.$emit("showHideCommentsPanel", a)
                }
                ,
                c.$on("setItemDirty", function(a) {
                    c.$broadcast("render")
                }),
                c.openLikeInfoModal = function() {
                    c.tab.resourceLink.resourcePath.hierarchy.length > 1 ? l.openPostSubResourceLikeInfoModal(c.tab.resourceLink.resourcePath.hierarchy[0].uid + "," + c.tab.resourceLink.resourcePath.hierarchy[1].uid, c.tab.resourceLink.resourcePath.hierarchy[0].uid, c.tab.resourceLink.resourcePath.appInstance.uid) : l.openPostLikeInfoModal(c.tab.resourceLink.resourcePath.hierarchy[0].uid, c.tab.resourceLink.resourcePath.hierarchy[0].uid, c.tab.resourceLink.resourcePath.appInstance.uid, 1)
                }
                ,
                c.getOpenedResource = function() {
                    var a = c.tab.resourceLink.resourcePath.hierarchy;
                    return a[a.length - 1]
                }
                ,
                c.focusAndHighlightComment = function(a) {
                    if (d.checkIfCommentExistsInDataStore(a, c.resourceId, c.appInstanceId))
                        if (c.commentExistsInView(a))
                            c.scrollToComment(a);
                        else {
                            var b = d.getComments_newApi(null , c.resourceId, c.appInstanceId, !1, null , null );
                            b.then(function(b, d) {
                                var e = b.total_comments;
                                c.commentsData = b,
                                c.loadedCommentsCount = e > 10 ? 10 : e,
                                s(e, a).then(function() {
                                    setTimeout(function() {
                                        c.scrollToComment(a)
                                    }, 100)
                                })
                            })
                        }
                    else {
                        var b = d.getComments_newApi(null , c.resourceId, c.appInstanceId, !0, null , null );
                        b.then(function(b, d) {
                            var e = b.total_comments;
                            c.commentsData = b,
                            c.loadedCommentsCount = e > 10 ? 10 : e,
                            s(e, a).then(function() {
                                setTimeout(function() {
                                    c.scrollToComment(a)
                                }, 100)
                            })
                        })
                    }
                }
                ,
                c.cnvInAppCommentsCtrl.initialize = function(a) {
                    var b = "undefined" == typeof a ? !0 : a;
                    2 == c.tab.resourceLink.resourcePath.hierarchy.length ? c.viewType = "GalleryView" : 1 == c.tab.resourceLink.resourcePath.hierarchy.length && (c.viewType = "NoteView"),
                    c.tab.resourceLink.collaborationInfo && c.focusAndHighlightComment(c.tab.resourceLink.collaborationInfo.commentId),
                    b && (c.likesInfo = null ),
                    c.$broadcast("render")
                }
                ,
                c.cnvInAppCommentsCtrl.setItemLikesInfo = function(a) {
                    c.likesInfo = a.data,
                    c.$broadcast("render")
                }
                ,
                c.cnvInAppCommentsCtrl.itemDataReceivedFromServer = v,
                c.cnvInAppCommentsCtrl.itemDataPolledFromServer = w,
                c.fetchLikesInfo = function() {
                    var a = c.resourceId + "," + c.tab.resourceLink.resourcePath.hierarchy[1].uid
                      , b = k.getLikeInfo(null , a, c.resourceId, c.appInstanceId, 0);
                    b.then(function(a, b) {
                        c.likesInfo = a.data,
                        c.$broadcast("render"),
                        c.$broadcast("refreshImage")
                    })
                }
                ,
                c.trackExpandComments = function() {
                    var a;
                    a = c.tab && 1 == c.tab.resourceLink.resourcePath.hierarchy.length ? "Post Viewer" : "Image Viewer",
                    n.trackEvent(n.EXPAND_COMMENTS, {
                        Via: a
                    })
                }
                ,
                c.trackCollapseComments = function() {
                    var a;
                    a = c.tab && 1 == c.tab.resourceLink.resourcePath.hierarchy.length ? "Post Viewer" : "Image Viewer",
                    n.trackEvent(n.HIDE_COMMENTS, {
                        Via: a
                    })
                }
                ,
                c.$on("Comments:unHideAll", function(b, d) {
                    c.$broadcast("Comments:showAll"),
                    d && a.setTimeout(function() {
                        c.focusAndHighlightComment(d)
                    }, 900)
                }),
                A(),
                m(A, C),
                c.$on("$destroy", function() {
                    k.off("commentLikedByRemoteUser", z),
                    k.off("commentUnlikedByRemoteUser", z),
                    d.off("commentAddedByRemoteUser", z),
                    d.off("commentUpdatedByRemoteUser", z),
                    d.off("commentDeletedByRemoteUser", z)
                }),
                c.cnvInAppCommentsCtrl.onItemPermissionsUpdatedByRemoteUser = function() {
                    c.commentEditorCtrl.permissions = new y(c.cnvInAppCommentsCtrl.getItemData()),
                    c.$broadcast("render"),
                    c.$$phase || c.$digest()
                }
                ,
                c.cnvInAppCommentsCtrl.onItemPermissionsUpdatedByThisUser = function() {
                    c.commentEditorCtrl.permissions = new y(c.cnvInAppCommentsCtrl.getItemData()),
                    c.$$phase || c.$digest()
                }
            }
            ],
            link: function(h, j, k) {
                function l(b, c) {
                    var d = j.find("cnv-comment-editor")[0]
                      , e = d.getBoundingClientRect();
                    e.bottom < 0 || e.top > (a.innerHeight || document.documentElement.clientHeight) ? $("body").animate({
                        scrollTop: d.offsetTop - a.innerHeight / 2
                    }, 400, b(c)) : b(c)
                }
                function m(a) {
                    var b = j.find("#" + a).find(".comment_highlighter");
                    setTimeout(function() {
                        b.css("left", "-4px").fadeIn(200, function() {
                            setTimeout(function() {
                                b.fadeOut(200)
                            }, 5e3)
                        })
                    }, 0)
                }
                function n() {
                    this.node = r[0],
                    this.previousScrollHeightMinusTop = 0,
                    this.readyFor = "up"
                }
                function o(a) {
                    var b = s.scrollTop()
                      , c = j.find("#" + a).position()
                      , d = s.height();
                    return c && c.top > 0 && c.top + b < b + d ? !0 : !1
                }
                function p(a, b, c) {
                    var d = j.find("#" + a)[0].offsetTop;
                    s.animate({
                        scrollTop: d
                    }, {
                        duration: 400
                    })
                }
                h.$watch("server_now_timestamp", function() {
                    setTimeout(function() {
                        h.$broadcast("render_date")
                    }, 0)
                }),
                _.extend(h.cnvInAppCommentsCtrl, Backbone.Events);
                h.comment = null ;
                var q = 0;
                h.cnvInAppCommentsCtrl.embedSnippetImage = function(a) {
                    if ("new_comment" !== h.commentsInEditModeCurrentFocus.status)
                        h.$broadcast("embedSnippetImageInComment", {
                            currentlyFocusedEditor: h.commentsInEditModeCurrentFocus.state,
                            data: a
                        });
                    else {
                        var b = !0;
                        if (h.commentEditorCtrl.attachments.controllers && h.commentEditorCtrl.attachments.controllers.manager_controller && h.commentEditorCtrl.attachments.controllers.manager_controller.initialized && (b = !1,
                        i.showBanner("You can add one attachment to comments at a time.", !1, !1, null , 3e3)),
                        b) {
                            if (h.commentEditorCtrl.snippetData || h.focusOnCommentsEditor(),
                            h.commentEditorCtrl.snippetData = a,
                            h.commentEditorCtrl.setAllowAttachments(!1),
                            a.fileViewerTextAnnotation && h.cnvInAppCommentsCtrl.enableSnippetsInComment) {
                                var c = a.snippetData.data.source || "detail_view";
                                "detail_view" == c ? h.commentEditorCtrl.snippetData.classes = "detail_snippet" : "comment" == c && (h.commentEditorCtrl.snippetData.classes = "comment_snippet")
                            } else
                                h.cnvInAppCommentsCtrl.enableSnippetsInComment && setTimeout(function() {
                                    h.commentEditorCtrl.activate("", !0)
                                }, 0);
                            h.$$phase || h.$digest()
                        }
                    }
                }
                ,
                h.cnvInAppCommentsCtrl.showSnippetImage = function() {
                    h.cnvInAppCommentsCtrl.embedSnippetImage(h.commentEditorCtrl.snippetData)
                }
                ,
                h.cnvInAppCommentsCtrl.clearSnippetImage = function() {
                    h.commentEditorCtrl.snippetData && (h.commentEditorCtrl.snippetData = null ,
                    h.commentEditorCtrl.setAllowAttachments(!0)),
                    h.collaborationInfo = null ,
                    h.cnvInAppCommentsCtrl.enableSnippetsInComment = !1
                }
                ,
                h.removeCommentEditorSnippet = function() {
                    h.cnvInAppCommentsCtrl.clearSnippetImage(),
                    h.$emit("snippetImagePosted", !0)
                }
                ,
                h.cnvInAppCommentsCtrl.getCommentOffset = function(a) {
                    var b = j.find("#" + a);
                    return b.length ? {
                        comment: b[0].getBoundingClientRect(),
                        container: j[0].querySelector(".comments-scrollable-panel").getBoundingClientRect()
                    } : void 0
                }
                ,
                h.onCommentReplyButtonClick = function(a) {
                    if (h.commentEditorCtrl.initialized && !h.commentEditorCtrl.waiting) {
                        var b = ""
                          , f = c.getUser(a);
                        if (f) {
                            var g = e(a, "USER", !0).slice(1);
                            g = g.slice(0, g.indexOf("#")) + "&ignoreatmention=1" + g.slice(g.indexOf("#")),
                            b = '<a class="' + d.AT_MENTION_DOM_CLASSES.MENTION + '" href="convo:' + g + '">@' + _.escape(f.name) + "</a>&nbsp;"
                        }
                        h.commentEditorCtrl.activate(b, !0)
                    }
                }
                ,
                h.setElementInView = function(a) {
                    if (a) {
                        var b = a[0].offsetTop
                          , c = b + a.height() - r.height();
                        r.scrollTop() < c && r.animate({
                            scrollTop: c
                        }, {
                            duration: 400
                        })
                    }
                }
                ,
                h.newCommentsBadge = function(a) {
                    if (a.resource_id == h.resourceId && a.app_instance_id == h.appInstanceId && a.areNewerComments && a.updateInfo && a.updateInfo.addedComments && a.updateInfo.addedComments.length) {
                        for (var b = a.updateInfo.addedComments, c = g.getUserId(), d = !1, e = 0, f = b.length; f > e; e++)
                            if (b[e].from_user !== c) {
                                d = !0;
                                break
                            }
                        if (d) {
                            var i = function() {
                                var a = r[0].scrollHeight - r[0].scrollTop <= r[0].clientHeight + j.find(".comment-editor-container").outerHeight(!0) + j.find(".footer-dead-space").outerHeight(!0) + 100;
                                a && (j.find(".new-comments-badge").removeClass("new-comments-badge-enter-sequence").addClass("new-comments-badge-leave-sequence"),
                                setTimeout(function() {
                                    j.find(".new-comments-badge").removeClass("new-comments-badge-leave-sequence").hide()
                                }, 500),
                                r.off("scroll", i))
                            }
                              , k = r[0].scrollHeight - r[0].scrollTop > r[0].clientHeight + j.find(".comment-editor-container").outerHeight(!0) + j.find(".footer-dead-space").outerHeight(!0) + 100;
                            k && (j.find(".new-comments-badge").hasClass("new-comments-badge-enter-sequence") || (j.find(".new-comments-badge").removeClass("new-comments-badge-leave-sequence").addClass("new-comments-badge-enter-sequence").show(),
                            r.on("scroll", i)))
                        }
                    }
                    setTimeout(function() {
                        h.$broadcast("render")
                    }, 0)
                }
                ,
                h.scrollToBottom = function(a) {
                    var b = r[0].scrollHeight - r[0].clientHeight - j.find(".comment-editor-container").outerHeight(!0) - j.find(".footer-dead-space").outerHeight(!0)
                      , b = r[0].scrollHeight - r[0].clientHeight;
                    a ? r.animate({
                        scrollTop: b
                    }, {
                        duration: 400
                    }) : r[0].scrollTop = b
                }
                ,
                h.commentExistsInView = function(a) {
                    return j.find(".comments-container > #" + a).length > 0
                }
                ,
                h.$on("commentReplyButtonClick", function(a, b) {
                    h.collaborationInfo = {
                        replied_to_comment_id: b.commentId,
                        replied_to_user_id: b.from,
                        parent_resource_index: 0
                    },
                    l(h.onCommentReplyButtonClick, b.from)
                });
                var r = j.find(".bottom-bar");
                r.scroll(function(a) {
                    a.target.scrollTop ? j.find(".panel-controls").addClass("border-bottom") : j.find(".panel-controls").removeClass("border-bottom"),
                    b.$emit("SnippetArrow:repositionAll")
                }),
                h.comments_expanded = !1,
                h.loadMoreComments = function() {
                    h.loadingComments || (h.loadingComments = !0,
                    c.getComments_newApi(h.feedId, h.resourceId, h.appInstanceId, !0, h.commentsData.comments.length, h.pageSize).then(function(a) {
                        h.loadingComments = !1,
                        h.loadedCommentsCount += 10,
                        r.scrollTop(q),
                        h.comments_expanded = !0
                    }))
                }
                ,
                h.loadAllComments = function(b) {
                    if (!h.loadingComments) {
                        h.loadingComments = !0;
                        var d = f.defer();
                        return c.getComments_newApi(h.feedId, h.resourceId, h.appInstanceId, !0, h.commentsData.comments.length, 10).then(function(e) {
                            h.comments_expanded = !0,
                            h.loadedCommentsCount = 10,
                            b || a.setTimeout(function() {
                                h.scrollToBottom(!1),
                                h.ScrollPosition.prepareFor("up")
                            }, 0),
                            c.getComments_newApi(h.feedId, h.resourceId, h.appInstanceId, !0, 0, null ).then(function(b) {
                                h.comments_expanded = !0,
                                h.loadingComments = !1,
                                h.ScrollPosition.restore(),
                                a.setTimeout(function() {}, 0),
                                d.resolve()
                            })
                        }),
                        d.promise
                    }
                }
                ,
                h.showLatestCommentsOnly = function() {
                    h.loadedCommentsCount = 3,
                    h.comments_expanded = !1,
                    r.scrollTop(0),
                    setTimeout(function() {
                        r.trigger("scroll")
                    }, 100)
                }
                ,
                h.focusOnCommentsEditor = function() {
                    setTimeout(function() {
                        h.commentEditorCtrl.activate("", !0);
                        var a = (j.find(".comments-container"),
                        r.prop("scrollHeight") - r.height());
                        r.scrollTop(a)
                    }, 0)
                }
                ,
                h.scrollToComment = function(a) {
                    var b = j.find("#" + a)
                      , c = b.offset().top
                      , d = j.find(".bottom-bar")
                      , e = d[0].getBoundingClientRect();
                    console.log("scroll to comment >>>>", c, e.top, e.top + d.height()),
                    c > e.top && c < e.bottom || (r.scrollTop(b.position().top),
                    console.log("Scrolling to: " + b.position().top)),
                    m(a)
                }
                ,
                n.prototype.restore = function() {
                    "up" == this.readyFor && (this.node.scrollTop = this.node.scrollHeight - this.previousScrollHeightMinusTop)
                }
                ,
                n.prototype.prepareFor = function(a) {
                    this.readyFor = a || "up",
                    this.previousScrollHeightMinusTop = this.node.scrollHeight - this.node.scrollTop
                }
                ,
                h.ScrollPosition = new n,
                h.cnvInAppCommentsCtrl.focusOnCommentsEditor = h.focusOnCommentsEditor,
                h.$on("Comment:replySnippetCreated", function(a, b, c) {
                    var d = !0;
                    if (h.commentEditorCtrl.attachments.controllers && h.commentEditorCtrl.attachments.controllers.manager_controller && h.commentEditorCtrl.attachments.controllers.manager_controller.initialized)
                        d = !1,
                        i.showBanner("You can add one attachment to comments at a time.", !1, !1, null , 3e3);
                    else {
                        h.commentEditorCtrl.snippetData = b,
                        h.commentEditorCtrl.setAllowAttachments(!1),
                        h.collaborationInfo = c,
                        c && c.replied_to_user_id && h.onCommentReplyButtonClick(c.replied_to_user_id);
                        var e = (j.find(".comments-container"),
                        r.prop("scrollHeight") - r.height());
                        r.animate({
                            scrollTop: e
                        }, {
                            duration: 400,
                            complete: function() {
                                var a = h.cnvInAppCommentsCtrl.getItemData();
                                b.resourceLinkData = {
                                    app_instance: {
                                        uid: h.tab.resourceLink.resourcePath.appInstance.uid,
                                        title: a.item.title,
                                        type: "APPINSTANCE",
                                        data: "",
                                        created_by: a.item.created_by,
                                        version: "-1"
                                    },
                                    hierarchy: [{
                                        uid: a.item.item_id,
                                        type: h.tab.resourceLink.resourcePath.hierarchy[0].type,
                                        title: a.item.title,
                                        version: "-1",
                                        data: null ,
                                        created_by: a.item.created_by
                                    }]
                                },
                                h.cnvInAppCommentsCtrl.enableSnippetsInComment = !0,
                                h.cnvInAppCommentsCtrl.embedSnippetImage(b)
                            }
                        })
                    }
                }),
                h.$on("Comment:ReplyCommentPlayback", function(a, b, d) {
                    var e = j
                      , f = function(a) {
                        h.$broadcast("Comments:showAllWithoutAnim");
                        for (var c = [], e = {}, f = !1, g = 0; g < h.commentsData.comments.length; g++) {
                            var j = h.commentsData.comments[g];
                            if (b.replied_to_comment_id == j.uid && c.push(j.uid),
                            d == j.uid) {
                                c.push(j.uid);
                                break
                            }
                            c.length >= 1 && b.replied_to_comment_id != j.uid && (e[j.uid] = !0,
                            f || (f = !0))
                        }
                        setTimeout(function() {
                            a && h.scrollToBottom(!1),
                            2 == c.length ? (f && setTimeout(function() {
                                h.$broadcast("Comments:displayShowAllButton", c[0])
                            }, 800),
                            setTimeout(function() {
                                h.$broadcast("Comments:replied-comment-pointer", c[1])
                            }, 800),
                            setTimeout(function() {
                                h.$broadcast("Comments:source-comment-pointer", c[0])
                            }, 800),
                            setTimeout(function() {
                                h.$broadcast("Comments:hideCommentsForReplySnippetPlayback", e)
                            }, 400),
                            setTimeout(function() {
                                setTimeout(function() {
                                    o(c[0]) ? o(c[0]) && !o(c[1]) && p(c[0]) : p(c[0]),
                                    b.snippet_data && setTimeout(function() {
                                        h.$broadcast("Comments:highlightText", c[0], b.snippet_data)
                                    }, 850)
                                }, 0)
                            }, 0)) : i.showBanner("The comment that this reply is referring to is deleted by the user.", !1, !1, null )
                        }, 0)
                    }
                    ;
                    if (c.checkIfCommentExistsInDataStore(b.replied_to_comment_id, h.resourceId, h.appInstanceId))
                        if (h.comments_expanded) {
                            var g = c.getComments_newApi(null , h.resourceId, h.appInstanceId, !1, null , null );
                            g.then(function(a, b) {
                                h.comments_expanded = !0,
                                h.loadedCommentsCount = a.comments.length,
                                f()
                            })
                        } else if (e.find(".comments-container > #" + b.replied_to_comment_id).length > 0)
                            f();
                        else {
                            var g = c.getComments_newApi(null , h.resourceId, h.appInstanceId, !1, null , null );
                            g.then(function(a, b) {
                                h.comments_expanded = !0,
                                h.loadedCommentsCount = a.comments.length,
                                f()
                            })
                        }
                    else {
                        var g = h.loadAllComments(!0);
                        g.then(function() {
                            h.loadedCommentsCount = h.commentsData.total_comments,
                            f()
                        })
                    }
                });
                var s = j.find(".comments-collection")
                  , t = function() {
                    if (h.comments_expanded) {
                        var a = r.scrollTop();
                        50 > a && (h.ScrollPosition.prepareFor("up"),
                        h.loadedCommentsCount += 10,
                        h.$$phase || (h.$digest(),
                        h.ScrollPosition.restore()))
                    }
                }
                ;
                r.on("scroll", t),
                h.$on("$destroy", function() {
                    r.off("scroll", t)
                })
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvNoteEditor", ["xmppEditorService", "UploadService", "utils", "textSelections", "$timeout", "$rootScope", "mixpanelService", "loader", "datetimeService", "$interval", function(b, c, d, e, g, h, j, k, l, m) {
        return {
            restrict: "A",
            scope: !0,
            link: function(b, f, g) {
                function i(a) {
                    var c = x[0].scrollTop
                      , d = 30;
                    if (b.editorCtrl.setLastScrollPos(x.scrollTop()),
                    b.noteEditorCtrl && "function" == typeof b.noteEditorCtrl.getRootElement && (t = b.noteEditorCtrl.getRootElement().getBoundingClientRect()),
                    b.mode === b.NOTE_READONLY_MODE && (u = {
                        undocked: {
                            element: f.find(".note-info"),
                            height: f.find(".note-info").outerHeight(!0)
                        },
                        docked: {
                            element: f.find(".note-info .docked")
                        },
                        conditionalOffsetTop: f.find(".inline-message-box").outerHeight(!0)
                    },
                    c >= u.undocked.height / 2 + u.undocked.element[0].offsetTop ? u.docked.element.css({
                        width: u.undocked.element[0].offsetWidth - 2 * d + "px",
                        left: u.undocked.element.offset().left + d + "px"
                    }).removeClass("ng-hide").addClass("animate") : u.docked.element.removeClass("animate").addClass("ng-hide")),
                    b.mode === b.NOTE_EDIT_MODE) {
                        v = {
                            origional_element: f.find(".extended-controls"),
                            fake_element: f.find(".fake-extended-toolbar"),
                            fake_button_element: f.find(".fake-extended-botton")
                        },
                        inlineMessageBoxHeight = f.find(".inline-message-box").outerHeight(!0);
                        var e = inlineMessageBoxHeight ? 24 : 0;
                        c >= v.fake_button_element[0].offsetTop + inlineMessageBoxHeight ? v.origional_element.find(".edit-submit").show().addClass("btn-slide-down") : v.origional_element.find(".edit-submit").hide().removeClass("btn-slide-down"),
                        c >= v.fake_element[0].offsetTop + e ? (v.origional_element.addClass("top-fixed-content"),
                        v.origional_element.css({
                            width: v.fake_element[0].offsetWidth + "px",
                            left: v.fake_element.offset().left - d + "px"
                        }).addClass("top-fixed-content"),
                        v.fake_element.height(v.origional_element[0].clientHeight)) : (v.origional_element.removeClass("top-fixed-content"),
                        v.fake_element.height(0))
                    }
                    h.$emit("SnippetArrow:repositionAll")
                }
                function n() {
                    z && (z.parentNode.removeChild(z),
                    z = null ,
                    A = null ,
                    b.$emit("Notes:ClearSnippet"))
                }
                function o() {
                    n(),
                    e.rmAllSelections()
                }
                function p() {
                    o(),
                    e.rmSelection(),
                    b.oldSelectionData = null 
                }
                function q(a) {
                    return a.target !== z || a.target.parentNode !== z
                }
                function r() {
                    a.getSelection ? a.getSelection().removeAllRanges() : document.selection && document.selection.empty()
                }
                function s(a) {
                    if (B || !q(a) || b.noteData.item && !b.noteData.item.logged_in_user_permissions.checkBitAt(2))
                        return void (B = !1);
                    o(),
                    e.rmAllSelections();
                    var c = e.getSelection("cnvNotesAppSpecific");
                    if (c && !z && c.text.trim() && c.beginIndex < c.endIndex) {
                        c = e.getSelection("ql-editor"),
                        z = e.showIcoAboveSel(b.getNoteScrollableContainer(), c.sel.getRangeAt(0).nativeRange);
                        var f = function(a) {
                            a.target.classList.contains("cross") ? (B = !0,
                            o(),
                            r()) : (B = !1,
                            A = c.sel,
                            delete c.sel,
                            e.rmSelection(),
                            b.mode === b.NOTE_READONLY_MODE && (e.highlighter.applyToSelection(),
                            b.oldSelectionData = c))
                        }
                        ;
                        z.addEventListener("mousedown", f, !0);
                        var g = function(a) {
                            var e = !1;
                            if (!B) {
                                e = !0;
                                var f = {};
                                f.resource_id = b.noteData.item.item_id,
                                f.resource_type = b.noteData.item.type,
                                f.fileViewerTextAnnotation = !0,
                                f.classes = "detail_snippet",
                                f.snippetData = {},
                                f.snippetData.type = "scrybe.components.snippet.NotesSnippet",
                                f.snippetData.data = c,
                                f.snippetData.data.snippetId = d.generateUniqueId(),
                                f.resourceLinkData = {},
                                f.resourceLinkData.app_instance = {},
                                f.resourceLinkData.app_instance.created_by = b.noteData.item.created_by,
                                f.resourceLinkData.app_instance.title = b.tab.resourceLink.resourcePath.hierarchy[0].title,
                                f.resourceLinkData.app_instance.uid = b.tab.resourceLink.resourcePath.appInstance.uid,
                                f.resourceLinkData.app_instance.type = "APPINSTANCE",
                                f.resourceLinkData.app_instance.version = "-1",
                                f.resourceLinkData.app_instance.data = "",
                                f.resourceLinkData.hierarchy = [{}],
                                f.resourceLinkData.hierarchy[0].uid = b.noteData.item.item_id,
                                f.resourceLinkData.hierarchy[0].type = b.noteData.item.type,
                                f.resourceLinkData.hierarchy[0].title = b.noteData.item.title,
                                f.resourceLinkData.hierarchy[0].version = 1,
                                f.resourceLinkData.hierarchy[0].data = null ,
                                f.resourceLinkData.hierarchy[0].created_by = b.noteData.item.created_by,
                                B = !0,
                                b.$emit("embedSnippetImage", f),
                                o()
                            }
                            e && (a.preventDefault(),
                            a.stopPropagation())
                        }
                        ;
                        z.addEventListener("click", g)
                    } else
                        e.rmSelection(),
                        b.$emit("Notes:ClearSnippet"),
                        b.oldSelectionData = null 
                }
                var t, u, v, w = 6e4, x = f.find(".note-resize-wrapper");
                x.scroll(i),
                $(a).resize(i),
                a.onUnload = b.onunload;
                var y = null ;
                b.triggerScroll = function() {
                    x.trigger("scroll")
                }
                ,
                b.setScrollPosToPrev = function() {
                    t && (x[0].scrollTop += b.noteEditorCtrl.getRootElement().getBoundingClientRect().top - t.top)
                }
                ,
                b.scrollToEnd = function() {
                    $(x).animate({
                        scrollTop: x[0].scrollHeight
                    }, {
                        duration: 400
                    })
                }
                ,
                b.getNoteScrollableContainer = function() {
                    return f[0].querySelector("#scrollable-content")
                }
                ,
                b.contentDidAppear = function() {
                    x.scrollTop(b.editorCtrl.getLastScrollPos());
                    var a = $(x).find(".ql-container")[0];
                    a && $(a).bind("mousewheel", function(c) {
                        if (b.mode === b.NOTE_EDIT_MODE) {
                            var d = !0;
                            (0 == a.scrollTop && c.deltaY > 0 || a.scrollTop >= a.scrollHeight - a.clientHeight && c.deltaY < 0) && (d = !1),
                            d && c.stopImmediatePropagation()
                        }
                    });
                    var e = f.find(".file-input");
                    y = d.generateUniqueCharId(),
                    e.attr("id", y);
                    var g = {};
                    g.id = "#" + y,
                    g.dropZoneId = "#note-editor-files-paste-target",
                    g.pasteZoneId = "#note-editor-files-paste-target",
                    g.uploadAcknowledgement = b.uploadAcknowledgement;
                    var h = c.init(g);
                    b.fileInputContext = h.context,
                    h.input_element.on("cnvchange", function(a, d) {
                        d && d.event && (d.event == c.EVENT_FILE_SELECTED ? b.onFileSelected(d.file) : b.insertOptionsCtrl.onChange(d))
                    }),
                    f.find(".extended-controls").removeClass("hidden")
                }
                ,
                b.triggerFileInputClick = function() {
                    d.fireEvent(f.find("#" + y)[0], "click")
                }
                ,
                b.initLazyLoad = function() {
                    setTimeout(function() {
                        $("img.lazy", f).lazyload({
                            container: $(".attachments", f),
                            effect: "fadeIn"
                        })
                    }, 0)
                }
                ,
                b.editorCtrl.selectText = function(a) {
                    function c() {
                        return b.noteEditorCtrl.getRootElement().textContent
                    }
                    function d(c) {
                        a.commentId || (a.commentId = b.tab.resourceLink.collaborationInfo.commentId),
                        k.loadScript(k.SCRIPTS.GALLERY_VENDOR).then(function() {
                            h.$emit("SnippetArrow:draw", a.commentId, a)
                        }),
                        j.trackEvent(j.ANNOTATION_PLAYBACK, {
                            "Snippet Type": "Text",
                            Via: "Post View Comment Panel"
                        })
                    }
                    function f(a) {}
                    if (b.mode !== b.NOTE_EDIT_MODE) {
                        var g = {
                            data: a,
                            nodes: b.noteEditorCtrl.getRootElement(),
                            scrollContainer: b.getNoteScrollableContainer(),
                            highlight: !0,
                            highlightRemoveTime: 8e3,
                            selectionOffset: 100,
                            getContent: c,
                            complete: d,
                            failure: f
                        };
                        e.selectText("nested", g)
                    }
                }
                ,
                b.editorCtrl.removeSnippetsForComment = function(a) {
                    h.$emit("SnippetArrow:destroy", a),
                    e.rmSelectionById(a)
                }
                ,
                b.restoreHighlightedSelection = function() {
                    b.oldSelectionData && e.restoreHighlightedSelection("nested", {
                        nodes: b.noteEditorCtrl.getRootElement(),
                        data: b.oldSelectionData
                    })
                }
                ;
                var z, A, B;
                b.clearCommentTooltip = n,
                b.editorCtrl.snippetImagePosted = p,
                f[0].querySelector(".note-wrapper").addEventListener("mouseup", function(a) {
                    setTimeout(function() {
                        s(a)
                    }, 0)
                }, !0),
                b.onDestroy = function() {
                    $(a).off("resize", i),
                    m.cancel(C)
                }
                ,
                b.updateServerNowTimestampInScope = function() {
                    b.server_now_timestamp = l.getServerTimestamp()
                }
                ,
                b.updateServerNowTimestampInScope();
                var C = m(b.updateServerNowTimestampInScope, w);
                b.$watch("server_now_timestamp", function() {
                    setTimeout(function() {
                        b.$broadcast("render_date")
                    }, 0)
                })
            },
            controller: ["$scope", "config", "accountInfo", "$q", "AppLinks", "Note", "Likes", "notesAppDataProvider", "userInfo", "atMentionsListProvider", "hashtagsProvider", "alertsService", "itemService", "bannerService", "utils", "Comments", "userImgUrlFilter", "UserProfileImage", "Feed", "localizeFilter", "getFileResourceLinkUrlFilter", "getFeedItemLikeInfoFilter", "getResourceLinkUrlFilter", "$location", "getFileExtensionForIconFilter", "appTitleManager", "nativeCommBridge", "usersGroupsListProvider", "dateAgoFilter", function(c, d, g, h, k, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C, D, E, F, G, H, I, J) {
                function K() {
                    ta.editorCtrl.headerData.starred = ta.noteData.item.starred,
                    ta.editorCtrl.headerData.isSystemMessage = ta.ACTIONS.IS_SYSTEM_MESSAGE,
                    ta.editorCtrl.headerData.muted = ta.noteData.item.muted,
                    ta.editorCtrl.headerData.deleted = ta.noteData.item.deleted,
                    ta.editorCtrl.headerData.deletable = ta.noteData.item.deletable,
                    ta.editorCtrl.headerData.restorable = ta.noteData.item.restorable,
                    Q()
                }
                function L(a, b) {
                    if (a.action_type != b)
                        return !1;
                    var c = Number(a.action_allowed_to).toString(2)
                      , d = !1;
                    return Ka ? c[Sa.ADMINISTRATOR] && (d = !0) : ta.noteData.item.created_by == ta.this_user ? c[Sa.CREATOR] && (d = !0) : c[Sa.OTHER] && (d = !0),
                    d
                }
                function M(a) {
                    c.showCommentsPanel = a,
                    c.$broadcast("render"),
                    "function" == typeof c.triggerScroll && setTimeout(function() {
                        c.triggerScroll(),
                        setTimeout(c.triggerScroll, 150)
                    }, 250)
                }
                function N() {
                    return ta.saving ? +ta.noteData.item.revision_no + 1 : +ta.noteData.item.revision_no
                }
                function O(a) {
                    ta.RTC.currentEditingUser.user_id != a.user_id && ta.RTC.LOCKED && (ta.noteEditorCtrl.collaboration.mc_service.setCursor(a.user_id, x(a.user_id, a.profile_image_type, a.profile_image_version, y.PROFILE_IMAGE_SIZE_32x32), 0, a.name),
                    ta.RTC.currentEditingUser = a)
                }
                function P() {
                    function a() {
                        ta.RTC.CONNECTED = !0;
                        var a = Oa.queryLock(ta.resourceId);
                        if (a.status === f.rtc.LockStatus.FREE)
                            ta.RTC.LOCKED = !1,
                            ta.noteEditorCtrl.collaboration.mc_service.clearCursors(),
                            ta.noteData.item.draft || (ta.mode == ta.NOTE_EDIT_MODE ? aa() : Ma.toLowerCase() === La.EDIT && !ta.RTC.ACQURING_LOCK && ta.relatedPermissions.canEdit && (Ma = "read",
                            ta.RTC.ACQURING_LOCK = !0,
                            Oa.acquireLock()));
                        else if (a.status === f.rtc.LockStatus.IN_USE) {
                            ta.RTC.LOCKED = !0;
                            var b = o.getUser(a.userId);
                            b && O({
                                user_id: b.id,
                                name: b.label,
                                profile_image_type: b.profile_image_type,
                                profile_image_version: b.profile_image_version
                            })
                        } else
                            a.status === f.rtc.LockStatus.SUCCESS && (ta.RTC.ACQURING_LOCK = !1,
                            Ga = !1,
                            ta.mode !== ta.NOTE_EDIT_MODE && Z(),
                            ka());
                        ta.$broadcast("render"),
                        ta.$$phase || ta.$digest()
                    }
                    ta.noteEditorCtrl.collaboration.initialize(),
                    ta.noteEditorCtrl.collaboration.on("text-change", function(a) {
                        if (ta.mode === ta.NOTE_EDIT_MODE) {
                            a.delta,
                            a.source;
                            a["selection-change"] = ta.noteEditorCtrl.getSelection(),
                            a["author-id"] = ta.this_user,
                            Oa.broadcastChange({
                                "text-change": a
                            }),
                            c.clearCommentTooltip()
                        }
                    }),
                    ta.noteEditorCtrl.collaboration.on("selection-change", function(a) {
                        if (!ta.saving && !ta.sharing) {
                            a.range,
                            a.source;
                            a["author-id"] = ta.this_user,
                            Oa.broadcastChange({
                                "selection-change": a
                            }),
                            console.log("selection-change fired")
                        }
                    });
                    var d = {
                        resourceId: ta.resourceId,
                        appInstanceId: ta.appInstanceId,
                        getRevision: N
                    };
                    Oa = b.initialize(d, ta.tab.appContCtrl.rtcManager),
                    Oa.events.on(Pa.DISCONNECTED, function(a) {
                        console.log("NOTES APP :: XMPP_DISCONNECTED!"),
                        ta.RTC.CONNECTED = !1,
                        ta.$broadcast("render"),
                        ta.$$phase || ta.$digest()
                    }),
                    Oa.events.on(Qa.PubsubEvents.ACQUIRE_LOCK_RESULT, function(a) {
                        if (console.log("NOTES APP :: ACQUIRE_LOCK_RESULT!" + JSON.stringify(a)),
                        a.data.status === Qa.LockStatus.SUCCESS) {
                            console.log(".............LOCK_RESULT.............");
                            var b = !0;
                            ta.mode === wa ? (console.log(".............LOCK_RESULT > EDIT............."),
                            ta.RTC.ACQURING_LOCK = !1,
                            b = !1,
                            ka()) : (console.log(".............LOCK_RESULT > READONLY............."),
                            ta.RTC.LOCKED = !1,
                            ta.RTC.currentEditingUser = {},
                            ta.noteEditorCtrl.collaboration.mc_service.clearCursors(),
                            console.log(".............LOCK_RESULT > POLL............."),
                            v.isIE() && (Na = c.getNoteScrollableContainer().scrollTop),
                            da({
                                update_editor: b,
                                set_cursor_at_end: b
                            }).then(function() {
                                console.log(".............LOCK_RESULT > POLL > RESPONSE............."),
                                ta.RTC.ACQURING_LOCK = !1,
                                Z(),
                                ta.mode === wa && (console.log(".............LOCK_RESULT > POLL > RESPONSE > STOP UPDATE DATA............."),
                                Ga = !1),
                                ta.$broadcast("render"),
                                ta.$$phase || ta.$digest()
                            })),
                            Oa.requestForPoll()
                        } else
                            ta.RTC.ACQURING_LOCK = !1;
                        ta.$broadcast("render"),
                        ta.$$phase || ta.$digest()
                    }),
                    Oa.events.on(Qa.PubsubEvents.RESOURCE_LOCKED, function(a) {
                        console.log(".............LOCKED............."),
                        ta.mode === wa && (console.log(".............LOCKED > EDIT............."),
                        aa()),
                        ca(),
                        ta.RTC.LOCKED = !0;
                        var b = o.getUser(a.data.userId);
                        b && O({
                            user_id: b.id,
                            name: b.label,
                            profile_image_type: b.profile_image_type,
                            profile_image_version: b.profile_image_version
                        }),
                        ta.RTC.CONNECTED = !0,
                        ta.$broadcast("render"),
                        ta.$$phase || ta.$digest()
                    }),
                    Oa.events.on(Qa.PubsubEvents.RESOURCE_RELEASED, function(a) {
                        console.log(".............RELEASED............."),
                        ta.RTC.LOCKED || a.data.userId !== ta.this_user ? (console.log(".............RELEASED > REMOTE_USER > POLL............."),
                        da({
                            update_editor: !0
                        }).then(function() {
                            console.log(".............RELEASED > REMOTE_USER > POLL > CLEAR_CURSORS............."),
                            ta.RTC.LOCKED = !1,
                            ta.RTC.currentEditingUser = {},
                            ta.noteEditorCtrl.collaboration.mc_service.clearCursors(),
                            ta.$broadcast("render")
                        })) : (console.log(".............RELEASED > THIS_USER > SWITCH_MODE_TO_READONLY............."),
                        aa()),
                        Ca = !1,
                        ta.$broadcast("render"),
                        ta.$$phase || ta.$digest()
                    }),
                    Oa.events.on(Qa.PubsubEvents.CHANGE_RECEIVED, function(a) {
                        if (console.log("KH: " + Object.keys(a)),
                        ta.RTC.LOCKED) {
                            var b = a;
                            for (var c in b)
                                if (!b[c].applied) {
                                    ta.noteEditorCtrl.collaboration.updateContents(b[c].delta, "api");
                                    var d = b[c]["selection-change"];
                                    ta.RTC.currentEditingUser.user_id == b[c]["author-id"] && d && ta.noteEditorCtrl.collaboration.mc_service.moveCursor(b[c]["author-id"], d.start),
                                    b[c].applied = !0
                                }
                        }
                    }),
                    Oa.events.on(Oa.EVENTS_TYPES.SELECTION_CHANGE, function(a) {
                        console.log("NOTES APP :: SELECTION_CHANGE!" + JSON.stringify(a)),
                        ta.RTC.LOCKED && ta.RTC.currentEditingUser.user_id == a["author-id"] && a.range && ta.noteEditorCtrl.collaboration.mc_service.moveCursor(a["author-id"], a.range.start)
                    }),
                    Oa.events.on(Oa.EVENTS_TYPES.REQUEST_FOR_POLL, function(a) {
                        console.log("NOTES APP :: REQUEST_FOR_POLL!" + JSON.stringify(a)),
                        a["request-for-poll"].user_info && (console.log(".............REQUEST_FOR_POLL............."),
                        ta.mode === xa && (console.log(".............POLL > READONLY............."),
                        O(a["request-for-poll"].user_info),
                        da({
                            update_editor: !0
                        })))
                    }),
                    Oa.events.on(Qa.PubsubEvents.NOTIFICATION_RECEIVE, function(a) {
                        console.log("NOTES APP :: NOTIFICATION_RECEIVE!" + JSON.stringify(a))
                    }),
                    Oa.events.on(Qa.PubsubEvents.PROPERTY_REMOVE, function(a) {
                        console.log("NOTES APP :: PROPERTY_REMOVE!" + JSON.stringify(a))
                    }),
                    Oa.events.on(Qa.PubsubEvents.PROPERTY_CHANGE, function(a) {
                        console.log("NOTES APP :: PROPERTY_CHANGE!" + JSON.stringify(a))
                    }),
                    Oa.events.on(Qa.PubsubEvents.PROPERTY_ADD, function(a) {
                        console.log("NOTES APP :: PROPERTY_ADD!" + JSON.stringify(a))
                    }),
                    Oa.events.on(Qa.PubsubEvents.REMOVED, function(a) {
                        console.log("NOTES APP :: REMOVED!" + JSON.stringify(a))
                    }),
                    Oa.events.on(Qa.PubsubEvents.UNSUBSCRIBED, function(a) {
                        console.log("NOTES APP :: UNSUBSCRIBED!" + JSON.stringify(a))
                    }),
                    Oa.events.on(Qa.PubsubEvents.ITEM_RETRACT, function(a) {
                        console.log("NOTES APP :: ITEM_RETRACT!" + JSON.stringify(a))
                    }),
                    Oa.events.on(Qa.PubsubEvents.ITEM_RECEIVE, function(a) {
                        console.log("NOTES APP :: ITEM_RECEIVE!" + JSON.stringify(a))
                    }),
                    Oa.events.on(Qa.PubsubEvents.RECONNECT, function(b) {
                        console.log("NOTES APP :: RECONNECT!" + JSON.stringify(b)),
                        a()
                    }),
                    Oa.events.on(Qa.PubsubEvents.SYNCHRONIZATION_CHANGE, function(a) {
                        console.log("NOTES APP :: SYNCHRONIZATION_CHANGE!" + JSON.stringify(a))
                    }),
                    Oa.isConnected() && a(),
                    Oa.events.on(Pa.CONNECTED, a)
                }
                function Q() {
                    ta.relatedPermissions.canEdit ? (ta.dropzoneCtrl.message = "Drop Files Here",
                    ta.dropzoneCtrl.messageClasses = "") : (ta.dropzoneCtrl.message = "You don't have permissions to add files to this post.",
                    ta.dropzoneCtrl.messageClasses = "icon-before-message")
                }
                function R(a, b) {
                    if (ta.shareWithSelf = [],
                    ta.noteData = a,
                    +ta.noteData.item.show_title ? ta.NodeTitle.value = ta.noteData.item.title : ta.NodeTitle.value = "",
                    ta.ACTIONS = {},
                    ta.ACTIONS.IS_SYSTEM_MESSAGE = ta.noteData.item.is_system_message > 0,
                    ta.ACTIONS.EDIT = !ta.ACTIONS.IS_SYSTEM_MESSAGE,
                    ta.ACTIONS.BODY_CONTENT = $("<div>" + ta.noteData.item.complete_text + "</div>")[0].textContent.length || !ta.noteData.item.is_system_message,
                    ta.ACTIONS.ATTACHMENTS = ta.ACTIONS.EDIT || 3 == ta.noteData.item.is_system_message || 13 == ta.noteData.item.is_system_message || 14 == ta.noteData.item.is_system_message,
                    ta.ACTIONS.ATTACHMENTS_MUTATION = !0,
                    !p.isAdminMode() && (ta.ACTIONS.ATTACHMENTS && 13 == ta.noteData.item.is_system_message && c.noteData.item.created_by != ta.this_user || ta.ACTIONS.ATTACHMENTS && 14 == ta.noteData.item.is_system_message && !Ka) && (ta.ACTIONS.ATTACHMENTS_MUTATION = !1),
                    ta.noteEditorCtrl = {},
                    ta.noteEditorCtrl.collaboration = {},
                    ta.noteEditorCtrl.initialized = !1,
                    ta.noteEditorCtrl.height = ua,
                    ta.noteEditorCtrl.editorInitialized = P,
                    ta.noteEditorCtrl.initialHtmlText = ta.noteData.item.complete_text || "",
                    ta.filesUploadManagerCtrl = {},
                    ta.filesUploadManagerCtrl.files = [],
                    ta.filesUploadManagerCtrl.initialized = !1,
                    ta.filesUploadManagerCtrl.templateType = "notes",
                    ta.filesUploadManagerCtrl.filesUnderProcessCount = 0,
                    ta.filesUploadManagerCtrl.getSharedFilesLength = function() {
                        return ta.noteData.note_files.length || 0
                    }
                    ,
                    ta.insertOptionsCtrl = {},
                    ta.toggleExtendedToolbar = !1,
                    ta.noteData.item.draft && ta.relatedPermissions.canEdit ? (ta.mode = wa,
                    ta.toggleExtendedToolbar = !0,
                    ha(),
                    ba()) : (ta.mode = xa,
                    Ga = !0),
                    ta.insertOptionsCtrl.onTriggerFileChooser = function() {
                        ta.triggerFileInputClick()
                    }
                    ,
                    ha(),
                    T(),
                    S(),
                    K(),
                    ta.active = !0,
                    null  !== ta.editorCtrl.commentId) {
                        var d = z.getFeedIdOfResource(ta.tab.resourceLink.resourcePath.appInstance.uid, ta.tab.resourceLink.resourcePath.hierarchy[0].uid);
                        w.getComment(d, ta.tab.resourceLink.resourcePath.hierarchy[0].uid, ta.tab.resourceLink.resourcePath.appInstance.uid, ta.editorCtrl.commentId).then(function(a) {
                            setTimeout(function() {
                                a.resource_link && a.resource_link.collaboration_info.snippet_data && ta.editorCtrl.selectText(a.resource_link.collaboration_info.snippet_data.data)
                            }, 100)
                        })
                    }
                    ga(),
                    ta.editorCtrl.headerData.initialized = !0,
                    setTimeout(function() {
                        ta.$broadcast("render"),
                        setTimeout(function() {
                            ta.contentDidAppear(),
                            ia(ra(ta.noteData.item.draft, -1))
                        }, 0)
                    }, 0)
                }
                function S() {
                    var a = ta.noteData.note_files;
                    $(a).each(function(b) {
                        var c = a[b];
                        c.isThumbnailAvailable = 32 & c.available_previews,
                        c.isVideoPreviewAvailable = 64 & c.available_previews
                    })
                }
                function T() {
                    var a = ta.noteData.note_files;
                    $(a).each(function(b) {
                        var e = a[b];
                        e.dropdownCtrl = {
                            align: "right"
                        },
                        e.dropdownCtrl.options = [],
                        e.dropdownCtrl.options.push({
                            label: e.name,
                            callback: function() {
                                console.log("file name clicked")
                            },
                            isNotHoverable: !0
                        });
                        var f = "";
                        "IMAGE" == e.file_format && (f = +e.width && +e.height ? e.width + "x" + e.height : ""),
                        e.dropdownCtrl.options.push({
                            label: f + (f ? ", " : "") + parseInt(e.size / 1024) + "KB",
                            callback: function() {
                                console.log("file size clicked")
                            },
                            "class": "subtext",
                            isNotHoverable: !0
                        }),
                        e.dropdownCtrl.options.push({
                            isDivider: !0
                        }),
                        e.dropdownCtrl.options.push({
                            label: "Copy link",
                            callback: function() {
                                v.copyToClipboard(d.CONVO_LINKS_BASE_URL + B(e.file_id, e.file_format, 6, ta.noteData.item.type, ta.noteData.item.item_id, e.name, null ).slice(1))
                            }
                        }),
                        e.dropdownCtrl.options.push({
                            label: "Download",
                            callback: function() {
                                v.download([{
                                    path: g.getAccountId() + "/note" + e.item_id + "/" + e.original_name.toString(),
                                    name: e.name
                                }])
                            }
                        });
                        var h = !0;
                        e.dropdownCtrl.options.push({
                            isDivider: !0
                        }),
                        e.dropdownCtrl.type = "note_editor_file";
                        for (var i = 0; i < ta.noteData.resource_type_actions.length; i++) {
                            var j = ta.noteData.resource_type_actions[i];
                            L(j, "NOTE_FILE") && (h = !1,
                            e.dropdownCtrl.options.push({
                                label: j.action_title,
                                callback: function() {
                                    var a = m.operformAction(ta.noteData.item_id, j.action, v.findInObjectArray(ta.noteData.files["files_" + ta.noteData.item_id], "file_id", e.file_id));
                                    u.showBanner_promise(a, "Please wait", "Done", "Error... click here to try again", !1, !1, a),
                                    a.then(function() {
                                        c.$emit("userProfilePictureUpdated")
                                    })
                                }
                            }))
                        }
                        h && !ta.relatedPermissions.canEdit && e.dropdownCtrl.options.splice(e.dropdownCtrl.options.length - 1, 1),
                        ta.ACTIONS.ATTACHMENTS_MUTATION && ta.relatedPermissions.canEdit && e.dropdownCtrl.options.push({
                            label: "Delete",
                            callback: function() {
                                ta.deleteFile(e.file_id)
                            }
                        })
                    })
                }
                function U() {
                    for (var a in ta.noteData.note_files)
                        if (ta.noteData.note_files[a].selected)
                            return !0;
                    return !1
                }
                function V() {
                    var a = !0;
                    for (var b in ta.noteData.note_files)
                        ta.noteData.note_files[b].selected || (a = !1);
                    return a
                }
                function W() {
                    if (ta.editorCtrl.headerData.initialized) {
                        var a = function(a) {
                            if (ta.noteData.item.draft)
                                ta.noteData.sharedWithListItems = a,
                                na(Ba.DRAFT_COMMIT_AND_CLOSE);
                            else {
                                for (var b = [], c = 0; c < a.length; c++) {
                                    var d = {
                                        published_to: a[c].id,
                                        type: a[c].type,
                                        access_level: "ALL"
                                    };
                                    b.push(d)
                                }
                                var e = t.updateSharingInfo(null , b, ta.appInstanceId, ta.resourceId);
                                e.then(function(a) {
                                    console.log("Sharing Info Updated."),
                                    da({
                                        update_editor: ta.mode === ta.NOTE_READONLY_MODE
                                    })
                                }),
                                u.showBanner_promise(e, "Sharing...", "Shared", "Error... click here to try again", !1, !1, e)
                            }
                        }
                        ;
                        X(a)
                    }
                }
                function X(a) {
                    var b = "home/components/cnvSharePostWidget/cnvSharePostWidget.tpl.html";
                    controller = "cnvSharePostWidgetCtrl";
                    var c = {
                        sharingInfo: function() {
                            return ta.noteData.sharedWithListItems
                        },
                        preventProcessSharingInfo: function() {
                            return !0
                        },
                        submitAnyway: function() {
                            return !0
                        }
                    };
                    s.customModal(b, controller, c).result.then(function(b) {
                        if (a)
                            a(b);
                        else {
                            for (var c = [], d = 0; d < b.length; d++) {
                                var e = {
                                    published_to: b[d].id,
                                    type: b[d].type,
                                    access_level: "ALL"
                                };
                                c.push(e)
                            }
                            var f = t.updateSharingInfo(null , c, ta.appInstanceId, ta.resourceId);
                            f.then(function(a) {
                                console.log("Sharing Info Updated.")
                            }),
                            u.showBanner_promise(f, "Sharing...", "Shared", "Error... click here to try again", !1, !1, f)
                        }
                    })
                }
                function Y() {
                    if (ta.editorCtrl.headerData.initialized) {
                        var a = "home/components/cnvAddTagsWidget/cnvAddTagsWidget.tpl.html"
                          , b = "cnvAddTagsWidgetCtrl"
                          , d = {
                            tags: function() {
                                return ta.noteData.item.tags || ""
                            }
                        };
                        s.customModal(a, b, d).result.then(function(a) {
                            for (var b = [], d = 0; d < a.length; d++)
                                b.push(a[d].label);
                            var e = t.updateTags(null , b.join(), ta.appInstanceId, ta.resourceId);
                            e.then(function(d) {
                                console.log("Tags Updated."),
                                ta.noteData.item.tags = b.join(),
                                ta.noteData.item.tagList = a,
                                c.$broadcast("render")
                            }),
                            j.trackEvent(j.ADDED_TAGS_TO_POST, {
                                Via: "Post Viewer Modal"
                            }),
                            u.showBanner_promise(e, "Updating tags...", "Updated", "Error... click here to try again", !1, !1, e)
                        })
                    }
                }
                function Z() {
                    ta.relatedPermissions.canEdit && (setTimeout(function() {
                        ta.noteEditorCtrl.enable(!0)
                    }, 0),
                    ta.toggleExtendedToolbar = !0,
                    ta.mode = wa,
                    ta.statusText = "",
                    +ta.noteData.item.show_title ? ta.NodeTitle.value = ta.noteData.item.title : ta.NodeTitle.value = "",
                    ha(),
                    setTimeout(function() {
                        ta.setScrollPosToPrev(),
                        Ia && (ta.scrollToEnd(),
                        Ia = !1),
                        ta.triggerScroll()
                    }, 0),
                    K(),
                    ba(),
                    Ga = !1,
                    c.clearCommentTooltip(),
                    Na && (c.getNoteScrollableContainer().scrollTop = Na,
                    Na = null ))
                }
                function aa() {
                    ta.noteEditorCtrl.disable(),
                    ta.toggleExtendedToolbar = !1,
                    ta.mode = xa,
                    setTimeout(function() {
                        ta.setScrollPosToPrev(),
                        ta.triggerScroll()
                    }, 0),
                    K(),
                    ca(),
                    ha(),
                    Ga = !0,
                    c.clearCommentTooltip()
                }
                function ba() {
                    Fa = setInterval(ka, 3e4)
                }
                function ca() {
                    clearInterval(Fa)
                }
                function da(a) {
                    var b = ta.tab.appContCtrl.immediatePollForItemData();
                    return b.then(function() {
                        if (a.update_editor) {
                            var b = fa();
                            ta.noteEditorCtrl.setContent(ta.noteData.item.complete_text, a.set_cursor_at_end),
                            ta.oldSelectionData && ta.restoreHighlightedSelection(),
                            b && e.restoreNativeSelection("nested", {
                                nodes: ta.noteEditorCtrl.getRootElement(),
                                data: b
                            }),
                            ta.mode == xa && Oa.triggerDeltaChangeSetForCurrentRevision(N())
                        }
                    }),
                    b
                }
                function ea(a) {
                    if (Ga) {
                        if (ta.noteData = a,
                        T(),
                        S(),
                        K(),
                        ta.mode === xa && !ta.RTC.LOCKED) {
                            var b = fa();
                            ta.noteEditorCtrl.setContent(ta.noteData.item.complete_text, !1),
                            ta.oldSelectionData && ta.restoreHighlightedSelection(),
                            b && e.restoreNativeSelection("nested", {
                                nodes: ta.noteEditorCtrl.getRootElement(),
                                data: b
                            })
                        }
                        ta.$broadcast("render")
                    } else
                        Q(),
                        console.log("Data polled from server but not updating the view.");
                    if (c.updateServerNowTimestampInScope(),
                    ta.mode == ta.NOTE_EDIT_MODE && !ta.relatedPermissions.canEdit && !Ca) {
                        Ca = !0;
                        var d = function() {
                            Oa && (Oa.releaseLock(ta.RTC.RELEASE_LOCK_FORCEFULLY),
                            da({
                                update_editor: !0
                            }))
                        }
                        ;
                        s.alertModal("Convo", "You no longer have permissions to edit this post. Any unsaved changes will be lost.", "Ok", d, !0, !0)
                    }
                }
                function fa() {
                    var b = null ;
                    try {
                        var c = a.getSelection && a.getSelection();
                        if (c && c.rangeCount > 0) {
                            var d = c.getRangeAt(0);
                            d.collapsed || (b = e.getOffsetIndexes(c.getRangeAt(0), ta.noteEditorCtrl.getRootElement(), !1))
                        }
                    } catch (f) {
                        console.log("sb teek ha.")
                    } finally {
                        return b
                    }
                }
                function ga() {
                    w.getComments_newApi(null , ta.resourceId, ta.appInstanceId, !0, 0, 3).then(function(a) {
                        ta.editorCtrl.headerData.totalComments = a.total_comments,
                        w.on("commentsUpdated", function(b) {
                            b.resource_id == ta.resourceId && b.app_instance_id == ta.appInstanceId && (ta.editorCtrl.headerData.totalComments = a.total_comments)
                        })
                    })
                }
                function ha() {
                    ta.mode == xa ? ta.submitText = Ea.EDIT : ta.submitText = ta.noteData.item.draft ? Ea.PUBLISH : Ea.DONE
                }
                function ia(a) {
                    Da = a || {}
                }
                function ja() {
                    sharingData = I.getUserListItem(p.user_id),
                    null  != sharingData && ta.shareWithSelf.push(sharingData)
                }
                function ka() {
                    console.log("......Saving...."),
                    0 == ta.noteData.sharedWithListItems.length && ja();
                    var a = !0;
                    ta.filesUploadManagerCtrl.initialized && ta.filesUploadManagerCtrl.isBusy() && (a = !1),
                    a && la()
                }
                function la() {
                    if (ta.saving || ta.sharing)
                        return !1;
                    ta.saving = !0;
                    var a = oa(ta.noteData.item.draft ? Ba.DRAFT : Ba.COMMIT);
                    -1 === a ? (ta.saving = !1,
                    ta.noteData.item.draft ? ta.statusText = za + A(ta.noteData.item.last_edit_date, !0) : ta.statusText = ya + A(ta.noteData.item.last_edit_date, !0)) : ta.statusText = Aa,
                    ta.$broadcast("render")
                }
                function ma() {
                    var a = function(a) {
                        ta.noteData.sharedWithListItems = a,
                        na(Ba.DRAFT_COMMIT_AND_CLOSE)
                    }
                    ;
                    X(a)
                }
                function na(a) {
                    function b() {
                        if (0 == ta.noteData.sharedWithListItems.length)
                            return void console.log("Can't share the note content, cause: Empty sharing_info.");
                        var a = !0;
                        if (ta.filesUploadManagerCtrl.initialized && ta.filesUploadManagerCtrl.isBusy()) {
                            ta.sharing = !0;
                            var b = ta.$on("filesUploadManagerCtrl_allFilesProcessed", function() {
                                b();
                                var a = ta.filesUploadManagerCtrl.getSuccessfullyProcessedFiles();
                                0 == a.length ? (s.alertModal("", "The files could not be attached. Please try again."),
                                ta.sharing = !1) : oa(c)
                            });
                            a = !1
                        }
                        a && (ta.sharing = !0,
                        oa(c))
                    }
                    var c = a || Ba.COMMIT_AND_CLOSE;
                    ta.sharing || (ta.editorCtrl.onItemPermissionsUpdatedByRemoteUser = function() {
                        ta.$broadcast("render")
                    }
                    ,
                    ta.saving ? (ta.sharing = !0,
                    Ha.once("itemDataSavedOnServer", b)) : b())
                }
                function oa(a) {
                    var b, c = a == Ba.DRAFT ? 1 : 0, d = a == Ba.COMMIT ? 1 : 0;
                    -1 == Da.auto_save && (Da.auto_save = d);
                    var e = ra(c, d);
                    return JSON.stringify(e) == JSON.stringify(Da) ? a == Ba.COMMIT || a == Ba.DRAFT ? (Da.auto_save = -1,
                    -1) : (pa(null , a),
                    !0) : (b = m.createNote(e.noteId, e.title, e.bodyText, e.bodyHtmlText, e.shareWith, e.attachedFiles, e.draft, ta.noteData.item.revision_no, e.tags, e.auto_save, e.permissions),
                    ta.$broadcast("render"),
                    ta.noteData.item.draft && a == Ba.COMMIT_AND_CLOSE && u.showBanner_promise(b, "Publishing...", "Published", "Error... click here to try again", !1, !1, b),
                    b.then(function(b) {
                        ia(e),
                        pa(b.data, a)
                    }, function() {
                        qa(a)
                    }),
                    !0)
                }
                function pa(a, b) {
                    var c = !1
                      , d = ta.saving;
                    if (ta.saving = ta.sharing = !1,
                    a && (c = !0,
                    ta.noteData = sa(o.renderNoteDataResponse(a)),
                    ta.editorCtrl.itemDataSavedOnServer(a),
                    T(),
                    S(),
                    K()),
                    b == Ba.DRAFT ? ta.statusText = za + A(ta.noteData.item.last_edit_date, !0) : ta.statusText = ya + A(ta.noteData.item.last_edit_date, !0),
                    b == Ba.COMMIT_AND_CLOSE ? (Oa.releaseLock(ta.RTC.RELEASE_LOCK_FORCEFULLY),
                    ta.RTC.RELEASE_LOCK_FORCEFULLY && (ta.RTC.RELEASE_LOCK_FORCEFULLY = !1),
                    Da.auto_save = -1) : b == Ba.DRAFT_COMMIT_AND_CLOSE && (aa(),
                    Da.auto_save = -1),
                    d && Ha.trigger && Ha.trigger("itemDataSavedOnServer"),
                    ta.$broadcast("render"),
                    c && (Oa.requestForPoll(),
                    ta.$emit("notesApp:noteTextEdited")),
                    ta.tab.hasOwnProperty("localDetailsObject")) {
                        delete ta.tab.localDetailsObject;
                        var e = k.urlParamsStrToObj(E.hash() || "");
                        e.hasOwnProperty("local_details_object") && (delete e.local_details_object,
                        E.hash(JSON.stringify(e)))
                    }
                    G.setAppTitle(ta.NodeTitle.value)
                }
                function qa(a) {
                    var b = ta.saving;
                    ta.saving = ta.sharing = !1,
                    a == Ba.DRAFT ? ta.statusText = "Couldn't save draft." : ta.statusText = "Couldn't save changes.",
                    b && Ha.off("itemDataSavedOnServer"),
                    ta.$broadcast("render")
                }
                function ra(a, b) {
                    for (var c = [], d = 0; d < ta.noteData.sharedWithListItems.length; d++) {
                        var e = ta.noteData.sharedWithListItems[d];
                        c.push({
                            published_to: e.id,
                            type: e.type,
                            access_level: "ALL"
                        })
                    }
                    for (var d = 0; d < ta.shareWithSelf.length; d++) {
                        var e = ta.shareWithSelf[d];
                        c.push({
                            published_to: e.id,
                            type: e.type,
                            access_level: "ALL"
                        })
                    }
                    ta.shareWithSelf = [];
                    var f = ta.noteData.item_id
                      , g = ta.noteData.item.permissions
                      , h = ta.NodeTitle.value;
                    0 === parseInt(ta.noteData.item.show_title) && h && j.trackEvent(j.ADDED_TITLE_TO_POST);
                    var i = ""
                      , k = "";
                    ta.noteEditorCtrl.initialized && (i = ta.noteEditorCtrl.getEditorText() || "",
                    k = ta.noteEditorCtrl.getEditorHtmlText() || "");
                    for (var l = [], d = 0; d < ta.noteData.note_files.length; d++) {
                        var m = ta.noteData.note_files[d];
                        l.push({
                            name: m.name,
                            size: "" + m.size,
                            file_name_id: m.original_name.split(".")[0].replace("-orignal", ""),
                            file_id: "" + m.file_id,
                            type: m.type
                        })
                    }
                    if (ta.filesUploadManagerCtrl.initialized)
                        for (var n = ta.filesUploadManagerCtrl.getSuccessfullyProcessedFiles(), d = 0; d < n.length; d++) {
                            var m = n[d];
                            l.push({
                                name: m.name,
                                size: "" + m.size,
                                file_name_id: m.fileId,
                                file_id: m.serverFileId,
                                type: m.type
                            })
                        }
                    for (var o = "", p = ta.noteData.item.tagList || [], d = 0; d < p.length; d++)
                        o += p[d].label + ",";
                    var q = {
                        noteId: f,
                        title: h,
                        bodyText: i,
                        bodyHtmlText: k,
                        shareWith: c,
                        attachedFiles: l,
                        tags: o,
                        draft: a,
                        auto_save: b,
                        permissions: g
                    };
                    return q
                }
                function sa(a) {
                    for (var b = a.note_files || [], c = ta.filesUploadManagerCtrl.getSuccessfullyProcessedFiles(), d = 0; d < b.length; d++) {
                        var e = v.findInObjectArray(c, "serverFileId", b[d].file_id);
                        e && ta.filesUploadManagerCtrl.removeFile(e.fileId)
                    }
                    var f;
                    if (!ta.noteData.item.draft) {
                        f = ta.noteData.sharedWithListItems || [];
                        for (var d = 0; d < f.length; d++) {
                            var g = v.findInObjectArray(a.sharedWithListItems, "id", f[d].id);
                            g || a.sharedWithListItems.push(f[d])
                        }
                    }
                    for (var h = ta.noteData.item.tagList || [], d = 0; d < h.length; d++) {
                        var g = v.findInObjectArray(a.item.tagList, "id", h[d].id);
                        g || a.item.tagList.push(f[d])
                    }
                    return a
                }
                var ta = c;
                ta.NodeTitle = {},
                ta.NodeTitle.value = "";
                var ua = {
                    min: 72
                }
                  , va = 5
                  , wa = 1
                  , xa = 2
                  , ya = "Autosaved at "
                  , za = "Autosaved in draft at "
                  , Aa = "Saving..."
                  , Ba = {
                    COMMIT: "commit",
                    COMMIT_AND_CLOSE: "commitandclose",
                    DRAFT_COMMIT_AND_CLOSE: "draftcommitandclose",
                    DRAFT: "draft"
                }
                  , Ca = !1
                  , Da = {}
                  , Ea = {
                    PUBLISH: "Publish",
                    EDIT: "Edit",
                    DONE: "Done"
                }
                  , Fa = null 
                  , Ga = !1
                  , Ha = {}
                  , Ia = !1;
                _.extend(Ha, Backbone.Events),
                ta.NOTE_EDIT_MODE = wa,
                ta.NOTE_READONLY_MODE = xa,
                ta.mode = !1,
                ta.active = !1,
                ta.dropzoneCtrl = {},
                ta.dropzoneCtrl.message = "Drop Files Here";
                var Ja = !1
                  , Ka = p.userRole == p.USER_ROLE_ADMINISTRATOR
                  , La = {
                    EDIT: "edit",
                    READ: "read"
                }
                  , Ma = ta.tab.resourceLink.view || ""
                  , Na = null ;
                ta.this_user = p.getUserId(),
                ta.CONVO_LINKS_BASE_URL = d.CONVO_LINKS_BASE_URL,
                ta.server_now_timestamp = l.getServerTimestamp(),
                ta.resourceId = ta.tab.resourceLink.resourcePath.hierarchy[0].uid,
                ta.resourceType = ta.tab.resourceLink.resourcePath.hierarchy[0].type,
                ta.appInstanceId = ta.tab.resourceLink.resourcePath.appInstance.uid,
                ta.RTC = {
                    CONNECTED: !1,
                    LOCKED: !1,
                    ACQURING_LOCK: !1,
                    currentEditingUser: {},
                    RELEASE_LOCK_FORCEFULLY: !1
                };
                var Oa = null 
                  , Pa = f.chatsdk.ChatEvents
                  , Qa = f.rtc
                  , Ra = {
                    ENTER: 13,
                    ESCAPE: 27,
                    SAVE: 83,
                    TAB: 9
                };
                ta.onTitleKeydown = function(a) {
                    var b = !1;
                    (a.ctrlKey || a.metaKey) && a.keyCode === Ra.ENTER ? (ta.onCtrlOrCmdEnterPressInTextEditor(),
                    b = !0) : (a.ctrlKey || a.metaKey) && a.keyCode === Ra.SAVE ? (ta.onCtrlOrCmdSavePressInTextEditor(),
                    b = !0) : a.keyCode === Ra.ESCAPE ? (ta.onEscKeyPressInTextEditor(),
                    b = !0) : a.shiftKey && a.keyCode === Ra.TAB && (ta.focusTagsInput(),
                    b = !0),
                    b && (a.preventDefault(),
                    a.stopImmediatePropagation())
                }
                ,
                ta.onEscKeyPressInToField = function() {}
                ,
                ta.onItemAddedInToField = function(a) {}
                ,
                ta.onItemRemovedInToField = function(a) {}
                ,
                ta.onAddMoreSharingInfoClick = function() {
                    X()
                }
                ,
                ta.onEscKeyPressInTagsField = function() {}
                ,
                ta.onItemAddedInTagField = function() {
                    j.trackEvent(j.ADDED_TAGS_TO_POST, {
                        Via: "Post Viewer"
                    })
                }
                ,
                ta.onAddMoreTagsClick = function() {
                    Y()
                }
                ,
                ta.getShareWithDropdownItems = function(a, b) {
                    var c = h.defer()
                      , d = [];
                    return "@" == b ? d = q.queryPublishableUsersAndGroups(a, va) : ":" == b && (d = q.queryEmojiData(a, va)),
                    c.resolve(d),
                    c.promise
                }
                ,
                ta.getShareWithDropdownItemsForToField = function(a, b) {
                    var c = h.defer()
                      , d = [];
                    return d = q.queryPublishableUsersAndGroups(a, b + va),
                    c.resolve(d),
                    c.promise
                }
                ,
                ta.getHashtags = function(a) {
                    var b = h.defer();
                    return b.resolve(r.getHashtagsDropdownItems(a, va)),
                    b.promise
                }
                ,
                ta.onUrlAddedInNoteEditor = function(a) {}
                ,
                ta.onAtMentionAdded = function(a) {
                    v.findInObjectArray(ta.noteData.sharedWithListItems, "id", a.id) || ta.noteData.sharedWithListItems.push(a);
                    var b = v.findInObjectArray(ta.noteData.sharedWithListItems, "id", a.id);
                    b && (b.readonly = !0,
                    b.removeable = !0)
                }
                ,
                ta.onHashTagAdded = function(a) {}
                ,
                ta.onAtMentionRemoved = function(a) {
                    for (var b in ta.noteData.sharedWithListItems)
                        ta.noteData.sharedWithListItems[b].id === a.id && ta.noteData.sharedWithListItems[b].removeable && ta.noteData.sharedWithListItems.splice(b, 1)
                }
                ,
                ta.onTextSelectionRemoved = function(a) {
                    for (var b = 0; b < ta.noteData.sharedWithListItems.length; b++)
                        -1 == a.indexOf(ta.noteData.sharedWithListItems[b].id) && ta.noteData.sharedWithListItems[b].removeable && ta.noteData.sharedWithListItems[b].readonly && (ta.noteData.sharedWithListItems.splice(b, 1),
                        --b)
                }
                ,
                ta.onEscKeyPressInTextEditor = function() {
                    console.log("esc key press")
                }
                ,
                ta.onCtrlOrCmdEnterPressInTextEditor = function() {}
                ,
                ta.onCtrlOrCmdSavePressInTextEditor = function() {
                    ka()
                }
                ,
                ta.toggleEditorToolbar = function() {}
                ,
                ta.toggleAllFilesSelect = function() {
                    for (var a in ta.noteData.note_files)
                        ta.noteData.isAllFilesSelected ? ta.noteData.note_files[a].selected = !1 : ta.noteData.note_files[a].selected = !0;
                    ta.noteData.isAnyFileSelected = U(),
                    ta.noteData.isAllFilesSelected = V(),
                    c.$broadcast("render")
                }
                ,
                ta.toggleSingleFileSelect = function(a) {
                    a.selected = !a.selected,
                    ta.noteData.isAnyFileSelected = U(),
                    ta.noteData.isAllFilesSelected = V(),
                    c.$broadcast("render")
                }
                ,
                ta.onSubmitClick = function() {
                    ta.relatedPermissions.canEdit && ta.RTC && ta.RTC.CONNECTED && (ta.mode == xa ? ta.RTC.ACQURING_LOCK || (ta.RTC.ACQURING_LOCK = !0,
                    Oa.acquireLock(),
                    j.trackEvent(j.CLICK_EDIT_POST, {
                        Via: "Post Detail View"
                    })) : (ca(),
                    ta.noteData.item.draft ? ma() : na(),
                    j.trackEvent(j.CLICK_DONE_IN_POST_VIEWER)),
                    ta.$broadcast("render"))
                }
                ,
                ta.deleteFile = function(a) {
                    if (a) {
                        var b = m.deleteFile(ta.resourceId, ta.appInstanceId, a);
                        b.then(function(b) {
                            var c = v.findIndexInObjectArray(ta.noteData.note_files, "file_id", a);
                            -1 != c && (ta.noteData.note_files.splice(c, 1),
                            ta.$broadcast("render")),
                            da({
                                update_editor: ta.mode === ta.NOTE_READONLY_MODE
                            }),
                            j.trackEvent(j.DELETED_ATTACHMENT)
                        }),
                        u.showBanner_promise(b, "Deleting file...", "Deleted", "Error... click here to try again", !1, !1, b)
                    }
                }
                ,
                ta.downloadFile = function(a) {
                    var b = []
                      , c = v.findInObjectArray(ta.noteData.note_files, "file_id", a);
                    b.push({
                        path: g.getAccountId() + "/note" + c.item_id + "/" + c.original_name.toString(),
                        name: c.name
                    }),
                    v.download(b)
                }
                ,
                ta.downloadAll = function() {
                    var a = [];
                    for (files = ta.noteData.files["files_" + ta.noteData.item_id],
                    i = 0; i < files.length; i++)
                        file = v.findInObjectArray(ta.noteData.note_files, "file_id", files[i].file_id),
                        a.push({
                            path: g.getAccountId() + "/note" + file.item_id + "/" + file.original_name.toString(),
                            name: file.name
                        });
                    v.download(a),
                    j.trackEvent(j.CLICK_DOWNLOAD_ALL)
                }
                ,
                ta.onFileSelected = function(a) {
                    if (ta.relatedPermissions.canEdit) {
                        if (a = [a],
                        ta.active) {
                            ta.mode == xa && (ta.RTC.ACQURING_LOCK || ta.RTC.LOCKED || (ta.RTC.ACQURING_LOCK = !0,
                            Oa.acquireLock(),
                            Ia = !0));
                            for (var b in a)
                                a[b].noteId = ta.noteData.item.item_id;
                            ta.$broadcast("enqueueFile", a)
                        }
                        ta.$broadcast("render")
                    }
                }
                ,
                ta.commentCountClick = function(a) {}
                ,
                ta.starPost = function() {
                    if (ta.editorCtrl.headerData.initialized) {
                        var a = t.starPost(ta.appInstanceId, ta.resourceId);
                        a.then(function(a) {
                            ta.noteData.item.starred = 1,
                            ta.editorCtrl.headerData.starred = ta.noteData.item.starred,
                            ta.$broadcast("render")
                        }),
                        j.trackEvent(j.STARRED_POST, {
                            Via: "Post Viewer"
                        })
                    }
                }
                ,
                ta.unstarPost = function() {
                    if (ta.editorCtrl.headerData.initialized) {
                        var a = t.unStarPost(ta.appInstanceId, ta.resourceId);
                        a.then(function(a) {
                            ta.noteData.item.starred = 0,
                            ta.editorCtrl.headerData.starred = ta.noteData.item.starred,
                            ta.$broadcast("render")
                        })
                    }
                }
                ,
                ta.viewRevisions = function() {
                    console.log("View revisions")
                }
                ,
                ta.mutePost = function() {
                    var a = t.mutePost(ta.appInstanceId, ta.resourceId);
                    a.then(function(a) {
                        ta.noteData.item.muted = 1,
                        K(),
                        ta.$broadcast("render")
                    }),
                    u.showBanner_promise(a, "Muting post...", "Muted", "Error... click here to try again", !1, !1, a),
                    console.log("Mute post")
                }
                ,
                ta.unmutePost = function() {
                    var a = t.unmutePost(ta.appInstanceId, ta.resourceId);
                    a.then(function(a) {
                        ta.noteData.item.muted = 0,
                        K(),
                        ta.$broadcast("render")
                    }),
                    u.showBanner_promise(a, "Unmuting post...", "Unmuted", "Error... click here to try again", !1, !1, a)
                }
                ,
                ta.copyLink = function() {
                    v.copyToClipboard(d.CONVO_LINKS_BASE_URL + D(ta.appInstanceId, [{
                        type: ta.noteData.item.type,
                        uid: ta.resourceId,
                        title: ta.noteData.item.title
                    }], null , ta.noteData.item.title).slice(1))
                }
                ,
                ta.moveToTrash = function() {
                    if (ta.editorCtrl.headerData.initialized) {
                        var a = ta.tab.appContCtrl.moveItemToTrash();
                        a.then(function(a) {
                            ta.noteData.item.deleted = 1,
                            ta.editorCtrl.headerData.deleted = ta.noteData.item.deleted,
                            ta.$broadcast("render"),
                            da({
                                update_editor: !0
                            }),
                            c.triggerScroll()
                        })
                    }
                }
                ,
                ta.deletePostPermanently = function() {
                    ta.editorCtrl.headerData.initialized && ta.tab.appContCtrl.deleteItemPermanently()
                }
                ,
                ta.restorePost = function() {
                    if (ta.editorCtrl.headerData.initialized) {
                        var a = t.restorePost(ta.appInstanceId, ta.resourceId);
                        a.then(function(a) {
                            ta.noteData.item.deleted = 0,
                            ta.editorCtrl.headerData.deleted = ta.noteData.item.deleted,
                            ta.$broadcast("render"),
                            da({
                                update_editor: !0
                            })
                        }),
                        u.showBanner_promise(a, "Restoring post...", "Restored", "Error... click here to try again", !1, !1, a)
                    }
                }
                ,
                ta.testme = function() {
                    alert("aa")
                }
                ,
                ta.onUnload = function() {
                    ta.RTC.LOCKED && Oa.releaseLock()
                }
                ,
                ta.resourceTypeActions = function(a, b) {
                    (a || b) && (console.log("haha"),
                    "MAKE_PROFILE_PICTURE" === b.action)
                }
                ,
                ta.likeInfoTooltipText = function(a) {
                    C({
                        resource_id: ta.resourceId,
                        app_instance_id: ta.appInstanceId,
                        like_info: ta.noteData.likes_info
                    }, a)
                }
                ,
                ta.uploadAcknowledgement = function() {
                    return ta.RTC.CONNECTED && !ta.RTC.LOCKED && ta.ACTIONS.EDIT && !ta.noteData.item.deleted
                }
                ,
                c.openSharedInfoModal = function() {
                    for (var a = [], b = 0, c = ta.noteData.sharedWithListItems.length; c > b; b++)
                        "USER" == ta.noteData.sharedWithListItems[b].type ? a.push(_.extend({
                            typ: "USER",
                            name: ta.noteData.sharedWithListItems[b].label
                        }, ta.noteData.sharedWithListItems[b])) : "GROUP" == ta.noteData.sharedWithListItems[b].type && a.push(_.extend({
                            typ: "GROUP",
                            name: ta.noteData.sharedWithListItems[b].label
                        }, ta.noteData.sharedWithListItems[b]));
                    var d = "home/components/sharedInfoWidget/templates/sharedInfoModal.tpl.html"
                      , e = "sharedInfoModalCtrl"
                      , f = "cnv-shared-info-modal"
                      , g = {
                        sharedInfo: function() {
                            return a
                        }
                    };
                    s.customModal(d, e, g, f, !0)
                }
                ,
                ta.multipleDownloadSupport = !1,
                ta.editorCtrl.setNoteData = function(a) {
                    R(a)
                }
                ,
                ta.editClosedMessageHandler = function(a) {
                    var b = o.getNameById(ta.noteData.item.permissions_changed_by)
                      , c = J(ta.noteData.item.permissions_change_date, ta.server_now_timestamp);
                    a("This post is closed for editing.<br>" + b + "&nbsp;&nbsp;&#8226;&nbsp;&nbsp;" + c)
                }
                ,
                ta.editorCtrl.onItemSharingInfoUpdatedByRemoteUser = function(a) {
                    da({
                        update_editor: ta.mode === ta.NOTE_READONLY_MODE
                    })
                }
                ,
                ta.editorCtrl.onItemTagsUpdatedByRemoteUser = function(a) {
                    ta.noteData.item.tags = a,
                    ta.noteData.item.tagList = o.renderTagsData(a),
                    c.$broadcast("render")
                }
                ,
                ta.editorCtrl.onItemMovedToTrashByRemoteUser = function(a) {
                    ta.noteData.item.deleted = 1,
                    ta.noteData.item.deletable = !1,
                    ta.noteData.item.restorable = ta.noteData.item.restorable,
                    K(),
                    ta.$broadcast("render")
                }
                ,
                ta.editorCtrl.onItemRestoredByRemoteUser = function(a) {
                    ta.noteData.item.deleted = 0,
                    ta.noteData.item.deletable = ta.noteData.item.deletable,
                    ta.noteData.item.restorable = !1,
                    K(),
                    ta.$broadcast("render")
                }
                ,
                ta.editorCtrl.onItemUpdatedByRemoteUser = function(a) {
                    if ("file_deleted" == a.action) {
                        var b = v.findIndexInObjectArray(ta.noteData.note_files, "file_id", a.file_id);
                        -1 != b && (ta.noteData.note_files.splice(b, 1),
                        ta.$broadcast("render"))
                    } else
                        da({
                            update_editor: ta.mode === ta.NOTE_READONLY_MODE
                        })
                }
                ,
                ta.editorCtrl.onItemPermissionsUpdatedByRemoteUser = function() {
                    ta.$broadcast("render")
                }
                ,
                ta.editorCtrl.getSnippetOffset = function(a) {
                    return e.calcSelDimensions({
                        nodes: e.getSelectionNodesById(a.commentId)
                    })
                }
                ,
                ta.editorCtrl.addMoreSharingInfo = W,
                ta.editorCtrl.addMoreTags = Y,
                ta.editorCtrl.starPost = ta.starPost,
                ta.editorCtrl.unstarPost = ta.unstarPost,
                ta.editorCtrl.onLikeClick = ta.onLikeClick,
                ta.editorCtrl.mutePost = ta.mutePost,
                ta.editorCtrl.unmutePost = ta.unmutePost,
                ta.editorCtrl.copyLink = ta.copyLink,
                ta.editorCtrl.moveToTrash = ta.moveToTrash,
                ta.editorCtrl.restorePost = ta.restorePost,
                ta.editorCtrl.deletePostPermanently = ta.deletePostPermanently,
                ta.editorCtrl.updateHeaderData = K,
                ta.editorCtrl.headerData = {},
                ta.tab.appContCtrl.appCtrl.closing = function() {
                    Ja = !0,
                    Oa && (ta.mode == ta.NOTE_EDIT_MODE && (ta.noteData.item.draft ? ka() : na(),
                    Oa.releaseLock(ta.RTC.RELEASE_LOCK_FORCEFULLY)),
                    Oa.dispose())
                }
                ,
                ta.tab.appContCtrl.appCtrl.okToClose = function() {
                    return ta.mode != ta.NOTE_EDIT_MODE ? !0 : void 0
                }
                ;
                var Sa = {
                    ADMINISTRATOR: 2,
                    CREATOR: 1,
                    OTHER: 0
                };
                ta.editorCtrl.itemDataPolledFromServer = ea,
                c.openCommentsPanel = function() {
                    c.showCommentsPanel || c.$emit("showHideCommentsPanel", !0)
                }
                ,
                c.isFileVideo = function(a) {
                    var b = v.getFileFormat(a);
                    return "Video" == b ? !0 : !1
                }
                ,
                ta.editorCtrl.showHideCommentsPanel = M,
                ta.editorCtrl.trigger("initialized"),
                ta.editorCtrl.initialized = !0,
                ta.$on("$destroy", function() {
                    0 == Ja && Oa && (ta.mode == ta.NOTE_EDIT_MODE && (ta.noteData.item.draft ? ka() : na(),
                    Oa.releaseLock(ta.RTC.RELEASE_LOCK_FORCEFULLY)),
                    Oa.dispose()),
                    c.onDestroy(),
                    Ha.off(),
                    Ha = {},
                    ca()
                })
            }
            ]
        }
    }
    ]),
    b.module("convoApp").factory("xmppEditorService", ["$q", "Note", "config", "accountInfo", "userInfo", "usersGroupsListProvider", "hashtagsProvider", "utils", "FilterTypes", "UserProfileImage", "userImgUrlFilter", "$filter", function(a, b, c, d, e, g, h, i, j, k, l, m) {
        e.getUserId();
        return {
            initialize: function(a, b) {
                function c(b) {
                    if (b.data.hasOwnProperty("request-for-poll"))
                        I.events.trigger(I.EVENTS_TYPES.REQUEST_FOR_POLL, b.data);
                    else if (b.data.hasOwnProperty("selection-change"))
                        I.events.trigger(I.EVENTS_TYPES.SELECTION_CHANGE, b.data["selection-change"]);
                    else if (b.data.hasOwnProperty("text-change")) {
                        var c = b.data["text-change"]
                          , e = +a.getRevision();
                        for (var f in c) {
                            var g = +c[f].revision_no;
                            g >= e ? (D.hasOwnProperty(g) || (D[g] = {}),
                            D[g][c[f].sequence_no] = c[f].delta) : console.log("**** change received with less revision than current.")
                        }
                        d(e)
                    }
                }
                function d(a) {
                    var b = D[a];
                    if (b) {
                        for (var c = i.sizeOf(b), d = !0, e = 0; c > e; e++)
                            if (!b.hasOwnProperty(+e)) {
                                d = !1;
                                break
                            }
                        d && (console.log("KH: " + a),
                        I.events.trigger(B.PubsubEvents.CHANGE_RECEIVED, b),
                        g(a))
                    }
                }
                function g(a) {
                    for (var b in D)
                        +a > +b && delete D[b]
                }
                function h(b) {
                    var c = +a.getRevision();
                    c !== G && (E = -1),
                    C.push({
                        revision_no: c,
                        sequence_no: ++E,
                        delta: b
                    }),
                    G = c,
                    C.length >= F && (H.sendChange({
                        "text-change": C
                    }),
                    C = [])
                }
                function j(a) {
                    H.sendChange({
                        "selection-change": a
                    })
                }
                function k(a) {
                    I.events.trigger(f.chatsdk.ChatEvents.CONNECTED, a)
                }
                function l(a) {
                    I.events.trigger(f.chatsdk.ChatEvents.DISCONNECTED, a)
                }
                function m(a) {
                    I.events.trigger(B.PubsubEvents.ACQUIRE_LOCK_RESULT, a)
                }
                function n(a) {
                    I.events.trigger(B.PubsubEvents.RESOURCE_LOCKED, a)
                }
                function o(a) {
                    I.flush(),
                    I.events.trigger(B.PubsubEvents.RESOURCE_RELEASED, a)
                }
                function p(a) {
                    c(a)
                }
                function q(a) {
                    I.events.trigger(B.PubsubEvents.NOTIFICATION_RECEIVE, a)
                }
                function r(a) {
                    I.events.trigger(B.PubsubEvents.PROPERTY_REMOVE, a)
                }
                function s(a) {
                    I.events.trigger(B.PubsubEvents.PROPERTY_CHANGE, a)
                }
                function t(a) {
                    I.events.trigger(B.PubsubEvents.PROPERTY_ADD, a)
                }
                function u(a) {
                    I.events.trigger(B.PubsubEvents.REMOVED, a)
                }
                function v(a) {
                    I.events.trigger(B.PubsubEvents.UNSUBSCRIBED, a)
                }
                function w(a) {
                    I.events.trigger(B.PubsubEvents.ITEM_RETRACT, a)
                }
                function x(a) {
                    I.events.trigger(B.PubsubEvents.ITEM_RECEIVE, a)
                }
                function y(a) {
                    I.events.trigger(B.PubsubEvents.RECONNECT, a)
                }
                function z(a) {
                    I.events.trigger(B.PubsubEvents.SYNCHRONIZATION_CHANGE, a)
                }
                var A = a.resourceId
                  , B = (a.appInstanceId,
                f.rtc)
                  , C = []
                  , D = {}
                  , E = -1
                  , F = 1
                  , G = null 
                  , H = b
                  , I = {
                    events: {},
                    EVENTS_TYPES: {
                        REQUEST_FOR_POLL: "requestforpoll",
                        SELECTION_CHANGE: "selectionchange"
                    },
                    triggerDeltaChangeSetForCurrentRevision: d,
                    queryLock: function() {
                        return H.queryLock(A)
                    },
                    acquireLock: function() {
                        return H.acquireLock(A)
                    },
                    releaseLock: function(a) {
                        return H.releaseLock(A, a)
                    },
                    isConnected: function() {
                        return H.isConnected()
                    },
                    broadcastChange: function(a) {
                        a.hasOwnProperty("text-change") ? h(a["text-change"]) : a.hasOwnProperty("selection-change") ? j(a["selection-change"]) : consoel.error("Unknown message is trying to transmit over xmpp.")
                    },
                    requestForPoll: function() {
                        H.sendChange({
                            "request-for-poll": {
                                revision_no: +a.getRevision(),
                                user_info: e.getUserInfo()
                            }
                        })
                    },
                    dispose: function() {
                        I.events && I.events.off(),
                        I.events = null ,
                        H.removeListener(B.PubsubEvents.ACQUIRE_LOCK_RESULT, m),
                        H.removeListener(B.PubsubEvents.RESOURCE_LOCKED, n),
                        H.removeListener(B.PubsubEvents.RESOURCE_RELEASED, o),
                        H.removeListener(B.PubsubEvents.CHANGE_RECEIVED, p),
                        H.removeListener(B.PubsubEvents.NOTIFICATION_RECEIVE, q),
                        H.removeListener(B.PubsubEvents.PROPERTY_REMOVE, r),
                        H.removeListener(B.PubsubEvents.PROPERTY_CHANGE, s),
                        H.removeListener(B.PubsubEvents.PROPERTY_ADD, t),
                        H.removeListener(B.PubsubEvents.REMOVED, u),
                        H.removeListener(B.PubsubEvents.UNSUBSCRIBED, v),
                        H.removeListener(B.PubsubEvents.ITEM_RETRACT, w),
                        H.removeListener(B.PubsubEvents.ITEM_RECEIVE, x),
                        H.removeListener(B.PubsubEvents.RECONNECT, y),
                        H.removeListener(B.PubsubEvents.SYNCHRONIZATION_CHANGE, z),
                        H.removeListener(f.chatsdk.ChatEvents.CONNECTED, k),
                        H.removeListener(f.chatsdk.ChatEvents.DISCONNECTED, l)
                    },
                    flush: function() {
                        C = [],
                        D = []
                    }
                };
                return _.extend(I.events, Backbone.Events),
                H.addListener(B.PubsubEvents.ACQUIRE_LOCK_RESULT, m),
                H.addListener(B.PubsubEvents.RESOURCE_LOCKED, n),
                H.addListener(B.PubsubEvents.RESOURCE_RELEASED, o),
                H.addListener(B.PubsubEvents.CHANGE_RECEIVED, p),
                H.addListener(B.PubsubEvents.NOTIFICATION_RECEIVE, q),
                H.addListener(B.PubsubEvents.PROPERTY_REMOVE, r),
                H.addListener(B.PubsubEvents.PROPERTY_CHANGE, s),
                H.addListener(B.PubsubEvents.PROPERTY_ADD, t),
                H.addListener(B.PubsubEvents.REMOVED, u),
                H.addListener(B.PubsubEvents.UNSUBSCRIBED, v),
                H.addListener(B.PubsubEvents.ITEM_RETRACT, w),
                H.addListener(B.PubsubEvents.ITEM_RECEIVE, x),
                H.addListener(B.PubsubEvents.RECONNECT, y),
                H.addListener(B.PubsubEvents.SYNCHRONIZATION_CHANGE, z),
                H.addListener(f.chatsdk.ChatEvents.DISCONNECTED, l),
                H.isConnected() && k(),
                H.addListener(f.chatsdk.ChatEvents.CONNECTED, k),
                I
            }
        }
    }
    ]),
    b.module("convoApp").controller("GalleryCtrl", ["$scope", "$rootScope", "$location", "$filter", "$q", "Note", "AppLinks", "utils", "Comments", "Feed", "$timeout", "notesAppDataProvider", "bannerService", "config", "nativeCommBridge", "accountInfo", "mixpanelService", "loader", "userInfo", "itemService", function(b, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v) {
        function w(a) {
            b.files = b.files || [];
            var c, d = b.files, e = d.length, f = !1;
            for (c = 0; e > c; ++c)
                if (d[c].file_id === a) {
                    b.currentlySelected = d[c],
                    b.currentlySelected.index = c,
                    f = !0;
                    break
                }
            if (f && 3 == b.note.item.is_system_message && s.trackEvent(s.OPEN_AUTO_GEN_WELCOME_FILE, {
                "File Name": b.currentlySelected.name
            }),
            b.fileDeleted = !f,
            b.fileDeleted && "note" !== a ? "21" == b.postType ? b.view = CHAT_FILE_RESOURCE_PENDING : (b.view = FILE_RESOURCE_NOT_FOUND,
            b.$emit("cnvGallery:unRequestAppHeader")) : (b.view = N,
            b.$emit("cnvGallery:requestAppHeader")),
            f === !1) {
                var g = {};
                b.currentlySelected && "number" == typeof b.currentlySelected.index ? g.index = b.currentlySelected.index : g.index = 0,
                a && (g.file_id = a,
                g.deleted = !0,
                g.isCommentAttachment = b.tab.resourceLink.commentFileId),
                b.currentlySelected = g,
                I.closeFile && I.closeFile()
            }
        }
        function x() {
            y(b.galleryCtrl.getItemData())
        }
        function y(a) {
            b.galleryCtrl.relatedPermissions.canChangePermissions = a.item.can_change_permissions,
            b.galleryCtrl.relatedPermissions.permissions = a.item.permissions,
            b.galleryCtrl.relatedPermissions.loggedInUserPermissions = a.item.logged_in_user_permissions,
            b.galleryCtrl.relatedPermissions.canEdit = a.item.logged_in_user_permissions.checkBitAt(3),
            b.galleryCtrl.relatedPermissions.canComment = a.item.logged_in_user_permissions.checkBitAt(2),
            b.galleryCtrl.relatedPermissions.canView = a.item.logged_in_user_permissions.checkBitAt(1)
        }
        function z(a) {
            var b = document.createElement("img");
            b.src = a
        }
        function A(a) {
            var b = new XMLHttpRequest;
            b.open("GET", a, !0),
            b.withCredentials = !0,
            b.responseType = "blob",
            b.send()
        }
        function B(a, b) {
            "DOC" !== b && (H ? A(a) : z(a))
        }
        function C(a, b) {
            var c = a.index
              , d = f("getOriginalImagePath");
            a && 0 == c ? (B(d(b[c].preview_name, b[c].item_id), b[c].file_format),
            c < b.length - 1 && (c++,
            B(d(b[c].preview_name, b[c].item_id), b[c].file_format))) : a && a.index == b.length - 1 ? (B(d(b[c].preview_name, b[c].item_id), b[c].file_format),
            0 != c && (c--,
            B(d(b[c].preview_name, b[c].item_id), b[c].file_format))) : (B(d(b[c].preview_name, b[c].item_id), b[c].file_format),
            c++,
            B(d(b[c].preview_name, b[c].item_id), b[c].file_format),
            c -= 2,
            B(d(b[c].preview_name, b[c].item_id), b[c].file_format))
        }
        function D(a, e) {
            var a, f = b.fileFormat, g = a.uid ? a.uid : e, h = {};
            if (a.resource_link && a.resource_link.collaboration_info && a.resource_link.collaboration_info.snippet_data && (a = a.resource_link.collaboration_info.snippet_data.data),
            "Image" === f)
                I.snippetData = a,
                I.initialized && (I.drawSnippetOnCanvas(I.snippetData, g),
                I.snippetData = null ),
                E(a, g),
                h["Snippet Type"] = "Image";
            else if ("Doc" === f) {
                if (L)
                    return;
                L = !0,
                setTimeout(function() {
                    a.commentId = g,
                    I.drawSnippet(a).then(function() {
                        I.snippetData = null ,
                        d.$emit("SnippetArrow:draw", g, a),
                        L = !1
                    }, function() {
                        L = !1
                    })
                }, 0),
                h["Snippet Type"] = a.textStartIndex !== c && a.textEndIndex !== c ? "Text" : "Image"
            }
            h.Via = "Post View Comment Panel",
            h["File Type"] = b.currentlySelected.type || "Unknown",
            s.trackEvent(s.ANNOTATION_PLAYBACK, h)
        }
        function E(c, e) {
            I.checkIfSnippetInView(c) ? (console.log("in View...."),
            a.setTimeout(function() {
                d.$emit("SnippetArrow:draw", e, c)
            }, 100)) : (console.log("out of view...."),
            d.$emit("SnippetArrow:destroy", e),
            b.cnvImageViewerCtrl.bringSnippetInView(c),
            a.setTimeout(function() {
                d.$emit("SnippetArrow:draw", e, c)
            }, 500))
        }
        function F(a) {
            var c = a.target;
            if ("INPUT" !== c.nodeName && !c.classList.contains("ql-editor") || c.classList.contains("ignore-key-down")) {
                if (a.ctrlKey)
                    return 90 === a.keyCode && I.undoSnippetDrawing() && a.preventDefault(),
                    void (89 === a.keyCode && I.redoSnippetDrawing() && a.preventDefault());
                I && I.nudgeActiveObject && I.nudgeActiveObject(a.keyCode) ? (a.preventDefault(),
                a.stopPropagation()) : (39 == a.keyCode || 37 == a.keyCode || 27 == a.keyCode) && (b.navigate.withKeys(a),
                b.$apply()),
                (8 == a.keyCode || 46 == a.keyCode) && (a.preventDefault(),
                I.removeActiveObject())
            }
        }
        function G() {
            var a = b
              , c = a.tab.resourceLink.resourcePath.hierarchy[0].uid
              , d = a.tab.resourceLink.resourcePath.appInstance.uid;
            k.getComments_newApi(null , c, d, !0, 0, 3).then(function(b) {
                a.galleryCtrl.headerData.totalComments = b.total_comments,
                k.on("commentsUpdated", function(e) {
                    e.resource_id == c && e.app_instance_id == d && a.galleryCtrl.headerData && (a.galleryCtrl.headerData.totalComments = b.total_comments)
                })
            })
        }
        var H = j.isIE()
          , I = {}
          , J = "#galleryZoomRange"
          , K = i.readResourceId(e.path())
          , L = !1
          , M = "#d10000"
          , N = 1;
        FILE_RESOURCE_NOT_FOUND = 4,
        CHAT_FILE_RESOURCE_PENDING = 5,
        CHAT_FILE_RESOURCE_NOT_FOUND = 6,
        _galleryLibsPromise = b.galleryLibsPromise = t.loadScript(t.SCRIPTS.GALLERY_VENDOR),
        b.cnvImageViewerCtrl = {},
        _.extend(b.cnvImageViewerCtrl, Backbone.Events),
        b.cnvImageViewerCtrl.initialized = !1,
        b.cnvDocViewerCtrl = {},
        _.extend(b.cnvDocViewerCtrl, Backbone.Events),
        b.cnvDocViewerCtrl.initialized = !1,
        b.cnvVideoViewerCtrl = {},
        _.extend(b.cnvVideoViewerCtrl, Backbone.Events),
        b.cnvVideoViewerCtrl.initialized = !1,
        b.newsFeedFilter = {
            url: i.linkToUrl(i.newFilterLink(null , "My Feed"), !0)
        },
        b.files = [],
        b.showCommentsPanel = !1,
        b.snippetColor = b.galleryCtrl.snippetColor = "red",
        b.galleryCtrl.headerData = {},
        function() {
            var a;
            Object.defineProperty(b, "toolSelected", {
                get: function() {
                    return a
                },
                set: function(c) {
                    a = c,
                    b.$evalAsync(function(a) {
                        a.galleryCtrl.toolSelected = c
                    }),
                    "pen" !== c && "line" !== c && "text" !== c && (b.galleryCtrl.showDefaultTool = !0)
                }
            })
        }(),
        b.toolSelected = "text",
        b.tiles = {
            show: !1,
            isBtnHover: !1,
            btnClicked: !1,
            isTilesHover: !1,
            animate: !1,
            aniEndPromise: null ,
            hover: function() {
                var a = this;
                a.isBtnHover = !0,
                m(function() {
                    a.show === !1 && a.isBtnHover === !0 && (a.show = !0)
                }, 1e3)
            },
            blur: function() {
                var a = this;
                a.animate || m(function() {
                    a.animate || a.isBtnHover || a.isTilesHover || (a.show = !1)
                }, 1e3),
                a.isBtnHover = !1
            },
            viewAllClick: function() {
                var a = this;
                a.btnClicked && a.show ? a.show = !1 : a.show = !0,
                a.btnClicked = !a.btnClicked
            },
            open: function() {
                var a = this;
                a.btnClicked = !0,
                a.show = !0
            }
        },
        function() {
            var a = null 
              , c = !0
              , e = 0;
            Object.defineProperty(b, "currentlySelected", {
                get: function() {
                    return a
                },
                set: function(f) {
                    var g = a;
                    if (a = f,
                    "21" == b.postType && (g && g.deleted && f.file_id === g.file_id && !f.deleted ? g = null  : f.deleted && setTimeout(function() {
                        5 > e ? (b.tab.appContCtrl.immediatePollForItemData(),
                        e++) : (e++,
                        b.view = CHAT_FILE_RESOURCE_NOT_FOUND)
                    }, 1e3)),
                    "object" == typeof f && f.file_format && (!g || f.file_id !== g.file_id)) {
                        e = 0;
                        var h = f.file_format
                          , i = new Date(f.created_date.split("-").join("/"));
                        if (b.createdDate = i.getMonth() + 1 + "/" + i.getDate() + "/" + i.getFullYear(),
                        b.createdBy = n.getUser(f.created_by),
                        h = h[0] + h.substr(1).toLowerCase(),
                        b.galleryCtrl.fileFormat = h,
                        b.galleryCtrl.cnvViewerCtrl = b["cnv" + h + "ViewerCtrl"],
                        d.$emit("SnippetArrow:destroyAll"),
                        b.galleryCtrl.commentId && !b.tab.resourceLink.commentFileId && g && !g.isCommentAttachment) {
                            var j = !(c && "editor" !== b.note._prvOpenedApp || g && g.deleted);
                            j ? (b.tiles.animate = !0,
                            I && I.closeFile && I.closeFile(),
                            setTimeout(function() {
                                b.fileFormat = h,
                                I = b.galleryCtrl.cnvViewerCtrl
                            }, 800),
                            b.tiles.open()) : (b.fileFormat = h,
                            I = b.galleryCtrl.cnvViewerCtrl)
                        } else
                            I && I !== b.cnvImageViewerCtrl && I.closeFile && I.closeFile(),
                            b.fileFormat = h,
                            I = b.galleryCtrl.cnvViewerCtrl;
                        c = !1;
                        var k = function() {
                            var a = "navigateTo" + h
                              , c = b;
                            c.fileNotSupported && I && I.closeFile && I.closeFile(),
                            L = !1,
                            c.navigate[a] ? (c.fileNotSupported = !1,
                            c.navigate[a]()) : (f.formatted_file_size = Number(parseInt(f.size, 10) / 1024).toFixed(0) + " KB",
                            c.fileNotSupported = !0),
                            b.$apply()
                        }
                        ;
                        setTimeout(function l() {
                            if (b.tiles.animate) {
                                if (!b.tiles.aniEndPromise)
                                    return void setTimeout(l, 10);
                                b.tiles.aniEndPromise.then(function() {
                                    k(),
                                    b.tiles.aniEndPromise = null 
                                }, function() {})
                            } else
                                k()
                        }, 0)
                    }
                }
            })
        }(),
        b.galleryCtrl.init = function() {
            b.isCommentAttachment = b.galleryCtrl.isCommentAttachment = b.tab.resourceLink.commentFileId,
            b.isCommentAttachment ? b.cnvInAppCommentsCtrl.getItemData && b.cnvInAppCommentsCtrl.getItemData() && b.galleryCtrl.setNoteData(b.cnvInAppCommentsCtrl.getItemData()) : b.note && (b.currentlySelected.isCommentAttachment ? (K = i.readResourceId(e.path()),
            b.galleryCtrl.setNoteData(b.cnvInAppCommentsCtrl.getItemData())) : (b.navigateToFile(b.galleryCtrl.fileId),
            b.navigate.init())),
            b.galleryCtrl.initialized || (b.showSpinner = !0,
            b.galleryCtrl.trigger("initialized"),
            b.galleryCtrl.initialized = !0),
            b.tab.resourceLink.data && b.tab.resourceLink.data.resource_type && (b.postType = b.galleryCtrl.postType = parseInt(b.tab.resourceLink.data.resource_type, 10),
            b.$broadcast("render")),
            G()
        }
        ,
        b.galleryCtrl.setLinkData = b.galleryCtrl.setNoteData = function(a) {
            function d() {
                function d() {
                    w(K.itemId === c || b.tab.resourceLink.commentFileId ? b.tab.resourceLink.commentFileId : K.itemId),
                    !b.currentlySelected.deleted && b.currentlySelected.file_id && "note" !== b.currentlySelected.file_id && C(b.currentlySelected, b.files),
                    b.$broadcast("render"),
                    b.navigate.init()
                }
                "editor" === a._prvOpenedApp && b.tab.resourceLink.collaborationInfo ? (b.currentlySelected = {
                    file_id: "note"
                },
                m(d, 1e3)) : d()
            }
            b.note = a,
            x(),
            b.noteTextPreview = a.item.preview_text.replace(/<[^>]+>/gm, "").trim() || a.item.title || "untitled";
            var e = !1;
            b.tab.resourceLink.commentFileId ? (e = !0,
            k.getComment(null , b.tab.resourceLink.resourcePath.hierarchy[0].uid, b.tab.resourceLink.resourcePath.hierarchy[0].type, b.tab.resourceLink.collaborationInfo.commentId).then(function(a) {
                b.files = a && a.files || [];
                for (var c = 0; c < b.files.length; c++)
                    b.files[c].isCommentAttachment = !0;
                d()
            })) : (e = !1,
            b.files = b.note.files["files_" + K.noteId]),
            e || d()
        }
        ,
        b.galleryCtrl.itemDataPolledFromServer = function(a) {
            function c() {
                w(e),
                d.navigate.init(),
                d.$broadcast("render")
            }
            var d = b
              , e = d.currentlySelected.file_id
              , f = !1;
            d.note = a,
            x(),
            d.noteTextPreview = a.item.preview_text.replace(/<[^>]+>/gm, "").trim() || a.item.title || "untitled",
            b.tab.resourceLink.commentFileId ? (f = !0,
            k.getComment(null , d.tab.resourceLink.resourcePath.hierarchy[0].uid, d.tab.resourceLink.resourcePath.hierarchy[0].type, d.tab.resourceLink.collaborationInfo.commentId).then(function(a) {
                d.files = a && a.files;
                for (var e = 0; e < b.files.length; e++)
                    b.files[e].isCommentAttachment = !0;
                c()
            })) : d.files = d.note.files["files_" + K.noteId],
            f || c()
        }
        ,
        b.galleryCtrl.onItemPermissionsUpdatedByRemoteUser = function() {
            x(),
            b.$broadcast("render")
        }
        ,
        b.galleryCtrl.onItemUpdatedByRemoteUser = function() {
            b.tab.appContCtrl.immediatePollForItemData()
        }
        ,
        b.navigate = {
            init: function() {
                var a = parseInt(b.currentlySelected.index, 10);
                a != b.files.length - 1 ? b.navigate.nextImage = b.files[a + 1] : b.navigate.nextImage = b.files[a],
                0 != a ? b.navigate.previousImage = b.files[a - 1] : b.navigate.previousImage = b.files[a],
                b.navigate.firstImage = b.files[0],
                b.navigate.lastImage = b.files[b.files.length - 1]
            },
            navigateToDoc: function() {
                function a() {
                    var a = b.galleryCtrl
                      , c = I.loadFile(b.currentlySelected);
                    if (b.galleryCtrl.isFileLoaded = !1,
                    c.then(function() {
                        b.$evalAsync(function(a) {
                            a.galleryCtrl.isFileLoaded = !0
                        }),
                        d.$broadcast("GalleryHeader:deselectAllBtns"),
                        d.$broadcast("GalleryHeader:selectBtn"),
                        I.setSnippetColor(M)
                    }),
                    I.setZoomElm(J),
                    "panzoom" === b.toolSelected ? b.selectTool("text") : b.selectTool(b.toolSelected),
                    !b.tab.resourceLink.commentFileId && b.galleryCtrl.relatedPermissions.canComment || "panzoom" === b.toolSelected || "text" === b.toolSelected || b.selectTool("text"),
                    a.commentId) {
                        var e = a.getCommentData(a.commentId);
                        g.all([c, e]).then(function(b) {
                            D(b[1], a.commentId)
                        })
                    }
                }
                return console.log("navigateToDoc"),
                b.$emit("Notes:ClearSnippet"),
                b.currentlySelected.ver <= 2 || (16 & parseInt(b.currentlySelected.available_previews)) <= 0 ? void (b.fileNotSupported = !0) : void (I.initialized ? a() : I.on("initialized", a))
            },
            navigateToImage: function() {
                function a() {
                    var a = b.galleryCtrl
                      , c = !!a.commentId && !b.tab.resourceLink.commentFileId
                      , e = I.loadImage(c);
                    if (I.setZoomRangeCtrl(J),
                    "text" === b.toolSelected ? b.selectTool("panzoom") : b.selectTool(b.toolSelected),
                    (b.tab.resourceLink.commentFileId || !b.galleryCtrl.relatedPermissions.canComment) && b.selectTool("panzoom"),
                    e.then(function() {
                        b.$evalAsync(function(a) {
                            a.galleryCtrl.isFileLoaded = !0
                        }),
                        d.$broadcast("GalleryHeader:deselectAllBtns"),
                        d.$broadcast("GalleryHeader:selectBtn"),
                        I.setSnippetColor(M)
                    }),
                    c) {
                        var f = a.getCommentData(a.commentId);
                        g.all([e, f]).then(function(b) {
                            D(b[1], a.commentId)
                        })
                    }
                }
                return b.$emit("Notes:ClearSnippet"),
                b.currentlySelected.ver >= 3 && !b.currentlySelected.is_desktop_preview_available ? void (b.fileNotSupported = !0) : (b.galleryCtrl.isFileLoaded = !1,
                I.initialized ? a() : I.on("initialized", a),
                void console.log("navigateToImage"))
            },
            navigateToVideo: function() {
                function a() {
                    b.galleryCtrl;
                    I.loadVideo()
                }
                b.$emit("Notes:ClearSnippet");
                var c = 256 & b.currentlySelected.available_previews
                  , d = 512 & b.currentlySelected.available_previews
                  , e = {};
                e.isMp4Available = c,
                e.isWebmAvailable = d;
                var f = j.formatCheck("video", e);
                0 === f && (b.fileNotSupported = !0),
                b.galleryCtrl.isFileLoaded = !1,
                I.initialized ? a() : I.on("initialized", a),
                console.log("navigateToImage")
            },
            withKeys: function(a) {
                if (!b.tab.resourceLink.commentFileId) {
                    var c = !1;
                    if (39 == a.keyCode) {
                        var d = f("getImageResourceLinkUrl")(b.navigate.nextImage.file_id, b.tab.appInstanceId, b.note.item.type, b.note.item.item_id, b.navigate.nextImage.name);
                        e.url(d.slice(1)),
                        c = !0
                    } else if (37 == a.keyCode) {
                        var d = f("getImageResourceLinkUrl")(b.navigate.previousImage.file_id, b.tab.appInstanceId, b.note.item.type, b.note.item.item_id, b.navigate.previousImage.name);
                        e.url(d.slice(1)),
                        c = !0
                    }
                    c && s.trackEvent(s.NAVIGATED_ATTACHMENTS, {
                        Using: "Keyboard"
                    })
                }
            },
            toFeed: function() {
                b.$emit("goHome")
            }
        },
        b.goToParentHierarchy = function() {
            b.$emit("NotesApp:FullScreen", {
                isFullScreen: !1
            }),
            s.trackEvent(s.CLICK_BACK_TO_POST, {
                Using: "Icon"
            })
        }
        ,
        b.exitGalleryThenBack = function() {
            b.note && "editor" == b.note._prvOpenedApp && s.trackEvent(s.CLICK_BACK_TO_POST, {
                Using: "X"
            }),
            b.$emit(21 !== b.postType ? "gotoParentResourceInHistory" : "gotoPreviousResourceInHistory", b.tab)
        }
        ,
        b.navigateToFile = function(a) {
            var c = b.galleryCtrl;
            a !== b.currentlySelected.file_id ? (w(a),
            b.cnvImageViewerCtrl.currentlySelected = b.currentlySelected) : a == b.currentlySelected.file_id && c.commentId && c.getCommentData(c.commentId).then(D)
        }
        ,
        b.$on("embedSnippetImage", function(a, c) {
            var d = j.generateUniqueId();
            c.fileViewerTextAnnotation || (c.snippetData.data.fileName = d + ".png"),
            c.snippetData.data.snippetId = d,
            c.resourceLinkData = {
                app_instance: {
                    uid: b.tab.resourceLink.resourcePath.appInstance.uid,
                    title: b.tab.resourceLink.resourcePath.hierarchy[0].title,
                    type: "APPINSTANCE",
                    data: "",
                    created_by: b.note.item.created_by,
                    version: "-1"
                },
                hierarchy: [{
                    uid: b.note.item.item_id,
                    type: b.note.item.type,
                    title: b.note.item.title,
                    version: 1,
                    data: null ,
                    created_by: b.note.item.created_by
                }, {
                    uid: b.currentlySelected.file_id,
                    type: "IMAGE" == b.currentlySelected.file_format ? b.currentlySelected.file_format : "files",
                    title: b.currentlySelected.name,
                    version: b.currentlySelected.ver,
                    data: null ,
                    created_by: b.currentlySelected.created_by
                }]
            },
            c.resource_id = b.note.item.item_id,
            c.resource_type = b.note.item.type
        }),
        b.galleryCtrl.selectTool = b.selectTool = function(a) {
            b.toolSelected = a,
            I.toolSelected(a),
            console.log("KH rener at toolselected"),
            b.$broadcast("render")
        }
        ,
        b.zoom = function(a) {
            I.zoom(a)
        }
        ,
        b.closeTab = function() {
            b.$emit("closeTab", b.tab)
        }
        ,
        b.galleryCtrl.getCommentData = function(a) {
            var c = l.getFeedIdOfResource(b.tab.resourceLink.resourcePath.appInstance.uid, b.tab.resourceLink.resourcePath.hierarchy[0].uid);
            return k.getComment(c, b.tab.resourceLink.resourcePath.hierarchy[0].uid, b.tab.resourceLink.resourcePath.appInstance.uid, a)
        }
        ,
        b.galleryCtrl.drawSnippetOnCanvasViaComment = function(a) {
            D(a, b.tab.resourceLink.collaborationInfo.commentId)
        }
        ,
        b.galleryCtrl.getSnippetOffset = function(a) {
            var c;
            if ("IMAGE" == b.currentlySelected.file_format) {
                var d = b.cnvImageViewerCtrl.getContainerOffset()
                  , e = b.cnvImageViewerCtrl.getScaleValue();
                c = {
                    left: d.left + a.selectionRect.x * e,
                    top: d.top + a.selectionRect.y * e,
                    width: a.selectionRect.width * e,
                    height: a.selectionRect.height * e
                }
            } else
                c = b.cnvDocViewerCtrl.getSnippetPos(a);
            return c
        }
        ,
        b.galleryCtrl.navigateToFile = function(a) {
            b.navigateToFile(a)
        }
        ,
        b.galleryCtrl.showHideCommentsPanel = function(a) {
            a !== c && (b.showCommentsPanel = a,
            b.$broadcast("render")),
            I === b.cnvImageViewerCtrl && I.toggleCommentsPanel && I.toggleCommentsPanel()
        }
        ,
        b.galleryCtrl.snippetImagePosted = function() {
            I.snippetImagePosted()
        }
        ,
        b.galleryCtrl.removeSnippetsForComment = function(a) {
            I.removeSnippetsForComment(a),
            d.$emit("SnippetArrow:destroy", a)
        }
        ,
        b.closeTab = function() {
            b.$emit("closeTab", b.tab)
        }
        ,
        b.deleteFile = function(a) {
            if (a) {
                var c = b
                  , d = c.files
                  , e = h.deleteFile(c.tab.resourceLink.resourcePath.hierarchy[0].uid, c.tab.appInstanceId, a);
                o.showBanner_promise(e, "Deleting file", "File deleted!", "Error deleting file", !1, !1, null ),
                e.then(function(e) {
                    s.trackEvent(s.DELETED_ATTACHMENT);
                    var f = j.findIndexInObjectArray(d, "file_id", a)
                      , g = b.currentlySelected.index;
                    -1 !== f && (d.splice(f, 1),
                    c.$broadcast("render"),
                    d.length ? (d[g] || --g,
                    b.currentlySelected = d[g],
                    b.currentlySelected.index = g) : setTimeout(function() {
                        b.$emit("cnvGallery:gotoPost")
                    }, 0))
                })
            }
        }
        ,
        b.promptCopyLink = function(a) {
            var c = b
              , d = b.currentlySelected;
            d && (a || (b.isCommentAttachment ? k.getComment(null , b.tab.resourceLink.resourcePath.hierarchy[0].uid, b.tab.resourceLink.resourcePath.hierarchy[0].type, b.tab.resourceLink.collaborationInfo.commentId).then(function(b) {
                a = f("getCommentAttachmentUrl")(b, b.files[0].file_id, b.files[0].file_format.toLowerCase(), b.files[0].name),
                a = p.CONVO_LINKS_BASE_URL + a.slice(1),
                j.copyToClipboard(a)
            }) : (a = f("getFileResourceLinkUrl")(d.file_id, d.file_format, c.tab.appInstanceId, c.note.item.type, c.note.item.item_id, d.name),
            a = p.CONVO_LINKS_BASE_URL + a.slice(1),
            j.copyToClipboard(a))))
        }
        ,
        b.commentBtnClicked = function() {
            I.commentBtnClicked()
        }
        ,
        b.removeTmpShapes = function() {
            I.removeTmpShapes()
        }
        ,
        b.galleryCtrl.setSnippetColor = function(a) {
            var c = {
                "#58dd3a": "green",
                "#d10000": "red",
                "#20afc8": "blue",
                "#f0fc2e": "yellow",
                "#ffffff": "white",
                "#000000": "black"
            };
            b.snippetColor = b.galleryCtrl.snippetColor = c[a],
            M = a,
            I.setSnippetColor(a)
        }
        ,
        a.addEventListener("keydown", F, !1),
        b.$on("NotesApp:FullScreen", function(a, c) {
            var d = b
              , e = c.isFullScreen;
            if (e) {
                var d = b;
                d.selectTool("panzoom"),
                I.removeAllSnippets()
            }
            I === d.cnvImageViewerCtrl && I.fullscreen()
        }),
        b.downloadCurrentFile = function() {
            var a = b.currentlySelected
              , c = "Detail View";
            "VIDEO" === a.file_format && (b.tab.resourceLink.data && 21 == b.tab.resourceLink.data.resource_type && (c = "Chat"),
            s.trackEvent(s.DOWNLOAD_VIDEOS, {
                Source: c
            }));
            var d = "";
            d = 4 == a.app_instance_id ? "link" : "note",
            j.download([{
                path: r.getAccountId() + "/" + d + a.item_id + "/" + a.original_name.toString(),
                name: a.name
            }])
        }
        ,
        p.IS_NATIVE && q.on("downloadCurrentFile", b.downloadCurrentFile),
        b.galleryCtrl.fullscreen = function(a) {
            b.$emit("NotesApp:FullScreen", {
                isFullScreen: a
            })
        }
        ,
        b.galleryCtrl.animateToNote = function() {
            return new Promise(function(a) {
                var c = b.tiles;
                console.log("GalleryCtrl.animateToNote"),
                setTimeout(function() {
                    I && I.closeFile && I.closeFile()
                }, 800),
                c.animate = !0,
                c.open(),
                b.currentlySelected = {
                    file_id: "note"
                },
                console.log("animation started: ", c.aniEndPromise),
                setTimeout(function() {
                    c.aniEndPromise ? c.aniEndPromise.then(a) : a()
                }, 1e3)
            }
            )
        }
        ,
        b.arrowClicked = function() {
            s.trackEvent(s.NAVIGATED_ATTACHMENTS, {
                Using: "Arrows"
            }),
            setTimeout(function() {
                O("#bogus-element").focus()
            }, 0)
        }
        ,
        b.reelItemClicked = function() {
            s.trackEvent(s.NAVIGATED_ATTACHMENTS, {
                Using: "Reel"
            })
        }
        ,
        b.$on("$destroy", function(b, c) {
            a.removeEventListener("keydown", F, !1)
        }),
        b.tab.appContCtrl.appCtrl.closing = function() {}
        ,
        b.tab.appContCtrl.appCtrl.okToClose = function() {
            return !0
        }
        ;
        var O = document.querySelector.bind(document);
        O(".gallery-wrapper").addEventListener("mousedown", function(a) {
            b.toolSelected && (O("#bogus-element").focus(),
            O("#gallery-bogus-anchor").focus())
        }, !1),
        b.galleryCtrl.init()
    }
    ]),
    b.module("convoApp").directive("cnvGallery", ["$rootScope", "notesAppDataProvider", "Comments", "$q", "feedDirtyInfo", "userInfo", "Likes", "textSelections", "snippetArrow", "utils", "loader", function(a, b, d, e, f, g, h, i, j, k, l) {
        return {
            restrict: "E",
            priority: 0,
            scope: !1,
            templateUrl: "notes/gallery/templates/galleryMain.tpl.html",
            compile: function(a, b, d) {
                return function(a, b, d, e) {
                    function f(a) {
                        a ? document.documentElement.requestFullscreen ? document.documentElement.requestFullscreen() : document.documentElement.msRequestFullscreen ? document.documentElement.msRequestFullscreen() : document.documentElement.mozRequestFullScreen ? document.documentElement.mozRequestFullScreen() : document.documentElement.webkitRequestFullscreen && document.documentElement.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT) : document.exitFullscreen ? document.exitFullscreen() : document.msExitFullscreen ? document.msExitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen && document.webkitExitFullscreen()
                    }
                    var g;
                    a.$on("cnvGallery:gotoPost", function(a) {
                        a.stopPropagation(),
                        k.fireEvent(b[0].querySelector(".galleryFooterContainer .goto-post"), "click")
                    }),
                    document.fullscreenEnabled !== c ? document.addEventListener("fullscreenchange", function() {
                        null  === document.fullscreenElement && a.$emit("NotesApp:FullScreen", {
                            isFullScreen: !1
                        })
                    }, !1) : document.mozFullScreenEnabled !== c ? document.addEventListener("mozfullscreenchange", function() {
                        null  === document.mozFullScreenElement && a.$emit("NotesApp:FullScreen", {
                            isFullScreen: !1
                        })
                    }, !1) : document.webkitFullscreenEnabled !== c ? document.addEventListener("webkitfullscreenchange", function() {
                        null  === document.webkitFullscreenElement && a.$emit("NotesApp:FullScreen", {
                            isFullScreen: !1
                        })
                    }, !1) : document.msFullscreenEnabled !== c && document.addEventListener("MSFullscreenChange", function() {
                        null  === document.msFullscreenElement && a.$emit("NotesApp:FullScreen", {
                            isFullScreen: !1
                        })
                    }, !1),
                    a.$on("NotesApp:FullScreen", function(c, d) {
                        var e, h = document.querySelector(".galleryTplContainer"), i = b.find(".galleryImageContainer"), j = b.find("#outerContainer"), k = b.find(".sizeableVideoView"), l = document.querySelector(".app-header"), m = document.querySelector(".zoom-opts"), n = document.querySelector(".btn-close-gallery"), o = d.isFullScreen, p = d.isVideo || !1;
                        o ? (i.addClass("fullscreen"),
                        j.addClass("fullscreen"),
                        k.addClass("fullscreen"),
                        l.style.display = "none",
                        g = a.enableCommentsPanel.active,
                        a.enableCommentsPanel.active = !1,
                        n.style.display = "none",
                        p ? (b.find(".galleryFooterContainer").css("display", "none"),
                        $("#ChatDiv").hide(),
                        document.body.style.overflow = "hidden") : document.querySelector(".galleryAppContainer").appendChild(m),
                        m.classList.add("fullscreen"),
                        b.find(".galleryHeaderContainer").css("display", "none"),
                        e = h.style.width,
                        h.style.width = "100%",
                        h.style.height = "100%",
                        b.find(".galleryFooterContainer").addClass("fullscreen")) : (i.removeClass("fullscreen"),
                        j.removeClass("fullscreen"),
                        k.removeClass("fullscreen"),
                        l.style.display = "",
                        document.body.style.overflow = "auto",
                        $("#ChatDiv").show(),
                        (g || a.tab.resourceLink.data && "21" != a.tab.resourceLink.data.resource_type && !$scope.tab.resourceLink.commentFileId) && (a.enableCommentsPanel.active = !0),
                        n.style.display = "",
                        document.querySelector(".zoom-ddl-container").appendChild(m),
                        m.classList.remove("fullscreen"),
                        b.find(".galleryHeaderContainer").css("display", ""),
                        h.style.width = e,
                        h.style.height = "",
                        b.find(".galleryFooterContainer").removeClass("fullscreen"),
                        b.find(".galleryFooterContainer").css("display", "")),
                        f(o),
                        a.currentAppCtrl.showHideCommentsPanel()
                    }),
                    a.galleryCtrl.allowControls = !0,
                    a.$on("cnvGallery:requestAppHeader", function(b) {
                        a.galleryCtrl.allowControls = !0,
                        b.stopPropagation()
                    }),
                    a.$on("cnvGallery:unRequestAppHeader", function(b) {
                        a.galleryCtrl.allowControls = !1,
                        b.stopPropagation()
                    })
                }
            },
            controller: ["$scope", "Note", "$timeout", "Likes", "Users", "accountInfo", "mixpanelService", "config", function(b, c, d, e, f, g, h, i) {
                function j() {
                    var c = "";
                    1 == k.resourceLink.resourcePath.hierarchy.length ? c = k.resourceLink.commentFileId : 2 == k.resourceLink.resourcePath.hierarchy.length && (c = k.resourceLink.resourcePath.hierarchy[1].uid),
                    l.fileId !== c && a.$emit("SnippetArrow:destroyAll"),
                    l.fileId = c,
                    k.resourceLink.collaborationInfo ? l.commentId = k.resourceLink.collaborationInfo.commentId : l.commentId = null ,
                    b.galleryCtrl.initialized && b.galleryCtrl.init()
                }
                var k = b.tab
                  , l = b.galleryCtrl;
                b.galleryCtrl.relatedPermissions = {
                    canComment: !1,
                    canEdit: !1,
                    canView: !1
                },
                l.initialize = j,
                j()
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvFileViewer", ["$rootScope", "$filter", "$q", "textSelections", "cnvLineShape", "utils", "galleryClipboard", "config", function(d, e, f, g, h, i, j, k) {
        function l(l, m) {
            function n(a) {
                var b = a || r("#viewerContainer")
                  , c = b.clientHeight
                  , d = b.scrollTop / (b.scrollHeight - c)
                  , e = d * c
                  , f = 52
                  , g = r(".page-num-wrapper");
                e -= 20,
                g.offsetTop < 32 ? g.style.opacity = .4 : g.style.opacity = "",
                0 > e ? e = 0 : e > c - f && (e = c - f),
                m[0].classList.contains("fullscreen") && (e += 64),
                g.style.top = e + "px",
                g.classList.remove("fade-out"),
                g.classList.remove("fade-out-frm-4"),
                clearTimeout(B),
                B = setTimeout(function() {
                    var a = "fade-out";
                    "0.4" === g.style.opacity && (a = "fade-out-frm-4"),
                    g.style.opacity = "",
                    g.classList.add(a)
                }, 1e3)
            }
            function o() {
                if ("panzoom" !== l.toolSelected) {
                    var a = rangy.getSelection();
                    if (!a.isCollapsed) {
                        if (a.anchorNode.parentNode.dataset.idx === c || a.focusNode.parentNode.dataset.idx === c)
                            return a.removeAllRanges(),
                            -1;
                        var b = a.anchorNode
                          , d = a.focusNode;
                        if (b.nodeType === document.TEXT_NODE && (b = b.parentNode),
                        d.nodeType === document.TEXT_NODE && (d = d.parentNode),
                        b === d && b.querySelector(".sel-text-highlight"))
                            return a.removeAllRanges(),
                            -1;
                        for (d = d.nextSibling; b && b !== d; ) {
                            if (b.querySelector(".sel-text-highlight"))
                                return a.removeAllRanges(),
                                -1;
                            b = b.nextSibling
                        }
                        var e, f, g, d, h, i, j, k = a.getRangeAt(0), m = k.toString(), n = null , o = document.TEXT_NODE;
                        if (m) {
                            for (g = k.startContainer.nodeType === o ? k.startContainer.parentNode : k.startContainer,
                            d = k.endContainer.nodeType === o ? k.endContainer.parentNode : k.endContainer,
                            f = g; !f.classList.contains("page"); )
                                f = f.parentNode;
                            e = f.id,
                            e = parseInt(e.match(/pageContainer(\d+)/)[1], 10),
                            j = PDFViewer.api.pdfViewer.pages[e - 1].textLayer.textContent.items,
                            h = j.slice(0, g.dataset.idx).reduce(function(a, b) {
                                return a + b.str.length
                            }, 0),
                            h += k.startOffset,
                            i = j.slice(0, d.dataset.idx).reduce(function(a, b) {
                                return a + b.str.length
                            }, 0),
                            i += k.endOffset,
                            m = j.reduce(function(a, b) {
                                return a + b.str
                            }, "").substring(h, i),
                            n = {
                                sel: a,
                                text: m,
                                textStartIndex: h,
                                textEndIndex: i,
                                pageNo: e
                            }
                        }
                        return n
                    }
                }
            }
            function p(b) {
                var c = b.target;
                if ("CANVAS" !== c.tagName && !c.classList.contains("cross") && c !== P && c.parentNode !== P && !l.tab.resourceLink.commentFileId && l.galleryCtrl.relatedPermissions.canComment && 21 != l.galleryCtrl.postType) {
                    var d = o();
                    if (-1 !== d)
                        if (P && (P.remove(),
                        g.rmSelection(),
                        P = null ,
                        l.$emit("Notes:ClearSnippet")),
                        d && !P) {
                            d.fileId = l.currentlySelected.file_id,
                            P = g.showIcoAboveSel(t.parentNode, d.sel.getRangeAt(0).nativeRange, x);
                            var e = function() {
                                a.removeEventListener("click", e, !1),
                                P && P.remove()
                            }
                            ;
                            a.addEventListener("click", e, !1),
                            P.addEventListener("mousedown", function(b) {
                                return g.rmSelection(),
                                b.target.classList.contains("cross") ? (a.getSelection ? a.getSelection().removeAllRanges() : document.selection && document.selection.empty(),
                                void (P && (P.remove(),
                                P = null ))) : (delete d.sel,
                                void g.highlighter.applyToSelection())
                            }, !0),
                            P.addEventListener("click", function(a) {
                                a.target.classList.contains("cross") || (l.$emit("embedSnippetImage", {
                                    snippetData: {
                                        type: "scrybe.components.snippet.NotesSnippet",
                                        data: d
                                    },
                                    classes: "detail_snippet",
                                    fileViewerTextAnnotation: !0
                                }),
                                P && (P.remove(),
                                P = null ),
                                a.preventDefault(),
                                a.stopPropagation())
                            }, !1)
                        } else
                            g.rmAllSelections(),
                            g.rmSelection(),
                            l.$emit("Notes:ClearSnippet"),
                            P && (P.remove(),
                            P = null )
                }
            }
            var q, r = document.querySelector.bind(document), s = document.querySelectorAll.bind(document), t = r(".pdfViewer"), u = l.cnvDocViewerCtrl, v = {}, w = !1, x = i.isIE(), y = i.isIE(10), z = {
                currentTool: "text",
                panzoom: function() {
                    PDFViewer.HandTool.handTool.activate()
                },
                text: function() {
                    PDFViewer.HandTool.handTool.deactivate();
                    var a = this.fCanvas;
                    a && (a.defaultCursor = "default")
                },
                rectangle: function() {
                    PDFViewer.HandTool.handTool.deactivate();
                    var a = this.fCanvas;
                    "arrow" === this.currentTool ? a && (a.defaultCursor = (i.isIE() || k.IS_NATIVE ? "url(assets/img/cursors/2xarrowwhite.cur)" : "url(assets/img/cursors/2xarrowwhite.png) 7 7") + ", crosshair") : "rectangle" === this.currentTool ? a && (a.defaultCursor = (i.isIE() || k.IS_NATIVE ? "url(assets/img/cursors/2xsquarewhite.cur)" : "url(assets/img/cursors/2xsquarewhite.png) 8 8") + ", crosshair") : "pen" === this.currentTool ? a && (a.defaultCursor = (i.isIE() || k.IS_NATIVE ? "url(assets/img/cursors/2xmarkerwhite.cur)" : "url(assets/img/cursors/2xmarkerwhite.png) 6 6") + ", crosshair") : a && (a.defaultCursor = "crosshair")
                },
                selectTool: function(a) {
                    var b = this;
                    console.log("fileViewer_selectTool: " + a),
                    b.currentTool = a,
                    b[a]();
                    var c = b.fCanvas;
                    c && c.wrapperEl && ("text" === a ? (c.wrapperEl.style.pointerEvents = "none",
                    l.$emit("cnvGallery:dismissCommentBtn")) : (c.wrapperEl.style.pointerEvents = "",
                    P && (P.remove(),
                    P = null )))
                },
                inDrawingMode: function() {
                    var a = this.currentTool;
                    return "text" !== a && "panzoom" !== a
                },
                removeAllCanvases: function() {
                    var a = this
                      , b = a.removeFabricCanvas.bind(a);
                    Object.keys(a.pageCanvases).forEach(b)
                },
                removeTmpShapes: function() {
                    var a = this.pageCanvases;
                    Object.keys(a).forEach(function(b) {
                        a[b].getObjects().splice(0).forEach(function(a) {
                            a && a.selectable && ("line" === a.type ? a._instance.remove() : a.remove())
                        }),
                        a[b].clear()
                    })
                },
                removeFabricCanvas: function(a) {
                    var b = this
                      , c = b.pageCanvases[a];
                    delete b.pageCanvases[a],
                    c.dispose(),
                    c.wrapperEl.remove(),
                    b.fCanvas && b.fCanvas.id === a && (b.fCanvas = null )
                },
                removeCanvasForUnloadedPages: function() {
                    var a = this
                      , b = a.pageCanvases;
                    Object.keys(b).forEach(function(c) {
                        var d = b[c];
                        document.body.contains(d.wrapperEl) && document.getElementById(c).dataset.loaded || a.removeFabricCanvas(c)
                    })
                },
                createFabricCanvas: function(a) {
                    var b = this
                      , c = b.fCanvas
                      , d = b.pageCanvases;
                    if (b.removeCanvasForUnloadedPages(),
                    !c || c.id !== a.id) {
                        if (d[a.id])
                            return void (b.fCanvas = d[a.id]);
                        var e = a.querySelector(".canvasWrapper > canvas");
                        if (e) {
                            var f = document.createElement("canvas");
                            f.width = parseInt(a.style.width, 10),
                            f.height = parseInt(a.style.height, 10),
                            a.appendChild(f),
                            c = new fabric.Canvas(f,{
                                uniScaleTransform: !0
                            }),
                            c.wrapperEl.style.position = "absolute",
                            A.init(c, e.getContext("2d")),
                            c.id = a.id,
                            b.fCanvas = c,
                            d[a.id] = c,
                            z.selectTool(z.currentTool)
                        }
                    }
                },
                initFabricCanvas: function(a) {
                    var b = this
                      , c = a.target;
                    if (!C && a.eventPhase === Event.CAPTURING_PHASE && c !== t && b.inDrawingMode()) {
                        for (; !c.classList.contains("page"); )
                            c = c.parentNode;
                        b.createFabricCanvas(c)
                    }
                },
                mousedown: function(a) {
                    var b = this
                      , c = b.pageCanvases
                      , d = a.target;
                    if (a.eventPhase === Event.CAPTURING_PHASE && d !== t) {
                        for (; !d.classList.contains("page"); )
                            d = d.parentNode;
                        "text" === b.currentTool ? (j.setCanvas(null ),
                        b.removeAllCanvases()) : (Object.keys(c).forEach(function(a) {
                            a !== d.id && b.removeFabricCanvas(a)
                        }),
                        b.fCanvas !== j.getCanvas() && j.setCanvas(b.fCanvas))
                    }
                },
                get fCanvas() {
                    return this._fCanvas
                },
                set fCanvas(a) {
                    this._fCanvas = a,
                    a ? A.setCanvas(a, document.querySelector("#" + a.id + " .canvasWrapper > canvas").getContext("2d")) : A.setCanvas(null , null )
                },
                init: function() {
                    var a = this;
                    a.pageCanvases = {},
                    a.pen = a.rectangle,
                    a.arrow = a.rectangle,
                    t.addEventListener("mouseover", a.initFabricCanvas.bind(a), !0),
                    t.addEventListener("mousedown", a.mousedown.bind(a), !0)
                }
            };
            u.removeAllSnippets = z.removeAllCanvases.bind(z),
            u.removeTmpShapes = z.removeTmpShapes.bind(z),
            u.toolSelected = z.selectTool.bind(z),
            z.init();
            var A = function(e) {
                function f(a) {
                    Q = a
                }
                function g(a) {
                    var c = {
                        fill: "",
                        transparentCorners: !1,
                        hasRotatingPoint: !1,
                        hasBorders: !1,
                        stroke: Q,
                        originX: "left",
                        originY: "top",
                        strokeWidth: R,
                        cornerColor: S,
                        cornerSize: U,
                        cornerStrokeColor: T,
                        padding: V,
                        selectable: !1
                    };
                    b.extend(c, a);
                    var d = new fabric.Rect(c);
                    return J.add(d),
                    J.renderAll(!0),
                    d
                }
                function i(a) {
                    var d = {
                        fill: "",
                        hasRotatingPoint: !1,
                        hasControls: !1,
                        hasBorders: !1,
                        stroke: Q,
                        originX: "center",
                        originY: "center",
                        strokeWidth: R,
                        cornerColor: S,
                        cornerSize: U,
                        cornerStrokeColor: T,
                        padding: V,
                        selectable: !1,
                        transparentCorners: !1
                    }
                      , e = a.points;
                    return a.points = c,
                    b.extend(d, a),
                    h(J, e, d)
                }
                function j(a, b, c) {
                    var d = z(a)
                      , e = new fabric.Polyline(a,{
                        stroke: b,
                        strokeWidth: R,
                        left: d.minX,
                        top: d.minY,
                        originX: "left",
                        originY: "top",
                        fill: "",
                        hasBorders: !1,
                        hasRotatingPoint: !1,
                        hoverCursor: "default",
                        cornerColor: S,
                        cornerSize: U,
                        cornerStrokeColor: T,
                        padding: V,
                        transparentCorners: !1,
                        selectable: c || !1
                    });
                    return J.add(e),
                    J.renderAll(!0),
                    e
                }
                function k(a) {
                    return v[a].objects
                }
                function m(a) {
                    if (v[a]) {
                        var b = v[a].objects;
                        clearTimeout(v[a].timerId),
                        b.forEach(function(a) {
                            a.remove()
                        }),
                        d.$emit("SnippetArrow:destroy", a),
                        v[a].objects = null ,
                        delete v[a]
                    }
                }
                function n() {
                    var a = Object.keys(v);
                    a.length && m(a[0])
                }
                function o(a, b, c) {
                    for (var d = [], e = a.coordinates.length, f = 0; e > f; f += 2)
                        d.push({
                            x: a.coordinates[f] * b,
                            y: a.coordinates[f + 1] * c
                        });
                    return d
                }
                function p(a) {
                    var b, d, f, h, k, p, q, s, t, u, w, x = [], z = a.commentId, A = a._items.length, B = 8e3, C = "pageContainer" + a.pageNo, D = r("#" + C);
                    Object.keys(v).length > 1 ? n() : v[z] && m(z),
                    u = parseInt(D.style.width, 10) / a.rect.width,
                    w = parseInt(D.style.height, 10) / a.rect.height,
                    J && C === J.id || e.createFabricCanvas(D);
                    for (var E = 0; A > E; E++) {
                        if (d = a._items[E],
                        f = d.color.toString(16),
                        k = f[0],
                        h = f.length,
                        3 === h && f[1] === k && f[2] === k)
                            f += k + k + k;
                        else
                            for (; h++ < 6; )
                                f = "0" + f;
                        if (f = "#" + f,
                        20 === d.type) {
                            var F;
                            if (0 !== l.currentlySelected.type.indexOf("ppt") && 1 === A && a.selectionRect.top === c) {
                                var G = parseInt(a.rect.height, 10)
                                  , H = (parseInt(a.rect.width, 10),
                                (G + 15) * (a.pageNo - 1));
                                F = a.selectionRect.y - H,
                                F *= w
                            }
                            b = g({
                                left: d.coordinates[0] * u - 2,
                                top: F - 2.5 || d.coordinates[1] * w - 1.5,
                                width: d.coordinates[2] * u - 1,
                                height: d.coordinates[3] * w + 1,
                                stroke: f
                            })
                        } else
                            0 == d.type ? b = j(o(d, u, w), f) : (2 === d.type || 3 === d.type) && (d.data.headX ? (s = d.coordinates[0],
                            p = s + d.coordinates[2]) : (p = d.coordinates[0],
                            s = p + d.coordinates[2]),
                            d.data.headY ? (t = d.coordinates[1],
                            q = t + d.coordinates[3]) : (q = d.coordinates[1],
                            t = q + d.coordinates[3]),
                            p *= u,
                            s *= u,
                            q *= w,
                            t *= w,
                            b = i({
                                points: [p, q, s, t],
                                stroke: f
                            }));
                        b.commentId = z,
                        x.push(b)
                    }
                    v[z] = {
                        commentId: z,
                        objects: x
                    };
                    var I = r("#viewerContainer")
                      , K = y(x);
                    $(I).animate({
                        scrollTop: D.offsetTop + K.top - I.offsetHeight / 2 + K.height / 2
                    }, 500),
                    v[z].timerId = setTimeout(function() {
                        m(z)
                    }, B)
                }
                function q(a, b, c, d) {
                    var f = e.currentTool;
                    "rectangle" == f ? L = new fabric.Rect({
                        left: a,
                        top: b,
                        fill: "",
                        transparentCorners: !1,
                        hasRotatingPoint: !1,
                        hasBorders: !1,
                        hasControls: !1,
                        stroke: Q,
                        originX: "left",
                        originY: "top",
                        strokeWidth: R,
                        cornerStrokeColor: T,
                        cornerColor: S,
                        padding: V,
                        cornerSize: U
                    }) : "arrow" === f ? L = new fabric.Line([a, b, c, d],{
                        hasRotatingPoint: !1,
                        hasBorders: !1,
                        hasControls: !1,
                        strokeWidth: R,
                        stroke: Q,
                        originX: "left",
                        originY: "top"
                    }) : "pen" == f && (L = new fabric.Polyline([{
                        x: a,
                        y: b
                    }],{
                        stroke: Q,
                        strokeWidth: R,
                        originX: "left",
                        originY: "top",
                        fill: "",
                        hasControls: !1,
                        transparentCorners: !1,
                        hasRotatingPoint: !1
                    })),
                    J.add(L),
                    J.renderAll(!0),
                    J.setActiveObject(L)
                }
                function s(a, b) {
                    var c = Math.abs(Math.abs(M.x) - Math.abs(a))
                      , d = Math.abs(Math.abs(M.y) - Math.abs(b))
                      , f = {};
                    N.y > M.y && N.x < M.x ? (f.x = N.x,
                    f.y = M.y) : N.y < M.y && N.x < M.x ? f = N : N.x > M.x && N.y < M.y ? (f.x = M.x,
                    f.y = N.y) : f = M;
                    var g = e.currentTool;
                    if ("rectangle" === g)
                        L.set({
                            left: f.x,
                            top: f.y,
                            width: c,
                            height: d
                        });
                    else if ("arrow" === g) {
                        var h = {
                            x2: a,
                            y2: b
                        };
                        if (L.height < 20 && L.width < 20) {
                            var i = a - L.x1
                              , j = b - L.y1;
                            i > 0 ? i = 20 - i : 0 > i && (i = -20 - i),
                            j > 0 ? j = 20 - j : 0 > j && (j = -20 - j),
                            h.x2 = a + i,
                            h.y2 = b + j
                        }
                        L.set(h)
                    } else if ("pen" == g) {
                        var k = L.get("points");
                        if (k.push({
                            x: a,
                            y: b
                        }),
                        2 === k.length && (k[0].x < 0 || k[0].y < 0) && k.splice(0, 1),
                        O)
                            L.set({
                                points: k,
                                hasControls: !1
                            });
                        else {
                            J.remove(L);
                            var l = z(k);
                            L = new fabric.Polyline(k,{
                                stroke: Q,
                                strokeWidth: R,
                                left: l.minX,
                                top: l.minY,
                                originX: "left",
                                originY: "top",
                                fill: "",
                                hasControls: !0,
                                hasBorders: !1,
                                hasRotatingPoint: !1,
                                transparentCorners: !1,
                                cornerColor: S,
                                cornerStrokeColor: T,
                                padding: V,
                                cornerSize: U
                            }),
                            J.add(L),
                            J.setActiveObject(L)
                        }
                    }
                    L.setCoords(),
                    J.renderAll(!0)
                }
                function u(a, b, c, d) {
                    var f, g, h, i, j, k, m, n, o = e.fCanvas.id, p = parseInt(o.match(/pageContainer(\d+)/)[1], 10), q = document.getElementById(o), r = (PDFViewer.api.pdfViewer._currentScale,
                    l.currentlySelected), s = parseInt(r.height, 10), t = parseInt(r.width, 10), u = 0 !== r.type.indexOf("ppt"), v = t / parseInt(q.style.width, 10), w = s / parseInt(q.style.height, 10), x = {
                        x: parseInt(a.left, 10) * v,
                        y: parseInt(a.top, 10) * w,
                        width: parseInt(a.width, 10) * v,
                        height: parseInt(a.height, 10) * w
                    }, y = (s + 15) * (p - 1), z = y + s, A = [];
                    for (g = 0; g < b.length; g++) {
                        var B = {};
                        if (f = b[g],
                        f.selectable !== !1 && !f.dontShowInSnippetImage) {
                            var C, D = f.get("type"), E = [], F = null ;
                            if ("rect" == D)
                                C = 20,
                                n = [(f.left + 2) * v, (f.top + 1.5) * w, (f.width + 1) * v, (f.height - 1) * w],
                                E = null ;
                            else if ("line" === D)
                                C = f._instance ? 2 : 3,
                                E = null ,
                                F = {
                                    headX: 0,
                                    headY: 0,
                                    tailX: 0,
                                    tailY: 0
                                },
                                i = (f.left + f.x1Diff) * v,
                                j = (f.top + f.y1Diff) * w,
                                k = (f.left + f.x2Diff) * v,
                                m = (f.top + f.y2Diff) * w,
                                n = [i, j, k, m],
                                k >= i ? (F.tailX = 1,
                                k -= i,
                                n[2] = k) : (F.headX = 1,
                                i -= k,
                                n[0] = k,
                                n[2] = i),
                                m >= j ? (F.tailY = 1,
                                m -= j,
                                n[3] = m) : (F.headY = 1,
                                j -= m,
                                n[1] = m,
                                n[3] = j);
                            else if ("polyline" == D) {
                                C = 0,
                                n = [];
                                var G = b[g].get("points")
                                  , H = G.length
                                  , I = b[g].get("left") * v
                                  , J = b[g].get("top") * w
                                  , K = b[g].getWidth() * v / 2
                                  , L = b[g].getHeight() * w / 2
                                  , M = b[g].scaleX
                                  , N = b[g].scaleY;
                                for (h = 0; H > h; h++)
                                    n.push(G[h].x * M * v + I + K),
                                    n.push(G[h].y * N * w + J + L),
                                    0 == h ? E.push(1) : E.push(2)
                            }
                            B.data = F,
                            B.version = 2,
                            B.type = C,
                            B.color = parseInt(f.stroke.substr(1), 16),
                            B.coordinates = n,
                            B.commands = E,
                            A.push(B)
                        }
                    }
                    return x.size = {
                        x: x.x,
                        y: x.y
                    },
                    x.left = x.x,
                    u && (x.y += y),
                    x.top = x.y,
                    x.right = x.x + x.width,
                    x.bottom = x.y + x.height,
                    x.topLeft = {
                        x: x.x,
                        y: x.y
                    },
                    x.bottomRight = {
                        x: x.right,
                        y: x.bottom
                    },
                    {
                        type: "scrybe.components.snippet.MarkupBitmapSnippet",
                        data: {
                            fileId: r.file_id,
                            width: c,
                            height: d,
                            scale: 1,
                            pageNo: p,
                            pagename: "Page " + p,
                            isJPG: !0,
                            version: 2,
                            rect: {
                                width: r.width,
                                height: r.height,
                                top: u ? y : 0,
                                bottom: u ? z : r.height,
                                left: 0,
                                right: r.width,
                                x: 0,
                                y: u ? y : 0,
                                bottomRight: {
                                    x: r.width,
                                    y: u ? z : r.height
                                },
                                topLeft: {
                                    length: u ? y : 0,
                                    y: u ? y : 0,
                                    x: 0
                                },
                                size: {
                                    y: u ? z : r.height,
                                    x: r.width
                                }
                            },
                            selectionRect: x,
                            _items: A
                        }
                    }
                }
                function x(a, b) {
                    var c = new Image
                      , d = 250
                      , e = 100;
                    c.src = a,
                    c.onload = function() {
                        var a = document.createElement("canvas")
                          , f = a.getContext("2d");
                        if (c.width > d || c.height > e) {
                            var g = d / c.width
                              , h = e / c.height
                              , i = Math.min(g, h);
                            c.width = c.width * i,
                            c.height = c.height * i,
                            a.width = c.width,
                            a.height = c.height
                        } else
                            a.width = c.width,
                            a.height = c.height;
                        f.drawImage(c, 0, 0, c.width, c.height),
                        b(a.toDataURL("image/png", 1), c.width, c.height)
                    }
                }
                function y(a) {
                    for (var b, c, d, e, f, g, h = a.length, i = 0; h > i; i++)
                        g = a[i].getLeft(),
                        f = a[i].getTop(),
                        ("line" === a[i].type || "arrow" === a[i].type) && (f -= a[i].getHeight() / 2,
                        g -= a[i].getWidth() / 2),
                        0 === i ? (d = f,
                        e = g,
                        b = a[i].getWidth(),
                        c = a[i].getHeight()) : (e > g && (e = g),
                        d > f && (d = f));
                    for (var i = 0; h > i; i++) {
                        g = a[i].getLeft(),
                        f = a[i].getTop(),
                        ("line" === a[i].type || "arrow" === a[i].type) && (f -= a[i].getHeight() / 2,
                        g -= a[i].getWidth() / 2);
                        var j = f - d + a[i].getHeight();
                        j > c && (c = j);
                        var k = g - e + a[i].getWidth();
                        k > b && (b = k)
                    }
                    return {
                        top: d,
                        left: e,
                        width: b,
                        height: c
                    }
                }
                function z(a) {
                    for (var b = a[0].x, c = a[0].y, d = a[0].x, e = a[0].y, f = 0; f < a.length; f++)
                        a[f].x > d && (d = a[f].x),
                        a[f].x < b && (b = a[f].x),
                        a[f].y > e && (e = a[f].y),
                        a[f].y < c && (c = a[f].y);
                    return {
                        minX: b,
                        minY: c,
                        maxX: d,
                        maxY: e,
                        width: d - b,
                        height: e - c
                    }
                }
                function A() {
                    function b() {
                        var b = document.createElement("canvas")
                          , d = b.getContext("2d")
                          , e = (new Image,
                        a.devicePixelRatio || 1)
                          , f = J.width
                          , g = J.height
                          , h = f * e
                          , i = g * e
                          , j = J.getObjects();
                        c = d,
                        b.width = f,
                        b.height = g,
                        d.drawImage(K.canvas, 0, 0, h, i, 0, 0, f, g),
                        (1 !== j.length || "rect" !== j[0].type) && d.drawImage(J.lowerCanvasEl, 0, 0, f, g)
                    }
                    if (w) {
                        var c;
                        setTimeout(function() {
                            1 != l.showCommentsPanel && l.$emit("showHideCommentsPanel", !0);
                            var a, d, e, f, g, h, i, j = t.querySelector(".dummyCanvas"), k = [], m = J.getObjects().filter(function(a) {
                                if (a.selectable === !1)
                                    if (a._instance) {
                                        if ("line" !== a.type)
                                            return !1;
                                        k.push(a),
                                        a._instance.setVisible(!1)
                                    } else
                                        k.push(a),
                                        a.setVisible(!1);
                                else if (a._instance && "line" !== a.type)
                                    return !1;
                                return a.selectable
                            });
                            if (j || (j = document.createElement("canvas"),
                            j.style.display = "none",
                            t.appendChild(j)),
                            a = j.getContext("2d"),
                            b(),
                            1 == m.length) {
                                e = m[0],
                                g = e.top,
                                f = e.left,
                                h = e.width,
                                i = e.height,
                                "rect" == e.get("type") ? (g += R,
                                f += R,
                                h -= R,
                                i -= R,
                                d = c.getImageData(f, g, h, i),
                                j.width = h,
                                j.height = i) : ("polyline" == e.get("type") || "line" == e.get("type")) && ("line" === e.type && (g -= e.height / 2,
                                f -= e.width / 2),
                                d = c.getImageData(f - 5, g - 5, e.getWidth() + 15, e.getHeight() + 15),
                                j.width = e.getWidth() + 15,
                                j.height = e.getHeight() + 15),
                                a.putImageData(d, 0, 0);
                                var n = {
                                    left: f,
                                    top: g,
                                    width: h,
                                    height: i
                                };
                                x(j.toDataURL("image/png"), function(a, b, c) {
                                    var d = {
                                        snippetData: u(n, [e], b, c),
                                        imageData: a
                                    };
                                    l.$emit("embedSnippetImage", d)
                                }),
                                a.clearRect(0, 0, h, i)
                            } else if (m.length > 1) {
                                var o = y(m)
                                  , d = c.getImageData(o.left - 5, o.top - 5, o.width + 15, o.height + 15);
                                j.width = o.width + 15,
                                j.height = o.height + 15,
                                a.putImageData(d, 0, 0),
                                x(j.toDataURL("image/png", 1), function(a, b, c) {
                                    var d = {
                                        snippetData: u(o, m, b, c),
                                        imageData: a
                                    };
                                    l.$emit("embedSnippetImage", d)
                                }),
                                a.clearRect(0, 0, o.width + 15, o.height + 15)
                            } else
                                l.$emit("Notes:ClearSnippet");
                            k.forEach(function(a) {
                                "line" === a.type ? a._instance.setVisible(!0) : a.setVisible(!0)
                            }),
                            c = null 
                        }, 100)
                    }
                }
                function B(a) {
                    var b = J.width - R
                      , c = J.height - R;
                    a.x < 1 ? a.x = 1 : a.x > b && (a.x = b),
                    a.y < 1 ? a.y = 1 : a.y > c && (a.y = c)
                }
                function C(a, b) {
                    var c = J.width - R
                      , d = J.height - R;
                    a.x < 1 ? (b.lockScalingX = !0,
                    b.lockMovementX = !0,
                    b.left = 1,
                    b.scaleX = (b.prvWidth + b.prvLeft - 1) / b.prvWidth) : a.x > c ? (b.lockScalingX = !0,
                    b.lockMovementX = !0,
                    b.scaleX = (c - b.prvLeft) / b.prvWidth) : (b.lockScalingX = !1,
                    b.lockMovementX = !1,
                    b.prvLeft || (b.prvLeft = b.left,
                    b.prvWidth = b.scaleX * b.width)),
                    a.y < 1 ? (b.lockScalingY = !0,
                    b.lockMovementY = !0,
                    b.top = 1,
                    b.scaleY = (b.prvHeight + b.prvTop - 1) / b.prvHeight) : a.y > d ? (b.lockScalingY = !0,
                    b.lockMovementY = !0,
                    b.scaleY = (d - b.prvTop) / b.prvHeight) : (b.lockScalingY = !1,
                    b.lockMovementY = !1,
                    b.prvTop || (b.prvTop = b.top,
                    b.prvHeight = b.scaleY * b.height))
                }
                function D(a, b) {
                    J = a,
                    K = b,
                    J.on({
                        "mouse:down": function(a) {
                            M = J.getPointer(a.e),
                            e.inDrawingMode() && (P || a.target || (P = !0,
                            O = !0,
                            J.selection = !1))
                        },
                        "mouse:move": function(a) {
                            if (N = J.getPointer(a.e),
                            e.inDrawingMode())
                                if (P) {
                                    if (O) {
                                        var b = Math.max(Math.abs(M.x - N.x), Math.abs(M.y - N.y));
                                        b > 2 && (B(M),
                                        q(M.x, M.y, N.x, N.y),
                                        P = !1)
                                    }
                                } else
                                    O && (B(N),
                                    s(N.x, N.y, J))
                        },
                        "mouse:up": function(a) {
                            if (N = J.getPointer(a.e),
                            e.inDrawingMode() && O) {
                                if (O = !1,
                                J.selection = !0,
                                P)
                                    return void (P = !1);
                                B(N),
                                s(N.x, N.y, J),
                                A();
                                var b = J.getActiveObject();
                                "arrow" === e.currentTool ? (b.active = !1,
                                h(J, [b.x1, b.y1, b.x2, b.y2], {
                                    hasRotatingPoint: !1,
                                    hasBorders: !1,
                                    hasControls: !1,
                                    selectable: !0,
                                    strokeWidth: R,
                                    stroke: Q,
                                    originX: "center",
                                    originY: "center",
                                    active: !0
                                }),
                                b.remove()) : (b.set("hasControls", !0),
                                J.renderAll())
                            }
                            E()
                        },
                        "object:modified": function(a) {
                            var b = a.target;
                            if (b.isScaling) {
                                if ("rect" === b.type) {
                                    var c = new fabric.Rect({
                                        _id: b._id,
                                        left: b.left,
                                        top: b.top,
                                        width: b.width * b.scaleX,
                                        height: b.height * b.scaleY,
                                        fill: "",
                                        transparentCorners: !1,
                                        hasRotatingPoint: !1,
                                        hasBorders: !1,
                                        stroke: b.stroke,
                                        originX: "left",
                                        originY: "top",
                                        strokeWidth: R,
                                        cornerColor: S,
                                        padding: V,
                                        cornerStrokeColor: T,
                                        cornerSize: U
                                    });
                                    J.add(c),
                                    J.setActiveObject(c),
                                    b.remove()
                                } else
                                    b.isScaling = !1;
                                b.prvLeft = null ,
                                b.prvWidth = null ,
                                b.prvTop = null ,
                                b.prvHeight = null 
                            }
                            A(),
                            J.renderAll(!0)
                        },
                        "object:moving": function(a) {
                            l.$emit("cnvGallery:dismissCommentBtn");
                            var b, c, d = (PDFViewer.api.pdfViewer._currentScale,
                            a.target), e = d.width * d.scaleX, f = d.height * d.scaleY, g = d.left, h = g + e, i = d.top, j = i + f, k = J.width - R, m = J.height - R, n = !1, o = !1;
                            "line" === d.type && (b = e / 2,
                            c = f / 2,
                            i -= c,
                            j -= c,
                            g -= b,
                            h -= b),
                            1 > g ? (g = 1,
                            o = !0) : h > k && (g = k - e,
                            o = !0),
                            1 > i ? (i = 1,
                            n = !0) : j > m && (i = m - f,
                            n = !0),
                            "line" === d.type && (n && (i += c),
                            o && (g += b)),
                            o && (d.left = g),
                            n && (d.top = i)
                        },
                        "object:scaling": function(a) {
                            l.$emit("cnvGallery:dismissCommentBtn");
                            var b = a.target;
                            if (b.canvas !== J)
                                return b.lockScalingX = !0,
                                b.lockMovementX = !0,
                                b.lockScalingY = !0,
                                void (b.lockMovementY = !0);
                            b.lockScalingX = !1,
                            b.lockMovementX = !1,
                            b.lockScalingY = !1,
                            b.lockMovementY = !1;
                            var c = J.getPointer(a.e);
                            C(c, b);
                            var d = (b.scaleX + b.scaleY) / 2;
                            b.setStrokeWidth(R / d),
                            b.isScaling = !0
                        },
                        "object:selected": function(a) {
                            var b = a.target;
                            b && !b.dontShowInSnippetImage && b.width > 1 && b.height > 1 && !O && E(b)
                        },
                        "before:selection:cleared": function(a) {
                            l.$emit("cnvGallery:dismissCommentBtn");
                            var b = J.getActiveObject();
                            (b.dontShowInSnippetImage || "line" === b.type) && b._instance && b._instance.deselect(),
                            setTimeout(function() {
                                0 === J.getObjects().length && (w = !1)
                            }, 0)
                        }
                    })
                }
                function E(a) {
                    if (!w && !l.tab.resourceLink.commentFileId && l.galleryCtrl.relatedPermissions.canComment && 21 != l.galleryCtrl.postType) {
                        var b;
                        if (J && (b = a || J.getActiveObject()),
                        b) {
                            var c = r("#pageContainer" + PDFViewer.api.page)
                              , d = $(c).offset()
                              , e = {
                                left: d.left + b.left,
                                top: d.top + b.top,
                                width: b.width * b.scaleX,
                                height: b.height * b.scaleY
                            };
                            "line" === b.type && (e.left -= e.width / 2,
                            e.top -= e.height / 2 + 4),
                            l.$emit("cnvGallery:showCommentBtn", e)
                        }
                    }
                }
                function F(a, b) {
                    J = a,
                    K = b
                }
                function G() {
                    var a = J.getActiveObject();
                    a && (a._instance ? a._instance.remove() : J.remove(a),
                    J.renderAll(!0),
                    A())
                }
                function H() {
                    l.$emit("cnvGallery:dismissCommentBtn"),
                    w = !0,
                    A();
                    var a = J.getActiveObject();
                    a && ("line" === a.type && a._instance.deselect(),
                    J.discardActiveObject())
                }
                function I(a) {
                    if (J) {
                        var b = J.getActiveObject();
                        if (b)
                            return 39 === a ? b.left += 1 : 37 === a ? b.left -= 1 : 38 === a ? b.top -= 1 : 40 === a && (b.top += 1),
                            J.renderAll(),
                            !0
                    }
                    return !1
                }
                var J, K, L, M, N, O, P = !1, Q = "#d10000", R = 5, S = "#000000", T = "#ffffff", U = 6, V = -3, W = _.debounce(E, 100);
                return {
                    init: D,
                    setCanvas: F,
                    setSnippetColor: f,
                    removeActiveObject: G,
                    drawSnippetShapes: p,
                    drawRectOnCanvas: g,
                    drawLineOnCanvas: i,
                    drawPolylineOnCanvas: j,
                    getBoundingRect: y,
                    getObjectsForComment: k,
                    rmSnippetsById: m,
                    commentBtnClicked: H,
                    showCommentBtn: E,
                    debouncedShowCommentBtn: W,
                    nudgeActiveObject: I
                }
            }(z);
            u.setSnippetColor = A.setSnippetColor,
            u.removeActiveObject = A.removeActiveObject,
            u.commentBtnClicked = A.commentBtnClicked,
            u.nudgeActiveObject = A.nudgeActiveObject,
            u.closeFile = function() {
                d.$emit("SnippetArrow:destroyAll"),
                PDFViewer.api.close()
            }
            ,
            u.loadFile = function(a, b) {
                function d() {
                    z.removeAllCanvases();
                    var a;
                    a = b ? e("getOriginalImagePath")(h.original_name, h.item_id, h.app_instance_id) : e("getFilePreviewPath")(h.preview_name, h.original_name, h.item_id, h.app_instance_id),
                    PDFViewer.api.open(a, 0, c, c, h),
                    document.addEventListener("pagesinit", function d() {
                        console.log("pagesinit"),
                        document.removeEventListener("pagesinit", d, !1),
                        F = PDFViewer.api.pdfViewer._currentScale,
                        r(".page-num-wrapper").style.display = "block",
                        n(),
                        f()
                    }, !1),
                    document.addEventListener("pagerendered", function g() {
                        document.removeEventListener("pagerendered", g, !1),
                        F = PDFViewer.api.pdfViewer._currentScale
                    }, !1)
                }
                var f, g = this, h = a;
                PDFViewer.init();
                var i = _.debounce(d, 1e3)
                  , j = !0;
                return g.loadFile = function(a) {
                    return w = !1,
                    r(".page-num-wrapper").style.display = "none",
                    q = new Promise(function(b) {
                        f = b,
                        h = a,
                        j ? (d(),
                        j = !1) : (PDFViewer.api.close(),
                        i())
                    }
                    )
                }
                ,
                g.loadFile(h)
            }
            ;
            var B;
            r("#viewerContainer").addEventListener("scroll", function(a) {
                l.$emit("cnvGallery:dismissCommentBtn"),
                d.$emit("SnippetArrow:repositionAll"),
                A.debouncedShowCommentBtn(),
                n(this)
            });
            var C = !1;
            t.parentNode.addEventListener("scalechange", function(a) {
                C = !0;
                var b = parseFloat(a.scale.toFixed(3), 10);
                F === c && (F = b);
                var e = b / F;
                return F = b,
                console.log("zoom scale: " + b),
                D.value = b,
                E.value = Number(100 * b).toFixed(0),
                l.$emit("cnvGallery:dismissCommentBtn"),
                d.$emit("SnippetArrow:destroyAll"),
                P && (P.remove(),
                P = null ),
                z.fCanvas ? void setTimeout(function f() {
                    var a = z.fCanvas;
                    if (!a)
                        return void (C = !1);
                    var b = (a.id,
                    document.getElementById(a.id));
                    if ("true" !== b.dataset.loaded)
                        return void setTimeout(f, 100);
                    var c, d = [], g = a.getObjects();
                    g.forEach(function(a) {
                        if (!a._instance || "line" === a.type) {
                            if (c = {
                                type: a.type,
                                selectable: a.selectable,
                                stroke: a.stroke
                            },
                            "line" === a.type)
                                c.points = [a.left * e + a.x1Diff * e, a.top * e + a.y1Diff * e, a.left * e + a.x2Diff * e, a.top * e + a.y2Diff * e];
                            else if ("polyline" === a.type) {
                                var b = a.left * e
                                  , f = a.top * e
                                  , g = a.width * e / 2
                                  , h = a.height * e / 2;
                                c = a.points.map(function(a) {
                                    return {
                                        x: a.x * e + b + g,
                                        y: a.y * e + f + h
                                    }
                                }),
                                c = {
                                    points: c,
                                    type: a.type,
                                    stroke: a.stroke,
                                    selectable: a.selectable
                                }
                            } else
                                c.left = a.left * e,
                                c.top = a.top * e,
                                c.height = a.height * e,
                                c.width = a.width * e;
                            d.push(c)
                        }
                    }),
                    z.removeAllCanvases(),
                    z.createFabricCanvas(b),
                    a = z.fCanvas;
                    var h = [];
                    d.forEach(function(a) {
                        var b, c = a.type;
                        c = c[0].toUpperCase() + c.substr(1),
                        b = "polyline" === a.type ? A["draw" + c + "OnCanvas"](a.points, a.stroke, a.selectable) : A["draw" + c + "OnCanvas"](a),
                        b.selectable || h.push(b)
                    }),
                    C = !1,
                    setTimeout(function() {
                        h.forEach(function(a) {
                            a.remove()
                        }),
                        h = null 
                    }, 4e3)
                }, 100) : void (C = !1)
            }, !0);
            var D, E, F, G = !1, H = .1, I = 3, J = 300, K = function() {
                if (!$(t).is(":hidden")) {
                    var a = D.value;
                    PDFViewer.api.setScale(a),
                    E.value = Number(100 * a).toFixed(0)
                }
            }
            , L = function() {
                if (!$(t).is(":hidden")) {
                    var a = parseInt(E.value, 10);
                    10 > a ? E.value = a = 10 : a > 300 && (E.value = a = 300),
                    a /= 100,
                    PDFViewer.api.setScale(a),
                    D.value = a
                }
            }
            , M = function() {
                $(t).is(":hidden") || PDFViewer.api.setScale("page-fit")
            }
            , N = function() {
                $(t).is(":hidden") || PDFViewer.api.setScale(1)
            }
            ;
            u.setZoomElm = function(a) {
                console.log("fileViewer_setZoomElm"),
                D === c && (D = r(a),
                E = r("#galleryZoomPercent")),
                D.min = H,
                D.max = I,
                D.step = ".1",
                E.min = 0,
                E.max = J,
                D.value = PDFViewer.api.pdfViewer._currentScale,
                G || (D.addEventListener("change", K, !1),
                E.addEventListener("change", L, !1),
                r(".zoom-opts .btn.fit-screen").addEventListener("click", M, !1),
                r(".zoom-opts .original").addEventListener("click", N, !1),
                G = !0)
            }
            ;
            var O = _.debounce(function() {
                $(t).is(":hidden") || (n(),
                t && "page-fit" === PDFViewer.api.currentScaleValue && PDFViewer.api.setScale("page-fit"))
            }, 200);
            a.addEventListener("resize", O, !1),
            u.getSnippetPos = function(a) {
                if (a.beginIndex !== c && a.endIndex !== c)
                    return g.calcSelDimensions({
                        nodes: g.getSelectionNodesById(a.commentId),
                        pdfViewer: !0
                    });
                var b = A.getBoundingRect(A.getObjectsForComment(a.commentId))
                  , d = r("#pageContainer" + a.pageNo)
                  , e = $(d).offset();
                return b.top += e.top,
                b.left += e.left,
                b.width += 5,
                b
            }
            ,
            u.selectText = function(a) {
                return z.removeCanvasForUnloadedPages(),
                new Promise(function(b, c) {
                    function e() {
                        return l.pages[j - 1].textLayer.textContent.items.reduce(function(a, b) {
                            return a + b.str
                        }, "")
                    }
                    function f(a) {
                        b(),
                        d.$emit("SnippetArrow:repositionAll")
                    }
                    function h(a) {
                        console.error("No match found for snippet text"),
                        c()
                    }
                    function i() {
                        o.nodes = l.pages[j - 1].textLayer.textContent.items,
                        o.pdfViewer = !0,
                        g.selectText("textContent", o)
                    }
                    var j = parseInt(a.pageNo, 10)
                      , k = "#pageContainer" + j
                      , l = PDFViewer.api.pdfViewer
                      , m = k + "[data-loaded] > .textLayer > div"
                      , n = s(m)
                      , o = {
                        data: a,
                        scrollContainer: r("#viewerContainer"),
                        highlightRemoveTime: 8e3,
                        highlight: !0,
                        selectionOffset: 100,
                        getContent: e,
                        complete: f,
                        failure: h
                    };
                    if (n.length)
                        i();
                    else {
                        var p = 1
                          , q = y ? 1e3 : 500;
                        setTimeout(function t() {
                            return p++ > 100 ? void c() : (o.nodes = s(m),
                            void (o.nodes.length ? i() : setTimeout(t, q)))
                        }, q)
                    }
                }
                )
            }
            ,
            u.removeSnippetsForComment = function(a) {
                A.rmSnippetsById(a),
                g.rmSelectionById(a)
            }
            ,
            u.drawSnippet = function(a) {
                return q ? q.then(function() {
                    function b(a) {
                        console.log("..:: PAGE: " + PDFViewer.api.page + "::.."),
                        a.detail.pageNumber === g && (clearTimeout(e),
                        document.removeEventListener(f, b, !1),
                        c()),
                        g !== PDFViewer.api.page && (document.removeEventListener(f, b, !1),
                        d())
                    }
                    var c, d, e, f = "pagerender", g = parseInt(a.pageNo, 10);
                    return document.addEventListener(f, b, !1),
                    PDFViewer.api.page !== g && (PDFViewer.api.page = g),
                    new Promise(function(a, b) {
                        c = a,
                        d = b;
                        var e = g - 1
                          , f = PDFViewer.api.pdfViewer.pages[e];
                        return f || b(),
                        3 === f.renderingState ? void a() : void 0
                    }
                    )
                }).then(function() {
                    return a.textStartIndex !== c && a.textEndIndex !== c ? (a.beginIndex = a.textStartIndex,
                    a.endIndex = a.textEndIndex,
                    u.selectText(a)) : new Promise(function(b) {
                        var c = parseInt(a.pageNo, 10);
                        c !== PDFViewer.api.page && (PDFViewer.api.page = a.pageNo),
                        setTimeout(A.drawSnippetShapes.bind(A, a), 500),
                        setTimeout(b, 1200)
                    }
                    )
                }) : f(function(a, b) {
                    b()
                })
            }
            ,
            u.snippetImagePosted = function() {
                l.$emit("cnvGallery:dismissCommentBtn"),
                w = !1,
                z.removeTmpShapes(),
                P && (P.remove(),
                P = null ),
                g.rmSelection()
            }
            ,
            u.undoSnippetDrawing = function() {
                l.$emit("cnvGallery:dismissCommentBtn"),
                j.undoSnippetDrawing()
            }
            ,
            u.redoSnippetDrawing = function() {
                l.$emit("cnvGallery:dismissCommentBtn"),
                j.redoSnippetDrawing()
            }
            ;
            var P;
            t.addEventListener("mouseup", function(a) {
                setTimeout(function() {
                    p(a)
                }, 0)
            }, !0),
            l.$on("$destroy", function() {
                console.log("fileViewer_destroy"),
                a.removeEventListener("resize", O, !1),
                t.removeEventListener("mouseup", p, !1),
                t = null ,
                D && (D.removeEventListener("change", K, !1),
                D = null ),
                E && (E.removeEventListener("change", L, !1),
                E = null );
                var b = r(".zoom-opts .btn.fit-screen");
                b && b.removeEventListener("click", M, !1);
                var c = r(".zoom-opts .original");
                c && c.removeEventListener("click", N, !1),
                z.removeAllCanvases(),
                z = null ,
                A = null ,
                PDFViewer.api.close(),
                PDFViewer.api.initialized = !1,
                PDFViewer.api.cleanMemory()
            })
        }
        return {
            restrict: "E",
            replace: !0,
            scope: !0,
            templateUrl: "notes/gallery/components/cnvFileViewer/cnvFileViewer.tpl.html",
            link: function(a, b) {
                a.galleryLibsPromise.then(function() {
                    l(a, b),
                    a.cnvDocViewerCtrl.initialized = !0,
                    a.cnvDocViewerCtrl.trigger("initialized")
                })
            }
        }
    }
    ]),
    b.module("convoApp").factory("textSelections", ["$rootScope", "$filter", "utils", "localStore", function(b, d, e, f) {
        function g(a) {
            if (L) {
                var b, c = [], d = a.startContainer, e = a.endContainer, f = document.TEXT_NODE;
                if (d.nodeType === f && (d = d.parentNode),
                e.nodeType === f && (e = e.parentNode),
                d === e)
                    return d.getBoundingClientRect();
                for (; d && d !== e; )
                    c.push(d),
                    d = d.nextSibling;
                return b = i({
                    nodes: c
                })
            }
            return a.getBoundingClientRect()
        }
        function h(a) {
            var b = a.style.transform ? a : a.parentNode
              , c = "string" == typeof b.style.transform ? "transform" : "webkitTransform"
              , d = b.style[c].match(/scaleX\((.+)\)/);
            return d = Array.isArray(d) ? parseFloat(d[1], 10) : 1,
            a.offsetWidth * d
        }
        function i(a) {
            var b, c, d, e, f, g, i, j = a.pdfViewer, k = a.className || J, l = a.nodes || I("." + k), m = l.length;
            b = c = l[0],
            d = $(b).offset(),
            f = j ? h(b) : b.offsetWidth;
            var n = $(l[m - 1]);
            i = n.offset().top - d.top + n[0].offsetHeight;
            for (var o = 1; m > o; ++o)
                b = l[o],
                e = $(b).offset(),
                e.top !== d.top ? (g = e.left - $(c).offset().left + (j ? h(b) : b.offsetWidth),
                g > f && (f = g)) : f = e.left - $(c).offset().left + (j ? h(b) : b.offsetWidth);
            var p = $(l[0])
              , q = p.offset();
            return 0 !== q.top || 0 !== q.left || 0 !== i || 0 !== f ? {
                top: q.top,
                left: q.left,
                height: i,
                width: f,
                nodes: l
            } : void 0
        }
        function j() {
            return F
        }
        function k(a) {
            return N[a] ? N[a].nodes : void 0
        }
        function l(a) {
            var b = rangy.getSelection();
            return b.removeAllRanges(),
            b.addRange(a),
            b
        }
        function m(a) {
            var b = a || I("." + J)
              , c = b.length;
            if (0 !== c) {
                for (var d = b[0].childNodes[0], e = b[c - 1].childNodes[0], f = document.createRange(), g = 0; c > g; ++g)
                    delete b[g].dataset.commentId;
                f.setStart(d, 0),
                f.setEnd(e, e.textContent.length);
                var h, i = rangy.getSelection(), j = i.isCollapsed;
                j || (h = i.getRangeAt(0));
                var k = l(f);
                D.undoToSelection(),
                k.removeAllRanges(),
                !j && h && k.addRange(h)
            }
        }
        function n(a) {
            var c = N[a];
            if (c) {
                var d = c.nodes
                  , e = d.length
                  , f = e ? !0 : !1;
                F === d && (F = null );
                for (var g = 0; e > g; ++g)
                    if (!document.contains(d[g])) {
                        f = !1;
                        break
                    }
                f && (clearTimeout(c.timingFuncId),
                m(d)),
                b.$emit("SnippetArrow:destroy", a),
                c.nodes = null ,
                delete N[a]
            }
        }
        function o() {
            Object.keys(N).forEach(n)
        }
        function p(a, b) {
            var c, d, e = !1;
            if (N[a]) {
                console.log("SNIPPET ANNOTATION: CACHE HIT"),
                N[a].timingFuncId && (clearTimeout(N[a].timingFuncId),
                N[a].timingFuncId = setTimeout(function() {
                    n(a)
                }, N[a].timerDelay)),
                F = N[a].nodes;
                var f = function() {
                    b.complete && b.complete(null )
                }
                ;
                $(b.scrollContainer).animate({
                    scrollTop: N[a].containerScrollTop
                }, {
                    duration: 400,
                    complete: f
                }),
                e = !0
            }
            if (e)
                N[a].position = O++;
            else if (d = Object.keys(N),
            d.length > 1) {
                var g = d[0]
                  , h = O;
                d.forEach(function(a) {
                    N[a].position < h && (g = a,
                    h = N[a].position)
                }),
                c = g,
                N[c].timingFuncId && (clearTimeout(N[c].timingFuncId),
                n(c))
            }
            return e ? P : Q
        }
        function q(a) {
            var b = a.data
              , c = !0;
            return b.beginIndex = b.beginIndex || 0,
            b.endIndex = b.endIndex || 1,
            b.endIndex <= b.beginIndex && (b.endIndex = b.beginIndex + 1),
            (!a.content || b.beginIndex > a.content.length) && (c = !1),
            c
        }
        function r(a, b) {
            function c(a) {
                var b;
                if (a.nodeType !== e && a.classList.contains(J))
                    return b = a.dataset.commentId,
                    void (f[b] || (f[b] = !0,
                    n(b)));
                var c = a.querySelectorAll("." + J)
                  , d = c.length;
                if (d)
                    for (var g = 0; d > g; ++g)
                        b = c[g].dataset.commentId,
                        f[b] || (f[b] = !0,
                        n(b))
            }
            var d, e = document.TEXT_NODE, f = {};
            if (a.nodeType === e && (a = a.parentNode),
            b.nodeType === e && (b = b.parentNode),
            a === b)
                c(a);
            else
                for (d = a; d && d !== b && (c(d),
                !d.contains(b)); )
                    do
                        d = d.nextSibling;
                    while (d && d.nodeType === e);
            return Object.keys(f).length
        }
        function s(a, b) {
            var c = b.data
              , d = !1
              , e = M[a + "Nodes"](b.nodes, c);
            e.startNode && e.endNode && r(e.startNode, e.endNode) && (e = M[a + "Nodes"](b.nodes, c));
            var f = document.createRange();
            e.startNode,
            e.endNode;
            return e.startNode && e.endNode && (f.setStart(e.startNode, e.startNodeOffset),
            f.setEnd(e.endNode, e.endNodeOffset)),
            f.toString() == c.text && (d = !0),
            {
                range: f,
                found: d
            }
        }
        function t(a, b) {
            var d, e, f, g = b.data, h = "(“|”|\"|’|')", i = !1, j = g.text.replace(/&nbsp;/g, " ").trim();
            for (d = new RegExp(j.replace(new RegExp("([{}()^$&.*?/+|[\\\\]|]|-)","g"), "\\$1").replace(/(\\n|\\r|\s)+/g, "\\s*").replace(new RegExp("(" + h + ")","g"), h),"g"); null  !== d.exec(b.content); ) {
                var k = d.lastIndex;
                e == c ? e = k : Math.abs(g.beginIndex - k) < Math.abs(g.beginIndex - e) && (e = k)
            }
            if (e != c) {
                for (var l = e, m = 0, n = j.replace(/[\n|\r|\s]/g, ""), o = n.length - 1, p = new RegExp(h), q = l; q >= 0 && ((n[o] == b.content[q] || p.test(b.content[q])) && (m = q,
                --o),
                !(0 > o)); --q)
                    ;
                var s = {
                    beginIndex: m,
                    endIndex: l
                };
                s.pageNo = g.pageNo,
                res = M[a + "Nodes"](b.nodes, s),
                r(res.startNode, res.endNode) && (res = M[a + "Nodes"](b.nodes, s)),
                f = document.createRange(),
                res.startNode && res.endNode && (f.setStart(res.startNode, res.startNodeOffset),
                f.setEnd(res.endNode, res.endNodeOffset),
                i = !0)
            }
            return {
                range: f,
                found: i
            }
        }
        function u(a, b) {
            console.log("SNIPPET ANNOTATION: SELECT TEXT");
            var c = b.data
              , d = c.commentId
              , e = p(d, b);
            if (e === Q) {
                if (console.log("SNIPPET ANNOTATION: CACHE MISS"),
                b.content = "function" == typeof b.getContent ? b.getContent() : "",
                q(b)) {
                    if (console.log("SNIPPET ANNOTATION: SNIPPET DATA VALIDATED."),
                    e = s(a, b),
                    console.log("SNIPPET ANNOTATION: DIRECT INDEX SEARCH."),
                    e.found || (e = t(a, b),
                    console.log("SNIPPET ANNOTATION: BRUTE FORCE SEARCH.")),
                    e.found) {
                        l(e.range),
                        E.applyToSelection(),
                        rangy.getSelection().removeAllRanges(),
                        rangeDimensions = i({
                            className: K,
                            pdfViewer: b.pdfViewer
                        }),
                        F = rangeDimensions.nodes;
                        for (var f = 0, g = F.length; g > f; ++f)
                            F[f].dataset.commentId = d;
                        return setTimeout(function() {
                            function a() {
                                setTimeout(function() {
                                    if (b.highlight && $(rangeDimensions.nodes).removeClass(K).addClass(J),
                                    N[d] = {
                                        nodes: rangeDimensions.nodes,
                                        containerScrollTop: c,
                                        position: O++
                                    },
                                    b.highlightRemoveTime && (N[d].timerDelay = b.highlightRemoveTime,
                                    N[d].timingFuncId = setTimeout(function() {
                                        n(d)
                                    }, b.highlightRemoveTime)),
                                    b.complete) {
                                        $startNode = $(rangeDimensions.nodes[0]);
                                        var a = $startNode.offset();
                                        rangeDimensions.top = a.top,
                                        rangeDimensions.left = a.left,
                                        b.complete(rangeDimensions)
                                    }
                                }, 200)
                            }
                            for (var c = 0, e = 400, f = b.selectionOffset || 100, g = rangeDimensions.nodes[0]; g != b.scrollContainer && (c += g.offsetTop,
                            g = g.offsetParent,
                            g || b.scrollContainer.nodeType !== document.body.parentNode.nodeType); )
                                ;
                            c - f < b.scrollContainer.scrollTop ? c -= f : c + f > b.scrollContainer.scrollTop + b.scrollContainer.offsetHeight ? c = c + rangeDimensions.height - b.scrollContainer.offsetHeight + f : (c = b.scrollContainer.scrollTop,
                            e = 0),
                            e ? $(b.scrollContainer).animate({
                                scrollTop: c
                            }, {
                                duration: e,
                                complete: a
                            }) : a()
                        }, 0),
                        e.range
                    }
                    return b.failure && b.failure(),
                    null 
                }
                console.log("Couln't continue snippet-search through content."),
                b.failure && b.failure()
            }
        }
        function v(a, b) {
            try {
                var c = document.createRange()
                  , d = rangy.createRangyRange()
                  , e = M[a + "Nodes"](b.nodes, b.data);
                e.startNode && e.endNode && (c.setStart(e.startNode, e.startNodeOffset),
                c.setEnd(e.endNode, e.endNodeOffset),
                d.startContainer = c.startContainer,
                d.endContainer = c.endContainer,
                d.startOffset = c.startOffset,
                d.endOffset = c.endOffset,
                d.commonAncestorContainer = c.commonAncestorContainer,
                d.collapsed = c.collapsed,
                D.applyToRange(d))
            } catch (f) {
                console.log("sb teek ha.")
            }
        }
        function w(b, c) {
            try {
                if (c.data.hasOwnProperty("beginIndex") && c.data.hasOwnProperty("endIndex")) {
                    if (c.data.beginIndex === c.data.endIndex)
                        return;
                    var d = document.createRange()
                      , e = M[b + "Nodes"](c.nodes, c.data);
                    if (e.startNode && e.endNode) {
                        d.setStart(e.startNode, e.startNodeOffset),
                        d.setEnd(e.endNode, e.endNodeOffset);
                        var f = a.getSelection();
                        f.removeAllRanges(),
                        f.addRange(d)
                    }
                }
            } catch (g) {
                console.log("sb teek ha.")
            }
        }
        function x(a) {
            for (var b, c = a.childNodes, d = c.length, e = document.TEXT_NODE, f = [], g = 0; d > g; ++g)
                b = c[g],
                b.nodeType === e ? f.push(b) : b.childNodes.length && (f = f.concat(x(b)));
            return f
        }
        function y(a, b) {
            for (var c, d, e = document.TEXT_NODE; a.nodeType !== e; )
                c = x(a),
                d = c.length,
                a = d ? "next" === b ? c[0] : c[d - 1] : a[b + "Sibling"];
            return a
        }
        function z(a, b, c) {
            var d, e, f, g, h = document.TEXT_NODE, i = a.startContainer.nodeType === h ? a.startContainer.parentNode : a.startContainer, j = a.endContainer.nodeType === h ? a.endContainer.parentNode : a.endContainer, k = a.startOffset, l = a.endOffset, m = 0;
            if (d = i,
            "string" == typeof b)
                for (; !d.classList.contains(b); )
                    d = d.parentNode;
            else
                d = b;
            if (c) {
                e = d.id,
                e = parseInt(e.match(/pageContainer(\d+)/)[1], 10);
                for (var n = I("#pageContainer" + e + " .textLayer > div"), o = (n.length,
                0); n[o] !== i; ++o)
                    m += n[o].textContent.length;
                for (f = m + k; n[o] !== j; ++o)
                    m += n[o].textContent.length;
                return g = m + l,
                {
                    pageNo: e,
                    textStartIndex: f,
                    textEndIndex: g
                }
            }
            var p = M
              , q = p.newState(d)
              , r = a.startContainer
              , s = a.endContainer
              , h = document.TEXT_NODE;
            r.nodeType !== h && (r = y(r, "next"),
            k = 0),
            s.nodeType !== h && (s = y(s, "previous"),
            l = s.length);
            var t = p._iterateNestedNodes(q, p._checkTarget(r, k, !0))
              , u = p._iterateNestedNodes(q, p._checkTarget(s, l, !0));
            return {
                beginIndex: t,
                endIndex: u
            }
        }
        function A() {
            f.writeData("comment_on_this_tooltip_visible", !0)
        }
        function B(a, b, c) {
            var d, e, f, h = a.querySelector(".sel-open-comments.text-operations"), i = $(a).offset(), j = c ? g(b) : b.getBoundingClientRect();
            return h || (h = document.createElement("div"),
            h.innerHTML = "<span class='cross cnv-icons-20 icons2_Close-darkgray'></span><i class='cnv-icons-20 icons_Comments-white'></i><span>Comment on this</span>",
            a.appendChild(h)),
            h.className = "sel-open-comments text-operations",
            d = $(h).width(),
            h.nodeType === document.body.nodeType && !a.scrollTop && a.parentNode.scrollTop && (a = a.parentNode),
            e = j.top + a.scrollTop - i.top - 40,
            f = j.left + j.width / 2 - i.left,
            f > d / 2 + 20 && f + d + 20 < $(a).width() ? (f -= d / 2 + 9,
            h.classList.add("arrow-center")) : f + d + 20 > $(a).width() ? (f -= d - 4,
            h.classList.add("arrow-right")) : (f -= 24,
            h.classList.add("arrow-left")),
            h.style.top = e + "px",
            h.style.left = f + "px",
            h.classList.add("visible"),
            h
        }
        function C(a, b) {
            var c = rangy.getSelection()
              , e = d("unescape")(c.toHtml().replace(/<\/div>|<\/p>|<br>|<\/li>/g, "\n").replace(/<.*?>|<\/.*?>/g, ""))
              , f = null ;
            return e && (f = z(c.getRangeAt(0), a, b),
            f.text = e.replace(/\n/g, "\r"),
            f.sel = c),
            f
        }
        var D, E, F, G, H = document.querySelector.bind(document), I = document.querySelectorAll.bind(document), J = "sel-text-highlight", K = "sel-text-invisible-highlight", L = e.isIE();
        e.isIE(10);
        rangy.init(),
        rangy.createClassApplier === c ? setTimeout(function R() {
            return rangy.createClassApplier === c ? void setTimeout(R, 0) : (D = rangy.createClassApplier(J),
            E = rangy.createClassApplier("sel-text-invisible-highlight"),
            void (G.highlighter = D))
        }, 0) : (D = rangy.createClassApplier(J),
        E = rangy.createClassApplier("sel-text-invisible-highlight"));
        var M = {};
        M._checkTarget = function(a, b, c) {
            return function(d, e, f) {
                return c && a === e ? d - f + b : d > a ? {
                    node: e,
                    nodeOffset: a - (d - f)
                } : !1
            }
        }
        ,
        M._iterateNestedNodes = function(a, b) {
            for (var c, d, e, f, g = a.stack, h = document.TEXT_NODE, i = document.COMMENT_NODE; a.childIdx < a.childNodesLen; ) {
                if (d = a.childNodes[a.childIdx],
                d.nodeType === h) {
                    if (c = d.textContent.length,
                    a.textLen += c,
                    f = b(a.textLen, d, c),
                    f !== !1)
                        return a.textLen -= c,
                        f
                } else if (d.nodeType !== i && d.childNodes.length) {
                    g.push({
                        childIdx: a.childIdx + 1,
                        childNodes: a.childNodes,
                        childNodesLen: a.childNodesLen
                    }),
                    a.childIdx = 0,
                    a.childNodes = d.childNodes,
                    a.childNodesLen = a.childNodes.length;
                    continue
                }
                for (++a.childIdx; a.childIdx >= a.childNodesLen && g.length; )
                    e = g.pop(),
                    a.childIdx = e.childIdx,
                    a.childNodes = e.childNodes,
                    a.childNodesLen = e.childNodesLen,
                    e = null 
            }
            return 0
        }
        ,
        M.newState = function(a) {
            return {
                stack: [],
                textLen: 0,
                childIdx: 0,
                childNodes: a.childNodes,
                childNodesLen: a.childNodes.length
            }
        }
        ,
        M.nestedNodes = function(a, b) {
            var c = this
              , d = c.newState(a);
            --b.endIndex;
            var e = c._iterateNestedNodes(d, M._checkTarget(b.beginIndex))
              , f = c._iterateNestedNodes(d, M._checkTarget(b.endIndex));
            return ++b.endIndex,
            ++f.nodeOffset,
            {
                startNode: e.node,
                startNodeOffset: e.nodeOffset,
                endNode: f.node,
                endNodeOffset: f.nodeOffset
            }
        }
        ,
        M.textContentNodes = function(a, b) {
            console.log(a, b);
            for (var c, d, e = b.beginIndex, f = b.endIndex, g = b.pageNo, h = 0, i = 0, j = a.length, k = 0; j > k && (h = a[k].str.length,
            i += h,
            !(i >= e)); ++k)
                ;
            if (c = H("#pageContainer" + g + " > .textLayer > div.idx-" + k),
            null  === c) {
                for (; null  === c && j > k; )
                    ++k,
                    c = H("#pageContainer" + g + " > .textLayer > div.idx-" + k);
                k === j && --k,
                h = a[k].str.length,
                i += h
            }
            if (d = e - (i - h),
            0 > d && (d = 0),
            f > i) {
                for (++k; j > k && (h = a[k].str.length,
                i += h,
                !(i >= f)); ++k)
                    ;
                k === j && --k
            }
            if (endNode = H("#pageContainer" + g + " > .textLayer > div.idx-" + k),
            null  === endNode) {
                for (; null  === endNode && j > k; )
                    ++k,
                    endNode = H("#pageContainer" + g + " > .textLayer > div.idx-" + k);
                k === j && --k,
                h = a[k].str.length,
                i += h
            }
            return endNodeOffset = f - (i - h),
            endNodeOffset < 0 && (endNodeOffset = 0),
            {
                startNode: c ? c.childNodes[0] : c,
                startNodeOffset: d,
                endNode: endNode ? endNode.childNodes[0] : endNode,
                endNodeOffset: endNodeOffset
            }
        }
        ,
        M.flatNodes = function(a, b) {
            for (var c, d, e, f, g, h = b.beginIndex, i = b.endIndex, j = a, k = j.length, l = 0, m = !1, n = !1, o = 0; k > o && (c = j[o].textContent.length,
            0 === c || (l += c,
            !m && l > h && (d = j[o],
            f = h - (l - c),
            m = !0),
            !n && l > i && (e = j[o],
            g = i - (l - c),
            n = !0),
            !m || !n)); ++o)
                ;
            return {
                startNode: d.childNodes[0],
                startNodeOffset: f,
                endNode: e.childNodes[0],
                endNodeOffset: g
            }
        }
        ;
        var N = {}
          , O = 0
          , P = !0
          , Q = !1;
        return G = {
            commentOnThisTooltipClicked: A,
            restoreHighlightedSelection: v,
            getCurrentSelectionNodes: j,
            restoreNativeSelection: w,
            getSelectionNodesById: k,
            calcSelDimensions: i,
            getOffsetIndexes: z,
            rmSelectionById: n,
            rmAllSelections: o,
            showIcoAboveSel: B,
            getSelection: C,
            highlighter: D,
            mkSelection: l,
            rmSelection: m,
            selectText: u
        }
    }
    ]),
    b.module("convoApp").directive("cnvGalleryNavigation", ["$filter", "$location", function(a, b) {
        return {
            restrict: "A",
            replace: !1,
            scope: !0,
            link: function(c, d, e) {
                d.keydown(function(d) {
                    if (39 == d.keyCode) {
                        var e = a("getImageResourceLinkUrl")(c.navigate.nextImage.file_id, c.tab.appInstanceId, c.note.item.type, c.note.item.item_id, null );
                        b.path(e.slice(1)).search({}).hash()
                    } else if (37 == d.keyCode) {
                        var e = a("getImageResourceLinkUrl")(c.navigate.previousImage.file_id, c.tab.appInstanceId, c.note.item.type, c.note.item.item_id, null );
                        b.path(e).search({}).hash()
                    }
                })
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvGallerySnippetCommentBtn", [function() {
        return {
            restrict: "E",
            replace: !0,
            templateUrl: "notes/gallery/components/cnvGallerySnippetCommentBtn/cnvGallerySnippetCommentBtn.tpl.html",
            link: function(a, b, c) {
                a.$on("cnvGallery:showCommentBtn", function(a, c) {
                    a.stopPropagation();
                    var d = b[0];
                    "none" === d.style.display && (d.style.opacity = 0,
                    d.style.display = "block"),
                    setTimeout(function() {
                        d.style.top = c.top - b.height() - 18 + "px",
                        d.style.left = c.left - d.offsetWidth / 2 + c.width / 2 + 3 + "px",
                        d.style.opacity = 1
                    }, 0)
                }),
                a.$on("cnvGallery:dismissCommentBtn", function() {
                    b.hide()
                }),
                a.btnClicked = function() {
                    a.commentBtnClicked(),
                    a.galleryCtrl.showHideCommentsPanel(),
                    a.cnvInAppCommentsCtrl.enableSnippetsInComment = !0
                }
                ,
                a.btnClose = function(c) {
                    a.$emit("Notes:ClearSnippet"),
                    a.removeTmpShapes(),
                    b.hide(),
                    c.stopPropagation()
                }
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvImageViewer", ["$rootScope", "$compile", "$timeout", "$filter", "$q", "galleryClipboard", "cnvLineShape", "utils", "config", "appStateInfo", function(d, e, f, g, h, i, j, k, l, m) {
        function n(e, f, n) {
            function o(a) {
                a ? U = setTimeout(function() {
                    e.$evalAsync(function() {
                        e.showSpinner = !0
                    })
                }, 300) : (clearTimeout(U),
                e.showSpinner = !1)
            }
            function p() {
                return X ? "none" !== xa[0].style.display : "none" !== xa[0].style.pointerEvents
            }
            function q(a) {
                a ? X ? xa[0].style.display = "block" : xa[0].style.pointerEvents = "auto" : X ? (e.$emit("cnvGallery:dismissCommentBtn"),
                xa[0].style.display = "none") : xa[0].style.pointerEvents = "none"
            }
            function r(b) {
                function c() {
                    a.URL.revokeObjectURL(Z.src),
                    Z.removeEventListener("load", c, !1)
                }
                Z.addEventListener("load", c, !1),
                Z.src = a.URL.createObjectURL(b)
            }
            function s(a, b) {
                Object.keys(ra).every(function(c) {
                    var d = ra[c];
                    return d.objects.every(function(c, e) {
                        return c === a ? (d.objects[e] = b,
                        !1) : !0
                    })
                })
            }
            function t(a) {
                for (var b, c, d = L(), e = d.transformX, f = d.transformY, g = "pan" === a ? 1 : ha / ia, h = drawingCanvas.getObjects().splice(0), i = 0, j = h.length; j > i; ++i)
                    if (b = h[i],
                    !b._instance || "line" === b.type) {
                        var k = b
                          , l = b.type
                          , m = {
                            left: (b.left + 2.5 - b._transformX) * g + e - 2.5,
                            top: (b.top + 2.5 - b._transformY) * g + f - 2.5,
                            width: b.width * g,
                            height: b.height * g,
                            stroke: b.stroke,
                            selectable: b.selectable,
                            prvSelectable: b.prvSelectable,
                            active: b.active,
                            _transformX: e,
                            _transformY: f
                        };
                        if (b.remove(),
                        "rect" === l)
                            b = D(m);
                        else if ("line" === l)
                            m.points = [m.left + b.x1Diff * g, m.top + b.y1Diff * g, m.left + b.x2Diff * g, m.top + b.y2Diff * g],
                            b._instance.remove(),
                            b = F(m),
                            k = k._instance;
                        else if ("polyline" === l) {
                            var n = m.left
                              , o = m.top
                              , p = m.width / 2
                              , q = m.height / 2
                              , r = b.points.map(function(a) {
                                return {
                                    x: a.x * g + n + p,
                                    y: a.y * g + o + q
                                }
                            });
                            m.pathArray = r,
                            b = E(m)
                        }
                        s(k, b),
                        b.active && (c = b)
                    }
                c && drawingCanvas._setActiveObject(c),
                drawingCanvas.setDimensions({
                    width: drawingCanvas.width,
                    height: drawingCanvas.height
                })
            }
            function u(a) {
                var b = L()
                  , c = ha
                  , d = b.transformX + Z.width * c - STROKE_WIDTH
                  , e = b.transformY + Z.height * c - STROKE_WIDTH;
                a.x < b.transformX ? a.x = b.transformX : a.x > d && (a.x = d),
                a.y < b.transformY ? a.y = b.transformY : a.y > e && (a.y = e)
            }
            function v(a, b) {
                var c = L()
                  , d = ha
                  , e = c.transformX + Z.width * d - STROKE_WIDTH
                  , f = c.transformY + Z.height * d - STROKE_WIDTH;
                a.x < c.transformX ? (b.lockScalingX = !0,
                b.lockMovementX = !0,
                b.left = c.transformX,
                b.scaleX = (b.prvWidth + b.prvLeft - c.transformX - 1) / b.prvWidth) : a.x > e ? (b.lockScalingX = !0,
                b.lockMovementX = !0,
                b.scaleX = (e - b.prvLeft) / b.prvWidth) : (b.lockScalingX = !1,
                b.lockMovementX = !1,
                b.prvLeft || (b.prvLeft = b.left,
                b.prvWidth = b.scaleX * b.width)),
                a.y < c.transformY ? (b.lockScalingY = !0,
                b.lockMovementY = !0,
                b.top = c.transformY,
                b.scaleY = (b.prvHeight + b.prvTop - c.transformY - 1) / b.prvHeight) : a.y > f ? (b.lockScalingY = !0,
                b.lockMovementY = !0,
                b.scaleY = (f - b.prvTop) / b.prvHeight) : (b.lockScalingY = !1,
                b.lockMovementY = !1,
                b.prvTop || (b.prvTop = b.top,
                b.prvHeight = b.scaleY * b.height))
            }
            function w() {
                drawingCanvas.on({
                    "mouse:down": function(a) {
                        if (ka = drawingCanvas.getPointer(a.e),
                        ea && "panzoom" !== e.toolSelected && !na && !a.target) {
                            var b = L()
                              , c = b.transformX + b.scaledImgWidth
                              , d = b.transformY + b.scaledImgHeight;
                            ka.x >= b.transformX && ka.x <= c && ka.y >= b.transformY && ka.y <= d ? (na = !0,
                            ma = !0,
                            drawingCanvas.selection = !1) : drawingCanvas.selection = !1
                        }
                    },
                    "mouse:move": function(a) {
                        if (la = drawingCanvas.getPointer(a.e),
                        "panzoom" !== e.toolSelected)
                            if (na) {
                                if (ma) {
                                    var b = Math.max(Math.abs(ka.x - la.x), Math.abs(ka.y - la.y));
                                    b > 2 && (u(ka),
                                    y(ka.x, ka.y, la.x, la.y),
                                    na = !1)
                                }
                            } else
                                ma && (u(la),
                                z(la.x, la.y))
                    },
                    "mouse:up": function(a) {
                        la = drawingCanvas.getPointer(a.e);
                        var b = e.toolSelected;
                        if ("panzoom" != b && (drawingCanvas.selection = !0,
                        ma)) {
                            if (ma = !1,
                            na)
                                return void (na = !1);
                            u(la),
                            z(la.x, la.y);
                            var c = drawingCanvas.getActiveObject();
                            "arrow" === b ? (j(drawingCanvas, [c.x1, c.y1, c.x2, c.y2], {
                                hasRotatingPoint: !1,
                                hasBorders: !1,
                                hasControls: !1,
                                selectable: !0,
                                active: !0,
                                strokeWidth: STROKE_WIDTH,
                                stroke: pa,
                                originX: "center",
                                originY: "center",
                                _transformX: c._transformX,
                                _transformY: c._transformY
                            }),
                            c.remove()) : (c.set("hasControls", !0),
                            drawingCanvas.renderAll()),
                            x(),
                            C()
                        }
                    },
                    "object:modified": function(a) {
                        var b = a.target;
                        if (b.isScaling) {
                            if ("rect" === b.type) {
                                var c = new fabric.Rect({
                                    _id: b._id,
                                    left: b.left,
                                    top: b.top,
                                    width: b.width * b.scaleX,
                                    height: b.height * b.scaleY,
                                    fill: "",
                                    transparentCorners: !1,
                                    hasRotatingPoint: !1,
                                    hasBorders: !1,
                                    stroke: b.stroke,
                                    originX: "left",
                                    originY: "top",
                                    strokeWidth: STROKE_WIDTH,
                                    cornerColor: CORNER_COLOR,
                                    padding: CORNER_PADDING,
                                    cornerStrokeColor: CORNER_STROKE_COLOR,
                                    cornerSize: CORNER_SIZE,
                                    _transformX: b._transformX,
                                    _transformY: b._transformY
                                });
                                drawingCanvas.add(c),
                                drawingCanvas.setActiveObject(c),
                                b.remove()
                            } else
                                b.isScaling = !1;
                            b.prvLeft = null ,
                            b.prvWidth = null ,
                            b.prvTop = null ,
                            b.prvHeight = null 
                        }
                        C(),
                        drawingCanvas.renderAll(!0)
                    },
                    "object:moving": function(a) {
                        var b, c, d = L(), e = ha, f = a.target, g = f.width * f.scaleX, h = f.height * f.scaleY, i = f.left - d.transformX, j = i + g, k = f.top - d.transformY, l = k + h, m = Z.width * e - STROKE_WIDTH, n = Z.height * e - STROKE_WIDTH, o = !1, p = !1;
                        "line" === f.type && (b = g / 2,
                        c = h / 2,
                        k -= c,
                        l -= c,
                        i -= b,
                        j -= b),
                        1 > i ? (i = d.transformX,
                        p = !0) : j > m && (i = d.transformX + m - g,
                        p = !0),
                        1 > k ? (k = d.transformY,
                        o = !0) : l > n && (k = d.transformY + n - h,
                        o = !0),
                        "line" === f.type && (o && (k += c),
                        p && (i += b)),
                        p && (f.left = i),
                        o && (f.top = k),
                        p || o || x()
                    },
                    "object:scaling": function(a) {
                        var b = a.target
                          , c = drawingCanvas.getPointer(a.e);
                        v(c, b);
                        var d = (b.scaleX + b.scaleY) / 2;
                        b.setStrokeWidth(STROKE_WIDTH / d),
                        b.isScaling = !0,
                        x()
                    },
                    "object:selected": function(a) {
                        var b = a.target;
                        b && !b.dontShowInSnippetImage && b.width > 1 && b.height > 1 && drawingCanvas.getObjects().forEach(function(a) {
                            a !== b && a._instance && "line" === a.type && a._instance.deselect()
                        }),
                        ma || x()
                    },
                    "before:selection:cleared": function(a) {
                        e.$emit("cnvGallery:dismissCommentBtn");
                        var b = drawingCanvas.getActiveObject();
                        (b.dontShowInSnippetImage || "line" === b.type) && b._instance && b._instance.deselect(),
                        setTimeout(function() {
                            0 === drawingCanvas.getObjects().length && (sa = !1)
                        }, 0)
                    }
                })
            }
            function x() {
                if (!sa && (!X || p())) {
                    var a = drawingCanvas.getActiveObject();
                    if (a) {
                        var b = L()
                          , c = e.cnvImageViewerCtrl.getContainerOffset();
                        a._instance && "line" !== a.type && (a = a._instance._line);
                        var d = {
                            left: c.left + (a.left - b.transformX),
                            top: c.top + (a.top - b.transformY),
                            width: a.width * a.scaleX,
                            height: a.height * a.scaleY
                        };
                        "line" === a.type && (d.left -= d.width / 2,
                        d.top -= d.height / 2 + 4),
                        e.$emit("cnvGallery:showCommentBtn", d)
                    }
                }
            }
            function y(a, b, c, d) {
                var f = e.toolSelected
                  , g = L();
                "rectangle" == f ? oa = new fabric.Rect({
                    left: a,
                    top: b,
                    fill: "",
                    transparentCorners: !1,
                    hasRotatingPoint: !1,
                    hasBorders: !1,
                    hasControls: !1,
                    stroke: pa,
                    originX: "left",
                    originY: "top",
                    strokeWidth: STROKE_WIDTH,
                    cornerStrokeColor: CORNER_STROKE_COLOR,
                    cornerColor: CORNER_COLOR,
                    padding: CORNER_PADDING,
                    cornerSize: CORNER_SIZE,
                    _transformX: g.transformX,
                    _transformY: g.transformY
                }) : "arrow" === f ? oa = new fabric.Line([a, b, c, d],{
                    hasRotatingPoint: !1,
                    hasBorders: !1,
                    hasControls: !1,
                    strokeWidth: STROKE_WIDTH,
                    stroke: pa,
                    originX: "left",
                    originY: "top",
                    active: !0,
                    _transformX: g.transformX,
                    _transformY: g.transformY
                }) : "pen" == f && (oa = new fabric.Polyline([{
                    x: a,
                    y: b
                }],{
                    stroke: pa,
                    strokeWidth: STROKE_WIDTH,
                    originX: "left",
                    originY: "top",
                    hasBorders: !1,
                    fill: "",
                    cornerColor: CORNER_COLOR,
                    padding: CORNER_PADDING,
                    cornerStrokeColor: CORNER_STROKE_COLOR,
                    cornerSize: CORNER_SIZE,
                    hasControls: !1,
                    transparentCorners: !1,
                    hasRotatingPoint: !1,
                    _transformX: g.transformX,
                    _transformY: g.transformY
                },!0)),
                drawingCanvas.add(oa),
                drawingCanvas.setActiveObject(oa)
            }
            function z(a, b) {
                var c = Math.abs(Math.abs(ka.x) - Math.abs(a))
                  , d = Math.abs(Math.abs(ka.y) - Math.abs(b))
                  , f = {};
                la.y > ka.y && la.x < ka.x ? (f.x = la.x,
                f.y = ka.y) : la.y < ka.y && la.x < ka.x ? f = la : la.x > ka.x && la.y < ka.y ? (f.x = ka.x,
                f.y = la.y) : f = ka;
                var g = e.toolSelected;
                if ("rectangle" == g)
                    oa.set({
                        left: f.x,
                        top: f.y,
                        width: c,
                        height: d,
                        strokeWidth: STROKE_WIDTH
                    });
                else if ("arrow" === g) {
                    var h = {
                        x2: a,
                        y2: b
                    };
                    if (oa.height < 20 && oa.width < 20) {
                        var i = a - oa.x1
                          , j = b - oa.y1;
                        i > 0 ? i = 20 - i : 0 > i && (i = -20 - i),
                        j > 0 ? j = 20 - j : 0 > j && (j = -20 - j),
                        h.x2 = a + i,
                        h.y2 = b + j
                    }
                    oa.set(h)
                } else if ("pen" == g) {
                    var k = oa.get("points");
                    if (k.push({
                        x: a,
                        y: b
                    }),
                    ma)
                        oa.set({
                            points: k,
                            hasControls: !1
                        });
                    else {
                        drawingCanvas.remove(oa);
                        var l = I(k);
                        oa = new fabric.Polyline(k,{
                            stroke: pa,
                            strokeWidth: STROKE_WIDTH,
                            left: l.minX,
                            top: l.minY,
                            originX: "left",
                            originY: "top",
                            fill: "",
                            hasBorders: !1,
                            transparentCorners: !1,
                            hasRotatingPoint: !1,
                            cornerColor: CORNER_COLOR,
                            padding: CORNER_PADDING,
                            cornerStrokeColor: CORNER_STROKE_COLOR,
                            cornerSize: CORNER_SIZE,
                            _transformX: oa._transformX,
                            _transformY: oa._transformY
                        }),
                        drawingCanvas.add(oa),
                        drawingCanvas.setActiveObject(oa)
                    }
                }
                oa.setCoords(),
                drawingCanvas.renderAll(!0),
                drawingCanvasElm.width = drawingCanvasElm.width
            }
            function A(a) {
                return 1
            }
            function B() {
                var a = H(drawingCanvas.getObjects())
                  , b = A(a);
                _strokeWidth = STROKE_WIDTH,
                da.setDimensions({
                    width: Z.width * b,
                    height: Z.height * b
                }),
                da.clear();
                var c = new fabric.Image(Z);
                c.scale(b),
                da.setBackgroundImage(c);
                var d = drawingCanvas.getObjects()
                  , e = d.length;
                if (1 === e && "rect" === d[0].type)
                    return void da.renderAll(!0);
                b /= ha;
                var f, g, h = L(), i = (h.transformX,
                h.transformY,
                a.width / Z.width), j = a.height / Z.height, k = STROKE_WIDTH;
                g = i > j ? i : j,
                k *= g + 1,
                _strokeWidth = k;
                for (var l = 0, m = e; m > l; ++l)
                    if (f = d[l],
                    !f._instance || "line" === f.type) {
                        var n = f.type
                          , o = {
                            left: (f.left - f._transformX) * b,
                            top: (f.top - f._transformY) * b,
                            width: f.width * b,
                            height: f.height * b,
                            stroke: f.stroke,
                            strokeWidth: k
                        };
                        if ("rect" === n)
                            f = D(o, da);
                        else if ("line" === n)
                            o.points = [o.left + f.x1Diff * b, o.top + f.y1Diff * b, o.left + f.x2Diff * b, o.top + f.y2Diff * b],
                            o.arrowHeadLength = 15 * g,
                            o.arrowHeadLength < 15 && (o.arrowHeadLength = 15),
                            f = F(o, da);
                        else if ("polyline" === n) {
                            var p = o.left
                              , q = o.top
                              , r = o.width * f.scaleX / 2
                              , s = o.height * f.scaleY / 2
                              , t = f.points.map(function(a) {
                                return {
                                    x: a.x * b * f.scaleX + p + r,
                                    y: a.y * b * f.scaleY + q + s
                                }
                            });
                            o.pathArray = t,
                            f = E(o, da)
                        }
                    }
                da.renderAll(!0)
            }
            function C() {
                sa && (B(),
                setTimeout(function() {
                    var a, b, c, d, f, g, h = 1 / ha, i = A(), j = i / ha, k = 2, l = 10, m = (drawingCanvasElm.getContext("2d"),
                    document.getElementById("dummyCanvas")), n = m.getContext("2d"), o = [], p = drawingCanvas.getObjects().filter(function(a) {
                        if (a.selectable === !1)
                            if (a._instance) {
                                if ("line" !== a.type)
                                    return !1;
                                o.push(a),
                                a._instance.setVisible(!1)
                            } else
                                o.push(a),
                                a.setVisible(!1);
                        else if (a._instance && "line" !== a.type)
                            return !1;
                        return a.selectable
                    });
                    if (1 === p.length) {
                        var q = p[0];
                        f = q.left,
                        g = q.top,
                        a = (f - q._transformX) * j,
                        b = (g - q._transformY) * j,
                        c = q.width * q.scaleX * j,
                        d = q.height * q.scaleY * j,
                        "rect" === q.get("type") ? (a += STROKE_WIDTH / 2,
                        b += STROKE_WIDTH / 2,
                        m.width = c,
                        m.height = d) : ("line" === q.get("type") || "polyline" === q.get("type")) && ("line" === q.type && (b -= d / 2,
                        g -= q.height / 2,
                        a -= c / 2,
                        f -= q.width / 2),
                        a -= k,
                        b -= k,
                        c += l,
                        d += l,
                        c > ca.width && (c = ca.width),
                        d > ca.height && (d = ca.height),
                        m.width = c,
                        m.height = d),
                        1 > a && (a = 1),
                        1 > b && (b = 1),
                        c = Math.floor(c),
                        d = Math.floor(d),
                        n.drawImage(ca, a, b, c, d, 0, 0, m.width, m.height);
                        var r = {
                            left: a,
                            top: b,
                            width: c,
                            height: d
                        };
                        1 !== i && (h = 1 / i,
                        r.left = a * h,
                        r.top = b * h,
                        r.width = c * h,
                        r.height = d * h,
                        r.left < 1 && (r.left = 1),
                        r.top < 1 && (r.top = 1),
                        r.width > Z.width && (r.width = Z.width),
                        r.height > Z.height && (r.height = Z.height)),
                        K(m.toDataURL("image/png"), function(a, b, c) {
                            var d = {
                                snippetData: J(r, [q], b, c),
                                imageData: a
                            };
                            e.$emit("embedSnippetImage", d)
                        }),
                        n.clearRect(0, 0, q.getWidth(), q.getHeight())
                    } else if (p.length > 1) {
                        var s = H(p);
                        a = s.left * j,
                        b = s.top * j,
                        c = s.width * j + _strokeWidth,
                        d = s.height * j + _strokeWidth,
                        c + l >= ca.width && (c = ca.width,
                        l = 0),
                        d + l >= ca.height && (d = ca.height,
                        l = 0),
                        m.width = Math.ceil(c) + l + 1,
                        m.height = Math.ceil(d) + l + 1,
                        c = Math.floor(c) - 1 + l,
                        d = Math.floor(d) - 1 + l;
                        var t = a - k
                          , u = b - k;
                        t = Math.floor(t),
                        u = Math.floor(u),
                        0 > t ? t = 0 : t + c > ca.width && (t -= t + c - ca.width),
                        0 > u ? u = 0 : u + d > ca.height && (u -= u + d - ca.height),
                        n.drawImage(ca, t, u, c, d, 0, 0, m.width, m.height),
                        K(m.toDataURL("image/png"), function(a, b, f) {
                            1 !== i && (h = 1 / i,
                            t *= h,
                            u *= h,
                            c *= h,
                            d *= h,
                            1 > t && (t = 1),
                            1 > u && (u = 1),
                            c > Z.width && (c = Z.width),
                            d > Z.height && (d = Z.height));
                            var g = {
                                snippetData: J({
                                    left: t,
                                    top: u,
                                    width: c,
                                    height: d
                                }, p, b, f),
                                imageData: a
                            };
                            e.$emit("embedSnippetImage", g)
                        }),
                        n.clearRect(0, 0, s.width + l, s.height + l)
                    } else
                        e.$emit("Notes:ClearSnippet");
                    o.forEach(function(a) {
                        "line" === a.type ? a._instance.setVisible(!0) : a.setVisible(!0)
                    }),
                    drawingCanvas.renderAll()
                }, 100))
            }
            function D(a, c) {
                c = c || drawingCanvas;
                var d = {
                    fill: "",
                    transparentCorners: !1,
                    hasRotatingPoint: !1,
                    hasBorders: !1,
                    stroke: pa,
                    originX: "left",
                    originY: "top",
                    strokeWidth: STROKE_WIDTH,
                    cornerColor: CORNER_COLOR,
                    cornerSize: CORNER_SIZE,
                    cornerStrokeColor: CORNER_STROKE_COLOR,
                    padding: CORNER_PADDING,
                    selectable: !1
                };
                b.extend(d, a);
                var e = new fabric.Rect(d);
                return c.add(e),
                e
            }
            function E(a, d) {
                d = d || drawingCanvas;
                var e = a.pathArray
                  , f = {
                    originX: "left",
                    originY: "top",
                    fill: "",
                    hasBorders: !1,
                    transparentCorners: !1,
                    hasRotatingPoint: !1,
                    hoverCursor: "default",
                    selectable: !1,
                    stroke: pa,
                    strokeWidth: STROKE_WIDTH,
                    cornerColor: CORNER_COLOR,
                    cornerSize: CORNER_SIZE,
                    cornerStrokeColor: CORNER_STROKE_COLOR,
                    padding: CORNER_PADDING
                };
                a.pathArray = c;
                var g = I(e);
                a.left = g.minX,
                a.top = g.minY,
                b.extend(f, a);
                var h = new fabric.Polyline(e,f);
                return d.add(h),
                h
            }
            function F(a, d) {
                d = d || drawingCanvas;
                var e = {
                    fill: "",
                    hasRotatingPoint: !1,
                    hasControls: !1,
                    hasBorders: !1,
                    stroke: pa,
                    originX: "center",
                    originY: "center",
                    strokeWidth: STROKE_WIDTH,
                    cornerColor: CORNER_COLOR,
                    cornerSize: CORNER_SIZE,
                    cornerStrokeColor: CORNER_STROKE_COLOR,
                    padding: CORNER_PADDING,
                    selectable: !1,
                    transparentCorners: !1
                }
                  , f = a.points;
                return a.points = c,
                b.extend(e, a),
                j(d, f, e)
            }
            function G(a, b, c, d, e) {
                var f = []
                  , g = a.coordinates.length;
                b = b || 1,
                c = c || 1;
                for (var h = 0; g > h; h += 2)
                    f.push({
                        x: a.coordinates[h] * b + d,
                        y: a.coordinates[h + 1] * c + e
                    });
                return f
            }
            function H(a) {
                for (var b, c, d, e, f, g, h, i, j, k, l = a.length, m = 0; l > m; m++)
                    i = a[m].left,
                    h = a[m].top,
                    "line" === a[m].type && (h -= a[m].height / 2,
                    i -= a[m].width / 2),
                    k = i - a[m]._transformX,
                    j = h - a[m]._transformY,
                    0 === m ? (g = i,
                    f = h,
                    d = j,
                    e = k,
                    b = a[m].getWidth(),
                    c = a[m].getHeight()) : (e > k && (e = k,
                    g = i),
                    d > j && (d = j,
                    f = h));
                var n, o;
                for (m = 0; l > m; m++)
                    i = a[m].left - a[m]._transformX,
                    h = a[m].top - a[m]._transformY,
                    "line" === a[m].type && (i -= a[m].width / 2,
                    h -= a[m].height / 2),
                    n = h - d + a[m].getHeight(),
                    n > c && (c = n),
                    o = i - e + a[m].getWidth(),
                    o > b && (b = o);
                return {
                    drawingTop: f,
                    drawingLeft: g,
                    top: d,
                    left: e,
                    width: b,
                    height: c
                }
            }
            function I(a) {
                for (var b = a[0].x, c = a[0].y, d = a[0].x, e = a[0].y, f = 0; f < a.length; f++)
                    a[f].x > d && (d = a[f].x),
                    a[f].x < b && (b = a[f].x),
                    a[f].y > e && (e = a[f].y),
                    a[f].y < c && (c = a[f].y);
                return {
                    minX: b,
                    minY: c,
                    maxX: d,
                    maxY: e,
                    width: d - b,
                    height: e - c
                }
            }
            function J(a, b, c, d) {
                var f, g, h, i, j, k, l, m, n, o, p = [], q = 1 / ha, r = L(), s = {
                    x: a.left,
                    y: a.top,
                    width: a.width,
                    height: a.height
                };
                for (f = 0; f < b.length; f++)
                    if (n = {},
                    m = b[f],
                    m.selectable !== !1 && !m.dontShowInSnippetImage) {
                        o = m.get("type");
                        var t, u = [], v = null ;
                        if ("rect" == o)
                            t = 20,
                            l = [(b[f].getLeft() + 2.5 - r.transformX) * q, (b[f].getTop() + 2.5 - r.transformY) * q, b[f].getWidth() * q, b[f].getHeight() * q],
                            u = null ;
                        else if ("line" == o)
                            t = m._instance ? 2 : 3,
                            u = null ,
                            v = {
                                headX: 0,
                                headY: 0,
                                tailX: 0,
                                tailY: 0
                            },
                            h = (m.left - r.transformX) * q + m.x1Diff * q,
                            i = (m.top - r.transformY) * q + m.y1Diff * q,
                            j = (m.left - r.transformX) * q + m.x2Diff * q,
                            k = (m.top - r.transformY) * q + m.y2Diff * q,
                            l = [h, i, j, k],
                            j >= h ? (v.tailX = 1,
                            j -= h,
                            l[2] = j) : (v.headX = 1,
                            h -= j,
                            l[0] = j,
                            l[2] = h),
                            k >= i ? (v.tailY = 1,
                            k -= i,
                            l[3] = k) : (v.headY = 1,
                            i -= k,
                            l[1] = k,
                            l[3] = i);
                        else if ("polyline" == o) {
                            t = 0,
                            l = [];
                            for (var w = b[f].get("points"), x = w.length, y = b[f].get("left") - r.transformX, z = b[f].get("top") - r.transformY, A = b[f].getWidth() / 2, B = b[f].getHeight() / 2, C = b[f].scaleX, D = b[f].scaleY, g = 0; x > g; g++)
                                l.push((w[g].x * C + y + A) * q),
                                l.push((w[g].y * D + z + B) * q),
                                0 == g ? u.push(1) : u.push(2)
                        }
                        n.data = v,
                        n.version = 2,
                        n.type = t,
                        n.color = parseInt(b[f].stroke.substr(1), 16),
                        n.coordinates = l,
                        n.commands = u,
                        p.push(n)
                    }
                return {
                    type: "scrybe.components.snippet.MarkupBitmapSnippet",
                    data: {
                        fileId: e.currentlySelected.file_id,
                        width: c,
                        height: d,
                        scale: 1,
                        pageNo: 1,
                        pagename: e.currentlySelected.name,
                        isJPG: !0,
                        version: 2,
                        rect: {
                            width: e.currentlySelected.width,
                            height: e.currentlySelected.height,
                            x: 0,
                            y: 0
                        },
                        selectionRect: s,
                        _items: p
                    }
                }
            }
            function K(a, b) {
                var c = new Image
                  , d = 250
                  , e = 100;
                c.src = a,
                c.onload = function() {
                    var a = document.createElement("canvas")
                      , f = a.getContext("2d");
                    if (a.setAttribute("crossOrigin", "anonymous"),
                    c.width > d || c.height > e) {
                        var g = d / c.width
                          , h = e / c.height
                          , i = Math.min(g, h);
                        c.width = c.width * i,
                        c.height = c.height * i,
                        a.width = c.width,
                        a.height = c.height
                    } else
                        a.width = c.width,
                        a.height = c.height;
                    f.drawImage(c, 0, 0, c.width, c.height),
                    b(a.toDataURL("image/png", 1), c.width, c.height)
                }
            }
            function L() {
                var a = panzoomSelector[0]
                  , b = panzoomSelector.panzoom("getMatrix")
                  , c = parseFloat(b[0], 10)
                  , d = parseFloat(b[4], 10)
                  , e = parseFloat(b[5], 10)
                  , f = a.style[transformOriginProperty].split(" ")
                  , g = f[0]
                  , h = f[1]
                  , i = Z.width * c
                  , j = Z.height * c;
                return "50%" === g && (d += Z.width / 2 - i / 2),
                "50%" === h && (e += Z.height / 2 - j / 2),
                {
                    transformX: d,
                    transformY: e,
                    scaledImgWidth: i,
                    scaledImgHeight: j
                }
            }
            function M() {
                function a(a, c, d, f) {
                    e = !0;
                    var g = requestAnimationFrame(function h(d) {
                        if (panzoomSelector.panzoom("isPanning"))
                            return void (e = !1);
                        if (g = requestAnimationFrame(h),
                        !c && ha >= f)
                            panzoomSelector.panzoom("zoom", f, {
                                focal: a
                            }),
                            e = !1,
                            cancelAnimationFrame(g);
                        else if (c && f >= ha)
                            panzoomSelector.panzoom("zoom", f, {
                                focal: a
                            }),
                            e = !1,
                            cancelAnimationFrame(g);
                        else {
                            var i;
                            i = ha > 3 ? ZOOM_INCREMENT_SCALE[4] : ha > 2 ? ZOOM_INCREMENT_SCALE[3] : ha > 1 ? ZOOM_INCREMENT_SCALE[2] : ha > .5 ? ZOOM_INCREMENT_SCALE[1] : ZOOM_INCREMENT_SCALE[0],
                            !c && ha + i >= f || c && f >= ha - i ? panzoomSelector.panzoom("zoom", f, {
                                focal: a
                            }) : b(a, c, i)
                        }
                    })
                }
                function b(a, b, c) {
                    panzoomSelector.panzoom("zoom", b, {
                        focal: a,
                        increment: c
                    })
                }
                panzoomSelector.panzoom();
                panzoomSelector.panzoom("option", {
                    disablePan: !1,
                    rangeStep: ZOOM_INCREMENT_SCALE[0],
                    increment: ZOOM_INCREMENT_SCALE[0],
                    cursor: "default",
                    animate: !1,
                    minScale: ZOOM_SCALE[0],
                    maxScale: 2,
                    contain: "invert"
                });
                panzoomSelector.on("panzoomzoom", function(a, b, c, e) {
                    ia = ha,
                    ha = c,
                    $(zoomPercentInput).val((100 * ha).toFixed(0)),
                    t(),
                    d.$emit("SnippetArrow:repositionAll"),
                    imageMapInitialized && T(c),
                    x()
                }),
                panzoomSelector.on("panzoompan", function(a, b, c, e) {
                    t("pan"),
                    d.$emit("SnippetArrow:repositionAll"),
                    imageMapInitialized && T(ha),
                    x()
                }),
                setTimeout(function() {
                    panzoomSelector.parent().on("mousewheel.focal", function(d) {
                        d.preventDefault();
                        var f, g, h = d.delta || d.originalEvent.wheelDelta, i = h ? 0 > h : d.originalEvent.deltaY > 0;
                        if (IMG_ZOOM_SCALE) {
                            if (e)
                                return void console.log("zoom blocking.");
                            i ? (g = k.closestInArray(ha, IMG_ZOOM_SCALE),
                            g >= ha && (g = IMG_ZOOM_SCALE[IMG_ZOOM_SCALE.indexOf(g) - 1] || IMG_ZOOM_SCALE[0]),
                            f = ha - g) : (g = k.closestInArray(ha, IMG_ZOOM_SCALE),
                            ha >= g && (g = IMG_ZOOM_SCALE[IMG_ZOOM_SCALE.indexOf(g) + 1] || IMG_ZOOM_SCALE[IMG_ZOOM_SCALE.length - 1]),
                            f = g - ha),
                            0 !== f && g !== c && a(d, i, f, g)
                        } else
                            e = !1,
                            b(d, i, ZOOM_SCALE[0])
                    })
                }, 1e3);
                var e = !1
            }
            function N(a, b) {
                b === c && (b = !1),
                panzoomSelector.panzoom("zoom", a, {
                    animate: b
                })
            }
            function O() {
                panzoomSelector.panzoom("reset"),
                panzoomSelector.panzoom("zoom", 1),
                panzoomSelector[0].offsetWidth > Y[0].offsetWidth && panzoomSelector.panzoom("setMatrix", [1, 0, 0, 1, -1 * ((panzoomSelector[0].offsetWidth - Y[0].offsetWidth) / 2), 0]),
                ia = ha,
                ha = 1
            }
            function P() {
                ({
                    width: Y.width(),
                    height: Y.height()
                });
                q(!1),
                Z.onload = function() {
                    Z.dataset.isThumbLoaded = "true";
                    S();
                    panzoomSelector[0].style.width = Z.width + "px",
                    panzoomSelector[0].style.height = Z.height + "px",
                    IMG_ZOOM_SCALE = ZOOM_SCALE.slice(0, ZOOM_SCALE.indexOf(2) + 1),
                    k.closestInArray(Math.max(Z.width, Z.height) * IMG_ZOOM_SCALE[0], IMG_ZOOM_SCALE),
                    panzoomSelector.panzoom("option", "minScale", ZOOM_SCALE[0]),
                    panzoomSelector.panzoom("option", "maxScale", 2),
                    galleryZoomRange.setAttribute("min", ZOOM_SCALE[0]),
                    galleryZoomRange.setAttribute("max", 2),
                    panzoomSelector.panzoom("resetDimensions"),
                    panzoomSelector.panzoom("reset");
                    var a = Math.min(Y.width() / Z.width, Y.height() / Z.height);
                    a > 1 && (a = .99),
                    N(a),
                    setTimeout(function() {
                        Z.style.opacity = 1
                    }, 0)
                }
                ,
                Z.style.opacity = 0,
                Z.dataset.isThumb = "true",
                delete Z.dataset.isThumbLoaded,
                Z.src = g("getNoteThumbnailPath")(e.currentlySelected, e.currentlySelected.item_id, 0, e.currentlySelected.app_instance_id)
            }
            function Q() {
                function b() {
                    W && a.URL.revokeObjectURL(Z.src);
                    var b = Z.width
                      , c = Z.height;
                    o(!1),
                    f[0].querySelector(".cnv-spinner").classList.add("ng-hide"),
                    Z.onload = null ,
                    q("panzoom" === e.toolSelected ? !1 : !0);
                    var d = Y.width()
                      , g = Y.height()
                      , h = d / b
                      , i = g / c
                      , n = Math.min(h, i)
                      , p = MAX_CANVAS_SIZE / Math.max(b, c);
                    if (p > 5)
                        p = 5,
                        IMG_ZOOM_SCALE = ZOOM_SCALE.slice(0);
                    else {
                        var r = ZOOM_SCALE.indexOf(k.closestInArray(p, ZOOM_SCALE));
                        p > r ? (IMG_ZOOM_SCALE = ZOOM_SCALE.slice(0, r),
                        IMG_ZOOM_SCALE.push(p)) : r > p ? (IMG_ZOOM_SCALE = ZOOM_SCALE.slice(0, r - 1),
                        IMG_ZOOM_SCALE.push(p)) : IMG_ZOOM_SCALE = ZOOM_SCALE.slice(0, r)
                    }
                    panzoomSelector[0].style.width = b + "px",
                    panzoomSelector[0].style.height = c + "px",
                    drawingCanvas.setDimensions({
                        width: d,
                        height: g
                    }),
                    n >= 1 && (n = 1),
                    m.isAppInCompactView() && IMG_ZOOM_SCALE[0] * Math.max(b, c) > l.COMPACT_VIEW_UNSCALED_WIDTH && IMG_ZOOM_SCALE.unshift(n),
                    panzoomSelector.panzoom("option", "minScale", IMG_ZOOM_SCALE[0]),
                    panzoomSelector.panzoom("option", "maxScale", IMG_ZOOM_SCALE[IMG_ZOOM_SCALE.length - 1]),
                    galleryZoomRange.setAttribute("min", IMG_ZOOM_SCALE[0]),
                    galleryZoomRange.setAttribute("max", IMG_ZOOM_SCALE[IMG_ZOOM_SCALE.length - 1]),
                    setTimeout(function() {
                        panzoomSelector.panzoom("resetDimensions"),
                        panzoomSelector.panzoom("reset"),
                        ga = n,
                        ia = ha,
                        ha = n,
                        N(n),
                        V(zoomPercentInput).value = (100 * ga).toFixed(0),
                        t(),
                        j.resolve(),
                        ea = !0,
                        setTimeout(function() {
                            aa.style.display = "none",
                            Z.style.opacity = 1
                        }, 100)
                    }, 0),
                    Z.dataset.isThumb = ""
                }
                ea = !1;
                var c, d;
                "gif" === e.currentlySelected.type ? !e.galleryCtrl.commentId && "panzoom" === e.toolSelected || e.galleryCtrl.isCommentAttachment ? (d = e.currentlySelected.original_name,
                c = g("getOriginalImagePath")(e.currentlySelected.preview_name, e.currentlySelected.item_id, e.currentlySelected.app_instance_id),
                W ? za(c) : ya(c)) : (d = e.currentlySelected.preview_name,
                c = g("getOriginalImagePath")(e.currentlySelected.original_name, e.currentlySelected.item_id, e.currentlySelected.app_instance_id),
                W ? za(c) : ya(c)) : d = e.currentlySelected.preview_name,
                c = g("getOriginalImagePath")(d, e.currentlySelected.item_id, e.currentlySelected.app_instance_id),
                setTimeout(function() {
                    ba.src = c
                }, 500);
                var i = e.currentlySelected.file_id;
                W ? za(c).then(function(c) {
                    return i !== e.currentlySelected.file_id ? void j.reject("User have navigated to some other file") : (Z.style.opacity = 0,
                    Z.onload = b,
                    void (Z.src = a.URL.createObjectURL(c)))
                }) : ya(c).then(function() {
                    return i !== e.currentlySelected.file_id ? void j.reject("User have navigated to some other file") : (Z.style.opacity = 0,
                    Z.onload = b,
                    Z.dataset.isThumbLoaded ? (aa.style.display = "block",
                    aa.style.position = "absolute",
                    aa.style.top = 0,
                    aa.style.left = 0,
                    aa.style[transformProperty] = panzoomSelector[0].style[transformProperty],
                    aa.style[transformOriginProperty] = panzoomSelector[0].style[transformOriginProperty],
                    aa.src = Z.src) : aa.style.display = "none",
                    void (Z.src = c))
                });
                var j = h.defer();
                return j.promise
            }
            function R() {
                drawingCanvas.clear()
            }
            function S() {
                var b = a.innerWidth || document.documentElement.clientWidth || document.body.clientWidth
                  , c = a.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;
                return {
                    width: b,
                    height: c
                }
            }
            function T(a) {
                var b = Y.width()
                  , c = Y.height()
                  , d = img.width * a
                  , e = d / b
                  , f = img.height * a
                  , g = f / c
                  , h = d / ua
                  , i = f / va;
                if (d > b || f > c) {
                    Ca || (ta.fadeIn(400),
                    Ca = !0),
                    e > 1 ? (wa.width((ua - 3) * (1 / e)),
                    wa.css("left", -1 * (xa.offset().left / h))) : (wa.width(ua - 4),
                    wa.css("left", 0));
                    var j = 56;
                    g > 1 ? (wa.height((va - 4) * (1 / g)),
                    wa.css("top", -1 * ((xa.offset().top - j) / i))) : (wa.height(va - 4),
                    wa.css("top", 0))
                } else
                    Ca && (ta.fadeOut(400),
                    Ca = !1)
            }
            e.showSpinner = !1;
            var U = 0
              , V = document.querySelector.bind(document)
              , W = k.isIE()
              , X = k.isIE(10)
              , Y = f
              , Z = V("#main-image")
              , aa = V("#thumb-image")
              , ba = V("#old-image")
              , ca = V("#img-shape-canvas")
              , da = new fabric.StaticCanvas(ca);
            drawingCanvasElm = V("#img-drawing-canvas"),
            drawingCanvas = new fabric.Canvas(drawingCanvasElm,{
                uniScaleTransform: !0
            }),
            panzoomSelector = f.find(".panzoom"),
            zoomRangeSlider = "#galleryZoomRange",
            zoomPercentInput = "#galleryZoomPercent",
            imageMapInitialized = !1,
            transformProperty = panzoomSelector[0].style.transform !== c ? "transform" : "webkitTransform",
            transformOriginProperty = panzoomSelector[0].style.transformOrigin !== c ? "transformOrigin" : "webkitTransformOrigin",
            _strokeWidth = 5,
            STROKE_WIDTH = 5,
            CORNER_COLOR = "black",
            CORNER_STROKE_COLOR = "#ffffff",
            CORNER_SIZE = 6,
            CORNER_PADDING = -3,
            MAX_CANVAS_SIZE = 8192,
            IMG_ZOOM_SCALE = [],
            ZOOM_SCALE = [.15, .2, .3, .5, .7, 1, 1.5, 2, 3, 5],
            ZOOM_INCREMENT_SCALE = [.01, .02, .03, .05, .075];
            var ea, fa = 8e3, ga = 1, ha = 1, ia = 1, ja = "pointer", ka = {}, la = {}, ma = !1, na = !1, oa = null , pa = "#d10000", qa = 0, ra = {}, sa = !1;
            e.toolSelected = "panzoom",
            drawingCanvas.selection = !1,
            drawingCanvas.defaultCursor = ja;
            var ta = $(".imageMapTest")
              , ua = null 
              , va = null 
              , wa = null 
              , xa = $(".canvas-container");
            xa[0].style.position = "absolute",
            e.cnvImageViewerCtrl.init = function() {
                w(),
                M(),
                e.cnvImageViewerCtrl.initialized || (e.cnvImageViewerCtrl.trigger("initialized"),
                e.cnvImageViewerCtrl.initialized = !0)
            }
            ,
            e.cnvImageViewerCtrl.undoSnippetDrawing = function() {
                e.$emit("cnvGallery:dismissCommentBtn"),
                i.undoSnippetDrawing()
            }
            ,
            e.cnvImageViewerCtrl.redoSnippetDrawing = function() {
                e.$emit("cnvGallery:dismissCommentBtn"),
                i.redoSnippetDrawing()
            }
            ,
            e.cnvImageViewerCtrl.nudgeActiveObject = function(a) {
                var b = drawingCanvas.getActiveObject();
                return b ? (39 === a ? b.left += 1 : 37 === a ? b.left -= 1 : 38 === a ? b.top -= 1 : 40 === a && (b.top += 1),
                drawingCanvas.renderAll(),
                x(),
                !0) : !1
            }
            ;
            var ya = function(a, b) {
                return h(function c(d) {
                    b = b || document.createElement("img"),
                    b.onload = d,
                    b.onerror = function() {
                        b.onload = null ,
                        b.src = "",
                        setTimeout(function() {
                            c(d)
                        }, 1e3)
                    }
                    ,
                    b.src = a
                })
            }
              , za = e.cnvImageViewerCtrl.loadImgUsingXhr = function(a) {
                return h(function b(c) {
                    function d() {
                        setTimeout(function() {
                            b(c)
                        }, 1e3)
                    }
                    var e = new XMLHttpRequest;
                    e.open("GET", a, !0),
                    e.withCredentials = !0,
                    e.responseType = "blob",
                    e.onload = function(a) {
                        var b = this;
                        200 === b.status ? c(b.response) : d()
                    }
                    ,
                    e.onerror = d,
                    e.send()
                })
            }
            ;
            e.cnvImageViewerCtrl.loadImage = function(a) {
                R(),
                i.setCanvas(drawingCanvas),
                sa = !1,
                !Z.src || Z.dataset.isThumb || a || (ba.style.display = "block",
                ba.style.position = "absolute",
                ba.style.top = 0,
                ba.style.left = 0,
                ba.style.zIndex = 1e3,
                ba.style[transformProperty] = panzoomSelector[0].style[transformProperty],
                ba.style[transformOriginProperty] = panzoomSelector[0].style[transformOriginProperty]),
                Z.onload = null ,
                Z.src = "",
                o(!0),
                P();
                var b = Q();
                return a || setTimeout(function() {
                    function a() {
                        var b = this;
                        b.style.display = "none",
                        b.classList.remove("fade-out"),
                        ba.removeEventListener("webkitAnimationEnd", a, !1),
                        ba.removeEventListener("MSAnimationEnd", a, !1),
                        ba.removeEventListener("animationend", a, !1)
                    }
                    ba.classList.add("fade-out"),
                    ba.addEventListener("webkitAnimationEnd", a, !1),
                    ba.addEventListener("MSAnimationEnd", a, !1),
                    ba.addEventListener("animationend", a, !1)
                }, 0),
                b.then(B)
            }
            ,
            e.cnvImageViewerCtrl.toolSelected = function(a) {
                if (e.toolSelected = a,
                drawingCanvas.isDrawingMode = !1,
                "panzoom" !== a)
                    na = !1,
                    "gif" === e.currentlySelected.type && za(g("getOriginalImagePath")(e.currentlySelected.preview_name, e.currentlySelected.item_id, e.currentlySelected.app_instance_id)).then(r),
                    drawingCanvas.selection = !0,
                    "arrow" === a ? drawingCanvas.defaultCursor = (k.isIE() || l.IS_NATIVE ? "url(assets/img/cursors/2xarrowwhite.cur)" : "url(assets/img/cursors/2xarrowwhite.png) 7 7") + ", crosshair" : "rectangle" === a ? drawingCanvas.defaultCursor = (k.isIE() || l.IS_NATIVE ? "url(assets/img/cursors/2xsquarewhite.cur)" : "url(assets/img/cursors/2xsquarewhite.png) 8 8") + ", crosshair" : "pen" === a ? drawingCanvas.defaultCursor = (k.isIE() || l.IS_NATIVE ? "url(assets/img/cursors/2xmarkerwhite.cur)" : "url(assets/img/cursors/2xmarkerwhite.png) 6 6") + ", crosshair" : drawingCanvas.defaultCursor = "crosshair",
                    q(!0);
                else {
                    q(!1),
                    drawingCanvas.defaultCursor = "pointer",
                    drawingCanvas.selection = !1;
                    var b = drawingCanvas.getObjects().length;
                    "gif" !== e.currentlySelected.type || b || za(g("getOriginalImagePath")(e.currentlySelected.original_name, e.currentlySelected.item_id, e.currentlySelected.app_instance_id)).then(r)
                }
            }
            ,
            e.cnvImageViewerCtrl.setSnippetColor = function(a) {
                pa = a
            }
            ,
            e.cnvImageViewerCtrl.commentBtnClicked = function() {
                sa = !0,
                C();
                var a = drawingCanvas.getActiveObject();
                a && ("line" === a.type && a._instance.deselect(),
                drawingCanvas.discardActiveObject()),
                e.$emit("cnvGallery:dismissCommentBtn")
            }
            ,
            e.cnvImageViewerCtrl.setZoomRangeCtrl = function(a) {
                panzoomSelector.panzoom("option", {
                    $zoomRange: $(a)
                });
                var b, c = V(zoomPercentInput);
                c.value = 100,
                c.onchange || (b = V(zoomRangeSlider),
                b.addEventListener("change", function() {
                    f.is(":hidden") || (c.value = (100 * ha).toFixed(0))
                }, !1),
                c.onchange = function() {
                    if (!f.is(":hidden")) {
                        var a = parseInt(c.value, 10);
                        a /= 100,
                        panzoomSelector.panzoom("zoom", a, {
                            animate: !0
                        })
                    }
                }
                ,
                V(".zoom-opts .btn.fit-screen").addEventListener("click", function() {
                    f.is(":hidden") || (N(ga, !0),
                    zoomVal = 100 * ga,
                    c.value = zoomVal.toFixed(0))
                }),
                V(".zoom-opts .original").addEventListener("click", function() {
                    f.is(":hidden") || (O(),
                    c.value = "100",
                    t())
                }))
            }
            ,
            e.cnvImageViewerCtrl.fullscreen = function() {
                setTimeout(function() {
                    if (Y && Z) {
                        var a = Y.width() / Z.width
                          , b = Y.height() / Z.height;
                        N(Math.min(a, b))
                    }
                }, 50)
            }
            ,
            e.cnvImageViewerCtrl.drawSnippetOnCanvas = function(a, b) {
                if (Object.keys(ra).length > 1 && Aa(),
                ra[b])
                    return ra[b].position = qa++,
                    clearTimeout(ra[b].timerId),
                    void (ra[b].timerId = setTimeout(function() {
                        Ba(b)
                    }, fa));
                "gif" === e.currentlySelected.type && (Z.src = g("getOriginalImagePath")(e.currentlySelected.preview_name, e.currentlySelected.item_id, e.currentlySelected.app_instance_id));
                for (var c, d, f, h, i, j, k, l, m = [], n = ha, o = L(), r = 0; r < a._items.length; r++) {
                    if (c = a._items[r],
                    d = c.color.toString(16),
                    h = d[0],
                    f = d.length,
                    3 === f && d[1] === h && d[2] === h)
                        d += h + h + h;
                    else
                        for (; f++ < 6; )
                            d = "0" + d;
                    d = "#" + d;
                    var s = null ;
                    20 == c.type ? (s = D({
                        left: c.coordinates[0] * n + o.transformX - STROKE_WIDTH / 2,
                        top: c.coordinates[1] * n + o.transformY - STROKE_WIDTH / 2,
                        width: c.coordinates[2] * n,
                        height: c.coordinates[3] * n,
                        stroke: d,
                        _transformX: o.transformX,
                        _transformY: o.transformY
                    }),
                    s.commentId = b,
                    m.push(s)) : 0 == c.type ? (s = E({
                        pathArray: G(c, n, n, o.transformX, o.transformY),
                        left: a.selectionRect.x + 10 + o.transformX,
                        top: a.selectionRect.y + 10 + o.transformY,
                        stroke: d,
                        _transformX: o.transformX,
                        _transformY: o.transformY
                    }),
                    s.commentId = b,
                    m.push(s)) : (2 === c.type || 3 === c.type) && (c.data.headX ? (k = c.coordinates[0],
                    i = k + c.coordinates[2]) : (i = c.coordinates[0],
                    k = i + c.coordinates[2]),
                    c.data.headY ? (l = c.coordinates[1],
                    j = l + c.coordinates[3]) : (j = c.coordinates[1],
                    l = j + c.coordinates[3]),
                    s = F({
                        points: [i * n + o.transformX, j * n + o.transformY, k * n + o.transformX, l * n + o.transformY],
                        stroke: d,
                        _transformX: o.transformX,
                        _transformY: o.transformY
                    }),
                    s.commentId = b,
                    m.push(s))
                }
                if (X) {
                    var t = p();
                    q(!0)
                }
                drawingCanvas.renderAll(!0),
                ra[b] = {
                    position: qa++,
                    commentId: b,
                    objects: m
                },
                ra[b].timerId = setTimeout(function() {
                    Ba(b),
                    X && !t && q(!1)
                }, fa)
            }
            ,
            e.cnvImageViewerCtrl.zoom = function(a) {
                var b = ha;
                a && 2.2 >= b ? b += .4 : !a && b >= -.1 && (b -= .4),
                panzoomSelector.panzoom("zoom", b)
            }
            ,
            e.cnvImageViewerCtrl.getScaleValue = function() {
                return ha
            }
            ,
            e.cnvImageViewerCtrl.getContainerOffset = function() {
                return panzoomSelector.offset()
            }
            ,
            e.cnvImageViewerCtrl.checkIfSnippetInView = function(a) {
                var b = panzoomSelector.offset()
                  , c = S()
                  , d = b.left + (a.selectionRect.x + a.selectionRect.width) * ha
                  , e = b.top + (a.selectionRect.y + a.selectionRect.height / 2) * ha;
                return 50 > e || 0 > d || e > c.height - 80 || d > c.width - 450 ? !1 : !0
            }
            ,
            e.cnvImageViewerCtrl.bringSnippetInView = function(a) {
                console.log("bringSnippetInView");
                var b = panzoomSelector.offset()
                  , c = Y.width()
                  , e = Y.height()
                  , f = b.left + (a.selectionRect.x + a.selectionRect.width / 2) * ha
                  , g = b.top + (a.selectionRect.y + a.selectionRect.height / 2) * ha;
                f = f > 0 && f > c ? c - f - c / 2 : f > 0 && c > f ? 0 : -1 * (f - c / 2),
                g = g > 50 && g > e ? e - g - e / 2 : g > 50 && e > g ? 0 : Math.abs(g) + e / 2,
                panzoomSelector.panzoom("pan", f, g, {
                    animate: !0,
                    relative: !0
                });
                var h = 0;
                setTimeout(function i() {
                    d.$emit("SnippetArrow:repositionAll"),
                    h++ < 5 && setTimeout(i, 100)
                }, 100)
            }
            ,
            e.cnvImageViewerCtrl.snippetImagePosted = function() {
                e.$emit("cnvGallery:dismissCommentBtn"),
                sa = !1,
                drawingCanvas.forEachObject(function(a) {
                    a && a.selectable && ("line" === a.type ? a._instance.remove() : a.remove())
                })
            }
            ,
            e.cnvImageViewerCtrl.removeActiveObject = function() {
                var a = drawingCanvas.getActiveObject();
                a && (a._instance ? a._instance.remove() : drawingCanvas.remove(a),
                drawingCanvas.renderAll(!0),
                C())
            }
            ,
            e.cnvImageViewerCtrl.removeAllSnippets = function() {
                drawingCanvas.clear()
            }
            ,
            e.cnvImageViewerCtrl.removeTmpShapes = function() {
                drawingCanvas.getObjects().splice(0).forEach(function(a) {
                    a.selectable && a.remove()
                }),
                drawingCanvas.discardActiveObject()
            }
            ,
            e.cnvImageViewerCtrl.closeFile = function() {
                d.$emit("SnippetArrow:destroyAll"),
                Z && (Z.src = "",
                Z.style.opacity = 0),
                drawingCanvas && (R(),
                drawingCanvas.renderAll(!0))
            }
            ;
            var Aa = e.cnvImageViewerCtrl.removeFirstSnippet = function() {
                var a = Object.keys(ra)
                  , b = a[0]
                  , c = qa;
                a.forEach(function(a) {
                    ra[a].position < c && (b = a,
                    c = ra[a].position)
                }),
                Ba(b)
            }
              , Ba = e.cnvImageViewerCtrl.removeSnippetsForComment = function(a) {
                ra[a] && (d.$emit("SnippetArrow:destroy", a),
                clearTimeout(ra[a].timerId),
                ra[a].objects.forEach(function(a) {
                    a.remove()
                }),
                delete ra[a],
                drawingCanvas && (drawingCanvas.setDimensions({
                    width: drawingCanvas.width,
                    height: drawingCanvas.height
                }),
                "gif" !== e.currentlySelected.type || drawingCanvas.getObjects().length || (Z.src = g("getOriginalImagePath")(e.currentlySelected.original_name, e.currentlySelected.item_id, e.currentlySelected.app_instance_id))))
            }
              , Ca = !1;
            if (W) {
                var Da = V("#image-context-menu");
                Da.addEventListener("click", function(a) {
                    var b = a.target;
                    b.classList.contains("save-as") ? e.downloadCurrentFile() : b.classList.contains("copy-link") && (Ea(),
                    e.promptCopyLink(),
                    a.stopPropagation())
                }, !1)
            }
            if (xa[0].addEventListener("contextmenu", function(a) {
                return a.preventDefault(),
                a.stopPropagation(),
                !1
            }),
            W) {
                Z.addEventListener("contextmenu", function(a) {
                    a.preventDefault(),
                    a.stopPropagation(),
                    Da.style.display = "block",
                    Da.style.top = a.clientY + "px",
                    Da.style.left = a.clientX + "px"
                }, !1);
                var Ea = function(a) {
                    Da.style.display = "none"
                }
                ;
                a.addEventListener("click", Ea, !1)
            }
            var Fa = e.cnvImageViewerCtrl.toggleCommentsPanel = _.debounce(function() {
                panzoomSelector && (panzoomSelector.panzoom("resetDimensions"),
                setTimeout(function() {
                    panzoomSelector.panzoom("zoom", !0, {
                        increment: 1e-4
                    }),
                    drawingCanvas.setDimensions({
                        width: Y.width(),
                        height: Y.height()
                    })
                }, 0))
            }, 1e3);
            a.addEventListener("resize", Fa, !1),
            e.$on("$destroy", function() {
                a.removeEventListener("resize", Fa, !1),
                a.removeEventListener("click", Ea, !1),
                drawingCanvas.dispose(),
                panzoomSelector.panzoom("destroy"),
                panzoomSelector = null ,
                drawingCanvas = null ,
                drawingCanvasElm = null ,
                Y = null ,
                Z = null ,
                ba = null 
            }),
            e.cnvImageViewerCtrl.init()
        }
        return {
            restrict: "E",
            replace: !0,
            templateUrl: "notes/gallery/components/cnvImageViewer/cnvImageViewer.tpl.html",
            link: function(a, b, c) {
                a.galleryLibsPromise.then(function() {
                    n(a, b, c)
                })
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvToolSelected", function() {
        return {
            restrict: "E",
            replace: !0,
            scope: !0,
            templateUrl: "notes/gallery/components/cnvToolSelected/cnvToolSelected.tpl.html"
        }
    }),
    b.module("convoApp").directive("cnvVideoViewer", ["$filter", "videoPlayerSettings", "$timeout", function(a, b, c) {
        function d(a, b) {
            a.currentVideoFile = {},
            a.playerOptions = {},
            a.loadPlayer = !1,
            a.cnvVideoViewerCtrl.loadVideo = function() {
                a.currentVideoFile.id = a.currentlySelected.file_id,
                a.currentVideoFile.available_previews = a.currentlySelected.available_previews,
                a.currentVideoFile.original_name = a.currentlySelected.original_name,
                a.currentVideoFile.noteId = a.currentlySelected.item_id,
                a.currentVideoFile.name = a.currentlySelected.name,
                a.currentVideoFile.appInstanceId = a.currentlySelected.app_instance_id,
                a.currentVideoFile.width = a.currentlySelected.width,
                a.currentVideoFile.height = a.currentlySelected.height,
                a.currentVideoFile.size = a.currentlySelected.size,
                a.currentVideoFile.file_format = a.currentlySelected.file_format,
                a.playerOptions.onExpand = "FullScreenVideo",
                a.playerOptions.showControlsMenu = !1,
                a.playerOptions.showHeader = !1,
                a.tab.resourceLink.data && 21 == a.tab.resourceLink.data.resource_type ? a.playerOptions.source = "Chat" : a.tab.resourceLink && a.tab.resourceLink.commentFileId ? a.playerOptions.source = "Comment" : a.playerOptions.source = "Detail View",
                a.$apply(function() {
                    a.loadPlayer = !0
                }),
                setTimeout(function() {
                    a.$broadcast("VideoPlayback:playVideo", {
                        id: a.currentVideoFile.id
                    })
                }, 0)
            }
            ,
            a.cnvVideoViewerCtrl.closeFile = function() {
                a.loadPlayer = !1
            }
        }
        return {
            restrict: "E",
            replace: !0,
            scope: !0,
            templateUrl: "notes/gallery/components/cnvVideoViewer/cnvVideoViewer.tpl.html",
            link: function(a, b) {
                d(a, b),
                a.cnvVideoViewerCtrl.initialized = !0,
                a.cnvVideoViewerCtrl.trigger("initialized")
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvDummyContainer", ["$timeout", "appStateInfo", function(a, b) {
        document.querySelector.bind(document);
        return {
            restrict: "A",
            require: ["^cnvTiles", "cnvDummyContainer"],
            controller: ["$scope", "$element", function(a, c) {
                function d(a) {
                    var b = document.documentElement
                      , c = b.clientWidth - a.left - a.width
                      , d = b.clientHeight - a.top - a.height;
                    f.style.top = a.top + "px",
                    f.style.right = c + "px",
                    f.style.bottom = d + 1 + "px",
                    f.style.left = a.left + "px"
                }
                function e() {
                    f.style.top = "56px",
                    f.style.left = "0",
                    f.style.right = b.isAppInCompactView() ? "0" : "384px",
                    f.style.bottom = "72px"
                }
                var f = c[0];
                this.show = function(b) {
                    return f.style.display = "none",
                    d(b),
                    f.style.display = "",
                    setTimeout(function() {
                        e()
                    }, 300),
                    new Promise(function(b) {
                        a._resolveAniPromise = b
                    }
                    )
                }
                ,
                this.hide = function(b) {
                    return f.style.display = "none",
                    e(),
                    setTimeout(function() {
                        f.style.display = "",
                        d(b)
                    }, 300),
                    new Promise(function(b) {
                        a._resolveAniPromise = b
                    }
                    )
                }
            }
            ],
            link: function(a, b, c, d) {
                var e = b[0];
                e.addEventListener("transitionend", function(b) {
                    e.style.display = "none";
                    var c = a._resolveAniPromise;
                    c && (c(),
                    a._resolveAniPromise = null )
                }),
                d[0].setDummyContainer(d[1])
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvTiles", ["$timeout", function(b) {
        return {
            restrict: "A",
            scope: {
                isOpen: "=",
                currentFile: "=",
                isBtnHover: "=",
                btnClicked: "=",
                isTilesHover: "=",
                animate: "=",
                aniEndPromise: "="
            },
            controller: ["$scope", function(a) {
                this.setDummyContainer = function(b) {
                    a.dummyContainerCtrl = b
                }
            }
            ],
            link: function(c, d, e) {
                function f(a, b) {
                    var c, d, e = q.querySelector("#file-" + a);
                    if (e) {
                        if (c = e.offsetLeft + e.offsetWidth / 2 - q.offsetWidth / 2,
                        !b)
                            return new Promise(function(a) {
                                d = q.scrollLeft - e.offsetLeft,
                                0 > d && (d = -1 * d),
                                d = Math.ceil(.5 * d),
                                d > 3500 && (d = 3500),
                                r.stop().animate({
                                    scrollLeft: c
                                }, d, "easeOutCirc", a)
                            }
                            );
                        q.scrollLeft = c
                    }
                }
                function g(a) {
                    var c = a.target;
                    if (!o.animate) {
                        for (; c && c !== document && !c.classList.contains("tilesContainer") && !c.classList.contains("show-tiles"); )
                            c = c.parentNode;
                        c === document && b(function() {
                            o.btnClicked = !1,
                            o.isOpen = !1
                        }, 0)
                    }
                }
                function h() {
                    o.isTilesHover = !0
                }
                function i(a) {
                    if (!o.animate) {
                        for (var c = a.relatedTarget; c && c !== p && c !== document; )
                            c = c.parentNode;
                        if (null  === c || c === p)
                            return;
                        o.isTilesHover = !1,
                        b(function() {
                            o.animate || o.isTilesHover || o.isBtnHover || (o.isOpen = !1)
                        }, 1e3)
                    }
                }
                function j(a) {
                    return a.style.opacity === u
                }
                function k() {
                    if (!j(s)) {
                        var a, b, c = q.offsetWidth + q.scrollLeft;
                        for (a = b = q.querySelector("li:first-child"); b && c > b.offsetLeft + b.offsetWidth; )
                            for (a = b,
                            b = b.nextSibling; b && "LI" !== b.nodeName; )
                                b = b.nextSibling;
                        var d = a.offsetLeft;
                        r.animate({
                            scrollLeft: d
                        }, 250, "easeOutCirc", function() {
                            w(d),
                            x(d)
                        })
                    }
                }
                function l() {
                    if (!j(t)) {
                        var a, b, c = q.scrollLeft;
                        for (a = b = q.querySelector("li:last-child"); b && c < b.offsetLeft; )
                            for (a = b,
                            b = b.previousSibling; b && "LI" !== b.nodeName; )
                                b = b.previousSibling;
                        var d = a.offsetLeft - q.offsetWidth + a.offsetWidth;
                        $(q).animate({
                            scrollLeft: d
                        }, 250, "easeOutCirc", function() {
                            w(d),
                            x(d)
                        })
                    }
                }
                function m(a) {
                    var b = a.deltaX || a.deltaY;
                    b = 0 > b ? -40 : 40;
                    var c = q.scrollLeft + b;
                    q.scrollLeft = c,
                    x(c),
                    w(c),
                    a.preventDefault(),
                    a.stopPropagation()
                }
                var n = document.querySelector.bind(document)
                  , o = c
                  , p = d[0]
                  , q = p.querySelector("ul")
                  , r = $(q)
                  , s = p.querySelector(".nxt")
                  , t = p.querySelector(".prv")
                  , u = "0.3"
                  , v = _.debounce(function() {
                    q.scrollWidth <= q.offsetWidth ? (s.style.display = "none",
                    t.style.display = "none") : (s.style.display = "",
                    t.style.display = "")
                }, 100)
                  , w = _.debounce(function(a) {
                    var b = q.scrollWidth
                      , c = q.offsetWidth;
                    b > c ? a + c >= b ? s.style.opacity = u : s.style.opacity = "" : s.style.opacity = u
                }, 50)
                  , x = _.debounce(function(a) {
                    q.scrollWidth > q.offsetWidth ? 0 >= a ? t.style.opacity = u : t.style.opacity = "" : t.style.opacity = u
                }, 50);
                s.addEventListener("mousedown", k, !1),
                t.addEventListener("mousedown", l, !1),
                setTimeout(function() {
                    a.addEventListener("resize", v, !1),
                    a.addEventListener("click", g, !1)
                }, 0),
                q.addEventListener("load", v, !0),
                q.addEventListener("wheel", m, !0),
                p.addEventListener("mouseover", h, !1),
                p.addEventListener("mouseout", i, !1),
                o.$watch("isOpen", function(a) {
                    if (a) {
                        var b = o.currentFile;
                        o.animate || setTimeout(function() {
                            var a, c = q.querySelector(".selected");
                            if (f(b, !0),
                            c && c.classList.remove("selected"),
                            a = n("#file-" + b),
                            null  !== a) {
                                a.classList.add("selected");
                                var d = q.scrollLeft;
                                w(d),
                                x(d)
                            }
                        }, 100),
                        v()
                    }
                });
                var y;
                o.$watch("currentFile", function(a, b) {
                    if (a !== b) {
                        var c = n("#file-" + b)
                          , d = n("#file-" + a);
                        if (!d)
                            return void (o.animate = !1);
                        if (c || (o.animate = !1),
                        o.animate) {
                            y = a;
                            var e, g;
                            o.aniEndPromise = new Promise(function(a, b) {
                                e = a,
                                g = b
                            }
                            );
                            setTimeout(function() {
                                return y !== a ? void g() : (f(b, !0),
                                void setTimeout(function() {
                                    return y !== a ? void g() : void o.dummyContainerCtrl.hide(c.getBoundingClientRect()).then(function(b, c) {
                                        return y !== a ? (g(),
                                        void c()) : f(a)
                                    }).then(function() {
                                        return y !== a ? (g(),
                                        void reject()) : (c.classList.remove("selected"),
                                        d.classList.add("selected"),
                                        new Promise(function(b, c) {
                                            setTimeout(function() {
                                                return y !== a ? (g(),
                                                void c()) : void o.dummyContainerCtrl.show(d.getBoundingClientRect()).then(b)
                                            }, 100)
                                        }
                                        ))
                                    }).then(function() {
                                        return y !== a ? void g() : (e(),
                                        void o.$apply(function() {
                                            o.btnClicked = !1,
                                            o.isOpen = !1,
                                            o.animate = !1
                                        }))
                                    })
                                }, 300))
                            }, 0)
                        } else {
                            f(a, b && !c);
                            var h = q.querySelector("li.selected")
                              , i = n("#file-" + a);
                            h && h.classList.remove("selected"),
                            i && i.classList.add("selected")
                        }
                    }
                }),
                o.$on("$destroy", function() {
                    s.removeEventListener("mousedown", k, !1),
                    t.removeEventListener("mousedown", l, !1),
                    a.removeEventListener("resize", v, !1),
                    a.removeEventListener("click", g, !1),
                    q.removeEventListener("load", v, !0),
                    q.removeEventListener("wheel", m, !0),
                    p.removeEventListener("mouseover", h, !1),
                    p.removeEventListener("mouseout", i, !1)
                })
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvHideCssMenuOnClick", ["$compile", "$timeout", "$filter", function(a, b, c) {
        return {
            restrict: "A",
            scope: {
                time: "@"
            },
            link: function(a, b, c) {
                b.on("click", b.data().selector, function() {
                    b.css({
                        display: "none"
                    }),
                    setTimeout(function() {
                        b.css({
                            display: ""
                        })
                    }, 500)
                })
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvHideTimer", ["$compile", "$timeout", "$filter", function(b, c, d) {
        return {
            restrict: "A",
            scope: {
                time: "@"
            },
            link: function(b, c, d) {
                function e() {
                    f.classList.remove("fade-out"),
                    g()
                }
                var f = c[0];
                b.time = parseInt(b.time, 10);
                var g = _.debounce(function() {
                    f.classList.add("fade-out")
                }, b.time);
                a.addEventListener("mousemove", e, !1),
                b.$on("$destroy", function() {
                    a.removeEventListener("mousemove", e, !1)
                })
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvIcoHover", ["$compile", "$timeout", "$filter", function(a, b, c) {
        return {
            restrict: "A",
            scope: {
                cnvIcoHover: "@"
            },
            link: function(a, b, c) {
                function d(a) {
                    if (a) {
                        var b, c = a.dataset.className;
                        if (c) {
                            if (b = c.replace("dark", "light"),
                            !a.dataset.selfHover) {
                                var d = a.querySelector("." + c);
                                null  === d && (d = a.querySelector("." + b)),
                                a = d
                            }
                            a && (a.classList.remove(c),
                            a.classList.add(b))
                        }
                    }
                }
                function e(a) {
                    if (a) {
                        var b, c = a.dataset.className;
                        if (c) {
                            if (b = c.replace("dark", "light"),
                            !a.dataset.selfHover) {
                                var d = a.querySelector("." + c);
                                null  === d && (d = a.querySelector("." + b)),
                                a = d
                            }
                            a && (a.classList.remove(b),
                            a.classList.add(c))
                        }
                    }
                }
                var f = b[0]
                  , g = "selected-tool";
                f.addEventListener("mouseover", function(a) {
                    var b, c = a.target, d = c.dataset.className;
                    d || (c = c.parentNode,
                    d = c.dataset.className),
                    d && (b = d.replace("dark", "light"),
                    c.dataset.selfHover || (c = c.querySelector("." + d),
                    null  === c && (c = a.target.querySelector("." + b))),
                    c && (c.classList.remove(d),
                    c.classList.add(b)))
                }, !1),
                f.addEventListener("mouseout", function(a) {
                    var b = a.target
                      , c = b.dataset.className
                      , i = f.querySelectorAll("[data-class-name]");
                    if (Array.prototype.slice.apply(i).forEach(e),
                    h !== b && c && !f.classList.contains(g)) {
                        var j = c.replace("dark", "light");
                        b.dataset.selfHover || (b = b.querySelector("." + c),
                        null  === b && (b = a.target.querySelector("." + j))),
                        b && (b.classList.remove(j),
                        b.classList.add(c))
                    }
                    d(f.querySelector("." + g))
                }, !1);
                var h;
                f.addEventListener("click", function(a) {
                    console.log(a);
                    var b = f.querySelectorAll("[data-class-name]");
                    Array.prototype.slice.apply(b).forEach(e);
                    var c, i = a.target, j = i.dataset.className;
                    j || (i = i.parentNode,
                    j = i.dataset.className),
                    j && (c = j.replace("dark", "light"),
                    h = i,
                    i.dataset.selfHover || (i = i.querySelector("." + j),
                    null  === i && (i = a.target.querySelector("." + c))),
                    i && (i.classList.remove(j),
                    i.classList.add(c))),
                    b = f.querySelector("." + g),
                    d(b)
                }, !1),
                a.$on("GalleryHeader:selectBtn", function() {
                    selectedItem = f.querySelector("." + g),
                    d(selectedItem)
                }),
                a.$on("GalleryHeader:deselectAllBtns", function() {
                    var a = f.querySelectorAll("[data-class-name]");
                    Array.prototype.slice.apply(a).forEach(e)
                })
            }
        }
    }
    ]),
    b.module("convoApp").factory("cnvLineShape", [function() {
        function a(a, b) {
            var c = this
              , b = b || 15
              , d = a[0]
              , e = a[1]
              , f = a[2]
              , g = a[3]
              , h = f - d
              , i = g - e
              , j = Math.atan2(i, h);
            j *= 180 / Math.PI,
            j += 90;
            var k = new fabric.Triangle({
                angle: j,
                fill: c._line.stroke,
                top: g,
                left: f,
                height: b,
                width: b,
                originX: "center",
                originY: "center",
                selectable: !1,
                _instance: c
            });
            c._arrowHead = k,
            c._fCanvas.add(k),
            k.moveTo(1)
        }
        function b(a) {
            var b, c = a.cornerNo, d = this, e = d._corners, f = d._line;
            if ("line" === c)
                b = [f.left + f.x1Diff, f.top + f.y1Diff, f.left + f.x2Diff, f.top + f.y2Diff],
                e && (e[0].remove(),
                e[1].remove(),
                d._createCorners(b, e[0].height));
            else {
                var g = c + 1
                  , h = "x" + g
                  , i = "y" + g
                  , j = {};
                j[h] = e[c].left,
                j[i] = e[c].top,
                b = 1 === g ? [j[h], j[i], f.left + f.x2Diff, f.top + f.y2Diff] : [f.left + f.x1Diff, f.top + f.y1Diff, j[h], j[i]],
                d._createLine(b, {
                    _id: f._id,
                    strokeWidth: f.strokeWidth,
                    hasBorders: !1,
                    hasControls: !1,
                    stroke: f.stroke,
                    originX: f.originX,
                    originY: f.originY,
                    _transformX: f._transformX,
                    _transformY: f._transformY
                }),
                f.remove(),
                f = d._line,
                f["x" + g + "Diff"] = j[h] - f.left,
                f["y" + g + "Diff"] = j[i] - f.top,
                e[0].bringToFront(!0),
                e[1].bringToFront(!0)
            }
            d._arrowHead.remove(),
            d._createArrowHead(b, d._arrowHead.width)
        }
        function c(a, b) {
            var c = this
              , d = !1
              , e = {}
              , f = new fabric.Line(a,b);
            f._instance = c,
            f.x1Diff = f.x1 - f.left,
            f.y1Diff = f.y1 - f.top,
            f.x2Diff = f.x2 - f.left,
            f.y2Diff = f.y2 - f.top,
            f.on("selected", function() {
                var a = this
                  , b = a._instance
                  , c = b._corners
                  , d = b._fCanvas;
                d.getObjects().forEach(function(b) {
                    b !== a && b._instance && "line" === b.type && b._instance.deselect()
                }),
                c && (c[0].set("opacity", 1),
                c[0].set("selectable", !0),
                c[1].set("opacity", 1),
                c[1].set("selectable", !0)),
                d.renderAll()
            }),
            f.on("mouseup", function(a) {
                d = !1;
                var b = this._instance
                  , c = b._line.originalState;
                c.left = e.left,
                c.top = e.top,
                c.width = e.width,
                c.height = e.height,
                c.x1 = e.x1,
                c.y1 = e.y1,
                c.x2 = e.x2,
                c.y2 = e.y2,
                c.x1Diff = e.x1Diff,
                c.y1Diff = e.y1Diff,
                c.x2Diff = e.x2Diff,
                c.y2Diff = e.y2Diff
            }),
            f.on("moving", function(a) {
                var b = this._instance
                  , c = b._line;
                d === !1 && (e.left = c.left,
                e.top = c.top,
                e.width = c.width,
                e.height = c.height,
                e.x1 = c.x1,
                e.y1 = c.y1,
                e.x2 = c.x2,
                e.y2 = c.y2,
                e.x1Diff = c.x1Diff,
                e.y1Diff = c.y1Diff,
                e.x2Diff = c.x2Diff,
                e.y2Diff = c.y2Diff),
                a.cornerNo = "line",
                this._instance._move(a),
                d = !0
            }),
            c._line = f,
            c._fCanvas.add(f)
        }
        function d(a, b) {
            function c() {
                var a = this._instance
                  , b = a._line.originalState;
                a.isScaling = !1,
                b.left = f.left,
                b.top = f.top,
                b.width = f.width,
                b.height = f.height,
                b.x1 = f.x1,
                b.y1 = f.y1,
                b.x2 = f.x2,
                b.y2 = f.y2,
                b.x1Diff = f.x1Diff,
                b.y1Diff = f.y1Diff,
                b.x2Diff = f.x2Diff,
                b.y2Diff = f.y2Diff
            }
            b = b || 6;
            var d = this
              , e = [new fabric.Rect({
                left: a[0],
                top: a[1],
                originX: "center",
                originY: "center",
                hasControls: !1,
                hasBorders: !1,
                fill: "#000000",
                strokeWidth: 1,
                stroke: "#ffffff",
                height: b,
                width: b,
                hoverCursor: "nesw-resize",
                _instance: d,
                dontShowInSnippetImage: !0
            }), new fabric.Rect({
                left: a[2],
                top: a[3],
                originX: "center",
                originY: "center",
                hasControls: !1,
                hasBorders: !1,
                fill: "#000000",
                strokeWidth: 1,
                stroke: "#ffffff",
                height: b,
                width: b,
                hoverCursor: "nesw-resize",
                _instance: d,
                dontShowInSnippetImage: !0
            })]
              , f = {};
            e[0].on("mouseup", c),
            e[1].on("mouseup", c),
            e[0].on("moving", function(a) {
                var b = this._instance
                  , c = b._line;
                b.isScaling === !1 && (f.left = c.left,
                f.top = c.top,
                f.width = c.width,
                f.height = c.height,
                f.x1 = c.x1,
                f.y1 = c.y1,
                f.x2 = c.x2,
                f.y2 = c.y2,
                f.x1Diff = c.x1Diff,
                f.y1Diff = c.y1Diff,
                f.x2Diff = c.x2Diff,
                f.y2Diff = c.y2Diff),
                a.cornerNo = 0,
                b.isScaling = !0,
                b._move(a)
            }),
            e[1].on("moving", function(a) {
                var b = this._instance
                  , c = b._line;
                b.isScaling === !1 && (f.left = c.left,
                f.top = c.top,
                f.width = c.width,
                f.height = c.height,
                f.x1 = c.x1,
                f.y1 = c.y1,
                f.x2 = c.x2,
                f.y2 = c.y2,
                f.x1Diff = c.x1Diff,
                f.y1Diff = c.y1Diff,
                f.x2Diff = c.x2Diff,
                f.y2Diff = c.y2Diff),
                a.cornerNo = 1,
                b.isScaling = !0,
                b._move(a)
            }),
            d._corners = e,
            d._fCanvas.add(e[0]),
            d._fCanvas.add(e[1])
        }
        function e() {
            var a = this._corners;
            a && (a[0].set("opacity", 0),
            a[0].set("selectable", !1),
            a[1].set("opacity", 0),
            a[1].set("selectable", !1)),
            this._fCanvas.renderAll()
        }
        function f() {
            return this._line.getTop()
        }
        function g() {
            return this._line.getLeft()
        }
        function h() {
            return this._line.getWidth()
        }
        function i() {
            return this._line.getHeight()
        }
        function j(a, b, c) {
            var d = this
              , e = d._corners;
            d._line.strokeWidth = b,
            e && (d._createCorners([e[0].left, e[0].top, e[1].left, e[1].top], c),
            d._corners[0].opacity = e[0].opacity,
            d._corners[0].selectable = e[0].selectable,
            d._corners[1].opacity = e[1].opacity,
            d._corners[1].selectable = e[1].selectable,
            e.pop().remove(),
            e.pop().remove());
            var f = 15 / a;
            f > 40 ? f = 40 : 15 > f && (f = 15),
            d._arrowHead.width = f,
            d._arrowHead.height = f
        }
        function k() {
            var a = this
              , b = a._corners;
            a._line.remove(),
            a._line = null ,
            b && (b[0].remove(),
            b[1].remove(),
            a._corners = null ),
            a._arrowHead.remove(),
            a._arrowHead = null ,
            a._fCanvas = null 
        }
        function l(a) {
            var b = this
              , c = b._corners;
            c && (c[0].setVisible(a),
            c[1].setVisible(a)),
            b._arrowHead.setVisible(a),
            b._line.setVisible(a)
        }
        return function(m, n, o) {
            o.hasControls = !1,
            o.hoverCursor = "move";
            var p = {
                type: "arrow",
                deselect: e,
                scale: j,
                remove: k,
                setVisible: l,
                getTop: f,
                getLeft: g,
                getWidth: h,
                getHeight: i,
                _createLine: c,
                _createArrowHead: a,
                _createCorners: d,
                _move: b,
                _fCanvas: m,
                selectable: o.selectable,
                isScaling: !1
            };
            if (p._createLine(n, o),
            p._createArrowHead(n, o.arrowHeadLength),
            o.selectable && (p._createCorners(n),
            o.active ? m.setActiveObject(p._line) : p.deselect()),
            o.originalState && "number" == typeof o.originalState.x1) {
                var q = p._line.originalState;
                q.left = o.originalState.left,
                q.top = o.originalState.top,
                q.width = o.originalState.width,
                q.height = o.originalState.height,
                q.x1 = o.originalState.x1,
                q.y1 = o.originalState.y1,
                q.x2 = o.originalState.x2,
                q.y2 = o.originalState.y2,
                q.x1Diff = o.originalState.x1Diff,
                q.y1Diff = o.originalState.y1Diff,
                q.x2Diff = o.originalState.x2Diff,
                q.y2Diff = o.originalState.y2Diff
            }
            return m.renderAll(!0),
            p
        }
    }
    ]),
    b.module("convoApp").factory("galleryClipboard", ["cnvLineShape", function(a) {
        function d(a) {
            var b = n.getObjects().filter(function(b) {
                return b._id === a
            });
            return b.length ? b[0] : null 
        }
        function e(a, b) {
            console.error("_getObjectState: ", a.type);
            var c = {
                action: b,
                originalState: {}
            };
            return z.forEach(function(b) {
                c[b] = a[b]
            }),
            A.forEach(function(b) {
                c.originalState[b] = a.originalState[b]
            }),
            A.forEach(function(b) {
                c[b] = a[b]
            }),
            "line" === a.type && (B.forEach(function(b) {
                c[b] = a[b]
            }),
            B.forEach(function(b) {
                c.originalState[b] = a.originalState[b]
            })),
            c
        }
        function f(a) {
            if (y = !0,
            "add" === a.action) {
                var b = d(a._id);
                b && ("line" === b.type ? b._instance.remove() : b.remove())
            } else if ("modify" === a.action) {
                var b = d(a._id);
                b && (b.top = a.originalState.top,
                b.left = a.originalState.left,
                b.width = a.originalState.width,
                b.height = a.originalState.height,
                b.scaleX = a.originalState.scaleX,
                b.scaleY = a.originalState.scaleY,
                b.strokeWidth = a.originalState.strokeWidth,
                "line" === b.type && (b.x1 = a.originalState.x1,
                b.y1 = a.originalState.y1,
                b.x2 = a.originalState.x2,
                b.y2 = a.originalState.y2,
                b.x1Diff = a.originalState.x1Diff,
                b.y1Diff = a.originalState.y1Diff,
                b.x2Diff = a.originalState.x2Diff,
                b.y2Diff = a.originalState.y2Diff,
                b._instance._move({
                    cornerNo: "line"
                })),
                b.setCoords(),
                n.renderAll()),
                y = !1
            } else
                "remove" === a.action && ("line" === a.type && a.originalState && "number" == typeof a.originalState.x1 && (a.points = [a.x1Diff + a.left, a.y1Diff + a.top, a.x2Diff + a.left, a.y2Diff + a.top]),
                v[a.type](a))
        }
        function g(a) {
            if (y = !0,
            "add" === a.action)
                v[a.type](a);
            else if ("modify" === a.action) {
                var b = d(a._id);
                b && ("polyline" !== a.type && (a.width *= a.scaleX,
                a.scaleX = 1,
                a.height *= a.scaleY,
                a.scaleY = 1,
                a.strokeWidth = q),
                b.top = a.top,
                b.left = a.left,
                b.width = a.width,
                b.height = a.height,
                b.scaleX = a.scaleX,
                b.scaleY = a.scaleY,
                b.strokeWidth = a.strokeWidth,
                "line" === b.type && (b.x1 = a.x1,
                b.y1 = a.y1,
                b.x2 = a.x2,
                b.y2 = a.y2,
                b.x1Diff = a.x1Diff,
                b.y1Diff = a.y1Diff,
                b.x2Diff = a.x2Diff,
                b.y2Diff = a.y2Diff,
                b._instance._move({
                    cornerNo: "line"
                })),
                b.setCoords(),
                n.renderAll()),
                y = !1
            } else if ("remove" === a.action) {
                var b = d(a._id);
                b && ("line" === b.type ? b._instance.remove() : b.remove())
            }
        }
        function h(a, b) {
            console.error("_addToUndoState: ", a.type),
            y || ("add" === b && a._id === c && (a._id = x++),
            o.push(e(a, b)),
            o.length > w && o.shift(),
            p.length = 0),
            y = !1
        }
        function i(a) {
            console.error("_addToRedoState: ", a.type),
            p.push(a),
            p.length > w && p.shift()
        }
        function j() {
            var a = o.pop();
            a && (i(a),
            f(a))
        }
        function k() {
            var a = p.pop();
            a && (o.push(a),
            o.length > w && o.shift(),
            g(a))
        }
        function l(a) {
            var b = null 
              , c = !1;
            v._fCanvas = a,
            n = a,
            o = [],
            p = [],
            a && !a._evtsForStateInitialized && (a.on({
                "object:added": function(a) {
                    var d = a.target;
                    !c && d.selectable && (!d._instance || b && "line" === b.type || !d._instance.isScaling && !y && "line" === d.type ? (!d._instance && "line" !== d.type || d._instance && "line" === d.type) && (b = d) : b = null ),
                    b && console.error("added: ", b.type)
                },
                "mouse:up": function() {
                    b && console.error("mouse:up: ", b.type),
                    b && (b._instance && (b = b._instance._line),
                    h(b, "add"),
                    b = null )
                },
                "object:removed": function(a) {
                    var b = a.target;
                    !c && b.selectable && ("line" !== b.type || b._instance) && ("line" !== b.type && !b._instance || b._instance && "line" === b.type && !b._instance.isScaling) && (h(b, "remove"),
                    console.error("object:removed: ", b.type))
                },
                "object:modified": function(a) {
                    var b = a.target;
                    setTimeout(function() {
                        b._instance && "line" !== b.type && (b = b._instance._line),
                        console.error("object:modified: ", b.type),
                        h(b, "modify"),
                        c = !1
                    }, 0)
                },
                "object:scaling": function() {
                    console.error("scaling"),
                    c = !0
                }
            }),
            a._evtsForStateInitialized = !0)
        }
        function m() {
            return n
        }
        var n, o, p, q = 5, r = "black", s = "#ffffff", t = 6, u = -3, v = {
            _fCanvas: null ,
            rect: function(a) {
                var c = {
                    fill: "",
                    transparentCorners: !1,
                    hasRotatingPoint: !1,
                    hasBorders: !1,
                    originX: "left",
                    originY: "top",
                    strokeWidth: q,
                    cornerColor: r,
                    cornerSize: t,
                    cornerStrokeColor: s,
                    padding: u,
                    selectable: !1
                };
                b.extend(c, a);
                var d = new fabric.Rect(c);
                return this._fCanvas.add(d),
                d
            },
            line: function(d) {
                var e = {
                    fill: "",
                    hasRotatingPoint: !1,
                    hasControls: !1,
                    hasBorders: !1,
                    originX: "center",
                    originY: "center",
                    strokeWidth: q,
                    cornerColor: r,
                    cornerSize: t,
                    cornerStrokeColor: s,
                    padding: u,
                    selectable: !1,
                    transparentCorners: !1
                }
                  , f = d.points;
                return d.points = c,
                f || (f = [d.x1, d.y1, d.x2, d.y2]),
                b.extend(e, d),
                a(this._fCanvas, f, e)
            },
            polyline: function(a) {
                var d = a.pathArray
                  , e = {
                    originX: "left",
                    originY: "top",
                    fill: "",
                    hasBorders: !1,
                    transparentCorners: !1,
                    hasRotatingPoint: !1,
                    hoverCursor: "default",
                    selectable: !1,
                    strokeWidth: q,
                    cornerColor: r,
                    cornerSize: t,
                    cornerStrokeColor: s,
                    padding: u
                };
                a.pathArray = c,
                b.extend(e, a);
                var f = new fabric.Polyline(d,e);
                return this._fCanvas.add(f),
                f
            }
        }, w = 5, x = 1, y = !1, z = ["_id", "type", "selectable", "points", "originX", "originY", "stroke", "strokeWidth", "fill", "_transformX", "_transformY"], A = ["top", "left", "width", "height", "scaleX", "scaleY", "strokeWidth"], B = ["x1", "y1", "x2", "y2", "x1Diff", "y1Diff", "x2Diff", "y2Diff"];
        return {
            setCanvas: l,
            getCanvas: m,
            undoSnippetDrawing: j,
            redoSnippetDrawing: k
        }
    }
    ]),
    b.module("convoApp").factory("Note", ["ServerComm", "$rootScope", "$http", "$interval", "$q", "utils", "ItemsConstants", function(a, b, c, d, e, g, h) {
        function i(a, b, c) {
            var d = f.rtc.RTCFactory.getRTCManager(a + "_" + b)
              , e = function() {
                d.removeListener(f.chatsdk.ChatEvents.CONNECTED, e),
                d.sendChange(c),
                f.rtc.RTCFactory.releaseRTCManager(a + "_" + b),
                console.log(">>> sendNoteChangeRTCNotification.onConnected: " + JSON.stringify(c))
            }
            ;
            d.isConnected() ? e() : (d.addListener(f.chatsdk.ChatEvents.CONNECTED, e),
            d.connect())
        }
        var j = {
            getNote: function(b) {
                return a.get("notes", {
                    params: {
                        item_id: b
                    }
                })
            },
            getLargeSummary: function(b) {
                var c = {
                    item_id: b,
                    method: "getLargeSummary"
                };
                return a.get("note", {
                    params: c
                })
            },
            getFullText: function(b) {
                var c = {
                    item_id: b,
                    method: "getLargeSummary",
                    get_full_text: !0
                };
                return a.get("note", {
                    params: c
                })
            },
            createNote: function(c, d, f, g, h, i, j, k, l, m, n) {
                var o = e.defer()
                  , p = i && i.length > 0
                  , q = {
                    body: g,
                    title: d,
                    user_set_title: d ? "1" : "0",
                    is_text_only: p ? "0" : "1",
                    item_id: c,
                    convert_files: !1,
                    cleanText: !0,
                    draft: j + "",
                    tags: l || "",
                    mappings: h,
                    auto_save: m,
                    permissions: n
                };
                return k && (q.revision_no = +k),
                p && (q.files = JSON.stringify(i)),
                a.putx("notes", q).then(function(a) {
                    o.resolve(a.data),
                    b.$broadcast("Note:newNoteCreated")
                }, function(a) {
                    o.reject(a)
                }),
                o.promise
            },
            deleteFile: function(b, c, d) {
                var f = {
                    method: "deleteFileFromNote",
                    item_id: b,
                    file_id: d
                }
                  , g = a.post("notes", f)
                  , k = e.defer();
                return g.success(function(a, e) {
                    k.resolve(a),
                    j.trigger("noteFileDeleted");
                    var f = {
                        action: "file_deleted",
                        file_id: d
                    }
                      , g = {
                        type: h.ITEM_UPDATED_2,
                        itemId: b,
                        data: f
                    };
                    i(c, b, g)
                }),
                k.promise
            },
            operformAction: function(b, c, d) {
                var e = {
                    method: "performAction",
                    item_id: b,
                    action: c,
                    data: d
                };
                return a.post("notes", e)
            }
        };
        return _.extend(j, Backbone.Events),
        j
    }
    ]),
    b.module("convoApp").factory("snippetArrow", ["$rootScope", "cnvLineShape", "appStateInfo", function(b, d, e) {
        function f() {
            var b = a.innerWidth || document.documentElement.clientWidth || document.body.clientWidth
              , c = a.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;
            return {
                width: b,
                height: c
            }
        }
        function g() {
            var a = this
              , b = document.createElement("canvas");
            a._canvasId = "snippet-arrow-canvas-" + o++,
            b.id = a._canvasId,
            b.style.position = "absolute",
            b.style.top = "0px",
            b.style.left = "0px",
            b.style.height = "100%",
            b.style.width = "100%";
            var c = n(".snippet-arrow");
            return c.appendChild(b),
            c.style.display = "block",
            b
        }
        function h(a, b) {
            var c = d(a, b, {
                hasRotatingPoint: !1,
                strokeWidth: 5,
                stroke: "rgba(120, 120, 120, 1)",
                originX: "center",
                originY: "center",
                selectable: !1
            });
            return c._line.set("stroke", "rgba(120, 120, 120, .7)"),
            a.renderAll(),
            c
        }
        function i(a, b) {
            if (a !== c) {
                var d, e = this, g = e._fCanvas, i = f(), j = a.left + a.width + 10, k = a.top + a.height / 2, l = b.comment.left - 4, m = b.comment.top + b.comment.height / 2, o = n(q.appContainer).getBoundingClientRect(), p = b.container, r = 5;
                return g ? (g.clear(),
                g.setDimensions({
                    width: i.width,
                    height: i.height
                }),
                k < o.top ? k = o.top + r : k > o.bottom && (k = o.bottom - r),
                j < o.left ? j = o.left + r : j > o.right && (j = o.right - r),
                m < p.top ? (m = p.top,
                e._arrow && (e._arrow.remove(),
                e._arrow = null ),
                !0) : m > p.bottom ? (m = p.bottom,
                e._arrow && (e._arrow.remove(),
                e._arrow = null ),
                !0) : (d = [l, m, j, k],
                e._arrow = h(g, d),
                !0)) : !1
            }
        }
        function j() {
            var a = this;
            a._fCanvas && $(a._fCanvas.lowerCanvasEl).fadeOut(10, function() {
                a._arrow && (a._arrow.remove(),
                a._arrow = null ),
                a._fCanvas && (a._fCanvas.dispose(),
                a._fCanvas.lowerCanvasEl.parentNode.removeChild(a._fCanvas.lowerCanvasEl),
                a._fCanvas = null )
            })
        }
        function k(a) {
            return !!p[a]
        }
        function l(a, b) {
            var c = {
                _createCanvas: g,
                render: i,
                destroy: j
            };
            return c._fCanvas = new fabric.StaticCanvas(c._createCanvas()),
            c.render(a, b),
            c
        }
        function m(a, b) {
            if ("object" == typeof p[a] ? (b !== !0 && p[a].destroy(),
            clearTimeout(p[a].timerId),
            p[a].snippetData = null ,
            delete p[a]) : p[a] === !0 && delete p[a],
            0 === Object.keys(p).length) {
                var c = n(".snippet-arrow");
                c && (c.style.display = "none")
            }
        }
        var n = document.querySelector.bind(document)
          , o = 0
          , p = {}
          , q = {};
        return b.$on("SnippetArrow:draw", function(a, b, c) {
            if (!e.isAppInCompactView()) {
                var d = 0;
                p[b] || (p[b] = !0,
                setTimeout(function f() {
                    var a, e = q.getCommentOffset(b);
                    return e ? (a = q.getSnippetOffset(c),
                    p[b] = l(a, e),
                    p[b].snippetData = c,
                    void (p[b].timerId = setTimeout(function() {
                        m(b)
                    }, 4e3))) : void (d++ < 5 ? setTimeout(f, 1e3) : delete p[b])
                }, 0))
            }
        }),
        b.$on("SnippetArrow:repositionAll", function(a) {
            e.isAppInCompactView() || (a.stopPropagation(),
            Object.keys(p).forEach(function(a) {
                if ("object" == typeof p[a]) {
                    var b = q.getSnippetOffset(p[a].snippetData)
                      , c = q.getCommentOffset(a);
                    p[a].render(b, c) === !1 && m(a, !0)
                }
            }))
        }),
        b.$on("SnippetArrow:destroy", function(a, b) {
            e.isAppInCompactView() || m(b)
        }),
        b.$on("SnippetArrow:destroyAll", function(a) {
            e.isAppInCompactView() || Object.keys(p).forEach(m)
        }),
        b.$on("SnippetArrow:destroyAllInAppCompactView", function(a) {
            Object.keys(p).forEach(m)
        }),
        q.isVisible = k,
        q
    }
    ]),
    b.module("convoApp").factory("desktopNotificationsService", ["Users", "userInfo", "userIdToImgUrlFilter", "userIdToImgUrlForFeedFilter", "utils", "UserProfileImage", "FeedActionTypes", "appStateInfo", "AppLinks", "config", "chatService", "serverPingService", "nativeCommBridge", "$window", "Feed", "$filter", "appTabs", "appStateInfo", "settingsService", "linksClickHistory", function(b, d, e, g, h, i, j, k, l, m, n, o, p, q, r, s, t, k, u, v) {
        function w(a) {
            if (m.IS_NATIVE) {
                if (!u.isDesktopNotificationEnabled())
                    return !1
            } else if (!u.isDesktopNotificationEnabled() || Notify.needsPermission() || !t.isThisTabLastActiveTab() || k.appHasFocus() && !k.isAppInShortIdle2State() && k.isAppActivated())
                return !1;
            if (a == S)
                return !0;
            if (a == T) {
                if (u.isBitONOFF(u.getIncomingChatSetting(), u.DESKTOP))
                    return !0
            } else if (a == U) {
                if (u.isBitONOFF(u.getUserStatusSetting(), u.DESKTOP))
                    return !0
            } else {
                if (a == V)
                    return !0;
                if (a == W) {
                    if (u.isBitONOFF(u.getStartFollowingSetting(), u.DESKTOP))
                        return !0
                } else if (a == X) {
                    if (u.isBitONOFF(u.getGroupSharedSetting(), u.DESKTOP))
                        return !0
                } else if (a == Y && u.isBitONOFF(u.getGroupJoinReqSetting(), u.DESKTOP))
                    return !0
            }
            return !1
        }
        function x(a, b, c, d, e) {
            var f = $.toString();
            if (aa[f] = {
                tag: f,
                type: a,
                data: e
            },
            m.IS_NATIVE) {
                var g = d.split("/", 6).join("/") + "/"
                  , i = d.replace(g, m.AWS_FILE_DIR_BASE_FOR_NO_AUTH);
                p.deliverNotification(JSON.stringify({
                    tag: f,
                    title: b,
                    body: c,
                    icon: i
                }))
            } else {
                console.log("<<DESKTOP NOTIFICATION TO DISPLAY>>"),
                console.log("DESKTOP NOTIFICATION Type: " + a),
                console.log("DESKTOP NOTIFICATION Title: " + b),
                console.log("DESKTOP NOTIFICATION Body: " + c),
                console.log("DESKTOP NOTIFICATION IconUrl: " + d),
                console.log("DESKTOP NOTIFICATION data: " + e);
                var j = {};
                j.body = s("limitText")(s("unescape")(h.htmlToPlaintext(c.replace(/<\/div>|<br>/g, " "))), ba + ca),
                j.icon = d,
                j.timeout = Z,
                j.tag = f,
                j.notifyShow = O,
                j.notifyClose = P,
                j.notifyClick = Q,
                j.notifyError = R;
                var k = new Notify(b,j);
                k.show()
            }
            $++
        }
        function y(a) {
            if (a.feed_items && w(S))
                for (var b = G(a.feed_items), c = 0; c < b.length; c++)
                    x(S, b[c].title, b[c].body, b[c].icon, b[c].data)
        }
        function z() {
            if (w(V))
                for (var a = I(o.getLikeNotifications()), b = 0; b < a.length; b++)
                    x(V, a[b].title, a[b].body, a[b].icon, a[b].data)
        }
        function A() {
            var a = o.getUserStartedFollowAndGroupSharedAndGroupJoinReqNotifications()
              , b = _.where(a, {
                action: "FOLLOW"
            })
              , c = _.where(a, {
                action: "GROUP_SHARED"
            })
              , d = _.where(a, {
                action: "REQUESTED_GROUP_ACCESS"
            });
            B(b),
            D(c),
            C(d)
        }
        function B(a) {
            if (w(W))
                for (var b = J(a), c = 0; c < b.length; c++)
                    x(W, b[c].title, b[c].body, b[c].icon, b[c].data)
        }
        function C(a) {
            if (w(Y))
                for (var b = L(a), c = 0; c < b.length; c++)
                    x(Y, b[c].title, b[c].body, b[c].icon, b[c].data)
        }
        function D(a) {
            if (w(X))
                for (var b = K(a), c = 0; c < b.length; c++)
                    x(X, b[c].title, b[c].body, b[c].icon, b[c].data)
        }
        function E(a) {
            if (w(T)) {
                var b = a.messages[a.messages.length - 1]
                  , c = a.participants[b.senderId];
                if (c.userId != d.user_id && !a.isMuted && b.type == f.chatsdk.MessageType.MESSAGE) {
                    var g = b.messageText
                      , h = e(c.userId, i.PROFILE_IMAGE_SIZE_184x184)
                      , j = c.name + " sent a chat";
                    x(T, j, g, h, a)
                }
            }
        }
        function F(a) {
            if (w(U))
                for (var b = N(a), c = 0; c < b.length; c++)
                    x(U, b[c].title, b[c].body, b[c].icon, b[c].data)
        }
        function G(a) {
            for (var b, c, e, f, h, k, m, n, o, p, q, t, u, v, w, x, y, z, A = [], B = !1, C = 0; C < a.length; C++)
                if (b = a[C],
                !(4 != b.app_instance_id && 6 != b.app_instance_id || b.deleted || 1 != b.notify || b.action != j.ADDED && b.action != j.UPDATED && b.action != j.DISCUSSION)) {
                    if (H(b))
                        continue;if (w = b.app_instance_id,
                    n = b.hierarchy[0].title,
                    z = b.data,
                    b.action == j.ADDED || b.action == j.UPDATED)
                        h = b.updated_by,
                        k = r.getUserName(b.updated_by),
                        m = b.created_by,
                        c = b.action == j.ADDED ? k + " shared a post" : m == d.user_id ? k + " updated your post" : k + " updated a post",
                        parseInt(z.show_title) ? e = "" != b.details ? s("limitText")(n, ba) + "\n\n" + b.details : n : z.hasOwnProperty("show_title") ? e = b.details : (4 == b.app_instance_id || -1 != z.note_type.indexOf("IMAGES")) && (e = "" != b.details ? s("limitText")(n, ba) + "\n\n" + b.details : n),
                        f = g(h, i.PROFILE_IMAGE_SIZE_184x184),
                        x = l.newResourceLink(w, b.hierarchy, null , s("limitText")(n, ba));
                    else if (b.action == j.DISCUSSION) {
                        q = b.timestamp,
                        p = b.conversations;
                        for (var D = 0; D < p.length; D++)
                            if (p[D].update_timestamp == q && 2 != p[D].update_kind) {
                                o = p[D];
                                break
                            }
                        if (t = o.from_user,
                        u = r.getUserName(o.from_user),
                        0 == o.update_kind || 3 == o.update_kind)
                            if (b.created_by == d.user_id)
                                c = u + " commented on your post";
                            else {
                                v = b.sharing_info;
                                for (var E = 0; E < v.length; E++)
                                    if (v[E].published_to == d.user_id) {
                                        B = !0;
                                        break
                                    }
                                c = B ? u + " commented on a post you are mentioned in" : u + " commented on a post"
                            }
                        else
                            1 == o.update_kind && (c = u + " edited a comment");
                        o.comment_text && 0 !== o.comment_text.length ? e = o.files && o.files.length > 0 ? o.comment_text + " " + o.files[0].name : o.comment_text : o.files && o.files.length > 0 && (e = o.files[0].name),
                        f = g(t, i.PROFILE_IMAGE_SIZE_184x184),
                        x = l.newResourceLink(w, b.hierarchy, o.uid, s("limitText")(n, ba))
                    }
                    y = l.linkToUrl(x, !0),
                    A.push({
                        title: c,
                        body: e,
                        icon: f,
                        data: y
                    })
                }
            return A
        }
        function H(a) {
            var b;
            if (a.action == j.ADDED || a.action == j.UPDATED)
                b = a.updated_by;
            else if (a.action == j.DISCUSSION) {
                for (var c, e = a.timestamp, f = a.conversations, g = 0; g < f.length; g++)
                    if (f[g].update_timestamp == e) {
                        c = f[g];
                        break
                    }
                b = c.from_user
            }
            return b == d.user_id ? !0 : !1
        }
        function I(a) {
            var b, c, d, f, g, h, j, k, m, n, o, p, q, r, t, u, v, w, x, y, z, A, B, C, D = [];
            if (!a)
                return D;
            for (var E = 0; E < a.length; E++)
                (6 == a[E].app_instance_id || 4 == a[E].app_instance_id) && (j = JSON.parse(a[E].app_instance_id),
                g = a[E].last_liked_by,
                f = a[E].last_liked_by_name,
                h = JSON.parse(a[E].like_count),
                k = a[E].path_ids.split(","),
                m = JSON.parse(a[E].path_types),
                n = JSON.parse(a[E].path_names),
                b = f,
                h > 1 && (b += " +" + (h - 1)),
                a[E].hasOwnProperty("conversation_uid") ? (v = JSON.parse(a[E].path_names),
                B = v[v.length - 1],
                C = JSON.parse(a[E].collaboration_info),
                b += " liked your comment",
                a[E].comments && 0 !== a[E].comments.length ? c = C && C.files && C.files.length > 0 ? a[E].comments + " " + C.files[0].name : a[E].comments : C && C.files && C.files.length > 0 && (c = C.files[0].name),
                o = JSON.parse(a[E].path_created_by),
                p = JSON.parse(a[E].path_versions),
                q = M(k, m, n, o, p),
                r = l.newResourceLink(j, q, a[E].conversation_uid, B)) : (u = JSON.parse(a[E].path_types),
                v = JSON.parse(a[E].path_names),
                w = v[0],
                x = u.length > 1,
                x ? (y = u[u.length - 1],
                z = v[v.length - 1],
                "images" == y || "IMAGE" == y ? b += 13 == a[E].system_item_type ? " liked your profile photo" : " liked your image" : "files" == y && (b += " liked your file"),
                c = z,
                B = z) : (b += " liked your post",
                A = JSON.parse(a[E].custom_properties),
                parseInt(A.show_title) ? c = "" != a[E].description ? s("limitText")(w, ba) + "\n\n" + a[E].description : w : A.hasOwnProperty("show_title") ? c = a[E].description : (4 == j || -1 != A.note_type.indexOf("IMAGES")) && (c = "" != a[E].description ? s("limitText")(w, ba) + "\n\n" + a[E].description : w),
                B = w),
                q = M(k, m, n),
                r = l.newResourceLink(j, q, null , B)),
                t = l.linkToUrl(r, !0),
                d = e(g, i.PROFILE_IMAGE_SIZE_184x184),
                D.push({
                    title: b,
                    body: c,
                    icon: d,
                    data: t
                }));
            return D
        }
        function J(a) {
            for (var b, c, d, f, g, h, j = [], k = 0; k < a.length; k++) {
                g = a[k].actionBy.split(",");
                for (var l = 0; l < g.length; l++)
                    h = a[k].actionByUsers[g[l]].name,
                    b = h + " followed you",
                    c = h + " now follows your updates",
                    d = e(g[l], i.PROFILE_IMAGE_SIZE_184x184),
                    f = s("idToFilterUrl")(g[l], "USER"),
                    j.push({
                        title: b,
                        body: c,
                        icon: d,
                        data: f
                    })
            }
            return j
        }
        function K(a) {
            for (var b, c, d, f, g, h, j = [], k = 0; k < a.length; k++)
                g = a[k].actionBy,
                h = a[k].actionByUsers[g].name,
                b = h + " added you to a group",
                c = a[k].description,
                d = e(g, i.PROFILE_IMAGE_SIZE_184x184),
                f = s("idToFilterUrl")(a[k].pathIds, "GROUP"),
                j.push({
                    title: b,
                    body: c,
                    icon: d,
                    data: f
                });
            return j
        }
        function L(a) {
            for (var b, c, d, f, g, h, j = [], k = 0; k < a.length; k++) {
                g = a[k].actionBy.split(",");
                for (var m = 0; m < g.length; m++)
                    h = a[k].actionByUsers[g[m]].name,
                    b = h + " sent a request to join " + a[k].GROUP,
                    c = "",
                    d = e(g[m], i.PROFILE_IMAGE_SIZE_184x184),
                    f = l.linkToUrl(l.newResourceLink("9", [{
                        uid: a[k].pathIds,
                        type: "22"
                    }, {
                        uid: "2",
                        type: "GroupRequests"
                    }], null , a[m].GROUP + " (Requests)"), !0),
                    j.push({
                        title: b,
                        body: c,
                        icon: d,
                        data: f
                    })
            }
            return j
        }
        function M(a, b, d, e, f) {
            for (var g = [], h = a.length, i = 0; h > i; i++)
                e === c && f === c ? g.push({
                    uid: a[i],
                    type: b[i],
                    title: d[i]
                }) : g.push({
                    uid: a[i],
                    type: b[i],
                    title: d[i],
                    createdBy: e[i],
                    version: f[i]
                });
            return g
        }
        function N(a) {
            for (var b, c, g = [], h = "", j = 0; j < a.length; j++)
                !a[j].isAccessible || a[j].userId == d.user_id || a[j].presenceStatus != f.chatsdk.UserStatus.AVAILABLE && a[j].presenceStatus != f.chatsdk.UserStatus.UNAVAILABLE || (b = a[j].presenceStatus == f.chatsdk.UserStatus.AVAILABLE ? a[j].firstName + " " + a[j].lastName + " is online" : a[j].firstName + " " + a[j].lastName + " is offline",
                c = e(a[j].userId, i.PROFILE_IMAGE_SIZE_184x184),
                g.push({
                    title: b,
                    body: h,
                    icon: c,
                    data: a[j]
                }));
            return g
        }
        function O(a) {}
        function P(a) {
            m.IS_NATIVE && m.IS_WINDOWS ? delete aa[JSON.parse(a).tag] : m.IS_NATIVE || delete aa[a.currentTarget.tag]
        }
        function Q(b) {
            a.focus();
            var c, d;
            c = m.IS_NATIVE ? aa[JSON.parse(b).tag] : aa[b.currentTarget.tag],
            d = c.data,
            c.type == S || c.type == V || c.type == W || c.type == X || c.type == Y ? (v.push(d, "open-in-compact-view"),
            q.location.href = d) : c.type == T ? n.focusChatOnMessageReceivedClicked(d, !0) : c.type == U && n.openChatWithUser(d, !0)
        }
        function R(a) {}
        var S = 1
          , T = 2
          , U = 3
          , V = 4
          , W = 5
          , X = 6
          , Y = 7
          , Z = 8
          , $ = 0
          , aa = {}
          , ba = 45
          , ca = 250;
        return r.on("feedPolled", y),
        o.on("likeNotificationsUpdate", z),
        o.on("userStartedFollowAndGroupSharedAndGroupJoinReqNotificationsUpdate", A),
        p.on("onDesktopNotificationClick", Q),
        p.on("onDesktopNotificationClose", P),
        {
            showFeedNotifications: y,
            showChatNotification: E,
            showUserStatusNotifications: F
        }
    }
    ]),
    b.module("convoApp").directive("cnvOnboardingCtrl", [function() {
        return {
            restrict: "A",
            controller: ["$scope", "homeViewStateInfo", function(a, b) {
                function c() {}
                b.getState();
                a.$on("filterChange", function(a) {}),
                c()
            }
            ],
            link: function(a, b, c) {}
        }
    }
    ]),
    b.module("convoApp").directive("cnvOnboardingDownloadAppsAdvert", ["config", "ServerComm", "utils", "onboardingService", "mixpanelService", function(a, b, c, d, e) {
        return {
            restrict: "E",
            replace: !0,
            templateUrl: "onboarding/cnvOnboardingDownloadAppsAdvert/cnvOnboardingDownloadAppsAdvert.tpl.html",
            link: function(b, f, g) {
                b.config = a,
                b.platform = navigator.platform.slice(0, 3).toLowerCase(),
                b.downloadNativeApp = function() {
                    c.download([{
                        path: a.HTML_APP_DOWNLOAD_URL,
                        name: "Download App"
                    }], !0, !0)
                }
                ,
                b.markDownloadApp = function() {
                    d.markDownloadedAppFromAdvert(),
                    b.$emit("cnvOnboarding:updateOnboardingChecklist", !0)
                }
                ,
                b.dismissAdvert = function() {
                    f.addClass("dismiss"),
                    setTimeout(function() {
                        f.remove(),
                        b.$emit("cnvOnboarding:startPilotIntro")
                    }, 500)
                }
                ,
                b.dismissAdvertWithDelay = function() {
                    setTimeout(b.dismissAdvert, 1e3)
                }
                ,
                b.logDismissInMixpanel = function() {
                    e.trackEvent(e.EXITS_AD_IN_BROWSER)
                }
                ,
                b.logDownloadInMixpanel = function() {
                    e.trackEvent(e.CLICK_DOWNLOAD_APP)
                }
                ,
                b.$on("$destroy", function() {
                    f = null 
                })
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvOnboardingHomeLeft", ["homeViewStateInfo", function(a) {
        return {
            restrict: "A",
            scope: !0,
            link: function(a, b, c) {
                function d() {}
                d()
            },
            controller: ["$scope", function(a) {}
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvOnboardingChecklist", ["$rootScope", function(a) {
        return {
            restrict: "E",
            scope: !0,
            replace: !0,
            templateUrl: "onboarding/cnvOnboardingHomeRight/cnvOnboardingChecklist.tpl.html",
            link: function(b, c, d) {
                function e() {
                    b.checklist = a.login_data.onboarding_state.onboarding_checklist,
                    f(null , b.checklist)
                }
                function f(a, c) {
                    b.checklistProgress = g;
                    for (var d = Object.keys(c), e = 0; e < d.length; e++)
                        b.userInfo.isGuestUser() || "onboarding_dismissed" == d[e] || "0" == c[d[e]] ? "onboarding_dismissed" != d[e] && "0" != c[d[e]] && (b.checklistProgress += 30) : (b.checklistProgress == g && (b.checklistProgress = 0),
                        b.checklistProgress += 20);
                    setTimeout(function() {
                        b.checklist = c,
                        b.$$phase || b.$digest()
                    }, 400)
                }
                var g = b.userInfo.isGuestUser() ? 10 : 1;
                b.checklistProgress = g,
                e(),
                b.$on("cnvOnboarding:initializeChecklist", f)
            },
            controller: ["$scope", "userInfo", "alertsService", "Users", "bannerService", "config", "Contacts", "$rootScope", function(a, b, c, d, e, f, g, h) {
                a.userInfo = b,
                a.config = f,
                a.inviteContacts = function() {
                    g.initContactsInviteModal({
                        include_off_domain: !1,
                        invite_via: "Invite_Dialog",
                        origin: "Right_Column"
                    }),
                    h.$broadcast("cnvOnboardingTooltips:clearTooltips")
                }
                ,
                a.onShareableLinkClick = function() {
                    var a = "common/cnvInviteTeammates/templates/cnvFindTeammatesBasicSplash.tpl.html"
                      , b = "findContactsSplashCtrl"
                      , d = {
                        data: function() {
                            return {
                                requestedView: "VANITY_URL"
                            }
                        }
                    };
                    c.customModal(a, b, d)
                }
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvOnboardingMainHeader", ["homeViewStateInfo", function(a) {
        return {
            restrict: "A",
            scope: !0,
            link: function(a, b, c) {
                function d() {}
                d()
            },
            controller: ["$scope", "homeViewStateInfo", "$location", function(a, b, c) {
                a.skipTour = function() {}
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvOnboardingPilotIntro", ["$rootScope", "$templateCache", "$compile", "mixpanelService", "onboardingService", function(b, c, d, e, f) {
        return {
            restrict: "A",
            scope: !1,
            link: function(b, g, h) {
                function i() {
                    var a = d(c.get(m));
                    g.append(a(b)),
                    o = g.find(n)
                }
                function j(c) {
                    o || (o = g.find(n)),
                    c && p && (clearTimeout(p),
                    f.recordAction("onboarding_dismissed"),
                    e.trackEvent(e.X_OUT_GETTING_STARTED, {
                        Type: "Learn about feed",
                        Trigger: "Click"
                    })),
                    o.addClass("remove-anim"),
                    a.setTimeout(function() {
                        o.remove(),
                        o = null ,
                        c ? b.$emit("cnvOnboarding:cnvPilotIntroDismissed") : b.$emit("cnvOnboarding:cnvPilotIntroComplete", !0, !0)
                    }, 1e3)
                }
                function k(b) {
                    var c = g.find(".bottom-text > span").first();
                    return -1 == b ? (c.html("Starting in " + b + " seconds..."),
                    void j()) : void (p = a.setTimeout(function() {
                        c.html("Starting in " + b + " seconds..."),
                        k(b - 1)
                    }, 1e3))
                }
                function l() {
                    i(),
                    k(b.countdownTimerStart)
                }
                var m = "onboarding/cnvOnboardingPilotIntro/cnvOnboardingPilotIntro.tpl.html"
                  , n = ".cnv-pilot-intro-wrapper"
                  , o = null 
                  , p = null ;
                b.countdownTimerStart = 5,
                b.completeIntroStep = j,
                b.$on("cnvOnboarding:startCnvPilotIntro", l),
                b.$on("$destroy", function() {
                    o = null 
                })
            },
            controller: ["$scope", function(a) {}
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvDemoPost", ["accountInfo", "$timeout", "config", function(b, d, e) {
        return {
            restrict: "E",
            scope: !1,
            replace: !0,
            link: function(f, g, h) {
                function i() {
                    var a, b = document.createElement("fakeelement"), d = {
                        transition: "transitionend",
                        OTransition: "oTransitionEnd",
                        MozTransition: "transitionend",
                        WebkitTransition: "webkitTransitionEnd"
                    };
                    for (a in d)
                        if (b.style[a] !== c)
                            return d[a]
                }
                function j() {
                    o[0].className = o[0].className + " gifsRealFast",
                    o[0].style.webkitTransform = "translateX(" + n + "px)",
                    o[0].style.MozTransform = "translateX(" + n + "px)",
                    o[0].style.transform = "translateX(" + n + "px)",
                    d(function() {
                        f.selectingGif = !1,
                        f.allowSharing = !0
                    }, 0)
                }
                function k() {
                    setTimeout(function() {
                        f.selectedGif = f.onboarding.getting_started_post_image_id,
                        f.selectGif("#gifHoldergif" + f.selectedGif, !0),
                        g.find(".box")[0].style.opacity = 1
                    }, 0);
                    for (var c = f.onboarding.getting_started_post_image_id_range_start; c <= f.onboarding.getting_started_post_image_id_range_end; c++)
                        f.gifs.push({
                            url: e.AWS_FILE_DIR_BASE + f.onboarding.getting_started_post_image_directory + "/" + c + ".gif",
                            id: "gif" + c,
                            bareId: c
                        });
                    accountName = b.getAccountName(),
                    f.postBody = "Hello team! Sharing my first post on Convo - comment or like below. <a href='javascript:void()' class='cnv-hashtag'>#GettingStarted</a>",
                    a.addEventListener("scroll", f.disableScroll),
                    f.commentEditorCtrl.initialized ? l() : f.commentEditorCtrl.on("initialized", l)
                }
                function l() {
                    f.commentEditorCtrl.activate(f.postBody),
                    setTimeout(function() {
                        f.postBodyOrigional = f.commentEditorCtrl.getContent().trim()
                    }, 0)
                }
                var m = 0
                  , n = 0
                  , o = g.find(".gifsReal");
                f.selectGif = function(a, b) {
                    var c = g.find(a).offset()
                      , e = g.find(".gifsContainer").offset()
                      , h = (o.offset(),
                    0);
                    h = e.left - c.left + 40 > 0 ? 30 : -30,
                    n = m + (e.left - c.left),
                    m = n,
                    d(function() {
                        f.selectingGif = !0
                    }, 0),
                    console.log(a + ": " + n),
                    b ? (o[0].className = "gifsReal noanimation",
                    j()) : o[0].className = "gifsReal",
                    o[0].style.webkitTransform = "translateX(" + (n + h) + "px)",
                    o[0].style.transform = "translateX(" + (n + h) + "px)",
                    o[0].style.MozTransform = "translateX(" + (n + h) + "px)";
                    var k = i();
                    k && $(o).on(k, j),
                    b && j(),
                    f.$broadcast("render")
                }
                ,
                f.disableScroll = function() {
                    a.scrollTo(0, 0)
                }
                ,
                k()
            },
            templateUrl: "onboarding/templates/cnvDemoPost.tpl.html",
            controller: ["$rootScope", "$scope", "ServerComm", "userInfo", "mixpanelService", "onboardingService", function(b, c, d, e, f, g) {
                c.allowSharing = !0,
                c.shareBtnText = "Share this post",
                c.selectingGif = !1,
                c.gifs = [],
                c.postBody = null ,
                c.postBodyOrigional = null ,
                c.selectedGif = null ;
                c.user = e.getUserInfo(),
                c.commentEditorCtrl = {
                    initialized: !1,
                    height: {
                        min: 30,
                        max: 50
                    }
                },
                _.extend(c.commentEditorCtrl, Backbone.Events),
                c.selectRandomGif = function() {
                    f.trackEvent(f.TRY_ANOTHER_CLICKED),
                    c.selectedGif < c.onboarding.getting_started_post_image_id_range_end ? c.selectedGif += 1 : c.selectedGif >= c.onboarding.getting_started_post_image_id_range_end && (c.selectedGif = c.onboarding.getting_started_post_image_id_range_start),
                    c.selectGif("#gifHoldergif" + c.selectedGif)
                }
                ,
                c.share = function() {
                    c.allowSharing = !1,
                    c.shareBtnText = "Sharing...",
                    c.commentEditorCtrl.getContent().trim() != c.postBodyOrigional && f.trackEvent(f.Edit_Welcome_Gif_Post),
                    f.trackEvent(f.Share_Welcome_Gif_Post),
                    c.sharePost()
                }
                ,
                c.close = function() {
                    a.removeEventListener("scroll", c.disableScroll),
                    c.finished(c.stages.cnvDemoPost),
                    c.removeDemoPostWidget()
                }
                ,
                c.sharePost = function() {
                    if (c.commentEditorCtrl.initialized && "" != c.commentEditorCtrl.getContent().trim()) {
                        var e = {
                            method: "createGettingStartedPost",
                            image_id: c.selectedGif,
                            body: c.commentEditorCtrl.getHtmlContent()
                        }
                          , f = d.post("onboarding", e);
                        f.then(function(d) {
                            c.shareBtnText = "Post shared!",
                            c.demoPostAdded = !0,
                            a.removeEventListener("scroll", c.disableScroll),
                            b.$broadcast("pollFeedRequest"),
                            c.finished(c.stages.cnvDemoPost),
                            c.removeDemoPostWidget();
                            var e = g.recordAction("share_a_post_done");
                            e.then(function(a, b) {
                                c.demoPostSharingSuccessful()
                            })
                        })
                    }
                }
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvHomeOnboarding", ["$timeout", "utils", "Groups", "$compile", "$rootScope", function(b, c, d, e, f) {
        return {
            restrict: "AE",
            scope: !0,
            templateUrl: "onboarding/templates/cnvHomeOnboarding.tpl.html",
            link: function(c, d, g) {
                function h() {
                    document.querySelector(".header-bar-container");
                    o._chatMainListIcon = {
                        "class": "top",
                        statement: "Chat with your&#xa;teammates",
                        origional: document.querySelector("#chatUserListMainWindow .chatUserListHeader .chatsIcon"),
                        clone: document.querySelector("#chatUserListMainWindow .chatUserListHeader .chatsIcon").cloneNode(!0)
                    },
                    document.querySelector(".feed-right-panel-wrapper .invite-widget-form-btn") && (o._homeRightPanelInviteButtton = {
                        "class": "bottom",
                        statement: "Invite new teammates",
                        origional: document.querySelector(".feed-right-panel-wrapper .invite-widget-form-btn"),
                        clone: document.querySelector(".feed-right-panel-wrapper .invite-widget-form-btn").cloneNode(!0),
                        "hide-clone": !0,
                        "use-width": !0,
                        "center-text": "Invite"
                    }),
                    o._homeHeaderIconsMenu = {
                        "class": "left",
                        statement: "Invite new teammates",
                        origional: document.querySelector(".onboarding_menu"),
                        clone: document.querySelector(".onboarding_menu").cloneNode(!0),
                        "hide-clone": !0,
                        "use-width": !0
                    },
                    m = Object.keys(o);
                    for (var a, b, c = 0, d = m.length; d > c; ++c) {
                        if (console.log(m[c]),
                        b = o[m[c]].clone,
                        a = o[m[c]].origional.getBoundingClientRect(),
                        n.appendChild(b),
                        $(b).wrap("<div data-message='" + o[m[c]].statement + "' class='icon-wrapper " + o[m[c]]["class"] + "'></div>"),
                        0 === a.top && 0 === a.bottom ? (b.style.position = "fixed",
                        b.style.top = "-10000px",
                        b.style.left = a.left + "px") : (b.style.position = "fixed",
                        b.style.top = a.top + "px",
                        b.style.left = a.left + "px"),
                        o[m[c]].hasOwnProperty("use-width") && (b.style.width = a.width + "px"),
                        o[m[c]].hasOwnProperty("hide-clone") && (b.style.visibility = "hidden"),
                        o[m[c]].hasOwnProperty("center-text")) {
                            var e = document.createElement("div");
                            e.className = "innerContent",
                            e.innerHTML = o[m[c]]["center-text"],
                            b.parentNode.appendChild(e)
                        }
                        o[m[c]].hasOwnProperty("color") && (b.style.color = o[m[c]].color),
                        function(a) {
                            setTimeout(function() {
                                var b = o[m[a]].clone.getBoundingClientRect();
                                o[m[a]].clone.parentNode.style.top = b.top - 10 + "px",
                                o[m[a]].clone.parentNode.style.left = b.left - 10 + "px",
                                o[m[a]].clone.parentNode.style.width = b.width + 20 + "px",
                                o[m[a]].clone.parentNode.style.height = b.height + 20 + "px"
                            }, 0)
                        }(c)
                    }
                    j()
                }
                function i() {
                    o = [],
                    o._inlineInsert = {
                        "class": "bottom",
                        statement: "This is the compose box",
                        origional: document.querySelector("#inline-insert-files-paste-target"),
                        clone: document.querySelector("#inline-insert-files-paste-target").cloneNode(!0),
                        "use-width": !0
                    },
                    m = Object.keys(o);
                    for (var a, b, d = 0, f = m.length; f > d; ++d) {
                        b = o[m[d]].clone,
                        a = o[m[d]].origional.getBoundingClientRect();
                        var g = document.createElement("div");
                        g.setAttribute("ng-click", "done()"),
                        g.setAttribute("class", "icon-wrapper bgwhite bigTitle " + o[m[d]]["class"]),
                        g.style.cursor = "pointer",
                        g = e(g)(c),
                        $(g).append(b),
                        $(n).append(g),
                        b.parentNode.o,
                        b.style.position = "fixed",
                        b.style.top = a.top + "px",
                        b.style.left = a.left + "px",
                        o[m[d]].hasOwnProperty("use-width") && (b.style.width = a.width + "px"),
                        o[m[d]].hasOwnProperty("hide-clone") && (b.style.visibility = "hidden"),
                        o[m[d]].hasOwnProperty("color") && (b.style.color = o[m[d]].color),
                        function(a) {
                            setTimeout(function() {
                                var b = o[m[a]].clone.getBoundingClientRect();
                                o[m[a]].clone.parentNode.style.top = b.top + "px",
                                o[m[a]].clone.parentNode.style.left = b.left + "px",
                                o[m[a]].clone.parentNode.style.width = b.width + "px",
                                o[m[a]].clone.parentNode.style.height = b.height + "px",
                                o[m[a]].clone.parentNode.setAttribute("data-message", o[m[a]].statement)
                            }, 0)
                        }(d)
                    }
                    setTimeout(function() {
                        var a = document.createElement("div");
                        a.innerHTML = '<button class="btn btn-primary btn-block" ng-click="done()">Let\'s share a quick post!</button>',
                        a.id = "step2Btn";
                        var b = o._inlineInsert.clone
                          , d = b.getBoundingClientRect();
                        $(n).append(e(a)(c)),
                        a.style.position = "fixed",
                        a.style.width = "250px",
                        a.style.top = d.bottom + 140 + "px",
                        a.style.left = d.left + b.offsetWidth / 2 - a.offsetWidth / 2 + "px"
                    }, 0)
                }
                function j(a) {
                    if (1 == c.step) {
                        var b = document.querySelector(".on-boarding-public-private-group-placeholder-in-panel")
                          , d = document.querySelector(".on-boarding-public-private-group-placeholder-in-panel").cloneNode(!0)
                          , e = b.getBoundingClientRect();
                        p.elem = b,
                        p.cloneElem = d;
                        var f = d.querySelector(".on-boarding-public-group-placeholder-in-panel").cloneNode(!0)
                          , g = d.querySelector(".on-boarding-private-group-placeholder-in-panel").cloneNode(!0);
                        f.style.display = "block",
                        g.style.display = "block",
                        g.className = "cnv-icons-40 privateGroup_icon-white on-boarding-private-group-placeholder-in-panel",
                        f.className = "cnv-icons-40 Icon1_PublicChannel-01-white on-boarding-public-group-placeholder-in-panel",
                        p.publicLabel = f,
                        p.privateLabel = g,
                        d.innerHTML = "",
                        d.appendChild(g),
                        d.appendChild($("<span class='private-group-label'>Private Groups</span>")[0]),
                        d.appendChild(f),
                        d.appendChild($("<span class='public-group-label'>Public Groups</span>")[0]),
                        n.appendChild(d),
                        $(d).wrap("<div class='icon-wrapper top topSmall' data-message='Create private or&#xa;public groups'></div>"),
                        d.style.position = "fixed",
                        d.style.top = e.top + "px",
                        d.style.left = e.left + "px",
                        d.parentNode.style.top = e.top - 10 + "px",
                        d.parentNode.style.left = e.left - 10 + "px",
                        d.parentNode.style.width = e.width + 20 + "px",
                        d.parentNode.style.height = "320px"
                    }
                }
                function k() {
                    for (var a, b, d = 0, e = m.length; e > d; ++d)
                        b = o[m[d]].clone,
                        a = o[m[d]].origional.getBoundingClientRect(),
                        null  != b.parentNode && (0 === a.top && 0 === a.bottom ? (b.style.position = "fixed",
                        b.style.top = "-10000px",
                        b.style.left = a.left + "px") : (b.style.position = "fixed",
                        b.style.top = a.top + "px",
                        b.style.left = a.left + "px"),
                        o[m[d]].hasOwnProperty("use-width") && (b.style.width = a.width + "px"),
                        o[m[d]].hasOwnProperty("hide-clone") && (b.style.visibility = "hidden"),
                        o[m[d]].hasOwnProperty("color") && (b.style.color = o[m[d]].color),
                        function(a) {
                            var b, d, e = o[m[a]].clone.getBoundingClientRect();
                            2 == c.step ? (b = 0,
                            d = 0) : (b = 10,
                            d = 20),
                            o[m[a]].clone.parentNode.style.top = e.top - b + "px",
                            o[m[a]].clone.parentNode.style.left = e.left - b + "px",
                            o[m[a]].clone.parentNode.style.width = e.width + d + "px",
                            o[m[a]].clone.parentNode.style.height = e.height + d + "px"
                        }(d));
                    if (1 == c.step) {
                        if (null  != p.elem) {
                            var b = p.elem;
                            a = b.getBoundingClientRect(),
                            cloneElem = p.cloneElem;
                            p.publicLabel,
                            p.privateLabel;
                            cloneElem.style.position = "fixed",
                            cloneElem.style.top = a.top + "px",
                            cloneElem.style.left = a.left + "px",
                            cloneElem.parentNode.style.top = a.top - 10 + "px",
                            cloneElem.parentNode.style.left = a.left - 10 + "px",
                            cloneElem.parentNode.style.width = a.width + 20 + "px",
                            cloneElem.parentNode.style.height = "320px"
                        }
                    } else if (2 == c.step) {
                        var f = document.querySelector("#step2Btn");
                        if (f) {
                            var g = o._inlineInsert.clone
                              , a = g.getBoundingClientRect();
                            f.style.position = "fixed",
                            f.style.width = "250px",
                            f.style.top = a.bottom + 150 + "px",
                            f.style.left = a.left + g.offsetWidth / 2 - f.offsetWidth / 2 + "px"
                        }
                    }
                }
                function l() {
                    a.scrollTo(0, 0)
                }
                var m, n = d[0].querySelector(".home-dim-overlay"), o = {}, p = {};
                b(h, 0),
                a.addEventListener("resize", k),
                a.addEventListener("scroll", l),
                f.$on("filterChange", function() {
                    setTimeout(k, 0)
                }),
                c["continue"] = function() {
                    n.innerHTML = "",
                    c.step = 2,
                    i()
                }
                ,
                c.done = function() {
                    a.removeEventListener("resize", k),
                    a.removeEventListener("scroll", l),
                    c.finished(c.stages.cnvHomeOnboarding)
                }
            },
            controller: ["$scope", function(a) {
                a.active = !0,
                a.step = 1
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvOnboardingManager", ["config", "$timeout", "utils", "Groups", "$compile", "Groups", "$rootScope", "onboardingService", "Feed", "Comments", "homeViewStateInfo", "userInfo", "$templateCache", "bannerService", "mixpanelService", function(b, c, d, e, f, e, g, h, i, j, k, l, m, n, o) {
        return {
            restrict: "AE",
            scope: !1,
            templateUrl: "onboarding/templates/cnvOnBoardingManager.tpl.html",
            link: function(c, d, e) {
                function k() {
                    if (c.onboarding && c.onboarding.onboarding_checklist) {
                        var d = c.onboarding.onboarding_checklist
                          , e = l.isGuestUser();
                        return h.setChecklist(d),
                        p(d),
                        a.setTimeout(c.loadOnboardingTooltips, 0),
                        a.setTimeout(r, 0),
                        1 != c.onboarding.first_login || b.IS_NATIVE ? void (0 == d.onboarding_dismissed && (0 == d.learn_my_feed_done ? a.setTimeout(function() {
                            w(null , !0)
                        }, 0) : 0 != d.create_a_group_done || e ? 0 == d.share_a_post_done ? a.setTimeout(function() {
                            B(null , !0)
                        }, 3e3) : 0 == d.downloaded_apps ? a.setTimeout(function() {
                            C(null , !0)
                        }, 3e3) : 0 != d.connect_to_other_tools_done || e || a.setTimeout(function() {
                            D(null , !0)
                        }, 3e3) : a.setTimeout(function() {
                            A(null , !0)
                        }, 3e3))) : void v()
                    }
                }
                function p(a, b) {
                    var c = Object.keys(a);
                    if (l.isGuestUser()) {
                        if (0 == a.learn_my_feed_done || 0 == a.share_a_post_done || 0 == a.downloaded_apps)
                            return b || h.changeState(!0),
                            !0
                    } else
                        for (var d = 0; d < c.length; d++)
                            if ("onboarding_dismissed" != c[d] && "0" == a[c[d]])
                                return b || h.changeState(!0),
                                !0;
                    return !1
                }
                function q(b, d) {
                    var e = h.getOnboardingState();
                    e.then(function(b, e) {
                        c.onboarding.onboarding_checklist = b.data.onboarding_checklist,
                        c.$broadcast("cnvOnboarding:initializeChecklist", c.onboarding.onboarding_checklist),
                        d ? p(h.getChecklist()) || a.setTimeout(function() {
                            t(),
                            c.$$phase || c.$digest()
                        }, 2e3) : a.setTimeout(s, 1e3)
                    })
                }
                function r() {
                    c.$broadcast("cnvOnboarding:initializeChecklist", c.onboarding.onboarding_checklist)
                }
                function s() {
                    function a() {
                        var a = h.getLastPlayedStep()
                          , c = 0
                          , e = ["learn_my_feed_done", "create_a_group_done", "share_a_post_done", "downloaded_apps", "connect_to_other_tools_done"];
                        switch (a) {
                        case "learn_my_feed":
                            c = 0;
                            break;
                        case "create_group":
                            c = 1;
                            break;
                        case "share_post":
                            c = 2;
                            break;
                        case "download_apps":
                            c = 3;
                            break;
                        case "integrations":
                            c = 4
                        }
                        for (var f = c; f < e.length; f++) {
                            if (d && 0 == b[e[f]] && ("share_a_post_done" == e[f] || "downloaded_apps" == e[f]))
                                return e[f];
                            if (!d && 0 == b[e[f]])
                                return e[f]
                        }
                    }
                    var b = h.getChecklist()
                      , d = (Object.keys(b),
                    l.isGuestUser());
                    h.getLastPlayedStep();
                    if (p(b, !0)) {
                        var e = a();
                        switch (e) {
                        case "learn_my_feed_done":
                            x(null , !0);
                            break;
                        case "create_a_group_done":
                            A(null , !0);
                            break;
                        case "share_a_post_done":
                            B(null , !0);
                            break;
                        case "downloaded_apps":
                            C(null , !0);
                            break;
                        case "connect_to_other_tools_done":
                            D(null , !0)
                        }
                    } else
                        t(),
                        c.$$phase || c.$digest()
                }
                function t() {
                    I(),
                    h.changeState(!1)
                }
                function u() {
                    N = !0,
                    c.$broadcast("cnvOnboarding:removeOnboardingFeedData")
                }
                function v() {
                    d.append(f("<cnv-onboarding-download-apps-advert></cnv-onboarding-download-apps-advert")(c.$new()))
                }
                function w(a, b) {
                    G("Learn about Feed", b ? "Auto" : "Click"),
                    c.$broadcast("cnvOnboarding:startCnvPilotIntro"),
                    c.$broadcast("cnvOnboarding:setOnboardingFeedData")
                }
                function x(b, d, e) {
                    c.$broadcast("cnvOnboarding:setOnboardingFeedData"),
                    c.$broadcast("cnvOnboarding:showOverlay", !0),
                    c.$broadcast("cnvOnboardingTooltips:clearTooltips"),
                    h.setLastPlayedStep("learn_my_feed"),
                    h.feedOnboardingStatus(!0),
                    e || G("Learn about Feed", d ? "Auto" : "Click"),
                    I(!0);
                    var f = h.createFirstPilotPost();
                    f.then(function(b, d) {
                        if (b.hasOwnProperty("data")) {
                            for (var e in b.data.users) {
                                var f = {};
                                f[e] = b.data.users[e],
                                i.setUsers(f)
                            }
                            K = b.data.feed_items[0],
                            j.updateCommentsDataReceivedInFeedFetch(K.resource_id, K.app_instance_id, K.conversations_count, K.conversations),
                            c.$broadcast("cnvOnboarding:addFeedItems", b.data.feed_items),
                            a.setTimeout(function() {
                                $(".filtered-feed-cont").addClass("onboarding-feed-items"),
                                c.$broadcast("cnvOnboarding:disableClicksOnFeedItems")
                            }, 0),
                            J = a.setTimeout(function() {
                                var b = h.createSecondPilotPost();
                                b.then(function(b, d) {
                                    if (b.hasOwnProperty("data")) {
                                        for (var e in b.data.users) {
                                            var f = {};
                                            f[e] = b.data.users[e],
                                            i.setUsers(f)
                                        }
                                        L = b.data.feed_items[0],
                                        c.$broadcast("cnvOnboarding:addFeedItems", b.data.feed_items),
                                        a.setTimeout(function() {
                                            $("#" + K.feed_id).css("top", "117px"),
                                            c.$broadcast("cnvOnboarding:disableClicksOnFeedItems"),
                                            a.setTimeout(function() {
                                                $(".filtered-feed-cont").removeClass("onboarding-feed-items")
                                            }, 1e3)
                                        }, 0),
                                        j.updateCommentsDataReceivedInFeedFetch(L.resource_id, L.app_instance_id, L.conversations_count, L.conversations),
                                        J = a.setTimeout(function() {
                                            c.$broadcast("cnvOnboarding:showAddCommentTooltip", L.feed_id),
                                            c.$broadcast("cnvOnboarding:disableClicksOnFeedItems")
                                        }, 4e3)
                                    }
                                }, F)
                            }, 4e3)
                        }
                    }, F)
                }
                function y() {
                    J = a.setTimeout(function() {
                        var b = h.createFirstPilotComment(L.feed_id);
                        b.then(function(b, d) {
                            b.data && (c.$emit("refreshFeed"),
                            c.$broadcast("cnvOnboarding:incrementConversationsCount", L.feed_id),
                            M = b.data.uid,
                            c.$$phase || g.$digest(),
                            J = a.setTimeout(function() {
                                c.$broadcast("cnvOnboarding:highlightTextAndShowTooltip", b.data.uid)
                            }, 4e3))
                        }, F)
                    }, 1e3)
                }
                function z(b, d) {
                    J = a.setTimeout(function() {
                        j.markCommentsAsPosted(L.app_instance_id, L.resource_id),
                        c.$broadcast("cnvComment:removeCommentAnimFlags", L.feed_id);
                        var b = h.createSecondPilotComment(L.feed_id, d);
                        b.then(function(b, d) {
                            b.data && (c.$emit("refreshFeed"),
                            c.$broadcast("cnvOnboarding:incrementConversationsCount", L.feed_id),
                            c.$$phase || g.$digest(),
                            a.setTimeout(function() {
                                c.$broadcast("render")
                            }, 1e3),
                            J = a.setTimeout(function() {
                                j.markCommentsAsRead(L.app_instance_id, L.resource_id),
                                c.$broadcast("cnvOnboarding:removeOnboardingFeedData"),
                                c.$broadcast("render"),
                                c.$broadcast("cnvOnboarding:hideOverlay"),
                                c.$broadcast("cnvOnboarding:enableClicksOnFeedItems"),
                                I(!1, !0),
                                a.setTimeout(function() {
                                    q()
                                }, 4e3),
                                h.feedOnboardingStatus(!1)
                            }, 4e3))
                        }, F)
                    }, 2e3)
                }
                function A(a, b) {
                    h.setLastPlayedStep("create_group"),
                    G("Create a group", b ? "Auto" : "Click"),
                    c.$broadcast("showHideHeaderFloatingColumn", !0),
                    a ? c.$broadcast("cnvOnboardingTooltips:createGroupTooltip:2") : c.$broadcast("cnvOnboardingTooltips:createGroupTooltip:1")
                }
                function B(a, b) {
                    h.setLastPlayedStep("share_post"),
                    G("Share a post", b ? "Auto" : "Click"),
                    c.$broadcast("showHideHeaderFloatingColumn", !0),
                    a ? (c.$broadcast("cnvOnboardingTooltips:clearTooltips"),
                    c.loadDemoPostWidget()) : c.$broadcast("cnvOnboardingTooltips:sharePostTooltip")
                }
                function C(a, b) {
                    h.setLastPlayedStep("download_apps"),
                    G("Download apps", b ? "Auto" : "Click"),
                    a ? c.$broadcast("cnvOnboardingTooltips:showDownloadAppsModal") : (c.$broadcast("showHideHeaderFloatingColumn", !0),
                    c.$broadcast("cnvOnboardingTooltips:showDownloadAppsTooltip"))
                }
                function D(a, b) {
                    h.setLastPlayedStep("integrations"),
                    G("Connect to other tools", b ? "Auto" : "Click"),
                    c.$broadcast("showHideHeaderFloatingColumn", !0),
                    a ? c.$broadcast("cnvOnboardingTooltips:openSetupIntegrations") : c.$broadcast("cnvOnboardingTooltips:showIntegrationsTooltip");
                }
                function E() {
                    0 == h.getChecklist().downloaded_apps ? C(null , !0) : 0 != h.getChecklist().connect_to_other_tools_done || l.isGuestUser() ? h.onboardingDismissedCallback() : D(null , !0)
                }
                function F() {
                    n.showBanner('There seems to be something wrong with your internet connection. <a href="javascript:void(0)">Click here</a> to dismiss this tour for now.<br />You can resume this tour at any time by selecting an option from <strong>Explore Convo</strong> checklist.', !0, !1, c.dismissOnboardingBecauseOfNetworkFailure)
                }
                function G(a, b) {
                    o.trackEvent(o.GETTING_STARTED_STEP_LAUNCH, {
                        Type: a,
                        Trigger: b
                    })
                }
                function H() {
                    if (0 == h.getChecklist().connect_to_other_tools_done) {
                        var a = h.recordAction("connect_to_other_tools_done");
                        a.then(function() {
                            q()
                        })
                    }
                }
                function I(a, b) {
                    if (a) {
                        var e = "onboarding/templates/cnvOnboardingDismissBanner.tpl.html"
                          , g = f(m.get(e));
                        d.append(g(c))
                    } else
                        d.find(".onboarding-dismiss-banner").remove(),
                        b || (h.recordAction("onboarding_dismissed"),
                        o.trackEvent(o.X_OUT_GETTING_STARTED, {
                            Type: "Learn about feed",
                            Trigger: "Click"
                        }))
                }
                var J;
                c.loadHomeOnboarding = function() {
                    c.childScopes[c.onBoardingStage] = c.$new();
                    var a = f("<div id='onboardingStage" + c.onBoardingStage + "'><cnv-home-onboarding ></cnv-home-onboarding></div>")(c.childScopes[c.onBoardingStage]);
                    $(d[0].querySelector("div")).append(a)
                }
                ,
                c.loadDemoPostWidget = function() {
                    var a = 2;
                    c.childScopes[a] = c.$new();
                    var b = f("<div id='onboardingStage" + a + "'><cnv-demo-post></cnv-demo-post></div>")(c.childScopes[a]);
                    $(d[0].querySelector("div")).append(b)
                }
                ,
                c.loadOnboardingTooltips = function() {
                    c.childScopes[c.onBoardingStage] = c.$new();
                    var a = f("<div id='onboardingStage" + c.onBoardingStage + "'><cnv-onboarding-tooltips></cnv-onboarding-tooltips></div>")(c.childScopes[c.onBoardingStage]);
                    $(d[0].querySelector("div")).append(a)
                }
                ,
                c.finished = function(a) {
                    c.demoPostAdded = c.childScopes[a].demoPostAdded,
                    c.childScopes[a].$destroy();
                    var b = d[0].querySelector("#onboardingStage" + a);
                    b.innerHTML = "",
                    2 != a || c.demoPostAdded || 1 != h.getChecklist().onboarding_dismissed || h.onboardingDismissedCallback()
                }
                ,
                c.removeDemoPostWidget = function(a) {
                    d.find("#onboardingStage2").remove()
                }
                ,
                c.demoPostSharingSuccessful = function() {
                    0 == c.onboarding.uploaded_profile_pic ? (q(null , !0),
                    a.setTimeout(function() {
                        c.$broadcast("cnvOnboardingTooltips:showProfilePicTooltip")
                    }, 2e3)) : q()
                }
                ,
                k(),
                a.launchOnBoarding = function(a, b) {
                    if (a)
                        return void (1 == b ? w() : 2 == b ? A() : 3 == b ? B() : 4 == b ? C() : 5 == b && D());
                    for (var e = Object.keys(c.childScopes), f = 0, h = e.length; h > f; ++f)
                        c.childScopes[e[f]].$destroy();
                    d[0].innerHTML = '<div><div id="cnvOnBoardingClonedDocument"></div><div id="cnvOnBoardingManager"></div><img ng-src="{{firstGifURL}}" class="ng-hide" /></div>',
                    c.onBoardingStage = 0,
                    1 == onbState ? (c.onboarding.first_login = 1,
                    c.onboarding.second_login = 0) : 2 == onbState && (c.onboarding.first_login = 0,
                    c.onboarding.second_login = 1),
                    profile && (c.onboarding.uploaded_profile_pic = !1),
                    inlineInsert && (c.onboarding.used_inline_insert = 0,
                    g.login_data.onboarding_state.used_inline_insert = 0),
                    k()
                }
                ;
                var K = null 
                  , L = null 
                  , M = null 
                  , N = !1;
                c.onDismissOnboardingClick = function() {
                    I(),
                    J && a.clearTimeout(J),
                    h.feedOnboardingStatus(!1),
                    c.$broadcast("cnvOnboarding:removeOnboardingFeedData"),
                    c.$broadcast("cnvComment:removeHighlightTextAndShowTooltip", M),
                    c.$broadcast("cnvOnboarding:hideOverlay"),
                    c.$broadcast("cnvOnboarding:enableClicksOnFeedItems")
                }
                ,
                h.on("cnvOnboarding:updateOnboardingChecklist", q),
                c.$on("cnvOnboarding:updateOnboardingChecklist", q),
                c.$on("cnvOnboarding:cnvPilotIntroComplete", x),
                c.$on("cnvOnboarding:cnvPilotFetchFirstComment", y),
                c.$on("cnvOnboarding:cnvPilotFetchSecondComment", z),
                c.$on("cnvOnboarding:startPilotIntro", w),
                c.$on("cnvOnboarding:openSharePostWidget", c.loadDemoPostWidget),
                c.$on("cnvOnboarding:cnvPilotIntroDismissed", u),
                c.$on("cnvOnboarding:uploadProfileTooltipFromFeedDismissed", E),
                c.$on("cnvOnboarding:integrationsTooltipDisplayed", H),
                c.$on("cnvOnboarding:startFeedOnboarding", x),
                c.$on("cnvOnboarding:startCreateGroupOnboarding", A),
                c.$on("cnvOnboarding:startSharePostOnboarding", B),
                c.$on("cnvOnboarding:startDownloadAppsOnboarding", C),
                c.$on("cnvOnboarding:startIntegrationsOnboarding", D)
            },
            controller: ["$scope", function(a) {
                a.onBoardingStage = 0,
                a.childScopes = [],
                a.stages = {
                    initial: 0,
                    cnvHomeOnboarding: 1,
                    cnvDemoPost: 2,
                    cnvOnboardingTooltips: 3
                },
                a.demoPostAdded = !1,
                a.onboarding = g.login_data.onboarding_state,
                a.proceedToNextStage = function() {
                    a.onBoardingStage == a.stages.initial ? (a.onBoardingStage = a.stages.cnvHomeOnboarding,
                    a.loadHomeOnboarding()) : a.onBoardingStage == a.stages.cnvHomeOnboarding ? (a.onBoardingStage = a.stages.cnvDemoPost,
                    a.loadDemoPostWidget()) : a.onBoardingStage == a.stages.cnvDemoPost && (a.onBoardingStage = a.stages.cnvOnboardingTooltips,
                    a.loadOnboardingTooltips())
                }
                ,
                a.firstLoginSequence = function() {
                    a.proceedToNextStage()
                }
                ,
                a.secondLoginSequence = function() {
                    a.onBoardingStage = a.stages.cnvDemoPost,
                    a.proceedToNextStage()
                }
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvOnboardingOverlay", [function() {
        return {
            restrict: "C",
            link: function(b, c, d) {
                function e(a, b) {
                    c.append(g),
                    k = c.find(h),
                    b || k.addClass(i),
                    k.css("position", "absolute").css("left", 0).css("top", 0).css("right", 0).css("bottom", 0),
                    k.css("background", "white").css("opacity", .85)
                }
                function f(b, d) {
                    k ? (d || k.addClass(j),
                    a.setTimeout(function() {
                        k.remove()
                    }, 1e3)) : c.find(h).remove()
                }
                var g = '<div class="cnv-onboarding-overlay-div"></div>'
                  , h = ".cnv-onboarding-overlay-div"
                  , i = "anim-in"
                  , j = "anim-out"
                  , k = null ;
                b.$on("cnvOnboarding:showOverlay", e),
                b.$on("cnvOnboarding:hideOverlay", f)
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvOnboardingTooltips", ["$timeout", "utils", "Groups", "$compile", "alertsService", "utils", "$rootScope", "localStore", "onboardingService", function(b, c, d, e, f, c, g, h, i) {
        return {
            restrict: "AE",
            scope: !0,
            templateUrl: "onboarding/templates/cnvOnboardingTooltips.tpl.html",
            link: function(b, d, h) {
                function j() {
                    for (var a, c, d, e = 0, f = m.length; f > e; ++e)
                        c = m[e].elem,
                        d = m[e].mainElement,
                        a = d.getBoundingClientRect(),
                        0 !== a.top || 0 !== a.bottom ? "left" == m[e].position ? (c.style.top = a.top + d.offsetHeight / 2 - c.offsetHeight / 2 + "px",
                        c.style.left = a.left - c.offsetWidth - 25 + "px") : "bottom" == m[e].position ? (c.style.top = a.bottom + 20 + "px",
                        c.style.left = a.left + d.offsetWidth / 2 - c.offsetWidth / 2 + "px") : "bottom-left" == m[e].position ? (c.style.top = a.bottom + 30 + "px",
                        c.style.left = a.left - c.offsetWidth + 39 + "px") : "top" == m[e].position ? (c.style.top = a.top - c.offsetHeight - 15 + "px",
                        c.style.left = a.left + d.offsetWidth / 2 - c.offsetWidth / 2 + "px") : "bottom-left-middle" == m[e].position ? (c.style.top = a.bottom + 10 + "px",
                        c.style.left = a.left - c.offsetWidth / 2 + 50 + "px") : "left-top" == m[e].position ? (c.style.top = a.top + d.offsetHeight / 2 - 32 + "px",
                        c.style.left = a.left - c.offsetWidth - 25 + "px") : "right-top" == m[e].position ? (c.style.top = a.top + d.offsetHeight - 42 + "px",
                        c.style.left = a.left + d.offsetWidth + 30 + "px") : "right-bottom" == b.tooltips[b.currentTooltip].position && (c.style.top = a.top - (c.offsetHeight - 42) + "px",
                        c.style.left = a.left + d.offsetWidth + 30 + "px") : n(c)
                }
                function k(a) {
                    var c = "home/userView/centerPanelWidgets/profilePictureModal.tpl.html"
                      , d = "ProfilePictureModalCtrl"
                      , e = {
                        startWebcam: function() {
                            return !1
                        },
                        file: function() {
                            return a
                        }
                    }
                      , g = f.customModal(c, d, e, "cnvUserProfilePictureModal", !0);
                    g.result.then(function(a) {
                        b.$emit("userProfilePictureUpdated"),
                        b.ProfileUploadTooltip_next()
                    }, function() {
                        b.ProfileUploadTooltip_next()
                    })
                }
                function l() {
                    b.onboarding && (1 == b.onboarding.first_login ? 0 == b.onboarding.uploaded_profile_pic : 1 == b.onboarding.second_login && 1 == i.getChecklist().learn_my_feed_done && 0 == i.getChecklist().downloaded_apps && b.openDownloadAppsModal(),
                    1 == b.onboarding.onboarding_checklist.share_a_post_done && !b.onboarding.uploaded_profile_pic,
                    b.showTooltip())
                }
                var m = (d[0].querySelector(".home-dim-overlay"),
                []);
                b.activeTooltips = m,
                b["continue"] = function() {
                    b.finished(b.stages.cnvHomeOnboarding)
                }
                ,
                b.closeTooltip = function(a, c, d) {
                    b.showingTooltips = !1,
                    b.toggleInlineInsertArea(!1);
                    var e = $(a.target).closest(".onboardingToolTips")
                      , f = e[0].id.split("_")
                      , g = f[1];
                    b.tooltips[g].elem.remove(),
                    "function" == typeof b[c] ? b[c](d) : b.showTooltip()
                }
                ;
                var n = function(a) {
                    a.remove()
                }
                ;
                b.showTooltip = function() {
                    if (0 != b.tooltips.length && 1 != b.showingTooltips) {
                        if (null  == b.currentTooltip)
                            b.currentTooltip = 0;
                        else {
                            if (!(b.tooltips.length > b.currentTooltip + 1))
                                return;
                            b.currentTooltip += 1
                        }
                        var a = "onboardingId_" + b.currentTooltip;
                        if (b.tooltips[b.currentTooltip].freezInlineInsert && b.toggleInlineInsertArea(!0),
                        b.showingTooltips = !0,
                        elem = document.createElement("div"),
                        elem.setAttribute("id", a),
                        elem.innerHTML = b.tooltips[b.currentTooltip].content,
                        mainElement = $(document).find("." + b.tooltips[b.currentTooltip]["class"]).filter(":visible")[0],
                        !mainElement)
                            return void b.showTooltip();
                        if (rect = mainElement.getBoundingClientRect(),
                        0 === rect.top && 0 === rect.bottom)
                            return void b.showTooltip();
                        elem.style.opacity = 0;
                        var c = e(elem)(b);
                        b.tooltips[b.currentTooltip].elem = c,
                        d.append(c),
                        elem.style.position = "fixed",
                        elem.style.width = b.tooltips[b.currentTooltip].width + "px",
                        b.tooltips[b.currentTooltip].height && (elem.style.height = b.tooltips[b.currentTooltip].height + "px"),
                        b.tooltips[b.currentTooltip].zIndex && (elem.style.zIndex = b.tooltips[b.currentTooltip].zIndex),
                        "left" == b.tooltips[b.currentTooltip].position ? (elem.setAttribute("class", "onboardingToolTips left"),
                        elem.style.top = rect.top + mainElement.offsetHeight / 2 - elem.offsetHeight / 2 + "px",
                        elem.style.left = rect.left - elem.offsetWidth - 25 + "px") : "bottom" == b.tooltips[b.currentTooltip].position ? (elem.setAttribute("class", "onboardingToolTips bottom"),
                        elem.style.top = rect.bottom + 20 + "px",
                        elem.style.left = rect.left + mainElement.offsetWidth / 2 - elem.offsetWidth / 2 + "px") : "bottom-left" == b.tooltips[b.currentTooltip].position ? (elem.setAttribute("class", "onboardingToolTips bottom-left"),
                        elem.style.top = rect.bottom + 30 + "px",
                        elem.style.left = rect.left - elem.offsetWidth + 39 + "px") : "top" == b.tooltips[b.currentTooltip].position ? (elem.setAttribute("class", "onboardingToolTips top"),
                        elem.style.top = rect.top - elem.offsetHeight - 15 + "px",
                        elem.style.left = rect.left + mainElement.offsetWidth / 2 - elem.offsetWidth / 2 + "px") : "bottom-left-middle" == b.tooltips[b.currentTooltip].position ? (elem.setAttribute("class", "onboardingToolTips bottom"),
                        elem.style.top = rect.bottom + 10 + "px",
                        elem.style.left = rect.left - elem.offsetWidth / 2 + 50 + "px") : "left-top" == b.tooltips[b.currentTooltip].position ? (elem.setAttribute("class", "onboardingToolTips left-top"),
                        elem.style.top = rect.top + mainElement.offsetHeight / 2 - 32 + "px",
                        elem.style.left = rect.left - elem.offsetWidth - 25 + "px") : "right-top" == b.tooltips[b.currentTooltip].position ? (elem.setAttribute("class", "onboardingToolTips right-top"),
                        elem.style.top = rect.top + mainElement.offsetHeight - 42 + "px",
                        elem.style.left = rect.left + mainElement.offsetWidth + 30 + "px") : "right-bottom" == b.tooltips[b.currentTooltip].position && (elem.setAttribute("class", "onboardingToolTips right-bottom"),
                        elem.style.top = rect.top - (elem.offsetHeight - 42) + "px",
                        elem.style.left = rect.left + mainElement.offsetWidth + 30 + "px"),
                        m.push({
                            mainElement: mainElement,
                            elem: elem,
                            position: b.tooltips[b.currentTooltip].position
                        }),
                        setTimeout(function() {
                            elem.style.opacity = 1
                        }, 0)
                    }
                }
                ,
                b.clearTooltips = function() {
                    for (var a = 0, c = m.length; c > a; ++a)
                        m[a].elem.style.opacity = 0,
                        $(m[a].elem).css("pointer-events", "none");
                    b.showingTooltips = !1
                }
                ,
                a.addEventListener("resize", j),
                a.addEventListener("scroll", j),
                a.addEventListener("mousewheel", j),
                a.addEventListener("mouseup", j),
                g.$on("filterChange", function() {
                    setTimeout(j, 0)
                });
                var o = d.find("#profileImageUpload_onboarding");
                o.on("change", function(a) {
                    this.files.length > 0 && k(this.files[0])
                }),
                b.openFilePicker = function() {
                    c.fireEvent(o[0], "click")
                }
                ,
                b.isElemInDOM = function(a) {
                    var b = document.querySelector("." + a);
                    return b ? (rect = b.getBoundingClientRect(),
                    0 === rect.top && 0 === rect.bottom ? !1 : !0) : !1
                }
                ,
                b.getItemPosition = function(a) {
                    var b = document.querySelector("." + a);
                    return b ? (rect = b.getBoundingClientRect(),
                    rect) : !1
                }
                ,
                setTimeout(function() {
                    l()
                }, 5e3),
                b.$on("cnvOnboardingTooltips:clearTooltips", b.clearTooltips),
                i.isOnboardingStepsCompleted() || 1 === i.getChecklist().onboarding_dismissed ? b.showUpgradeToolTip() : i.on("cnvOnboarding:showUpgradeTooltip", b.showUpgradeToolTip)
            },
            controller: ["$scope", "ServerComm", "config", "AppLinks", "mixpanelService", "settingsService", "$location", "$rootScope", "userInfo", "accountInfo", "onboardingService", function(c, d, e, g, i, j, k, l, m, n, o) {
                function p(a) {
                    for (var b = 0; b < c.tooltips.length; b++)
                        if (c.tooltips[b]["class"] == a)
                            return !0;
                    return !1
                }
                function q() {
                    var a = {
                        method: "recordAction",
                        action: "chat_window_giphy_on_boarding_done"
                    };
                    d.post("onboarding", a)
                }
                function r() {
                    var a = {
                        method: "recordAction",
                        action: "inline_insert_giphy_on_boarding_done"
                    };
                    d.post("onboarding", a)
                }
                function s() {
                    var a = {
                        method: "recordAction",
                        action: "video_playback_tooltip_shown"
                    };
                    d.post("onboarding", a);
                    c.onboarding.video_playback_tooltip_shown = 1
                }
                function t() {
                    c.onboarding.show_sharing_options_tooltip ? j.getGeneralSettings().then(function(a) {
                        if (a.groups[a.sharing_options_list[0].share_to].sub_type)
                            c.pushGeneralGroupTooltip();
                        else {
                            var b = a.groups[a.sharing_options_list[0].share_to].title;
                            c.pushCustomGroupTooltip(b)
                        }
                        c.showAddControlsTooltip(),
                        c.showTooltip()
                    }) : (c.pushGroupChangedTooltip(),
                    c.showAddControlsTooltip(),
                    c.showGiphyTooltipInInlineInsert(),
                    c.showVideoPlaybackTooltipInInlineInsert(),
                    c.showTooltip())
                }
                function u() {
                    var a = {
                        method: "recordAction",
                        action: "video_conf_tooltip_shown"
                    };
                    d.post("onboarding", a)
                }
                function v() {
                    c.showGiphyTooltip()
                }
                function w() {
                    c.showVideoCallTooltip()
                }
                function x() {
                    return $(document).find(".left-panel-wrapper-slim").is(":visible")
                }
                c.active = !0,
                c.showingInlineInsertTooltips = !1,
                c.showingTooltips = !1,
                c.tooltips = [],
                c.currentTooltip = null ;
                var y = "inline_insert_giphy_on_boarding_done"
                  , z = "chat_window_giphy_on_boarding_done"
                  , A = g;
                navigator.platform.toUpperCase().indexOf("MAC") >= 0 && !e.IS_NATIVE ? c.showDesktopAppTooltip = !0 : c.showDesktopAppTooltip = !1,
                c.toggleInlineInsertArea = function(a) {
                    c.onBoarding_info.preventInlineInsertCollapse = a,
                    c.showingInlineInsertTooltips = a
                }
                ,
                c.pushDownloadTooltip = function() {
                    if (c.isElemInDOM("downloadDesktopApp")) {
                        if (c.showDesktopAppTooltip) {
                            var a = c.getItemPosition("downloadDesktopApp");
                            document.querySelector(".downloadDesktopApp");
                            a.top < 200 ? c.tooltips.push({
                                "class": "downloadDesktopApp",
                                position: "left-top",
                                content: "<div class='heading'>Get Convo for Desktop!<button type='button' class='close pull-right' ng-click='closeTooltip($event, \"showDownloadTooltip_quit\")'>×</button></div><div class='downloadBtnHolder btn-holder' ng-click='closeTooltip($event, \"downloadNativeApp\")'><a class='downloadBtnOffsets btn btn-primary center' href='' >Download now</a><br /><br /><img src='assets/img/onBoarding/macbook.png'></div><div style='text-align:center'><div><div class='content'>Get Convo for Desktop for even more features. Quickly post from the menu bar, get notifications in your system Notification Center, and launch Convo from your dock.</div>",
                                width: 390,
                                height: 350
                            }) : c.tooltips.push({
                                "class": "downloadDesktopApp",
                                position: "left",
                                content: "<div class='heading'>Get Convo for Desktop!<button type='button' class='close pull-right' ng-click='closeTooltip($event, \"showDownloadTooltip_quit\")'>×</button></div><div class='downloadBtnHolder btn-holder' ng-click='closeTooltip($event, \"downloadNativeApp\")'><a class='downloadBtnOffsets btn btn-primary center' href='' >Download now</a><br /><br /><img src='assets/img/onBoarding/macbook.png'></div><div style='text-align:center'><div><div class='content'>Get Convo for Desktop for even more features. Quickly post from the menu bar, get notifications in your system Notification Center, and launch Convo from your dock.</div>",
                                width: 390,
                                height: 350
                            })
                        }
                    } else
                        c.openDownloadAppsModal()
                }
                ,
                c.pushProfileUploadTooltipHeader = function() {
                    c.tooltips.push({
                        "class": "profilePictureHeader",
                        position: "bottom-left",
                        content: "<div class=' blue-content'>Your posts would look much nicer with a profile picture.</div><div class='paddingTop10'><a class='btn btn-primary width190' ng-click='closeTooltip($event, \"openProfilePictureModal\", \"Profile Menu\")' >Add a profile photo</a> <a class='marginLeft15 skip' ng-click='closeTooltip($event, \"ProfileUploadTooltip_next\")'>Maybe later</a></div>",
                        width: 340,
                        height: 140,
                        zIndex: 111
                    })
                }
                ,
                c.pushProfileUploadTooltip = function() {
                    for (var a = 0, b = c.activeTooltips.length; b > a; ++a) {
                        var d = $(c.activeTooltips[a].elem);
                        if (d.is(":visible") && 0 != d.css("opacity"))
                            return
                    }
                    c.tooltips.push({
                        "class": "dp-wrapper",
                        position: "bottom",
                        content: "<div class=' blue-content'>Awesome post! It would look even nicer with a profile photo.</div><div class='paddingTop10'><a class='btn btn-primary width190' ng-click='closeTooltip($event, \"openProfilePictureModal\", \"Feed Item\")'  >Add a profile photo</a> <a ' class=' marginLeft15 skip' ng-click='uploadProfileTooltipFromFeedDismissed()'>Maybe later</a></div>",
                        width: 340,
                        height: 140,
                        zIndex: 6
                    }),
                    c.showTooltip()
                }
                ,
                c.ProfileUploadTooltip_next = function() {
                    c.onboarding && 1 == c.onboarding.second_login ? c.openDownloadAppsModal() : c.showTooltip()
                }
                ,
                c.openDownloadAppsModal = function() {
                    c.clearTooltips();
                    var a = "home/components/downloadAppsModal/downloadAppsModal.tpl.html"
                      , b = "DownloadAppsModalCtrl"
                      , d = f.customModal(a, b, null , "download-apps-modal-wrapper");
                    d.result.then(function() {
                        c.tooltips.length > 0 ? c.showTooltip() : o.onboardingDismissedCallback()
                    }, function() {
                        o.onboardingDismissedCallback()
                    })
                }
                ,
                c.showAddControlsTooltip = function() {
                    c.onboarding.inline_insert_controls_on_boarding_done || p("add-controls") || c.tooltips.push({
                        freezInlineInsert: !0,
                        "class": "add-controls",
                        position: "top",
                        content: "<div class=' blue-content'>The toolbar lets you format your posts, add files from your computer or favorite cloud storage, and even tag your posts.</div><div class='paddingTop10 center'><a class='btn btn-primary width190' ng-click='closeTooltip($event, \"showAddControlsTooltip_callback\")'>Done</a></div>",
                        width: 340,
                        height: 150,
                        zIndex: 111
                    })
                }
                ,
                c.showAddControlsTooltip_callback = function() {
                    var a = {
                        method: "recordAction",
                        action: "inline_insert_controls_on_boarding_done"
                    };
                    d.post("onboarding", a);
                    c.onboarding.inline_insert_controls_on_boarding_done = !0,
                    c.showTooltip()
                }
                ,
                c.downloadNativeApp = function() {
                    var b = navigator.platform.toUpperCase().indexOf("MAC") >= 0 ? "Mac" : "Windows";
                    i.trackEvent(i.Clicked_Download_Dekstop_App, {
                        Source: "Download Tooltip in Web",
                        "App Type": b
                    }),
                    a.open(e.HTML_APP_DOWNLOAD_URL),
                    c.showTooltip()
                }
                ,
                c.openSettings = function() {
                    c.toggleInlineInsertArea(!1);
                    var b = g.newResourceLink("12", [{
                        type: "9",
                        uid: 0
                    }, {
                        type: "customizeFeedSettings",
                        uid: 0
                    }], null , "Customize Feed")
                      , d = g.linkToUrl(b, !0);
                    a.location.href = d
                }
                ,
                c.openProfilePictureModal = function(a) {
                    i.trackEvent(i.Click_Add_Profile_Photo_Tooltip, {
                        type: a
                    });
                    var b = "components/combinedSetProfilePictureModal/combinedSetProfilePictureModal.tpl.html"
                      , d = "CombinedSetProfilePictureModalCtrl"
                      , e = f.customModal(b, d, null , "combined-set-pic-modal");
                    e.result.then(function() {
                        o.checkState() && l.$broadcast("cnvOnboarding:updateOnboardingChecklist"),
                        c.showTooltip()
                    }, function() {
                        o.checkState() && l.$broadcast("cnvOnboarding:updateOnboardingChecklist"),
                        c.showTooltip()
                    })
                }
                ,
                c.showGiphyTooltip = function() {
                    c.onboarding && !c.onboarding.chat_window_giphy_on_boarding_done && (h.readData(z) || p("chatWindowGiphy") || c.tooltips.push({
                        "class": "chatWindowGiphy",
                        position: "top",
                        content: "<div class=' blue-content'>New! Attach animated GIFs in your chat. GIFs are a great way to express yourself, or to make someone LOL.</div><div class='paddingTop10 center'><a class='btn btn-primary width190' ng-click='closeTooltip($event, \"showGiphyTooltip_callback\")'>Got it!</a></div>",
                        width: 310,
                        height: 150,
                        zIndex: 111
                    }),
                    c.onboarding.chat_window_giphy_on_boarding_done = !0),
                    c.showTooltip()
                }
                ,
                c.showGiphyTooltip_callback = function() {
                    q(),
                    c.showTooltip()
                }
                ,
                c.showGiphyTooltipInInlineInsert = function(a) {
                    c.onboarding.inline_insert_giphy_on_boarding_done || (h.readData(y) ? r() : p("inLineInsertGiphy") || c.tooltips.push({
                        freezInlineInsert: !0,
                        "class": "inLineInsertGiphy",
                        position: "top",
                        content: "<div class=' blue-content'>New! Attach animated GIFs in your post. GIFs are a great way to express yourself, or to make someone LOL.</div><div class='paddingTop10 center'><a class='btn btn-primary width190' ng-click='closeTooltip($event,\"callbackOfGiphyTooltipForInlineInsert\")'>Got it!</a></div>",
                        width: 310,
                        height: 150,
                        zIndex: 111
                    }))
                }
                ,
                c.showVideoPlaybackTooltipInInlineInsert = function(a) {
                    c.onboarding.video_playback_tooltip_shown || p("attachIconInlineInsert") || c.tooltips.push({
                        freezInlineInsert: !0,
                        "class": "attachIconInlineInsert",
                        position: "top",
                        content: "<div class=' blue-content'>New! Upload your videos.<br /> Work with video? Share a screencast or a promo video and view it right on your feed.</div><div class='paddingTop10 center'><a class='btn btn-primary width190' ng-click='closeTooltip($event,\"callbackOfVideoPlaybackTooltipForInlineInsert\")'>Got it!</a></div>",
                        width: 310,
                        height: 150,
                        zIndex: 111
                    })
                }
                ,
                c.pushGeneralGroupTooltip = function() {
                    c.tooltips.push({
                        freezInlineInsert: !0,
                        "class": "tag-item",
                        position: "bottom",
                        content: "<div class=' blue-content'><p>This is where you specify who will see this post. Add a group or teammate's name here.</p> <p>By default, new posts go to the <strong>Everyone</strong> group where you can share company-wide communication.</p> <p>You can change this default in <a ng-click='closeTooltip($event,\"openSettings\")' href=''>settings</a>.</p></div><div class='paddingTop10 center'><a class='btn btn-primary width190' ng-click='closeTooltip($event)'>Got it!</a></div>",
                        width: 328,
                        zIndex: 111
                    })
                }
                ,
                c.pushGroupChangedTooltip = function() {
                    c.onboarding.show_sharing_options_changed_tooltip && !p("tag-item") && c.tooltips.push({
                        freezInlineInsert: !0,
                        "class": "tag-item",
                        position: "bottom",
                        content: "<div class=' blue-content'><p>We created a couple of new groups for you: <br />- <strong>Everyone</strong> for company-wide communication<br />- <strong>Misc</strong> for non-work-related, fun stuff</p><p>Your default group is now the <strong>Everyone</strong> group, but you can change this in <a ng-click='closeTooltip($event,\"openSettings\")' href=''>settings</a>.</p></div><div class='paddingTop10 center'><a class='btn btn-primary width190' ng-click='closeTooltip($event, \"pushGroupChangedTooltip_callback\")'>Got it!</a></div>",
                        width: 337,
                        zIndex: 111
                    })
                }
                ,
                c.pushCustomGroupTooltip = function(a) {
                    c.tooltips.push({
                        freezInlineInsert: !0,
                        "class": "tag-item",
                        position: "bottom",
                        content: "<div class=' blue-content'><p>This is where you specify who will see this post. Add a group or teammate's name here.</p> <p>By default, new posts go to the <strong>" + _.escape(a) + "</strong> group.</p> <p>You can change this default in <a ng-click='closeTooltip($event,\"openSettings\")' href=''>settings</a>.</p></div><div class='paddingTop10 center'><a class='btn btn-primary width190' ng-click='closeTooltip($event)'>Got it!</a></div>",
                        width: 328,
                        zIndex: 111
                    })
                }
                ,
                c.pushGroupChangedTooltip_callback = function() {
                    c.onboarding.show_sharing_options_changed_tooltip = !1,
                    c.showTooltip()
                }
                ,
                c.callbackOfGiphyTooltipForInlineInsert = function() {
                    r(),
                    c.showTooltip()
                }
                ,
                c.callbackOfVideoPlaybackTooltipForInlineInsert = function() {
                    s(),
                    c.showTooltip()
                }
                ,
                c.showDownloadAppsTooltip = function() {
                    c.clearTooltips(),
                    c.tooltips.push({
                        "class": "onboarding-download-apps-tooltip",
                        position: "left-top",
                        content: "<div class=' blue-content'><i class='cnv-icons-10 icons2_Close-lightgray' ng-mousedown='closeTooltip($event);dismissPilotTooltips(\"Download apps\")'></i>Never miss an update from your team by getting the desktop and mobile apps.</div><div class='paddingTop20 center'><a class='btn btn-primary width190' ng-mousedown='closeTooltip($event, \"openDownloadAppsModal\")'>Get the apps</a></div>",
                        width: 310,
                        height: 143,
                        zIndex: 111
                    }),
                    c.showTooltip()
                }
                ,
                c.showIntegrationsTooltip = function() {
                    c.clearTooltips(),
                    c.tooltips.push({
                        "class": "onboarding-integrations-tooltip",
                        position: "left-top",
                        content: "<div class=' blue-content'><i class='cnv-icons-10 icons2_Close-lightgray' ng-mousedown='closeTooltip($event);dismissPilotTooltips(\"Connect to other tools\")'></i>Get notifications from all the tools you use for your daily work, all in one place.<br /><br />Connect your email, calendar, social media and more.</div><div class='paddingTop20 center'><a class='btn btn-primary width190' ng-mousedown='closeTooltip($event, \"setupIntegration\")'>Setup an integration</a></div>",
                        width: 340,
                        height: 197,
                        zIndex: 111
                    }),
                    c.showTooltip()
                }
                ,
                c.showUpgradeToolTip = function() {
                    0 == c.onboarding.upgrade_now_tooltip_shown && b(function() {
                        var a = m.getUserInfo().name.split(" ")[0]
                          , b = n.getAccountName();
                        c.clearTooltips(),
                        c.tooltips.push({
                            "class": "onboarding-upgrade-to-premium-tooltip",
                            position: "bottom",
                            content: "<div class='blue-content'><i class='cnv-icons-10 icons2_Close-lightgray' ng-click='closeTooltip($event);'></i>Hey <span>" + a + "</span>, want to take control of the <span>" + b + "</span> network?<br/><br/>Upgrade to get advanced admin controls, enhanced security with at-rest encryption and unlimited users and groups.<div class='paddingTop20 center'><a class='btn btn-primary width190' ng-click='closeTooltip($event, \"openPremiumUpgrade\")'>Upgrade Now</a></div></div>",
                            width: 320,
                            zIndex: 113
                        }),
                        c.showTooltip(),
                        o.recordAction("upgrade_now_tooltip_shown"),
                        c.onboarding.upgrade_now_tooltip_shown = 1
                    }, 1e3)
                }
                ,
                c.createGroupTooltip1 = function() {
                    c.clearTooltips(),
                    c.tooltips.push({
                        "class": "onboarding-create-group-tooltip-1",
                        position: "left-top",
                        content: "<div class='blue-content'><i class='cnv-icons-10 icons2_Close-lightgray' ng-mousedown='closeTooltip($event);dismissPilotTooltips(\"Create a group\")'></i>Great! You've seen your news feed in action. Continue the tour, or feel free to explore on your own.</div><div class='paddingTop20 center'><a class='btn btn-primary width190' ng-mousedown='closeTooltip($event, \"createGroupTooltip2\")'>Continue</a></div>",
                        width: 330,
                        height: 160,
                        zIndex: 111
                    }),
                    c.showTooltip()
                }
                ,
                c.createGroupTooltip2 = function() {
                    c.clearTooltips(),
                    c.tooltips.push({
                        "class": x() ? "onboarding-add-group-tooltip-slim" : "onboarding-add-group-tooltip",
                        position: "right-top",
                        content: "<div class='blue-content'><i class='cnv-icons-10 icons2_Close-lightgray' ng-click='closeTooltip($event);dismissPilotTooltips(\"Create a group\")'></i><strong>Groups</strong> are great for organizing discussions by team, project, or topic.<br /><br />You can control who can access your groups.<div class='paddingTop20 center'><a class='btn btn-primary width190' ng-click='closeTooltip($event, \"createGroupTooltip3\")'>Next</a></div>",
                        width: 330,
                        height: 180,
                        zIndex: 111
                    }),
                    c.showTooltip()
                }
                ,
                c.createGroupTooltip3 = function() {
                    c.clearTooltips(),
                    c.tooltips.push({
                        "class": x() ? "onboarding-private-grp-tooltip-slim" : "onboarding-private-grp-tooltip",
                        position: "right-top",
                        content: "<div class='blue-content'><i class='cnv-icons-10 icons2_Close-lightgray' ng-click='closeTooltip($event);dismissPilotTooltips(\"Create a group\")'></i>Only people who are approved members can see posts in <strong>private groups.</strong><div class='paddingTop20 center'><a class='btn btn-primary width190' ng-click='closeTooltip($event, \"createGroupTooltip4\")'>Next</a></div>",
                        width: 330,
                        height: 143,
                        zIndex: 112
                    }),
                    c.showTooltip()
                }
                ,
                c.createGroupTooltip4 = function() {
                    c.clearTooltips(),
                    c.tooltips.push({
                        "class": x() ? "onboarding-public-grp-tooltip-slim" : "onboarding-public-grp-tooltip",
                        position: "right-bottom",
                        content: "<div class='blue-content'><i class='cnv-icons-10 icons2_Close-lightgray' ng-mousedown='closeTooltip($event);dismissPilotTooltips(\"Create a group\")'></i>Anyone in your company can see <strong>public groups</strong>. Your team has two public groups to start off:<br /><br /><ul><li><strong>Everyone</strong> for posting updates or announcements.</li><li><strong>Misc</strong> for posting welcome messages and other fun stuff.</li></ul><div class='paddingTop20 center'><a class='btn btn-primary width190' ng-click='closeTooltip($event, \"createGroup\")'>Create a new group</a></div>",
                        width: 365,
                        height: 243,
                        zIndex: 113
                    }),
                    c.showTooltip()
                }
                ,
                c.sharePostTooltip = function() {
                    c.clearTooltips();
                    var a;
                    a = m.isGuestUser() ? "<div class='blue-content'><i class='cnv-icons-10 icons2_Close-lightgray' ng-mousedown='closeTooltip($event);dismissPilotTooltips(\"Share a post\")'></i>Great! You've seen your news feed in action.<br /><br />Go ahead and share a quick post to say hello to your group.</div><div class='paddingTop20 center'><a class='btn btn-primary width190' ng-mousedown='closeTooltip($event, \"sharePost\")'>Let's do this!</a></div>" : "<div class='blue-content'><i class='cnv-icons-10 icons2_Close-lightgray' ng-mousedown='closeTooltip($event);dismissPilotTooltips(\"Share a post\")'></i>You've learned to create groups and invite your teammates.<br />It would be awesome if you shared a quick welcome post for them.</div><div class='paddingTop20 center'><a class='btn btn-primary width190' ng-mousedown='closeTooltip($event, \"sharePost\")'>Let's do this!</a></div>",
                    c.tooltips.push({
                        "class": "onboarding-share-post-tooltip",
                        position: "left-top",
                        content: a,
                        width: 330,
                        height: 180,
                        zIndex: 111
                    }),
                    c.showTooltip()
                }
                ,
                c.showEmptyRecentSearchTooltip = function() {
                    c.clearTooltips(),
                    c.tooltips.push({
                        "class": "top-search-wrapper",
                        position: "bottom",
                        content: "<div class=' blue-content'><i class='cnv-icons-10 icons2_Close-lightgray' ng-mousedown='closeTooltip($event);'></i>Narrow your search with these handy operators:<br /><span class='tag-badge'>has:</span> Search for attachments<br /><span class='tag-badge'>tag:</span> Discover posts by tag:launch<br /><span class='tag-badge'>is:</span> View specific post types, e.g. is:link<br />Or click <i class='cnv-icons-15 icons2_Dropdown-lightgray'></i> for advanced search options</div><div class='paddingTop20 center'><a class='btn btn-primary width190' ng-mousedown='closeTooltip($event);'>Got it</a></div>",
                        width: 340,
                        height: 223,
                        zIndex: 111
                    }),
                    c.showTooltip()
                }
                ,
                c.createGroup = function() {
                    l.$broadcast("cnvOnboarding:openCreateGroupModal"),
                    c.clearTooltips()
                }
                ,
                c.sharePost = function() {
                    c.$emit("cnvOnboarding:openSharePostWidget"),
                    c.clearTooltips()
                }
                ,
                c.setupIntegration = function() {
                    c.clearTooltips();
                    var a = g.newResourceLink("100", [{
                        uid: 0,
                        type: "100"
                    }], null , "Integrations")
                      , b = g.linkToUrl(a, !0);
                    k.url(b.slice(1)),
                    c.$emit("cnvOnboarding:integrationsTooltipDisplayed")
                }
                ,
                c.openPremiumUpgrade = function() {
                    var a = g.newResourceLink("19", [{
                        type: "17",
                        uid: 0
                    }], null , "Upgrade")
                      , b = g.linkToUrl(a, !0);
                    k.url(b.slice(1))
                }
                ,
                c.uploadProfileTooltipFromFeedDismissed = function() {
                    c.clearTooltips(),
                    c.$emit("cnvOnboarding:uploadProfileTooltipFromFeedDismissed")
                }
                ,
                c.dismissPilotTooltips = function(a) {
                    o.recordAction("onboarding_dismissed"),
                    i.trackEvent(i.X_OUT_GETTING_STARTED, {
                        Type: a,
                        Trigger: "Click"
                    })
                }
                ,
                c.$on("inlineInsertOpen", function() {
                    if (c.onboarding && (!c.onboarding.video_playback_tooltip_shown || c.onboarding.show_sharing_options_tooltip || c.onboarding.show_sharing_options_changed_tooltip || !c.onboarding.inline_insert_controls_on_boarding_done || !c.onboarding.inline_insert_giphy_on_boarding_done) && (c.clearTooltips(),
                    b(function() {
                        t(),
                        c.onboarding.show_sharing_options_tooltip = !1
                    }, 500),
                    c.onboarding.show_sharing_options_tooltip || c.onboarding.show_sharing_options_changed_tooltip)) {
                        var a = {
                            method: "recordAction",
                            action: "sharing_options_tooltip_shown"
                        };
                        d.post("onboarding", a)
                    }
                }),
                c.showVideoCallTooltip = function() {
                    c.onboarding && !c.onboarding.video_conf_tooltip_shown && (c.tooltips.push({
                        "class": "chatVideoCallDropdown",
                        position: "bottom",
                        content: "<div class=' blue-content'>New! Introducing video conferencing.<br>Start one-click video calls and screen sharing with your teammates. Try it now!</div><div class='paddingTop10 center'><a class='btn btn-primary width190' ng-click='closeTooltip($event, \"showVideoCallTooltip_callback\")'>Got it!</a></div>",
                        width: 310,
                        height: 150,
                        zIndex: 111
                    }),
                    c.onboarding.video_conf_tooltip_shown = !0),
                    c.showTooltip()
                }
                ,
                c.showVideoCallTooltip_callback = function() {
                    u()
                }
                ,
                c.$on("showGiphyChatTooltip", v),
                c.$on("showVideoCallChatTooltip", w),
                c.$on("$locationChangeStart", function(a) {
                    var b = k.path()
                      , d = k.search()
                      , e = k.hash()
                      , f = A.urlToLink(b, d, e);
                    f && f.resourcePath && (c.toggleInlineInsertArea(!1),
                    c.showingTooltips = !1)
                }),
                c.$on("premiumUpgradeOpened", function() {
                    c.clearTooltips()
                }),
                c.$on("cnvOnboardingTooltips:openSetupIntegrations", c.setupIntegration),
                c.$on("cnvOnboardingTooltips:showDownloadAppsModal", c.openDownloadAppsModal),
                c.$on("cnvOnboardingTooltips:showDownloadAppsTooltip", c.showDownloadAppsTooltip),
                c.$on("cnvOnboardingTooltips:createGroupTooltip:1", c.createGroupTooltip1),
                c.$on("cnvOnboardingTooltips:createGroupTooltip:2", c.createGroupTooltip2),
                c.$on("cnvOnboardingTooltips:showProfilePicTooltip", c.pushProfileUploadTooltip),
                c.$on("cnvOnboardingTooltips:sharePostTooltip", c.sharePostTooltip),
                c.$on("cnvOnboardingTooltips:showIntegrationsTooltip", c.showIntegrationsTooltip),
                c.$on("cnvOnboardingTooltips:showEmptyRecentSearchTooltip", c.showEmptyRecentSearchTooltip)
            }
            ]
        }
    }
    ]),
    b.module("convoApp").factory("onboardingService", ["ServerComm", "$q", "homeViewStateInfo", "mixpanelService", function(a, b, c, d) {
        function e() {
            var c = {
                method: "createFirstPilotPost"
            }
              , d = a.postx("onboarding", c)
              , e = b.defer();
            return d.then(function(a, b) {
                e.resolve(a.data)
            }, function(a, b) {
                e.reject(a.data)
            }),
            e.promise
        }
        function f() {
            var c = {
                method: "createSecondPilotPost"
            }
              , d = a.postx("onboarding", c)
              , e = b.defer();
            return d.then(function(a, b) {
                e.resolve(a.data)
            }, function(a, b) {
                e.reject(a.data)
            }),
            e.promise
        }
        function g(c) {
            var d = {
                method: "createFirstPilotComment",
                feed_id: c
            }
              , e = a.postx("onboarding", d)
              , f = b.defer();
            return e.then(function(a, b) {
                f.resolve(a.data)
            }, function(a, b) {
                f.reject(a.data)
            }),
            f.promise
        }
        function h(c, d) {
            var e = {
                method: "createSecondPilotComment",
                feed_id: c,
                replied_to_comment_id: d
            }
              , f = a.postx("onboarding", e)
              , g = b.defer();
            return f.then(function(a, b) {
                g.resolve(a.data)
            }, function(a, b) {
                g.reject(a.data)
            }),
            g.promise
        }
        function i() {
            if (!x)
                return !1;
            for (var a in x)
                if ("onboarding_dismissed" !== a && 0 === x[a])
                    return !1;
            return !0
        }
        function j() {
            var c = a.getx("onboarding")
              , d = b.defer();
            return c.then(function(a, b) {
                x = a.data.data.onboarding_checklist,
                A && (x.downloaded_apps = 1),
                d.resolve(a.data)
            }),
            d.promise
        }
        function k() {
            w.trigger("cnvOnboarding:showUpgradeTooltip")
        }
        function l(c) {
            var d = {
                method: "recordAction",
                action: c
            }
              , e = a.postx("onboarding", d)
              , f = b.defer();
            return e.then(function(a, b) {
                "onboarding_dismissed" === c && (x.onboarding_dismissed = 1,
                k()),
                f.resolve(a.data)
            }),
            f.promise
        }
        function m(a) {
            if (y) {
                var b = w.recordAction("connect_to_other_tools_done");
                b.then(function(b, c) {
                    w.trigger("cnvOnboarding:updateOnboardingChecklist"),
                    a && ("Webhooks" === a ? d.trackEvent(d.ADD_INTEGRATION, {
                        Source: "Webhook",
                        Via: "Webhook",
                        From: "GS"
                    }) : d.trackEvent(d.ADD_INTEGRATION, {
                        Source: a,
                        Via: "Direct",
                        From: "GS"
                    }))
                })
            }
        }
        function n(a) {
            x = a
        }
        function o() {
            return x
        }
        function p(a) {
            a && (B = !1),
            y = a,
            w.trigger("cnvOnboarding:stateChange")
        }
        function q() {
            return y
        }
        function r() {
            return z
        }
        function s() {
            A = !0
        }
        function t(a) {
            z = a
        }
        function u(a) {
            B = a,
            w.trigger("cnvOnboarding:feedOnboardingStateChange")
        }
        function v() {
            return B
        }
        var w = {}
          , x = null 
          , y = !1
          , z = "learn_my_feed"
          , A = !1
          , B = !1;
        ({
            defer: b.defer(),
            status: !1
        });
        return _.extend(w, Backbone.Events),
        w.createFirstPilotPost = e,
        w.createSecondPilotPost = f,
        w.createFirstPilotComment = g,
        w.createSecondPilotComment = h,
        w.getOnboardingState = j,
        w.recordAction = l,
        w.markIntegrationsAsDone = m,
        w.setChecklist = n,
        w.getChecklist = o,
        w.changeState = p,
        w.checkState = q,
        w.getLastPlayedStep = r,
        w.setLastPlayedStep = t,
        w.markDownloadedAppFromAdvert = s,
        w.feedOnboardingStatus = u,
        w.getFeedOnboardingState = v,
        w.onboardingDismissedCallback = k,
        w.isOnboardingStepsCompleted = i,
        w
    }
    ]),
    b.module("convoApp").directive("cnvChargify", ["config", "$rootScope", "ServerComm", "$location", "resourcesTabsManager", "$timeout", function(b, c, d, e, f, g) {
        return {
            restrict: "E",
            templateUrl: "premiumUpgrade/chargify/cnvChargify.tpl.html",
            scope: !0,
            link: function(b, c, d) {
                function e(a) {
                    j.onload = function() {
                        clearInterval(c),
                        b.waiting = !1,
                        b.$$phase || b.$digest()
                    }
                    ,
                    j.onerror = function() {
                        clearInterval(c),
                        b.waiting = !1,
                        b.$emit("cnvChargify:failedToLoadIframe")
                    }
                    ;
                    var c = setInterval(function() {
                        "undefined" == typeof j || null  === j ? clearInterval(c) : j.interval >= 3 ? (clearInterval(c),
                        b.waiting = !1,
                        b.$emit("cnvChargify:failedToLoadIframe")) : (j.interval++,
                        j.src = "",
                        j.src = a)
                    }, 1e4);
                    j.src = a
                }
                var f = function(c) {
                    var d = c.origin || c.originalEvent.origin;
                    d.indexOf(a.location.hostname) < 0 && "upgrade-to-premium" != c.data || (c.stopPropagation(),
                    "upgrade-to-premium" == c.data ? b.$emit("cnvChargify:tellCnvPremiumUpgradeToStartUpgradeReload") : "reactivate-premium" == c.data && b.$emit("cnvChargify:startPremiumReactivationProcess"))
                }
                  , g = a.addEventListener ? "addEventListener" : "attachEvent"
                  , h = a[g]
                  , i = "attachEvent" == g ? "onmessage" : "message";
                h(i, f, !1);
                var j = c.find("iframe")[0];
                j.interval = 1,
                b.$on("cnvPremiumUpgrade:loadChargifyIframe", function(a, b) {
                    e(b.url)
                }),
                b.$on("$destroy", function() {
                    j = null 
                })
            },
            controller: ["$scope", function(a) {
                a.waiting = !0
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvPremiumUpgrade", ["ServerComm", "alertsService", "$window", "resourcesTabsManager", "$timeout", "$location", function(a, b, c, d, e, f) {
        return {
            restrict: "E",
            templateUrl: "premiumUpgrade/cnvPremiumUpgrade.tpl.html",
            scope: !0,
            link: function(d, f, g) {
                function h() {
                    d.$emit("cnvPremiumUpgrade:upgradedToPremium")
                }
                function i() {
                    d.changeView("FETCHING"),
                    d.$$phase || d.$digest();
                    var b = {
                        method: "handleSubReactivationRequestByUser"
                    }
                      , c = a.postx("billing", b);
                    c.then(function(a) {
                        "1" == a.data.type ? h() : a.data.message ? (d.cnvPremiumUpgrade.statesData.ERROR.value = a.data.message,
                        d.changeView("ERROR")) : (d.cnvPremiumUpgrade.statesData.ERROR.value = d.cnvPremiumUpgrade.statesData.ERROR.requestFailed,
                        d.changeView("ERROR"))
                    }, function() {
                        d.cnvPremiumUpgrade.statesData.ERROR.value = d.cnvPremiumUpgrade.statesData.ERROR.requestFailed,
                        d.changeView("ERROR")
                    })
                }
                function j(a) {
                    d.cnvPremiumUpgrade.plans.STARTER.id = a.plans.STARTER[0].id,
                    d.cnvPremiumUpgrade.plans.STARTER.title = a.plans.STARTER[0].title,
                    d.cnvPremiumUpgrade.plans.STARTER.subTitle = a.plans.STARTER[0].subTitle,
                    d.cnvPremiumUpgrade.plans.STARTER.active = a.plans.STARTER[0].active,
                    d.cnvPremiumUpgrade.plans.STARTER.perUserPerMonthCharge = a.plans.STARTER[0].perUserPerMonthCharge,
                    d.cnvPremiumUpgrade.plans.STARTER.actionLabel = a.plans.STARTER[0].actionLabel,
                    d.cnvPremiumUpgrade.plans.STARTER.integrations = a.plans.STARTER[0].integrations,
                    d.cnvPremiumUpgrade.plans.STARTER.groups = a.plans.STARTER[0].groups,
                    d.cnvPremiumUpgrade.plans.STARTER.features = a.plans.STARTER[0].features,
                    d.cnvPremiumUpgrade.plans.STARTER.users = parseInt(a.plans.STARTER[0].users),
                    d.cnvPremiumUpgrade.plans.PREMIUM.id = a.plans.PREMIUM[0].id,
                    d.cnvPremiumUpgrade.plans.PREMIUM.title = a.plans.PREMIUM[0].title,
                    d.cnvPremiumUpgrade.plans.PREMIUM.active = a.plans.PREMIUM[0].active,
                    d.cnvPremiumUpgrade.plans.PREMIUM.component_id = a.plans.PREMIUM[0].component_id,
                    d.cnvPremiumUpgrade.plans.PREMIUM.perUserPerMonthCharge = a.plans.PREMIUM[0].perUserPerMonthCharge,
                    d.cnvPremiumUpgrade.plans.PREMIUM.chargifySubscriptionPageUrl = a.plans.PREMIUM[0].chargifySubscriptionPageUrl,
                    d.cnvPremiumUpgrade.plans.PREMIUM.actionLabel = a.plans.PREMIUM[0].actionLabel,
                    d.cnvPremiumUpgrade.plans.PREMIUM.integrations = a.plans.PREMIUM[0].integrations,
                    d.cnvPremiumUpgrade.plans.PREMIUM.groups = a.plans.PREMIUM[0].groups,
                    d.cnvPremiumUpgrade.plans.PREMIUM.features = a.plans.PREMIUM[0].features,
                    d.cnvPremiumUpgrade.plans.PREMIUM.users = a.plans.PREMIUM[0].users,
                    d.cnvPremiumUpgrade.plans.ENTERPRISE.id = a.plans.ENTERPRISE[0].id,
                    d.cnvPremiumUpgrade.plans.ENTERPRISE.title = a.plans.ENTERPRISE[0].title,
                    d.cnvPremiumUpgrade.plans.ENTERPRISE.subTitle = a.plans.ENTERPRISE[0].subTitle,
                    d.cnvPremiumUpgrade.plans.ENTERPRISE.active = a.plans.ENTERPRISE[0].active,
                    d.cnvPremiumUpgrade.plans.ENTERPRISE.perUserPerMonthCharge = a.plans.ENTERPRISE[0].perUserPerMonthCharge,
                    d.cnvPremiumUpgrade.plans.ENTERPRISE.subscriptionPageUrl = a.plans.ENTERPRISE[0].subscriptionPageUrl,
                    d.cnvPremiumUpgrade.plans.ENTERPRISE.actionLabel = a.plans.ENTERPRISE[0].actionLabel,
                    d.cnvPremiumUpgrade.plans.ENTERPRISE.integrations = a.plans.ENTERPRISE[0].integrations,
                    d.cnvPremiumUpgrade.plans.ENTERPRISE.groups = a.plans.ENTERPRISE[0].groups,
                    d.cnvPremiumUpgrade.plans.ENTERPRISE.features = a.plans.ENTERPRISE[0].features,
                    d.cnvPremiumUpgrade.plans.ENTERPRISE.users = a.plans.ENTERPRISE[0].users
                }
                d.openContactSalesModal = function() {
                    var a = "premiumUpgrade/contactSalesModal/contactSalesModal.tpl.html"
                      , c = "ContactSalesModalCtrl";
                    b.customModal(a, c, null , "contact-sales-modal")
                }
                ,
                d.changeView = function(a) {
                    d.cnvPremiumUpgrade.state.FETCHING = !1,
                    d.cnvPremiumUpgrade.state.PLAN = !1,
                    d.cnvPremiumUpgrade.state.CHECKOUT = !1,
                    d.cnvPremiumUpgrade.state.CHARGIFY = !1,
                    d.cnvPremiumUpgrade.state.REACTIVATE = !1,
                    d.cnvPremiumUpgrade.state.ERROR = !1,
                    d.cnvPremiumUpgrade.state[a] = !0,
                    d.cnvPremiumUpgrade.state.FETCHING ? f.find("#upgrade-spinner").show() : f.find("#upgrade-spinner").hide()
                }
                ,
                d.goBack = function() {
                    d.cnvPremiumUpgrade.state.CHARGIFY ? d.changeView("CHECKOUT") : c.history.back()
                }
                ,
                d.selectedItemChanged = function() {
                    e(function() {
                        "enterprise" == d.cnvPremiumUpgrade.statesData.CHECKOUT.dropdown && d.openContactSalesModal()
                    }, 1, !1)
                }
                ;
                var k = a.getx("billing?method=" + encodeURIComponent("getSubscriptionIfUserCanUpgradeAccount"));
                k.then(function(b) {
                    if ("1" == b.data.type)
                        if (null  != b.data.data.account_info && d.setAccountLevels(b.data.data.account_info.account_level),
                        "1" == b.data.data.subscription_exists)
                            if ("db" == b.data.data.source)
                                if (b.data.data.subscription.state == d.cnvPremiumUpgrade.subscriptionExistsStates.active)
                                    j(b.data.data),
                                    d.changeView("PLAN");
                                else if (b.data.data.subscription.state == d.cnvPremiumUpgrade.subscriptionExistsStates.pastDue)
                                    d.cnvPremiumUpgrade.statesData.ERROR.value = d.cnvPremiumUpgrade.statesData.ERROR.pastDue,
                                    d.changeView("ERROR");
                                else if (b.data.data.subscription.state == d.cnvPremiumUpgrade.subscriptionExistsStates.accessing)
                                    d.cnvPremiumUpgrade.statesData.ERROR.value = d.cnvPremiumUpgrade.statesData.ERROR.accessing,
                                    d.changeView("ERROR");
                                else if (b.data.data.subscription.state == d.cnvPremiumUpgrade.subscriptionExistsStates.canceled) {
                                    var c = a.getx("billing?method=" + encodeURIComponent("getUpdatePaymentPageUrl"));
                                    c.then(function(a) {
                                        "1" == a.data.type && a.data.data.url ? (d.cnvPremiumUpgrade.statesData.REACTIVATE.updateCreditCardInformationUrl = a.data.data.url,
                                        d.$broadcast("cnvPremiumUpgrade:loadChargifyIframe", {
                                            url: d.cnvPremiumUpgrade.statesData.REACTIVATE.updateCreditCardInformationUrl
                                        }),
                                        d.$on("cnvChargify:startPremiumReactivationProcess", function(a, b) {
                                            i()
                                        }),
                                        d.changeView("REACTIVATE")) : (d.cnvPremiumUpgrade.statesData.ERROR.value = d.cnvPremiumUpgrade.statesData.ERROR.requestFailed,
                                        d.changeView("ERROR"))
                                    }, function() {
                                        d.cnvPremiumUpgrade.statesData.ERROR.value = d.cnvPremiumUpgrade.statesData.ERROR.requestFailed,
                                        d.changeView("ERROR")
                                    })
                                } else
                                    d.cnvPremiumUpgrade.statesData.ERROR.value = d.cnvPremiumUpgrade.statesData.ERROR.anyOtherState,
                                    d.changeView("ERROR");
                            else
                                d.cnvPremiumUpgrade.statesData.ERROR.value = d.cnvPremiumUpgrade.statesData.ERROR.subscriptionNotUpdatedAtOurEnd,
                                d.changeView("ERROR");
                        else
                            "0" == b.data.data.subscription_exists && (j(b.data.data),
                            d.changeView("PLAN"),
                            "PREMIUM" == b.data.data.account_info.account_level && "0" == b.data.data.account_info.paid || (d.$on("ContactSalesModalCtrl:closedModal", function(a, b) {
                                d.cnvPremiumUpgrade.statesData.CHECKOUT.dropdown = "pro"
                            }),
                            d.$on("cnvChargify:tellCnvPremiumUpgradeToStartUpgradeReload", function(a, b) {
                                h()
                            }),
                            d.$broadcast("cnvPremiumUpgrade:loadChargifyIframe", {
                                url: d.cnvPremiumUpgrade.plans.PREMIUM.chargifySubscriptionPageUrl
                            }),
                            d.$on("cnvChargify:failedToLoadIframe", function(a, b) {
                                d.cnvPremiumUpgrade.statesData.ERROR.value = d.cnvPremiumUpgrade.statesData.ERROR.chargifyFailed,
                                d.changeView("ERROR"),
                                d.$$phase || d.$digest()
                            })));
                    else
                        d.cnvPremiumUpgrade.statesData.ERROR.value = d.cnvPremiumUpgrade.statesData.ERROR.requestFailed,
                        d.changeView("ERROR")
                }, function() {
                    d.cnvPremiumUpgrade.statesData.ERROR.value = d.cnvPremiumUpgrade.statesData.ERROR.requestFailed,
                    d.changeView("ERROR")
                })
            },
            controller: ["$scope", "accountInfo", "config", function(a, b, c) {
                b.getAccountLevel();
                a.cnvPremiumUpgrade = {
                    currentAccountLevel: {
                        STARTER: !1,
                        PREMIUM: !1,
                        ENTERPRISE: !1,
                        ALIAS: ""
                    },
                    subscriptionExistsStates: {
                        active: "active",
                        pastDue: "past_due",
                        accessing: "accessing",
                        canceled: "canceled"
                    },
                    state: {
                        FETCHING: !0,
                        PLAN: !1,
                        CHECKOUT: !1,
                        CHARGIFY: !1,
                        REACTIVATE: !1,
                        ERROR: !1
                    },
                    statesData: {
                        CHECKOUT: {
                            terms: c.WEBSITE_TERMS_BILLING_PAGE,
                            dropdown: "pro"
                        },
                        REACTIVATE: {},
                        ERROR: {
                            value: "",
                            requestFailed: "Failed to Process your request, please refresh and try again.",
                            active: "",
                            pastDue: "Your previous payment for his account has not been processed yet.<br> Please <a href='mailto:support@convo.com'>Contact Support</a> for more information",
                            assessing: "We are currently processing payment for your account.<br>You can switch the plan once the processing is complete. Please try again after 5 minutes.",
                            canceled: "Please provide your credit card information before proceeding with reactivation.",
                            anyOtherState: "Your subscription is inactive.<br>Please <a href='mailto:support@convo.com'>Contact Support</a>",
                            chargifyFailed: "Failed to Process your request, please refresh and try again<br>or <a href='mailto:support@convo.com'>Contact Support for more information.</a>",
                            subscriptionNotUpdatedAtOurEnd: "We are currently processing payment for your account.<br>Please try again after 5 minutes or <a href='mailto:support@convo.com'>Contact Support</a>"
                        }
                    },
                    plans: {
                        STARTER: {},
                        PREMIUM: {},
                        ENTERPRISE: {}
                    }
                },
                a.setAccountLevels = function(b) {
                    a.cnvPremiumUpgrade.currentAccountLevel.ALIAS = "",
                    a.cnvPremiumUpgrade.currentAccountLevel.STARTER = !1,
                    a.cnvPremiumUpgrade.currentAccountLevel.PREMIUM = !1,
                    a.cnvPremiumUpgrade.currentAccountLevel.ENTERPRISE = !1,
                    "STARTER" == b ? (a.cnvPremiumUpgrade.currentAccountLevel.ALIAS = "Basic Plan",
                    a.cnvPremiumUpgrade.currentAccountLevel.STARTER = !0) : "PREMIUM" == b ? (a.cnvPremiumUpgrade.currentAccountLevel.ALIAS = "Pro Plan",
                    a.cnvPremiumUpgrade.currentAccountLevel.PREMIUM = !0) : "ENTERPRISE" == b && (a.cnvPremiumUpgrade.currentAccountLevel.ALIAS = "Enterprise Plan",
                    a.cnvPremiumUpgrade.currentAccountLevel.ENTERPRISE = !0)
                }
                ,
                a.$emit("requestFullViewForApp", a.tab)
            }
            ]
        }
    }
    ]),
    b.module("convoApp").controller("ContactSalesModalCtrl", ["$scope", "$rootScope", "$modalInstance", "ServerComm", "userInfo", "accountInfo", "Users", function(a, b, c, d, e, f, g) {
        function h() {
            var b = {
                method: "contactUs",
                data: {
                    email: a.ContactSalesModalCtrl.user.email,
                    full_name: a.ContactSalesModalCtrl.user.fullName,
                    job_title: a.ContactSalesModalCtrl.user.jobTitle,
                    cmpy_size: a.ContactSalesModalCtrl.user.companySize,
                    cmpy_name: a.ContactSalesModalCtrl.user.companyName,
                    telephone: a.ContactSalesModalCtrl.user.telephone,
                    comments: a.ContactSalesModalCtrl.user.comments,
                    inquiry: a.ContactSalesModalCtrl.user.inquiry
                }
            }
              , c = d.postx("website/forms", b);
            c.then(function(b) {
                "1" == b.data.type ? a.ContactSalesModalCtrl.stateSuccessfullySubmitted = !0 : (a.ContactSalesModalCtrl.currentStatus = "Unable to process request, please try again or contact support@convo.com",
                a.ContactSalesModalCtrl.stateSuccessfullySubmitted = !1)
            }, function(b) {
                a.ContactSalesModalCtrl.stateSuccessfullySubmitted = !1,
                a.ContactSalesModalCtrl.currentStatus = "Unable to process request, please try again or contact support@convo.com"
            }).then(function() {
                a.$$phase || a.$digest()
            })
        }
        function i(b) {
            var c = e.getUserInfo().user_id;
            g.getUserDetails(c).then(function(c) {
                c.phone_no ? a.ContactSalesModalCtrl.user.telephone = c.phone_no : a.ContactSalesModalCtrl.user.telephone = "#",
                b()
            }, function() {
                a.ContactSalesModalCtrl.user.telephone = "#",
                b()
            })
        }
        a.dismissModal = function() {
            c.dismiss(),
            b.$broadcast("ContactSalesModalCtrl:closedModal")
        }
        ,
        a.submitForm = function(b) {
            a.submitted = !0,
            b && (a.ContactSalesModalCtrl.currentStatus = "Submitting...",
            i(h))
        }
        ,
        a.ContactSalesModalCtrl = {
            stateSuccessfullySubmitted: !1,
            currentStatus: "",
            user: {
                email: e.getEmail(),
                fullName: e.getUserInfo().name,
                jobTitle: "",
                companySize: "",
                companyName: f.getAccountName(),
                telephone: "",
                comments: "",
                inquiry: "Inquire about Enterprise pricing"
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvPremiumUpgradeBtn", ["$location", "alertsService", "$rootScope", function(a, b, c) {
        return {
            restrict: "E",
            templateUrl: "premiumUpgrade/premiumUpgradeBtn/cnvPremiumUpgradeBtn.tpl.html",
            scope: !0,
            link: function(d, e, f) {
                d.openToolTipOrGoToPremiumUpgrade = function() {
                    c.$broadcast("premiumUpgradeOpened"),
                    a.url(d.cnvPremiumUpgradeBtn.premiumUpgradeUrl.slice(1))
                }
                ,
                d.openContactSalesModal = function() {
                    var a = "premiumUpgrade/contactSalesModal/contactSalesModal.tpl.html"
                      , c = "ContactSalesModalCtrl";
                    b.customModal(a, c, null , "contact-sales-modal")
                }
            },
            controller: ["$scope", "userInfo", "accountInfo", "AppLinks", function(a, b, c, d) {
                function e() {
                    var a = d.newResourceLink("19", [{
                        type: "17",
                        uid: 0
                    }], null , "Upgrade");
                    return d.linkToUrl(a, !0)
                }
                a.cnvPremiumUpgradeBtn = {
                    firstName: "",
                    accountName: "",
                    label: "",
                    showState: "",
                    loadDirective: !0,
                    premiumUpgradeUrl: ""
                };
                var f = c.getAccountLevel()
                  , g = b.isGuestUser();
                b.isAdmin();
                g || "STARTER" != f ? a.cnvPremiumUpgradeBtn.loadDirective = !1 : (a.cnvPremiumUpgradeBtn.firstName = b.getUserInfo().name.split(" ")[0],
                a.cnvPremiumUpgradeBtn.accountName = c.getAccountName(),
                a.cnvPremiumUpgradeBtn.premiumUpgradeUrl = e(),
                a.cnvPremiumUpgradeBtn.showState = "PREMIUM",
                a.cnvPremiumUpgradeBtn.label = "Upgrade",
                a.$parent.$broadcast("cnvPremiumUpgradeBtn:addClassToSearchBar", {
                    "class": "upgrade"
                }))
            }
            ]
        }
    }
    ]),
    b.module("convoApp").factory("relevanciesService", ["ServerComm", "$rootScope", "$q", "localStore", "userInfo", function(a, b, c, d, e) {
        function f() {
            return n
        }
        function g() {
            if (o) {
                var a = d.readData(f());
                return a && (a.version === m ? (a = a.data,
                p = c(function(b) {
                    b(a)
                })) : d.clearData(f())),
                o = !1,
                p
            }
            return p
        }
        function h(c, e, h) {
            var n = g();
            if (!j && (!k || e)) {
                var o = {
                    authToken: b.login_data.xmpp_session_token,
                    userID: b.login_data.user.user_id,
                    accountID: b.login_data.account_id,
                    groupIDs: c.join()
                };
                a.postx("analytics/relevancies", o).then(function(a) {
                    l.resolve(a.data),
                    p && h && i.trigger("relevanciesFetched"),
                    p = null ,
                    d.writeData(f(), a.data, m) || d.writeData(f(), "", m)
                })
            }
            return n ? n : l.promise
        }
        var i = {};
        _.extend(i, Backbone.Events);
        var j, k, l = c.defer(), m = 1, n = "USR_GRP_RELEVANCIES", o = !0, p = null ;
        return i.getRelevancies = h,
        i.getRelevanciesPromise = function() {
            var a = g();
            return a ? a : l.promise
        }
        ,
        i
    }
    ]);
    var f = f || {};
    f.rtc = f.rtc || {},
    f.rtc.Constants = {
        XMLNS: {
            SUBSCRIBE: "convo:pubsub:subscribe",
            UNSUBSCRIBE: "convo:pubsub:unsubscribe",
            REMOVE_NODE: "convo:pubsub:node:delete",
            REMOVE_ITEM: "convo:pubsub:item:delete",
            PUBLISH: "convo:pubsub:item:publish",
            FETCH_ITEMS: "convo:pubsub:item:get"
        },
        TAG: {
            CONVO_PUBSUB: "convo-pubsub",
            NODE_CONFIG: "node-config",
            RANGE: "range",
            ITEMS: "items",
            ITEM: "item",
            BODY: "body"
        }
    };
    var f = f || {};
    f.rtc = f.rtc || {},
    f.rtc.Notification = function() {
        this.type,
        this.data = null ,
        this.format = "json"
    }
    ,
    f.rtc.Notification.COMMENT_ADDED = 1,
    f.rtc.Notification.COMMENT_UPDATED = 8,
    f.rtc.Notification.COMMENT_DELETED = 128,
    f.rtc.Notification.UPDATE_FEED = 2,
    f.rtc.Notification.FEED_SHARING_INFO_UPDATED = 48,
    f.rtc.Notification.ACCOUNT_DATA_CHANGED = 4,
    f.rtc.Notification.ACCOUNT_DATA_CHANGED_WEB = 4194304,
    f.rtc.Notification.USER_SETTINGS_UPDATED = 5242880,
    f.rtc.Notification.USER_GROUP_SETTINGS_UPDATED = 6291456,
    f.rtc.Notification.REMINDERS_DATA_CHANGED = 16,
    f.rtc.Notification.UP_COMMING_DATA_CHANGED = 32,
    f.rtc.Notification.COMMENT_LIKE = 256,
    f.rtc.Notification.COMMENT_UNLIKE = 512,
    f.rtc.Notification.RESOURCE_LIKE = 1024,
    f.rtc.Notification.RESOURCE_UNLIKE = 2048,
    f.rtc.Notification.COMMENT_LIKE_OR_UNLIKE = 64,
    f.rtc.Notification.RESOURCE_LIKE_OR_UNLIKE = 80,
    b.module("convoApp").factory("RTCNotification", [function() {
        return f.rtc.Notification
    }
    ]);
    var f = f || {};
    f.rtc = f.rtc || {},
    f.rtc.PubsubEvents = {
        SYNCHRONIZATION_CHANGE: "synchronizationChange",
        RECONNECT: "reconnect",
        ITEM_RECEIVE: "itemReceive",
        ITEM_RETRACT: "itemRetract",
        UNSUBSCRIBED: "unsubscribed",
        REMOVED: "removed",
        PROPERTY_ADD: "propertyAdd",
        PROPERTY_CHANGE: "propertyChange",
        PROPERTY_REMOVE: "propertyRemove",
        ACQUIRE_LOCK_RESULT: "acquireLockResult",
        RESOURCE_LOCKED: "resourceLocked",
        RESOURCE_RELEASED: "resourceReleased",
        CHANGE_RECEIVED: "changeReceived",
        NOTIFICATION_RECEIVE: "notificationReceive"
    };
    var f = f || {};
    f.rtc = f.rtc || {},
    f.rtc.RTCFactory = function() {
        var a = null 
          , b = null 
          , d = {};
        return {
            init: function(c, d) {
                b = c,
                a = d
            },
            getRTCManager: function(e, g) {
                if (d[e] !== c)
                    return d[e].numClients++,
                    d[e].instance;
                if (!b || !a)
                    throw new Error("RTCFactory not initialized");
                var h = new f.rtc.RTCommuncationManager(g,e,b,a);
                return d[e] = {
                    instance: h,
                    numClients: 1
                },
                h
            },
            releaseRTCManager: function(a) {
                d[a].numClients--,
                0 === d[a].numClients && (d[a].instance.disconnect(),
                delete d[a])
            },
            createNotificationManager: function(c) {
                if (!b || !a)
                    throw new Error("RTCFactory not initialized");
                return new f.rtc.RTCNotificationManager(c,b,a)
            }
        }
    }(),
    b.module("convoApp").factory("rtcNotificationManager", [function() {
        return f.rtc.RTCFactory.createNotificationManager("")
    }
    ]);
    var f = f || {};
    f.rtc = f.rtc || {},
    f.rtc.PubsubManager = function(a, b) {
        var c = f.rtc.Constants
          , d = {}
          , e = b
          , g = a
          , h = this;
        e.addListener(f.chatsdk.ChatEvents.CONNECTED, function() {
            e.addHandler(h.onMessageReceived, null , "message", "normal")
        }),
        this.subscribe = function(a, b, e) {
            d[a.sharedID] = a,
            this.sendPubsubIQ("set", [a.nodeConfiguration], a.sharedID, c.XMLNS.SUBSCRIBE, b, e)
        }
        ,
        this.unsubscribe = function(a, b, d) {
            this.sendPubsubIQ("set", [], a.sharedID, c.XMLNS.UNSUBSCRIBE, b, d)
        }
        ,
        this.remove = function(a, b, d) {
            this.sendPubsubIQ("set", [], a.sharedID, c.XMLNS.REMOVE_NODE, b, d)
        }
        ,
        this.publishItem = function(a, b, d, e) {
            d || (d = this.onItemPublished),
            this.sendPubsubIQ("set", [a], b.sharedID, c.XMLNS.PUBLISH, d, e)
        }
        ,
        this.removeItem = function(a, b, d, e) {
            var g = new f.rtc.MessageItem(a);
            d || (d = this.onItemRemoved),
            this.sendPubsubIQ("set", [g], b.sharedID, c.XMLNS.REMOVE_ITEM, d, e)
        }
        ,
        this.fetchAllItems = function(a, b, d) {
            var e = new f.rtc.RangeElement(0,a.nodeConfiguration.MAX_PERSIST_TEIMS);
            this.sendPubsubIQ("get", [e], a.sharedID, c.XMLNS.FETCH_ITEMS, b, d)
        }
        ,
        this.getPubSubJid = function() {
            return this._convoChatJid || (this._convoChatJid = "convopubsub@" + g.getDomain()),
            this._convoChatJid
        }
        ,
        this.sendPubsubIQ = function(a, b, d, e, i, j) {
            var k = f.chatsdk.ChatUtils.generateUniqueId()
              , l = $iq({
                to: h.getPubSubJid(),
                type: a,
                id: k
            });
            l.c(c.TAG.CONVO_PUBSUB, {
                node_id: d,
                xmlns: e
            }),
            b && b.length && b.forEach(function(a) {
                "function" == typeof a.serialize ? l.cnode(a.serialize()).up() : console.warn("item is not serializable")
            }),
            g.sendIQ(l, k, !0, i, j)
        }
        ,
        this.onMessageReceived = function(a) {
            try {
                var b = $(a).find(c.TAG.CONVO_PUBSUB);
                if (b.length) {
                    var e = (new f.rtc.MessageItem).deserialize(b.find(c.TAG.ITEM)[0])
                      , g = h.parseNodeId(b.attr("node_id"))
                      , i = d[g];
                    b.attr("xmlns") === c.XMLNS.PUBLISH ? i && i.messageItemsReceived([e]) : b.attr("xmlns") === c.XMLNS.REMOVE_ITEM && i && i.retractIDsReceived(g, [e.itemID])
                }
            } catch (j) {
                console.error(j.stack)
            }
            return !0
        }
        ,
        this.parseNodeId = function(a) {
            return a ? a : null 
        }
        ,
        this.onItemPublished = function(a) {
            var b = $(a).find(c.TAG.CONVO_PUBSUB);
            if (b.length) {
                var e = (new f.rtc.MessageItem).deserialize(b.find(c.TAG.ITEM)[0])
                  , g = d[b.attr("node_id")];
                g && g.messageItemsReceived([e])
            }
        }
        ,
        this.onItemRemoved = function(a) {
            var b = $(a).find(c.TAG.CONVO_PUBSUB);
            if (b) {
                var e = (new f.rtc.MessageItem).deserialize(b.find(c.TAG.ITEM)[0])
                  , g = b.attr("node_id")
                  , h = d[g];
                h && h.retractIDsReceived(g, [e.itemID])
            }
        }
    }
    ,
    f.rtc.RangeElement = function(a, b) {
        this.fromIndex = a,
        this.toIndex = b
    }
    ,
    f.rtc.RangeElement.prototype.serialize = function() {
        return $build(f.rtc.Constants.TAG.RANGE, {
            from_index: this.fromIndex,
            to_index: this.toIndex
        }).tree()
    }
    ;
    var f = f || {};
    f.rtc = f.rtc || {},
    f.rtc.RTCommuncationManager = function(a, b, c, d) {
        f.chatsdk.EventDispatcher.call(this),
        this.Events = f.chatsdk.ChatEvents,
        this.PSEvents = f.rtc.PubsubEvents,
        this._RTC = f.rtc,
        this.Util = f.chatsdk.ChatUtils,
        this.timestampManager = d,
        this._xmppCallsManager = c;
        var e = this;
        this.presence = new this._RTC.SharedObject(b + "_presence_web",null ,this.timestampManager,this._xmppCallsManager),
        this.presence.addListener(this.PSEvents.SYNCHRONIZATION_CHANGE, function(a) {
            e.onPresenceSyncChange(a)
        });
        var g = new this._RTC.NodeConfiguration;
        g.maxPersistItems = 1,
        this.locksModel = new this._RTC.SharedObject(b + "_locks",g,this.timestampManager,this._xmppCallsManager),
        this.locksModel.addListener(this.PSEvents.PROPERTY_ADD, function(a) {
            e.onLocksPropertyAdd(a)
        }),
        this.locksModel.addListener(this.PSEvents.PROPERTY_CHANGE, function(a) {
            e.onLocksPropertyChange(a)
        }),
        this.locksModel.addListener(this.PSEvents.PROPERTY_REMOVE, function(a) {
            e.onLocksPropertyRemove(a)
        }),
        this.locksModel.addListener(this.PSEvents.SYNCHRONIZATION_CHANGE, function(a) {
            e.onLocksSyncChange(a)
        });
        var h = new this._RTC.NodeConfiguration;
        h.maxPersistItems = 0,
        this.changesNode = new this._RTC.Node(b + "_changes_web",h,this._xmppCallsManager),
        this.changesNode.addListener(this.PSEvents.SYNCHRONIZATION_CHANGE, function(a) {
            e.onSyncChange(a)
        }),
        this.changesNode.addListener(this.PSEvents.ITEM_RECEIVE, function(a) {
            e.onItemReceive(a)
        }),
        this.changesNodeAir = new this._RTC.Node(b + "_changes",h,this._xmppCallsManager),
        this.changesNodeAir.addListener(this.PSEvents.ITEM_RECEIVE, function(a) {
            e.changesNodeAir.unsubscribe()
        })
    }
    ,
    f.rtc.RTCommuncationManager.prototype = new f.chatsdk.EventDispatcher,
    f.rtc.RTCommuncationManager.prototype.constructor = f.rtc.RTCommuncationManager,
    f.rtc.RTCommuncationManager.prototype.connect = function() {
        this.subscribeAll()
    }
    ,
    f.rtc.RTCommuncationManager.prototype.disconnect = function() {
        var a = this._xmppCallsManager.getJid();
        this.presence.isSynchronized() && this.presence.hasProperty(a) && this.presence.removeProperty(a),
        this.changesNode.isSynchronized ? (this.locksModel.close(),
        this.presence.close(),
        this.changesNode.unsubscribe()) : (this.locksModel.cancelSubscription(),
        this.presence.cancelSubscription(),
        this.changesNode.cancelSubscription())
    }
    ,
    f.rtc.RTCommuncationManager.prototype.isConnected = function() {
        return this.changesNode.isSynchronized && this.presence.isSynchronized() && this.locksModel.isSynchronized()
    }
    ,
    f.rtc.RTCommuncationManager.prototype.canIsendChange = function() {
        if (this.isConnected()) {
            var a = this.presence.values
              , b = this._xmppCallsManager.getJid();
            for (var c in a)
                if (c != b)
                    return !0
        }
        return !1
    }
    ,
    f.rtc.RTCommuncationManager.prototype.sendChange = function(a) {
        if (this.changesNode.isSynchronized) {
            var b = new this._RTC.MessageItem(this.Util.generateUniqueId(),this._xmppCallsManager.getJid(),this.timestampManager.UTCTimestamp(),a);
            this.changesNode.publishItem(b)
        }
    }
    ,
    f.rtc.RTCommuncationManager.prototype.acquireLock = function(a) {
        if (this.locksModel.isSynchronized()) {
            var b = this._xmppCallsManager.getJid();
            if (this.locksModel.hasProperty(a)) {
                var c = this.locksModel.getProperty(a)
                  , d = this.Util.makeUserIdFromJid(c)
                  , e = new this._RTC.Lock;
                e.absoluteItemID = a,
                e.userId = d,
                c != b ? e.status = this._RTC.LockStatus.FAILURE : e.status = this._RTC.LockStatus.SUCCESS,
                this.dispatch(this.PSEvents.ACQUIRE_LOCK_RESULT, {
                    data: e
                }),
                console.log("acquireLock :lock found, lock.status = " + e.status)
            } else
                this.locksModel.setProperty(a, b),
                console.log("acquireLock :acquiring...")
        } else
            console.log("acquireLock lockModel is not synchronized")
    }
    ,
    f.rtc.RTCommuncationManager.prototype.sendEditComplete = function(a) {
        this.changesNodeAir.subscribe();
        var b = new this._RTC.MessageItem(this.Util.generateUniqueId(),this._xmppCallsManager.getJid(),this.timestampManager.UTCTimestamp(),{
            type: 5,
            itemId: a
        });
        this.changesNodeAir.publishItem(b)
    }
    ,
    f.rtc.RTCommuncationManager.prototype.releaseLock = function(a, b) {
        if (this.locksModel.isSynchronized()) {
            if (this.locksModel.hasProperty(a)) {
                var c = this._xmppCallsManager.getJid()
                  , d = this.locksModel.getProperty(a);
                (d == c || b) && (this.locksModel.removeProperty(a),
                this.sendEditComplete(a),
                console.log("releaseLock: releasing..."))
            }
        } else
            console.log("releaseLock: lockModel is not synchronized")
    }
    ,
    f.rtc.RTCommuncationManager.prototype.queryLock = function(a) {
        var b;
        if (this.locksModel.isSynchronized()) {
            b = new this._RTC.Lock;
            var c = this._xmppCallsManager.getJid();
            if (this.locksModel.hasProperty(a)) {
                var d = this.locksModel.getProperty(a)
                  , e = this.Util.makeUserIdFromJid(d);
                b.absoluteItemID = a,
                b.userId = e,
                d != c ? b.status = this._RTC.LockStatus.IN_USE : b.status = this._RTC.LockStatus.SUCCESS
            } else
                b.userId = this.Util.makeUserIdFromJid(c),
                b.status = this._RTC.LockStatus.FREE;
            console.log("queryLock: lock.status = " + b.status)
        } else
            console.log("queryLock: lockModel is not synchronized");
        return b
    }
    ,
    f.rtc.RTCommuncationManager.prototype.subscribeAll = function() {
        this.changesNode.subscribe(),
        this.presence.subscribe(),
        this.locksModel.subscribe()
    }
    ,
    f.rtc.RTCommuncationManager.prototype.onSyncChange = function(a) {
        console.log("changesNode.isSynchronized = " + this.changesNode.isSynchronized),
        this.changesNode.isSynchronized ? this.checkAllSynced() : this.dispatch(this.Events.DISCONNECTED)
    }
    ,
    f.rtc.RTCommuncationManager.prototype.checkAllSynced = function() {
        this.changesNode.isSynchronized && this.locksModel.isSynchronized() && this.presence.isSynchronized() && (console.log("connected"),
        this.dispatch(this.Events.CONNECTED))
    }
    ,
    f.rtc.RTCommuncationManager.prototype.onItemReceive = function(a) {
        var b = a.data;
        b.publisherID != this._xmppCallsManager.getJid() && this.dispatch(this.PSEvents.CHANGE_RECEIVED, {
            data: b.body
        })
    }
    ,
    f.rtc.RTCommuncationManager.prototype.onPresenceSyncChange = function(a) {
        if (this.checkAllSynced(),
        console.log("presence.isSynchronized = " + this.presence.isSynchronized()),
        this.presence.isSynchronized()) {
            var b = this._xmppCallsManager.getJid();
            this.presence.hasProperty(b) || this.presence.setProperty(b, !0)
        }
    }
    ,
    f.rtc.RTCommuncationManager.prototype.onLocksPropertyAdd = function(a) {
        var b = new this._RTC.Lock;
        b.absoluteItemID = a.propertyName;
        var c = this._xmppCallsManager.getJid()
          , d = a.value
          , e = this.Util.makeUserIdFromJid(d);
        d == c ? (b.userId = this.Util.makeUserIdFromJid(c),
        d == c ? b.status = this._RTC.LockStatus.SUCCESS : b.status = this._RTC.LockStatus.FAILURE,
        console.log("onLocksPropertyAdd: acquireLockResult lock.status=" + b.status),
        this.dispatch(this.PSEvents.ACQUIRE_LOCK_RESULT, {
            data: b
        })) : (b.userId = e,
        b.status = this._RTC.LockStatus.IN_USE,
        null  == b.userId ? console.log("onLocksPropertyAdd: resourceLocked by other user(not found in UsersManager) scrybeId =" + e) : console.log("onLocksPropertyAdd: resourceLocked by other user scrybeId =" + e),
        this.dispatch(this.PSEvents.RESOURCE_LOCKED, {
            data: b
        }))
    }
    ,
    f.rtc.RTCommuncationManager.prototype.onLocksPropertyChange = function(a) {
        var b = new this._RTC.Lock;
        b.absoluteItemID = a.propertyName;
        var c = a.value
          , d = this._xmppCallsManager.getJid();
        b.userId = this.Util.makeUserIdFromJid(c),
        c == d ? (b.status = this._RTC.LockStatus.SUCCESS,
        this.dispatch(this.PSEvents.ACQUIRE_LOCK_RESULT, {
            data: b
        })) : (b.status = this._RTC.LockStatus.IN_USE,
        this.dispatch(this.PSEvents.RESOURCE_LOCKED, {
            data: b
        }),
        console.log("onLocksPropertyChange: resourceLocked"))
    }
    ,
    f.rtc.RTCommuncationManager.prototype.onLocksPropertyRemove = function(a) {
        var b = a.value
          , c = this.Util.makeUserIdFromJid(b)
          , d = new this._RTC.Lock;
        d.absoluteItemID = a.propertyName,
        d.userId = c,
        d.status = this._RTC.LockStatus.FREE,
        this.dispatch(this.PSEvents.RESOURCE_RELEASED, {
            data: d
        }),
        console.log("onLocksPropertyRemove: lock released")
    }
    ,
    f.rtc.RTCommuncationManager.prototype.onLocksSyncChange = function(a) {
        this.checkAllSynced(),
        console.log("locksModel.isSynchronized = " + this.locksModel.isSynchronized())
    }
    ;
    var f = f || {};
    f.rtc = f.rtc || {},
    f.rtc.RTCNotificationManager = function(a, b, c) {
        function d(a) {
            var b = a.data;
            b && b.body && b.publisherID && b.publisherID != k.getJid() && m.dispatch(j.NOTIFICATION_RECEIVE, {
                notification: b.body
            })
        }
        function e(a) {
            o.isSynchronized ? m.dispatch(i.CONNECTED) : m.dispatch(i.DISCONNECTED)
        }
        f.chatsdk.EventDispatcher.call(this);
        var g = f.rtc
          , h = f.chatsdk.ChatUtils
          , i = f.chatsdk.ChatEvents
          , j = g.PubsubEvents
          , k = b
          , l = c
          , m = this
          , n = new g.NodeConfiguration
          , o = new g.Node(a + "notificaitons",n,k);
        o.addListener(j.ITEM_RECEIVE, d),
        o.addListener(j.SYNCHRONIZATION_CHANGE, e),
        this.connect = function() {
            o.subscribe()
        }
        ,
        this.disconnect = function() {
            o.unsubscribe()
        }
        ,
        this.send = function(a) {
            if (o.isSynchronized) {
                var b = new g.MessageItem(h.generateUniqueId(),k.getJid(),l.UTCTimestamp(),a);
                o.publishItem(b)
            }
        }
        ,
        this.isConnected = function() {
            return o.isSynchronized
        }
    }
    ,
    f.rtc.RTCNotificationManager.prototype = new f.chatsdk.EventDispatcher,
    f.rtc.RTCNotificationManager.prototype.constructor = f.rtc.RTCNotificationManager;
    var f = f || {};
    f.rtc = f.rtc || {},
    f.rtc.Lock = function() {
        this.sectionID,
        this.absoluteItemID,
        this.status,
        this.userId,
        this.scrybeID
    }
    ,
    f.rtc.LockStatus = {
        SUCCESS: 1,
        FAILURE: 10,
        IN_USE: 20,
        FREE: 30
    };
    var f = f || {};
    f.rtc = f.rtc || {},
    f.rtc.MessageItem = function(a, b, c, d) {
        this.format = "json",
        this.itemID = a,
        this.publisherID = b,
        this.timestamp = c,
        this.body = d
    }
    ,
    f.rtc.MessageItem.prototype.serialize = function() {
        var a = f.rtc.Constants.TAG
          , b = {
            id: this.itemID
        };
        this.publisherID && (b.publisher_id = this.publisherID),
        this.timestamp && (b.timestamp = this.timestamp),
        this.format && (b.format = this.format);
        var c = $build(a.ITEM, b);
        if (this.body) {
            var d = JSON.stringify(this.body)
              , e = pako.deflate(d, {
                to: "string"
            });
            e = btoa(e),
            c.c(a.BODY).t(e)
        }
        return c.tree()
    }
    ,
    f.rtc.MessageItem.prototype.deserialize = function(a) {
        if (!a)
            return null ;
        var b = f.rtc.Constants.TAG
          , c = $(a);
        this.itemID = c.attr("id"),
        c.attr("publisher_id") && (this.publisherID = c.attr("publisher_id")),
        c.attr("timestamp") && (this.timestamp = parseInt(c.attr("timestamp"))),
        c.attr("format") ? this.format = c.attr("format") : this.format = null ;
        var d = c.find(b.BODY);
        if ("json" === this.format && d.length) {
            var e = atob(d.text());
            e = pako.inflate(e, {
                to: "string"
            }),
            this.body = JSON.parse(e)
        }
        return this
    }
    ;
    var f = f || {};
    f.rtc = f.rtc || {},
    f.rtc.Node = function(a, b, c) {
        f.chatsdk.EventDispatcher.call(this),
        this.Events = f.chatsdk.ChatEvents,
        this.PSEvents = f.rtc.PubsubEvents,
        this._RTC = f.rtc,
        this.subscribeCall = null ,
        this.subscribed = !1,
        this.subscribeInProgress = !1,
        this.isSynchronized = !1,
        this.PUBLISH_ITEMS_QUEUE_SIZE = 20,
        this.sharedID = a,
        this.nodeConfiguration = b,
        this.itemsReceivedBeforeSync = [],
        this.publishedItemsQueue = [],
        this._isRemoved = !1,
        this._xmppCallsManager = c,
        this.isUnsubscribed = !1;
        var d = this;
        this.onSessionConnected = function() {
            d.subscribed && (d.isSynchronized || d.subscribeInProgress || d.subscribeCall || (d.dispatch(d.PSEvents.RECONNECT),
            d.subscribe()))
        }
        ,
        this.unsubscribed = function(a) {
            d.dispatch(d.PSEvents.UNSUBSCRIBED)
        }
        ,
        this.onNodeRemoved = function(a) {
            d.dispatch(d.PSEvents.REMOVED)
        }
        ,
        this.onSessionDisconnected = function() {
            d.isSynchronized && d.subscribed && (d.subscribeInProgress = !1,
            d.setIsSynchronized(!1))
        }
        ,
        this._xmppCallsManager.addListener(this.Events.CONNECTED, this.onSessionConnected),
        this._xmppCallsManager.addListener(this.Events.DISCONNECTED, this.onSessionDisconnected)
    }
    ,
    f.rtc.Node.prototype = new f.chatsdk.EventDispatcher,
    f.rtc.Node.prototype.constructor = f.rtc.Node,
    f.rtc.Node.prototype.subscribe = function() {
        if (!(this.subscribeInProgress || this.isSynchronized || this.subscribeCall)) {
            if (this.subscribeInProgress = !0,
            !this.sharedID)
                return void console.error("Node.sharedID is not set");
            var a = this;
            this.subscribeCall = new this._RTC.SubscribeNode(this,function() {
                a.onNodeSubscribed()
            }
            ,null ,this._xmppCallsManager),
            this.subscribeCall.execute()
        }
    }
    ,
    f.rtc.Node.prototype.cancelSubscription = function() {
        this.subscribeInProgress && (this.subscribeInProgress = !1,
        this.subscribeCall && (this.subscribeCall.cancel(),
        this.subscribeCall = null ),
        this.setIsSynchronized(!1))
    }
    ,
    f.rtc.Node.prototype.publishItem = function(a) {
        return this.isSubscribeInProgress() ? void this.queuePublishedMessages(a) : void (this.validated() && this._xmppCallsManager.publishItem(a, this, null , null ))
    }
    ,
    f.rtc.Node.prototype.retractItem = function(a) {
        return this.isSubscribeInProgress() ? void this.removeMessageItemFromQueue(a) : void (this.validated() && this._xmppCallsManager.removeItem(a, this, null , null ))
    }
    ,
    f.rtc.Node.prototype.unsubscribe = function() {
        this.isUnsubscribed || (this._xmppCallsManager.unsubscribe(this, this.unsubscribed, null ),
        this._xmppCallsManager.removeListener(this.Events.CONNECTED, this.onSessionConnected),
        this._xmppCallsManager.removeListener(this.Events.DISCONNECTED, this.onSessionDisconnected),
        this.subscribed = this.isSynchronized = !1,
        this.isUnsubscribed = !0)
    }
    ,
    f.rtc.Node.prototype.remove = function() {
        this._xmppCallsManager.remove(this, this.onNodeRemoved, null ),
        this.isSynchronized = !1,
        this._isRemoved = !0
    }
    ,
    f.rtc.Node.prototype.isUnsubscribed = function() {
        return this.isUnsubscribed
    }
    ,
    f.rtc.Node.prototype.isRemoved = function() {
        return this._isRemoved
    }
    ,
    f.rtc.Node.prototype.validated = function() {
        return this._isRemoved ? (console.error("Node " + sharedID + " is removed from the service"),
        !1) : this.isUnsubscribed ? (console.error("User has unsubscribed from node = " + sharedID),
        !1) : this.isSynchronized ? !0 : (console.error("Node " + sharedID + " is not Syncronized"),
        !1)
    }
    ,
    f.rtc.Node.prototype.onNodeSubscribed = function() {
        this.subscribeCall && (this.subscribeCall.cancel(),
        this.subscribeCall = null ),
        this.subscribed = !0,
        this.isUnsubscribed = !1,
        this.subscribeInProgress = !1,
        this.setIsSynchronized(!0),
        this.processPublishedQueue()
    }
    ,
    f.rtc.Node.prototype.setIsSynchronized = function(a) {
        this.isSynchronized = a,
        this.itemsReceivedBeforeSync.length && (this.isSynchronized ? (this.processReceivedMessageItems(this.itemsReceivedBeforeSync),
        this.itemsReceivedBeforeSync = []) : this.itemsReceivedBeforeSync = []),
        this.dispatch(this.PSEvents.SYNCHRONIZATION_CHANGE)
    }
    ,
    f.rtc.Node.prototype.messageItemsReceived = function(a) {
        return this.isSynchronized ? void this.processReceivedMessageItems(a) : void (this.itemsReceivedBeforeSync = this.itemsReceivedBeforeSync.concat(a))
    }
    ,
    f.rtc.Node.prototype.retractIDsReceived = function(a, b) {
        this.isSynchronized && a == this.sharedID && b.length && b.forEach(function(a) {
            this.dispatch(this.PSEvents.ITEM_RETRACT, {
                nodeID: this.sharedID,
                data: a
            })
        }, this)
    }
    ,
    f.rtc.Node.prototype.processReceivedMessageItems = function(a) {
        a.forEach(function(a) {
            a.nodeID = this.sharedID,
            this.dispatch(this.PSEvents.ITEM_RECEIVE, {
                data: a
            })
        }, this)
    }
    ,
    f.rtc.Node.prototype.queuePublishedMessages = function(a) {
        this.publishedItemsQueue.push(a),
        this.publishedItemsQueue.length > this.PUBLISH_ITEMS_QUEUE_SIZE && this.publishedItemsQueue.shift()
    }
    ,
    f.rtc.Node.prototype.removeMessageItemFromQueue = function(a) {
        for (var b, c = this.publishedItemsQueue.length, d = 0; c > d; d++)
            if (b = this.publishedItemsQueue[d],
            b.itemID == a) {
                this.publishedItemsQueue.splice(d, 1);
                break
            }
    }
    ,
    f.rtc.Node.prototype.processPublishedQueue = function() {
        var a = this;
        this.publishedItemsQueue.forEach(function(b) {
            a.publishItem(b)
        }, this),
        this.publishedItemsQueue = []
    }
    ,
    f.rtc.Node.prototype.isSubscribeInProgress = function() {
        return this.subscribeInProgress || this.subscribed && !this._xmppCallsManager.isConnected()
    }
    ;
    var f = f || {};
    f.rtc = f.rtc || {},
    f.rtc.NodeConfiguration = function(a, b, c, d) {
        this.MAX_PERSIST_TEIMS = 1e4,
        this.maxPersistItems = a ? a : 0,
        this.deleteItemsOnUserOffline = b !== !1,
        this.unsubscribeUserOnOffline = c !== !1,
        this.deleteNodeOnLastUnsubscribe = d !== !1
    }
    ,
    f.rtc.NodeConfiguration.prototype.toJSON = function() {
        return {
            max_persist_items: this.maxPersistItems,
            delete_items_on_user_offline: this.deleteItemsOnUserOffline ? "yes" : "no",
            unsubscribe_user_on_offline: this.unsubscribeUserOnOffline ? "yes" : "no",
            delete_node_on_last_unsubscribe: this.deleteNodeOnLastUnsubscribe ? "yes" : "no"
        }
    }
    ,
    f.rtc.NodeConfiguration.prototype.serialize = function() {
        return $build(f.rtc.Constants.TAG.NODE_CONFIG, this.toJSON()).tree()
    }
    ;
    var f = f || {};
    f.rtc = f.rtc || {},
    f.rtc.SharedObject = function(a, b, c, d) {
        if (f.chatsdk.EventDispatcher.call(this),
        !a)
            return void console.error("SharedID is not set");
        this._RTC = f.rtc,
        this._PSEvents = f.rtc.PubsubEvents,
        this._timestampManager = c,
        this._xmppCallsManager = d,
        b || (b = new this._RTC.NodeConfiguration,
        b.maxPersistItems = b.MAX_PERSIST_TEIMS),
        this._sharedID = null ;
        var e = this;
        this._onReconnect = function(a) {
            e._sharedObject = {},
            e.dispatch(e._PSEvents.RECONNECT, a)
        }
        ,
        this._onItemReceive = function(a) {
            var b = a.data
              , c = e._sharedObject.hasOwnProperty(b.itemID)
              , d = c ? e._PSEvents.PROPERTY_CHANGE : e._PSEvents.PROPERTY_ADD;
            e._sharedObject[b.itemID] = b.body,
            e.dispatch(d, {
                propertyName: b.itemID,
                value: b.body
            })
        }
        ,
        this._onItemRetract = function(a) {
            var b = a.data;
            if (e._sharedObject.hasOwnProperty(b)) {
                var c = e._sharedObject[b];
                delete e._sharedObject[b],
                e.dispatch(e._PSEvents.PROPERTY_REMOVE, {
                    propertyName: b,
                    value: c
                })
            }
        }
        ,
        this._onNodeSyncChange = function(a) {
            e.dispatch(e._PSEvents.SYNCHRONIZATION_CHANGE, a)
        }
        ,
        this.node = new this._RTC.Node(a,b,this._xmppCallsManager),
        this.node.addListener(this._PSEvents.RECONNECT, this._onReconnect),
        this.node.addListener(this._PSEvents.ITEM_RETRACT, this._onItemRetract),
        this.node.addListener(this._PSEvents.ITEM_RECEIVE, this._onItemReceive),
        this.node.addListener(this._PSEvents.SYNCHRONIZATION_CHANGE, this._onNodeSyncChange),
        this._sharedObject = {}
    }
    ,
    f.rtc.SharedObject.prototype = new f.chatsdk.EventDispatcher,
    f.rtc.SharedObject.prototype.constructor = f.rtc.SharedObject,
    f.rtc.SharedObject.prototype.subscribe = function() {
        this.node.subscribe()
    }
    ,
    f.rtc.SharedObject.prototype.close = function() {
        this.node.isSynchronized && (this.node.unsubscribe(),
        this.node.removeListener(this._PSEvents.RECONNECT, this._onReconnect),
        this.node.removeListener(this._PSEvents.ITEM_RETRACT, this._onItemRetract),
        this.node.removeListener(this._PSEvents.ITEM_RECEIVE, this._onItemReceive),
        this.node.removeListener(this._PSEvents.SYNCHRONIZATION_CHANGE, this._onNodeSyncChange))
    }
    ,
    f.rtc.SharedObject.prototype.isSynchronized = function() {
        return this.node.isSynchronized
    }
    ,
    f.rtc.SharedObject.prototype.cancelSubscription = function() {
        return this.node.cancelSubscription()
    }
    ,
    f.rtc.SharedObject.prototype.setProperty = function(a, b) {
        if (this.node.isSynchronized) {
            var c = new this._RTC.MessageItem(a,this._xmppCallsManager.getJid(),this._timestampManager.UTCTimestamp(),b);
            this.node.publishItem(c)
        } else
            this.throwNotSynchronized()
    }
    ,
    f.rtc.SharedObject.prototype.getProperty = function(a) {
        return this._sharedObject[a]
    }
    ,
    f.rtc.SharedObject.prototype.hasProperty = function(a) {
        return this._sharedObject.hasOwnProperty(a)
    }
    ,
    f.rtc.SharedObject.prototype.removeProperty = function(a) {
        this.node.isSynchronized ? this.node.retractItem(a) : this.throwNotSynchronized()
    }
    ,
    f.rtc.SharedObject.prototype.isEmpty = function() {
        for (var a in this._sharedObject)
            return !1;
        return !0
    }
    ,
    f.rtc.SharedObject.prototype.removeAll = function() {
        for (var a in this._sharedObject)
            this.removeProperty(a)
    }
    ,
    f.rtc.SharedObject.prototype.values = function() {
        return this._sharedObject
    }
    ,
    f.rtc.SharedObject.prototype.throwNotSynchronized = function() {
        throw new Error("SharedObject " + _sharedID + " is not synchrionzed ")
    }
    ;
    var f = f || {};
    f.rtc = f.rtc || {},
    f.rtc.SubscribeNode = function(a, b, c, d) {
        this.canceled = !1,
        this.tries = 0,
        this.MAX_TRIES = 2,
        this.node = a,
        this.resultCallback = b,
        this.errorCallback = c,
        this.xmppCallsManager = d;
        var e = this;
        this.onSessionManagerConnected = function(a) {
            console.log("onSessionManagerConnected nodeID= " + e.node.sharedID + ", _xmppSession.isConnected  = " + e.xmppCallsManager.isConnected()),
            e.xmppCallsManager.removeListener(f.chatsdk.ChatEvents.CONNECTED, e.onSessionManagerConnected),
            e.canceled || e.subscribe()
        }
    }
    ,
    f.rtc.SubscribeNode.prototype.cancel = function() {
        this.canceled = !0
    }
    ,
    f.rtc.SubscribeNode.prototype.execute = function() {
        this.canceled || (this.xmppCallsManager.isConnected() ? (console.log("execute nodeID= " + this.node.sharedID + ",  xmppCallsManager.xmppConnected  = true"),
        this.subscribe()) : (this.xmppCallsManager.addListener(f.chatsdk.ChatEvents.CONNECTED, this.onSessionManagerConnected),
        console.log("execute nodeID= " + this.node.sharedID + ", not connected: xmppCallsManager.xmppConnected  = " + this.xmppCallsManager.isConnected())))
    }
    ,
    f.rtc.SubscribeNode.prototype.subscribed = function() {
        this.resultCallback && this.resultCallback()
    }
    ,
    f.rtc.SubscribeNode.prototype.subscribe = function() {
        if (!this.canceled) {
            var a = this;
            this.xmppCallsManager.subscribe(this.node, function(b) {
                a.onSubscribeResult(b)
            }, function(a) {
                this.onSubscribeError(a)
            })
        }
    }
    ,
    f.rtc.SubscribeNode.prototype.onSubscribeResult = function(a) {
        if (!this.canceled) {
            var b = f.rtc
              , c = b.Constants.TAG
              , d = $(a).find(c.CONVO_PUBSUB)
              , e = [];
            d.each(function() {
                var a = $(this);
                a.find(c.ITEM).each(function() {
                    var a = new b.MessageItem;
                    a.deserialize(this),
                    e.push(a)
                })
            }),
            e.length && this.node.messageItemsReceived(e),
            this.subscribed()
        }
    }
    ,
    f.rtc.SubscribeNode.prototype.onSubscribeError = function(a) {
        this.tries < this.MAX_TRIES ? (++this.tries,
        this.execute()) : console.error("onSubscribeError = " + a.getNode().toString())
    }
    ,
    b.module("convoApp").factory("advSearchService", [function() {
        function a() {
            i ? b() : d()
        }
        function b(a) {
            i && (i = !1,
            h.trigger("cnvAdvSearch:panelClose", a))
        }
        function c() {
            b(!0)
        }
        function d() {
            i || (i = !0,
            h.trigger("cnvAdvSearch:panelOpen"))
        }
        function e(a) {
            j = a,
            h.trigger("cnvAdvSearch:updateFilters", j)
        }
        function f(a) {
            j = a,
            h.trigger("cnvAdvSearch:applyFilters", j)
        }
        function g(a, b) {
            h.hasOwnProperty(a) && (h[a] = b)
        }
        var h = {
            panelOpen: !1,
            includeChats: !0,
            includeDrafts: !1
        }
          , i = !1
          , j = null ;
        return _.extend(h, Backbone.Events),
        h.togglePanel = a,
        h.updateFilters = e,
        h.applyFilters = f,
        h.setMoreOption = g,
        h.openPanel = d,
        h.closePanel = b,
        h.closePanelWithoutAnim = c,
        h
    }
    ]),
    b.module("convoApp").directive("cnvAdvancedSearch", ["advSearchService", "Users", "User", "usersGroupsListProvider", "Filters", "Group", "Groups", "$window", "Feed", "$timeout", "utils", function(c, d, e, f, g, h, i, j, k, l, m) {
        return {
            restrict: "E",
            templateUrl: "search/cnvAdvancedSearch/cnvAdvancedSearch.tpl.html",
            replace: !0,
            scope: !0,
            link: function(h, l, n) {
                function o() {
                    k.setFetchOptions("includeChats", h.moreOptions.includeChats),
                    h.$broadcast("render")
                }
                function p(a) {
                    var b = l.find(".bar-wrapper");
                    a = "SAFARI" === v ? !0 : a,
                    l.removeClass("collapse-bar"),
                    l.removeClass("collapse-bar-static"),
                    b.removeClass("collapse-bar"),
                    b.removeClass("collapse-bar-static"),
                    l.css("overflow", "visible"),
                    a ? (b.css("overflow", "visible"),
                    l.addClass("expand-bar-static"),
                    b.addClass("expand-bar-static"),
                    l.removeClass("expand-bar"),
                    b.removeClass("expand-bar"),
                    b = null ) : (l.addClass("expand-bar"),
                    b.addClass("expand-bar"),
                    u && j.clearInterval(u),
                    u = j.setTimeout(function() {
                        b.css("overflow", "visible"),
                        l.addClass("expand-bar-static"),
                        b.addClass("expand-bar-static"),
                        l.removeClass("expand-bar"),
                        b.removeClass("expand-bar"),
                        b = null 
                    }, 250))
                }
                function q(a) {
                    var b = l.find(".bar-wrapper");
                    a = "SAFARI" === v ? !0 : a,
                    l.removeClass("expand-bar"),
                    l.removeClass("expand-bar-static"),
                    b.removeClass("expand-bar"),
                    b.removeClass("expand-bar-static"),
                    b.css("overflow", "hidden"),
                    a ? (l.css("overflow", "hidden"),
                    l.addClass("collapse-bar-static"),
                    b.addClass("collapse-bar-static"),
                    l.removeClass("collapse-bar"),
                    b.removeClass("collapse-bar")) : (l.addClass("collapse-bar"),
                    b.addClass("collapse-bar"),
                    u && j.clearInterval(u),
                    u = j.setTimeout(function() {
                        l.css("overflow", "hidden"),
                        b.css("overflow", "hidden"),
                        l.addClass("collapse-bar-static"),
                        b.addClass("collapse-bar-static"),
                        l.removeClass("collapse-bar"),
                        b.removeClass("collapse-bar")
                    }, 250)),
                    h.closeFilterDropdown(null )
                }
                function r(a) {
                    if (h.filters = {
                        from: [],
                        to: [],
                        to_date: [],
                        has: [],
                        is: [],
                        "in": [],
                        discussions: []
                    },
                    a)
                        for (var b = 0; b < a.length; b++)
                            h.filters.hasOwnProperty(a[b].type) ? h.filters[a[b].type].push(a[b]) : (h.filters[a[b].type] = [],
                            h.filters[a[b].type].push(a[b]));
                    var c;
                    h.fromUsers = [],
                    h.toUsers = [],
                    h.filters.from.length > 0 && (c = new e(d.getUserById(h.filters.from[0].value)),
                    h.fromUsers.push(f.createUserListItemForSpecificGroup(c))),
                    h.filters.to.length > 0 && (g.isGroupFilter(h.filters.to[0]) ? h.toUsers.push(f.getGroupListItem(h.filters.to[0].value)) : (c = new e(d.getUserById(h.filters.to[0].value)),
                    h.toUsers.push(f.createUserListItemForSpecificGroup(c)))),
                    0 === h.filters.to_date.length && (h.dateOptions.model = null ),
                    h.$broadcast("render")
                }
                function s(a) {
                    a && 0 === $(a.target).closest(".filter-dropdown").length && (h.activeFilterDropdown = null ,
                    b.element(j).off("click", s),
                    h.$broadcast("render"))
                }
                var t = {
                    from: [],
                    to: [],
                    to_date: [],
                    has: [],
                    is: [],
                    "in": [],
                    discussions: []
                }
                  , u = null 
                  , v = m.whichBrowser();
                h.filters = _.clone(t),
                h.appliedPostFilter = "all_posts",
                h.usersService = d,
                h.toggleBar = c.togglePanel,
                h.moreOptions = {
                    includeChats: !0,
                    includeDrafts: !1
                },
                n.hasOwnProperty("type") && "feed" === n.type && l.addClass("feed-view"),
                h.openFilterDropdown = function(c, d) {
                    c && $(c.target).closest(".filter-dropdown").length > 0 || (h.activeFilterDropdown === d ? (h.activeFilterDropdown = null ,
                    b.element(j).off("click", s)) : (h.activeFilterDropdown = d,
                    c && c.stopPropagation(),
                    h.opened = !1,
                    b.element(j).on("click", s)),
                    a.setTimeout(function() {
                        l.find(".add-more-placeholder").trigger("click")
                    }, 0),
                    h.$broadcast("render"))
                }
                ,
                h.closeFilterDropdown = function(a) {
                    a && a.stopPropagation(),
                    h.activeFilterDropdown = null ,
                    b.element(j).off("click", s),
                    h.$broadcast("render")
                }
                ,
                h.getFullName = function(a) {
                    var b = d.getUserById(a);
                    if (b)
                        return b.first_name + " " + b.last_name;
                    var c = i.getGroup(a);
                    return c ? i.getGroupName(a) : "Anyone"
                }
                ,
                h.getPostFilterTitle = function() {
                    var a = "";
                    return (h.filters.has.length > 0 || h.filters.discussions.length > 0) && (a += "Has: ",
                    h.filters.discussions.length > 0 && (a = "Comments: any" + (h.filters.has.length > 0 ? ", Has: " : " ")),
                    h.filters.has.length > 0 && (a += h.filters.has[0].description + " ")),
                    h.filters.is.length > 0 && (h.filters.has.length > 0 && (a += "and "),
                    a += "Is: " + h.filters.is[0].description),
                    "" === a ? "All posts" : a
                }
                ,
                o(),
                c.on("cnvAdvSearch:panelClose", q),
                c.on("cnvAdvSearch:panelOpen", p),
                c.on("cnvAdvSearch:updateFilters", r),
                h.$on("$destroy", function() {
                    b.element(j).off("click", s),
                    c.off("cnvAdvSearch:panelClose", q),
                    c.off("cnvAdvSearch:panelOpen", p),
                    c.off("cnvAdvSearch:updateFilters", r)
                })
            },
            controller: ["$scope", "Users", "usersGroupsListProvider", "User", "$q", "advSearchService", "Filters", "FilterTypes", "Groups", "atMentionsListProvider", "$rootScope", function(b, c, d, e, f, g, h, i, j, l, m) {
                function n() {
                    var a = m.filterInfo;
                    a.filterApplied || a.filterLink || g.closePanelWithoutAnim()
                }
                b.toUsers = [],
                b.fromUsers = [],
                b.getAutoCompleteItems = function() {
                    b.fromUsersSourceList = [],
                    b.toUsersSourceList = [],
                    c.getUsers().then(function(a) {
                        for (var c = [], f = 0; f < a.length; f++) {
                            var g;
                            g = _.extend({}, a.models[f].toJSON()),
                            g.user_email_id = a.models[f].get("email"),
                            b.fromUsersSourceList.push(d.createUserListItemForSpecificGroup(new e(g))),
                            c.push(d.createUserListItemForSpecificGroup(new e(g)))
                        }
                        j.getSearchableGroups().then(function(a) {
                            a.forEach(function(a) {
                                c.push({
                                    type: i.GROUP,
                                    value: a.get("title"),
                                    label: a.get("title"),
                                    id: a.get("id"),
                                    access: a.get("access"),
                                    desclabel: "Group",
                                    formatteddesclabel: "Group",
                                    classes: "PUBLIC" == a.get("access") ? "Icon1_PublicChannel-01-blue" : "privateGroup_icon-blue"
                                })
                            }),
                            b.toUsersSourceList = c
                        })
                    })
                }
                ,
                b.getAutoCompleteUserItemsForFrom = function(a, b) {
                    var c = f.defer()
                      , d = l.queryPublishableUsers(a, b + 4);
                    return c.resolve(d),
                    c.promise
                }
                ,
                b.getAutoCompleteUserItemsForTo = function(a, b) {
                    var c = f.defer()
                      , d = l.queryPublishableUsersAndGroups(a, b + 4);
                    return c.resolve(d),
                    c.promise
                }
                ,
                b.onItemAddedInFromField = function(c) {
                    b.fromUsers = [],
                    b.fromUsers.push(c),
                    b.filters.from[0] = {
                        description: c.desclabel,
                        type: "from",
                        value: c.id
                    },
                    a.setTimeout(function() {
                        b.activeFilterDropdown = null ,
                        b.$broadcast("render"),
                        b.applyFilters()
                    }, 0)
                }
                ,
                b.onItemRemovedFromField = function(a) {
                    b.fromUsers = [],
                    b.filters.from = [],
                    b.applyFilters()
                }
                ,
                b.onItemAddedInToField = function(c) {
                    b.toUsers = [],
                    b.toUsers.push(c),
                    b.filters.to[0] = {
                        description: c.id,
                        type: "to",
                        value: c.id
                    },
                    a.setTimeout(function() {
                        b.activeFilterDropdown = null ,
                        b.$broadcast("render"),
                        b.applyFilters()
                    }, 0)
                }
                ,
                b.onItemRemovedToField = function(a) {
                    b.toUsers = [],
                    b.filters.to = [],
                    b.applyFilters()
                }
                ,
                b.applyFilters = function(a) {
                    a && a.stopPropagation();
                    var c = [];
                    b.filters.from.length > 0 && c.push(b.filters.from[0]),
                    b.filters.to.length > 0 && c.push(b.filters.to[0]),
                    b.filters.has.length > 0 && c.push(b.filters.has[0]),
                    b.filters.is.length > 0 && c.push(b.filters.is[0]),
                    b.filters.to_date.length > 0 && c.push(b.filters.to_date[0]),
                    b.filters["in"].length > 0 && c.push(b.filters["in"][0]),
                    b.filters.discussions.length > 0 && c.push(b.filters.discussions[0]),
                    g.applyFilters(c)
                }
                ,
                b.applyPostFilter = function(a, c) {
                    if (a && a.stopPropagation(),
                    c === h.hasFilter.ALL_FILES || c === h.hasFilter.IMAGES || c === h.hasFilter.PDF_VALUE || c === h.hasFilter.WORD_DOCS_VALUE || c === h.hasFilter.SLIDE_SHOWS_VALUE || c === h.hasFilter.EXCEL_SHEETS_VALUE || c === h.hasFilter.VIDEOS) {
                        var d = h.newHasFilter(c);
                        b.filters.has[0] && b.filters.has[0].description == d.description ? b.filters.has = [] : (b.filters.has[0] = d,
                        b.filters.is.length > 0 && ("link" === b.filters.is[0].description || "chat" === b.filters.is[0].description) && (b.filters.is = []))
                    } else if ("link" === c || "chat" === c) {
                        var d = h.newFilter("is", "link" === c ? 4 : 10, c);
                        b.filters.is[0] && b.filters.is[0].description == d.description ? b.filters.is = [] : (b.filters.is[0] = d,
                        b.filters.has = [],
                        "chat" === c && b.filters.discussions.length > 0 && (b.filters.discussions = []))
                    } else if (c === i.IN_DRAFTS || c === i.IN_TRASH) {
                        var d = h.newFilter("in", c, c);
                        b.filters["in"].length > 0 && b.filters["in"][0].description == c ? b.filters["in"] = [] : b.filters["in"][0] = d
                    } else if ("all_posts" === c)
                        b.filters.has = [],
                        b.filters.is = [],
                        b.filters.discussions = [];
                    else if ("include_chats" === c)
                        b.filters["in"] = [];
                    else if (c === i.COMMENTS)
                        if (b.filters.discussions.length > 0)
                            b.filters.discussions = [];
                        else {
                            var d = h.newFilter(i.DISCUSSIONS, i.ANY_VALUE, i.ANY_VALUE);
                            b.filters.discussions.push(d),
                            b.filters.is.length > 0 && "chat" === b.filters.is[0].description && (b.filters.is = [])
                        }
                    b.closeFilterDropdown(),
                    b.applyFilters(),
                    b.$broadcast("render")
                }
                ,
                b.applyMoreOptions = function(a, c, d) {
                    a && a.stopPropagation(),
                    b.moreOptions.hasOwnProperty(c) && (d || (b.moreOptions[c] = !b.moreOptions[c]),
                    g.setMoreOption(c, b.moreOptions[c]),
                    k.setFetchOptions("includeChats", b.moreOptions.includeChats)),
                    b.applyFilters(),
                    b.$broadcast("render"),
                    b.$emit("refetchFeed")
                }
                ,
                b.getAutoCompleteItems(),
                b.open = function(a) {
                    a.preventDefault(),
                    a.stopPropagation(),
                    b.opened = !b.opened,
                    b.opened && b.closeFilterDropdown()
                }
                ,
                b.dateOptions = {
                    formats: ["dd-MMMM-yyyy", "yyyy/MM/dd", "dd.MM.yyyy", "shortDate"],
                    formatYear: "yy",
                    startingDay: 1,
                    model: null ,
                    showButtonBar: !1,
                    maxDate: (new Date).getTime()
                },
                b.$watch("dateOptions.model", function() {
                    b.dateOptions.model && (b.dateOptions.model.setHours(23, 59, 59),
                    b.filters.to_date = [h.newFilter("to_date", b.dateOptions.model.getTime(), b.dateOptions.model.getTime())],
                    b.applyFilters())
                }),
                b.$on("filterChange", n)
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvFeedSearchBar", ["AppLinks", "$location", "FiltersQueryTransformer", "FilterTypes", "FeedSearchAutoCompleteUtils", "Groups", "Users", "Filters", "userImgUrlFilter", "UserProfileImage", "$q", "mixpanelService", "advSearchService", "recentSearchService", "Feed", "$filter", "chatService", "datetimeService", "tagsService", "$timeout", "hashtagsProvider", "$rootScope", "$window", "UserProfileImage", "userInfo", "searchService", function(a, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, k, y, z) {
        return {
            restrict: "A",
            scope: !0,
            link: function(l, t, u) {
                function w() {
                    var a = []
                      , b = 0;
                    ea = [],
                    fa = {},
                    h.getSearchableUsers().then(function(c) {
                        for (var d = [], f = [], h = 0; h < c.length; h++) {
                            var l = c.at(h)
                              , m = l.get("first_name") + " " + l.get("last_name")
                              , n = l.get("email")
                              , o = !0
                              , p = !1
                              , q = !1;
                            "REMOVED" === l.get("status") ? p = !0 : "INVITED" === l.get("status") && (q = !0),
                            l.get("extra_info") && (n = l.get("extra_info"),
                            o = !1);
                            var r = {
                                type: e.USER,
                                value: l.get("email"),
                                label: m,
                                id: l.get("user_id"),
                                imgurl: j(l.get("user_id"), l.get("profile_image_type"), l.get("profile_image_version"), k.PROFILE_IMAGE_SIZE_32x32),
                                desclabel: n,
                                formatteddesclabel: n,
                                doquerydesc: o,
                                removed: p,
                                invited: q
                            };
                            q || p ? q ? d.push(r) : p && f.push(r) : a.push(r)
                        }
                        fa[e.USER] = {
                            start_index: b,
                            num_items: a.length
                        },
                        b += a.length,
                        fa[Y] = {
                            start_index: b,
                            num_items: d.length
                        },
                        b += d.length,
                        fa[Z] = {
                            start_index: b,
                            num_items: f.length
                        },
                        b += f.length,
                        a = a.concat(d, f),
                        g.getSearchableGroups().then(function(c) {
                            c.forEach(function(b) {
                                a.push({
                                    type: e.GROUP,
                                    value: b.get("title"),
                                    label: b.get("title"),
                                    access: b.get("access"),
                                    desclabel: "Group",
                                    formatteddesclabel: "Group",
                                    classes: "PUBLIC" == b.get("access") ? "Icon1_PublicChannel-01-blue" : "privateGroup_icon-blue"
                                })
                            }),
                            fa[e.GROUP] = {
                                start_index: b,
                                num_items: c.length
                            },
                            b += c.length,
                            a.push({
                                type: e.IS,
                                value: "message",
                                label: "message",
                                classes: "icons2_Chats-blue"
                            }, {
                                type: e.IS,
                                value: "link",
                                label: "link",
                                classes: "icons_Links-blue"
                            }, {
                                type: e.IS,
                                value: "chat",
                                label: "chat",
                                classes: "icons2_Chats-blue"
                            }),
                            fa[e.IS] = {
                                start_index: b,
                                num_items: 3
                            },
                            b += 3,
                            a.push({
                                type: e.IN,
                                value: e.IN_DRAFTS,
                                label: e.IN_DRAFTS,
                                classes: "icons_Drafts-blue"
                            }, {
                                type: e.IN,
                                value: e.IN_TRASH,
                                label: e.IN_TRASH,
                                classes: "icons2_Trash-blue"
                            }, {
                                type: e.IN,
                                value: e.IN_STARRED,
                                label: e.IN_STARRED,
                                classes: "icons_Star-blue"
                            }),
                            fa[e.IN] = {
                                start_index: b,
                                num_items: 3
                            },
                            b += 3;
                            var d = i.hasFilter;
                            a.push({
                                type: e.HAS,
                                value: d.ALL_FILES,
                                label: "All files",
                                classes: "icons_File_Plain-blue"
                            }, {
                                type: e.HAS,
                                value: d.OFFICE_FILES,
                                label: d.OFFICE_FILES,
                                classes: "fileplainsmall-blue"
                            }, {
                                type: e.HAS,
                                value: d.IMAGES,
                                label: d.IMAGES,
                                classes: "imagelarge-blue"
                            }, {
                                type: e.HAS,
                                value: d.VIDEOS,
                                label: d.VIDEOS,
                                classes: "videolarge-blue"
                            }, {
                                type: e.HAS,
                                value: d.WORD_DOCS_VALUE,
                                label: d.WORD_DOCS,
                                classes: "doclarge-blue"
                            }, {
                                type: e.HAS,
                                value: d.EXCEL_SHEETS_VALUE,
                                label: d.EXCEL_SHEETS,
                                classes: "Icon2__XLSlarge-blue"
                            }, {
                                type: e.HAS,
                                value: d.SLIDE_SHOWS_VALUE,
                                label: d.SLIDE_SHOWS,
                                classes: "pptlarge-blue"
                            }, {
                                type: e.HAS,
                                value: d.PDF_VALUE,
                                label: d.PDF,
                                classes: "pdflarge-blue"
                            }, {
                                type: e.HAS,
                                value: d.PHOTOSHOP_VALUE,
                                label: d.PHOTOSHOP,
                                classes: "psdlarge-blue"
                            }),
                            fa[e.HAS] = {
                                start_index: b,
                                num_items: 8
                            },
                            b += 8,
                            ea = a
                        })
                    })
                }
                function A() {
                    var a = [];
                    ca && ca != e.WORDS ? ca == e.FROM || ca == e.USER || ca == e.DISCUSSIONS || ca == e.COMMENTS ? a.push(e.USER, Y, Z) : ca == e.TO ? a.push(e.USER, e.GROUP, Y, Z) : ca == e.IS || ca == e.IN || ca == e.HAS ? a.push(ca) : ca == e.TAG && "" != da && ba(da) : a.push(e.USER, e.GROUP, Y, Z, e.IS, e.IN, e.HAS);
                    var b, c = [], d = 0;
                    da && (b = new RegExp("(([\\s,<>():.])|^)(" + D(da) + ")","gi"));
                    for (var f = 0; f < a.length && W > d; f++) {
                        var g = fa[a[f]];
                        if (g)
                            for (var h = g.start_index, i = h + g.num_items - 1, j = h; i >= j && W > d; j++)
                                if (da) {
                                    var k = ea[j].label.replace(b, "$1b1%b1_1$3b2%b2_2")
                                      , l = ea[j].desclabel;
                                    ea[j].doquerydesc && (l = ea[j].desclabel.replace(b, "$1b1%b1_1$3b2%b2_2")),
                                    (k != ea[j].label || l && l != ea[j].desclabel) && (ea[j].formattedlabel = k,
                                    ea[j].type == e.USER || ea[j].type == e.GROUP ? ea[j].formatteddesclabel = l : ea[j].formatteddesclabel = "",
                                    c.push(ea[j]),
                                    d++)
                                } else
                                    ea[j].formattedlabel = ea[j].label,
                                    c.push(ea[j]),
                                    d++
                    }
                    return c
                }
                function B() {
                    var e = null 
                      , f = null ;
                    try {
                        e = d.queryToFilters(l.feed_search_text),
                        f = d.filtersToQuery(e, !0, !0)
                    } catch (g) {
                        return e = null ,
                        f = null ,
                        void C("That's an invalid search format. Try using the advanced search options.")
                    }
                    if (C(!1),
                    e && 0 != e.length) {
                        var h = d.filtersToQuery(e)
                          , j = a.getFilterUrlForFilterStr(h);
                        if (n.openPanel(),
                        !y.isAdminMode()) {
                            var k = o.saveSearch(o.FILTER_CONST, b.toJson(i.newANDFiltersChain(e, "")), f, null , ga && ha ? ha : null );
                            k.then(function(a, b) {
                                J(!0),
                                ha = a.data.id,
                                ga = !0
                            })
                        }
                        j = j.replace(/%3A/g, ":"),
                        c.url() == j ? l.$emit("refreshFeed", !0, "USER_ACTION: submit feed search text again") : c.url(j)
                    } else
                        c.url("/feed")
                }
                function C(a) {
                    if (a !== l.searchQueryInvalid) {
                        l.searchQueryInvalid = a;
                        var b;
                        b = a ? "showTooltip" : "hideTooltip",
                        setTimeout(function() {
                            $("#feed_search_input").trigger(b)
                        }, 0)
                    }
                }
                function D(a) {
                    return a.replace(new RegExp("([{}()^$&.*?/+|[\\\\]|]|-)","g"), "\\$1")
                }
                function E(a) {
                    var b = new Date(parseInt(a));
                    return b.setHours(23, 0, 0),
                    b.getMonth() + 1 + "/" + b.getDate() + "/" + b.getFullYear()
                }
                function F(a) {
                    for (var c = b.fromJson(a.data), d = {}, f = {}, j = "", k = 0; k < c.filters.length; k++) {
                        f.hasOwnProperty(c.filters[k].type) || (f[c.filters[k].type] = []),
                        f[c.filters[k].type].push(c.filters[k]);
                        var l = c.filters[k].value;
                        if ("text" !== c.filters[k].type)
                            if ("to" === c.filters[k].type && i.isGroupFilter(c.filters[k]))
                                1 !== c.filters.length ? j += c.filters[k].type + ": " + g.getGroupName(c.filters[k].value) + " " : (d.formattedlabel = g.getGroupName(c.filters[k].value),
                                d.formatteddesclabel = "Group",
                                j += g.getGroupName(c.filters[k].value) + " ");
                            else if ("to" === c.filters[k].type || "from" === c.filters[k].type) {
                                var m = h.getUserById(c.filters[k].value);
                                if ("from" === c.filters[k].type && 1 === c.filters.length) {
                                    var n = !1
                                      , o = !1
                                      , p = !0
                                      , q = m.email;
                                    "REMOVED" === m.status ? n = !0 : "INVITED" === m.status && (o = !0),
                                    m.extra_info && (q = m.extra_info,
                                    p = !1),
                                    d.formattedlabel = m.first_name + " " + m.last_name + " ",
                                    d.formatteddesclabel = q,
                                    d.doquerydesc = p,
                                    d.removed = n,
                                    d.invited = o,
                                    j += m.first_name + " " + m.last_name + " "
                                } else
                                    j += c.filters[k].type + ": " + m.first_name + " " + m.last_name + " "
                            } else if (c.filters[k].type === e.TO_DATE)
                                j += "date: " + E(c.filters[k].value) + " ";
                            else if (c.filters[k].type === e.DISCUSSIONS)
                                if ("any" === c.filters[k].value)
                                    j += "comments: any ";
                                else {
                                    var m = h.getUserById(c.filters[k].value);
                                    j += "comments: " + m.first_name + " " + m.last_name + " "
                                }
                            else
                                j += c.filters[k].type == e.HAS ? l === i.hasFilter.ALL_FILES_VALUE ? "has: " + i.hasFilter.ALL_FILES + " " : l === i.hasFilter.IMAGES_VALUE ? "has: " + i.hasFilter.IMAGES + " " : l === i.hasFilter.WORD_DOCS_VALUE ? "has: " + i.hasFilter.WORD_DOCS + " " : l === i.hasFilter.EXCEL_SHEETS_VALUE ? "has: " + i.hasFilter.EXCEL_SHEETS + " " : l === i.hasFilter.SLIDE_SHOWS_VALUE ? "has: " + i.hasFilter.SLIDE_SHOWS + " " : l === i.hasFilter.OFFICE_FILES_VALUE ? "has: " + i.hasFilter.OFFICE_FILES + " " : "has: " + l + " " : c.filters[k].type === e.IS ? 10 == l ? c.filters[k].type + ": chat " : 4 == l ? c.filters[k].type + ": link " : c.filters[k].type + ": " + c.filters[k].value + " " : c.filters[k].type + ": " + c.filters[k].value + " "
                    }
                    return d.type = "recentSearches",
                    d.value = a.text.replace(/\+/g, " "),
                    d.json = a.data,
                    d.itemType = a.type,
                    d.text = a.text,
                    f.hasOwnProperty("from") && 1 === c.filters.length ? d.id = f.from ? f.from[0].value : f.to[0].value : f.hasOwnProperty("to") && f.to.length > 0 && i.isGroupFilter(f.to[0]) && 1 === c.filters.length ? d.classes = "PUBLIC" == g.getGroup(f.to[0].value).get("access") ? "Icon1_PublicChannel-01-blue" : "privateGroup_icon-blue" : d.classes = "no-border icons2_Search-lightgray",
                    f.hasOwnProperty("text") && f.text.length > 0 ? (d.formattedlabel = f.text[0].value[0].replace(/\+/g, " "),
                    d.formatteddesclabel = j) : d.formattedlabel = j.replace(/\+/g, " "),
                    d
                }
                function G(a) {
                    l.recent_search_dropdown_items = [];
                    for (var c = 0; c < (a.length > 10 ? 10 : a.length); c++)
                        if (a[c].type === o.SUGGESTION_CONST) {
                            var d = O(b.fromJson(a[c].data));
                            d.text = a[c].text,
                            l.recent_search_dropdown_items.push(d)
                        } else
                            l.recent_search_dropdown_items.push(F(a[c]))
                }
                function H() {
                    l.showRecentDropdownTooltip = !0,
                    t.find(".onboardingToolTips").show(),
                    $(x.document).on("click", function(a) {
                        var b = t.find(a.target).length > 0;
                        b || l.$apply(function() {
                            I()
                        })
                    })
                }
                function I() {
                    l.showRecentDropdownTooltip = !1,
                    t.find(".onboardingToolTips").hide(),
                    $(x.document).off("click")
                }
                function J(a) {
                    var b = o.getSearches();
                    b.then(function(b, c) {
                        var d = b.data;
                        return 0 === d.length && !a && t.find("#feed_search_input").is(":focus") && 0 === l.feed_search_text.length && H(),
                        0 === d.length || l.state.show_feed_search_dropdown && !a ? (l.state.show_recent_search_dropdown = !1,
                        void (l.recent_search_dropdown_items = [])) : (G(d),
                        void (a || l.state.show_recent_search_dropdown || !t.find("#feed_search_input").is(":focus") || 0 !== l.feed_search_text.length || (l.state.show_recent_search_dropdown = !0,
                        l.$$phase || l.$digest())))
                    })
                }
                function K(a) {
                    l.state.show_feed_search_dropdown || (l.recent_search_dropdown_items.length > 0 && 0 === l.feed_search_text.length ? (l.state.show_recent_search_dropdown = !0,
                    l.$$phase || l.$digest()) : l.feed_search_dropdown_items.length > 0 && l.feed_search_text.length > 0,
                    J())
                }
                function L() {
                    var a = l.filterInfo;
                    a.filterApplied && a.filterLink.filter ? (i.hasAnyPostFilter(a.filterLink.filter.filters) || (l.feed_search_text = d.filtersToQuery(a.filterLink.filter.filters, !0, !0).replace(/\+/g, " ")),
                    n.updateFilters(a.filterLink.filter.filters)) : (l.feed_search_text = "",
                    n.updateFilters(null )),
                    C(!1)
                }
                function M(a, b) {
                    var c = {};
                    c.chatId = a.chat_message.chat_id,
                    c.data = {
                        chatType: a.chat_message.chat_type,
                        from_sequence_number: a.chat_message.from_seq_number,
                        to_sequence_number: a.chat_message.to_seq_number,
                        msg_id: a.chat_message.msg_id,
                        seq_no: a.chat_message.seq_no,
                        version: 1
                    },
                    c.chatType = function() {
                        return "groupchat" == a.chat_message.chat_type ? 2 : 1
                    }(),
                    c.messageInfo = null ,
                    a.chat_message.hasOwnProperty("search_match") && a.chat_message.search_match ? (p.fetchChat(c.chatId, b).then(function(a) {
                        r.searchResults(a.data)
                    }),
                    r.openSearchedChat(c.chatId, c.chatType, a.body, c.data, [])) : r.openChatFromId(c.chatId, c.chatType, null , [])
                }
                function N(a) {
                    var d = b.fromJson(a.json)
                      , e = d.resource_link;
                    d.body.length > 200 && (d.body = d.body.substring(0, 200));
                    var f = d.searchedText || a.text || null ;
                    if (delete d.searchedText,
                    !y.isAdminMode()) {
                        var g = o.saveSearch(o.SUGGESTION_CONST, b.toJson(d), f, null , null );
                        g.then(function(a, b) {
                            J(!0)
                        })
                    }
                    "25" === d.resource_type ? M(d, f) : c.url(e)
                }
                function O(a) {
                    var c = {};
                    return "6" === a.resource_type ? (c.label = _.escape(a.title),
                    c.id = a.user_id,
                    c.type = "POST",
                    c.value = _.escape(a.title),
                    c.formatteddesclabel = a.body,
                    c.formattedlabel = a.title,
                    c.secondaryIconClass = "secondary-icon cnv-icons-post-with-border",
                    a.comment_match && (c.secondaryIconClass = "secondary-icon cnv-icons-comment-with-border")) : "4" === a.resource_type ? (c.label = _.escape(a.title),
                    c.detail = _.escape(a.body),
                    c.id = a.user_id,
                    c.type = "LINK",
                    c.secondaryIconClass = "secondary-icon cnv-icons-link-with-border",
                    c.formatteddesclabel = a.body,
                    c.formattedlabel = a.title) : "25" === a.resource_type ? (c.id = a.user_id,
                    c.type = "CHAT",
                    c.value = _.escape(a.title),
                    c.detail = a.body,
                    c.label = a.title,
                    c.formattedlabel = a.title,
                    c.formatteddesclabel = a.body,
                    c.secondaryIconClass = "secondary-icon cnv-icons-chats-with-border") : c = {
                        classes: a.user_id ? null  : "icons2_Search-blue",
                        label: _.escape(a.title),
                        type: a.user_id ? "USER" : o.SUGGESTION_CONST,
                        value: _.escape(a.title),
                        formatteddesclabel: "",
                        formattedlabel: a.title
                    },
                    c.id && (c.imgurl = j(a.user_id, a.profile_image_type, a.profile_image_version, k.PROFILE_IMAGE_SIZE_32x32)),
                    c.itemType = o.SUGGESTION_CONST,
                    c.json = b.toJson(a),
                    c.labelbadge = q("dateAgo")(a.timestamp, s.getServerTimestamp(), !0, !0, !0, !0, "shortDate"),
                    c
                }
                function P(a) {
                    l.feed_search_dropdown_items = [],
                    l.feed_search_dropdown_items = A();
                    for (var b = 0; b < l.feed_search_dropdown_items.length; b++) {
                        var c = l.feed_search_dropdown_items[b];
                        c.hasOwnProperty("itemType") && c.itemType === o.SUGGESTION_CONST && l.feed_search_dropdown_items.splice(b, 1)
                    }
                    var d = W - l.feed_search_dropdown_items.length;
                    if (d > 0) {
                        for (var b = 0; b < (d > a.length ? a.length : d); b++) {
                            var e = a[b];
                            l.feed_search_dropdown_items.push(O(e))
                        }
                        l.$$phase || l.$digest()
                    }
                }
                function Q() {
                    var a = null ;
                    try {
                        a = d.queryToFilters(l.feed_search_text)
                    } catch (b) {
                        if (!a)
                            return
                    }
                    for (var c = 0; c < a.length; c++)
                        a[c] && a[c].hasOwnProperty("value") && "object" == typeof a[c].value && (a[c].value = a[c].value[0]);
                    var e = i.getSearchWordsIfHasWordSearchFilter(a)
                      , f = p.getFeedSearchSuggestions(0, i.newANDFiltersChain(a, ""), X, !0, e);
                    f.then(function(a, b) {
                        var c = a.data;
                        if (c.hasOwnProperty("suggestions") && c.suggestions.length > 0) {
                            for (var d = 0; d < c.suggestions.length; d++)
                                c.suggestions[d].searchedText = c.searchedText;
                            P(c.suggestions)
                        }
                    })
                }
                function R(a) {
                    if (0 !== a.length) {
                        for (var b = 0; b < l.feed_search_dropdown_items.length; b++) {
                            var c = l.feed_search_dropdown_items[b];
                            c.hasOwnProperty("itemType") && c.itemType === e.TAG && l.feed_search_dropdown_items.splice(b, 1)
                        }
                        var d = W - l.feed_search_dropdown_items.length;
                        if (d > 0) {
                            for (var b = 0; b < (d > a.length ? a.length : d); b++)
                                l.feed_search_dropdown_items.unshift({
                                    classes: "no-border icon_tag-01-01-darkgray",
                                    label: a[b].label,
                                    type: e.TAG,
                                    value: a[b].label,
                                    formatteddesclabel: "",
                                    formattedlabel: a[b].formattedlabel,
                                    itemType: e.TAG
                                });
                            l.$$phase || l.$digest()
                        }
                    }
                }
                function S(a) {
                    var b = v.getHashtagsDropdownItems("#" + a);
                    b.then(function(a, b) {
                        R(a)
                    })
                }
                function T() {
                    t.find(".dropdown-ico-wrapper").addClass("rotate-icons")
                }
                function U() {
                    t.find(".dropdown-ico-wrapper").removeClass("rotate-icons")
                }
                function V(a) {
                    var b = $(a.target);
                    191 !== a.keyCode || b.is(":input") || b.hasClass("ql-editor") || (a.preventDefault(),
                    t.find("#feed_search_input").focus())
                }
                var W = 10
                  , X = 10
                  , Y = "INVITED_USER"
                  , Z = "REMOVED_USER"
                  , aa = _.debounce(Q, 1e3)
                  , ba = _.debounce(S, 1e3)
                  , ca = ""
                  , da = ""
                  , ea = []
                  , fa = {}
                  , ga = !1
                  , ha = null ;
                l.feed_search_text = "",
                l.state = {
                    show_feed_search_dropdown: !1,
                    show_recent_search_dropdown: !1
                },
                l.feed_search_dropdown_items = [],
                l.recent_search_dropdown_items = [],
                l.searchQueryInvalid = !1,
                g.on("groupsUpdated", w),
                l.onFeedRecentSearchDropdownItemSelected = function(e) {
                    if (l.state.show_recent_search_dropdown = !1,
                    "recentSearchesNA" != e.type)
                        if (e.itemType === o.SUGGESTION_CONST)
                            N(e);
                        else {
                            var f = d.filtersToQuery(b.fromJson(e.json).filters)
                              , g = a.getFilterUrlForFilterStr(f);
                            g = g.replace(/%3A/g, ":"),
                            c.url() == g ? l.$emit("refreshFeed", !0, "USER_ACTION: submit feed search text again") : c.url(g)
                        }
                }
                ,
                l.onFeedSearchFormSubmit = function() {
                    l.state.show_feed_search_dropdown = !1,
                    l.state.show_recent_search_dropdown = !1,
                    B()
                }
                ,
                l.onFeedSearchInputChange = function() {
                    C(!1),
                    I(),
                    ga && ha && 0 === l.feed_search_text.length && (ga = !1,
                    ha = null );
                    var a = $("#feed_search_input").getCursorPosition()
                      , b = l.feed_search_text.slice(0, a).replace(/ *$/g, "")
                      , c = b.slice(f.searchForKey(b)).toLowerCase()
                      , d = f.getType(b);
                    d != ca || c != da ? (ca = d,
                    da = c,
                    l.feed_search_text.length > 0 ? (l.feed_search_dropdown_items = A(),
                    aa(),
                    l.state.show_feed_search_dropdown = !0,
                    l.state.show_recent_search_dropdown = !1) : (l.feed_search_dropdown_items = [],
                    l.state.show_feed_search_dropdown = !1)) : c === da && d === ca && l.feed_search_text.length > 0 && (l.state.show_feed_search_dropdown = !0)
                }
                ,
                l.onFeedSearchDropdownItemSelected = function(a, b) {
                    if (l.state.show_feed_search_dropdown = !1,
                    a.hasOwnProperty("itemType") && a.itemType === o.SUGGESTION_CONST)
                        return void N(a);
                    var c, d, g = $("#feed_search_input").getCursorPosition(), h = l.feed_search_text.slice(0, g), i = f.getType(h), j = !1;
                    a.type == e.USER ? (c = i == e.TO ? e.TO + ':"' + a.value + '"' : i == e.COMMENTS ? e.COMMENTS + ':"' + a.value + '"' : i == e.DISCUSSIONS ? e.DISCUSSIONS + ':"' + a.value + '"' : e.FROM + ':"' + a.value + '"',
                    d = "User") : a.type == e.GROUP ? (c = e.TO + ':"' + a.value + '"',
                    d = "Group") : a.type == e.IS ? (c = e.IS + ':"' + a.value + '"',
                    d = a.value,
                    j = !0) : a.type == e.FILENAME ? c = e.FILENAME + ":" + a.value : a.type == e.IN ? (c = e.IN + ":" + a.value,
                    d = a.value) : a.type == e.HAS ? (c = e.HAS + ':"' + a.value + '"',
                    d = a.label,
                    j = !0) : a.type === e.TAG && (c = e.TAG + ':"' + a.value + '"',
                    d = a.label);
                    var k = f.getSearchStart(h);
                    k >= 0 && g > 0 ? l.feed_search_text = h.slice(0, k) + " " + c + " " + l.feed_search_text.slice(g) : l.feed_search_text = c,
                    b || B(),
                    d && (m.trackEvent(m.USER_FILTERED_SEARCH, {
                        Type: d
                    }),
                    j && m.trackEvent(m.USER_FILTERED_BY_POST_TYPE, {
                        Type: d
                    }))
                }
                ,
                l.toggleAdvancedSearch = function() {
                    n.togglePanel()
                }
                ,
                l.applyAdvSearchFilters = function(a) {
                    for (var b = d.queryToFilters(l.feed_search_text), c = 0; c < b.length; c++)
                        if (b[c].hasOwnProperty("type") && "text" === b[c].type) {
                            a.push(b[c]);
                            break
                        }
                    l.feed_search_text = d.filtersToQuery(a, !0, !0),
                    B()
                }
                ,
                l.clearRecentSearches = function(a) {
                    a && a.stopPropagation(),
                    o.clearSearches(),
                    l.recent_search_dropdown_items = [],
                    l.state.show_recent_search_dropdown = !1
                }
                ,
                l.closeRecentSearchTooltip = function(a) {
                    a && (a.stopPropagation(),
                    a.preventDefault()),
                    I(),
                    l.$$phase || l.$digest()
                }
                ,
                n.on("cnvAdvSearch:applyFilters", l.applyAdvSearchFilters),
                n.on("cnvAdvSearch:panelOpen", T),
                n.on("cnvAdvSearch:panelClose", U),
                z.on("searchService:clearSearch", function() {
                    l.feed_search_text = ""
                }),
                l.$on("clearFeedSearchBarText", function() {
                    l.feed_search_text = "",
                    n.updateFilters(null )
                }),
                l.$watch("feed_search_text", function() {
                    ga && ha && 0 === l.feed_search_text.length && (ga = !1,
                    ha = null )
                }),
                l.$on("filterChange", L),
                t.find("#feed_search_input").on("focus", K),
                $(x.document.body).on("keydown", V),
                L(),
                w(),
                J(!0),
                l.$on("$destroy", function() {
                    t.find("#feed_search_input").off("focus", K),
                    n.off("cnvAdvSearch:applyFilters", l.applyAdvSearchFilters),
                    z.off("searchService:clearSearch")
                })
            },
            controller: ["$scope", "userInfo", function(a, b) {
                a.$on("cnvPremiumUpgradeBtn:addClassToSearchBar", function(b, c) {
                    "upgrade" == c["class"] ? a.addUpgradeClass = !0 : a.addEnterpriseClass = !0
                }),
                b.on("userInfo:adminModeChanged", function(b) {
                    b ? a.addAdminModeClass = !0 : a.addAdminModeClass = !1
                }),
                a.$on("$destroy", function() {
                    b.off("userInfo:adminModeChanged")
                })
            }
            ]
        }
    }
    ]),
    b.module("convoApp").factory("FiltersQueryTransformer", ["FilterTypes", "QueryParser", "userInfo", "Groups", "Users", "Filters", function(a, b, c, d, e, f) {
        function g(b) {
            return b == a.ANY_VALUE ? (filter = {},
            filter.type = a.DISCUSSIONS,
            filter.value = a.ANY_VALUE,
            filter.description = a.ANY_VALUE,
            filter) : b == a.NONE_VALUE ? (filter = {},
            filter.type = a.DISCUSSIONS,
            filter.value = a.NONE_VALUE,
            filter.description = a.NONE_VALUE,
            filter) : "me" == b ? (filter = {},
            filter.type = a.DISCUSSIONS,
            filter.value = c.user_id,
            filter.description = c.email,
            filter) : (user = e.findUser(b),
            user || -1 == b.indexOf("(") || (b = b.slice(b.indexOf("(") + 1, b.indexOf(")")),
            user = e.findUser(b)),
            user ? (filter = {},
            filter.type = a.DISCUSSIONS,
            filter.value = user.user_id,
            filter.description = user.email,
            filter) : void 0)
        }
        function h(b) {
            var h = [];
            if (!b)
                return h;
            var i = null 
              , j = null 
              , k = null 
              , l = ""
              , m = b[a.TO];
            if (null  != m && m.length > 0) {
                l = m[0];
                var n = !1;
                if ("me" == l)
                    n = !0;
                else if ("all" == l)
                    return [];
                n || (k = d.findGroupHavingName(l),
                k || (k = d.getGroup(l)),
                k && (i = {},
                i.type = a.TO,
                i.value = k.get("id"),
                i.description = k.get("title"),
                h.push(i))),
                (n || !k) && (n ? (i = {},
                i.type = a.TO,
                i.value = c.user_id,
                i.description = c.email,
                h.push(i)) : (j = e.findUser(l),
                j || -1 == l.indexOf("(") || (l = l.slice(l.indexOf("(") + 1, l.indexOf(")")),
                j = e.findUser(l)),
                j ? (i = {},
                i.type = a.TO,
                i.value = j.user_id,
                i.description = j.email,
                h.push(i)) : (i = {},
                i.type = a.TO,
                i.value = l,
                i.description = l,
                h.push(i))))
            }
            if (m = b[a.FROM],
            null  != m && m.length > 0) {
                if (l = m[0],
                l = $.trim(l),
                "everyone" == l || "all" == l)
                    return [];
                "me" == l ? (i = {},
                i.type = a.FROM,
                i.value = c.user_id,
                i.description = c.email,
                h.push(i)) : (j = e.findUser(l),
                j || -1 == l.indexOf("(") || (l = l.slice(l.indexOf("(") + 1, l.indexOf(")")),
                j = e.findUser(l)),
                j ? (i = {},
                i.type = a.FROM,
                i.value = j.user_id,
                i.description = j.email,
                h.push(i)) : (i = {},
                i.type = a.FROM,
                i.value = l,
                i.description = l,
                h.push(i)))
            }
            if (m = b[a.DISCUSSIONS],
            null  != m && m.length > 0 && (l = m[0],
            l = $.trim(l),
            h.push(g(l))),
            m = b[a.COMMENTS],
            null  != m && m.length > 0 && (l = m[0],
            l = $.trim(l),
            h.push(g(l))),
            m = b[a.IN],
            null  != m && m.length > 0) {
                if (l = m[0],
                l = $.trim(l),
                "everything" == l || "all" == l)
                    return [];
                l == a.IN_DRAFTS ? (i = {},
                i.type = a.IN,
                i.value = a.IN_DRAFTS,
                i.description = a.IN_DRAFTS,
                h.push(i)) : l == a.IN_TRASH ? (i = {},
                i.type = a.IN,
                i.value = a.IN_TRASH,
                i.description = a.IN_TRASH,
                h.push(i)) : l == a.IN_STARRED && (i = {},
                i.type = a.IN,
                i.description = a.IN_STARRED,
                i.value = a.IN_STARRED,
                h.push(i))
            }
            if (m = b[a.IS],
            null  != m && m.length > 0) {
                if (l = m[0],
                l = $.trim(l.toLowerCase()),
                "everything" == l || "all" == l)
                    return [];
                if (l == a.IS_SYSTEM_MESSAGE)
                    i = {},
                    i.type = a.DATA_TYPE,
                    i.value = a.IS_SYSTEM_MESSAGE,
                    i.description = a.IS_SYSTEM_MESSAGE,
                    h.push(i);
                else {
                    "note" == l && (l = "message");
                    var o = null ;
                    "message" == l ? o = {
                        type_id: 6,
                        short_name: "message"
                    } : "link" == l ? o = {
                        type_id: 4,
                        short_name: "link"
                    } : "chat" == l && (o = {
                        type_id: 10,
                        short_name: "chat"
                    }),
                    o && (i = {},
                    i.type = a.DATA_TYPE,
                    i.value = o.type_id + "",
                    i.description = o.short_name,
                    h.push(i))
                }
            }
            if (m = b[a.HAS],
            null  != m && m.length > 0 && (l = m[0],
            i = f.newHasFilter(l),
            h.push(i)),
            m = b[a.FILENAME],
            null  != m && m.length > 0 && (l = $.trim(m[0].toLowerCase()),
            l.length > 0 && (i = {},
            i.type = a.FILENAME,
            i.value = l,
            i.description = l,
            h.push(i))),
            m = b[a.LIKE],
            null  != m && m.length > 0 && (l = $.trim(m[0]),
            l == a.ANY_VALUE && (i = {},
            i.type = a.LIKE,
            i.value = a.ANY_VALUE,
            i.description = a.ANY_VALUE,
            h.push(i))),
            m = b[a.TAG],
            null  != m && m.length > 0 && h.push(f.newFilter(a.TAG, m, m.join("+"))),
            m = b[a.POST],
            null  != m && m.length > 0) {
                l = m[0];
                var p = l.replace(/__c__/g, ":").replace(/__q__/g, '"').replace(/__m__/g, ",");
                h.push(f.newFilter(a.POST, p, p))
            }
            if (m = b[a.FROM_DATE],
            null  != m && m.length > 0 && (l = $.trim(m[0]),
            h.push(f.newFilter(a.FROM_DATE, l, l))),
            m = b[a.TO_DATE],
            null  != m && m.length > 0 && (l = $.trim(m[0]),
            h.push(f.newFilter(a.TO_DATE, l, l))),
            m = b[a.DATE],
            null  != m && m.length > 0) {
                l = $.trim(m[0]);
                var q = new Date(Date.parse(l));
                q.setHours(23, 59, 59),
                h.push(f.newFilter(a.TO_DATE, q.getTime(), q.getTime()))
            }
            return m = b.words,
            null  != m && m.length > 0 && h.push(f.newFilter(a.TEXT, m, m.join("+"))),
            h
        }
        function i(a) {
            var b = new Date(parseInt(a));
            if (isNaN(b))
                throw {
                    message: "Error parsing date, please use the correct format i.e. mm/dd/yyyy",
                    errorCode: 500
                };
            return b.setHours(23, 59, 59),
            b.getMonth() + 1 + "/" + b.getDate() + "/" + b.getFullYear()
        }
        function j(b, c, d) {
            for (var e = "", f = 0; f < b.length; f++) {
                var g = b[f];
                if (!g)
                    throw {
                        message: "That's an invalid search format. Try using the advanced search options.",
                        errorCode: 500
                    };
                var h = "";
                switch (g.type) {
                case a.TO:
                case a.TAG:
                case a.HAS:
                case a.LIKE:
                    h = g.type + ':"' + g.description.replace(/(["\\])/gm, "\\$1") + '"';
                    break;
                case a.FROM:
                    h = g.type + ':"' + g.description.replace(/(["\\])/gm, "\\$1") + '"';
                    break;
                case a.DATA_TYPE:
                case a.IN:
                case a.FILENAME:
                case a.FROM_DATE:
                    h = g.type + ":" + g.description;
                    break;
                case a.TO_DATE:
                    h = c ? "date:" + i(g.description) : g.type + ":" + g.description;
                    break;
                case a.TEXT:
                    h = g.description;
                    break;
                case a.POST:
                    var j = g.value
                      , k = j.replace(/:/g, "__c__").replace(/"/g, "__q__").replace(/,/g, "__m__");
                    h = g.type + ":" + k;
                    break;
                case a.DISCUSSIONS:
                    if (d) {
                        h = a.COMMENTS + ':"' + g.description.replace(/(["\\])/gm, "\\$1") + '"';
                        break
                    }
                    h = g.type + ':"' + g.description.replace(/(["\\])/gm, "\\$1") + '"'
                }
                h && (e += " " + h)
            }
            return e && (e = e.slice(1)),
            e
        }
        var k = {};
        return k.queryToFilters = function(c) {
            return h(b.parse(c, a.ALL_TYPES))
        }
        ,
        k.filtersToQuery = function(a, b, c) {
            return j(a, b, c)
        }
        ,
        k
    }
    ]),
    b.module("convoApp").factory("QueryParser", [function() {
        function a(a, e) {
            for (var o = null , p = null , q = [], r = 0, s = null , t = []; null  != (o = b(a, r)); )
                q.push(o),
                r = o.endIndex + 1,
                null  == s ? j(o) ? f(a, o, A.INVALID_FV_SEP_POSITION) : i(o) ? f(a, o, A.INVALID_OPERATOR_POSITION) : (s = {
                    type: w
                },
                s.value = d(o, !0)) : k(s) || n(s) ? j(o) ? k(s) ? (s.type = x,
                s.field = s.value,
                s.value = null ,
                e.indexOf(s.field) < 0 && f(a, p, A.INVALID_FIELD)) : f(a, o, A.INVALID_FV_SEP_POSITION) : i(o) ? (s.type = y,
                s.value += d(o, !0)) : g(o) ? (t.push(s),
                s = {
                    type: w
                },
                s.value = d(o, !0)) : (s.value += "+" + d(o, !0),
                s.type = z) : l(s) ? h(o) ? (s.value = d(o, !1),
                t.push(s),
                s = null ) : f(a, o, A.SYNTAX_ERROR, "Value expected for a 'field:value' combination.") : m(s) && (h(o) ? (s.value += d(o, !0),
                s.type = z) : f(a, o, A.SYNTAX_ERROR, "Value expected here for operator.")),
                p = o;
            return null  != s && (k(s) || n(s) ? t.push(s) : m(s) ? f(a, p, A.SYNTAX_ERROR, "Value not specified for operator.") : l(s) ? f(a, p, A.SYNTAX_ERROR, "Value not specified for field.") : f(a, p, A.SYNTAX_ERROR)),
            c(t, e)
        }
        function b(a, b) {
            var c = a.length
              , d = ""
              , f = ""
              , g = ""
              , h = ""
              , i = {
                type: s
            }
              , j = !1
              , k = !1
              , l = b
              , m = !1;
            for (i.startIndex = b; c > l && !m; )
                d = a.charAt(l),
                k ? (h += d,
                k = !1) : p.indexOf(d) >= 0 ? k = !0 : o.indexOf(d) >= 0 && (!j || d == g) ? j ? (e(i, h),
                i.endIndex = l,
                i.isQuoted = !0,
                m = !0) : (j = !0,
                g = "'" == d ? "'" : "[" == d ? "]" : '"') : j ? h += d : (" " != d || d != f && 0 != h.length) && (j || ((d == q || " " == d || r.indexOf(d) >= 0) && h.length > 0 ? (e(i, h),
                i.endIndex = l - 1,
                d == q && (i.type = t),
                m = !0) : d == q || r.indexOf(d) >= 0 ? (h += d,
                e(i, h),
                i.endIndex = l,
                m = !0) : h += d)),
                m || (l++,
                f = d);
            return l == c && h.length > 0 && (e(i, h),
            i.endIndex = l - 1),
            i.value && i.value.length > 0 ? i : null 
        }
        function c(a, b) {
            if (null  == b)
                return null ;
            var c = {}
              , d = 0;
            for (d = 0; d < b.length; d++)
                c[b[d]] = [];
            if (c.words = [],
            null  != a && a.length > 0) {
                var e = null ;
                for (d = 0; d < a.length; d++)
                    e = a[d],
                    l(e) ? c[e.field].push(e.value) : c.words.push(e.value)
            }
            return c
        }
        function d(a, b) {
            var c = $.trim(a.value);
            return i(a) ? "or" == a.value ? c = "," : "and" == a.value && (c = "+") : a.isQuoted && b && (c = '"' + c + '"'),
            c
        }
        function e(a, b) {
            a.value = b,
            r.indexOf(b) >= 0 ? a.type = u : b == q && (a.type = v)
        }
        function f(a, b, c, d) {
            var e = {
                message: d,
                errorCode: c
            };
            if (e.index = b.startIndex + 1,
            !d)
                switch (c) {
                case A.INVALID_FIELD:
                    e.message = "Invalid field name '" + b.value + "'";
                    break;
                case A.INVALID_FV_SEP_POSITION:
                    e.message = "Field value separator ':' is not allowed here.";
                    break;
                case A.INVALID_OPERATOR_POSITION:
                    e.message = "Operator '" + b.value + "' is not allowed here.";
                    break;
                case A.SYNTAX_ERROR:
                    e.message = "Syntax error.";
                    break;
                case A.UNKNOWN:
                    e.message = "Problem occured while parsing query."
                }
            throw e
        }
        function g(a) {
            return a.type == t
        }
        function h(a) {
            return a.type == s
        }
        function i(a) {
            return a.type == u
        }
        function j(a) {
            return a.type == v
        }
        function k(a) {
            return a.type == w
        }
        function l(a) {
            return a.type == x
        }
        function m(a) {
            return a.type == y
        }
        function n(a) {
            return a.type == z
        }
        var o = "\"'["
          , p = "\\"
          , q = ":"
          , r = ["+", ",", "OR", "AND"]
          , s = 0
          , t = 1
          , u = 2
          , v = 3
          , w = 1
          , x = 2
          , y = 3
          , z = 4
          , A = {
            UNKNOWN: -1,
            INVALID_FIELD: 1,
            INVALID_FV_SEP_POSITION: 2,
            INVALID_OPERATOR_POSITION: 3,
            SYNTAX_ERROR: 100
        }
          , B = {};
        return B.parse = function(b, c) {
            return a(b, c)
        }
        ,
        B
    }
    ]),
    b.module("convoApp").factory("recentSearchService", ["ServerComm", "$q", function(a, b) {
        function c(c, d, e, f, g) {
            var h = {
                method: "add",
                data: {
                    type: c,
                    data: d,
                    text: e,
                    hash: f,
                    remove: g
                }
            }
              , i = a.postx("recentsearches", h)
              , j = b.defer();
            return i.then(function(a, b) {
                j.resolve(a.data)
            }, function(a, b) {
                j.reject(a.data)
            }),
            j.promise
        }
        function d() {
            var c = a.getx("recentsearches")
              , d = b.defer();
            return c.then(function(a, b) {
                d.resolve(a.data)
            }, function(a, b) {
                d.reject(a.data)
            }),
            d.promise
        }
        function e(c) {
            var d = {
                method: "clear",
                data: c ? {
                    id: c
                } : null 
            }
              , e = a.postx("recentsearches", d)
              , f = b.defer();
            return e.then(function(a, b) {
                f.resolve(a.data)
            }, function(a, b) {
                f.reject(a.data)
            }),
            f.promise
        }
        var f = {};
        return f.SUGGESTION_CONST = "SUGGESTION",
        f.FILTER_CONST = "FILTERS_LIST",
        f.saveSearch = c,
        f.getSearches = d,
        f.clearSearches = e,
        f
    }
    ]),
    b.module("convoApp").factory("adminService", ["ServerComm", "$q", "accountInfo", "userInfo", "loginResponseData", "Groups", "Users", "appTabs", "Comments", function(a, b, c, d, e, f, g, h, i) {
        function j() {
            var c = a.getx("admin/info")
              , d = b.defer();
            return c.then(function(a, b) {
                d.resolve(a.data)
            }, function(a, b) {
                d.reject(a.data)
            }),
            d.promise
        }
        function k() {
            var c = a.getx("admin/users/general")
              , d = b.defer();
            return c.then(function(a, b) {
                d.resolve(a.data)
            }, function(a, b) {
                d.reject(a.data)
            }),
            d.promise
        }
        function l(c, d) {
            var e = {
                purpose: c,
                filter: d
            }
              , f = a.get("admin/users", {
                params: e
            })
              , g = b.defer();
            return f.then(function(a, b) {
                g.resolve(a.data)
            }, function(a, b) {
                g.reject(a.data)
            }),
            g.promise
        }
        function m(c) {
            var d = {
                method: c ? "switchToAdminMode" : "exitAdminMode"
            }
              , e = a.postx("admin/monitor-content/general", d)
              , f = b.defer();
            return e.then(function(a, b) {
                f.resolve(a.data)
            }, function(a, b) {
                f.reject(a.data)
            }),
            f.promise
        }
        function n(f) {
            var g = {
                authToken: e.getXmppSessionToken(),
                userID: d.getUserId(),
                accountID: c.getAccountId(),
                method: f ? "switchToAdminMode" : "exitAdminMode"
            }
              , h = a.postx("feed/admin/monitor-content/general", g)
              , i = b.defer();
            return h.then(function(a, b) {
                i.resolve(a)
            }, function(a, b) {
                i.reject(a)
            }),
            i.promise
        }
        function o(c) {
            var d = {
                method: "grantAdminPrivileges",
                data: {
                    user_id: c
                }
            }
              , e = a.postx("admin/info", d)
              , f = b.defer();
            return e.then(function(a) {
                f.resolve(a)
            }, function(a) {
                f.reject(a)
            }),
            f.promise
        }
        function p(c) {
            var d = {
                method: "revokeAdminPrivileges",
                data: {
                    user_id: c
                }
            }
              , e = a.postx("admin/info", d)
              , f = b.defer();
            return e.then(function(a) {
                f.resolve(a)
            }, function(a) {
                f.reject(a)
            }),
            f.promise
        }
        function q(c, d) {
            var e = {
                method: "transferAccountOwnership",
                data: {
                    user_id: c,
                    password: d
                }
            }
              , f = a.post("admin/users/privileges", e)
              , g = b.defer();
            return f.then(function(a, b) {
                g.resolve(a.data)
            }, function(a, b) {
                g.reject(a.data)
            }),
            g.promise
        }
        function r(c) {
            var d = {
                method: "setAutoFollowTeammatesWhenTheyJoinNetworks",
                data: {
                    value: c
                }
            }
              , e = a.post("admin/users/general", d)
              , f = b.defer();
            return e.then(function(a, b) {
                f.resolve(a.data)
            }, function(a, b) {
                f.reject(a.data)
            }),
            f.promise
        }
        function s(c) {
            var d = {
                method: "setAccountUsersCap",
                data: {
                    value: c
                }
            }
              , e = a.post("admin/users/general", d)
              , f = b.defer();
            return e.then(function(a, b) {
                f.resolve(a.data)
            }, function(a, b) {
                f.reject(a.data)
            }),
            f.promise
        }
        function t() {
            var c = a.getx("admin/security/ip")
              , d = b.defer();
            return c.then(function(a, b) {
                d.resolve(a.data)
            }, function(a, b) {
                d.reject(a.data)
            }),
            d.promise
        }
        function u(c, d) {
            var e = {
                method: "addIPRange",
                data: {
                    from: c,
                    to: d
                }
            }
              , f = a.postx("admin/security/ip", e)
              , g = b.defer();
            return f.then(function(a, b) {
                g.resolve(a.data)
            }, function(a, b) {
                g.reject(a.data)
            }),
            g.promise
        }
        function v(c, d) {
            var e = {
                method: "removeIPRange",
                data: {
                    from: c,
                    to: d
                }
            }
              , f = a.postx("admin/security/ip", e)
              , g = b.defer();
            return f.then(function(a, b) {
                g.resolve(a.data)
            }, function(a, b) {
                g.reject(a.data)
            }),
            g.promise
        }
        function w(c) {
            var d = {
                method: "blockEmailOrDomain",
                data: {
                    value: c
                }
            }
              , e = a.postx("admin/users/disable", d)
              , f = b.defer();
            return e.then(function(a, b) {
                f.resolve(a.data)
            }, function(a, b) {
                f.reject(a.data)
            }),
            f.promise
        }
        function x(c) {
            var d = {
                method: "unblockEmailOrDomain",
                data: {
                    value: c
                }
            }
              , e = a.postx("admin/users/disable", d)
              , f = b.defer();
            return e.then(function(a, b) {
                f.resolve(a.data)
            }, function(a, b) {
                f.reject(a.data)
            }),
            f.promise
        }
        function y() {
            var c = a.getx("admin/users/disable")
              , d = b.defer();
            return c.then(function(a, b) {
                d.resolve(a.data)
            }, function(a, b) {
                d.reject(a.data)
            }),
            d.promise
        }
        function z(a) {
            var c = b.defer();
            return b.all([m(!0), n(!0)])["finally"](function(e) {
                b.all([f.getGroupsFromServer(), g.getUsersFromServer()])["finally"](function(b, e) {
                    d.setAdminMode(!0),
                    a ? F.trigger("refetchFeedOnAdminModeSwitched") : h.dispatchTabsEvent2("switchAdminMode", {
                        isAdminModeOn: !0
                    }),
                    c.resolve()
                })
            }),
            c.promise
        }
        function A(a) {
            var c = b.defer();
            return b.all([m(!1), n(!1)])["finally"](function() {
                b.all([f.getGroupsFromServer(), g.getUsersFromServer()])["finally"](function() {
                    d.setAdminMode(!1),
                    i.emptyCommentsStore(),
                    a ? F.trigger("refetchFeedOnAdminModeSwitched") : h.dispatchTabsEvent2("switchAdminMode", {
                        isAdminModeOn: !1
                    }),
                    c.resolve()
                })
            }),
            c.promise
        }
        function B() {
            var c = a.getx("admin/monitor-content/general?method=getPinnedItemsList")
              , d = b.defer();
            return c.then(function(a) {
                d.resolve(a.data)
            }, function(a) {
                d.reject(a)
            }),
            d.promise
        }
        function C(c, d) {
            var e = {
                method: d ? "updatePinnedItem" : "pin",
                data: {
                    resource_name: c.resource_name,
                    url: c.url,
                    type: c.type
                }
            };
            "SCRYBE" === c.type && (e.data.app_instance_id = c.app_instance_id,
            e.data.resource_type = c.resource_type,
            e.data.resource_id = c.resource_id),
            d && (e.data.id = d);
            var f = a.postx("admin/monitor-content/general", e)
              , g = b.defer();
            return f.then(function(a) {
                g.resolve(a.data)
            }, function(a) {
                g.reject(a)
            }),
            g.promise
        }
        function D(c) {
            var d = {
                method: "unpin",
                data: {
                    id: c
                }
            }
              , e = a.postx("admin/monitor-content/general", d)
              , f = b.defer();
            return e.then(function(a) {
                f.resolve(a.data)
            }, function(a) {
                f.reject(a)
            }),
            f.promise
        }
        function E(a) {
            h.isThisTabLastActiveTab() || (a.isAdminModeOn ? z(!0) : A(!0))
        }
        var F = {};
        return _.extend(F, Backbone.Events),
        h.addTabsEventListener2("switchAdminMode", E),
        F.getInfo = j,
        F.getUsers = l,
        F.transferOwnership = q,
        F.autoFollowTeammates = r,
        F.changeNetworkCap = s,
        F.getGeneralUsersInfo = k,
        F.getIPRanges = t,
        F.addIPRange = u,
        F.removeIPRange = v,
        F.blockEmailOrDomain = w,
        F.unblockEmailOrDomain = x,
        F.getBlockedEmailsOrDomains = y,
        F.changeAdminMode = m,
        F.changeAdminModeOnFeedServer = n,
        F.switchToAdminMode = z,
        F.exitAdminMode = A,
        F.makeAdmin = o,
        F.removeAdmin = p,
        F.getFeedPinItems = B,
        F.pinContentToFeed = C,
        F.unpinItemFromFeed = D,
        F
    }
    ]),
    b.module("convoApp").factory("appStateInfo", ["config", "nativeCommBridgeCDPreventer", function(b, c) {
        function d() {
            L = ifvisible.now(),
            M = L,
            h(),
            e(),
            b.IS_NATIVE && (T = c.isNativeSystemActive(),
            console.log("appStateInfo.initialize:isNativeSystemActiveMethodExistsOrIsNativeSystemActive : " + T),
            -1 === T || T || (console.log("nativeSystemIdled on initilialization"),
            i())),
            console.log("initialized the appStateInfo service. hasFocus: " + L)
        }
        function e() {
            document.addEventListener("mousemove", function(a) {
                a.clientY !== S && f(),
                S = a.clientY
            }, !1),
            document.addEventListener("keyup", function(a) {
                f()
            }, !1),
            a.addEventListener("scroll", function(a) {
                f()
            }, !1)
        }
        function f() {
            (aa || Z) && (aa = !1,
            Z = !1,
            $ = !1,
            K.trigger("appActive"),
            console.log("appActive")),
            g(),
            h(),
            ba = Date.now()
        }
        function g() {
            clearTimeout(N),
            clearTimeout(O),
            clearInterval(P),
            X = 5
        }
        function h() {
            N = setTimeout(function() {
                var a = Date.now() - ba;
                console.log("ShortIdle after last interaction : " + a / 1e3),
                Z = !0,
                $ = !0,
                K.trigger("appShortIdle"),
                console.log("appShortIdle")
            }, U),
            b.IS_NATIVE && -1 !== T || (console.log("Falling-back to web-app long idle implementation"),
            O = setTimeout(function() {
                var a = Date.now() - ba;
                console.log("LongIdle after last interaction : " + a / 1e3),
                aa = !0,
                K.trigger("appLongIdle"),
                console.log("appLongIdle"),
                P = setInterval(function() {
                    X > 0 ? K.trigger("appLongIdleHeartbeat") : clearInterval(P),
                    X--
                }, W)
            }, V))
        }
        function i() {
            aa = !0,
            K.trigger("appLongIdle"),
            console.log("appLongIdle"),
            P = setInterval(function() {
                X > 0 ? K.trigger("appLongIdleHeartbeat") : clearInterval(P),
                X--
            }, W)
        }
        function j() {
            f()
        }
        function k() {
            return L
        }
        function l() {
            return M
        }
        function m() {
            return Z
        }
        function n() {
            return $
        }
        function o() {
            return aa
        }
        function p() {
            return Q || a.innerWidth <= Y
        }
        function q() {
            ca = !0
        }
        function r() {
            return ca
        }
        function s() {
            da = !0
        }
        function t() {
            return da
        }
        function u() {
            ea = !0
        }
        function v() {
            return ea
        }
        function w() {
            fa = !0
        }
        function x() {
            return fa
        }
        function y() {
            ga = !0
        }
        function z() {
            return ga
        }
        function A() {
            ha = !0
        }
        function B() {
            return ha
        }
        function C() {
            ia = !0
        }
        function D() {
            return ia
        }
        function E() {
            return ca || ea || ha
        }
        function F(b) {
            return a.innerWidth <= b
        }
        function G(a) {
            R = a
        }
        function H() {
            return R
        }
        function I() {
            return aa ? (console.log("nativeSystemActivated"),
            void j()) : void console.log("RepeatNativeActive: Native asking the web app to set the status as active while the web app is already in active state.")
        }
        function J() {
            return aa ? void console.log("RepeatNativeIdle: Native asking the web app to set the status as idle while the web app is already in idle state.") : (console.log("nativeSystemIdled"),
            void i())
        }
        var K = {};
        _.extend(K, Backbone.Events);
        var L, M, N, O, P, Q, R, S, T, U = 6e4, V = 3e5, W = 6e4, X = 5, Y = 969, Z = !1, $ = !1, aa = !1, ba = 0, ca = !1, da = !1, ea = !1, fa = !1, ga = !1, ha = !1, ia = !1;
        ifvisible.on("focus", function() {
            L = !0,
            $ = !1,
            K.trigger("appFocus"),
            console.log("appFocus")
        }),
        ifvisible.on("blur", function() {
            L = !1,
            K.trigger("appBlur"),
            console.log("appBlur")
        }),
        ifvisible.on("activate", function() {
            M = !0,
            K.trigger("appActivate"),
            console.log("appActivate")
        }),
        ifvisible.on("deActivate", function() {
            M = !1,
            K.trigger("appDeactivate"),
            console.log("appDeactivate")
        });
        var ja = function(a) {
            Y >= a ? Q || (console.log("app switched to compact view"),
            K.trigger("appSwitchedToCompactView"),
            Q = !0) : Q && (console.log("app switched to normal view"),
            K.trigger("appSwitchedToNormalView"),
            Q = !1)
        }
        ;
        return K.on("windowResized", ja),
        c.on("nativeSystemActivated", I),
        c.on("nativeSystemIdled", J),
        K.initialize = d,
        K.appHasFocus = k,
        K.isAppActivated = l,
        K.isAppInShortIdleState = m,
        K.isAppInShortIdle2State = n,
        K.isAppInLongIdleState = o,
        K.isAppInCompactView = p,
        K.setRefreshingOnSessionExpired = q,
        K.getRefreshingOnSessionExpired = r,
        K.setAppUpdateAvailable = s,
        K.getAppUpdateAvailable = t,
        K.setRefreshingOnAppUpdateAvailable = u,
        K.getRefreshingOnAppUpdateAvailable = v,
        K.setRefreshingOnUpgradedToPremium = w,
        K.getRefreshingOnUpgradedToPremium = x,
        K.setSigningOut = y,
        K.getSigningOut = z,
        K.setRefreshingOnUserRemovedFromNetwork = A,
        K.getRefreshingOnUserRemovedFromNetwork = B,
        K.setSwitchingNetwork = C,
        K.getSwitchingNetwork = D,
        K.isAppInCompactViewModeWithGivenWidth = F,
        K.setScaledCompactWidth = G,
        K.getScaledCompactWidth = H,
        K.getIsForceRefreshing = E,
        K
    }
    ]),
    b.module("convoApp").factory("appTabs", ["localStore", "appStateInfo", "config", "mixpanelService", function(b, d, e, f) {
        function g(b) {
            console.log("apptabs: initializeThisTab(): thisTabId: " + b),
            $ || (ca = b,
            d.on("appFocus", i),
            d.on("appBlur", j),
            d.on("appActivate", k),
            d.on("appDeactivate", l),
            d.on("appShortIdle", m),
            d.on("appActive", n),
            a.addEventListener("storage", Y, !1),
            Z.on(T(ca), S),
            Z.on(oa, z),
            da = setInterval(F, 5e3),
            ea = setTimeout(O, 60 * (5 + Math.ceil(20 * Math.random())) * 1e3),
            q(ca),
            h())
        }
        function h() {
            d.appHasFocus() ? (y(ca),
            s(ca),
            ra = !0) : C(),
            $ = !0
        }
        function i() {
            console.log("apptabs: onAppFocus()"),
            y(ca),
            s(ca),
            x(),
            ra || (ra = !0,
            Z.trigger("thisTabLastActiveChanged", !0))
        }
        function j() {
            console.log("apptabs: onAppBlur()"),
            t()
        }
        function k() {
            console.log("apptabs: onAppActivate()"),
            H() && u(ca)
        }
        function l() {
            console.log("apptabs: onAppDeactivate()"),
            H() && v()
        }
        function m() {
            console.log("apptabs: onAppIdle()"),
            H() && w(ca)
        }
        function n() {
            console.log("apptabs: onAppActive()"),
            H() && x()
        }
        function o() {
            ba || (D(),
            d.off("appFocus", i),
            d.off("appBlur", j),
            Z.off(oa, z),
            clearInterval(da),
            clearTimeout(ea),
            ba = !0)
        }
        function p() {
            aa || (r(ca),
            aa = !0)
        }
        function q(a) {
            var b = A()
              , c = b.indexOf(a);
            -1 !== c && b.splice(c, 1),
            b.push(a),
            V(ga, b)
        }
        function r(a) {
            var b = A()
              , c = b.indexOf(a);
            -1 !== c && (b.splice(c, 1),
            V(ga, b))
        }
        function s(a) {
            console.log("APP TABS: set tab as current active."),
            V(ia, a)
        }
        function t() {
            console.log("APP TABS: cleanup tab as current active."),
            V(ia, c)
        }
        function u(a) {
            console.log("APP TABS: set current active tab as activated."),
            V(ja, a)
        }
        function v() {
            console.log("APP TABS: cleanup current active tab as activated."),
            V(ja, c)
        }
        function w(a) {
            console.log("APP TABS: set current active tab as idle."),
            V(ka, a)
        }
        function x() {
            console.log("APP TABS: cleanup current active tab as idle."),
            V(ka, c)
        }
        function y(a) {
            ca === a && D(),
            V(ha, a);
            var b = {
                version: la,
                lastActiveTabId: a,
                sourceTabId: ca
            };
            X(oa, b)
        }
        function z(a) {
            a.version === la && ra && (sa = !0)
        }
        function A() {
            var a = U(ga);
            return "[object Array]" !== Object.prototype.toString.call(a) && (a = []),
            a
        }
        function B() {
            var a = A();
            if (0 === a.length)
                return -1;
            for (var b = 0; b < a.length; b++)
                if (a[b] === ca)
                    return b;
            return -1
        }
        function C() {
            ta || (document.addEventListener("mousemove", E, !1),
            ta = !0)
        }
        function D() {
            ta && (document.removeEventListener("mousemove", E, !1),
            ta = !1)
        }
        function E() {
            console.log("apptabs: onUserActivity()"),
            y(ca),
            ra || (ra = !0,
            Z.trigger("thisTabLastActiveChanged", !0))
        }
        function F() {
            K(function(a) {
                ba || (console.log("apptabs: checkIsThisTabLastActiveTab(): " + (a ? "YES" : "NO")),
                sa = !1,
                a !== ra && (ra = a,
                Z.trigger("thisTabLastActiveChanged", ra)),
                ra ? D() : C())
            })
        }
        function G() {
            for (var a, b = A(), c = U(ia), d = 0; d < b.length; d++)
                if (a = b[d],
                a === c)
                    return !0;
            return !1
        }
        function H() {
            var a = U(ia);
            return a === ca
        }
        function I() {
            var a = U(ja);
            return a ? !0 : !1
        }
        function J() {
            var a = U(ka);
            return a ? !0 : !1
        }
        function K(a) {
            L(function(b) {
                a(b === ca)
            })
        }
        function L(a) {
            var b = U(ha);
            return b === ca ? void a(ca) : void (b ? Q(b, function(c) {
                return c ? void a(b) : ba ? void a(-1) : void M(function(b) {
                    a(b)
                })
            }) : M(function(b) {
                a(b)
            }))
        }
        function M(a) {
            var b = A();
            return 0 === b.length ? (q(ca),
            y(ca),
            void a(ca)) : void N(function(b) {
                return ba ? void a(-1) : void (b !== qa ? (y(b),
                a(b)) : (q(ca),
                y(ca),
                a(ca)))
            }, b, b.length - 1)
        }
        function N(a, b, c) {
            return -1 === c ? void a(qa) : void Q(b[c], function(d) {
                if (d)
                    a(b[c]);
                else {
                    if (ba)
                        return void a(qa);
                    N(a, b, --c)
                }
            })
        }
        function O() {
            var a = A();
            0 !== a.length && P(a, a.length - 1, function() {
                e.IS_NATIVE || f.trackEvent(f.BROWSER_TABS_OPEN, {
                    Count: A().length
                })
            })
        }
        function P(a, b, c) {
            return -1 === b ? void c() : void Q(a[b], function(d) {
                ba || (d || r(a[b]),
                P(a, --b, c))
            })
        }
        function Q(a, b) {
            return a === ca ? void b(!0) : void R(a, "areYouAlive", null , function(c) {
                console.log("apptabs: isTabAlive(): tabId: " + a + ", result: " + (c !== pa ? "YES" : "NO")),
                b(c !== pa)
            })
        }
        function R(a, b, c, d) {
            if (d) {
                var e = function(c) {
                    c.sourceTabId === a && c.functionName === "response:" + b && (Z.off("_internal__functionCalledByOtherTab", e),
                    clearTimeout(f),
                    d(c.data))
                }
                ;
                Z.on("_internal__functionCalledByOtherTab", e);
                var f = setTimeout(function() {
                    Z.off("_internal__functionCalledByOtherTab", e),
                    d(pa)
                }, 2e3)
            }
            var c = {
                version: la,
                targetTabId: a,
                functionName: b,
                data: c,
                sourceTabId: ca
            };
            X(T(a), c)
        }
        function S(a) {
            a.version === la && a.sourceTabId !== ca && a.targetTabId === ca && ("areYouAlive" === a.functionName && R(a.sourceTabId, "response:areYouAlive", null ),
            Z.trigger("_internal__functionCalledByOtherTab", a))
        }
        function T(a) {
            return na + "_" + a
        }
        function U(a) {
            var c = b.readData(a);
            return c && c.version === fa ? c.data : null 
        }
        function V(a, c) {
            b.writeData(a, c, fa)
        }
        function W(a) {
            b.clearData(a)
        }
        function X(a, b) {
            var c = {};
            c.eventData = b,
            c.dirtyTag = ca + "_" + ua,
            ua++,
            V(a, c),
            setTimeout(function() {
                W(a)
            }, 20)
        }
        function Y(b) {
            b = b || a.event;
            var c = b.key.indexOf(ma);
            if (b.newValue && -1 !== c) {
                var d = JSON.parse(b.newValue);
                if (d.version === fa) {
                    var e = b.key.slice(c);
                    Z.trigger(e, d.data.eventData)
                }
            }
        }
        var Z = {};
        _.extend(Z, Backbone.Events);
        var $, aa, ba, ca, da, ea, fa = 5, ga = "appTabs_tabs", ha = "appTabs_lastActiveTab", ia = "appTabs_currentActiveTab", ja = "appTabs_currentActiveTabIsActivated", ka = "appTabs_currentActiveTabIsIdle", la = 3, ma = "appTabs_intercom_", na = ma + "functionCall", oa = ma + "lastActiveTabChange", pa = "NO_RESPONSE", qa = "NONE", ra = !1, sa = !1, ta = !1, ua = 0;
        return Z.dispatchTabsEvent2 = function(a, b) {
            X(ma + a, b)
        }
        ,
        Z.addTabsEventListener2 = function(a, b) {
            Z.on(ma + a, b)
        }
        ,
        Z.removeTabsEventListener2 = function(a, b) {
            Z.off(ma + a, b)
        }
        ,
        Z.initializeThisTab = g,
        Z.disposeLastActiveTabManagementProcess = o,
        Z.disposeThisTab = p,
        Z.getThisTabIdx = B,
        Z.isThisTabLastActiveTab = function() {
            return sa ? !1 : ra
        }
        ,
        Z.checkIsThereAnyActiveTab = G,
        Z.checkIsCurrentActiveTabIsActivated = I,
        Z.checkIsCurrentActiveTabIsIdle = J,
        a.cleanupTabsList = O,
        Z
    }
    ]),
    b.module("convoApp").factory("appTitleManager", ["appStateInfo", "appTabs", function(b, c) {
        function d() {
            return !b.appHasFocus() && !c.checkIsThereAnyActiveTab() || b.appHasFocus() && !b.isAppActivated() || !b.appHasFocus() && !c.checkIsCurrentActiveTabIsActivated() || b.appHasFocus() && c.checkIsCurrentActiveTabIsIdle() || !b.appHasFocus() && c.checkIsCurrentActiveTabIsIdle() ? !0 : !1
        }
        function e(e) {
            if (d()) {
                var f;
                _.contains(o, e) ? f = _.indexOf(o, e) : (o.push(e),
                f = o.length - 1),
                a.document.title = o[f++],
                l && clearInterval(l),
                l = setInterval(function() {
                    c.checkIsThereAnyActiveTab() && (b.isAppActivated() && b.appHasFocus() && !c.checkIsCurrentActiveTabIsIdle() || c.checkIsCurrentActiveTabIsActivated() && !b.appHasFocus() && !c.checkIsCurrentActiveTabIsIdle()) && h(),
                    f < o.length ? (a.document.title = o[f],
                    f++) : (a.document.title = m,
                    f = 0,
                    0 == o.length && clearInterval(l))
                }, n)
            }
        }
        function f(b) {
            var c;
            try {
                c = decodeURIComponent(b)
            } catch (d) {
                c = b
            }
            m = c + " - Convo",
            a.document.title = m
        }
        function g() {
            l && clearInterval(l),
            o = [],
            a.document.title = m,
            c.dispatchTabsEvent2("tabInFocus")
        }
        function h() {
            l && clearInterval(l),
            o = [],
            a.document.title = m
        }
        function i(a) {
            for (var b = 0; b < a.length; b++)
                o.splice(_.indexOf(o, a[b]), 1)
        }
        function j(a) {
            for (var b = 0; b < a.length; b++)
                e(a[b])
        }
        function k() {
            m = a.document.title
        }
        var l, m, n = 1e3, o = [];
        return b.on("appFocus", g),
        c.addTabsEventListener2("tabInFocus", h),
        {
            initialize: k,
            setAppTitle: f,
            toggleAppTitleWith: e,
            toggleAppTitleWithTitles: j,
            clearToggleTitle: i
        }
    }
    ]),
    b.module("convoApp").factory("appsService", ["ServerComm", "$q", function(a, b) {
        function c(c) {
            var d = {
                method: "sendDownloadAppEmail",
                receiving_client: c
            }
              , e = a.post("apps", d)
              , f = b.defer();
            return e.success(function(a, b) {
                f.resolve(a)
            }),
            f.promise
        }
        var d = {};
        return d.sendDownloadAppEmail = c,
        d
    }
    ]),
    b.module("convoApp").factory("atMentionsListProvider", ["usersGroupsListProvider", "convoCommandsListProvider", "emojiDataService", function(a, b, c) {
        function d(c, d, e, f) {
            d = d || i;
            var g = [];
            return g = b.queryAvailableCommands(c, d, e),
            g = g.concat(a.getPublishableGroupsAndUsersOrPreviousHistory(c, d - g.length, f))
        }
        function e(b, c, d) {
            c = c || i;
            var e = [];
            return e = a.getPublishableGroupsAndUsersOrPreviousHistory(b, c - e.length, d)
        }
        function f(b, c) {
            c = c || i;
            var d = [];
            return d = a.getPublishableUsersOrPreviousHistory(b, c - d.length)
        }
        function g(a, c, d) {
            c = c || i;
            var e = [];
            return e = b.queryAvailableCommands(a, c, d)
        }
        function h(a, b) {
            b = b || i;
            var d = [];
            return d = c.queryEmojisByShortCodes(a, b)
        }
        var i = 5;
        return {
            queryPublishableUsersGroupsAndCommands: d,
            queryPublishableUsersAndGroups: e,
            queryAvailableCommands: g,
            queryEmojiData: h,
            queryPublishableUsers: f,
            sources: {
                CHAT: "chat",
                INLINE_INSERT: "inlineInsert",
                COMMENT: "comment"
            }
        }
    }
    ]),
    b.module("convoApp").factory("authService", function() {
        var a = {
            setUser: function(a, b) {
                localStorage.setItem("email", a),
                localStorage.setItem("password", b)
            },
            getUser: function() {
                return localStorage.getItem("email") && localStorage.getItem("password") ? {
                    email: localStorage.getItem("email"),
                    password: localStorage.getItem("password")
                } : void 0
            },
            deleteUser: function() {
                localStorage.removeItem("email"),
                localStorage.removeItem("password")
            }
        };
        return a
    }),
    b.module("convoApp").factory("awsService", ["$http", function(a) {
        function d(a) {
            i = a,
            j = "http" + (i.https_uploads ? "s" : "") + "://" + i.bucket_name + ".s3.amazonaws.com/"
        }
        function e() {
            return i
        }
        function f() {
            return j
        }
        function g(d, e) {
            var f = new FormData;
            f.append("AWSAccessKeyId", i.access_key),
            f.append("acl", "private"),
            f.append("policy", i.s3_policy),
            f.append("Filename", e),
            f.append("signature", i.s3_signature),
            f.append("success_action_status", "201"),
            f.append("Content-Type", "image/png"),
            f.append("key", e),
            f.append("x-amz-server-side-encryption", "AES256"),
            f.append("file", d);
            var g = a.post(j, f, {
                transformRequest: b.identity,
                headers: {
                    "Content-Type": c
                }
            });
            return g
        }
        function h(d, e, f, g) {
            var h = new FormData;
            h.append("AWSAccessKeyId", i.access_key),
            h.append("acl", "private"),
            h.append("policy", i.s3_policy),
            h.append("Filename", e),
            h.append("signature", i.s3_signature),
            h.append("success_action_status", "201"),
            h.append("Content-Type", g),
            h.append("key", f),
            h.append("x-amz-server-side-encryption", "AES256"),
            h.append("file", d);
            var k = a.post(j, h, {
                transformRequest: b.identity,
                headers: {
                    "Content-Type": c
                }
            });
            return k
        }
        var i, j;
        return {
            setAwsData: d,
            getAwsData: e,
            getS3BucketUrl: f,
            uploadSnippetImage: g,
            uploadFile: h
        }
    }
    ]),
    b.module("convoApp").factory("billingService", ["ServerComm", "$q", "accountInfo", "userInfo", function(a, b, c, d) {
        function e() {
            var c = {
                method: "getSubscriptionIfUserCanUpgradeAccount"
            }
              , d = a.get("billing", {
                params: c
            })
              , e = b.defer();
            return d.then(function(a, b) {
                e.resolve(a.data)
            }, function(a, b) {
                e.reject(a.data)
            }),
            e.promise
        }
        function f() {
            var c = {
                method: "getUpdatePaymentPageUrl"
            }
              , d = a.get("billing", {
                params: c
            })
              , e = b.defer();
            return d.then(function(a, b) {
                e.resolve(a.data)
            }, function(a, b) {
                e.reject(a.data)
            }),
            e.promise
        }
        function g() {
            var c = {
                method: "getNumActivatedUsers"
            }
              , d = a.get("billing", {
                params: c
            })
              , e = b.defer();
            return d.then(function(a, b) {
                e.resolve(a.data)
            }, function(a, b) {
                e.reject(a.data)
            }),
            e.promise
        }
        function h(c) {
            var d = {
                method: "fetchTransactionsForSubscription",
                sub_id: c
            }
              , e = a.get("billing", {
                params: d
            })
              , f = b.defer();
            return e.then(function(a) {
                f.resolve(a.data)
            }, function(a) {
                f.reject(a.data)
            }),
            f.promise
        }
        var i = {};
        return _.extend(i, Backbone.Events),
        i.getBillingInfo = e,
        i.getUpdatePaymentUrl = f,
        i.getActivatedUsersNum = g,
        i.getBillingHistory = h,
        i
    }
    ]),
    b.module("convoApp").factory("boxService", ["ServerComm", "$q", function(a, b) {
        var c = {
            createBoxIntegration: function(c, d, e, f, g, h, i, j, k) {
                var l = b.defer()
                  , m = {
                    account_id: c,
                    creator_id: d,
                    display_name: e,
                    action_type: f,
                    access_level: g,
                    recipients: h,
                    profile_image_info: i,
                    folder_id: j,
                    token_id: k
                };
                return a.post("integrations/box", m).success(function(a, b) {
                    l.resolve(a)
                }),
                l.promise
            },
            getUserInfo: function(c) {
                var d = b.defer()
                  , e = {
                    op: "token_id",
                    user_id: c
                };
                return a.get("integrations/box?op=token_id&user_id=" + c, e).success(function(a, b) {
                    d.resolve(a)
                }),
                d.promise
            },
            deleteAuthorization: function(c) {
                var d = (b.defer(),
                {
                    token_id: c,
                    target: "authorization"
                });
                return a.deletex("integrations/box", d)
            },
            deleteIntegration: function(c) {
                var d = (b.defer(),
                {
                    webhook_id: c,
                    target: "webhook"
                });
                return a.deletex("integrations/box", d)
            },
            getIntegrationDetails: function(c) {
                var d = b.defer()
                  , e = {
                    op: "integrations_details",
                    webhook_id: c
                };
                return a.get("integrations/box?webhook_id=" + c + "&op=integrations_details", e).success(function(a, b) {
                    d.resolve(a)
                }),
                d.promise
            },
            getFolderList: function(c, d) {
                var e = b.defer()
                  , f = {
                    op: "folder_list",
                    token_id: c,
                    folder_id: d
                };
                return a.get("integrations/box?token_id=" + c + "&folder_id=" + d + "&op=folder_list", f).success(function(a, b) {
                    e.resolve(a)
                }),
                e.promise
            },
            updateIntegration: function(c, d, e, f, g, h, i) {
                var j = b.defer()
                  , k = {
                    webhook_id: c,
                    display_name: d,
                    action_type: e,
                    recipients: f,
                    profile_image_info: g,
                    folder_id: h,
                    token_id: i
                };
                return a.put("integrations/box", k).success(function(a, b) {
                    j.resolve(a)
                }),
                j.promise
            }
        };
        return c
    }
    ]),
    b.module("convoApp").factory("convoCommandsListProvider", ["utils", "config", function(a, b) {
        function c(b, c, d) {
            if (0 == f.length)
                return [];
            var g = b.indexOf(" ");
            b = b.split(" "),
            b = b[0],
            c || (c = e);
            var h, k, l = [], m = a.getUserGroupSearchRegex(b);
            for (i = 0; i < f.length; i++)
                if (k = _.find(f[i].sources, function(a) {
                    return d === a ? !0 : void 0
                }))
                    for (j = 0; j < f[i].keywords.length; j++) {
                        if (h = g >= 0 ? f[i].keywords[j] : f[i].keywords[j].substr(0, b.length),
                        h == b) {
                            f[i].formattedlabel = f[i].label.replace(m, "$1b1%b1_1$3b2%b2_2"),
                            l.push(f[i]);
                            break
                        }
                        if (l.length == c - 1)
                            break
                    }
            return l
        }
        function d() {
            var a = {
                type: "cmd",
                label: "Giphy",
                sources: ["inlineInsert", "chat", "comment"],
                formattedlabel: "Giphy",
                desclabel: "Find the right gif for any situation",
                formatteddesclabel: "Find the right gif for any situation",
                classes: "",
                imgClasses: "",
                keywords: ["giphy", "gif"],
                imgurl: b.APP_BASE_URL + "assets/img/common/GiphyUserImage.png"
            };
            f.push(a);
            var c = {
                type: "cmd",
                label: "Hangouts",
                sources: ["chat"],
                formattedlabel: "Hangouts",
                desclabel: "Start a Google+ Hangout video call",
                formatteddesclabel: "Start a Google+ Hangout video call",
                classes: "",
                imgClasses: "hangout-commands-item",
                keywords: ["Hangouts", "hangouts"],
                imgurl: "assets/img/chat/hangouts.png"
            };
            f.push(c);
            var d = {
                type: "cmd",
                label: "Appear.in",
                sources: ["chat"],
                formattedlabel: "Appear.in",
                desclabel: "Start an Appear.in video call",
                formatteddesclabel: "Start an Appear.in video call",
                classes: "",
                imgClasses: "appearin-commands-item",
                keywords: ["appear.in", "Appear.in"],
                imgurl: "assets/img/chat/appearin.png"
            };
            f.push(d);
            var e = {
                type: "cmd",
                label: "Room",
                sources: ["chat"],
                formattedlabel: "Room",
                desclabel: "Start a Room video call",
                formatteddesclabel: "Start a Room video call",
                classes: "",
                imgClasses: "room-commands-item",
                keywords: ["room", "Room"],
                imgurl: "assets/img/chat/roomco.png"
            };
            f.push(e)
        }
        var e = 5
          , f = [];
        return d(),
        {
            queryAvailableCommands: c
        }
    }
    ]),
    b.module("convoApp").factory("crossBrowserCompatibility", ["utils", function(a) {
        var b = {}
          , c = $(document.body);
        return c.addClass((a.whichOS() || "").toLowerCase()),
        c.addClass((a.whichBrowser() || "").toLowerCase()),
        a.isSafari9() && c.addClass("safari-9"),
        document.contains || (document.contains = function(a) {
            return document.body.contains(a)
        }
        ),
        HTMLElement.prototype.remove || (HTMLElement.prototype.remove = function() {
            var a = this;
            a.parentNode && a.parentNode.removeChild(a)
        }
        ),
        b
    }
    ]),
    b.module("convoApp").factory("datetimeService", ["dateFilter", function(a) {
        function b(a) {
            o = a,
            p = Date.now(),
            r = !0
        }
        function c() {
            return r ? o + (Date.now() - p) : Date.now()
        }
        function d(a) {
            if ("string" == typeof a) {
                var b = parseInt(a);
                a = b == a ? b : new Date(a.replace(" ", "T") + "Z").getTime()
            }
            return a
        }
        function e(a) {
            return f(a, c())
        }
        function f(b, e, f, g, h, i, j) {
            b = d(b);
            var k = "";
            e || (e = c());
            var l = e - b;
            if (l >= q && 5 * q >= l) {
                var m = new Date(b);
                k = t[m.getDay()]
            } else if (l >= q) {
                var n = new Date(b)
                  , o = new Date(e);
                k = f ? n.getYear() == o.getYear() ? a(b, j ? j : "MMM d") : a(b, j ? j : "MMM d, yyyy") : n.getYear() == o.getYear() ? a(b, j ? j : "h:mm a, MMM d") : a(b, j ? j : "h:mm a, MMM d, yyyy"),
                h && (k = i ? k : " on " + k)
            } else {
                0 > l && (l = 0);
                var p = new Date(l)
                  , r = p.getUTCHours()
                  , s = p.getUTCMinutes();
                g ? (1 == r ? k = "1h" : r > 1 ? k = r + "h" : s >= 2 ? k = s + "m" : 1 == s ? k = "1m" : (k = "Now",
                h && (k = "1m")),
                h && (k += " ago")) : k = 1 == r ? "1 hour" : r > 1 ? r + " hours" : s >= 2 ? s + " mins" : 1 == s ? "1 min" : "Now"
            }
            return k
        }
        function g(a, b) {
            if ("string" == typeof a) {
                var c = parseInt(a);
                a = c == a ? c : new Date(a.replace(" ", "T") + "Z")
            } else
                a = new Date(a);
            var d = a.getHours()
              , e = a.getMinutes()
              , f = d;
            d > 12 && (f = d - 12),
            10 > f && (f = "0" + f),
            10 > e && (e = "0" + e);
            var g = "";
            return g = b ? f + ":" + e + " " + (12 > d ? "am" : "pm") : s[a.getMonth()] + " " + a.getDate() + ", " + a.getFullYear() + " at " + f + ":" + e + " " + (12 > d ? "am" : "pm")
        }
        function h(b) {
            return a(b, "h:mm a")
        }
        function i(b) {
            var c = ((new Date).getTime(),
            new Date(b),
            "");
            return c = k(b) ? "Today" : l(b) ? "Yesterday" : a(b, "MMM d,yyyy")
        }
        function j(b) {
            var c = (new Date).getTime()
              , d = "";
            return d = k(b) ? "Today" : l(b) ? "Yesterday" : a(b, "yyyy") != a(c, "yyyy") ? a(b, "MMM d,yyyy") : a(b, "MMM d")
        }
        function k(b) {
            var c = a(b, "MMM d,yyyy")
              , d = a(Date.now(), "MMM d,yyyy");
            return c == d ? !0 : !1
        }
        function l(b) {
            var c = a(b, "MMM d,yyyy")
              , d = (new Date).getTime();
            d -= q;
            var e = a(d, "MMM d,yyyy");
            return c == e ? !0 : !1
        }
        function m(b, c) {
            var d = a(b, "MMM d,yyyy")
              , e = a(c, "MMM d,yyyy");
            return d != e ? !0 : !1
        }
        function n() {
            var a = new Date
              , b = a.getDate()
              , c = a.getMonth() + 1
              , d = a.getFullYear();
            return 10 > b && (b = "0" + b),
            10 > c && (c = "0" + c),
            c + "/" + b + "/" + d
        }
        var o, p, q = 864e5, r = !1, s = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], t = new Array(7);
        return t[0] = "Sun",
        t[1] = "Mon",
        t[2] = "Tue",
        t[3] = "Wed",
        t[4] = "Thu",
        t[5] = "Fri",
        t[6] = "Sat",
        {
            init: b,
            getServerTimestamp: c,
            formatDateAgo: e,
            makeRelativeDateString: f,
            localize: g,
            getTimeFormatHmma: h,
            dateSeparatorFromCurrentTime: i,
            dateSeparatorFromCurrentTimeByDayMonthOrYear: j,
            isDayDiff: m,
            getCurrentTime: n,
            normalizeAndGetUnixTimestamp: d
        }
    }
    ]),
    b.module("convoApp").factory("directsService", ["ServerComm", "$q", function(a, b) {
        function c() {
            var c = {
                method: "resetDirectsCount"
            }
              , d = a.post("directs", c)
              , e = b.defer();
            return d.success(function(a, b) {
                e.resolve(a)
            }),
            e.promise
        }
        var d = {};
        return d.resetDirectsCount = c,
        d
    }
    ]),
    b.module("convoApp").factory("draftService", ["localStore", "appsInfo", "Note", "notesAppDataProvider", function(a, b, c, d) {
        var e = {};
        return _.extend(e, Backbone.Events),
        e.saveDraftToLocalStorage = function(b, c) {
            var d = b + "," + c;
            a.writeData("last_saved_draft", d)
        }
        ,
        e.removeDraftFromLocalStorage = function() {
            a.clearData("last_saved_draft")
        }
        ,
        e.dataAvailableInLocalStorage = function() {
            var c = a.readData("last_saved_draft");
            return null  == c ? !1 : (data = c.data.split(","),
            appData = b.getAppInfo(data[0]),
            "Notes" == appData.title ? !0 : !1)
        }
        ,
        e.getLocalStorageData = function() {
            var c = a.readData("last_saved_draft");
            return null  == c ? !1 : (data = c.data.split(","),
            appData = b.getAppInfo(data[0]),
            "Notes" == appData.title ? data : !1)
        }
        ,
        e
    }
    ]),
    b.module("convoApp").factory("dropboxService", ["ServerComm", "$q", "onboardingService", function(a, b, c) {
        var d = {
            createDropboxIntegration: function(d, e, f, g, h, i, j, k, l) {
                var m = b.defer()
                  , n = {
                    account_id: d,
                    creator_id: e,
                    display_name: f,
                    action_type: g,
                    access_level: h,
                    recipients: i,
                    profile_image_info: j,
                    directory: k,
                    token_id: l
                };
                return a.post("integrations/dropbox", n).success(function(a, b) {
                    m.resolve(a),
                    c.markIntegrationsAsDone("Dropbox")
                }),
                m.promise
            },
            getUserInfo: function(c) {
                var d = b.defer()
                  , e = {
                    op: "token_id",
                    user_id: c
                };
                return a.get("integrations/dropbox?op=token_id&user_id=" + c, e).success(function(a, b) {
                    d.resolve(a)
                }),
                d.promise
            },
            deleteAuthorization: function(c) {
                var d = (b.defer(),
                {
                    token_id: c,
                    target: "authorization"
                });
                return a.deletex("integrations/dropbox", d)
            },
            deleteIntegration: function(c) {
                var d = (b.defer(),
                {
                    webhook_id: c,
                    target: "webhook"
                });
                return a.deletex("integrations/dropbox", d)
            },
            getIntegrationDetails: function(c) {
                var d = b.defer()
                  , e = {
                    op: "integrations_details",
                    webhook_id: c
                };
                return a.get("integrations/dropbox?webhook_id=" + c + "&op=integrations_details", e).success(function(a, b) {
                    d.resolve(a)
                }),
                d.promise
            },
            getDirectoryList: function(c, d) {
                var e = b.defer()
                  , f = {
                    op: "directory_list",
                    token_id: c,
                    directory: encodeURIComponent(d)
                };
                return a.get("integrations/dropbox?token_id=" + c + "&directory=" + encodeURIComponent(d) + "&op=directory_list", f).success(function(a, b) {
                    e.resolve(a)
                }),
                e.promise
            },
            updateIntegration: function(c, d, e, f, g, h, i) {
                var j = b.defer()
                  , k = {
                    webhook_id: c,
                    display_name: d,
                    action_type: e,
                    recipients: f,
                    profile_image_info: g,
                    directory: h,
                    token_id: i
                };
                return a.put("integrations/dropbox", k).success(function(a, b) {
                    j.resolve(a)
                }),
                j.promise
            }
        };
        return d
    }
    ]),
    b.module("convoApp").factory("facebookService", ["ServerComm", "$q", "onboardingService", function(a, b, c) {
        var d = {
            createFacebookIntegration: function(d, e, f, g, h, i, j, k, l) {
                var m = b.defer()
                  , n = {
                    account_id: d,
                    creator_id: e,
                    display_name: f,
                    action_type: g,
                    access_level: h,
                    recipients: i,
                    profile_image_info: j,
                    page_id: k,
                    token_id: l
                };
                return a.post("integrations/facebook", n).success(function(a, b) {
                    m.resolve(a),
                    c.markIntegrationsAsDone("Facebook")
                }).error(function(a, b) {
                    m.resolve(b)
                }),
                m.promise
            },
            getPageList: function(c) {
                var d = b.defer()
                  , e = {
                    op: "pages_list",
                    token_id: c
                };
                return a.get("integrations/facebook?op=pages_list&token_id=" + c, e).success(function(a, b) {
                    d.resolve(a)
                }),
                d.promise
            },
            getUserInfo: function(c) {
                var d = b.defer()
                  , e = {
                    op: "user_info",
                    user_id: c,
                    token_id: "1111"
                };
                return a.get("integrations/facebook?op=user_info&user_id=" + c + "&token_id=1111", e).success(function(a, b) {
                    d.resolve(a)
                }),
                d.promise
            },
            deleteAuthorization: function(c) {
                var d = (b.defer(),
                {
                    token_id: c,
                    target: "authorization"
                });
                return a.deletex("integrations/facebook", d)
            },
            deleteIntegration: function(c) {
                var d = (b.defer(),
                {
                    webhook_id: c,
                    target: "webhook"
                });
                return a.deletex("integrations/facebook", d)
            },
            getIntegrationDetails: function(c) {
                var d = b.defer()
                  , e = {
                    webhook_id: c,
                    op: "integration_details",
                    token_id: "1111"
                };
                return a.get("integrations/facebook?webhook_id=" + c + "&token_id=1111&op=integration_details", e).success(function(a, b) {
                    d.resolve(a)
                }),
                d.promise
            },
            updateIntegration: function(c, d, e, f, g, h, i) {
                var j = b.defer()
                  , k = {
                    webhook_id: c,
                    display_name: d,
                    action_type: e,
                    recipients: f,
                    profile_image_info: g,
                    page_id: h,
                    token_id: i
                };
                return a.put("integrations/facebook", k).success(function(a, b) {
                    j.resolve(a)
                }).error(function(a, b) {
                    j.resolve(b)
                }),
                j.promise
            }
        };
        return d
    }
    ]),
    b.module("convoApp").factory("feedLikeThisService", ["$rootScope", "ServerComm", function(a, b) {
        var c = {};
        return _.extend(c, Backbone.Events),
        c.getFeeds = function(c, d, e, f) {
            var g = {
                authToken: a.login_data.xmpp_session_token,
                userID: a.login_data.user.user_id,
                accountID: a.login_data.account_id,
                filter: null ,
                searchKeyword: c,
                feedId: d,
                count: 10,
                fromIndex: e,
                refineSearch: f
            }
              , h = b.postx("feed/fetchMoreLikeThis", g);
            return h
        }
        ,
        c
    }
    ]),
    b.module("convoApp").factory("gcalService", ["ServerComm", "$q", "onboardingService", function(a, b, c) {
        var d = {
            createGcalIntegration: function(d, e, f, g, h, i, j, k, l, m) {
                var n = b.defer()
                  , o = {
                    account_id: d,
                    creator_id: e,
                    display_name: f,
                    action_type: g,
                    access_level: h,
                    recipients: i,
                    profile_image_info: j,
                    calendar_id: k,
                    notification_time: l,
                    token_id: m
                };
                return a.post("integrations/gcal", o).success(function(a, b) {
                    n.resolve(a),
                    c.markIntegrationsAsDone("Google Calendar")
                }).error(function(a, b) {
                    n.resolve(b)
                }),
                n.promise
            },
            getCalendarList: function(c) {
                var d = b.defer()
                  , e = {
                    op: "calendar_list",
                    token_id: c
                };
                return a.get("integrations/gcal?op=calendar_list&token_id=" + c, e).success(function(a, b) {
                    d.resolve(a)
                }),
                d.promise
            },
            getUserInfo: function(c) {
                var d = b.defer()
                  , e = {
                    op: "user_info",
                    user_id: c,
                    token_id: "1111"
                };
                return a.get("integrations/gcal?op=user_info&user_id=" + c + "&token_id=1111", e).success(function(a, b) {
                    d.resolve(a)
                }),
                d.promise
            },
            deleteAuthorization: function(c) {
                var d = (b.defer(),
                {
                    token_id: c,
                    target: "authorization"
                });
                return a.deletex("integrations/gcal", d)
            },
            deleteIntegration: function(c) {
                var d = (b.defer(),
                {
                    webhook_id: c,
                    target: "webhook"
                });
                return a.deletex("integrations/gcal", d)
            },
            getIntegrationDetails: function(c) {
                var d = b.defer()
                  , e = {
                    webhook_id: c,
                    op: "integration_details",
                    token_id: "1111"
                };
                return a.get("integrations/gcal?webhook_id=" + c + "&token_id=1111&op=integration_details", e).success(function(a, b) {
                    d.resolve(a)
                }),
                d.promise
            },
            updateIntegration: function(c, d, e, f, g, h, i, j) {
                var k = b.defer()
                  , l = {
                    webhook_id: c,
                    display_name: d,
                    action_type: e,
                    recipients: f,
                    profile_image_info: g,
                    calendar_id: h,
                    notification_time: i,
                    token_id: j
                };
                return a.put("integrations/gcal", l).success(function(a, b) {
                    k.resolve(a)
                }).error(function(a, b) {
                    k.resolve(b)
                }),
                k.promise
            }
        };
        return d
    }
    ]),
    b.module("convoApp").factory("gdriveService", ["ServerComm", "$q", "onboardingService", function(a, b, c) {
        var d = {
            createGdriveIntegration: function(d, e, f, g, h, i, j, k, l) {
                var m = b.defer()
                  , n = {
                    account_id: d,
                    creator_id: e,
                    display_name: f,
                    action_type: g,
                    access_level: h,
                    recipients: i,
                    profile_image_info: j,
                    folder_id: k,
                    token_id: l
                };
                return a.post("integrations/gdrive", n).success(function(a, b) {
                    m.resolve(a),
                    c.markIntegrationsAsDone("Google Drive")
                }),
                m.promise
            },
            getUserInfo: function(c) {
                var d = b.defer()
                  , e = {
                    op: "token_id",
                    user_id: c
                };
                return a.get("integrations/gdrive?op=user_info&user_id=" + c + "&token_id=1111", e).success(function(a, b) {
                    d.resolve(a)
                }),
                d.promise
            },
            deleteAuthorization: function(c) {
                var d = (b.defer(),
                {
                    token_id: c,
                    target: "authorization"
                });
                return a.deletex("integrations/gdrive", d)
            },
            deleteIntegration: function(c) {
                var d = (b.defer(),
                {
                    webhook_id: c,
                    target: "webhook"
                });
                return a.deletex("integrations/gdrive", d)
            },
            getIntegrationDetails: function(c) {
                var d = b.defer()
                  , e = {
                    op: "integrations_details",
                    webhook_id: c
                };
                return a.get("integrations/gdrive?webhook_id=" + c + "&op=integration_details&token_id=1111", e).success(function(a, b) {
                    d.resolve(a)
                }),
                d.promise
            },
            updateIntegration: function(c, d, e, f, g, h, i) {
                var j = b.defer()
                  , k = {
                    webhook_id: c,
                    display_name: d,
                    action_type: e,
                    recipients: f,
                    profile_image_info: g,
                    folder_id: h,
                    token_id: i
                };
                return a.put("integrations/gdrive", k).success(function(a, b) {
                    j.resolve(a)
                }),
                j.promise
            },
            getFolderList: function(c, d) {
                var e = b.defer()
                  , f = {
                    op: "folders_list",
                    token_id: c,
                    folder_id: d
                };
                return a.get("integrations/gdrive?token_id=" + c + "&op=folders_list&folder_id=" + d, f).success(function(a, b) {
                    e.resolve(a)
                }),
                e.promise
            },
            getFolderName: function(c, d) {
                var e = b.defer()
                  , f = {
                    op: "folder_name",
                    token_id: c,
                    folder_id: d
                };
                return a.get("integrations/gdrive?token_id=" + c + "&op=folder_name&folder_id=" + d, f).success(function(a, b) {
                    e.resolve(a)
                }),
                e.promise
            }
        };
        return d
    }
    ]),
    b.module("convoApp").factory("gmailService", ["ServerComm", "$q", "onboardingService", function(a, b, c) {
        var d = {
            createGmailIntegration: function(d, e, f, g, h, i, j, k, l) {
                var m = b.defer()
                  , n = {
                    account_id: d,
                    creator_id: e,
                    display_name: f,
                    action_type: g,
                    access_level: h,
                    recipients: i,
                    profile_image_info: j,
                    label_id: k,
                    token_id: l
                };
                return a.post("integrations/gmail", n).success(function(a, b) {
                    m.resolve(a),
                    c.markIntegrationsAsDone("Gmail")
                }),
                m.promise
            },
            getLabelList: function(c) {
                var d = b.defer()
                  , e = {
                    op: "label_list",
                    token_id: c
                };
                return a.get("integrations/gmail?op=label_list&token_id=" + c, e).success(function(a, b) {
                    d.resolve(a)
                }),
                d.promise
            },
            getUserInfo: function(c) {
                var d = b.defer()
                  , e = {
                    op: "token_id",
                    user_id: c
                };
                return a.get("integrations/gmail?op=token_id&user_id=" + c, e).success(function(a, b) {
                    d.resolve(a)
                }),
                d.promise
            },
            deleteAuthorization: function(c) {
                var d = (b.defer(),
                {
                    token_id: c,
                    target: "authorization"
                });
                return a.deletex("integrations/gmail", d)
            },
            deleteIntegration: function(c) {
                var d = (b.defer(),
                {
                    webhook_id: c,
                    target: "webhook"
                });
                return a.deletex("integrations/gmail", d)
            },
            disableIntegration: function(c, d, e) {
                var f = b.defer()
                  , g = {
                    webhook_id: c,
                    action: d,
                    modified_by: e
                };
                return a.put("webhooks", g).success(function(a, b) {
                    f.resolve(a)
                }),
                f.promise
            },
            getIntegrationDetails: function(c) {
                var d = b.defer()
                  , e = {
                    op: "integrations_details",
                    webhook_id: c
                };
                return a.get("integrations/gmail?webhook_id=" + c + "&op=integrations_details", e).success(function(a, b) {
                    d.resolve(a)
                }),
                d.promise
            },
            updateIntegration: function(c, d, e, f, g, h, i) {
                var j = b.defer()
                  , k = {
                    webhook_id: c,
                    display_name: d,
                    action_type: e,
                    recipients: f,
                    profile_image_info: g,
                    label_id: h,
                    token_id: i
                };
                return a.put("integrations/gmail", k).success(function(a, b) {
                    j.resolve(a)
                }),
                j.promise
            }
        };
        return d
    }
    ]),
    b.module("convoApp").factory("hashtagsProvider", ["$q", "$rootScope", "ServerComm", "utils", function(a, b, c, d) {
        function e(a) {
            var b = 0 == a.name.indexOf("#") ? a.name : "#" + a.name;
            return {
                label: b,
                formattedlabel: b,
                users: a.users,
                tf: a.tf
            }
        }
        function f(a, d) {
            var e = {
                authToken: b.login_data.xmpp_session_token,
                userID: b.login_data.user.user_id,
                accountID: b.login_data.account_id,
                startingWith: a,
                tagsLimit: d
            }
              , f = c.post("tags/get", e);
            return f
        }
        function g(b, c) {
            var g = b;
            if ((i || j) && b === k)
                return h.promise;
            if (h = a.defer(),
            "" == b || "#" == b) {
                var l = [];
                h.resolve(l)
            } else {
                var m = f(b, c || 5);
                i = !0,
                j = !1,
                m.then(function(a) {
                    var c = a.data;
                    if (b != g)
                        return h.reject("Rejecting all previous calls-responses just entertaining lastone");
                    console.log("Hashtag success: " + g),
                    i = !1,
                    j = !0;
                    var f = []
                      , k = new RegExp("(([\\s,()<>:@#.])|^)(" + b + ")","gi");
                    for (var l in c)
                        f.push(e(c[l])),
                        f[l].formattedlabel = f[l].label.replace(k, "$1b1%b1_1$3b2%b2_2"),
                        f[l].id = d.generateHash(f[l].label);
                    h.resolve(f)
                }, function(a) {
                    console.log(a)
                })
            }
            return h.promise
        }
        var h, i, j, k;
        return {
            getHashtagsDropdownItems: g
        }
    }
    ]),
    b.module("convoApp").factory("importCSVContacts", ["Users", "accountInfo", function(a, b) {
        function c(c) {
            for (var d = a.getUsersLowerCaseEmailsMap(), e = b.getAccountDomains(), f = [], g = 0, h = c.length; h > g; ++g)
                if (!d[c[g].email])
                    for (var i = 0, j = e.length; j > i; i++)
                        c[g].email.match(new RegExp(e[i].user_email_domain + "$")) && (c[g].isChecked = !0,
                        f.push(c[g]));
            return f
        }
        var d = {};
        return d.filter = c,
        d
    }
    ]),
    b.module("convoApp").factory("importGoogleContacts", ["accountInfo", "Users", function(b, c) {
        function d() {
            return a.open("/app/contacts/ImportGmailContacts.php", "_blank", "left=400, top=100,width=500, height=500")
        }
        var e = {};
        return e.find = d,
        e
    }
    ]),
    b.module("convoApp").factory("importMacContacts", ["ServerComm", "$q", "config", "nativeCommBridge", "accountInfo", "utils", "alertsService", "Contacts", function(a, b, c, d, e, f, g, h) {
        function i() {
            var a = b.defer();
            if (c.IS_NATIVE) {
                var g = d.importMacContacts(function(b, c) {
                    var d = {};
                    try {
                        var e = JSON.parse(c);
                        "result" === e.type ? (d.status = "success",
                        d.contacts = e.contacts) : d.status = "error"
                    } catch (f) {
                        d = {
                            status: "exception"
                        }
                    } finally {
                        a.resolve({
                            data: d
                        })
                    }
                });
                -1 === g && a.resolve({
                    data: {
                        status: "exception"
                    }
                })
            } else {
                var h = e.getPrimaryAccountDomain().user_email_domain;
                setTimeout(function() {
                    var b = {};
                    b.status = "success",
                    b.contacts = [],
                    b.contacts.push({
                        label: "Test Name 1",
                        email: "testname1" + h,
                        imgUrl: "xyz",
                        id: f.generateHash("testname1@iscrybe.com")
                    }),
                    a.resolve({
                        data: b
                    })
                }, 1)
            }
            return a.promise
        }
        function j(a) {
            if (m = a,
            k("display_import_users_nag")) {
                var b = function() {
                    setTimeout(function() {
                        l("Prompt")
                    }, 5e3)
                }
                ;
                c.IS_MAC ? b() : c.on("clientTypeUpdated", function() {
                    c.IS_MAC && b()
                })
            }
        }
        function k(a) {
            return m[a]
        }
        function l(a) {
            var b = "common/cnvInviteTeammates/templates/cnvFindTeammatesBasicSplash.tpl.html"
              , c = "findContactsSplashCtrl"
              , d = {
                data: function() {
                    return {
                        include_off_domain: !1,
                        origin: a
                    }
                }
            }
              , e = g.customModal(b, c, d);
            e.result.then(function(a) {
                h.initContactsInviteModal({
                    master_list: a.contacts,
                    include_off_domain: !1,
                    invite_via: "Invite_Dialog"
                })
            }, function(a) {
                if (a.hasOwnProperty("promise"))
                    a.promise.then(function(a) {
                        h.initContactsInviteModal({
                            master_list: a.contacts,
                            include_off_domain: !1,
                            invite_via: "Invite_Dialog"
                        })
                    }, function() {
                        alert("There seems to be an error reaching server. Please try again!")
                    });
                else if (a.hasOwnProperty("error"))
                    if ("permission_denied" === a.error) {
                        var b = "common/cnvInviteTeammates/templates/cnvFindContactsPermissionDenied.tpl.html"
                          , c = "findContactsPermissionDenied"
                          , d = "find-contacts-permission-denied"
                          , e = {
                            data: function() {
                                return {}
                            }
                        };
                        g.customModal(b, c, e, d).result.then(function() {}, function() {})
                    } else
                        "no_contacts_found" === a.error ? h.initContactsInviteModal({
                            master_list: [],
                            include_off_domain: !1,
                            invite_via: "Invite_Dialog"
                        }) : "exception" === a.error ? console.error("Exception occurs while reading contacts from native.") : alert("There seems to be an error reaching server. Please try again!")
            })
        }
        _.extend(self, Backbone.Events);
        var m = {};
        return self.initContactsInviteModal = l,
        self.setProperties = j,
        self.getProperties = k,
        self["import"] = i,
        self
    }
    ]),
    b.module("convoApp").factory("itemService", ["ServerComm", "$q", "ItemsConstants", "mixpanelService", "rtcNotificationManager", function(a, b, c, d, e) {
        function g() {
            e.addListener(f.rtc.PubsubEvents.NOTIFICATION_RECEIVE, function(a) {
                var b = a.notification;
                b.type == c.ITEM_PERMISSION_CHANGED && s.trigger("itemPermissionChanged")
            })
        }
        function h(c, d) {
            var e = {
                method: "star",
                app_instance_id: c,
                resource_id: d
            }
              , f = a.post("items", e)
              , g = b.defer();
            return f.success(function(a, b) {
                g.resolve(a),
                s.trigger("itemStarred")
            }),
            g.promise
        }
        function i(c, d) {
            var e = {
                method: "unstar",
                app_instance_id: c,
                resource_id: d
            }
              , f = a.post("items", e)
              , g = b.defer();
            return f.success(function(a, b) {
                g.resolve(a),
                s.trigger("itemUnstarred")
            }),
            g.promise
        }
        function j(e, f) {
            var g = {
                method: "moveToTrash",
                app_instance_id: e,
                resource_id: f
            }
              , h = a.post("items", g)
              , i = b.defer();
            return h.success(function(a, b) {
                i.resolve(a),
                s.trigger("itemMovedToTrash");
                var g = {
                    type: c.ITEM_MOVED_TO_TRASH,
                    itemId: f,
                    data: null 
                };
                q(e, f, g),
                d.trackEvent(d.DELETED_POST)
            }),
            i.promise
        }
        function k(d, e) {
            var f = {
                method: "restore",
                app_instance_id: d,
                resource_id: e
            }
              , g = a.post("items", f)
              , h = b.defer();
            return g.success(function(a, b) {
                h.resolve(a),
                s.trigger("itemRestored");
                var f = {
                    type: c.ITEM_RESTORED,
                    itemId: e,
                    data: null 
                };
                q(d, e, f)
            }),
            h.promise
        }
        function l(d, e) {
            var f = {
                method: "deletePermanently",
                app_instance_id: d,
                resource_id: e
            }
              , g = a.post("items", f)
              , h = b.defer();
            return g.success(function(a, b) {
                h.resolve(a),
                s.trigger("itemDeletedPermanently");
                var f = {
                    type: c.ITEM_DELETED_PERMANENTLY,
                    itemId: e,
                    data: null 
                };
                q(d, e, f)
            }),
            h.promise
        }
        function m(d, e, f, g) {
            var h = {
                method: "updateSharingInfo",
                sharing_info: e
            };
            d ? h.feed_id = d : (h.app_instance_id = f,
            h.resource_id = g);
            var i = a.post("items", h)
              , j = b.defer();
            return i.success(function(a, b) {
                j.resolve(a),
                s.trigger("itemSharingInfoUpdated");
                var d = {
                    type: c.ITEM_SHARING_INFO_UPDATED,
                    itemId: g,
                    data: e
                };
                q(f, g, d)
            }),
            j.promise
        }
        function n(d, e, f, g) {
            var h = {
                method: "updateTags",
                tags: e
            };
            d ? h.feed_id = d : (h.app_instance_id = f,
            h.resource_id = g);
            var i = a.post("items", h)
              , j = b.defer();
            return i.success(function(a, b) {
                j.resolve(a),
                s.trigger("itemTagsUpdated");
                var d = {
                    type: c.ITEM_TAGS_UPDATED,
                    itemId: g,
                    data: e
                };
                q(f, g, d)
            }),
            j.promise
        }
        function o(c, d) {
            var e = {
                method: "mute",
                app_instance_id: c,
                resource_id: d
            }
              , f = a.post("items", e)
              , g = b.defer();
            return f.success(function(a, b) {
                g.resolve(a)
            }),
            g.promise
        }
        function p(c, d) {
            var e = {
                method: "unmute",
                app_instance_id: c,
                resource_id: d
            }
              , f = a.post("items", e)
              , g = b.defer();
            return f.success(function(a, b) {
                g.resolve(a)
            }),
            g.promise
        }
        function q(a, b, c) {
            var d = f.rtc.RTCFactory.getRTCManager(a + "_" + b)
              , e = function() {
                d.removeListener(f.chatsdk.ChatEvents.CONNECTED, e),
                d.sendChange(c),
                f.rtc.RTCFactory.releaseRTCManager(a + "_" + b),
                console.log(">>> sendItemChangeRTCNotification.onConnected: " + JSON.stringify(c))
            }
            ;
            d.isConnected() ? e() : (d.addListener(f.chatsdk.ChatEvents.CONNECTED, e),
            d.connect())
        }
        function r(d, e, f) {
            var g = {
                method: "changePermissions",
                app_instance_id: e,
                resource_id: f,
                permissions: d
            }
              , h = a.post("items", g)
              , i = b.defer();
            return h.success(function(a, b) {
                s.trigger("itemPermissionChanged"),
                i.resolve(a);
                var d = {
                    resource_id: a.data.item_id,
                    changed_by: a.data.item.permissions_changed_by,
                    change_date: a.data.item.permissions_change_date,
                    permissions: a.data.item.permissions
                }
                  , g = {
                    type: c.ITEM_PERMISSION_CHANGED,
                    itemId: f,
                    data: d
                };
                q(e, f, g)
            }),
            i.promise
        }
        var s = {};
        return _.extend(s, Backbone.Events),
        g(),
        s.canEdit = 7,
        s.canComment = 3,
        s.canView = 1,
        s.starPost = h,
        s.unStarPost = i,
        s.moveToTrash = j,
        s.restorePost = k,
        s.updateSharingInfo = m,
        s.updateTags = n,
        s.mutePost = o,
        s.unmutePost = p,
        s.deletePermanently = l,
        s.changePermissions = r,
        s
    }
    ]),
    b.module("convoApp").factory("linksAppDataProvider", ["$q", "Link", "userInfo", "usersGroupsListProvider", "hashtagsProvider", "utils", "FilterTypes", "UserProfileImage", "userImgUrlFilter", "itemService", "User", "Group", function(a, b, c, d, e, f, g, h, i, j, k, l) {
        function m(c) {
            var d = a.defer();
            return b.getLinkDetails(c).success(function(a) {
                d.resolve(n(a.data))
            }),
            d.promise
        }
        function n(a) {
            x.length = 0,
            q(a.users),
            p(a.groups),
            a.sharing_info = a.mappings["mappings_" + a.item_id],
            a.sharedWithListItems = [];
            for (var b in a.sharing_info) {
                var c = u(a.sharing_info[b].published_to);
                c ? a.sharedWithListItems.push(c) : console.error("Sharing Info doesn't exist in linksAppDataProvider")
            }
            return a.item.created_by_object = u(a.item.created_by),
            a.item.draft = +a.item.draft,
            a.item.muted = +a.item.muted,
            a.item.starred = +a.item.starred,
            a.item.logged_in_user_permissions.checkBitAt(3) || (a.itemSharingInfoWithDropdownItems = o(a.item.created_by, a.sharing_info)),
            a
        }
        function o(a, b) {
            var c = []
              , e = s(a);
            c.push(d.createUserListItem(new k(_.extend({
                user_id: a,
                name: e.label,
                email: ""
            }, e))));
            for (var f = 0, h = b.length; h > f; f++) {
                var i = b[f];
                if (i.type === g.USER) {
                    var e = s(i.published_to);
                    c.push(d.createUserListItem(new k(_.extend({
                        user_id: i.published_to,
                        name: e.label,
                        email: ""
                    }, e))))
                } else if (i.type === g.GROUP) {
                    var j = r(i.published_to);
                    c.push(d.createGroupListItem(new l(_.extend({
                        id: i.published_to,
                        title: j.label
                    }, j))))
                }
            }
            return c
        }
        function p(a) {
            w.length = 0;
            for (var b in a) {
                var c = a[b].title;
                w.push({
                    id: a[b].group_id,
                    type: g.GROUP,
                    label: c,
                    accessible: a[b].accessible,
                    access: a[b].access,
                    formattedlabel: c,
                    desclabel: "Group",
                    formatteddesclabel: "Group",
                    grouptype: a[b].type,
                    createdby: a[b].created_by,
                    classes: "group " + a[b].access.toLowerCase(),
                    readonly: !0,
                    imgurl: ""
                })
            }
            x.push(w)
        }
        function q(a) {
            v.length = 0;
            for (var b in a)
                v.push({
                    id: b,
                    type: g.USER,
                    label: a[b].name,
                    accessible: a[b].accessible,
                    formattedlabel: a[b].name,
                    desclabel: a[b].name,
                    formatteddesclabel: a[b].name,
                    profile_image_type: a[b].profile_image_type,
                    profile_image_version: a[b].profile_image_version,
                    classes: "user",
                    readonly: !0,
                    imgurl: i(a[b].user_id, a[b].profile_image_type, a[b].profile_image_version, h.PROFILE_IMAGE_SIZE_32x32)
                });
            x.push(v)
        }
        function r(a) {
            for (var b in w)
                if (w[b].id == a)
                    return w[b];
            return null 
        }
        function s(a) {
            for (var b in v)
                if (v[b].id == a)
                    return v[b];
            return null 
        }
        function t(a) {
            for (var b = 0, c = x.length; c > b; b++)
                for (var d = 0, e = x[b].length; e > d; d++)
                    if (x[b][d].id == a)
                        return x[b][d].label;
            return "Unknown"
        }
        function u(a) {
            for (var b = 0, c = x.length; c > b; b++)
                for (var d = 0, e = x[b].length; e > d; d++)
                    if (x[b][d].id == a)
                        return x[b][d];
            return null 
        }
        var v = []
          , w = []
          , x = [];
        c.getUserId();
        return {
            getLinkData: m,
            renderLinkDataResponse: n,
            getNameById: t,
            getItem: u,
            getGroup: r,
            getUser: s
        }
    }
    ]),
    b.module("convoApp").factory("linksClickHistory", function() {
        function a(a, b) {
            a || (a = ""),
            b || (b = ""),
            d[0] = {
                href: a,
                classList: b
            }
        }
        function b() {
            var a = null ;
            return d.length > 0 && (a = d[0],
            d = []),
            a
        }
        var c = {}
          , d = [];
        return c.push = a,
        c.pop = b,
        c
    }),
    b.module("convoApp").factory("localStore", ["accountInfo", "userInfo", function(a, b) {
        function c(c, d) {
            var e;
            return d || (d = j),
            d == i ? e = l + "." + a.getAccountId() + "." + b.getUserId() : d == h && (e = l),
            e += "." + c
        }
        function d(a) {
            return c(a, h)
        }
        function e(a, b) {
            var d, e = localStorage.getItem(c(a, b));
            try {
                d = JSON.parse(e)
            } catch (f) {
                console.log("localStore.readData: JSON.parse error: " + f.message),
                d = e
            }
            return d
        }
        function f(a, b, d, e) {
            var f = c(a, e);
            d || (d = k);
            var g = {
                version: d,
                data: b
            };
            try {
                return localStorage.setItem(f, JSON.stringify(g)),
                !0
            } catch (h) {
                return !1
            }
        }
        function g(a, b) {
            var d = c(a, b);
            localStorage.removeItem(d)
        }
        var h = 1
          , i = 2
          , j = i
          , k = 1
          , l = "com.convo";
        return {
            KEY_TYPE_APP: h,
            KEY_TYPE_USER: i,
            readData: e,
            writeData: f,
            clearData: g,
            getAppPrefixedKey: d
        }
    }
    ]),
    b.module("convoApp").factory("logger", ["ServerComm", "$window", "$exceptionDispatcher", function(a, b, d) {
        function e(a, c) {
            b.console[s[c]](a)
        }
        function f(a, b, d) {
            if (e(a, b),
            b >= t || d || u) {
                var f = " " + a;
                k !== c && (f = " - TabId: " + k + ": " + f),
                v.log(f, b, r[b])
            }
        }
        function g(a) {
            e(a, m);
            var b = " " + a;
            k !== c && (b = " - TabId: " + k + ": " + b),
            v.log(b, q, r[q])
        }
        function h(a) {
            return a instanceof Error && (a.stack ? a = a.message && -1 === a.stack.indexOf(a.message) ? "Error: " + a.message + "\n" + a.stack : a.stack : a.sourceURL && (a = a.message + "\n" + a.sourceURL + ":" + a.line)),
            a
        }
        function i(a, b, c, d, e) {
            var f;
            return f = e instanceof Error ? h(e) : a + "\n" + b + ":" + c + ":" + d
        }
        function j(a, b) {
            var c = h(a);
            b && (c += "\nCause: " + b),
            f(c, q)
        }
        var k, l = {}, m = 0, n = 1, o = 2, p = 3, q = 4, r = {
            0: "LOG",
            1: "DEBUG",
            2: "INFO",
            3: "WARN",
            4: "ERROR"
        }, s = {
            0: "log",
            1: "debug",
            2: "info",
            3: "warn",
            4: "error"
        }, t = 4, u = !1, v = {
            _buffer: [],
            _bufferSize: 200,
            _flushInterval: 6e3,
            _flushRetryInterval: 3e3,
            _flushTimeoutID: -1,
            _logsPostPending: !1,
            _pendingLogsPostCount: 0,
            _initialized: !1,
            log: function(a, b, c) {
                var d = v;
                d._initialized || (d._flushTimeoutID = setTimeout(d._flush, d._flushInterval),
                d._initialized = !0),
                d._buffer.push({
                    message: a,
                    level: c,
                    client_log_time: Date.now()
                })
            },
            flush: function() {
                var a = v;
                a._initialized && !a._logsPostPending && 0 !== a._buffer.length && (clearTimeout(a._flushTimeoutID),
                a._flush())
            },
            _flush: function() {
                var b = v;
                if (0 !== b._buffer.length) {
                    b._buffer.length > b._bufferSize && b._buffer.splice(0, b._buffer.length - b._bufferSize),
                    b._pendingLogsPostCount = b._buffer.length,
                    b._logsPostPending = !0;
                    var d = {
                        appType: "WEB_APP",
                        logs: b._buffer
                    };
                    a.postr("log", d, b._onLogsPostSuccess, b._onLogsPostError, c, !0)
                }
            },
            _onLogsPostSuccess: function() {
                var a = v;
                a._logsPostPending = !1,
                a._buffer.splice(0, a._pendingLogsPostCount),
                a._buffer.length > 0 ? a._flushTimeoutID = setTimeout(a._flush, a._flushInterval) : a._initialized = !1
            },
            _onLogsPostError: function() {
                var a = v;
                a._logsPostPending = !1,
                a._flushTimeoutID = setTimeout(a._flush, a._flushRetryInterval)
            }
        }, w = b.onerror;
        return b.onerror = function(a, b, c, d, e) {
            w && w.apply(this, arguments),
            f(i(a, b, c, d, e), q)
        }
        ,
        d.on("exception", j),
        l.log = function(a, b) {
            f(a, m, b)
        }
        ,
        l.debug = function(a) {
            f(a, n)
        }
        ,
        l.info = function(a) {
            f(a, o)
        }
        ,
        l.warn = function(a) {
            f(a, p)
        }
        ,
        l.error = function(a) {
            f(a, q)
        }
        ,
        l.logLocally_errorOnServer = g,
        l.flush = v.flush,
        l.sendAllLogsToServer = function() {
            u = !0
        }
        ,
        l.setClientInstanceId = function(a) {
            k = a
        }
        ,
        l
    }
    ]).factory("$exceptionHandler", ["$exceptionDispatcher", function(a) {
        return function(b, c) {
            a.trigger("exception", b, c)
        }
    }
    ]).factory("$exceptionDispatcher", [function() {
        var a = {};
        return _.extend(a, Backbone.Events),
        a
    }
    ]),
    b.module("convoApp").factory("mentionsHistory", ["localStore", function(a) {
        function b() {
            if (!j) {
                var b = a.readData(g);
                f = b && b.version == h ? b.data : [],
                j = !0
            }
        }
        function c() {
            a.writeData(g, f, h)
        }
        function d(a, d) {
            b();
            for (var e = !1, g = 0; g < f.length; g++)
                if (f[g].type == a && f[g].id == d) {
                    e = !0;
                    break
                }
            if (e) {
                if (g > 0) {
                    var h = f[g];
                    f.splice(g, 1),
                    f.unshift(h),
                    c()
                }
            } else {
                var j = f.unshift({
                    type: a,
                    id: d
                });
                j > i && (f = f.slice(0, i)),
                c()
            }
        }
        function e() {
            return b(),
            f
        }
        var f, g = "mentionsHistory", h = 1, i = 5, j = !1;
        return {
            addItemToHistory: d,
            getHistory: e
        }
    }
    ]),
    b.module("convoApp").factory("mixpanelService", ["ServerComm", function(a) {
        function b(a) {
            j.push(a)
        }
        function c(a) {
            j.splice(0, a)
        }
        function d() {
            clearTimeout(h),
            h = null 
        }
        function e() {
            !h && j.length && (h = setTimeout(function() {
                g(null , null , !0)
            }, i))
        }
        function f(a, c, d) {
            if (c = c || {},
            d)
                g(a, c);
            else {
                var f = {
                    action: "track",
                    params: {
                        event_name: a,
                        event_properties: c
                    }
                };
                b(f),
                e()
            }
        }
        function g(b, f, g) {
            var h = null 
              , i = 0;
            if (g && j.length) {
                var k = j.slice();
                i = k.length;
                var h = {
                    action: "batch",
                    tasks: k
                };
                console.log("mixpanel batch tracking: size: " + i + ", items:", k)
            } else {
                var h = {
                    action: "track",
                    event_name: b,
                    event_properties: f
                };
                console.log("mixpanel tracking: event: " + b + ", properties:", f)
            }
            g && d(),
            a.postr("mixpanel", h, function() {
                g && (c(i),
                e())
            }, function() {
                g && e()
            })
        }
        var h, i = 5e3, j = [], k = {};
        return k.CLICK_ON_INVITE_FROM_NEWSFEED = "Click On Invite From Newsfeed",
        k.OPEN_EXTERNAL_LINK_IN_CHAT = "Open External Link In Chat",
        k.OPEN_AUTO_GEN_WELCOME_FILE = "Open Auto Gen Welcome File",
        k.USER_FILTERED_BY_POST_TYPE = "User Filtered By Post Type",
        k.CLICK_DONE_IN_POST_VIEWER = "Click Done In Post Viewer",
        k.CLICK_NAVIGATION_CENTER = "Click Navigation Center",
        k.OPEN_CONVO_LINK_IN_CHAT = "Open Convo Link In Chat",
        k.SCROLLED_IMAGE_GALLERY = "Scrolled Image Gallery",
        k.CLICK_MARK_ALL_AS_READ = "Click 'Mark All As Read'",
        k.NAVIGATED_ATTACHMENTS = "Navigated Attachments",
        k.USER_FILTERED_SEARCH = "User Filtered Search",
        k.SEARCH_FOR_TEAMMATES = "Search For Teammates",
        k.ANNOTATION_PLAYBACK = "Annotation Playback",
        k.RETRY_A_FAILED_CHAT = "Retry A Failed Chat",
        k.CLICK_MINIMIZE_POST = "Click Minimize Post",
        k.ADDED_TITLE_TO_POST = "Added Title To Post",
        k.CLICK_IN_LEFT_MENU = "Click In Left Menu",
        k.DELETED_ATTACHMENT = "Deleted Attachment",
        k.ADDED_TAGS_TO_POST = "Added Tags To Post",
        k.CHATS_SEND_MESSAGE = "Chats Send Message",
        k.CLICK_BACK_TO_POST = "Click Back To Post",
        k.CLICK_DOWNLOAD_ALL = "Click Download All",
        k.BROWSER_TABS_OPEN = "Browser Tabs Open",
        k.CLICK_EXPAND_POST = "Click Expand Post",
        k.SEARCH_FOR_CHATS = "Search For Chats",
        k.CLICK_HIDE_PANEL = "Click Hide Panel",
        k.OPEN_CHATS_LIST = "Open Chats List",
        k.CLICK_EDIT_POST = "Click Edit Post",
        k.TAP_ON_TEAMMATE = "Tap On Teammate",
        k.EXPAND_COMMENTS = "Expand Comments",
        k.HIDE_COMMENTS = "Hide Comments",
        k.STARRED_POST = "Starred Post",
        k.DELETED_POST = "Deleted Post",
        k.VIEW_THREAD = "View Thread",
        k.TAP_ON_CHAT = "Tap On Chat",
        k.OPENED_POST = "Opened Post",
        k.ANNOTATED = "Annotated",
        k.CLICK_IMPORT_CONTACTS = "Click Import Contacts",
        k.IMPORT_CONTACTS = "Import Contacts",
        k.INVITE_SENT = "Invite Sent",
        k.DISMISS_IMPORT_PROMPT = "Dismiss Import Prompt",
        k.COPY_INVITE_LINK = "Copy invite link",
        k.INVITE_LINK_CLICKS = "Invite link clicks",
        k.TRY_ANOTHER_CLICKED = 'Click "Try another" On Welcome Gif Post',
        k.Edit_Welcome_Gif_Post = "Edit Welcome Gif Post",
        k.Share_Welcome_Gif_Post = "Share Welcome Gif Post",
        k.Click_Add_Profile_Photo_Tooltip = "Click Add Profile Photo Tooltip",
        k.Clicked_Download_Dekstop_App = "Clicked Download Dekstop App",
        k.Clicked_Download_iOS_App = "Clicked Download iOS App",
        k.Clicked_Download_Android_App = "Clicked Download Android App",
        k.Edited_Recipients_On_First_Compose_Click = "Edited Recipients On First Compose Click",
        k.Upload_Profile_Pic = "Upload Profile Pic",
        k.CLICK_GIF_BUTTON = "Click GIF Button",
        k.SEND_GIF = "Send GIF",
        k.SEARCH_FOR_GIF = "Search For GIF",
        k.CLICK_EMOJI_BUTTON = "Click Emoji Button",
        k.SEND_EMOJI = "Send Emoji",
        k.SEARCH_EMOJI = "Search Emoji",
        k.Enter_Emoji_Shortcut = "Enter Emoji Shortcut",
        k.GETTING_STARTED_STEP_LAUNCH = "Getting Started Step Launch",
        k.X_OUT_GETTING_STARTED = "X Out Getting Started",
        k.ADD_INTEGRATION = "Add Integration",
        k.SENT_VIDEO_CALL = "Sent Video Call",
        k.CLICKED_VIDEO_CALL = "Clicked Video Call",
        k.SIGN_OUT_CLICK = "Sign Out Click",
        k.SWITCHED_TO_COMPACT_VIEW = "Switched To Compact View",
        k.SWITCHED_TO_DEFAULT_VIEW = "Switched To Default View",
        k.EXITS_AD_IN_BROWSER = "Exits Ad In Browser",
        k.CLICK_DOWNLOAD_APP = "Click Download App",
        k.CLICKED_PLAY = "Clicked Play",
        k.CLICKED_PAUSE = "Clicked Pause",
        k.WATCHED_TO_END = "Watched To End",
        k.DOWNLOAD_VIDEOS = "Downloaded Videos",
        k.WATCHED_1080 = "Watched 1080p (Full HD Video)",
        k.WATCHED_720 = "Watched 720p (HD Video)",
        k.WATCHED_480 = "Watched 480p (SD Video)",
        k.CLICK_ADD_INTEGRATION = "Click Add Integration",
        k.ADDED_INTEGRATION = "Added Integration",
        k.USER_REMOVED_INTEGRATION = "User Removed Integration",
        k.CLICK_SEND = "Click Send",
        k.trackEvent = f,
        k
    }
    ]),
    b.module("convoApp").factory("nativeCommBridge", ["$window", "AppLinks", "config", "$rootScope", "chatManager", "InAppNotifications", "ServerComm", "appTabs", "mixpanelService", "appStateInfo", "nativeCommBridgeCDPreventer", function(b, c, d, e, g, h, i, j, k, l, m) {
        function n(a, b) {
            console.log("NATIVE_COMM_BRIDGE:: calling func: '" + a + "' with args: " + JSON.stringify(b));
            var c = null ;
            if ("object" == typeof convo)
                console.log("NATIVE_COMM_BRIDGE:: convo laoded!"),
                c = convo;
            else {
                if ("object" != typeof brackets)
                    return console.log("NATIVE_COMM_BRIDGE:: convo or brackets not laoded yet!"),
                    -1;
                console.log("NATIVE_COMM_BRIDGE:: brackets laoded!"),
                c = brackets.app
            }
            try {
                return c[a](b, p)
            } catch (d) {
                return console.log("NATIVE_COMM_BRIDGE:: brackets laoded, function not found!"),
                -1
            }
        }
        function o(a) {
            console.log("NATIVE_COMM_BRIDGE:: calling func: '" + a + "'");
            var b = null ;
            if ("object" == typeof convo)
                console.log("NATIVE_COMM_BRIDGE:: convo laoded!"),
                b = convo;
            else {
                if ("object" != typeof brackets)
                    return console.log("NATIVE_COMM_BRIDGE:: convo or brackets not laoded yet!"),
                    -1;
                console.log("NATIVE_COMM_BRIDGE:: brackets laoded!"),
                b = brackets.app
            }
            try {
                return b[a]()
            } catch (c) {
                return console.log("NATIVE_COMM_BRIDGE:: brackets laoded, function not found!"),
                -1
            }
        }
        function p(a) {
            console.log(a)
        }
        function q(a, b, c) {
            b = b || "",
            c = c || 512;
            for (var d = atob(a), e = [], f = 0; f < d.length; f += c) {
                for (var g = d.slice(f, f + c), h = new Array(g.length), i = 0; i < g.length; i++)
                    h[i] = g.charCodeAt(i);
                var j = new Uint8Array(h);
                e.push(j)
            }
            var k = new Blob(e,{
                type: b
            });
            return k
        }
        function r() {
            var a = h.getSharedNotificationsContext().unreadNotificationsCount || 0
              , b = g.getUnreadChatsCount() || 0;
            d.IS_NATIVE && s.updateNotificationsCount(parseInt(a) + parseInt(b)),
            console.log("unreadNotificationsValue:" + a + ", unreadChatsValue:" + b)
        }
        var s = {};
        _.extend(s, Backbone.Events),
        s.initialized = !1,
        s.initializeApp = function() {
            return "object" != typeof convo && "object" != typeof brackets || d.IS_MENULET || (d.IS_NATIVE = !0,
            d.setClientType()),
            d.IS_NATIVE && (l.on("appSwitchedToCompactView", s.switchedToCompactView),
            l.on("appSwitchedToNormalView", s.switchedToFullView)),
            n("initializeApp")
        }
        ,
        s.deliverNotification = function(a) {
            return n("deliverNotification", a)
        }
        ,
        s.getImageFromClipboard = function(a) {
            return n("getImageFromClipboard", a)
        }
        ,
        s.isNativeAppActive = function() {
            return n("isAppActive")
        }
        ,
        s.signIn = function(a) {
            return n("signIn", a)
        }
        ,
        s.updateHeight = function(a) {
            return n("updateHeight", a)
        }
        ,
        s.setGeneralSettings = function(a) {
            return n("setGeneralSettings", a)
        }
        ,
        s.loadApp = function(a) {
            return n("loadApp")
        }
        ,
        s.logoutApp = function() {
            return n("logout")
        }
        ,
        s.locationChanged = function(a) {
            return n("locationChanged", a)
        }
        ,
        s.postShared = function() {
            return n("postShared")
        }
        ,
        s.updateNotificationsCount = function(a) {
            return n("updateNotificationsCount", a)
        }
        ,
        s.saveDataInClipboard = function(a) {
            return n("saveDataInClipboard", a)
        }
        ,
        s.refreshMenulet = function(a) {
            return n("refreshMenulet", a)
        }
        ,
        s.overlayStatus = function(a) {
            return n("overlayStatus", a)
        }
        ,
        s.terminateApp = function(a) {
            return n("terminateApp", a)
        }
        ,
        s.noteAppActivated = function(a) {
            return n("noteAppActivated", a)
        }
        ,
        s.importMacContacts = function(a) {
            return n("importMacContacts", a)
        }
        ,
        s.whiteListUrls = function(a) {
            return n("whiteListUrls", a)
        }
        ,
        s.copyToClipboard = function(a) {
            return n("copyToClipboard", a)
        }
        ,
        s.newClick = function(a) {
            if (0 == a)
                d = {
                    is_home: !0
                },
                n("newClick", JSON.stringify(d));
            else {
                var b = c.parseUrl(a)
                  , d = {
                    url: a
                };
                if ("object" != typeof b || b.type !== c.ACTION_LINK && b.type !== c.FILTER_LINK) {
                    if (b && b.type === c.RESOURCE_LINK) {
                        d.is_home = !1,
                        d.title = b.title;
                        var e = b.resourcePath.appInstance.uid
                          , f = b.type
                          , g = b.resourcePath.hierarchy[0].uid;
                        d.id = e + "_" + f + "_" + g,
                        n("newClick", JSON.stringify(d))
                    }
                } else
                    d.is_home = !0,
                    d.title = b.title,
                    n("newClick", JSON.stringify(d))
            }
        }
        ,
        s.switchedToCompactView = function() {
            n("switchedToCompactView")
        }
        ,
        s.switchedToFullView = function() {
            n("switchedToFullView")
        }
        ,
        s.isNativeSystemActive = function() {
            return n("isSystemActive")
        }
        ,
        s.openInDefaultBrowser = function(a) {
            n("openInDefaultBrowser", a)
        }
        ,
        m.setNativeCommBridgeJSToNativeCallbackWithoutArgs(o),
        m.setNativeCommBridgeJSToNativeCallback(n),
        m.setNativeSystemActiveCallback("isSystemActive"),
        s.initialize = function(a) {
            switch (console.log("initialize called!"),
            a) {
            case 1:
                d.IS_MENULET = 1,
                d.setClientType();
                break;
            case 2:
                d.IS_MAC = !0,
                d.IS_NATIVE = 1,
                d.setClientType();
                break;
            case 3:
                d.IS_WINDOWS = !0,
                d.IS_NATIVE = !0,
                d.setClientType();
                break;
            case 4:
                d.IS_MENULET = 2,
                d.setClientType();
                break;
            case 5:
                d.IS_MAC = !0,
                d.IS_NATIVE = 2,
                d.setClientType()
            }
            this.initialized = !0,
            nativeCommBridge.signIn(JSON.stringify(e.login_data)),
            nativeCommBridge.whiteListUrls(d.WHITELIST_URLS_REGEX)
        }
        ,
        s.distruct = function(a) {
            d.IS_NATIVE = !1,
            d.IS_MENULET = !1
        }
        ,
        s.logout = function(a) {
            s.trigger("logout", a)
        }
        ,
        s.nativeAppClosing = function(b) {
            var c = new Event("unload");
            a.dispatchEvent(c),
            setTimeout(function() {
                s.terminateApp()
            }, 500)
        }
        ,
        s.onDesktopNotificationClick = function(a) {
            s.trigger("onDesktopNotificationClick", a)
        }
        ,
        s.onDesktopNotificationRemove = function(a) {
            s.trigger("onDesktopNotificationClose", a)
        }
        ,
        s.onDummyTextAreaClick = function(a) {
            s.trigger("onDummyTextAreaClick", a)
        }
        ,
        s.forcePoll = function(a) {
            e.$broadcast("pollFeedRequest", !1, "FORCE: NATIVE"),
            s.trigger("newPostShared")
        }
        ,
        s.newPostClick = function(a) {
            s.trigger("newPostClick", a)
        }
        ,
        s.shareClick = function(a) {
            s.trigger("shareClick", a)
        }
        ,
        s.pasteFromClipboard = function(a) {
            s.trigger("pasteFromClipboard", a)
        }
        ,
        s.logoutMenulet = function(a) {
            s.trigger("logoutMenulet", a)
        }
        ,
        s.updateGeneralSettings = function(a) {
            s.trigger("updateGeneralSettings", a)
        }
        ,
        s.focusMenulet = function(a) {
            s.trigger("focusMenulet", a)
        }
        ,
        s.getState = function(a) {
            console.log("menulet: " + d.IS_MENULET),
            console.log("native: " + d.IS_NATIVE)
        }
        ,
        s.downloadCurrentFile = function(a) {
            s.trigger("downloadCurrentFile", a)
        }
        ,
        s.isAppActive = function(b) {
            1 == b ? (ifvisible.focus(),
            a.focus()) : 0 == b && (ifvisible.blur(),
            a.blur())
        }
        ,
        s.systemActive = function() {
            s.trigger("nativeSystemActivated"),
            m.trigger("nativeSystemActivated")
        }
        ,
        s.systemIdle = function() {
            s.trigger("nativeSystemIdled"),
            m.trigger("nativeSystemIdled")
        }
        ,
        s.getCompactAppWidthWithState = function() {
            var b = l.getScaledCompactWidth()
              , c = l.isAppInCompactView()
              , d = JSON.stringify({
                compactWidth: b,
                isCompactState: c
            })
              , e = {
                windowOuterWidth: a.outerWidth,
                windowInnerWidth: a.innerWidth,
                compactWidth: b,
                isCompactView: c,
                responseJson: d
            };
            return n("compactAppWidthWithStateCallback", d),
            e
        }
        ,
        s.switchedToCompactSize = function() {
            k.trackEvent(k.SWITCHED_TO_COMPACT_VIEW),
            s.trigger("nativeCommBridge::switchedToCompactSize")
        }
        ,
        s.switchedToDefaultSize = function() {
            k.trackEvent(k.SWITCHED_TO_DEFAULT_VIEW),
            s.trigger("nativeCommBridge::switchedToDefaultSize")
        }
        ,
        s.getImageFromClipboardCallback = function(a, b) {
            var c = q(b, "image/png");
            $(a).trigger("macPaste", c)
        }
        ,
        h.on("unreadNotificationsCountChanged", r),
        g.addListener(f.chatsdk.ChatEvents.CHATS_UNREAD_COUNT_CHANGED, r);
        var t = !1
          , u = !1;
        return i.on("firstFeedFetchCallResolved", function() {
            u = !0,
            1 == t && j.dispatchTabsEvent2("mainAppFeedFetched")
        }),
        j.addTabsEventListener2("isAppFeedFetched", function() {
            t = !0,
            1 == u && j.dispatchTabsEvent2("mainAppFeedFetched")
        }),
        b.nativeCommBridge = s,
        s
    }
    ]),
    b.module("convoApp").factory("nativeCommBridgeCDPreventer", [function() {
        function a(a) {
            f.nativeCommBridgeJSToNativeCallbackHandler = a
        }
        function b(a) {
            f.nativeCommBridgeJSToNativeCallbackHandlerWithoutArgs = a
        }
        function c(a) {
            f.isNativeSystemActiveCallback = a
        }
        function d() {
            return "function" == typeof f.nativeCommBridgeJSToNativeCallbackHandlerWithoutArgs && "string" == typeof f.isNativeSystemActiveCallback ? f.nativeCommBridgeJSToNativeCallbackHandlerWithoutArgs(f.isNativeSystemActiveCallback) : void 0
        }
        var e = {};
        _.extend(e, Backbone.Events);
        var f = {};
        return e.setNativeCommBridgeJSToNativeCallback = a,
        e.setNativeCommBridgeJSToNativeCallbackWithoutArgs = b,
        e.setNativeSystemActiveCallback = c,
        e.isNativeSystemActive = d,
        e
    }
    ]),
    b.module("convoApp").factory("nativeHeightUpdate", ["nativeCommBridge", function(a) {
        function b() {
            return $("#mainApp").height()
        }
        function c() {
            var c = b();
            c != e && (e = c,
            a.updateHeight(c),
            console.log("MutationObserver Height Updated To: " + c))
        }
        var d = {}
          , e = 0;
        return _.extend(d, Backbone.Events),
        d.updateHeight = function(c, d, e) {
            var f = 0
              , g = setInterval(function() {
                f >= 2 && clearTimeout(g),
                "number" == typeof e ? newHeight = e : newHeight = b(),
                "number" == typeof d && (newHeight += d),
                console.log(c + " : " + d + " : " + e + " : " + newHeight),
                a.updateHeight(newHeight),
                f++
            }, 50)
        }
        ,
        d.initilizeObserver = function() {
            var a = new MutationObserver(c);
            a.observe(document.body, {
                childList: !0,
                characterData: !0,
                attributes: !0,
                subtree: !0
            })
        }
        ,
        d
    }
    ]),
    b.module("convoApp").factory("networkImageService", ["ServerComm", "$q", "accountInfo", function(a, b, c) {
        function d() {
            var c = {
                method: "generateRequestUUID"
            }
              , d = a.post("accounts/logo", c)
              , e = b.defer();
            return d.success(function(a, b) {
                e.resolve(a)
            }),
            e.promise
        }
        function e(c, d, e, f, g) {
            var h = {
                method: "submitThumbnailGenerationRequestForNetworkLogoImage",
                request_id: c,
                file_name_with_extension: d,
                file_size: e,
                crop_scale: f,
                crop_selection_rect: g
            }
              , i = a.post("accounts/logo", h)
              , j = b.defer();
            return i.success(function(a, b) {
                j.resolve(a)
            }),
            j.promise
        }
        function f(c) {
            var d = {
                method: "getThumbnailGenerationRequestStatus",
                request_id: c
            }
              , e = a.post("accounts/logo", d)
              , f = b.defer();
            return e.success(function(a, b) {
                f.resolve(a)
            }),
            f.promise
        }
        function g(d, e, f) {
            var g = {
                method: "updateNetworkLogoImageIfUploaded",
                request_id: d,
                user_id: e,
                account_id: f
            }
              , h = a.post("accounts/logo", g)
              , i = b.defer();
            return h.success(function(a, b) {
                c.updateNetworkImageType(a.data.account_image_type),
                c.updateNetworkImageVersion(a.data.account_image_version),
                i.resolve(a)
            }),
            i.promise
        }
        var h = {};
        return h.generateRequestUUID = d,
        h.generateLogoThumbnails = e,
        h.getThumbnailGenerationRequestStatus = f,
        h.updateNetworkLogoImageIfUploaded = g,
        h
    }
    ]),
    b.module("convoApp").factory("notesAppDataProvider", ["$q", "Note", "config", "accountInfo", "userInfo", "usersGroupsListProvider", "hashtagsProvider", "utils", "FilterTypes", "UserProfileImage", "userImgUrlFilter", "$filter", "itemService", "User", "Group", function(a, b, d, e, f, g, h, i, j, k, l, m, n, o, p) {
        function q(c) {
            var d = a.defer();
            return b.getNote(c).then(function(a) {
                d.resolve(r(a.data.data))
            }),
            d.promise
        }
        function r(a) {
            function b(b) {
                A.length = 0;
                for (var c in b) {
                    var d = b[c].title
                      , e = "profile" == b[c].type.toLowerCase() ? "Followers" : i.getLabelShortVersion(d)
                      , f = "group ";
                    "public" == b[c].access.toLowerCase() ? f += "Icon1_PublicChannel-01-lightgray" : "private" == b[c].access.toLowerCase() || "profile" == b[c].access.toLowerCase() ? f += "privateGroup_icon-lightgray" : "secret" == b[c].access.toLowerCase() && (f += "privateGroup_icon-lightgray"),
                    A.push({
                        id: b[c].group_id,
                        type: j.GROUP,
                        label: d,
                        shortHandLabel: e,
                        accessible: b[c].accessible,
                        access: b[c].access,
                        formattedlabel: d,
                        desclabel: "Group",
                        formatteddesclabel: "Group",
                        grouptype: b[c].type,
                        createdby: b[c].created_by,
                        classes: f,
                        readonly: 0 === parseInt(a.item.draft),
                        imgurl: ""
                    })
                }
                B.push(A)
            }
            function d(b) {
                z.length = 0;
                for (var c in b)
                    z.push({
                        id: c,
                        type: j.USER,
                        label: b[c].name,
                        shortHandLabel: i.getLabelShortVersion(b[c].name),
                        accessible: b[c].accessible,
                        formattedlabel: b[c].name,
                        desclabel: b[c].name,
                        formatteddesclabel: b[c].name,
                        profile_image_type: b[c].profile_image_type,
                        profile_image_version: b[c].profile_image_version,
                        classes: "user",
                        readonly: 0 === parseInt(a.item.draft),
                        imgurl: l(b[c].user_id, b[c].profile_image_type, b[c].profile_image_version, k.PROFILE_IMAGE_SIZE_32x32)
                    });
                B.push(z)
            }
            B.length = 0,
            d(a.users),
            b(a.groups),
            a.sharing_info = a.mappings["mappings_" + a.item_id],
            a.sharedWithListItems = [];
            for (var e in a.sharing_info) {
                var f = y(a.sharing_info[e].published_to);
                f ? a.sharedWithListItems.push(f) : console.error("Sharing Info doesn't exist in notesAppDataProvider")
            }
            return a.item.tagList = t(a.item.tags),
            a.item.deleted = +a.item.deleted,
            a.item.muted = +a.item.muted,
            a.item.starred = +a.item.starred,
            a.item.is_system_message = +a.item.is_system_message,
            a.note_files = a.files["files_" + a.item.item_id] || [],
            a.item.logged_in_user_permissions.checkBitAt(3) || (a.itemSharingInfoWithDropdownItems = s(a.item.created_by, a.sharing_info)),
            a.item.hasTitle = !1,
            (a.item.show_title === c && -1 !== a.item.note_type.indexOf("IMAGES") || 1 == a.item.show_title) && (a.item.hasTitle = !0),
            a.origionalTitle = a.item.title,
            a.item.draft = +a.item.draft,
            a.item.created_by_object = y(a.item.created_by),
            a.item.last_edit_by_object = y(a.item.last_edit_by),
            a
        }
        function s(a, b) {
            var c = []
              , d = v(a);
            c.push(g.createUserListItem(new o(_.extend({
                user_id: a,
                name: d.label,
                email: ""
            }, d))));
            for (var e = 0, f = b.length; f > e; e++) {
                var h = b[e];
                if (h.type === j.USER) {
                    var d = v(h.published_to);
                    c.push(g.createUserListItem(new o(_.extend({
                        user_id: h.published_to,
                        name: d.label,
                        email: ""
                    }, d))))
                } else if (h.type === j.GROUP) {
                    var i = u(h.published_to);
                    c.push(g.createGroupListItem(new p(_.extend({
                        id: h.published_to,
                        title: i.label
                    }, i))))
                }
            }
            return c
        }
        function t(a) {
            for (var b = a ? a.split(",") : [], c = [], d = 0; d < b.length; d++)
                "" != b[d] && c.push({
                    id: i.generateHash(b[d]),
                    label: b[d],
                    locked: !1
                });
            return c
        }
        function u(a) {
            for (var b in A)
                if (A[b].id == a)
                    return A[b];
            return null 
        }
        function v(a) {
            for (var b in z)
                if (z[b].id == a)
                    return z[b];
            return null 
        }
        function w(a) {
            for (var b = 0, c = B.length; c > b; b++)
                for (var d = 0, e = B[b].length; e > d; d++)
                    if (B[b][d].id == a)
                        return B[b][d].label;
            return "Unknown"
        }
        function x(a) {
            for (var b = 0, c = B.length; c > b; b++)
                for (var d = 0, e = B[b].length; e > d; d++)
                    if (B[b][d].id == a)
                        return B[b][d].shortHandLabel;
            return "Unknown"
        }
        function y(a) {
            for (var b = 0, c = B.length; c > b; b++)
                for (var d = 0, e = B[b].length; e > d; d++)
                    if (B[b][d].id == a)
                        return B[b][d];
            return null 
        }
        var z = []
          , A = []
          , B = [];
        f.getUserId();
        return {
            getNoteData: q,
            renderNoteDataResponse: r,
            getNameById: w,
            getShortNameById: x,
            getItem: y,
            getGroup: u,
            getUser: v,
            renderTagsData: t
        }
    }
    ]),
    b.module("convoApp").factory("o365Service", ["ServerComm", "$q", "onboardingService", function(a, b, c) {
        var d = {
            createO365Integration: function(d, e, f, g, h, i, j, k, l, m) {
                var n = b.defer()
                  , o = {
                    account_id: d,
                    creator_id: e,
                    display_name: f,
                    action_type: g,
                    access_level: h,
                    recipients: i,
                    profile_image_info: j,
                    integration_data: k,
                    token_id: l,
                    integration_type: m
                };
                return a.post("integrations/o365", o).success(function(a, b) {
                    n.resolve(a),
                    c.markIntegrationsAsDone("O365")
                }).error(function(a, b) {
                    n.resolve(b)
                }),
                n.promise
            },
            getMailFolderList: function(c) {
                var d = b.defer()
                  , e = {
                    op: "folder_list",
                    token_id: c,
                    folder_id: "root"
                };
                return a.get("integrations/o365?op=folder_list&token_id=" + c + "&folder_id=root", e).success(function(a, b) {
                    d.resolve(a)
                }),
                d.promise
            },
            getUserInfo: function(c) {
                var d = b.defer()
                  , e = {
                    op: "user_info",
                    user_id: c,
                    token_id: "1111"
                };
                return a.get("integrations/o365?op=user_info&user_id=" + c + "&token_id=1111", e).success(function(a, b) {
                    d.resolve(a)
                }),
                d.promise
            },
            deleteAuthorization: function(c) {
                var d = (b.defer(),
                {
                    token_id: c,
                    target: "authorization"
                });
                return a.deletex("integrations/o365", d)
            },
            deleteIntegration: function(c, d) {
                var e = (b.defer(),
                {
                    webhook_id: c,
                    target: "webhook",
                    token_id: "1111",
                    integration_type: d
                });
                return a.deletex("integrations/o365", e)
            },
            getIntegrationDetails: function(c, d) {
                var e = b.defer()
                  , f = {
                    webhook_id: c,
                    op: "integration_details",
                    integration_type: d,
                    token_id: "1111"
                };
                return a.get("integrations/o365?webhook_id=" + c + "&token_id=1111&op=integration_details&integration_type=" + d, f).success(function(a, b) {
                    e.resolve(a)
                }),
                e.promise
            },
            updateIntegration: function(c, d, e, f, g, h, i, j) {
                var k = b.defer()
                  , l = {
                    webhook_id: c,
                    display_name: d,
                    action_type: e,
                    recipients: f,
                    profile_image_info: g,
                    integration_data: h,
                    token_id: i,
                    integration_type: j
                };
                return a.put("integrations/o365", l).success(function(a, b) {
                    k.resolve(a)
                }).error(function(a, b) {
                    k.resolve(b)
                }),
                k.promise
            },
            getCalendarsList: function(c) {
                var d = b.defer()
                  , e = {
                    op: "calendars_list",
                    token_id: c
                };
                return a.get("integrations/o365?op=calendars_list&token_id=" + c, e).success(function(a, b) {
                    d.resolve(a)
                }),
                d.promise
            },
            getDriveFoldersList: function(c, d) {
                var e = b.defer()
                  , f = {
                    op: "drive_folders",
                    token_id: c,
                    folder: d
                };
                return a.get("integrations/o365?op=drive_folders&token_id=" + c + "&folder=" + d, f).success(function(a, b) {
                    e.resolve(a)
                }),
                e.promise
            }
        };
        return d
    }
    ]),
    b.module("convoApp").factory("preloadService", ["config", function(a) {
        function b() {
            var a = document.createElement("div");
            a.style.position = "absolute",
            a.style.top = "-99999",
            a.style.fontFamily = "symbola",
            a.innerHTML = "test",
            document.body.appendChild(a),
            setTimeout(function() {
                document.body.removeChild(a)
            }, 0)
        }
        function c() {
            var a = e + "assets/img/";
            f = [{
                src: "cursors/2xarrowwhite.png"
            }, {
                src: "cursors/2xsquarewhite.png"
            }, {
                src: "cursors/2xmarkerwhite.png"
            }, {
                src: "cursors/2xmarkerwhite.cur"
            }, {
                src: "cursors/2xarrowwhite.cur"
            }, {
                src: "cursors/2xsquarewhite.cur"
            }, {
                src: "common/preloader.gif"
            }, {
                src: "download-modal/@2x_iPhone-mock.png"
            }, {
                src: "download-modal/@2x_laptop.png"
            }, {
                src: "download-modal/@2x_mobile-icon.png"
            }, {
                src: "download-modal/@2x_mac-dock-icon.png"
            }, {
                src: "download-modal/@2x_google-play.png"
            }, {
                src: "download-modal/@2x_app-store.png"
            }, {
                src: "giphy/2xMouseoverClick.png"
            }, {
                src: "Emoji-icons/Unselected/2x/emoji_icons-02_36x36_Filled.png"
            }, {
                src: "img/common/Checkmark(2x).png"
            }];
            for (var b = 0, c = f.length; c > b; b++)
                f[b].el = new Image,
                f[b].el.src = a + f[b].src
        }
        var d = {}
          , e = a.APP_BASE_URL
          , f = null ;
        return d.loadFonts = b,
        d.loadImages = c,
        d
    }
    ]),
    b.module("convoApp").factory("premiumUpgradeBannerService", ["bannerService", "accountInfo", "AppLinks", function(a, b, c) {
        function d() {
            var a = c.newResourceLink("12", [{
                type: "9",
                uid: 0
            }, {
                type: "networkInformation",
                uid: 0
            }], null , "Network Information");
            return c.linkToUrl(a, !0)
        }
        function e() {
            "PREMIUM" == b.getAccountLevel() && a.showBanner("Success! You are on the Pro Plan.<br/>View your <a href='" + d() + "'>Network Settings</a>.", !0, !0, null , 5e3)
        }
        var f = {};
        return f.showUpgradeSuccessTooltip = e,
        f
    }
    ]),
    b.module("convoApp").factory("profilePicService", ["ServerComm", "$q", function(a, b) {
        function c() {
            var c = {
                method: "generateRequestUUID"
            }
              , d = a.post("profilepic", c)
              , e = b.defer();
            return d.success(function(a, b) {
                e.resolve(a)
            }),
            e.promise
        }
        function d(c, d, e, f, g) {
            var h = {
                method: "submitThumbnailGenerationRequestForUserProfileImage",
                request_id: c,
                file_name_with_extension: d,
                file_size: e,
                crop_scale: f,
                crop_selection_rect: g
            }
              , i = a.post("profilepic", h)
              , j = b.defer();
            return i.success(function(a, b) {
                j.resolve(a)
            }),
            j.promise
        }
        function e(c) {
            var d = {
                method: "getThumbnailGenerationRequestStatus",
                request_id: c
            }
              , e = a.post("profilepic", d)
              , f = b.defer();
            return e.success(function(a, b) {
                f.resolve(a)
            }),
            f.promise
        }
        function f(c, d, e) {
            var f = {
                method: "updateUserProfileImageIfUploaded",
                request_id: c,
                user_id: d,
                account_id: e
            }
              , g = a.post("profilepic", f)
              , h = b.defer();
            return g.success(function(a, b) {
                h.resolve(a)
            }),
            h.promise
        }
        var g = {};
        return g.generateRequestUUID = c,
        g.generateProfileThumbnails = d,
        g.getThumbnailGenerationRequestStatus = e,
        g.updateUserProfileImageIfUploaded = f,
        g
    }
    ]),
    b.module("convoApp").factory("searchService", ["FilterTypes", "AppLinks", "FiltersQueryTransformer", function(a, c, d) {
        function e(a, b, c) {
            for (var d = [], e = a.length, f = ".", g = "", h = !1, i = 0; e > i; i++)
                f = a.charAt(i),
                h || f != b ? h && f == c ? (g += f,
                d.push(g),
                g = "",
                h = !1) : f == c ? (g += f,
                h = !0) : g += f : g.length > 0 && (d.push(g),
                g = "");
            return g.length > 0 && d.push(g),
            d
        }
        function f(a) {
            var b = a.replace(/(\s*?\+\s*)/gi, "+");
            return b = a.replace(/(\s*?\,\s*)/gi, ",")
        }
        function g(a, b, c, d) {
            for (var e = a.length, f = "", g = !1, h = "", i = 0; e > i; i++)
                h = a.charAt(i),
                h == d ? g = !g : h != b || g || (h = c),
                f += h;
            return f
        }
        function h(b, c, d) {
            for (var e = 0; e < b.length; e++)
                if (b[e].type === a.TEXT) {
                    b[e].description = d,
                    b[e].value = [d];
                    break
                }
            return b
        }
        function i(i, j) {
            j || (j = "+");
            for (var k = null , l = null , m = [], n = null , o = null , p = b.copy(i), q = [], r = 0; r < p.length; r++)
                if (p[r].type === a.TEXT) {
                    k = p[r].value;
                    break
                }
            return k ? (l = k.join(j),
            l = g(f(l), " ", j, '"'),
            l.indexOf("+") > 0 ? (m = e(l, "+", '"'),
            l.indexOf('"') < 0 && (n = '"' + m.join(" ") + '"',
            o = n,
            suggested = n,
            p = h(p, n, o),
            q.push({
                title: n,
                value: o,
                url: c.getFilterUrlForFilterStr(d.filtersToQuery(p).replace(/%3A/g, ":"))
            })),
            o = m.join(","),
            n = m.join(" OR "),
            p = h(p, n, o),
            q.push({
                title: n,
                value: o,
                url: c.getFilterUrlForFilterStr(d.filtersToQuery(p).replace(/%3A/g, ":"))
            })) : l.indexOf(",") > 0 ? (m = e(l, ",", '"'),
            o = m.join("+"),
            n = m.join(" AND "),
            p = h(p, n, o),
            q.push({
                title: n,
                value: o,
                url: c.getFilterUrlForFilterStr(d.filtersToQuery(p).replace(/%3A/g, ":"))
            })) : '"' == l.charAt(0) && '"' == l.charAt(l.length - 1) && (l = l.substring(1, l.length - 1),
            m = l.split(" "),
            m && m.length > 0 && (o = m.join("+"),
            n = m.join(" AND "),
            p = h(p, n, o),
            q.push({
                title: n,
                value: o,
                url: c.getFilterUrlForFilterStr(d.filtersToQuery(p).replace(/%3A/g, ":"))
            }))),
            q) : void 0
        }
        function j() {
            k.trigger("searchService:clearSearch")
        }
        var k = {};
        return _.extend(k, Backbone.Events),
        k.getSearchSuggestions = i,
        k.clearSearch = j,
        k
    }
    ]),
    b.module("convoApp").factory("serverPingService", ["$interval", "ServerComm", "chatUsersManager", "alertsService", "adminService", function(a, b, c, d, e) {
        function f() {
            i || (i = !0,
            b.getx("updates?user_status=" + c.getThisUser().presenceStatus).then(function(a) {
                console.log("server ping success"),
                i = !1;
                var b = a.data.data;
                j = b.directs_count,
                k = b.groups_update_count,
                l = b.ipn_info,
                m = b.like_notifications,
                n = b.notif_follow_grp_share,
                h.trigger("directsUnreadCountUpdate", j),
                h.trigger("groupsUnreadCountsUpdate", k),
                h.trigger("ipnUnreadCountUpdate", l),
                h.trigger("likeNotificationsUpdate", m),
                h.trigger("userStartedFollowAndGroupSharedAndGroupJoinReqNotificationsUpdate", n)
            }, function(a) {
                console.log("server ping FAILED");
                try {
                    403 === a.status && a.jqXHR.responseJSON.data && a.jqXHR.responseJSON.data.hasOwnProperty("admin_privileges_revoked") && 1 == a.jqXHR.responseJSON.data.admin_privileges_revoked ? d.alertModal("Admin privileges revoked", "You have been removed as an admin of this network.", "Ok", function() {
                        e.exitAdminMode()
                    }, !0, !0) : 403 === a.status && (console.error("network no longer accessible to user"),
                    h.trigger("networkNoLongerAccessibleToUser"))
                } catch (b) {
                    403 === a.status && (console.error("network no longer accessible to user"),
                    h.trigger("networkNoLongerAccessibleToUser"))
                }
                i = !1
            }))
        }
        function g() {
            f()
        }
        var h = {};
        _.extend(h, Backbone.Events);
        var i, j = 0, k = [], l = {}, m = [], n = [];
        return h.init = g,
        h.getUpdatesFromServer = f,
        h.getDirectsUnreadCount = function() {
            return j
        }
        ,
        h.getGroupsUnreadCounts = function() {
            return k
        }
        ,
        h.getIpnUnreadCount = function() {
            return l
        }
        ,
        h.getLikeNotifications = function() {
            return m
        }
        ,
        h.getUserStartedFollowAndGroupSharedAndGroupJoinReqNotifications = function() {
            return n
        }
        ,
        h
    }
    ]),
    b.module("convoApp").factory("tagsService", ["ServerComm", "accountInfo", "userInfo", "$q", "loginResponseData", "FilterTypes", "Filters", function(a, c, d, e, f, g, h) {
        function i(i) {
            for (var j = b.copy(i), k = 0; k < j.length; k++)
                j[k].type == g.TEXT && (j[k].type = "tag");
            var l = {
                authToken: f.getXmppSessionToken(),
                userID: d.getUserId(),
                accountID: c.getAccountId(),
                filter: h.newANDFiltersChain(j, "")
            }
              , m = a.postx("tags/related/get", l)
              , n = e.defer();
            return m.then(function(a, b) {
                n.resolve(a)
            }, function(a, b) {
                n.reject(a)
            }),
            n.promise
        }
        return {
            getRelatedTags: i
        }
    }
    ]),
    b.module("convoApp").factory("twitterService", ["ServerComm", "$q", "onboardingService", function(a, b, c) {
        var d = {
            createTwitterIntegration: function(d, e, f, g, h, i, j, k, l, m) {
                var n = b.defer()
                  , o = {
                    account_id: d,
                    creator_id: e,
                    display_name: f,
                    action_type: g,
                    access_level: h,
                    recipients: i,
                    profile_image_info: j,
                    search_term: k,
                    trigger_data: l,
                    token_id: m
                };
                return a.post("integrations/twitter", o).success(function(a, b) {
                    n.resolve(a),
                    c.markIntegrationsAsDone("Twitter")
                }),
                n.promise
            },
            getUserInfo: function(c) {
                var d = b.defer()
                  , e = {
                    op: "user_info",
                    user_id: c,
                    token_id: "1111"
                };
                return a.get("integrations/twitter?op=user_info&user_id=" + c + "&token_id=1111", e).success(function(a, b) {
                    d.resolve(a)
                }),
                d.promise
            },
            deleteAuthorization: function(c) {
                var d = (b.defer(),
                {
                    token_id: c,
                    target: "authorization"
                });
                return a.deletex("integrations/twitter", d)
            },
            deleteIntegration: function(c) {
                var d = (b.defer(),
                {
                    webhook_id: c,
                    target: "webhook"
                });
                return a.deletex("integrations/twitter", d)
            },
            getIntegrationDetails: function(c) {
                var d = b.defer()
                  , e = {
                    webhook_id: c,
                    op: "integration_details",
                    token_id: "1111"
                };
                return a.get("integrations/twitter?webhook_id=" + c + "&token_id=1111&op=integration_details", e).success(function(a, b) {
                    d.resolve(a)
                }),
                d.promise
            },
            updateIntegration: function(c, d, e, f, g, h, i, j) {
                var k = b.defer()
                  , l = {
                    webhook_id: c,
                    display_name: d,
                    action_type: e,
                    recipients: f,
                    profile_image_info: g,
                    search_term: h,
                    trigger_data: i,
                    token_id: j
                };
                return a.put("integrations/twitter", l).success(function(a, b) {
                    k.resolve(a)
                }).error(function(a, b) {
                    k.resolve(b)
                }),
                k.promise
            },
            getTwitterLists: function(c, d) {
                var e = b.defer()
                  , f = {
                    op: "twitter_lists",
                    screen_name: d,
                    token_id: c
                };
                return a.get("integrations/twitter?op=twitter_lists&screen_name=" + d + "&token_id=" + c, f).success(function(a, b) {
                    e.resolve(a)
                }),
                e.promise
            },
            verifyTwitterHandles: function(c, d) {
                var e = b.defer()
                  , f = {
                    op: "verify_handles",
                    handles: d,
                    token_id: c
                };
                return a.get("integrations/twitter?op=verify_handles&handles=" + d + "&token_id=" + c, f).success(function(a, b) {
                    e.resolve(a)
                }),
                e.promise
            },
            saveHandlesConfig: function(c, d, e) {
                var f = b.defer()
                  , g = {
                    webhook_id: c,
                    trigger_data: d,
                    token_id: e,
                    op: "save_handles_config"
                };
                return a.put("integrations/twitter", g).success(function(a, b) {
                    f.resolve(a)
                }).error(function(a, b) {
                    f.resolve(b)
                }),
                f.promise
            }
        };
        return d
    }
    ]),
    b.module("convoApp").factory("usersGroupsListProvider", ["Groups", "Users", "FilterTypes", "UserProfileImage", "userImgUrlFilter", "mentionsHistory", "utils", function(a, b, c, d, e, f, g) {
        function h() {
            b.getPublishableUsers().then(function(a) {
                b.fillRelevanciesInUsers().then(function() {
                    G.length = 0,
                    I = {},
                    J.length = 0;
                    for (var b = a.sortBy(function(a) {
                        return -a.get("rank")
                    }), c = 0; c < b.length; c++) {
                        var d = l(b[c]);
                        G.push(d),
                        I[d.id] = c,
                        d.isGuestUser && J.push(d)
                    }
                })
            })
        }
        function i() {
            a.getPublishableGroups().then(function(a) {
                F.length = 0,
                H = {},
                a.forEach(function(a, b) {
                    F.push(m(a)),
                    H[a.get("id")] = b
                })
            })
        }
        function j(a) {
            var b = a;
            return {
                id: b,
                label: b,
                formattedlabel: b
            }
        }
        function k(a) {
            var b = a.get("first_name") + " " + a.get("last_name")
              , f = b;
            return {
                type: c.USER,
                id: a.get("user_id"),
                label: f,
                formattedlabel: f,
                email: a.get("user_email_id"),
                desclabel: a.get("user_email_id"),
                formatteddesclabel: a.get("user_email_id"),
                classes: "user",
                imgurl: e(a.get("user_id"), a.get("profile_image_type"), a.get("profile_image_version"), d.PROFILE_IMAGE_SIZE_32x32)
            }
        }
        function l(a) {
            var b = a.get("name");
            b || (b = a.get("first_name") + " " + a.get("last_name"));
            var f = b;
            return {
                type: c.USER,
                id: a.get("user_id"),
                label: f,
                formattedlabel: f,
                desclabel: a.get("email"),
                formatteddesclabel: a.get("email"),
                classes: "user",
                imgurl: e(a.get("user_id"), a.get("profile_image_type"), a.get("profile_image_version"), d.PROFILE_IMAGE_SIZE_32x32)
            }
        }
        function m(a) {
            var b = "group ";
            return "public" == a.get("access").toLowerCase() ? b += "Icon1_PublicChannel-01-lightgray" : "private" == a.get("access").toLowerCase() || "profile" == a.get("access").toLowerCase() ? b += "privateGroup_icon-lightgray" : "secret" == a.get("access").toLowerCase() && (b += "privateGroup_icon-lightgray"),
            {
                type: c.GROUP,
                id: a.get("id"),
                label: a.get("title"),
                formattedlabel: a.get("title"),
                desclabel: "Group",
                formatteddesclabel: "Group",
                classes: b,
                imgurl: "",
                grouptype: a.get("type")
            }
        }
        function n() {
            return G
        }
        function o(a, b, d) {
            var e = !0;
            if (G.length + F.length == 0 && (e = !1),
            d && 0 != d.length && (e = !0),
            a || (e = !1),
            !e)
                return [];
            b || (b = 5),
            b = d && d.length ? Math.min(b, d.length) : Math.min(b, G.length + F.length);
            var f, h = g.getUserGroupSearchRegex(a), i = [], j = 0;
            f = d ? [d] : [G, F];
            for (var k = 0; k < f.length && b > j; k++)
                for (var l = f[k], m = 0; m < l.length && b > j; m++) {
                    var n = l[m].label.replace(h, "$1b1%b1_1$3b2%b2_2")
                      , o = null ;
                    o = l[m].type == c.USER ? l[m].desclabel.replace(h, "$1b1%b1_1$3b2%b2_2") : l[m].desclabel,
                    (n != l[m].label || o != l[m].desclabel) && (l[m].formattedlabel = n,
                    l[m].formatteddesclabel = o,
                    i.push(l[m]),
                    j++)
                }
            return i
        }
        function p(a, b) {
            if (!a || 0 == G.length)
                return [];
            b || (b = 5),
            b = Math.min(b, G.length);
            for (var d = g.getUserGroupSearchRegex(a), e = [], f = 0, h = [G], i = 0; i < h.length && b > f; i++)
                for (var j = h[i], k = 0; k < j.length && b > f; k++) {
                    var l = j[k].label.replace(d, "$1b1%b1_1$3b2%b2_2")
                      , m = null ;
                    j[k].type == c.USER && (m = j[k].desclabel.replace(d, "$1b1%b1_1$3b2%b2_2")),
                    (l != j[k].label || m != j[k].desclabel) && (j[k].formattedlabel = l,
                    j[k].formatteddesclabel = m,
                    e.push(j[k]),
                    f++)
                }
            return e
        }
        function q(a) {
            for (var b = f.getHistory(), c = [], d = {}, e = 0, g = 0, h = b.length; h > g; g++) {
                var i = b[g];
                if ("USER" === i.type && I.hasOwnProperty(i.id) ? (c.push(G[I[i.id]]),
                d[i.id] = !0,
                e++) : H.hasOwnProperty(i.id) && (c.push(F[H[i.id]]),
                d[i.id] = !0,
                e++),
                e === a)
                    break
            }
            if (a > e)
                for (var g = 0, h = G.length; h > g; g++) {
                    var i = G[g];
                    if (d.hasOwnProperty(i.id) || (c.push(i),
                    d[i.id] = !0,
                    e++),
                    e === a)
                        break
                }
            for (var g = 0, h = c.length; h > g; g++)
                c[g].formattedlabel = c[g].label,
                c[g].formatteddesclabel = c[g].desclabel;
            return c
        }
        function r(a) {
            for (var b = f.getHistory(), c = [], d = {}, e = 0, g = 0, h = b.length; h > g; g++) {
                var i = b[g];
                if ("USER" === i.type && I.hasOwnProperty(i.id) && (c.push(G[I[i.id]]),
                d[i.id] = !0,
                e++),
                e === a)
                    break
            }
            if (a > e)
                for (var g = 0, h = G.length; h > g; g++) {
                    var i = G[g];
                    if (d.hasOwnProperty(i.id) || (c.push(i),
                    d[i.id] = !0,
                    e++),
                    e === a)
                        break
                }
            for (var g = 0, h = c.length; h > g; g++)
                c[g].formattedlabel = c[g].label,
                c[g].formatteddesclabel = c[g].desclabel;
            return c
        }
        function s(a, b, c) {
            return b || (b = K),
            a || c ? o(a, b, c) : q(b)
        }
        function t(a, b) {
            return b || (b = K),
            a ? p(a, b) : r(b)
        }
        function u(a, b, c, d) {
            return w([a], b, c, d)
        }
        function v(a, b, c, d, e) {
            var f = M[a];
            return x(f, b, c, d, e)
        }
        function w(a, b, c, d) {
            if (d && !b)
                return [];
            for (var e = 0, f = 0; f < a.length; f++)
                e += a[f].length;
            if (0 == e)
                return [];
            c || (c = -1),
            c = Math.min(c, e);
            var h = []
              , i = !1;
            if (!b && 0 > c) {
                for (var f = 0; f < a.length; f++)
                    h = h.concat(a[f]);
                i = !0
            } else if (b)
                for (var j = g.getUserGroupSearchRegex(b), k = 0, l = 0; l < a.length && c > k; l++)
                    for (var m = a[l], f = 0; f < m.length && c > k; f++) {
                        var n = m[f].label.replace(j, "$1b1%b1_1$3b2%b2_2")
                          , o = m[f].desclabel.replace(j, "$1b1%b1_1$3b2%b2_2");
                        (n != m[f].label || o != m[f].desclabel) && (m[f].formattedlabel = n,
                        m[f].formatteddesclabel = o,
                        h.push(m[f]),
                        k++)
                    }
            else {
                for (var f = 0; f < a.length; f++)
                    if (h = h.concat(a[f]),
                    h.length > c) {
                        h = h.slice(0, c);
                        break
                    }
                i = !0
            }
            if (i)
                for (var f = 0; f < h.length; f++)
                    h[f].formattedlabel = h[f].label;
            return h
        }
        function x(a, b, c, d, e) {
            if (d && !b)
                return [];
            for (var f = 0, h = 0; h < a.length; h++)
                f += a[h].length;
            if (0 == f)
                return [];
            c || (c = -1),
            c = Math.min(c, f);
            var i = []
              , j = !1;
            if (!b && 0 > c) {
                for (var h = 0; h < a.length; h++)
                    if (e)
                        for (var k = 0; k < a[h].length; k++) {
                            var l = a[h];
                            e[l[k].id] || i.push(l[k])
                        }
                    else
                        i = i.concat(a[h]);
                j = !0
            } else if (b) {
                for (var m = g.getUserGroupSearchRegex(b), n = 0, k = 0; k < a.length && c > n; k++)
                    for (var o = a[k], h = 0; h < o.length && c > n; h++)
                        if (!e || !e[o[h].id]) {
                            var p = o[h].label.replace(m, "$1b1%b1_1$3b2%b2_2");
                            p != o[h].label && (o[h].formattedlabel = p,
                            i.push(o[h]),
                            n++)
                        }
            } else {
                for (var h = 0; h < a.length; h++) {
                    if (e)
                        for (var k = 0; k < a[h].length; k++) {
                            var l = a[h];
                            e[l[k].id] || i.push(l[k])
                        }
                    else
                        i = i.concat(a[h]);
                    if (i.length > c) {
                        i = i.slice(0, c);
                        break
                    }
                }
                j = !0
            }
            if (j)
                for (var h = 0; h < i.length; h++)
                    i[h].formattedlabel = i[h].label;
            return i
        }
        function y(a) {
            var c = b.getUser(a);
            return null  != c ? l(c) : null 
        }
        function z(b) {
            var c = a.getGroup(b);
            return null  != c ? m(c) : null 
        }
        function A(a) {
            return F[H[a]] || null 
        }
        function B(a) {
            return G[I[a]] || null 
        }
        function C(a) {
            return M[a]
        }
        function D(a, b) {
            if (!a || 0 == F.length)
                return [];
            b || (b = 5),
            b = Math.min(b, F.length);
            for (var d = g.getUserGroupSearchRegex(a), e = [], f = 0, h = [F], i = 0; i < h.length && b > f; i++)
                for (var j = h[i], k = 0; k < j.length && b > f; k++) {
                    var l = j[k].label.replace(d, "$1b1%b1_1$3b2%b2_2")
                      , m = null ;
                    m = j[k].type == c.USER ? j[k].desclabel.replace(d, "$1b1%b1_1$3b2%b2_2") : j[k].desclabel,
                    (l != j[k].label || m != j[k].desclabel) && (j[k].formattedlabel = l,
                    j[k].formatteddesclabel = m,
                    e.push(j[k]),
                    f++)
                }
            return e
        }
        function E(a, b) {
            return b || (b = K),
            a ? D(a, b) : []
        }
        var F = []
          , G = []
          , H = {}
          , I = {}
          , J = []
          , K = 5
          , L = {
            MENTION: "text-editor-at-mention",
            MARKER: "cnv-src-marker"
        }
          , M = {}
          , N = {
            USERS: "users",
            GROUPS: "groups",
            GUEST_USERS_ONLY: "guestUsers",
            USERS_AND_GROUPS: "usersAndGroups"
        };
        return M[N.USERS] = [G],
        M[N.GROUPS] = [F],
        M[N.GUEST_USERS_ONLY] = [J],
        M[N.USERS_AND_GROUPS] = [G, F],
        b.on("usersUpdated", h),
        a.on("groupsUpdated", i),
        h(),
        i(),
        {
            createUserListItem: l,
            createGroupListItem: m,
            getPublishableGroupsAndUsersOrPreviousHistory: s,
            getPublishableGroupsOrPreviousHistory: E,
            queryPublishableUsersAndGroups: o,
            queryPublishableGroups: D,
            getPublishableUsers: n,
            getUserListItem: y,
            getGroupListItem: z,
            getPublishableGroupListItem: A,
            getPublishableUserListItem: B,
            getPublishableUsersOrPreviousHistory: t,
            createUserListItemForSpecificGroup: k,
            LIST_NAMES: N,
            AT_MENTION_DOM_CLASSES: L,
            query: v,
            queryCustomList: u,
            createUserEmailListItem: j,
            getList: C,
            lists: M
        }
    }
    ]),
    b.module("convoApp").factory("videoPlayerSettings", [function() {
        function a(a) {
            j = a
        }
        function b() {
            return j
        }
        function c(a) {
            i = a
        }
        function d() {
            return i
        }
        function e(a, b) {
            k[a] = b
        }
        function f(a) {
            var b = 0;
            return k[a] && (b = k[a]),
            b
        }
        function g(a, b) {
            l[a] = b
        }
        function h(a) {
            return l[a] ? l[a] : !1
        }
        var i, j = 1, k = [], l = [];
        return {
            setCurrentVolume: a,
            getCurrentVolume: b,
            setMuteState: c,
            getMuteState: d,
            updateSeekPosition: e,
            getSeekPosition: f,
            setQuality: g,
            getQuality: h
        }
    }
    ]),
    b.module("convoApp").factory("webhooksService", ["ServerComm", "$q", "onboardingService", function(a, b, c) {
        var d = {
            createWebhook: function(d, e, f, g, h, i, j) {
                var k = b.defer()
                  , l = {
                    account_id: d,
                    creator_id: e,
                    display_name: f,
                    action_type: g,
                    access_level: h,
                    recipients: i,
                    profile_image_info: j
                };
                return a.post("webhooks", l).success(function(a, b) {
                    k.resolve(a),
                    c.markIntegrationsAsDone("Webhooks")
                }),
                k.promise
            },
            updateWebhook: function(c, d, e, f, g) {
                var h = b.defer()
                  , i = {
                    webhook_id: c,
                    display_name: d,
                    action_type: e,
                    recipients: f,
                    profile_image_info: g
                };
                return a.put("webhooks", i).success(function(a, b) {
                    h.resolve(a)
                }),
                h.promise
            },
            getIntegrations: function(c, d) {
                var e = b.defer()
                  , f = {
                    op: "list",
                    creator_id: c,
                    account_id: d
                };
                return a.get("webhooks?op=list&creator_id=" + c + "&account_id=" + d, f).success(function(a, b) {
                    e.resolve(a)
                }),
                e.promise
            },
            getIntegrationsByRecipients: function(c, d, e) {
                var f = b.defer()
                  , g = {
                    op: "list",
                    creator_id: c,
                    recipients: d,
                    account_id: e
                };
                return a.get("webhooks?op=list&creator_id=" + c + "&recipients=" + d + "&account_id=" + e, g).success(function(a, b) {
                    f.resolve(a)
                }),
                f.promise
            },
            getIntegrationDetails: function(c) {
                var d = b.defer()
                  , e = {
                    webhook_id: c
                };
                return a.get("webhooks?webhook_id=" + c, e).success(function(a, b) {
                    d.resolve(a)
                }),
                d.promise
            },
            getIntegrationCompletionStatus: function(c, d) {
                var e = b.defer()
                  , f = {
                    op: "is_complete",
                    webhook_id: c,
                    integration_type: d
                };
                return a.get("integrations/" + d + "?op=is_complete&webhook_id=" + c + "&integration_type=" + d + "&token_id=1111", f).success(function(a, b) {
                    e.resolve(a)
                }),
                e.promise
            },
            getUserInfo: function(c, d) {
                var e = b.defer()
                  , f = {
                    op: "token_id",
                    user_id: c
                };
                return a.get("integrations/" + d + "?op=token_id&user_id=" + c + "&token_id=1111", f).success(function(a, b) {
                    e.resolve(a)
                }),
                e.promise
            },
            deleteIntegration: function(c) {
                var d = (b.defer(),
                {
                    webhook_id: c,
                    hardDelete: !0
                });
                return a.deletex("webhooks", d)
            },
            disableIntegration: function(c, d, e) {
                var f = b.defer()
                  , g = {
                    webhook_id: c,
                    action: d,
                    modified_by: e
                };
                return a.put("webhooks", g).success(function(a, b) {
                    f.resolve(a)
                }),
                f.promise
            },
            getConnectedAccounts: function(c) {
                var d = b.defer()
                  , e = {
                    op: "auth_accounts",
                    creator_id: c
                };
                return a.get("webhooks?op=auth_accounts&user_id=" + c, e).success(function(a, b) {
                    d.resolve(a)
                }),
                d.promise
            },
            deleteConnectedAccount: function(c, d, e) {
                var f = (b.defer(),
                {
                    client_id: c,
                    user_id: d,
                    type: e,
                    op: "revoke_auth_accounts"
                });
                return a.deletex("webhooks", f)
            }
        };
        return d
    }
    ]),
    b.module("convoApp").directive("cnvCustomizeFeed", ["bannerService", "usersGroupsListProvider", "$q", "settingsService", "Groups", "Users", "alertsService", "config", "nativeCommBridge", function(a, b, c, d, e, f, g, h, i) {
        return {
            link: function(a, g, h) {
                function i() {
                    d.getSettingsForCustomizeFeed(!0).then(function(b) {
                        a.setting_arr = b,
                        a.initialized = !0,
                        a.$broadcast("render"),
                        setTimeout(function() {
                            j()
                        }, 0)
                    })
                }
                function j() {
                    if (a.setting_arr[d.GENERAL_SETTING___SHARING_OPTIONS_LIST].length) {
                        var h = a.setting_arr[d.GENERAL_SETTING___SHARING_OPTIONS_LIST];
                        c.all([f.getUsers(), e.getGroups()]).then(function() {
                            for (var c = 0; c < h.length; c++)
                                "USER" == h[c].type ? a.userAndGroupList.push(b.getUserListItem(h[c].share_to)) : "GROUP" == h[c].type && a.userAndGroupList.push(b.getGroupListItem(h[c].share_to));
                            a.$$phase || a.$digest()
                        })
                    }
                    if (a.setting_arr[d.GENERAL_SETTING___REGULAR_GROUPS_SETTINGS].length) {
                        var i = a.setting_arr[d.GENERAL_SETTING___REGULAR_GROUPS_SETTINGS];
                        a.hiddenGroups = [];
                        for (var j = 0; j < i.length; j++)
                            i[j].hide_from_feed && a.hiddenGroups.push(i[j]);
                        a.hiddenGroups.length ? a.viewHiddenGroupsText = "View " + a.hiddenGroups.length + " hidden groups" : (g.find("#hiddenGroups").addClass("anchorDisabled"),
                        a.viewHiddenGroupsText = "View hidden groups"),
                        a.$broadcast("render")
                    }
                    if (1 == parseInt(a.setting_arr[d.GENERAL_SETTING___SHARING_OPTIONS]) ? $("#settingQA").prop("checked", !0) : 2 == parseInt(a.setting_arr[d.GENERAL_SETTING___SHARING_OPTIONS]) ? $("#settingMA").prop("checked", !0) : 3 == parseInt(a.setting_arr[d.GENERAL_SETTING___SHARING_OPTIONS]) && ($("#settingQA").prop("checked", !0),
                    $("#settingMA").prop("checked", !0)),
                    a.setting_arr.regular_groups_settings)
                        for (var j = 0; j < a.setting_arr.regular_groups_settings.length; j++)
                            1 == a.setting_arr.regular_groups_settings[j].hide_from_feed && (a.hiddenGroupsMap[a.setting_arr.regular_groups_settings[j].group_id] = !0)
                }
                a.setting_arr = [],
                a.hiddenGroupsMap = {},
                i()
            },
            controller: ["$scope", "$element", function(f, j) {
                f.userAndGroupList = [],
                f.groupList = [],
                f.userList = [],
                f.getAutoCompleteUserAndGroupsItems = function(a, d) {
                    var e = c.defer();
                    return e.resolve(b.query(b.LIST_NAMES.USERS_AND_GROUPS, a, d + 4)),
                    e.promise
                }
                ,
                f.getAutoCompleteGroupsItems = function(a) {
                    var d = c.defer();
                    return d.resolve(b.query(b.LIST_NAMES.GROUPS, a, 4 + f.groupList.length, !1, f.hiddenGroupsMap)),
                    d.promise
                }
                ,
                f.getAutoCompleteUsersItems = function(a) {
                    var d = c.defer();
                    return d.resolve(b.query(b.LIST_NAMES.USERS, a, 4)),
                    d.promise
                }
                ,
                f.onSharingOptionAdded = function(a) {
                    var b = {};
                    b.type = a.type,
                    b.share_to = a.id;
                    f.saveSettingByName(d.GENERAL_SETTING___SHARING_OPTIONS_LIST, {
                        added_sharing_options: [b]
                    })
                }
                ,
                f.resetToDefaultSharingOption = function() {
                    f.saveSettingByName(d.GENERAL_SETTING___RESET_TO_DEFAULT_SHARING_OPTIONS, 1)
                }
                ,
                f.onSharingOptionRemoved = function(a) {
                    var b = {};
                    b.type = a.type,
                    b.share_to = a.id,
                    f.saveSettingByName(d.GENERAL_SETTING___SHARING_OPTIONS_LIST, {
                        removed_sharing_options: [b]
                    })
                }
                ,
                f.groupItemAdded = function() {
                    f.groupList.length && $("#hideGroupsBtn").removeClass("disabled")
                }
                ,
                f.groupItemRemoved = function() {
                    f.groupList.length || $("#hideGroupsBtn").addClass("disabled")
                }
                ,
                f.hideGroupsFromFeed = function() {
                    for (var a = [], b = 0; b < f.groupList.length; b++) {
                        a.push({
                            id: f.groupList[b].id,
                            hide_from_feed: 1
                        }),
                        f.hiddenGroups.push(f.groupList[b]),
                        f.hiddenGroupsMap[f.groupList[b].id] = !0;
                        var c = e.getGroup(f.groupList[b].id);
                        e.toggleShowHidePostsInFeed(c, 1)
                    }
                    f.saveSettingByName(d.GENERAL_SETTING___GROUP_SUBSCRIPTIONS, a),
                    f.groupList = [],
                    $("#hideGroupsBtn").addClass("disabled"),
                    f.hiddenGroups.length ? (j.find("#hiddenGroups").removeClass("anchorDisabled"),
                    f.viewHiddenGroupsText = "View " + f.hiddenGroups.length + " hidden groups") : f.viewHiddenGroupsText = "View hidden groups",
                    f.$broadcast("render")
                }
                ,
                f.openHiddenGroupsAndTeammatesModal = function(a) {
                    templateUrl = "settings/hiddenGroupsAndTeammatesModal/cnvHiddenGroupsAndTeammatesModal.tpl.html",
                    controller = "cnvHiddenGroupsAndTeammatesModal",
                    styleClass = "cnv-hidden-groups-teammates";
                    var b = {
                        selectedView: function() {
                            return a
                        },
                        groupList: function() {
                            return f.hiddenGroups
                        }
                    }
                      , c = g.customModal(templateUrl, controller, b, styleClass);
                    c.result.then(function(a) {
                        f.hiddenGroups = a.groupList,
                        f.hiddenGroups.length ? (j.find("#hiddenGroups").removeClass("anchorDisabled"),
                        f.viewHiddenGroupsText = "View " + f.hiddenGroups.length + " hidden groups") : (j.find("#hiddenGroups").addClass("anchorDisabled"),
                        f.viewHiddenGroupsText = "View hidden groups"),
                        f.$broadcast("render")
                    })
                }
                ,
                f.updateChkSettings = function() {
                    var a;
                    $("#settingMA").is(":checked") && $("#settingQA").is(":checked") ? a = 3 : $("#settingMA").is(":checked") && !$("#settingQA").is(":checked") ? a = 2 : !$("#settingMA").is(":checked") && $("#settingQA").is(":checked") ? a = 1 : $("#settingMA").is(":checked") || $("#settingQA").is(":checked") || (a = 0),
                    f.saveSettingByName(d.GENERAL_SETTING___SHARING_OPTIONS, a)
                }
                ,
                f.saveSettingByName = function(c, e) {
                    d.saveSettingByName(c, e).then(function(e) {
                        if (200 == e.status && c != d.GENERAL_SETTING___GROUP_SUBSCRIPTIONS && a.showBanner("Your settings have been saved.", !1, !1, null ),
                        c == d.GENERAL_SETTING___RESET_TO_DEFAULT_SHARING_OPTIONS) {
                            var g = e.data.data.sharing_options_list;
                            f.userAndGroupList = [];
                            for (var j = 0; j < g.length; j++)
                                "USER" == g[j].type ? f.userAndGroupList.push(b.getUserListItem(g[j].share_to)) : "GROUP" == g[j].type && f.userAndGroupList.push(b.getGroupListItem(g[j].share_to));
                            f.$$phase || f.$digest()
                        }
                        h.IS_NATIVE && i.refreshMenulet(),
                        f.$emit("refetchMainFeedRequest")
                    })
                }
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvMyAccSettings", ["Users", "bannerService", "accountInfo", "alertsService", function(a, b, c, d) {
        return {
            link: function(a, c, d) {
                c.find("#newEmail").on("input", function() {
                    $(this).val() ? c.find("#emailBtn").removeClass("disabled") : c.find("#emailBtn").addClass("disabled")
                }),
                c.find("#newPass").on("input", function() {
                    $(this).val() && c.find("#curPass").val() ? c.find("#passBtn").removeClass("disabled") : c.find("#passBtn").addClass("disabled")
                }),
                c.find("#curPass").on("input", function() {
                    $(this).val() && c.find("#newPass").val() ? c.find("#passBtn").removeClass("disabled") : c.find("#passBtn").addClass("disabled")
                }),
                a.resetPassword = function() {
                    var d = c.find("#curPass").val()
                      , e = c.find("#newPass").val();
                    a.user_info.resetPassword(d, e).then(function(a) {
                        1 == a.data.type ? (b.showBanner("Password updated.", !1, !1, null ),
                        c.find("#curPass").val(""),
                        c.find("#newPass").val(""),
                        c.find("#passBtn").addClass("disabled")) : 0 == a.data.type && b.showBanner(a.data.message, !1, !1, null )
                    })
                }
                ,
                a.changeEmail = function() {
                    var d = c.find("#newEmail").val();
                    d && a.user_info.changeEmail(d).then(function(d) {
                        1 == d.data.type ? (b.showBanner("Email address updated.", !1, !1, null ),
                        c.find("#newEmail").val(""),
                        c.find("#emailBtn").addClass("disabled"),
                        a.$$phase || a.$digest()) : 0 == d.data.type && b.showBanner(d.data.message, !1, !1, null )
                    })
                }
            },
            controller: ["$scope", "$element", "settingsService", "userInfo", function(b, e, f, g) {
                function h() {
                    b.$emit("userSignOutClick")
                }
                var i = "Disable your account"
                  , j = "Are you sure you want to disable your account? You will be removed from " + c.getAccountName() + " network. Content shared by you will not be automatically deleted."
                  , k = "Disable Account";
                f.getGeneralSettings(!0).then(function(a) {
                    b.settings = a
                }),
                b.userInfo = g,
                b.disableAccount = function() {
                    d.promptModal(i, j, function() {
                        a.removeUserFromNetwork(b.user_info.user_id).then(function(a) {
                            1 == a.data.type && h()
                        })
                    }, null , k, "Cancel")
                }
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvNetworkInformation", ["utils", "bannerService", "accountInfo", "alertsService", "networkImageService", "awsService", "userInfo", "$sce", function(a, b, c, d, e, f, g, h) {
        return {
            link: function(b, c, d) {
                var e = c.find("#networkImageUpload");
                e.on("change", function(a) {
                    this.files.length > 0 && b.setNetworkImageViaUpload(this.files[0])
                }),
                b.openFilePicker = function() {
                    a.fireEvent(e[0], "click")
                }
            },
            controller: ["$scope", "$element", "adminService", "$q", "alertsService", "$location", "$window", function(d, h, i, j, k, l, m) {
                function n() {
                    var a = i.getUsers("list_admins");
                    a.then(function(a) {
                        d.adminUsersList = [];
                        for (var b = 0; b < a.data.length; b++) {
                            var c = a.data[b]
                              , e = {
                                classes: "user",
                                desclabel: c.email,
                                formatteddesclabel: c.email,
                                formattedlabel: c.first_name + " " + c.last_name,
                                id: c.user_id,
                                label: c.first_name + " " + c.last_name + ("OWNER" === c.user_role ? " (Owner)" : ""),
                                type: "USER",
                                imgUrl: "",
                                readonly: "OWNER" === c.user_role ? !0 : !1
                            };
                            "OWNER" === c.user_role ? d.adminUsersList.unshift(e) : d.adminUsersList.push(e)
                        }
                    })
                }
                function o(a) {
                    var c = i.makeAdmin(a.id);
                    b.showBanner_promise(c, "Saving settings")
                }
                function p(a) {
                    var c = i.removeAdmin(a.id);
                    c.then(function(c) {
                        if (1 == c.data.type) {
                            if (b.showBanner("Settings Saved"),
                            a.id == g.getUserId()) {
                                var e = i.exitAdminMode();
                                e.then(function() {
                                    l.path("/feed"),
                                    m.location.reload()
                                })
                            }
                        } else
                            c.data.hasOwnProperty("message") && (d.adminUsersList.push(a),
                            b.showBanner(c.data.message))
                    })
                }
                function q() {
                    var a = i.getGeneralUsersInfo();
                    a.then(function(a, b) {
                        a.data && -1 != a.data.users_cap && (d.usersCap = a.data.users_cap,
                        d.$broadcast("render"))
                    })
                }
                function r() {
                    if (g.isGuestUser() || "STARTER" !== c.getAccountLevel() && !g.isAdmin())
                        return void l.url("/feed");
                    var a = i.getInfo();
                    a.then(function(a) {
                        d.networkInfo = a.data,
                        d.$broadcast("render")
                    }),
                    g.isAdmin() && "STARTER" !== c.getAccountLevel && n(),
                    "PREMIUM" === c.getAccountLevel() && g.isAdmin() && q()
                }
                function s(b) {
                    var c = new Date(a.getNormalizedTimeString(b))
                      , d = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
                    return d[c.getMonth()] + " " + c.getDate() + ", " + c.getFullYear()
                }
                function t(a) {
                    switch (a.name.substring(a.name.lastIndexOf(".") + 1).toLowerCase()) {
                    case "gif":
                    case "jpg":
                    case "png":
                    case "jpeg":
                        v.networkImageUploadState = v.Uploader_Uploading,
                        d.$broadcast("render");
                        var c = e.generateRequestUUID();
                        c.then(function(b, c) {
                            var d = b.data
                              , g = a.name.substring(a.name.lastIndexOf(".") + 1).toLowerCase()
                              , h = a.type.toLowerCase()
                              , i = f.uploadFile(a, d + "-original." + g, "temp/requests/" + d + "/" + d + "-original." + g, h);
                            i.then(function(b, c) {
                                var f = e.generateLogoThumbnails(d, d + "." + g, a.size);
                                f.then(function(a, b) {
                                    var c = setInterval(function() {
                                        u(d, c)
                                    }, 5e3)
                                })
                            })
                        });
                        break;
                    default:
                        b.showBanner("File type not supported.", !1, !1)
                    }
                }
                function u(a, f) {
                    var h = e.getThumbnailGenerationRequestStatus(a);
                    h.then(function(h, i) {
                        if ("SUCCESS" == h.data.status) {
                            var j = e.updateNetworkLogoImageIfUploaded(a, g.getUserId(), c.getAccountId());
                            clearInterval(f),
                            j.then(function(a, b) {
                                v.networkImageUploadState = v.Uploader_Idle,
                                v.accountImageUrl = c.getAccountImageUrl(),
                                c.updateNetworkImageType(a.data.account_image_type),
                                c.updateNetworkImageVersion(a.data.account_image_version),
                                d.$broadcast("render")
                            })
                        } else
                            "FAILURE" == h.data.status && (b.showBanner("An error occured. Please try again.", !1, !1),
                            v.networkImageUploadState = v.Uploader_Idle,
                            d.$broadcast("render"))
                    })
                }
                var v = d;
                v.Uploader_Idle = 0,
                v.Uploader_Uploading = 1,
                v.Uploader_Failed = -1,
                d.adminUsersList = [];
                var w = 4
                  , x = 2e4
                  , y = v.networkName = c.getAccountName();
                v.networkImageUploadState = v.Uploader_Idle,
                v.createdOn = s(c.getAccountCreationDate()),
                v.plan = c.getAccountLevel(),
                v.accountImageType = c.getAccountImageType(),
                0 != v.accountImageType ? v.accountImageUrl = c.getAccountImageUrl() : v.accountImageUrl = a.getCompanyDefaultLogo(),
                d.onItemAddedInAdminField = function(a) {
                    k.promptModal("Add network admin", "As network admin, <strong>" + _.escape(a.label) + "</strong> would be able to access admin console and edit network settings.", function() {
                        o(a)
                    }, function() {
                        d.adminUsersList.pop()
                    }, "Make admin", "cancel", null , !0, !0)
                }
                ,
                d.onItemRemovedInAdminField = function(a) {
                    var b;
                    b = a.id == g.getUserId() ? "You're about to remove yourself as a network admin. Are you sure you want to give up your admin privileges?" : "You're about to remove <strong>" + _.escape(a.label) + "</strong> as a network admin.",
                    k.promptModal("Remove admin", b, function() {
                        p(a)
                    }, function() {
                        d.adminUsersList.push(a)
                    }, "Remove admin", "cancel", null , !0, !0)
                }
                ,
                d.getAutoCompleteUserItemsForAdminField = function(a, b) {
                    var c = j.defer()
                      , d = i.getUsers("grant_admin_privilege", a);
                    return d.then(function(a) {
                        for (var b = [], d = a.data.length > w ? w : a.data.length, e = 0; d > e; e++) {
                            var f = a.data[e];
                            b.push({
                                classes: "user",
                                desclabel: f.email,
                                formatteddesclabel: f.email,
                                formattedlabel: f.first_name + " " + f.last_name,
                                id: f.user_id,
                                label: f.first_name + " " + f.last_name,
                                type: "USER",
                                imgurl: ""
                            })
                        }
                        c.resolve(b)
                    }),
                    c.promise
                }
                ;
                var z = function() {
                    if (y !== v.networkName && "" !== v.networkName) {
                        var a = v.networkName
                          , d = c.updateAccountName(a);
                        d.then(function() {
                            b.showBanner("Your settings have been saved", !1, !1),
                            y = a
                        }, function() {
                            b.showBanner("Error occured while saving settings", !1, !1)
                        })
                    } else
                        "" === v.networkName && (v.networkName = y)
                }
                ;
                v.updateNetworkName = z,
                v.setNetworkImageViaUpload = t,
                setTimeout(function() {
                    v.updateNetworkName()
                }, x),
                v.tab.appContCtrl.appCtrl.okToClose = function() {
                    return y !== v.networkName || v.networkImageUploadState != v.Uploader_Idle ? {
                        promptMessage: "There are unsaved change. Continue?"
                    } : void 0
                }
                ,
                r()
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvNotificationSettings", ["settingsService", "bannerService", function(a, b) {
        return {
            link: function(b, d, e) {
                function f() {
                    var a;
                    a = Math.min(b.grpLimit, b.groupsListNotifications.length);
                    for (var c = 0; a > c; c++)
                        b.groupsListNotifications[c].desktop && $("#" + b.groupsListNotifications[c].group_id + "D").prop("checked", !0),
                        b.groupsListNotifications[c].email && $("#" + b.groupsListNotifications[c].group_id + "E").prop("checked", !0),
                        b.groupsListNotifications[c].mobile && $("#" + b.groupsListNotifications[c].group_id + "M").prop("checked", !0),
                        b.groupsListNotifications[c].in_app && $("#" + b.groupsListNotifications[c].group_id + "N").prop("checked", !0);
                    a = Math.min(b.userLimit, b.usersListNotifications.length);
                    for (var c = 0; a > c; c++)
                        b.usersListNotifications[c].desktop && $("#" + b.usersListNotifications[c].user_id + "D").prop("checked", !0),
                        b.usersListNotifications[c].email && $("#" + b.usersListNotifications[c].user_id + "E").prop("checked", !0),
                        b.usersListNotifications[c].mobile && $("#" + b.usersListNotifications[c].user_id + "M").prop("checked", !0),
                        b.usersListNotifications[c].in_app && $("#" + b.usersListNotifications[c].user_id + "N").prop("checked", !0)
                }
                b.registerClickEvent = function() {
                    $(".chkDesktop").click(function() {
                        $(this).find(".btn").toggleClass("active"),
                        $(this).find(".btn-primary").size() > 0 && $(this).find(".btn").toggleClass("btn-primary"),
                        $(this).find(".btn").toggleClass("btn-default-transparent-font"),
                        b.disableAllDesktopChk = !b.disableAllDesktopChk,
                        0 === b.desktopNotificationVal ? (b.desktopNotificationVal = 1,
                        b.notification_arr[a.GENERAL_SETTING___ENABLE_DESKTOP_NOTIFICATIONS] = b.desktopNotificationVal,
                        b.saveSettingByName(a.GENERAL_SETTING___ENABLE_DESKTOP_NOTIFICATIONS, b.desktopNotificationVal)) : b.desktopNotificationVal !== c && (b.desktopNotificationVal = 0,
                        b.notification_arr[a.GENERAL_SETTING___ENABLE_DESKTOP_NOTIFICATIONS] = b.desktopNotificationVal,
                        b.saveSettingByName(a.GENERAL_SETTING___ENABLE_DESKTOP_NOTIFICATIONS, b.desktopNotificationVal)),
                        b.$digest()
                    }),
                    $(".chkEmail").click(function() {
                        $(this).find(".btn").toggleClass("active"),
                        $(this).find(".btn-primary").size() > 0 && $(this).find(".btn").toggleClass("btn-primary"),
                        $(this).find(".btn").toggleClass("btn-default-transparent-font"),
                        b.disableAllEmailChk = !b.disableAllEmailChk,
                        0 === b.emailNotificationVal ? (b.emailNotificationVal = 1,
                        b.notification_arr[a.GENERAL_SETTING___ENABLE_EMAIL_NOTIFICATIONS] = b.emailNotificationVal,
                        b.saveSettingByName(a.GENERAL_SETTING___ENABLE_EMAIL_NOTIFICATIONS, b.emailNotificationVal)) : b.emailNotificationVal !== c && (b.emailNotificationVal = 0,
                        b.notification_arr[a.GENERAL_SETTING___ENABLE_EMAIL_NOTIFICATIONS] = b.emailNotificationVal,
                        b.saveSettingByName(a.GENERAL_SETTING___ENABLE_EMAIL_NOTIFICATIONS, b.emailNotificationVal)),
                        b.disableAllEmailChk ? $(".radioBtnBar").addClass("disabled") : $(".radioBtnBar").removeClass("disabled"),
                        b.disableAllEmailChk && b.disableAllMobileChk ? $(".smartNoti").addClass("disabled") : $(".smartNoti").removeClass("disabled"),
                        b.$digest()
                    }),
                    $(".chkMobile").click(function() {
                        $(this).find(".btn").toggleClass("active"),
                        $(this).find(".btn-primary").size() > 0 && $(this).find(".btn").toggleClass("btn-primary"),
                        $(this).find(".btn").toggleClass("btn-default-transparent-font"),
                        b.disableAllMobileChk = !b.disableAllMobileChk,
                        0 === b.mobileNotificationVal ? (b.mobileNotificationVal = 1,
                        b.notification_arr[a.GENERAL_SETTING___ENABLE_DEVICE_NOTIFICATIONS] = b.mobileNotificationVal,
                        b.saveSettingByName(a.GENERAL_SETTING___ENABLE_DEVICE_NOTIFICATIONS, b.mobileNotificationVal)) : b.mobileNotificationVal !== c && (b.mobileNotificationVal = 0,
                        b.notification_arr[a.GENERAL_SETTING___ENABLE_DEVICE_NOTIFICATIONS] = b.mobileNotificationVal,
                        b.saveSettingByName(a.GENERAL_SETTING___ENABLE_DEVICE_NOTIFICATIONS, b.mobileNotificationVal)),
                        b.disableAllEmailChk && b.disableAllMobileChk ? $(".smartNoti").addClass("disabled") : $(".smartNoti").removeClass("disabled"),
                        b.$digest()
                    }),
                    $(".chkIPN").click(function() {
                        $(this).find(".btn").toggleClass("active"),
                        $(this).find(".btn-primary").size() > 0 && $(this).find(".btn").toggleClass("btn-primary"),
                        $(this).find(".btn").toggleClass("btn-default-transparent-font"),
                        b.disableAllIPNChk = !b.disableAllIPNChk,
                        0 === b.inAppNotificationVal ? (b.inAppNotificationVal = 1,
                        b.notification_arr[a.GENERAL_SETTING___ENABLE_IN_APP_NOTICATIONS] = b.inAppNotificationVal,
                        b.saveSettingByName(a.GENERAL_SETTING___ENABLE_IN_APP_NOTICATIONS, b.inAppNotificationVal)) : b.inAppNotificationVal !== c && (b.inAppNotificationVal = 0,
                        b.notification_arr[a.GENERAL_SETTING___ENABLE_IN_APP_NOTICATIONS] = b.inAppNotificationVal,
                        b.saveSettingByName(a.GENERAL_SETTING___ENABLE_IN_APP_NOTICATIONS, b.inAppNotificationVal)),
                        b.$digest()
                    })
                }
                ,
                b.updateSettings = function(c, d, e) {
                    var f, g, h = c.target, i = d.replace(b.idPrefix, ""), j = h.checked;
                    e ? f = d == b.PLAY_CHAT_NOTIFICATION_SOUND ? 28 : 1 : ("D" === i.substring(i.length - 1, i.length) ? f = a.DESKTOP : "E" === i.substring(i.length - 1, i.length) ? f = a.EMAIL : "M" === i.substring(i.length - 1, i.length) ? f = a.MOBILE : "N" === i.substring(i.length - 1, i.length) && (f = a.NOTIFICATION_CENTER),
                    i = i.substring(0, i.length - 1)),
                    j ? (g = a.bitON(parseInt(b.notification_arr[i]), f),
                    b.notification_arr[i] = g) : (g = a.bitOFF(parseInt(b.notification_arr[i]), f),
                    b.notification_arr[i] = g),
                    b.saveSettingByName(i, g)
                }
                ,
                b.updateDigestSetting = function(c) {
                    var d, e = c.target, f = c.target.id, g = e.checked;
                    g && (b.DIGEST_SEND_FREQUENCY + "N" == f ? ($("#" + b.DIGEST_SEND_FREQUENCY + "D").prop("checked", !1),
                    $("#" + b.DIGEST_SEND_FREQUENCY + "W").prop("checked", !1),
                    d = "NEVER") : b.DIGEST_SEND_FREQUENCY + "D" == f ? ($("#" + b.DIGEST_SEND_FREQUENCY + "N").prop("checked", !1),
                    $("#" + b.DIGEST_SEND_FREQUENCY + "W").prop("checked", !1),
                    d = "DAILY") : b.DIGEST_SEND_FREQUENCY + "W" == f && ($("#" + b.DIGEST_SEND_FREQUENCY + "N").prop("checked", !1),
                    $("#" + b.DIGEST_SEND_FREQUENCY + "D").prop("checked", !1),
                    d = "WEEKLY"),
                    console.log("####" + d),
                    b.saveSettingByName(a.GENERAL_SETTING___DIGEST_SEND_FREQUENCY, d))
                }
                ,
                b.activityChanged = function(d) {
                    var e;
                    d ? (b.selectedActivityType = "All Activity <span class='caret'></span>",
                    b.showDesktopChk = !1,
                    e = 4) : (b.selectedActivityType = "Specific activity (Customize) <span class='caret'></span>",
                    b.activityNotificationVal === c && (b.activityNotificationVal = 0),
                    b.showDesktopChk = !0,
                    e = b.activityNotificationVal),
                    b.$broadcast("render"),
                    b.notification_arr[a.GENERAL_SETTING___NOTIFY_UPDATES_IN_NEWS_FEED] = e,
                    b.saveSettingByName(a.GENERAL_SETTING___NOTIFY_UPDATES_IN_NEWS_FEED, e),
                    b.updateView(!0),
                    b.showExpandGrpUsr && f()
                }
                ,
                b.showGrpAndUserList = function() {
                    b.userLimit = 5,
                    b.grpLimit = 5,
                    b.grpMoreLessLabel = "More",
                    b.userMoreLessLabel = "More",
                    b.showExpandGrpUsr = !0,
                    b.$broadcast("render"),
                    b.$$phase || b.$digest(),
                    f()
                }
                ,
                b.expandList = function(a) {
                    "GROUP" == a ? "More" == b.grpMoreLessLabel ? (b.grpLimit = b.groupsListNotifications.length,
                    b.grpMoreLessLabel = "Less") : (b.grpLimit = 5,
                    b.grpMoreLessLabel = "More") : "More" == b.userMoreLessLabel ? (b.userLimit = b.usersListNotifications.length,
                    b.userMoreLessLabel = "Less") : (b.userLimit = 5,
                    b.userMoreLessLabel = "More"),
                    b.$broadcast("render"),
                    b.$digest(),
                    f()
                }
                ,
                b.updateUserAndGrpSettings = function(c, d, e) {
                    var f, g, h = c.target, i = h.checked ? 1 : 0;
                    if ("D" === d.substring(d.length - 1, d.length) ? (d = d.substring(0, d.length - 1),
                    g = {
                        id: d,
                        desktop: i
                    },
                    f = "DESKTOP") : "E" === d.substring(d.length - 1, d.length) ? (d = d.substring(0, d.length - 1),
                    g = {
                        id: d,
                        email: i
                    },
                    f = "EMAIL") : "M" === d.substring(d.length - 1, d.length) ? (d = d.substring(0, d.length - 1),
                    g = {
                        id: d,
                        mobile: i
                    },
                    f = "MOBILE") : "N" === d.substring(d.length - 1, d.length) && (d = d.substring(0, d.length - 1),
                    g = {
                        id: d,
                        in_app: i
                    },
                    f = "IN_APP"),
                    e)
                        for (var j = 0; j < b.grpLimit; j++) {
                            if (b.groupsListNotifications[j].group_id == d && "DESKTOP" == f) {
                                b.groupsListNotifications[j].desktop = i;
                                break
                            }
                            if (b.groupsListNotifications[j].group_id == d && "EMAIL" == f) {
                                b.groupsListNotifications[j].email = i;
                                break
                            }
                            if (b.groupsListNotifications[j].group_id == d && "MOBILE" == f) {
                                b.groupsListNotifications[j].mobile = i;
                                break
                            }
                            if (b.groupsListNotifications[j].group_id == d && "IN_APP" == f) {
                                b.groupsListNotifications[j].in_app = i;
                                break
                            }
                        }
                    else
                        for (var j = 0; j < b.userLimit; j++) {
                            if (b.usersListNotifications[j].group_id == d && "DESKTOP" == f) {
                                b.usersListNotifications[j].desktop = i;
                                break
                            }
                            if (b.usersListNotifications[j].group_id == d && "EMAIL" == f) {
                                b.usersListNotifications[j].email = i;
                                break
                            }
                            if (b.usersListNotifications[j].group_id == d && "MOBILE" == f) {
                                b.usersListNotifications[j].mobile = i;
                                break
                            }
                            if (b.usersListNotifications[j].group_id == d && "IN_APP" == f) {
                                b.usersListNotifications[j].in_app = i;
                                break
                            }
                        }
                    b.saveSettingByName(a.GENERAL_SETTING___GROUP_SUBSCRIPTIONS, [g])
                }
            },
            controller: ["$scope", "$element", function(c, d) {
                function e() {
                    a.getSettingsForNotificationPage(!0).then(function(a) {
                        c.notification_arr = a,
                        c.initialized = !0,
                        c.$broadcast("render"),
                        setTimeout(function() {
                            c.registerClickEvent(),
                            c.updateView()
                        }, 0)
                    })
                }
                c.notification_arr = {},
                c.idPrefix = "noti_",
                c.selectedActivityType = "All Activity",
                c.NOTIFY_ONLY_WHEN_AWAY = c.idPrefix + a.GENERAL_SETTING___NOTIFY_ONLY_WHEN_AWAY,
                c.PLAY_CHAT_NOTIFICATION_SOUND = c.idPrefix + a.GENERAL_SETTING___PLAY_CHAT_NOTIFICATION_SOUND,
                c.NOTIFY_DIRECTS_AND_MENTIONS = c.idPrefix + a.GENERAL_SETTING___NOTIFY_DIRECTS_AND_MENTIONS,
                c.NOTIFY_COMMENTS_ON_MY_POSTS = c.idPrefix + a.GENERAL_SETTING___NOTIFY_COMMENTS_ON_MY_POSTS,
                c.NOTIFY_COMMENTS_ON_POSTS_I_COMMENT_ON = c.idPrefix + a.GENERAL_SETTING___NOTIFY_COMMENTS_ON_POSTS_I_COMMENT_ON,
                c.NOTIFY_COMMENTS_ON_DIRECTS = c.idPrefix + a.GENERAL_SETTING___NOTIFY_COMMENTS_ON_DIRECTS,
                c.NOTIFY_NEW_GROUP_SHARE = c.idPrefix + a.GENERAL_SETTING___NOTIFY_NEW_GROUP_SHARE,
                c.NOTIFY_INVITES_ACCEPTANCES = c.idPrefix + a.GENERAL_SETTING___NOTIFY_INVITES_ACCEPTANCES,
                c.NOTIFY_NEW_FOLLOWER = c.idPrefix + a.GENERAL_SETTING___NOTIFY_NEW_FOLLOWER,
                c.NOTIFY_INCOMING_CHATS = c.idPrefix + a.GENERAL_SETTING___NOTIFY_INCOMING_CHATS,
                c.NOTIFY_USER_STATUS_UPDATES = c.idPrefix + a.GENERAL_SETTING___NOTIFY_USER_STATUS_UPDATES,
                c.REQUEST_TO_JOIN_GROUP = c.idPrefix + a.GENERAL_SETTING___NOTIFY_GROUP_JOIN_REQUESTS,
                c.SEND_CONFIRMATION_FOR_EMAIL_POSTS = c.idPrefix + a.GENERAL_SETTING___SEND_CONFIRMATION_FOR_EMAIL_POSTS,
                c.DIGEST_SEND_FREQUENCY = c.idPrefix + a.GENERAL_SETTING___DIGEST_SEND_FREQUENCY,
                c.updateView = function(b) {
                    a.isBitONOFF(parseInt(c.notification_arr[a.GENERAL_SETTING___NOTIFY_ONLY_WHEN_AWAY]), 1) && $("#" + c.NOTIFY_ONLY_WHEN_AWAY).prop("checked", !0),
                    a.isBitONOFF(parseInt(c.notification_arr[a.GENERAL_SETTING___PLAY_CHAT_NOTIFICATION_SOUND]), 28) && $("#" + c.PLAY_CHAT_NOTIFICATION_SOUND).prop("checked", !0),
                    a.isBitONOFF(parseInt(c.notification_arr[a.GENERAL_SETTING___ENABLE_DESKTOP_NOTIFICATIONS]), 1) ? c.desktopNotificationVal = 1 : (b || $(".chkDesktop").trigger("click"),
                    c.desktopNotificationVal = 0),
                    a.isBitONOFF(parseInt(c.notification_arr[a.GENERAL_SETTING___ENABLE_EMAIL_NOTIFICATIONS]), 1) ? c.emailNotificationVal = 1 : (b || $(".chkEmail").trigger("click"),
                    c.emailNotificationVal = 0),
                    a.isBitONOFF(parseInt(c.notification_arr[a.GENERAL_SETTING___ENABLE_DEVICE_NOTIFICATIONS]), 1) ? c.mobileNotificationVal = 1 : (b || $(".chkMobile").trigger("click"),
                    c.mobileNotificationVal = 0),
                    a.isBitONOFF(parseInt(c.notification_arr[a.GENERAL_SETTING___ENABLE_IN_APP_NOTICATIONS]), 1) ? c.inAppNotificationVal = 1 : (b || $(".chkIPN").trigger("click"),
                    c.inAppNotificationVal = 0),
                    a.isBitONOFF(parseInt(c.notification_arr[a.GENERAL_SETTING___NOTIFY_UPDATES_IN_NEWS_FEED]), 4) ? (c.selectedActivityType = "All Activity <span class='caret'></span>",
                    c.showDesktopChk = !1,
                    c.$$phase || c.$digest(),
                    c.$broadcast("render")) : (c.selectedActivityType = "Specific activity (Customize) <span class='caret'></span>",
                    c.showDesktopChk = !0,
                    c.$broadcast("render"),
                    c.$$phase || c.$digest()),
                    a.isBitONOFF(parseInt(c.notification_arr[a.GENERAL_SETTING___NOTIFY_DIRECTS_AND_MENTIONS]), a.DESKTOP) && $("#" + c.NOTIFY_DIRECTS_AND_MENTIONS + "D").prop("checked", !0),
                    a.isBitONOFF(parseInt(c.notification_arr[a.GENERAL_SETTING___NOTIFY_DIRECTS_AND_MENTIONS]), a.EMAIL) && $("#" + c.NOTIFY_DIRECTS_AND_MENTIONS + "E").prop("checked", !0),
                    a.isBitONOFF(parseInt(c.notification_arr[a.GENERAL_SETTING___NOTIFY_DIRECTS_AND_MENTIONS]), a.MOBILE) && $("#" + c.NOTIFY_DIRECTS_AND_MENTIONS + "M").prop("checked", !0),
                    a.isBitONOFF(parseInt(c.notification_arr[a.GENERAL_SETTING___NOTIFY_DIRECTS_AND_MENTIONS]), a.NOTIFICATION_CENTER) && $("#" + c.NOTIFY_DIRECTS_AND_MENTIONS + "N").prop("checked", !0),
                    a.isBitONOFF(parseInt(c.notification_arr[a.GENERAL_SETTING___NOTIFY_COMMENTS_ON_MY_POSTS]), a.DESKTOP) && $("#" + c.NOTIFY_COMMENTS_ON_MY_POSTS + "D").prop("checked", !0),
                    a.isBitONOFF(parseInt(c.notification_arr[a.GENERAL_SETTING___NOTIFY_COMMENTS_ON_MY_POSTS]), a.EMAIL) && $("#" + c.NOTIFY_COMMENTS_ON_MY_POSTS + "E").prop("checked", !0),
                    a.isBitONOFF(parseInt(c.notification_arr[a.GENERAL_SETTING___NOTIFY_COMMENTS_ON_MY_POSTS]), a.MOBILE) && $("#" + c.NOTIFY_COMMENTS_ON_MY_POSTS + "M").prop("checked", !0),
                    a.isBitONOFF(parseInt(c.notification_arr[a.GENERAL_SETTING___NOTIFY_COMMENTS_ON_MY_POSTS]), a.NOTIFICATION_CENTER) && $("#" + c.NOTIFY_COMMENTS_ON_MY_POSTS + "N").prop("checked", !0),
                    a.isBitONOFF(parseInt(c.notification_arr[a.GENERAL_SETTING___NOTIFY_COMMENTS_ON_POSTS_I_COMMENT_ON]), a.DESKTOP) && $("#" + c.NOTIFY_COMMENTS_ON_POSTS_I_COMMENT_ON + "D").prop("checked", !0),
                    a.isBitONOFF(parseInt(c.notification_arr[a.GENERAL_SETTING___NOTIFY_COMMENTS_ON_POSTS_I_COMMENT_ON]), a.EMAIL) && $("#" + c.NOTIFY_COMMENTS_ON_POSTS_I_COMMENT_ON + "E").prop("checked", !0),
                    a.isBitONOFF(parseInt(c.notification_arr[a.GENERAL_SETTING___NOTIFY_COMMENTS_ON_POSTS_I_COMMENT_ON]), a.MOBILE) && $("#" + c.NOTIFY_COMMENTS_ON_POSTS_I_COMMENT_ON + "M").prop("checked", !0),
                    a.isBitONOFF(parseInt(c.notification_arr[a.GENERAL_SETTING___NOTIFY_COMMENTS_ON_POSTS_I_COMMENT_ON]), a.NOTIFICATION_CENTER) && $("#" + c.NOTIFY_COMMENTS_ON_POSTS_I_COMMENT_ON + "N").prop("checked", !0),
                    a.isBitONOFF(parseInt(c.notification_arr[a.GENERAL_SETTING___NOTIFY_COMMENTS_ON_DIRECTS]), a.DESKTOP) && $("#" + c.NOTIFY_COMMENTS_ON_DIRECTS + "D").prop("checked", !0),
                    a.isBitONOFF(parseInt(c.notification_arr[a.GENERAL_SETTING___NOTIFY_COMMENTS_ON_DIRECTS]), a.EMAIL) && $("#" + c.NOTIFY_COMMENTS_ON_DIRECTS + "E").prop("checked", !0),
                    a.isBitONOFF(parseInt(c.notification_arr[a.GENERAL_SETTING___NOTIFY_COMMENTS_ON_DIRECTS]), a.MOBILE) && $("#" + c.NOTIFY_COMMENTS_ON_DIRECTS + "M").prop("checked", !0),
                    a.isBitONOFF(parseInt(c.notification_arr[a.GENERAL_SETTING___NOTIFY_COMMENTS_ON_DIRECTS]), a.NOTIFICATION_CENTER) && $("#" + c.NOTIFY_COMMENTS_ON_DIRECTS + "N").prop("checked", !0),
                    a.isBitONOFF(parseInt(c.notification_arr[a.GENERAL_SETTING___NOTIFY_NEW_GROUP_SHARE]), a.DESKTOP) && $("#" + c.NOTIFY_NEW_GROUP_SHARE + "D").prop("checked", !0),
                    a.isBitONOFF(parseInt(c.notification_arr[a.GENERAL_SETTING___NOTIFY_NEW_GROUP_SHARE]), a.EMAIL) && $("#" + c.NOTIFY_NEW_GROUP_SHARE + "E").prop("checked", !0),
                    a.isBitONOFF(parseInt(c.notification_arr[a.GENERAL_SETTING___NOTIFY_NEW_GROUP_SHARE]), a.NOTIFICATION_CENTER) && $("#" + c.NOTIFY_NEW_GROUP_SHARE + "N").prop("checked", !0),
                    a.isBitONOFF(parseInt(c.notification_arr[a.GENERAL_SETTING___NOTIFY_INVITES_ACCEPTANCES]), a.EMAIL) && $("#" + c.NOTIFY_INVITES_ACCEPTANCES + "E").prop("checked", !0),
                    a.isBitONOFF(parseInt(c.notification_arr[a.GENERAL_SETTING___NOTIFY_NEW_FOLLOWER]), a.DESKTOP) && $("#" + c.NOTIFY_NEW_FOLLOWER + "D").prop("checked", !0),
                    a.isBitONOFF(parseInt(c.notification_arr[a.GENERAL_SETTING___NOTIFY_NEW_FOLLOWER]), a.EMAIL) && $("#" + c.NOTIFY_NEW_FOLLOWER + "E").prop("checked", !0),
                    a.isBitONOFF(parseInt(c.notification_arr[a.GENERAL_SETTING___NOTIFY_NEW_FOLLOWER]), a.NOTIFICATION_CENTER) && $("#" + c.NOTIFY_NEW_FOLLOWER + "N").prop("checked", !0),
                    a.isBitONOFF(parseInt(c.notification_arr[a.GENERAL_SETTING___NOTIFY_INCOMING_CHATS]), a.DESKTOP) && $("#" + c.NOTIFY_INCOMING_CHATS + "D").prop("checked", !0),
                    a.isBitONOFF(parseInt(c.notification_arr[a.GENERAL_SETTING___NOTIFY_INCOMING_CHATS]), a.MOBILE) && $("#" + c.NOTIFY_INCOMING_CHATS + "M").prop("checked", !0),
                    a.isBitONOFF(parseInt(c.notification_arr[a.GENERAL_SETTING___NOTIFY_USER_STATUS_UPDATES]), a.DESKTOP) && $("#" + c.NOTIFY_USER_STATUS_UPDATES + "D").prop("checked", !0),
                    a.isBitONOFF(parseInt(c.notification_arr[a.GENERAL_SETTING___NOTIFY_GROUP_JOIN_REQUESTS]), a.DESKTOP) && $("#" + c.REQUEST_TO_JOIN_GROUP + "D").prop("checked", !0),
                    a.isBitONOFF(parseInt(c.notification_arr[a.GENERAL_SETTING___NOTIFY_GROUP_JOIN_REQUESTS]), a.EMAIL) && $("#" + c.REQUEST_TO_JOIN_GROUP + "E").prop("checked", !0),
                    a.isBitONOFF(parseInt(c.notification_arr[a.GENERAL_SETTING___NOTIFY_GROUP_JOIN_REQUESTS]), a.NOTIFICATION_CENTER) && $("#" + c.REQUEST_TO_JOIN_GROUP + "N").prop("checked", !0),
                    a.isBitONOFF(parseInt(c.notification_arr[a.GENERAL_SETTING___SEND_CONFIRMATION_FOR_EMAIL_POSTS]), a.EMAIL) && $("#" + c.SEND_CONFIRMATION_FOR_EMAIL_POSTS + "E").prop("checked", !0),
                    "NEVER" == c.notification_arr[a.GENERAL_SETTING___DIGEST_SEND_FREQUENCY] ? $("#" + c.DIGEST_SEND_FREQUENCY + "N").prop("checked", !0) : "DAILY" == c.notification_arr[a.GENERAL_SETTING___DIGEST_SEND_FREQUENCY] ? $("#" + c.DIGEST_SEND_FREQUENCY + "D").prop("checked", !0) : $("#" + c.DIGEST_SEND_FREQUENCY + "W").prop("checked", !0),
                    c.groupsListNotifications = c.notification_arr[a.GENERAL_SETTING___REGULAR_GROUPS_SETTINGS],
                    c.usersListNotifications = c.notification_arr[a.GENERAL_SETTING___PROFILE_GROUPS_SETTINGS]
                }
                ,
                e(),
                c.$broadcast("render"),
                c.saveSettingByName = function(c, d) {
                    a.saveSettingByName(c, d).then(function(a) {
                        200 == a.status && b.showBanner("Your settings have been saved.", !1, !1, null )
                    })
                }
                ,
                c.$on("$destroy", function() {})
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvSettingLeftPanel", ["config", "AppLinks", "$location", "userInfo", "accountInfo", function(a, b, c, d, e) {
        return {
            link: function(a, b, c) {},
            controller: ["$scope", function(f) {
                function g() {
                    var a = b.newResourceLink("12", [{
                        type: "9",
                        uid: 0
                    }, {
                        type: "notificationsSettings",
                        uid: 0
                    }], null , "Notification Settings")
                      , d = b.linkToUrl(a, !0);
                    c.url(d.slice(1))
                }
                function h() {
                    var a = b.newResourceLink("12", [{
                        type: "9",
                        uid: 0
                    }, {
                        type: "myAccountSettings",
                        uid: 0
                    }], null , "My account settings")
                      , d = b.linkToUrl(a, !0);
                    c.url(d.slice(1))
                }
                function i() {
                    var a = b.newResourceLink("12", [{
                        type: "9",
                        uid: 0
                    }, {
                        type: f.NETWORK_INFO_VIEW,
                        uid: 0
                    }], null , "Network Information")
                      , d = b.linkToUrl(a, !0);
                    c.url(d.slice(1))
                }
                function j() {
                    var a = b.newResourceLink("12", [{
                        type: "9",
                        uid: 0
                    }, {
                        type: "customizeFeedSettings",
                        uid: 0
                    }], null , "Customize Feed")
                      , d = b.linkToUrl(a, !0);
                    c.url(d.slice(1))
                }
                function k() {
                    var a = b.newResourceLink("12", [{
                        type: "9",
                        uid: 0
                    }, {
                        type: "ssoSettings",
                        uid: 0
                    }], null , "Single Sign On Settings")
                      , d = b.linkToUrl(a, !0);
                    c.url(d.slice(1))
                }
                function l() {
                    var a = b.newResourceLink("12", [{
                        type: "9",
                        uid: 0
                    }, {
                        type: "manageUsers",
                        uid: 0
                    }], null , "Manage Users")
                      , d = b.linkToUrl(a, !0);
                    c.url(d.slice(1))
                }
                function m() {
                    var a = b.newResourceLink("12", [{
                        type: "9",
                        uid: 0
                    }, {
                        type: "monitorContent",
                        uid: 0
                    }], null , "Monitor Content")
                      , d = b.linkToUrl(a, !0);
                    c.url(d.slice(1))
                }
                function n() {
                    var a = b.newResourceLink("12", [{
                        type: "9",
                        uid: 0
                    }, {
                        type: "security",
                        uid: 0
                    }], null , "Manage Security")
                      , d = b.linkToUrl(a, !0);
                    c.url(d.slice(1))
                }
                function o() {
                    var a = b.newResourceLink("12", [{
                        type: "9",
                        uid: 0
                    }, {
                        type: "billing",
                        uid: 0
                    }], null , "Billing")
                      , d = b.linkToUrl(a, !0);
                    c.url(d.slice(1))
                }
                function p() {
                    var a = b.newResourceLink("12", [{
                        type: "9",
                        uid: 0
                    }, {
                        type: "manageGroups",
                        uid: 0
                    }], null , "Manage Groups")
                      , d = b.linkToUrl(a, !0);
                    c.url(d.slice(1))
                }
                f.ACCOUNT_SETTINGS_VIEW = "myAccountSettings",
                f.NOTIFICATION_VIEW = "notificationsSettings",
                f.CUSTOMIZE_FEED_VIEW = "customizeFeedSettings",
                f.NETWORK_INFO_VIEW = "networkInformation",
                f.SSO_SETTINGS_VIEW = "ssoSettings",
                f.MANAGE_USERS_VIEW = "manageUsers",
                f.MANAGE_GROUPS_VIEW = "manageGroups",
                f.BILLING_VIEW = "billing",
                f.MONITOR_CONTENT_VIEW = "monitorContent",
                f.SECURITY_VIEW = "security",
                f.isAdmin = d.isAdmin(),
                f.isGuest = d.isGuestUser(),
                f.accountLevel = e.getAccountLevel(),
                f.adminSettingsFlexURL = a.FLEX_APP_URL + b.linkToUrl(b.newActionLink_flexFormat("manageAccount", "Manage Network"), !0),
                f.toggleView = function(a) {
                    f.View = a,
                    a == f.NOTIFICATION_VIEW ? g() : a == f.ACCOUNT_SETTINGS_VIEW ? h() : a == f.CUSTOMIZE_FEED_VIEW ? j() : a == f.NETWORK_INFO_VIEW ? i() : a == f.SSO_SETTINGS_VIEW ? k() : a == f.MANAGE_USERS_VIEW ? l() : a == f.MONITOR_CONTENT_VIEW ? m() : a == f.SECURITY_VIEW ? n() : a == f.BILLING_VIEW ? o() : a == f.MANAGE_GROUPS_VIEW && p(),
                    f.$broadcast("render")
                }
                ,
                f.$on("setSettingView", function(a, b) {
                    f.View = b,
                    f.$broadcast("render")
                }),
                f.$on("$destroy", function() {}),
                f.$broadcast("render")
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvSettings", ["utils", "accountInfo", "billingService", "AppLinks", "$location", "config", function(a, b, c, d, e, f) {
        return {
            restrict: "E",
            scope: !1,
            templateUrl: "settings/templates/cnvSettings.tpl.html",
            link: function(a, b, c) {},
            controller: ["$scope", "$element", function(a, g) {
                function h() {
                    j()
                }
                function i() {
                    var b;
                    l.resourceLink.resourcePath.hierarchy.length > 1 ? (b = l.resourceLink.resourcePath.hierarchy[1].type,
                    "myAccountSettings" === b ? a.toggleSelectedView(a.ACCOUNT_SETTINGS_VIEW) : "notificationsSettings" === b ? a.toggleSelectedView(a.NOTIFICATION_VIEW) : "customizeFeedSettings" === b ? a.toggleSelectedView(a.CUSTOMIZE_FEED_VIEW) : "networkInformation" === b ? a.toggleSelectedView(a.NETWORK_INFO_VIEW) : "ssoSettings" === b ? a.toggleSelectedView(a.SSO_SETTINGS_VIEW) : b === a.MANAGE_USERS_VIEW ? a.toggleSelectedView(a.MANAGE_USERS_VIEW) : b === a.MONITOR_CONTENT_VIEW ? a.toggleSelectedView(a.MONITOR_CONTENT_VIEW) : b == a.SECURITY_VIEW ? a.toggleSelectedView(a.SECURITY_VIEW) : b == a.BILLING_VIEW ? a.toggleSelectedView(a.BILLING_VIEW) : b == a.MANAGE_GROUPS_VIEW && a.toggleSelectedView(a.MANAGE_GROUPS_VIEW)) : a.toggleSelectedView(a.ACCOUNT_SETTINGS_VIEW)
                }
                function j() {
                    var b = c.getBillingInfo();
                    b.then(function(b, c) {
                        a.billingInfo = b.data,
                        a.$broadcast("render")
                    })
                }
                function k() {
                    var a = d.newResourceLink("19", [{
                        type: "17",
                        uid: 0
                    }], null , "Upgrade");
                    return d.linkToUrl(a, !0)
                }
                var l = a.tab
                  , m = l.appContCtrl.appCtrl;
                m.navigate = i,
                m.initialized = !0,
                a.ACCOUNT_SETTINGS_VIEW = "myAccountSettings",
                a.PROFILE_VIEW = "profileSettings",
                a.CUSTOMIZE_FEED_VIEW = "customizeFeedSettings",
                a.NOTIFICATION_VIEW = "notificationsSettings",
                a.INTEGRATIONS_VIEW = "integrationSettings",
                a.NETWORK_INFO_VIEW = "networkInformation",
                a.SSO_SETTINGS_VIEW = "ssoSettings",
                a.MANAGE_USERS_VIEW = "manageUsers",
                a.MANAGE_GROUPS_VIEW = "manageGroups",
                a.BILLING_VIEW = "billing",
                a.MONITOR_CONTENT_VIEW = "monitorContent",
                a.SECURITY_VIEW = "security",
                a.accountInfo = b,
                a.config = f,
                a.toggleSelectedView = function(b) {
                    a.selectedView = b,
                    a.$broadcast("render"),
                    setTimeout(function() {
                        a.$broadcast("setSettingView", a.selectedView)
                    }, 0)
                }
                ,
                a.navigateToUpgradeView = function() {
                    e.url(k().slice(1))
                }
                ,
                i(),
                h()
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvSettingsBilling", ["billingService", "$sce", "config", "userInfo", "accountInfo", "$location", function(a, b, c, d, e, f) {
        return {
            restrict: "A",
            scope: !0,
            link: function(g, h, i) {
                function j() {
                    return d.isGuestUser() || "STARTER" !== e.getAccountLevel() && !d.isAdmin() ? void f.url("/feed") : (g.currentTab = g.GENERAL_TAB_VIEW,
                    g.billingInfo ? (l(),
                    m(),
                    n()) : k(),
                    void g.$broadcast("render"))
                }
                function k() {
                    var b = a.getBillingInfo();
                    b.then(function(a, b) {
                        g.billingInfo = a.data,
                        l(),
                        m(),
                        n(),
                        g.$broadcast("render")
                    })
                }
                function l() {
                    var b = a.getUpdatePaymentUrl();
                    b.then(function(a, b) {
                        g.updatePaymentUrl = a.data
                    })
                }
                function m() {
                    var b = a.getActivatedUsersNum(g.billingInfo.subscription_id);
                    b.then(function(a, b) {
                        a.data && (g.activatedUsersNum = a.data.num_activated_users,
                        g.$broadcast("render"))
                    })
                }
                function n() {
                    var b = a.getBillingHistory(g.billingInfo.subscription_id);
                    b.then(function(a) {
                        a.data && (g.billingHistory = a.data)
                    })
                }
                g.GENERAL_TAB_VIEW = "generalTabView",
                g.UPDATE_PAYMENT_TAB_VIEW = "updatePaymentTabView",
                g.BILLING_HISTORY_TAB_VIEW = "billingHistoryTabView",
                g.config = c,
                g.trustSrc = function(a) {
                    return b.trustAsResourceUrl(a)
                }
                ,
                g.changeTab = function(a) {
                    g.currentTab = a,
                    g.$broadcast("render")
                }
                ,
                j()
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvSettingsManageGroups", ["$q", "adminService", "bannerService", "userInfo", "accountInfo", "$window", "$location", "alertsService", "Groups", function(a, b, c, d, e, f, g, h, i) {
        return {
            restrict: "A",
            scope: !0,
            link: function(a, b, c) {
                function f() {
                    return d.isGuestUser() || "STARTER" !== e.getAccountLevel() && !d.isAdmin() ? void g.url("/feed") : (j(),
                    a.currentTab = a.GROUP_CREATION_TAB_VIEW,
                    void a.$broadcast("render"))
                }
                function j() {
                    var b = i.getCompanyGroups();
                    b.then(function(b) {
                        a.companyGroups = b.data.data
                    })
                }
                a.GROUP_CREATION_TAB_VIEW = "groupCreationTabView";
                var k = 3;
                a.companyGroupsLimit = k,
                a.toggleCompanyGroupsList = function(b) {
                    b ? a.companyGroupsLimit = a.companyGroups.length : a.companyGroupsLimit = k
                }
                ,
                a.openCreateGroupModal = function() {
                    var a = "home/components/createGroupWidget/createGroupModal.tpl.html"
                      , b = "createGroupModalCtrl"
                      , c = "group-create-details"
                      , d = {
                        createPublic: function() {
                            return !0
                        },
                        createPrivate: function() {
                            return !1
                        },
                        sourceGS: function() {
                            return !1
                        }
                    }
                      , e = h.customModal(a, b, d, c);
                    e.result.then(function() {
                        j()
                    })
                }
                ,
                f()
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvSettingsManageUsers", ["$q", "adminService", "bannerService", "userInfo", "accountInfo", "$window", "$location", function(a, b, c, d, e, f, g) {
        return {
            restrict: "A",
            scope: !0,
            link: function(h, i, j) {
                function k() {
                    return d.isGuestUser() || "STARTER" !== e.getAccountLevel() && !d.isAdmin() ? void g.url("/feed") : (h.currentTab = h.GENERAL_TAB_VIEW,
                    l(),
                    m(),
                    void h.$broadcast("render"))
                }
                function l() {
                    var a = b.getGeneralUsersInfo();
                    a.then(function(a, b) {
                        a.data && (1 === a.data.auto_follow_teammates_when_they_join_networks && i.find("#autoFollow").prop("checked", !0),
                        -1 == a.data.users_cap ? h.networkCapLimit = "Unlimited" : h.networkCapLimit = a.data.users_cap,
                        h.originalNetworkCap = h.networkCapLimit)
                    })
                }
                function m() {
                    var a = b.getBlockedEmailsOrDomains();
                    a.then(function(a, b) {
                        a.data && (h.blockedUsers = a.data)
                    })
                }
                var n = 4;
                h.GENERAL_TAB_VIEW = "generalTabView",
                h.USER_PRIVILEGES_TAB_VIEW = "userPrivilegesTabView",
                h.BLOCK_USER_TAB_VIEW = "blockUserTabView",
                h.usersArr = [],
                h.transferUserArr = [],
                h.userPass = "",
                h.blockedUsers = [],
                h.userInfo = d,
                h.networkCapLimit = null ,
                h.blockUsersDomainModel = null ,
                h.networkCapAlerts = [],
                h.originalNetworkCap = null ,
                h.ownershipAlerts = [],
                h.blockDomainAlerts = [],
                h.changeTab = function(a) {
                    h.currentTab = a,
                    h.$broadcast("render")
                }
                ,
                h.followCheckboxChange = function() {
                    var a;
                    a = i.find("#autoFollow").is(":checked") ? 1 : 0;
                    var d = b.autoFollowTeammates(a);
                    d.then(function(a, b) {
                        c.showBanner("Settings Saved", !1, !1, null )
                    })
                }
                ,
                h.showHideCapDropdown = function(a) {
                    h.showCapDropdown = a
                }
                ,
                h.changeNetworkCap = function(a) {
                    h.networkCapAlerts = [];
                    var d;
                    if (a) {
                        if ("unlimited" === h.networkCapLimit.toLowerCase())
                            return;
                        h.networkCapLimit = "Unlimited"
                    }
                    if ("string" == typeof h.networkCapLimit && "unlimited" === h.networkCapLimit.toLowerCase())
                        d = -1;
                    else {
                        if (!(Number(h.networkCapLimit) > 0))
                            return void h.networkCapAlerts.push({
                                type: "danger",
                                msg: "Incorrect network cap value"
                            });
                        d = Number(h.networkCapLimit)
                    }
                    h.originalNetworkCap = h.networkCapLimit;
                    var e = b.changeNetworkCap(d);
                    e.then(function(a, b) {
                        1 == a.type ? c.showBanner("Settings Saved", !1, !1, null ) : a.hasOwnProperty("message") && h.networkCapAlerts.push({
                            type: "danger",
                            msg: a.message
                        })
                    })
                }
                ,
                h.removeNetworkCapAlert = function(a) {
                    h.networkCapAlerts.splice(a, 1)
                }
                ,
                h.onItemAddedInTransferOwnership = function(a) {
                    h.transferUserArr = [],
                    h.transferUserArr.push(a),
                    h.$$phase || h.$digest()
                }
                ,
                h.getAutoCompleteUserItemsForTransferOwnership = function(c, d) {
                    var e = a.defer()
                      , f = b.getUsers("transfer_ownership", c);
                    return f.then(function(a, b) {
                        for (var c = [], d = a.data.length > n ? n : a.data.length, f = 0; d > f; f++) {
                            var g = a.data[f];
                            c.push({
                                classes: "user",
                                desclabel: g.email,
                                formatteddesclabel: g.email,
                                formattedlabel: g.first_name + " " + g.last_name,
                                id: g.user_id,
                                label: g.first_name + " " + g.last_name,
                                type: "USER",
                                imgurl: ""
                            })
                        }
                        e.resolve(c)
                    }),
                    e.promise
                }
                ,
                h.transferOwnership = function() {
                    h.ownershipAlerts = [];
                    var a = i.find("#userPass");
                    if (h.transferUserArr.length > 0 && "" != a.val()) {
                        var d = b.transferOwnership(h.transferUserArr[0].id, a.val());
                        d.then(function(b, d) {
                            1 == b.type ? (c.showBanner("Owner transfership successful", !1, !0, null ),
                            g.path("/feed"),
                            f.location.reload()) : b.hasOwnProperty("message") && h.ownershipAlerts.push({
                                type: "danger",
                                msg: b.message
                            }),
                            h.transferUserArr = [],
                            h.userPass = null ,
                            a.val("")
                        })
                    }
                }
                ,
                h.removeOwnershipAlert = function(a) {
                    h.ownershipAlerts.splice(a, 1)
                }
                ,
                h.blockEmailOrDomain = function() {
                    h.blockDomainAlerts = [];
                    var a = b.blockEmailOrDomain(h.blockUsersDomainModel);
                    a.then(function(a, b) {
                        1 == a.type ? (m(),
                        c.showBanner("Settings saved", !1, !0, null )) : a.hasOwnProperty("message") && h.blockDomainAlerts.push({
                            type: "danger",
                            msg: a.message
                        })
                    }),
                    h.blockUsersDomainModel = null 
                }
                ,
                h.removeDomainAlert = function(a) {
                    h.blockDomainAlerts.splice(a, 1)
                }
                ,
                h.unblockEmailOrDomain = function(a) {
                    var d = b.unblockEmailOrDomain(a);
                    d.then(function(a, b) {
                        m(),
                        c.showBanner("Settings saved", !1, !0, null )
                    })
                }
                ,
                k()
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvSettingsMonitorContent", ["adminService", "Groups", "Users", "$q", "$location", "userInfo", "bannerService", "accountInfo", "alertsService", function(a, b, c, d, e, f, g, h, i) {
        return {
            restrict: "A",
            scope: !0,
            link: function(b, c, d) {
                function j() {
                    return f.isGuestUser() || "STARTER" !== h.getAccountLevel() && !f.isAdmin() ? void e.url("/feed") : (b.currentTab = b.GENERAL_TAB_VIEW,
                    b.isAdminMode = f.isAdminMode(),
                    k(),
                    void b.$broadcast("render"))
                }
                function k() {
                    var c = a.getFeedPinItems();
                    c.then(function(a) {
                        b.pinItems = a.data,
                        b.$broadcast("render")
                    })
                }
                b.GENERAL_TAB_VIEW = "generalTabView",
                b.CONTENT_PREFERENCES_VIEW = "contentPreferencesView",
                b.RESET_NETWORK_TAB_VIEW = "resetNetworkTabView",
                b.userInfo = f,
                b.changeTab = function(a) {
                    b.currentTab = a,
                    b.$broadcast("render")
                }
                ,
                b.switchToAdminMode = function() {
                    var c = a.switchToAdminMode();
                    g.showBanner_promise(c, "Switching to Admin Mode", "Switched to Admin Mode", "Error Switching to Admin Mode. Please try again.", !1, !1),
                    c.then(function() {
                        e.url("/feed"),
                        b.$emit("refetchFeed")
                    })
                }
                ,
                b.exitAdminMode = function() {
                    var c = a.exitAdminMode();
                    g.showBanner_promise(c, "Exiting Admin Mode", null , "Error exiting admin mode. Please try again.", !1, !1),
                    c.then(function() {
                        e.url("/feed"),
                        b.$emit("refetchFeed")
                    })
                }
                ,
                b.pinContent = function(b) {
                    var c = {
                        resource_name: function() {
                            return b && b.resource_name || ""
                        },
                        resource_url: function() {
                            return b && b.url || ""
                        },
                        provided_desc: function() {
                            return "Paste a link to a Convo post or an external website to pin it to the top of the Feed."
                        },
                        title: function() {
                            return "Pin content to Feed"
                        },
                        btnTitle: function() {
                            return "Pin to feed"
                        },
                        source: function() {
                            return "no_suggestion"
                        }
                    }
                      , d = "home/groupView/rightPanelWidgets/cnvAddPinContentModal.tpl.html"
                      , e = "cnvAddPinContentModalCtrl"
                      , f = i.customModal(d, e, c);
                    f.result.then(function(c) {
                        var d = a.pinContentToFeed(c, b && b.id ? b.id : null );
                        g.showBanner_promise(d, "Saving settings", null , null , !1, !0),
                        d.then(function(a) {
                            k()
                        })
                    })
                }
                ,
                b.removePinItem = function(b) {
                    var c = a.unpinItemFromFeed(b);
                    c.then(function(a) {
                        k()
                    }),
                    g.showBanner_promise(c, "Saving settings", null , null , !1, !0)
                }
                ,
                f.on("userInfo:adminModeChanged", function() {
                    b.isAdminMode = f.isAdminMode(),
                    b.$broadcast("render")
                }),
                j()
            }
        }
    }
    ]),
    b.module("convoApp").directive("cnvSettingsSecurity", ["adminService", "bannerService", "userInfo", "$location", "accountInfo", function(a, b, c, d, e) {
        return {
            restrict: "A",
            scope: !0,
            link: function(f, g, h) {
                function i() {
                    return c.isGuestUser() || "STARTER" !== e.getAccountLevel() && !c.isAdmin() ? void d.url("/feed") : (f.currentTab = f.GENERAL_TAB_VIEW,
                    j(),
                    void f.$broadcast("render"))
                }
                function j() {
                    var b = a.getIPRanges();
                    b.then(function(a, b) {
                        a.data && (f.ipRangeList = a.data),
                        f.$broadcast("render")
                    })
                }
                f.GENERAL_TAB_VIEW = "generalTabView",
                f.ipRangeList = [],
                f.alerts = [],
                f.changeTab = function(a) {
                    f.currentTab = a,
                    f.$broadcast("render")
                }
                ,
                f.addIpRange = function() {
                    var c = /((^|\.)((25[0-5])|(2[0-4]\d)|(1\d\d)|([1-9]?\d))){4}$/;
                    if (f.alerts = [],
                    !c.test(f.ipInputs.fromIp))
                        return void f.alerts.push({
                            type: "danger",
                            msg: "The format you entered is incorrect"
                        });
                    if (f.ipInputs.toIp && !c.test(f.ipInputs.toIp))
                        return void f.alerts.push({
                            type: "danger",
                            msg: "The format you entered is incorrect"
                        });
                    var d = a.addIPRange(f.ipInputs.fromIp, f.ipInputs.toIp);
                    d.then(function(a, c) {
                        1 == a.type && -1 == a.errorCode ? (b.showBanner("Settings saved", !1, !1, null ),
                        j()) : f.alerts.push({
                            type: "danger",
                            msg: a.message
                        })
                    }),
                    f.ipInputs.fromIp = null ,
                    f.ipInputs.toIp = null 
                }
                ,
                f.closeAlert = function(a) {
                    f.alerts.splice(a, 1)
                }
                ,
                f.removeIpRange = function(b) {
                    var c = a.removeIPRange(b.ip_range_start, b.ip_range_end);
                    c.then(j)
                }
                ,
                i()
            },
            controller: ["$scope", function(a) {
                a.ipInputs = {
                    fromIp: null ,
                    toIp: null 
                }
            }
            ]
        }
    }
    ]),
    b.module("convoApp").directive("cnvSingleSignOnSettings", [function() {
        return {
            restrict: "E",
            templateUrl: "settings/templates/cnvSingleSignOnSettings.tpl.html",
            link: function(a, b, c) {
                a.updateSSO_settingOptions = function(c) {
                    var d = c.target
                      , e = c.target.id
                      , f = d.checked;
                    f && ("enable_sso" == e ? ($("#disable_sso", b).prop("checked", !1),
                    a.ssoSettings.sso_enabled = 1) : "disable_sso" == e ? ($("#enable_sso", b).prop("checked", !1),
                    a.ssoSettings.sso_enabled = 0) : "identity_name" == e ? ($("#identity_attribute", b).prop("checked", !1),
                    a.samlIdentityLocationAttrElement = 0,
                    a.ssoSettings.email_attribute_name = "") : "identity_attribute" == e && ($("#identity_name", b).prop("checked", !1),
                    a.samlIdentityLocationAttrElement = 1,
                    a.ssoSettings.email_attribute_name = a.originalSSOSettings.email_attribute_name,
                    a.$broadcast("render"),
                    $(".ident_email_attribute_name", b).focus().select()),
                    a.$broadcast("render"))
                }
                ,
                a.setSSO_settingOptions = function() {
                    a.ssoSettings.sso_enabled ? $("#enable_sso", b).prop("checked", !0) : $("#disable_sso", b).prop("checked", !0),
                    a.ssoSettings.email_attribute_name.length ? ($("#identity_attribute", b).prop("checked", !0),
                    a.samlIdentityLocationAttrElement = 1) : ($("#identity_name", b).prop("checked", !0),
                    a.samlIdentityLocationAttrElement = 0),
                    a.$broadcast("render")
                }
                ,
                a.animateToTop = function() {
                    setTimeout(function() {
                        $("body").animate({
                            scrollTop: 0
                        }, 1e3)
                    }, 0)
                }
                ,
                a.openCopyLinkField = function(a) {
                    var b = $(a.target).closest(".grey-block").find("input[type='text']");
                    b.css("display", "initial"),
                    $(a.target).css("display", "none"),
                    b.focus().select()
                }
                ,
                a.closeCopyLinkField = function(a) {
                    var b = $(a.target).closest(".grey-block").find("p.link");
                    b.css("display", "initial"),
                    $(a.target).css("display", "none")
                }
            },
            controller: ["$scope", "utils", "settingsService", "bannerService", "alertsService", "config", function(a, b, c, d, e, f) {
                function g() {
                    c.getGeneralSettings(!0).then(function(b) {
                        a.originalSSOSettings = b.sso_settings,
                        a.ssoSettings.sso_enabled = parseInt(b.sso_settings.sso_enabled),
                        a.ssoSettings.xml = b.sso_settings.xml || "",
                        a.ssoSettings.ASSERTION_CONSUMER_SERVICE_URL = b.sso_settings.ASSERTION_CONSUMER_SERVICE_URL,
                        a.ssoSettings.ENTITY_ID = b.sso_settings.ENTITY_ID,
                        a.ssoSettings.RECIPIENT_URL = b.sso_settings.RECIPIENT_URL,
                        a.ssoSettings.RELAY_STATE_URL = b.sso_settings.RELAY_STATE_URL,
                        a.ssoSettings.SINGLE_LOGOUT_SERVICE_URL = b.sso_settings.SINGLE_LOGOUT_SERVICE_URL,
                        a.ssoSettings.SP_META_DATA_URL = b.sso_settings.SP_META_DATA_URL,
                        a.ssoSettings.email_attribute_name = b.sso_settings.email_attribute_name || "",
                        a.ssoSettings.revision = b.sso_settings.revision,
                        a.ssoSettings.is_sso_optional = b.sso_settings.is_sso_optional,
                        a.isInitialized = !0,
                        a.$broadcast("render"),
                        a.setSSO_settingOptions()
                    })
                }
                function h(a) {
                    c.sendSSOEmail(a)
                }
                function i() {
                    e.alertModal("Save changes", "You have turned off SSO for this network. An email will be sent to teammates informing them they will need to use their Convo account and password.", "Ok", function() {
                        h(!1),
                        a.updateSSO_settings(null , !0)
                    }, !0, !0)
                }
                function j() {
                    e.promptModal("Save changes", "You have turned on Required SSO mode for this network. Do you want to send an email to teammates informing them they will need to use SSO to sign in?", function() {
                        h(!0),
                        a.updateSSO_settings(null , !0)
                    }, function() {
                        a.updateSSO_settings(null , !0)
                    }, "Send Email", "No", null , !0, !1)
                }
                function k() {
                    g()
                }
                a.isInitialized = !1,
                a.isUpdatingSettings = !1,
                a.config = f;
                var l = a.tab.appContCtrl.appCtrl;
                l.okToClose = function(b) {
                    return a.isAnySettingUpdated() && !a.navigateAwayForcefully ? {
                        promptMessage: "You've made some changes. Are you sure you want to leave without saving them?",
                        promptTitle: "Save Setttings",
                        promptOkBtnLabel: "Save changes",
                        promptCancelBtnLabel: "Leave this page",
                        promptOkCallback: function() {
                            a.updateSSO_settings()
                        },
                        promptCancelCallback: function() {
                            a.navigateAwayForcefully = !0,
                            a.closeTab()
                        }
                    } : void 0
                }
                ,
                a.closeTab = function() {
                    a.$emit("closeTab", a.tab)
                }
                ,
                a.ssoSettings = {},
                a.originalSSOSettings = {},
                a.isAnySettingUpdated = function() {
                    var b = _.keys(_.pick(a.ssoSettings, function(b, c, d) {
                        return "xml" != c && "email_attribute_name" != c || a.originalSSOSettings[c] ? "sso_enabled" != c || a.originalSSOSettings[c] ? d[c] != a.originalSSOSettings[c] ? !0 : void 0 : 1 == d[c] : d[c] && d[c].length > 0
                    })).length > 0;
                    return b || a.removeErrorAlertsIfRequired(),
                    b
                }
                ,
                a.removeErrorAlertsIfRequired = function() {
                    (a.showXMLReqAlert || a.showIdentEmailAttrReqAlert || a.showXmlValidAlert) && (a.showXMLReqAlert = !1,
                    a.showIdentEmailAttrReqAlert = !1,
                    a.showXmlValidAlert = !1,
                    a.$broadcast("render"))
                }
                ,
                a.showErrorAlertsIfRequired = function() {
                    return a.showXMLReqAlert = !1,
                    a.showIdentEmailAttrReqAlert = !1,
                    a.showXmlValidAlert = !1,
                    (a.ssoSettings.sso_enabled && 0 === a.ssoSettings.xml.length || a.originalSSOSettings.xml && 0 === a.ssoSettings.xml.length) && (a.showXMLReqAlert = !0),
                    a.samlIdentityLocationAttrElement && a.originalSSOSettings.email_attribute_name && a.originalSSOSettings.email_attribute_name.length && (!a.ssoSettings.email_attribute_name || 0 == a.ssoSettings.email_attribute_name.length) && (a.showIdentEmailAttrReqAlert = !0),
                    a.$broadcast("render"),
                    a.showXMLReqAlert || a.showIdentEmailAttrReqAlert ? (a.showXMLReqAlert && a.animateToTop(),
                    !0) : !1
                }
                ,
                a.showXmlValidationAlert = function() {
                    a.showXmlValidAlert = !0,
                    a.$broadcast("render"),
                    a.animateToTop()
                }
                ,
                a.updateSSO_settings = function(b, e) {
                    if (!a.showErrorAlertsIfRequired()) {
                        var f = _.pick(a.ssoSettings, function(b, c, d) {
                            return "xml" != c && "email_attribute_name" != c || a.originalSSOSettings[c] ? "sso_enabled" != c || a.originalSSOSettings[c] ? "revision" == c ? !0 : d[c] != a.originalSSOSettings[c] ? !0 : void 0 : 1 == d[c] : d[c] && d[c].length > 0
                        });
                        return a.isUpdatingSettings = !0,
                        "" === f.email_attribute_name && (f.email_attribute_name = null ),
                        (0 != a.ssoSettings.sso_enabled || 1 != a.originalSSOSettings.sso_enabled || 0 != a.ssoSettings.is_sso_optional || e) && (0 != a.ssoSettings.sso_enabled || 1 != a.originalSSOSettings.sso_enabled || 1 != a.ssoSettings.is_sso_optional || 0 != a.originalSSOSettings.is_sso_optional || e) ? 1 == a.ssoSettings.sso_enabled && 0 == a.originalSSOSettings.sso_enabled && 0 == a.ssoSettings.is_sso_optional & !e ? void j() : 1 != a.ssoSettings.sso_enabled || 0 != a.ssoSettings.is_sso_optional || 1 != a.originalSSOSettings.is_sso_optional || e ? void c.saveGeneralSettings({
                            sso_settings: f
                        }, !0).success(function(b, c) {
                            b.type ? (b.data && (a.ssoSettings.revision = b.data.revision),
                            d.showBanner("Your settings have been saved.", !1, !1, null )) : 0 === b.type && 4001 === b.errorCode && a.showXmlValidationAlert(),
                            a.isUpdatingSettings = !1
                        }) : void j() : void i()
                    }
                }
                ,
                a.toggleSSOType = function(b) {
                    a.ssoSettings.is_sso_optional = b,
                    a.$broadcast("render")
                }
                ,
                a.copyLink = function(a) {
                    b.copyToClipboard(a)
                }
                ,
                k()
            }
            ]
        }
    }
    ]),
    b.module("convoApp").controller("cnvHiddenGroupsAndTeammatesModal", ["$scope", "$rootScope", "$modalInstance", "selectedView", "groupList", "Groups", "Users", "usersGroupsListProvider", "settingsService", "utils", function(a, b, c, d, e, f, g, h, i, j) {
        function k(a, b) {
            for (var c = [], d = 0; d < a.length; d++)
                null  != a[d].formattedlabel.match(b) && c.push(a[d]);
            return c
        }
        a.title = "Unhide groups",
        a.GROUPS = "Groups",
        a.TEAMMATES = "Teammates",
        a.selectedView = d,
        a.hiddenRegularGroups = e,
        a.hiddenGroups = [];
        for (var l = 0; l < a.hiddenRegularGroups.length; l++)
            f.getGroup(a.hiddenRegularGroups[l].group_id) ? a.hiddenGroups.push(h.getGroupListItem(a.hiddenRegularGroups[l].group_id)) : f.getGroup(a.hiddenRegularGroups[l].id) && a.hiddenGroups.push(h.getGroupListItem(a.hiddenRegularGroups[l].id));
        setTimeout(function() {
            $(".searchGroupInput").on("input", function(b) {
                if (console.log("input change"),
                $(b.target).val()) {
                    var c = j.getUserGroupSearchRegex($(b.target).val());
                    a.filteredList = k(a.hiddenGroups, c),
                    a.isFilteredView = !0
                } else
                    a.isFilteredView = !1;
                a.$digest(),
                a.$broadcast("render")
            })
        }, 0),
        a.cancel = function() {
            c.close({
                groupList: a.hiddenGroups
            })
        }
        ,
        a.UnhideFromFeed = function(c) {
            i.saveSettingByName(i.GENERAL_SETTING___GROUP_SUBSCRIPTIONS, [{
                id: c,
                hide_from_feed: 0
            }]).then(function(d) {
                if (200 == d.status) {
                    for (var e = 0; e < a.hiddenGroups.length; e++)
                        if (a.hiddenGroups[e].id == c) {
                            a.hiddenGroups.splice(e, 1);
                            var g = j.getUserGroupSearchRegex($(".searchGroupInput").val());
                            a.filteredList = k(a.hiddenGroups, g),
                            a.$$phase || a.$digest();
                            var h = f.getGroup(c);
                            f.toggleShowHidePostsInFeed(h, 0),
                            a.$broadcast("render")
                        }
                    b.$broadcast("refetchMainFeedRequest")
                }
            })
        }
        ,
        a.$broadcast("render")
    }
    ]),
    b.module("convoApp").factory("settingsService", ["ServerComm", "$q", "nativeCommBridge", "RTCNotification", "$injector", "userInfo", function(a, c, d, e, g, h) {
        function i(a) {
            K = a,
            J = g.get("rtcNotificationManager"),
            J.addListener(f.rtc.PubsubEvents.NOTIFICATION_RECEIVE, j)
        }
        function j(a) {
            if (a.notification.type === e.USER_SETTINGS_UPDATED && a.notification.data.userId === K) {
                console.log("RECEIVED: RTCNotification.USER_SETTINGS_UPDATED");
                var b = a.notification.data;
                b.type === L ? k(!0) : b.type === M && (N[E.GENERAL_SETTING___SORT_CHAT_LIST_BY] = b.data,
                E.trigger("sortChatListBySettingUpdatedByRemoteUser", b.data))
            }
        }
        function k(b) {
            if (H)
                return F.promise;
            if (G && !b)
                return F.promise;
            F = c.defer();
            var d = a.getx("settings");
            return H = !0,
            G = !1,
            d.then(function(a) {
                N = a.data.data,
                H = !1,
                G = !0,
                F.resolve(N)
            }, function(a) {
                H = !1,
                G = !1,
                F.reject(a)
            }),
            F.promise
        }
        function l(c, d) {
            return a.post("settings", c).success(function(a, e) {
                if (a.type) {
                    if (d) {
                        for (var f in c.sso_settings)
                            N.sso_settings[f] = c.sso_settings[f];
                        a.data && (N.sso_settings.revision = a.data.revision)
                    } else
                        b.extend(N, c);
                    return N
                }
            })
        }
        function m(a) {
            console.log("updateGeneralSettings");
            var b = JSON.parse(a);
            delete b.users,
            delete b.groups,
            delete b.user_sharing_options,
            delete b.sharing_options,
            delete b.sharing_options_list,
            l(b)
        }
        function n(a) {
            return k(a).then(function() {
                var a = {};
                return a[E.GENERAL_SETTING___NOTIFY_ONLY_WHEN_AWAY] = N[E.GENERAL_SETTING___NOTIFY_ONLY_WHEN_AWAY],
                a[E.GENERAL_SETTING___PLAY_CHAT_NOTIFICATION_SOUND] = N[E.GENERAL_SETTING___PLAY_CHAT_NOTIFICATION_SOUND],
                a[E.GENERAL_SETTING___NOTIFY_UPDATES_IN_NEWS_FEED] = N[E.GENERAL_SETTING___NOTIFY_UPDATES_IN_NEWS_FEED],
                a[E.GENERAL_SETTING___ENABLE_DESKTOP_NOTIFICATIONS] = N[E.GENERAL_SETTING___ENABLE_DESKTOP_NOTIFICATIONS],
                a[E.GENERAL_SETTING___ENABLE_EMAIL_NOTIFICATIONS] = N[E.GENERAL_SETTING___ENABLE_EMAIL_NOTIFICATIONS],
                a[E.GENERAL_SETTING___ENABLE_DEVICE_NOTIFICATIONS] = N[E.GENERAL_SETTING___ENABLE_DEVICE_NOTIFICATIONS],
                a[E.GENERAL_SETTING___ENABLE_IN_APP_NOTICATIONS] = N[E.GENERAL_SETTING___ENABLE_IN_APP_NOTICATIONS],
                a[E.GENERAL_SETTING___NOTIFY_DIRECTS_AND_MENTIONS] = N[E.GENERAL_SETTING___NOTIFY_DIRECTS_AND_MENTIONS],
                a[E.GENERAL_SETTING___NOTIFY_COMMENTS_ON_MY_POSTS] = N[E.GENERAL_SETTING___NOTIFY_COMMENTS_ON_MY_POSTS],
                a[E.GENERAL_SETTING___NOTIFY_COMMENTS_ON_POSTS_I_COMMENT_ON] = N[E.GENERAL_SETTING___NOTIFY_COMMENTS_ON_POSTS_I_COMMENT_ON],
                a[E.GENERAL_SETTING___NOTIFY_COMMENTS_ON_DIRECTS] = N[E.GENERAL_SETTING___NOTIFY_COMMENTS_ON_DIRECTS],
                a[E.GENERAL_SETTING___NOTIFY_NEW_GROUP_SHARE] = N[E.GENERAL_SETTING___NOTIFY_NEW_GROUP_SHARE],
                a[E.GENERAL_SETTING___NOTIFY_INVITES_ACCEPTANCES] = N[E.GENERAL_SETTING___NOTIFY_INVITES_ACCEPTANCES],
                a[E.GENERAL_SETTING___NOTIFY_NEW_FOLLOWER] = N[E.GENERAL_SETTING___NOTIFY_NEW_FOLLOWER],
                a[E.GENERAL_SETTING___NOTIFY_INCOMING_CHATS] = N[E.GENERAL_SETTING___NOTIFY_INCOMING_CHATS],
                a[E.GENERAL_SETTING___NOTIFY_USER_STATUS_UPDATES] = N[E.GENERAL_SETTING___NOTIFY_USER_STATUS_UPDATES],
                a[E.GENERAL_SETTING___NOTIFY_GROUP_JOIN_REQUESTS] = N[E.GENERAL_SETTING___NOTIFY_GROUP_JOIN_REQUESTS],
                a[E.GENERAL_SETTING___SEND_CONFIRMATION_FOR_EMAIL_POSTS] = N[E.GENERAL_SETTING___SEND_CONFIRMATION_FOR_EMAIL_POSTS],
                a[E.GENERAL_SETTING___DIGEST_SEND_FREQUENCY] = N[E.GENERAL_SETTING___DIGEST_SEND_FREQUENCY],
                a[E.GENERAL_SETTING___PROFILE_GROUPS_SETTINGS] = N[E.GENERAL_SETTING___PROFILE_GROUPS_SETTINGS],
                a[E.GENERAL_SETTING___REGULAR_GROUPS_SETTINGS] = N[E.GENERAL_SETTING___REGULAR_GROUPS_SETTINGS],
                a
            })
        }
        function o() {
            return parseInt(N[E.GENERAL_SETTING___ENABLE_DESKTOP_NOTIFICATIONS])
        }
        function p() {
            return parseInt(N[E.GENERAL_SETTING___NOTIFY_INCOMING_CHATS])
        }
        function q() {
            return parseInt(N[E.GENERAL_SETTING___NOTIFY_USER_STATUS_UPDATES])
        }
        function r() {
            return parseInt(N[E.GENERAL_SETTING___NOTIFY_NEW_FOLLOWER])
        }
        function s() {
            return parseInt(N[E.GENERAL_SETTING___PLAY_CHAT_NOTIFICATION_SOUND])
        }
        function t() {
            return parseInt(N[E.GENERAL_SETTING___NOTIFY_NEW_GROUP_SHARE])
        }
        function u() {
            return parseInt(N[E.GENERAL_SETTING___NOTIFY_GROUP_JOIN_REQUESTS])
        }
        function v(a) {
            return k(a).then(function() {
                var a = {};
                return a[E.GENERAL_SETTING___SHARING_OPTIONS] = N[E.GENERAL_SETTING___SHARING_OPTIONS],
                a[E.GENERAL_SETTING___SHARING_OPTIONS_LIST] = N[E.GENERAL_SETTING___SHARING_OPTIONS_LIST],
                a[E.GENERAL_SETTING___PROFILE_GROUPS_SETTINGS] = N[E.GENERAL_SETTING___PROFILE_GROUPS_SETTINGS],
                a[E.GENERAL_SETTING___REGULAR_GROUPS_SETTINGS] = N[E.GENERAL_SETTING___REGULAR_GROUPS_SETTINGS],
                a
            })
        }
        function w(a) {
            return k(a).then(function() {
                var a = {};
                return a[E.GENERAL_SETTING___SORT_CHAT_LIST_BY] = N[E.GENERAL_SETTING___SORT_CHAT_LIST_BY],
                a[E.GENERAL_SETTING___PLAY_CHAT_NOTIFICATION_SOUND] = N[E.GENERAL_SETTING___PLAY_CHAT_NOTIFICATION_SOUND],
                a[E.GENERAL_SETTING___NOTIFY_INCOMING_CHATS] = N[E.GENERAL_SETTING___NOTIFY_INCOMING_CHATS],
                a
            })
        }
        function x(a, b, c) {
            var d = {};
            return d[E.GENERAL_SETTING___SORT_CHAT_LIST_BY] = a,
            d[E.GENERAL_SETTING___NOTIFY_INCOMING_CHATS] = c,
            d[E.GENERAL_SETTING___PLAY_CHAT_NOTIFICATION_SOUND] = b,
            l(d)
        }
        function y(a, b) {
            var c = {};
            c[a] = b;
            var d = l(c);
            return d.then(function(c) {
                a === E.GENERAL_SETTING___SHARING_OPTIONS_LIST || a === E.GENERAL_SETTING___RESET_TO_DEFAULT_SHARING_OPTIONS ? (k(!0),
                z(L, null )) : a === E.GENERAL_SETTING___SORT_CHAT_LIST_BY && z(M, b)
            }),
            d
        }
        function z(a, b) {
            var c = new e;
            c.type = e.USER_SETTINGS_UPDATED,
            c.data = {
                userId: K,
                type: a,
                data: b,
                settingsRevisionNo: I
            },
            J.send(c),
            console.log("SENT: RTCNotification.USER_SETTINGS_UPDATED")
        }
        function A(a, b) {
            return a | b
        }
        function B(a, b) {
            return a & ~b
        }
        function C(a, b) {
            return (a & b) > 0
        }
        function D(b) {
            var d = {
                method: "sendSSOEmailToAccountUsers",
                sso_enabled: b ? 1 : 0
            }
              , e = a.post("email", d)
              , f = c.defer();
            return e.then(function(a, b) {
                f.resolve(a.data)
            }, function(a, b) {
                f.reject(a.data)
            }),
            f.promise
        }
        var E = {};
        _.extend(E, Backbone.Events),
        E.EMAIL = 1,
        E.MOBILE = 2,
        E.DESKTOP = 4,
        E.NOTIFICATION_CENTER = 8,
        E.GENERAL_SETTING___SORT_CHAT_LIST_BY = "sort_chat_list_by",
        E.GENERAL_SETTING___PLAY_CHAT_NOTIFICATION_SOUND = "play_sound_on_notification",
        E.GENERAL_SETTING___NOTIFY_ONLY_WHEN_AWAY = "notify_only_when_away",
        E.GENERAL_SETTING___NOTIFY_UPDATES_IN_NEWS_FEED = "notify_updates_in_news_feed",
        E.GENERAL_SETTING___ENABLE_DESKTOP_NOTIFICATIONS = "enable_desktop_notifications",
        E.GENERAL_SETTING___ENABLE_EMAIL_NOTIFICATIONS = "enable_email_notifications",
        E.GENERAL_SETTING___ENABLE_DEVICE_NOTIFICATIONS = "enable_device_notifications",
        E.GENERAL_SETTING___ENABLE_IN_APP_NOTICATIONS = "enable_in_app_notifications",
        E.GENERAL_SETTING___NOTIFY_DIRECTS_AND_MENTIONS = "notify_directs_and_mentions",
        E.GENERAL_SETTING___NOTIFY_COMMENTS_ON_MY_POSTS = "notify_comments_on_my_posts",
        E.GENERAL_SETTING___NOTIFY_COMMENTS_ON_POSTS_I_COMMENT_ON = "notify_comments_on_posts_i_comment_on",
        E.GENERAL_SETTING___NOTIFY_COMMENTS_ON_DIRECTS = "notify_comments_on_directs",
        E.GENERAL_SETTING___NOTIFY_NEW_GROUP_SHARE = "notify_new_group_share",
        E.GENERAL_SETTING___NOTIFY_INVITES_ACCEPTANCES = "notify_invites_acceptances",
        E.GENERAL_SETTING___NOTIFY_NEW_FOLLOWER = "notify_new_follower",
        E.GENERAL_SETTING___NOTIFY_INCOMING_CHATS = "notify_incoming_chats",
        E.GENERAL_SETTING___NOTIFY_USER_STATUS_UPDATES = "notify_user_status_updates",
        E.GENERAL_SETTING___NOTIFY_GROUP_JOIN_REQUESTS = "notify_group_join_requests",
        E.GENERAL_SETTING___SEND_CONFIRMATION_FOR_EMAIL_POSTS = "send_confirmation_for_email_posts",
        E.GENERAL_SETTING___DIGEST_SEND_FREQUENCY = "digest_send_frequency",
        E.GENERAL_SETTING___SHARING_OPTIONS_LIST = "sharing_options_list",
        E.GENERAL_SETTING___SHARING_OPTIONS = "sharing_options",
        E.GENERAL_SETTING___GROUP_SUBSCRIPTIONS = "group_subscriptions",
        E.GENERAL_SETTING___RESET_TO_DEFAULT_SHARING_OPTIONS = "reset_to_default_sharing_options",
        E.GENERAL_SETTING___PROFILE_GROUPS_SETTINGS = "profile_groups_settings",
        E.GENERAL_SETTING___REGULAR_GROUPS_SETTINGS = "regular_groups_settings";
        var F, G, H, I, J, K, L = 1, M = 2, N = {};
        return d.on("updateGeneralSettings", m),
        E.initialize = i,
        E.getGeneralSettings = k,
        E.saveGeneralSettings = l,
        E.getChatSettings = w,
        E.saveChatSettings = x,
        E.getSettingsForNotificationPage = n,
        E.getSettingsForCustomizeFeed = v,
        E.saveSettingByName = y,
        E.bitON = A,
        E.bitOFF = B,
        E.isBitONOFF = C,
        E.getIncomingChatSetting = p,
        E.getUserStatusSetting = q,
        E.isDesktopNotificationEnabled = o,
        E.getStartFollowingSetting = r,
        E.getGroupSharedSetting = t,
        E.getGroupJoinReqSetting = u,
        E.isSoundEnabled = s,
        E.sendSSOEmail = D,
        E
    }
    ]),
    b.module("convoApp").factory("User", [function() {
        var a = Backbone.Model.extend({
            idAttribute: "user_id",
            fetchingDetailsFromServer: !1,
            fetchedDetailsFromServer: !1,
            detailsDeferred: null ,
            initialize: function() {},
            defaults: {},
            getFullName: function() {
                return (this.get("first_name") || "") + " " + (this.get("last_name") || "")
            },
            getDetails: function() {
                var a = this;
                return a.fetchingDetailsFromServer || a.fetchedDetailsFromServer ? a.detailsDeferred.promise : (a.fetchingDetailsFromServer = !0,
                a.detailsDeferred = $q.defer(),
                serverComm.post("groups", {
                    group_id: a.get("id"),
                    method: "getGroupDetails"
                }).success(function(b, c) {
                    a.set({
                        description: b.data.description,
                        groupEmail: b.data.email,
                        thisUserCanLeave: b.data.this_user_can_leave,
                        groupMembers: b.data.users,
                        pinnedContents: b.data.pinned_contents
                    }),
                    a.fetchingDetailsFromServer = !1,
                    a.fetchedDetailsFromServer = !0,
                    a.detailsDeferred.resolve()
                }),
                a.detailsDeferred.promise)
            }
        });
        return a
    }
    ]),
    b.module("convoApp").constant("UserProfileImage", {
        PROFILE_IMAGE_SIZE_22x22: "22x22",
        PROFILE_IMAGE_SIZE_28x28: "28x28",
        PROFILE_IMAGE_SIZE_32x32: "32x32",
        PROFILE_IMAGE_SIZE_48x48: "48x48",
        PROFILE_IMAGE_SIZE_184x184: "184x184",
        PROFILE_IMAGE_VERSION_DEFAULT: 0,
        PROFILE_IMAGE_TYPE_DEFAULT: 0,
        PROFILE_IMAGE_TYPE_CUSTOM: 1,
        PROFILE_IMAGE_TYPE_SYSTEM: 2
    }),
    b.module("convoApp").factory("userInfo", ["config", "ServerComm", function(a, b) {
        var d = {
            USER_ROLE_OWNER: "OWNER",
            USER_ROLE_ADMINISTRATOR: "ADMINISTRATOR",
            USER_ROLE_USER: "USER",
            USER_ROLE_GUEST: "GUEST",
            user_id: null ,
            first_name: null ,
            last_name: null ,
            email: null ,
            profile_image_type: -1,
            profile_image_version: -1,
            account_user_profile_group_id: null ,
            userRole: null ,
            isAdminModeOn: !1,
            userDataRevisionNo: c,
            initUserInfo: function(a, b, c) {
                this.user_id = a.user_id,
                this.first_name = a.first_name,
                this.last_name = a.last_name,
                this.email = a.email,
                this.profile_image_type = a.profile_image_type,
                this.profile_image_version = a.profile_image_version,
                this.userRole = b.user_role,
                this.isAdminModeOn = c
            },
            isAdmin: function() {
                return this.userRole == this.USER_ROLE_OWNER || this.userRole == this.USER_ROLE_ADMINISTRATOR ? !0 : !1
            },
            isAdminMode: function() {
                return this.isAdminModeOn
            },
            isOwner: function() {
                return this.userRole === this.USER_ROLE_OWNER
            },
            setAdminMode: function(a) {
                return this.userRole == this.USER_ROLE_OWNER || this.userRole == this.USER_ROLE_ADMINISTRATOR ? (this.isAdminModeOn = a,
                this.trigger("userInfo:adminModeChanged", this.isAdminModeOn),
                this.isAdminModeOn) : !1
            },
            setUserDataRevisionNo: function(a) {
                return d.userDataRevisionNo === c ? void (d.userDataRevisionNo = a) : void (d.userDataRevisionNo != a && (console.log("JK: triggering userDataRevisionNoChanged event: old/new rev numbers: " + d.userDataRevisionNo + "/" + a),
                d.userDataRevisionNo = a,
                d.trigger("userDataRevisionNoChanged")))
            },
            updateUserDataRevisionNo: function(a) {
                d.userDataRevisionNo = a
            },
            getUserDataRevisionNo: function() {
                return d.userDataRevisionNo
            },
            getUserInfo: function() {
                return {
                    user_id: this.user_id,
                    name: this.first_name + " " + this.last_name,
                    profile_image_type: this.profile_image_type,
                    profile_image_version: this.profile_image_version,
                    user_role: this.userRole
                }
            },
            updateUserProfileImageTypeAndVersion: function(a, b) {
                this.profile_image_type = a,
                this.profile_image_version = b
            },
            getUserId: function() {
                return this.user_id
            },
            getEmail: function() {
                return this.email
            },
            isGuestUser: function() {
                return this.userRole === this.USER_ROLE_GUEST
            },
            setAccountUserProfileGroupId: function(a) {
                this.account_user_profile_group_id = a
            },
            getAccountUserProfileGroupId: function() {
                return this.account_user_profile_group_id
            },
            resetPassword: function(a, c) {
                return b.postx("passwordreset", {
                    method: "changePassword",
                    current_password: a,
                    new_password: c
                })
            },
            changeEmail: function(a) {
                var c = b.postx("user", {
                    method: "changeEmail",
                    new_email: a
                });
                return c.then(function(b) {
                    1 == b.data.type && (d.email = a,
                    d.trigger("userAccountEmailUpdated"))
                }),
                c
            }
        };
        return _.extend(d, Backbone.Events),
        d
    }
    ]),
    b.module("convoApp").factory("userProvider", [function() {
        function a(a, d) {
            f[d] === c && (f[d] = {}),
            b.extend(f[d], a)
        }
        function d(a, b) {
            return f[b][a]
        }
        var e = {};
        e.DATA_FORMAT_APP = "APP",
        e.DATA_FORMAT_SERVICE = "SERVICE";
        var f = {};
        return e.updateUsers = a,
        e.getUser = d,
        e
    }
    ]),
    b.module("convoApp").directive("cnvUsersDirectory", ["usrDirModalService", "utils", "Users", "accountInfo", "bannerService", "alertsService", "userInfo", "config", function(b, c, d, e, f, g, h, i) {
        return {
            restrict: "E",
            scope: !1,
            templateUrl: "users/usersDirectory/cnvUserDirectoryMain.tpl.html",
            link: function(b, d, e) {
                function f(a, b) {
                    for (var c, d = [], e = 0; e < a.length; e++)
                        c = a[e].first_name + " " + a[e].last_name,
                        (null  != c.match(b) || null  != a[e].email.match(b)) && d.push(a[e]);
                    return d
                }
                b.userInfo = h,
                b.config = i;
                var g = function(a) {
                    if ($(a.target).val()) {
                        var d = c.getUserGroupSearchRegex($(a.target).val());
                        b.filteredUsers = f(b.users, d),
                        b.isFilteredView = !0,
                        b.filteredUsers.length > 20 ? b.showingListLimit += 20 : b.showingListLimit = b.filteredUsers.length
                    } else
                        b.isFilteredView = !1,
                        b.users.length > 20 ? b.showingListLimit = 20 : b.showingListLimit = b.users.length;
                    b.$broadcast("render")
                }
                  , j = _.debounce(g, 200);
                b.registerInputEvent = function() {
                    d.find(".app-sub-header input[type=text]").on("input", function(a) {
                        j(a)
                    })
                }
                ,
                $(a).scroll(function() {
                    Math.ceil($(a).scrollTop()) + $(a).height() >= $(document).height() ? (b.isFilteredView ? b.filteredUsers.length > b.showingListLimit + 20 ? b.showingListLimit += 20 : b.showingListLimit = b.filteredUsers.length : b.users.length > b.showingListLimit + 20 ? b.showingListLimit += 20 : b.showingListLimit = b.users.length,
                    b.$broadcast("render")) : 0 == $(a).scrollTop() && (b.isFilteredView ? b.filteredUsers.length > 20 ? b.showingListLimit = 20 : b.showingListLimit = b.filteredUsers.length : b.users.length > 20 ? b.showingListLimit = 20 : b.showingListLimit = b.users.length,
                    b.$broadcast("render"))
                })
            },
            controller: ["$scope", "$element", "$compile", "Contacts", function(a, h, i, j) {
                function k(b, c) {
                    $("#ccUsrEmail").is(":checked") ? ($("#ccUsrEmail").prop("checked", !1),
                    z = "You will no longer receive email notifications for any new content posted by " + d.getUserById(b.userId).first_name + " " + d.getUserById(b.userId).last_name + ".") : ($("#ccUsrEmail").prop("checked", !0),
                    z = "You will receive email notifications for any new content posted by " + d.getUserById(b.userId).first_name + " " + d.getUserById(b.userId).last_name + "."),
                    x = $("#ccUsrEmail").is(":checked");
                    var e = d.updateUserNotificationSettings(b.userId, x, y);
                    f.showBanner_promise(e, z, null , "Unable to save your notification preferences. Try again.", !1, !1, null ),
                    e.then(function(c) {
                        if (c.data.type)
                            for (var d = 0; d < a.users.length; d++)
                                if (a.users[d].user_id == b.userId) {
                                    a.users[d].notification_settings.email = x,
                                    a.users[d].notification_settings.mobile = y;
                                    break
                                }
                    }),
                    c.stopPropagation(),
                    c.preventDefault()
                }
                function l(b, c) {
                    $("#ccUsrMobile").is(":checked") ? ($("#ccUsrMobile").prop("checked", !1),
                    A = "You will no longer receive mobile push notifications for any new content posted by " + d.getUserById(b.userId).first_name + " " + d.getUserById(b.userId).last_name + ".") : ($("#ccUsrMobile").prop("checked", !0),
                    A = "You will receive mobile push notifications for any new content posted by " + d.getUserById(b.userId).first_name + " " + d.getUserById(b.userId).last_name + "."),
                    y = $("#ccUsrMobile").is(":checked");
                    var e = d.updateUserNotificationSettings(b.userId, x, y);
                    f.showBanner_promise(e, A, null , "Unable to save your notification preferences. Try again.", !1, !1, null ),
                    e.then(function(c) {
                        if (c.data.type)
                            for (var d = 0; d < a.users.length; d++)
                                if (a.users[d].user_id == b.userId) {
                                    a.users[d].notification_settings.email = x,
                                    a.users[d].notification_settings.mobile = y;
                                    break
                                }
                    }),
                    c.stopPropagation(),
                    c.preventDefault()
                }
                function m(c) {
                    for (var d = 0; d < a.users.length; d++)
                        if (a.users[d].user_id == c.userId) {
                            b.openAddGroupModal(a.users[d]);
                            break
                        }
                }
                function n(c) {
                    for (var d = 0; d < a.users.length; d++)
                        if (a.users[d].user_id == c.userId) {
                            b.openRemoveGroupModal(a.users[d]);
                            break
                        }
                }
                function o(b) {
                    var c, f, h;
                    if (b.userId != a.user_info.user_id) {
                        var i;
                        d.getUserById(b.userId) ? (i = d.getUserById(b.userId).first_name + " " + d.getUserById(b.userId).last_name,
                        f = "Are you sure you want to remove " + i + " from " + e.getAccountName() + " network? They will lose access to all of company discussions and content and will have to sign up again to rejoin.",
                        h = "Yes") : (f = "Are you sure you want to withdraw the invitation sent?",
                        h = "Withdraw"),
                        c = "Suspend user"
                    } else
                        c = "Leave network",
                        f = "Are you sure you want to leave " + e.getAccountName() + " network? You will have to sign up again to rejoin. Content shared by you will not be automatically deleted. ",
                        h = "Leave Network";
                    g.promptModal(c, f, function() {
                        d.removeUserFromNetwork(b.userId).then(function(c) {
                            if (a.isFilteredView) {
                                for (var d = 0; d < a.users.length; d++)
                                    if (a.filteredUsers[d].user_id == b.userId) {
                                        a.filteredUsers.splice(d, 1),
                                        a.$broadcast("render");
                                        break
                                    }
                                for (var d = 0; d < a.users.length; d++)
                                    if (a.users[d].user_id == b.userId) {
                                        a.users.splice(d, 1);
                                        break
                                    }
                            } else
                                for (var d = 0; d < a.users.length; d++)
                                    if (a.users[d].user_id == b.userId) {
                                        a.users.splice(d, 1),
                                        a.$broadcast("render");
                                        break
                                    }
                        })
                    }, null , h, "No")
                }
                function p() {
                    console.log("Users Directory app activated")
                }
                function q() {
                    console.log("Users Directory app deactivated")
                }
                function r() {
                    a.users = [],
                    a.filteredUsers = [],
                    a.invitedUsers = [],
                    f.dismissAllBanners(),
                    clearInterval(B),
                    console.log("Users Directory app closing")
                }
                function s(a, b) {
                    var c = a.first_name.toLowerCase() + " " + a.last_name.toLowerCase()
                      , d = b.first_name.toLowerCase() + " " + b.last_name.toLowerCase()
                      , e = a.email
                      , f = b.email;
                    if (a.first_name && a.last_name && b.first_name && b.last_name) {
                        if (d > c)
                            return -1;
                        if (c > d)
                            return 1
                    } else {
                        if (!e || !f)
                            return 0;
                        if (f > e)
                            return -1;
                        if (e > f)
                            return 1
                    }
                }
                function t() {
                    d.getAllUsersWithDetails().then(function(b) {
                        a.users = [];
                        var d = b.data.accessible_users
                          , e = 0
                          , f = 0
                          , g = 0;
                        if (a.invitedUsers.length)
                            for (var h = 0; h < a.invitedUsers.length; h++)
                                d[a.invitedUsers[h].user_id] && (d[a.invitedUsers[h].user_id].invitedAgain = !0);
                        for (var i in b.data.accessible_users)
                            a.users.push(b.data.accessible_users[i]),
                            d[i].you_follow && e++,
                            d[i].follows_you && f++,
                            "GUEST" == d[i].user_role && g++;
                        a.users.push(b.data.user);
                        for (var h = 0; h < a.users.length; h++)
                            a.users[h].last_login_date && (a.users[h].last_login_date = new Date(c.getNormalizedTimeString(a.users[h].last_login_date)));
                        a.users.sort(s),
                        a.originalUsersList = a.users,
                        a.sortUsersBy(a.sortFilter),
                        a.users.length && (a.titleEveryOne = "Everyone (" + a.users.length + ")"),
                        e > 0 && (a.titleFollowing = "Following (" + e + ")"),
                        f > 0 && (a.titleFollowers = "Followers (" + f + ")"),
                        g > 0 && (a.titleGuests = "Guests (" + g + ")"),
                        1 == a.users.length ? a.show1UserMessage = !0 : a.users.length < 4 && (a.show3UserMessage = !0),
                        a.initialized = !0,
                        a.$broadcast("render"),
                        a.registerInputEvent()
                    })
                }
                function u() {
                    a.invitedUsers = [],
                    a.showingListLimit = 20,
                    t()
                }
                var v = a.tab
                  , w = v.appContCtrl.appCtrl;
                a.showingListLimit = 20,
                w.activated = p,
                w.deactivated = q,
                w.closing = r,
                w.initialized = !0,
                a.EVERY_ONE = "everyone",
                a.FOLLOWING = "following",
                a.FOLLOWERS = "followers",
                a.GUESTS = "guests",
                a.selectedView = a.EVERY_ONE,
                a.titleEveryOne = "Everyone",
                a.titleFollowing = "Following",
                a.titleFollowers = "Followers",
                a.titleGuests = "Guests",
                a.sortFilter = "name",
                a.showFilterDropdown = !1,
                a.invtTeammtCtrl = {},
                a.invtTeammtCtrl.noContactMessage = "No contacts found.",
                a.invtTeammtCtrl.autoCompleteFieldLabelText = "Add email addresses to invite new members to your company",
                a.invtTeammtCtrl.inviteTeammates = function(b, c) {
                    d.inviteUsersToNetwork(b, c).then(function(b) {
                        console.log(b);
                        var c, d = b.data.data.users_not_invited, e = b.data.data.users_invited;
                        b.data.data.users_invites_pending,
                        b.data.data.users_invites_already_pending;
                        if (!d.length && e.length) {
                            if (1 == e.length)
                                c = "Your invitation has been sent to <b>" + e[0].invitee_global_profile.email + "</b>";
                            else if (2 == e.length)
                                c = "Your invitation has been sent to <b>" + e[0].invitee_global_profile.email + "</b> and <b>" + e[1].invitee_global_profile.email + "</b>";
                            else if (e.length > 2) {
                                a.otherTeammates = "";
                                for (var g = 2; g < e.length; g++)
                                    a.otherTeammates += e[g].invitee_global_profile.email + "<br>";
                                c = "<div>Your invitation has been sent to <b>" + e[0].invitee_global_profile.email + "</b>, <b>" + e[1].invitee_global_profile.email + "</b> and  <b style='cursor:pointer' cnv-popover cnv-popover-ctrl='otherTeammates'>" + (e.length - 2) + "</b> other teammate/s</div>",
                                c = i(c)(a)
                            }
                            f.showBanner(c, !0, !0, null )
                        } else if (d.length && !e.length) {
                            if (1 == d.length)
                                c = d[0].error_message;
                            else if (2 == d.length)
                                c = "<b>" + d[0].invitee_email + " and <b>" + d[1].invitee_email + "</b> could not be invited.";
                            else if (d.length > 2) {
                                a.otherTeammates = "";
                                for (var g = 2; g < d.length; g++)
                                    a.otherTeammates += d[g].invitee_email + "<br>";
                                c = "<div><b>" + d[0].invitee_email + "</b>, <b>" + d[1].invitee_email + "</b> and <b style='cursor:pointer' cnv-popover cnv-popover-ctrl='otherTeammates'>" + (d.length - 2) + " other" + (d.length - 2 > 1 ? "s" : "") + "</b> could not be invited.</div>",
                                c = i(c)(a)
                            }
                            f.showBanner(c, !0, !0, null )
                        } else if (d.length && e.length) {
                            if (c = "<div>",
                            1 == e.length)
                                c += "Your invitation has been sent to <b>" + e[0].invitee_global_profile.email + "</b>";
                            else if (2 == e.length)
                                c += "Your invitation has been sent to <b>" + e[0].invitee_global_profile.email + "</b> and <b>" + e[1].invitee_global_profile.email + "</b>";
                            else if (e.length > 2) {
                                a.otherTeammates = "";
                                for (var g = 2; g < e.length; g++)
                                    a.otherTeammates += e[g].invitee_global_profile.email + "<br>";
                                c += "<div>Your invitation has been sent to <b>" + e[0].invitee_global_profile.email + "</b>, <b>" + e[1].invitee_global_profile.email + "</b> and <b style='cursor:pointer' cnv-popover cnv-popover-ctrl='otherTeammates'>" + (e.length - 2) + "</b> other teammates.</div>"
                            }
                            if (c += "<br><br>",
                            1 == d.length)
                                c += d[0].error_message;
                            else if (2 == d.length)
                                c += "<b>" + d[0].invitee_email + " and <b>" + d[1].invitee_email + "</b> could not be invited.";
                            else if (d.length > 2) {
                                a.otherTeammates = "";
                                for (var g = 2; g < d.length; g++)
                                    a.otherTeammates += d[g].invitee_email + "<br>";
                                c += "<div><b>" + d[0].invitee_email + "</b> , <b>" + d[1].invitee_email + "</b> and <b style='cursor:pointer' cnv-popover cnv-popover-ctrl='otherTeammates'>" + (d.length - 2) + "</b> others could not be invited.</div>"
                            }
                            c += "</div>",
                            c = i(c)(a),
                            f.showBanner(c, !0, !0, null )
                        }
                    })
                }
                ,
                a.invtTeammtCtrl.filterContacts = function(a) {
                    for (var b = [], c = e.getAccountDomains(), f = d.getUsersLowerCaseEmailsMap(), g = 0; g < a.length; g++)
                        if (!f[a[g].email])
                            for (var h = 0; h < c.length; h++) {
                                var i = new RegExp(c[h].user_email_domain);
                                a[g].email.match(i) && (a[g].isChecked = !0,
                                b.push(a[g]))
                            }
                    return b
                }
                ,
                a.invtTeammtCtrl.initialized = !0,
                a.invtTeammtCtrl.isNotShowingAutoComplete = !0;
                var x, y, z = "", A = "";
                a.returnUserDropdownCtrl = function(a) {
                    var b = {};
                    return b.align = "right",
                    b.options = [{
                        label: "Notification Preferences",
                        isNotHoverable: !0,
                        callback: function() {}
                    }, {
                        label: "Email",
                        checkBox: !0,
                        checkBoxId: "ccUsrEmail",
                        callback: k
                    }, {
                        label: "Mobile",
                        checkBox: !0,
                        checkBoxId: "ccUsrMobile",
                        callback: l
                    }, {
                        isDivider: !0
                    }, {
                        label: "Add to group",
                        callback: m
                    }, {
                        label: "Remove from group",
                        callback: n
                    }, {
                        isDivider: !0
                    }],
                    a.is_suspendable && b.options.push({
                        label: "Suspend",
                        callback: o
                    }),
                    b
                }
                ,
                a.thisUserDrpDwnCtrl = {},
                a.thisUserDrpDwnCtrl.align = "right",
                a.thisUserDrpDwnCtrl.options = [{
                    label: "Suspend",
                    callback: o
                }],
                a.returnInvitedUserDropdownCtrl = function(a) {
                    var b = {};
                    return b.align = "right",
                    b.options = [{
                        label: "Add to group",
                        callback: m
                    }, {
                        label: "Remove from group",
                        callback: n
                    }],
                    a.is_suspendable && b.options.push({
                        isDivider: !0
                    }, {
                        label: "Suspend",
                        callback: o
                    }),
                    b
                }
                ,
                a.toggleSelectedView = function(b) {
                    a.selectedView = b,
                    a.isFilteredView = !1,
                    a.users.length > 20 ? a.showingListLimit = 20 : a.showingListLimit = a.users.length,
                    h.find(".app-sub-header input[type=text]").val(""),
                    a.$broadcast("render")
                }
                ,
                a.filterFunction = function(b, c) {
                    return a.selectedView == a.EVERY_ONE ? !0 : a.selectedView == a.FOLLOWING && b.you_follow ? !0 : a.selectedView == a.FOLLOWERS && b.follows_you ? !0 : a.selectedView == a.GUESTS && "GUEST" == b.user_role ? !0 : !1
                }
                ,
                a.followUnfollowUser = function(b, c) {
                    if (c) {
                        for (var e = 0; e < a.users.length; e++)
                            if (a.users[e].user_id == b) {
                                a.users[e].showSpinner = !0;
                                break
                            }
                        d.unfollowUser(b).then(function() {
                            for (var c = 0; c < a.users.length; c++)
                                if (a.users[c].user_id == b) {
                                    a.users[c].you_follow = !1,
                                    a.users[c].showSpinner = !1,
                                    a.users[c].showUnfollow = !1;
                                    break
                                }
                            a.$broadcast("render")
                        })
                    } else {
                        for (var e = 0; e < a.users.length; e++)
                            if (a.users[e].user_id == b) {
                                a.users[e].showSpinner = !0;
                                break
                            }
                        d.followUser(b).then(function() {
                            for (var c = 0; c < a.users.length; c++)
                                if (a.users[c].user_id == b) {
                                    a.users[c].you_follow = !0,
                                    a.users[c].showSpinner = !1,
                                    a.users[c].showUnfollow = !1;
                                    break
                                }
                            a.$broadcast("render")
                        })
                    }
                    a.$broadcast("render")
                }
                ,
                a.openInviteTeammatesDialog = function() {
                    j.initContactsInviteModal({
                        include_off_domain: !1,
                        origin: "Manage_Users",
                        invite_via: "Invite_Dialog"
                    })
                }
                ,
                a.invitedUsers = [],
                a.inviteTeammateAgain = function(b) {
                    if (a.isFilteredView) {
                        for (var c = 0; c < a.users.length; c++)
                            if (b.user_id == a.users[c].user_id) {
                                a.users[c].invitedAgain = !0;
                                break
                            }
                        for (var c = 0; c < a.filteredUsers.length; c++)
                            if (b.user_id == a.filteredUsers[c].user_id) {
                                a.users[c].invitedAgain = !0;
                                break
                            }
                    } else
                        for (var c = 0; c < a.users.length; c++)
                            if (b.user_id == a.users[c].user_id) {
                                a.users[c].invitedAgain = !0;
                                break
                            }
                    a.invitedUsers.push(b);
                    var e = d.inviteUsersToNetwork([b.email], "Invited Again");
                    f.showBanner_promise(e, "Your invitation has been sent to <b>" + b.email + "</b>", null , "Error", !1, !1, null ),
                    a.$broadcast("render")
                }
                ,
                a.showHideBtn = function(b, c) {
                    if (a.isFilteredView) {
                        for (var d = 0; d < a.filteredUsers.length; d++)
                            if (a.filteredUsers[d].user_id == b) {
                                a.filteredUsers[d].showUnfollow = c;
                                break
                            }
                    } else
                        for (var d = 0; d < a.users.length; d++)
                            if (a.users[d].user_id == b) {
                                a.users[d].showUnfollow = c;
                                break
                            }
                    a.$broadcast("render")
                }
                ,
                a.toggleFilterDropdown = function() {
                    a.showFilterDropdown = !a.showFilterDropdown
                }
                ,
                a.sortUsersBy = function(b) {
                    if ("name" === b)
                        a.users = a.originalUsersList,
                        a.showingListLimit = 20,
                        a.users.sort(s);
                    else if ("pendingInvites" === b) {
                        a.users = [];
                        for (var c = 0; c < a.originalUsersList.length; c++) {
                            var d = a.originalUsersList[c];
                            d && "INVITED" === d.user_status && a.users.push(d)
                        }
                        a.users.sort(s)
                    } else if ("loginType_SSO" === b) {
                        a.users = [];
                        for (var c = 0; c < a.originalUsersList.length; c++) {
                            var d = a.originalUsersList[c];
                            d && "SSO" === d.login_type && a.users.push(d)
                        }
                        a.users.sort(s)
                    } else
                        "last_sign_in" === b && (a.users = [],
                        a.users = a.originalUsersList,
                        a.users.sort(function(a, b) {
                            return b.last_login_date ? b.last_login_date - a.last_login_date : -1
                        }));
                    a.sortFilter = b,
                    a.$broadcast("render")
                }
                ,
                u(),
                a.$broadcast("render");
                var B = setInterval(function() {
                    console.log("polling User Directory"),
                    t()
                }, 3e4)
            }
            ]
        }
    }
    ]),
    b.module("convoApp").controller("usrDirModalCtrl", ["$scope", "$modalInstance", "$interval", "modalDetails", "groupsDetails", "utils", "alertsService", function(a, b, c, d, e, f, g) {
        function h() {
            "active" == a.modalDetails.state && (a.groups = e.groups,
            a.groups.length || (a.showNoGroupMessage = !0,
            "addMd" == a.modalDetails.modalId ? a.noGroupMessage = "There are no groups to share." : "rmvMd" == a.modalDetails.modalId && (a.noGroupMessage = "There are no groups to remove from.")),
            a.users = e.users,
            a.$broadcast("render"),
            c.cancel(a.modalInterval),
            a.registerInputEvent())
        }
        function i() {
            a.modalDetails.isProcessing || (a.groups = e.groups,
            a.$broadcast("render"),
            c.cancel(a.modalProcessingInterval))
        }
        function j(a, b) {
            for (var c = [], d = 0; d < a.length; d++)
                null  != a[d].title.match(b) && c.push(a[d]);
            return c
        }
        "addMd" == d.modalId ? d.user.first_name && d.user.last_name ? a.title1 = "Add " + d.user.first_name + " " + d.user.last_name + " to group" : a.title1 = "Add " + d.user.email + " to group" : d.user.first_name && d.user.last_name ? a.title1 = "Remove " + d.user.first_name + " " + d.user.last_name + " from group" : a.title1 = "Remove " + d.user.email + " from group",
        d.user.first_name && d.user.last_name || (d.user.first_name = d.user.email),
        a.cancel = function() {
            b.dismiss()
        }
        ,
        a.modalDetails = d,
        a.groups = e.groups,
        a.users = e.users,
        a.modalInterval,
        a.modalProcessingInterval,
        "wait" == a.modalDetails.state && (a.modalInterval = c(h, 5)),
        a.addRemoveUserFromGroup = function(b, e, f) {
            "Add" == f ? (a.modalDetails.isProcessing = !0,
            d.addUserToGroup(d.user.user_id, e),
            a.$broadcast("render"),
            a.modalDetails.isProcessing && (a.modalProcessingInterval = c(i, 5))) : "Remove" == f && (a.modalDetails.isProcessing = !0,
            d.removeUserFromGroup(d.user.user_id, e),
            a.$broadcast("render"),
            a.modalDetails.isProcessing && (a.modalProcessingInterval = c(i, 5))),
            $(b.target).blur()
        }
        ,
        a.registerInputEvent = function() {
            $(".searchGroupInput").on("input", function(b) {
                if (console.log("input change"),
                $(b.target).val()) {
                    var c = f.getUserGroupSearchRegex($(b.target).val());
                    a.filteredGroups = j(a.groups, c),
                    a.isFilteredView = !0
                } else
                    a.isFilteredView = !1;
                a.$digest(),
                a.$broadcast("render")
            })
        }
        ,
        a.createGroup = function() {
            var a = "home/components/createGroupWidget/createGroupModal.tpl.html"
              , c = "createGroupModalCtrl"
              , d = "group-create-details";
            g.customModal(a, c, null , d);
            b.dismiss()
        }
        ,
        a.$on("$destroy", function() {
            a.modalInterval && c.cancel(a.modalInterval),
            a.modalProcessingInterval && c.cancel(a.modalProcessingInterval)
        })
    }
    ]),
    b.module("convoApp").factory("usrDirModalService", ["alertsService", "Groups", "Users", function(a, b, c) {
        function d(a) {
            var d = {}
              , e = {}
              , i = {
                modalDetails: function() {
                    return d
                },
                groupsDetails: function() {
                    return e
                }
            }
              , j = [];
            d.state = g,
            d.modalId = "addMd",
            d.user = a,
            d.addUserToGroup = function(a, c) {
                b.inviteUsersToGroup(c, [d.user.email]).then(function() {
                    for (var a = 0; a < j.length; a++)
                        if (j[a].group_id == c) {
                            j[a].buttonTitle = "Remove",
                            j[a].can_remove_user = !0;
                            break
                        }
                    e.groups = j,
                    d.isProcessing = !1
                })
            }
            ,
            d.removeUserFromGroup = function(a, c) {
                d.isProcessing = !0,
                b.removeUserFromGroup(c, a).then(function() {
                    for (var a = 0; a < j.length; a++)
                        if (j[a].group_id == c) {
                            j[a].buttonTitle = "Add",
                            j[a].can_add_user = !0;
                            break
                        }
                    e.groups = j,
                    d.isProcessing = !1
                })
            }
            ,
            f(i);
            c.getGroupsToWhichUserCanBeAdded(a.user_id).then(function(a) {
                for (var b in a.data.groups)
                    j.push(a.data.groups[b]),
                    j[j.length - 1].buttonTitle = "Add";
                e.groups = j,
                e.users = a.data.users,
                d.state = h
            })
        }
        function e(a) {
            var d = {}
              , e = {}
              , i = {
                modalDetails: function() {
                    return d
                },
                groupsDetails: function() {
                    return e
                }
            }
              , j = [];
            d.state = g,
            d.modalId = "rmvMd",
            d.user = a,
            d.addUserToGroup = function(a, c) {
                b.inviteUsersToGroup(c, [d.user.email]).then(function() {
                    for (var a = 0; a < j.length; a++)
                        if (j[a].group_id == c) {
                            j[a].buttonTitle = "Remove",
                            j[a].can_remove_user = !0;
                            break
                        }
                    e.groups = j,
                    d.isProcessing = !1
                })
            }
            ,
            d.removeUserFromGroup = function(a, c) {
                d.isProcessing = !0,
                b.removeUserFromGroup(c, a).then(function() {
                    for (var a = 0; a < j.length; a++)
                        if (j[a].group_id == c) {
                            j[a].buttonTitle = "Add",
                            j[a].can_add_user = !0;
                            break
                        }
                    e.groups = j,
                    d.isProcessing = !1
                })
            }
            ,
            f(i);
            c.getGroupsToWhichUserCanBeRemoved(a.user_id).then(function(a) {
                for (var b in a.data.groups)
                    j.push(a.data.groups[b]),
                    j[j.length - 1].buttonTitle = "Remove";
                e.groups = j,
                e.users = a.data.users,
                d.state = h
            })
        }
        function f(b) {
            a.customModal(i, j, b, k, !0)
        }
        var g = "wait"
          , h = "active"
          , i = "users/usersDirectory/userDirModal/usrDirModal.tpl.html"
          , j = "usrDirModalCtrl"
          , k = "cnv-usr-dir-modal";
        return {
            openAddGroupModal: d,
            openRemoveGroupModal: e
        }
    }
    ]),
    b.module("convoApp").factory("Users", ["ServerComm", "accountInfo", "userInfo", "$q", "User", "$rootScope", "Group", "relevanciesService", "accountDataService", "AccountDataChangeNotificationType", "localStore", function(a, b, c, d, e, f, g, h, i, j, k) {
        function l() {
            return S
        }
        function m(a) {
            var b = []
              , c = []
              , d = []
              , f = []
              , g = a.accessible_users;
            g.push(a.user);
            for (var h = g.length, i = 0; h > i; i++) {
                var j = new e(g[i]);
                b.push(j)
            }
            L.set(b),
            L.forEach(function(a) {
                a.get("searchable") && c.push(a),
                a.get("publishable") && d.push(a),
                a.get("show_in_buddy_list") && f.push(a)
            }),
            M.set(c),
            N.set(d),
            O.set(f)
        }
        function n() {
            if (T) {
                var a = k.readData(l());
                return a && (a.version === R ? (m(a.data),
                U = d(function(a) {
                    a(L)
                })) : k.clearData(l())),
                T = !1,
                U
            }
            return U
        }
        function o(b) {
            var e = n();
            if (!J && (!K || b)) {
                I = d.defer();
                var f = a.getx("users");
                J = !0,
                f.then(function(a) {
                    a = a.data,
                    m(a),
                    J = !1,
                    K = !0,
                    c.isAdminMode() || k.writeData(l(), a, R) || k.writeData(l(), "", R),
                    I.resolve(L),
                    U && (U = null ,
                    H.trigger("usersUpdated"))
                }, function(a) {
                    J = !1,
                    K = !1,
                    I.reject(a)
                })
            }
            return e ? e : I.promise
        }
        function p() {
            return o().then(function(a) {
                return M
            })
        }
        function q() {
            return o().then(function(a) {
                return N
            })
        }
        function r() {
            return o().then(function(a) {
                return O
            })
        }
        function s() {
            return a.postx("users", {
                method: "getAllUsersDetailsAccessibleToUserInAccount"
            })
        }
        function t(b, c, d) {
            return a.postx("users", {
                method: "updateUserNotificationSettings",
                user_id: b,
                notification_settings: {
                    mobile: d,
                    email: c
                }
            })
        }
        function u(b, c) {
            return a.postx("invite", {
                method: "inviteUsers",
                emails: b,
                message: c
            })
        }
        function v(b) {
            return a.postx("groups", {
                method: "getGroupsToWhichSpecifiedUserCanBeAdded",
                specified_user_id: b
            })
        }
        function w(b) {
            return a.postx("groups", {
                method: "getGroupsFromWhichSpecifiedUserCanBeRemoved",
                specified_user_id: b
            })
        }
        function x(b) {
            var c = a.postx("accounts", {
                method: "removeUser",
                user_id: b
            });
            return c.then(function(a) {
                F(a, {
                    userId: b
                })
            }),
            c
        }
        function y(a) {
            return L.get(a) || P.get(a)
        }
        function z(a) {
            var b = L.get(a) || P.get(a);
            return b ? b.attributes : null 
        }
        function A(a) {
            if (!a)
                return null ;
            for (var b = a.toLowerCase(), c = null , d = null , e = 0; e < L.length; e++)
                if (d = L.at(e),
                d.get("user_id") == b || d.get("first_name").toLowerCase() == b || d.get("last_name").toLowerCase() == b || d.get("email").toLowerCase() == b) {
                    c = d;
                    break
                }
            for (var e = 0; e < P.length; e++)
                if (d = P.at(e),
                d.get("user_id") == b || d.get("first_name").toLowerCase() == b || d.get("last_name").toLowerCase() == b || d.get("email").toLowerCase() == b) {
                    c = d;
                    break
                }
            return c ? c.attributes : null 
        }
        function B(b) {
            return o().then(function(c) {
                var d = y(b);
                return d ? d : a.getx("users?user_id=" + encodeURIComponent(b)).then(function(a) {
                    return d = a.data ? new e(a.data) : null ,
                    d && P.add(d),
                    d
                })
            })
        }
        function C() {
            for (var a = {}, b = 0; b < L.length; b++)
                a[L.at(b).get("email").toLowerCase()] = !0;
            return a
        }
        function D() {
            return o().then(function(a) {
                var b = a;
                return Q ? b : h.getRelevanciesPromise().then(function(a) {
                    var c = a.users;
                    if (!c)
                        return b;
                    for (var d = 0; d < c.length; d++) {
                        var e = b.get(c[d].term);
                        e && e.set("rank", c[d].rank)
                    }
                    return Q = !0,
                    b
                })
            })
        }
        function E() {
            o(!0).then(function() {
                console.log("JK: triggering usersUpdated event"),
                H.trigger("usersUpdated")
            })
        }
        function F(a, b) {
            G(b, !1),
            i.sendAccountDataChangeNotification(j.USER_REMOVED_FROM_ACCOUNT, b)
        }
        function G(a, b) {
            b ? H.trigger("userRemovedFromNetworkByRemoteUser", a.userId) : H.trigger("userRemovedFromNetwork", a.userId)
        }
        var H = {};
        _.extend(H, Backbone.Events);
        var I, J, K, L = new Backbone.Collection([],{
            model: e
        }), M = new Backbone.Collection([],{
            model: e
        }), N = new Backbone.Collection([],{
            model: e
        }), O = new Backbone.Collection([],{
            model: e
        }), P = new Backbone.Collection([],{
            model: e
        }), Q = !1, R = 1, S = "USRS", T = !0, U = null ;
        return b.on("accountDataRevisionNoChanged", function() {
            o(!0).then(function() {
                console.log("JK: triggering usersUpdated event"),
                H.trigger("usersUpdated")
            })
        }),
        i.on("userRemovedFromNetworkByRemoteUser", function(a) {
            G(a, !0)
        }),
        H.getAllUsersWithDetails = function() {
            return s().then(function(a) {
                return a.data
            })
        }
        ,
        H.updateUserNotificationSettings = function(a, b, c) {
            return b = b ? 1 : 0,
            c = c ? 1 : 0,
            t(a, b, c).then(function(a) {
                return a
            })
        }
        ,
        H.inviteUsersToNetwork = function(a, b) {
            return u(a, b).then(function(a) {
                return a
            })
        }
        ,
        H.getGroupsToWhichUserCanBeAdded = function(a) {
            return v(a).then(function(a) {
                return a.data
            })
        }
        ,
        H.getGroupsToWhichUserCanBeRemoved = function(a) {
            return w(a).then(function(a) {
                return a.data
            })
        }
        ,
        H.removeUserFromNetwork = function(a) {
            return x(a).then(function(a) {
                return a
            })
        }
        ,
        H.getUserDetails = function(b) {
            var c = d.defer()
              , e = a.get("user", {
                params: {
                    user_id: b
                }
            });
            return e.success(function(a, b) {
                c.resolve(a)
            }),
            c.promise
        }
        ,
        H.updateUserProfile = function(b) {
            if (b) {
                b.method = "updateUserProfile";
                var c = a.post("user", b)
                  , e = d.defer();
                return c.success(function(a, b) {
                    e.resolve(a)
                }),
                e.promise
            }
        }
        ,
        H.followUser = function(b) {
            var c = {
                method: "followUser",
                user_id: b
            }
              , e = a.post("user", c)
              , f = d.defer();
            return e.success(function(a, b) {
                f.resolve(a)
            }),
            f.promise
        }
        ,
        H.unfollowUser = function(b) {
            var c = {
                method: "unfollowUser",
                user_id: b
            }
              , e = a.post("user", c)
              , f = d.defer();
            return e.success(function(a, b) {
                f.resolve(a)
            }),
            f.promise
        }
        ,
        H.getTopGroups = function(b) {
            var c = {
                authToken: f.login_data.xmpp_session_token,
                userID: f.login_data.user.user_id,
                accountID: f.login_data.account_id,
                other_user_id: b
            }
              , e = a.post("analytics/usertopgroups", c)
              , g = d.defer();
            return e.then(function(a) {
                g.resolve(a.data)
            }),
            g.promise
        }
        ,
        H.getUsers = o,
        H.getSearchableUsers = p,
        H.getPublishableUsers = q,
        H.getBuddyUsers = r,
        H.getUser = y,
        H.getUserById = z,
        H.findUser = A,
        H.getUserFromServerIfNotAvailableLocally = B,
        H.getUsersLowerCaseEmailsMap = C,
        H.fillRelevanciesInUsers = D,
        H.getUsersFromServer = E,
        H
    }
    ]),
    b.module("convoApp").controller("MenuletAppCtrl", ["$scope", "$rootScope", "config", "$location", "Login", "Groups", "ServerComm", "Users", "accountInfo", "userInfo", "AppLinks", "datetimeService", "authService", "awsService", "InAppNotifications", "appStateInfo", "nativeCommBridge", "$window", "nativeHeightUpdate", "settingsService", "accountDataService", "awsService", "usersGroupsListProvider", "connectivity", "appTabs", "utils", "emojiDataService", "filterInfo", "loginResponseData", function(b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, o, w, x, y, z, A, B, C) {
        function D(a) {
            C.set(a),
            c.login_data = a,
            d.IS_NATIVE && r.signIn(JSON.stringify(a));
            for (var b, f = a.user_accounts, h = a.account_id, l = 0; l < f.length; l++)
                if (f[l].account_id === h) {
                    b = f[l];
                    break
                }
            j.initAccountInfo(b, f),
            k.initUserInfo(a.user, b),
            o.setAwsData(a.aws_data);
            var n = {};
            n[a.user.user_id] = {
                accessible: !0,
                name: a.user.first_name + " " + a.user.last_name,
                profile_image_type: a.user.profile_image_type,
                profile_image_version: a.user.profile_image_version
            };
            var p = parseInt(a.time.timestamp)
              , q = K ? (Date.now() - K) / 2 : 0;
            m.init(p + q),
            J ? e.path(J.path).search(J.search).hash(J.hash) : e.path("/feed").search({}).hash("title=My Feed"),
            i.getUsers().then(function(a) {}),
            u.getGeneralSettings(),
            g.getListableGroups().then(function() {
                g.fillRelevanciesInListableGroups()
            }),
            y.addTabsEventListener2("mainAppFeedFetched", E),
            y.dispatchTabsEvent2("isAppFeedFetched")
        }
        function E() {
            var a = {
                authToken: c.login_data.xmpp_session_token,
                userID: c.login_data.user.user_id,
                accountID: c.login_data.account_id,
                fromIndex: 0,
                itemsCount: 1,
                summaryParams: null ,
                sortBy: 1,
                feedIDsWithTimestamp: null ,
                filter: null ,
                isSearch: !1,
                includeChats: !1,
                includeDrafts: !1,
                applyHighlight: !0
            };
            h.postx("feed/fetch", a)
        }
        function F() {
            b.signed_in = !1,
            a.com_convo.sessionData.isSignedIn = !1,
            b.$apply()
        }
        d.IS_MENULET = !0;
        var G = d.APP_BASE_URL.split("/");
        G.pop(),
        G.pop(),
        d.APP_BASE_URL = G.join("/") + "/",
        r.initializeApp(),
        b.appLoaded = null ;
        var H = z.generateUniqueId();
        y.initializeThisTab(H),
        h.setClientInstanceId(H),
        b.tab = {},
        b.tab.appContCtrl = {},
        b.tab.appContCtrl.appCtrl = {};
        var I = function() {
            "function" == typeof b.tab.appContCtrl.appCtrl.closing && b.tab.appContCtrl.appCtrl.closing()
        }
        ;
        s.addEventListener("unload", I),
        x.initialize();
        var J = !1;
        b.signed_in = a.com_convo.sessionData.isSignedIn;
        var K = null ;
        c.filterInfo = B,
        b.signed_in && D(JSON.parse(a.com_convo.sessionData.signInResponseDataJSON)),
        b.loadApp = function() {
            r.loadApp()
        }
        ,
        $(a).on("disconnected", function() {
            b.$apply(function() {
                b.signed_in = !1,
                a.com_convo.sessionData.isSignedIn = !1
            })
        }),
        r.on("logoutMenulet", F),
        h.on("sessionExpired", F),
        h.on("appUpdateAvailable", F),
        t.initilizeObserver(),
        setTimeout(function() {
            b.appLoaded = !0
        }, 0),
        setTimeout(function() {
            A.loadAssets()
        }, 5e3)
    }
    ]),
    b.module("templates-app", ["apps/headers/basicAppHeader.tpl.html", "apps/headers/common/header.tpl.html", "apps/templates/resourceNotAvailable.tpl.html", "chat/client/chatSettings/templates/cnvChatSettingsPanel.tpl.html", "chat/client/chatUsersWindow/templates/chatList.tpl.html", "chat/client/chatUsersWindow/templates/cnvChatUsersWindow.tpl.html", "chat/client/chatUsersWindow/templates/userList.tpl.html", "chat/client/chatWindow/templates/chatActionBar.tpl.html", "chat/client/chatWindow/templates/chatWindow.tpl.html", "chat/client/chatWindow/templates/cnvVideoCallOptionsInChat.tpl.html", "chat/client/chatWindow/templates/messageList.tpl.html", "chat/client/cnvChatApp.tpl.html", "chat/client/dockedChatWindows/templates/cnvDockedChatWindows.tpl.html", "comments/commentEditor/cnvCommentEditor.tpl.html", "common/alerts/templates/alertModal.tpl.html", "common/alerts/templates/errorModal.tpl.html", "common/alerts/templates/promptModal.tpl.html", "common/cnvInviteTeammates/templates/cnvFindContactsPermissionDenied.tpl.html", "common/cnvInviteTeammates/templates/cnvFindTeammatesBasicSplash.tpl.html", "common/cnvInviteTeammates/templates/cnvFindTeammatesPermissionView.tpl.html", "common/cnvInviteTeammates/templates/cnvFindTeammatesWaitingView.tpl.html", "common/cnvInviteTeammates/templates/cnvInviteTeammates.tpl.html", "common/cnvInviteTeammates/templates/cnvInviteTeammatesResponseView.tpl.html", "common/cnvInviteTeammates/templates/cnvInviteTeammatesVaniyUrlView.tpl.html", "common/dialogBox.tpl.html", "common/dialogs/templates/cnvResolveLinkModal.tpl.html", "common/dialogs/templates/dialogFooter.tpl.html", "common/dialogs/templates/dialogHeader.tpl.html", "common/listItemRenderers/contactListItem.tpl.html", "common/listItemRenderers/imgLabelListItem.tpl.html", "common/templates/threeDotSpinner.tpl.html", "common/userProfileImage/cnvUserProfileImage.tpl.html", "common/videoPlayer/cnvVideoPlayer.tpl.html", "common/videoThumbnail/cnvVideoThumbnail.tpl.html", "components/cnvBanners/cnvBanners.tpl.html", "components/cnvInviteFromAddressBookWidget/cnvInviteFromAddressBookModal.tpl.html", "components/cnvLogoWithFeedDirtyIndicator/cnvLogoWithFeedDirtyIndicator.tpl.html", "components/combinedSetProfilePictureModal/combinedSetProfilePictureModal.tpl.html", "components/dialog/cnvInFeedModal.tpl.html", "components/dropdown/cnvDropdown.tpl.html", "components/dropdown/cnvFeedItemDropdown.tpl.html", "components/dropdown/cnvJoinedGroupDropdown.tpl.html", "components/dropdown/cnvNetworkDropdown.tpl.html", "components/dropdown/cnvOtherProfileDropdown.tpl.html", "components/dropdown/cnvPublicGroupTypeDropdown.tpl.html", "components/dropdown/cnvSelfProfileDropdown.tpl.html", "components/dropdown/cnvUnjoinedGroupDropdown.tpl.html", "components/dropdown/labelListItem.tpl.html", "components/dropdown/separatorListItem.tpl.html", "components/groupInvtStatusDialog/templates/groupInvtStatusDialog.tpl.html", "feed/components/cnvFeedInviteWidget/cnvFeedInviteWidget.tpl.html", "feed/components/cnvNoteSnippetPlaybackBanner/cnvNoteSnippetPlaybackBanner.tpl.html", "feed/renderers/cnvFeedItem.tpl.html", "feed/renderers/comment/cnvComment.tpl.html", "feed/renderers/comment/cnvCommentsPanel.tpl.html", "feed/renderers/gallery/cnvFeedVideoPlayerWrapper.tpl.html", "feed/renderers/gallery/cnvNoteGallery.tpl.html", "feed/renderers/gallery/thumbnail-with-count.tpl.html", "feed/renderers/gallery/thumbnail-with-lazyload.tpl.html", "feed/renderers/gallery/thumbnail-without-lazyload.tpl.html", "feed/renderers/gallery/thumbnail.tpl.html", "feed/renderers/link/cnvLinkFeedItem.tpl.html", "feed/renderers/note/cnvNoteFeedItem.tpl.html", "fileUpload/cnvUploadFilesUiManager.tpl.html", "fileUpload/templates/cnvCommentsUploadFiles.tpl.html", "fileUpload/templates/cnvInlineInsertUploadFiles.tpl.html", "fileUpload/templates/cnvNotesAppUploadFiles.tpl.html", "groups/groupActionBtns/templates/cnvJoinedBtn.tpl.html", "groups/groupSettings/templates/cnvGroupSettings.tpl.html", "groups/groupSettings/templates/integrations.tpl.html", "groups/groupSettings/templates/members.tpl.html", "groups/groupSettings/templates/requests.tpl.html", "groups/groupSettings/templates/settings.tpl.html", "groups/groupsDirectory/templates/cnvAllGroups.tpl.html", "groups/groupsDirectory/templates/cnvGroupsDirectory.tpl.html", "groups/groupsDirectory/templates/cnvGroupsRequests.tpl.html", "groups/groupsDirectory/templates/cnvMyGroups.tpl.html", "home/components/cnvAddTagsWidget/cnvAddTagsWidget.tpl.html", "home/components/cnvFeedLinkThis/cnvFeedLinkThis.tpl.html", "home/components/cnvGroupsFilterList/cnvGroupsFilterExpandList.tpl.html", "home/components/cnvGroupsFilterList/cnvGroupsFilterList.tpl.html", "home/components/cnvHomeCenterPanelFeedPinnedPostWidget/cnvHomeCenterPanelFeedPinnedPostWidget.tpl.html", "home/components/cnvHomeLeftPanel/cnvHomeLeftPanel.tpl.html", "home/components/cnvInFeedFilterWidget/cnvInFeedFilterWidget.tpl.html", "home/components/cnvInviteTeammatesWidget/templates/cnvInviteTeammatesModal.tpl.html", "home/components/cnvLeftPanelGroupsList/cnvLeftPanelGroupsList.tpl.html", "home/components/cnvSharePostWidget/cnvSharePostWidget.tpl.html", "home/components/createGroupWidget/createGroupModal.tpl.html", "home/components/createGroupWidget/templates/body.tpl.html", "home/components/createGroupWidget/templates/createGroupDetails.tpl.html", "home/components/createGroupWidget/templates/createGroupInviteMembers.tpl.html", "home/components/createGroupWidget/templates/createGroupInviteMembers2.tpl.html", "home/components/createGroupWidget/templates/createGroupType.tpl.html", "home/components/createGroupWidget/templates/dialog.tpl.html", "home/components/downloadAppsModal/downloadAppsModal.tpl.html", "home/components/groupNotificationsWidget/templates/groupNotificationsModal.tpl.html", "home/components/resourceLikeInfoWidget/templates/multipleResourceLikeInfoModal.tpl.html", "home/components/resourceLikeInfoWidget/templates/resourceLikeInfoModal.tpl.html", "home/components/resourceLikeInfoWidget/templates/singleResourceLikeInfoModal.tpl.html", "home/components/selectFolderWidget/templates/selectFolderModal.tpl.html", "home/components/sharedInfoWidget/templates/sharedInfoModal.tpl.html", "home/groupView/centerPanelWidgets/cnvHomeCenterPanelGroupPinnedPostWidget/cnvHomeCenterPanelGroupPinnedPostWidget.tpl.html", "home/groupView/cnvHomeCenterPanelGroupHeader.tpl.html", "home/groupView/groupsRightPanel.tpl.html", "home/groupView/rightPanelWidgets/cnvAddPinContentModal.tpl.html", "home/groupView/rightPanelWidgets/cnvGroupEmailSharingWidget.tpl.html", "home/groupView/rightPanelWidgets/cnvGroupIntegrationsWidget.tpl.html", "home/groupView/rightPanelWidgets/cnvGroupInviteWidget.tpl.html", "home/groupView/rightPanelWidgets/cnvGroupMembersListWidget.tpl.html", "home/groupView/rightPanelWidgets/cnvGroupPinnedPostsWidget.tpl.html", "home/home.tpl.html", "home/templates/cnvHomeCenterPanelDefaultHeader.tpl.html", "home/templates/homeCenterPanel.tpl.html", "home/templates/homeLeftPanel.tpl.html", "home/templates/homeRightPanel.tpl.html", "home/templates/rightPanels/feedRightPanel.tpl.html", "home/userView/centerPanelWidgets/profilePictureModal.tpl.html", "home/userView/cnvHomeCenterPanelUserHeader.tpl.html", "home/userView/rightPanelWidgets/cnvUserProfileDetailsWidget.tpl.html", "home/userView/rightPanelWidgets/cnvUserProfileDiscussionsWidget.tpl.html", "home/userView/rightPanelWidgets/cnvUserProfileEditWidget.tpl.html", "home/userView/rightPanelWidgets/cnvUserProfileTopGroupsWidget.tpl.html", "home/userView/usersRightPanel.tpl.html", "inlineInsert/cnvInlineInsert.tpl.html", "inlineInsert/cnvInsertAddItemOptions.tpl.html", "inlineInsert/dropzone/cnvDropzone.tpl.html", "inlineInsert/shareLink/cnvShareLink.tpl.html", "integrations/emoji/cnvEmoji.tpl.html", "integrations/emoji/cnvEmojiPopover.tpl.html", "integrations/giphy/templates/cnv-giphy.tpl.html", "integrations/giphy/templates/giphyDirective.tpl.html", "integrations/integrationsDirectory/templates/cnvAddBoxIntegration.tpl.html", "integrations/integrationsDirectory/templates/cnvAddDropboxIntegration.tpl.html", "integrations/integrationsDirectory/templates/cnvAddFacebookIntegration.tpl.html", "integrations/integrationsDirectory/templates/cnvAddGcalIntegration.tpl.html", "integrations/integrationsDirectory/templates/cnvAddGdriveIntegration.tpl.html", "integrations/integrationsDirectory/templates/cnvAddGmailIntegration.tpl.html", "integrations/integrationsDirectory/templates/cnvAddO365CalendarIntegration.tpl.html", "integrations/integrationsDirectory/templates/cnvAddO365DriveIntegration.tpl.html", "integrations/integrationsDirectory/templates/cnvAddO365MailIntegration.tpl.html", "integrations/integrationsDirectory/templates/cnvAddTwitterIntegration.tpl.html", "integrations/integrationsDirectory/templates/cnvAddWebhookIntegration.tpl.html", "integrations/integrationsDirectory/templates/cnvAllIntegrations.tpl.html", "integrations/integrationsDirectory/templates/cnvConfiguredIntegrations.tpl.html", "integrations/integrationsDirectory/templates/cnvConnectedAccounts.tpl.html", "integrations/integrationsDirectory/templates/cnvIntegrationsDirectoryMain.tpl.html", "integrations/integrationsDirectory/templates/cnvTwitterHandlesConfigModal.tpl.html", "integrations/integrationsDirectory/templates/cnvWebhookInstructions.tpl.html", "invites/cnvSelectedUsersBox/cnvSelectedUsersBox.tpl.html", "invites/templates/cnvBasicInviteModal.tpl.html", "invites/templates/cnvInvites.tpl.html", "invites/templates/cnvInvitesInlineWidgets.tpl.html", "links/cnvLinksApp.tpl.html", "links/webview/templates/header.tpl.html", "links/webview/webview.tpl.html", "login/login.tpl.html", "main/components/cnvInAppNotificationsDropdown/cnvInAppNotificationsDropdown.tpl.html", "main/components/cnvNetworkLogoAndName/cnvNetworkLogoAndName.tpl.html", "main/main.tpl.html", "main/templates/header/mainHeaderPanel.tpl.html", "notes/cnvNotesApp.tpl.html", "notes/commentsPanel/templates/cnvInAppComment.tpl.html", "notes/commentsPanel/templates/cnvInAppCommentEditor.tpl.html", "notes/commentsPanel/templates/cnvInAppCommentsBox.tpl.html", "notes/commentsPanel/templates/cnvInAppCommentsPanel.tpl.html", "notes/commentsPanel/templates/inAppComment.tpl.html", "notes/editor/templates/editorMain.tpl.html", "notes/editor/templates/header.tpl.html", "notes/gallery/components/cnvFileViewer/cnvFileViewer.tpl.html", "notes/gallery/components/cnvGallerySnippetCommentBtn/cnvGallerySnippetCommentBtn.tpl.html", "notes/gallery/components/cnvImageViewer/cnvImageViewer.tpl.html", "notes/gallery/components/cnvToolSelected/cnvToolSelected.tpl.html", "notes/gallery/components/cnvVideoViewer/cnvVideoViewer.tpl.html", "notes/gallery/components/galleryFooter/galleryFooter.tpl.html", "notes/gallery/components/galleryHeader/galleryHeader.tpl.html", "notes/gallery/templates/galleryMain.tpl.html", "onboarding/cnvOnboardingDownloadAppsAdvert/cnvOnboardingDownloadAppsAdvert.tpl.html", "onboarding/cnvOnboardingHomeRight/cnvOnboardingChecklist.tpl.html", "onboarding/cnvOnboardingPilotIntro/cnvOnboardingPilotIntro.tpl.html", "onboarding/templates/cnvDemoPost.tpl.html", "onboarding/templates/cnvHomeOnboarding.tpl.html", "onboarding/templates/cnvOnBoardingManager.tpl.html", "onboarding/templates/cnvOnboardingAddCommentTooltip.tpl.html", "onboarding/templates/cnvOnboardingAnnotationAddCommentTooltip.tpl.html", "onboarding/templates/cnvOnboardingDismissBanner.tpl.html", "onboarding/templates/cnvOnboardingPermissionsTooltip.tpl.html", "onboarding/templates/cnvOnboardingTooltips.tpl.html", "premiumUpgrade/chargify/cnvChargify.tpl.html", "premiumUpgrade/cnvPremiumUpgrade.tpl.html", "premiumUpgrade/contactSalesModal/contactSalesModal.tpl.html", "premiumUpgrade/premiumUpgradeBtn/cnvPremiumUpgradeBtn.tpl.html", "search/cnvAdvancedSearch/cnvAdvancedSearch.tpl.html", "search/cnvAdvancedSearch/datepickerPopup.tpl.html", "search/cnvFeedSearchBar/cnvFeedSearchBar.tpl.html", "settings/hiddenGroupsAndTeammatesModal/cnvHiddenGroupsAndTeammatesModal.tpl.html", "settings/templates/accountSettingsView.tpl.html", "settings/templates/billingView.tpl.html", "settings/templates/cnvSettings.tpl.html", "settings/templates/cnvSingleSignOnSettings.tpl.html", "settings/templates/customizeFeed.tpl.html", "settings/templates/manageGroupsView.tpl.html", "settings/templates/manageUsersView.tpl.html", "settings/templates/monitorContentView.tpl.html", "settings/templates/networkInformationView.tpl.html", "settings/templates/notificationsView.tpl.html", "settings/templates/securityView.tpl.html", "settings/templates/settingsLeftPanel.tpl.html", "settings/templates/singleSignOnSettingsView.tpl.html", "users/usersDirectory/cnvUserDirectoryMain.tpl.html", "users/usersDirectory/userDirModal/usrDirModal.tpl.html"]),
    b.module("apps/headers/basicAppHeader.tpl.html", []).run(["$templateCache", function(a) {
        a.put("apps/headers/basicAppHeader.tpl.html", '<section class="app-header" ng-class="{\'open-gallery\': galleryCtrl.active}">\n\n	<div class="segment pull-left">\n\n		<cnv-logo-with-feed-dirty-indicator></cnv-logo-with-feed-dirty-indicator>\n\n		<ng-include ng-if="openEditor" src="\'notes/editor/templates/header.tpl.html\'"></ng-include>\n\n		<ng-include ng-if="openWebview" src="\'links/webview/templates/header.tpl.html\'"></ng-include>\n	</div>\n\n	<div ng-include style="display: inline;" class="gallery-controls" ng-if="galleryCtrl.active" ng-show="galleryCtrl.allowControls" src="\'notes/gallery/components/galleryHeader/galleryHeader.tpl.html\'"></div>\n\n	<div class="segment pull-right">\n		<ng-include src="\'apps/headers/common/header.tpl.html\'"></ng-include>\n\n		<span class="separator"></span>\n\n		<div class="notification-icon inline-control">\n			<cnv-in-app-notifications-dropdown></cnv-in-app-notifications-dropdown>\n		</div>\n	</div>\n\n</section>\n')
    }
    ]),
    b.module("apps/headers/common/header.tpl.html", []).run(["$templateCache", function(a) {
        a.put("apps/headers/common/header.tpl.html", '<ul bo-if="galleryCtrl.postType !== 21" class="sub-app-header-controls comments-panel">\n  <li ng-click="likeButtonClick()" ng-if="!galleryCtrl.isCommentAttachment">\n    <i class="cnv-icons-16" ng-class="{\'icons2_Like-lightgray\': !likesInfo.liked_by_me, \'icons2_Like-blue\': likesInfo.liked_by_me}"></i>\n\n    <!-- <div class="format-label" cnv-like-button like-info="likesInfo" like-handler="currentAppCtrl.onLikeClick(action)"></div> -->\n    <div class="format-label" ng-if="!likesInfo.liked_by_me">Like</div>\n    <div class="format-label" ng-if="likesInfo.liked_by_me">Unlike</div>\n\n  </li>\n\n  <li ng-if="relatedPermissions.canComment" ng-click="commentsCountClick()">\n    <span class="cnv-icons-16 notification-counter icons_Comments-lightgray">\n    </span>\n    <span class="counter badge" ng-show="!enableCommentsPanel.active && currentAppCtrl.headerData.totalComments " ng-bind="currentAppCtrl.headerData.totalComments"></span>\n\n    <div class="format-label">Comment</div>\n  </li>\n\n  <li class="show-hide-panel" ng-click="showHideCommentsPanel()">\n    <i class="cnv-icons-16 icon_expand_panel-lightgray panel-toggle" ng-class="{\'forward\': enableCommentsPanel.active, \'backward\': !enableCommentsPanel.active}"></i>\n    <div class="format-label" ng-if="!enableCommentsPanel.active">Show panel</div>\n    <div class="format-label" ng-if="enableCommentsPanel.active">Hide panel</div>\n  </li>\n</ul>\n')
    }
    ]),
    b.module("apps/templates/resourceNotAvailable.tpl.html", []).run(["$templateCache", function(a) {
        a.put("apps/templates/resourceNotAvailable.tpl.html", '<div class="app-overlay-wrapper">\n	<div class="app-overlay">\n		<div class="content">\n\n			<!-- <img ng-if="view != 5" src="assets/img/common/convo-guru.png" class="guru"> -->\n\n			<div ng-if="view != 5" class="message-head"></div>\n\n			<div class="message-body">\n				<span ng-if="view == 2 || view == 3">This post may not be shared with you or may<br>have been removed. You can head <a href="javascript:void(0)" ng-click="$emit(\'goBackInHistory\', tab)">back</a>, or go to your feed.</span>\n				<span ng-if="view == 4">This file has been removed.<br>You can head <a href="javascript:void(0)" ng-click="$emit(\'goBackInHistory\', tab)">back</a>, or view other files in the post.</span>\n				<span ng-if="view == 5" class="cnv-spinner light"></span>\n				<span ng-if="view == 6">This file may not be shared with you.<br>You can head <a href="javascript:void(0)" ng-click="$emit(\'goBackInHistory\', tab)">back</a>, or go to your feed.</span>\n			</div>\n\n			<div class="action-bar">\n				<a ng-if="view == 2 || view == 3 || view == 6" href="javascript:void(0);"><button class="btn btn-primary" ng-click="$emit(\'goHome\')">Go to Feed</button></a>\n				<a ng-if="view == 4" href="{{tab.appInstanceId | getResourceLinkUrl: [{ type: note.item.type, uid: note.item.item_id, title: note.item.title}]: null:note.item.title}}"><button class="btn btn-primary">View post</button></a>\n			</div>\n\n		</div>\n	</div>\n</div>\n')
    }
    ]),
    b.module("chat/client/chatSettings/templates/cnvChatSettingsPanel.tpl.html", []).run(["$templateCache", function(a) {
        a.put("chat/client/chatSettings/templates/cnvChatSettingsPanel.tpl.html", '<cnv-chat-settings-panel class="settingsPanel" bindonce>\n    <div class="settingsHeader">\n        <span>Settings</span>\n\n        <div class="closeSettingsButton" ng-click="closeSettingsPanel()"></div>\n    </div>\n\n    <div bo-show="!initialized" class="loading-spinner">\n        <img src="assets/img/feed/loading-spin.svg" alt="Loading icon"/>\n    </div>\n\n\n    <div bo-show="initialized">\n        <div style="margin-top: 15px;margin-left: 15px;">\n            <span>Status</span>\n\n            <div bo-bind="curStatus" style="display: inline-block;margin-left: 15px;"></div>\n            <div bo-show="curStatus == \'Available\'" class="availableBubble"></div>\n            <div bo-show="curStatus == \'Busy\'" class="busyBubble"></div>\n            <cnv-dropdowns style="float: right;margin-right: 5%;margin-top: -3px;"\n                           cnv-dropdown-ctrl="statusOptions"></cnv-dropdowns>\n            <div class="dropdown"></div>\n        </div>\n        <div class="line-separator"></div>\n        <div style="margin-bottom: 20px">\n            <div class="notifications" style="margin-left: 15px;margin-top: 10px;">\n                <span style="vertical-align: middle">Notifications</span>\n\n                <div style="float:right;margin-right: 14px;">\n                    <div class="chkNotification btn-group btn-toggle">\n                        <button class="btn btn-xs btn-primary active">ON</button>\n                        <button class="btn btn-xs btn-default-transparent-font">OFF</button>\n                    </div>\n                    <!--   <input class="" type="checkbox" checked data-toggle="toggle">-->\n                </div>\n            </div>\n            <div class="sounds" style="margin-left: 15px;margin-top: 20px;">\n                <span style="vertical-align: middle">Sounds</span>\n\n                <div style="float:right;margin-right: 14px;">\n                    <div class="chkSound btn-group btn-toggle">\n                        <button class="btn btn-xs btn-primary active">ON</button>\n                        <button class="btn btn-xs btn-default-transparent-font">OFF</button>\n\n                    </div>\n                    <!--  <input class="chkSound" type="checkbox" checked data-toggle="toggle">-->\n                </div>\n            </div>\n        </div>\n        <div class="line-separator"></div>\n        <div class="sorting" style="margin-left: 15px;margin-top: 10px;">\n            <span>Sort by:</span>\n\n            <div bo-bind="sortStatus" style="display: inline-block;margin-left: 10px;"></div>\n            <cnv-dropdowns style="float: right;margin-right: 5%;margin-top: -3px;"\n                           cnv-dropdown-ctrl="sortOptions"></cnv-dropdowns>\n            <div class="dropdown"></div>\n        </div>\n    </div>\n</cnv-chat-settings-panel>')
    }
    ]),
    b.module("chat/client/chatUsersWindow/templates/chatList.tpl.html", []).run(["$templateCache", function(a) {
        a.put("chat/client/chatUsersWindow/templates/chatList.tpl.html", '<div ng-repeat="chat in chatList | limitTo:showingList track by getIdForTrackBy(chat)"\n     bo-class="{selected : $index == userSelectedIndex }"\n     onmouseover="mouseOnItem(this)">\n    <div bo-if=\'chat.chatId\'>\n        <div class="listItem" bo-mousedown="openChatWindow($event,chat)">\n            <div style="width:100%; height: 10px;"></div>\n            <div class="user-img-48" bo-if="chat.chatType == 1">\n                <cnv-user-profile-image user-id="chat._user.userId" size="48" width="40" height="40"\n                                        profile-type="chat._user.profileImageType" full-name="chat.getOtherParticipant().name"\n                                        profile-version="chat._user.profileImageVersion"></cnv-user-profile-image>\n            </div>\n\n            <cnv-group-chat-avatar participants="chat.participants" bindonce\n                                   style="width: 40px;height: 40px;margin-left: 5%;font-size: 8px; display: inline-block; "\n                                   bo-if="chat.chatType == 2">\n                <div class="topList" style="display: flex;display: -webkit-flex;display: -ms-flexbox;"\n                     bo-if="!emptyChatUser && userArr.length >1">\n                    <cnv-user-profile-image user-id="userArr[0].userId" size="22" width="20" height="20"\n                                            bo-class="{\'showing3GroupUsersTop\' : show3images,\'showing2GroupUsersTop\' : show2images}"\n                                            profileType="userArr[0].profileImageType"\n                                            profileVersion="userArr[0].profileImageVersion" full-name="userArr[0].firstName+\' \'+userArr[0].lastName"></cnv-user-profile-image>\n\n                    <cnv-user-profile-image user-id="userArr[3].userId" size="22" width="20" height="20"\n                                            bo-show="!show2images && !show3images"\n                                            profileType="userArr[3].profileImageType"\n                                            profileVersion="userArr[3].profileImageVersion" full-name="userArr[3].firstName+\' \'+userArr[3].lastName"></cnv-user-profile-image>\n\n                </div>\n                <div class="botList" style="display: flex;display: -webkit-flex; display: -ms-flexbox;"\n                     bo-if="!emptyChatUser && userArr.length >1"\n                     bo-class="{\'showing3GroupUsersBot\' : show3images}">\n\n                    <cnv-user-profile-image user-id="userArr[2].userId" size="22" width="20" height="20"\n                                            bo-show="!show2images"\n                                            profileType="userArr[2].profileImageType"\n                                            profileVersion="userArr[2].profileImageVersion" full-name="userArr[2].firstName+\' \'+userArr[2].lastName"></cnv-user-profile-image>\n\n                    <cnv-user-profile-image user-id="userArr[1].userId" size="22" width="20" height="20"\n                                            bo-class="{showing2GroupUsersBot : show2images }"\n                                            bo-show="userArr.length <= 4"\n                                            profileType="userArr[1].profileImageType"\n                                            profileVersion="userArr[1].profileImageVersion" full-name="userArr[1].firstName+\' \'+userArr[1].lastName"></cnv-user-profile-image>\n                    <div class="groupAvatarCounter" bo-show="showCounter" bo-bind="\'+\'+(userArr.length-3)"></div>\n                </div>\n                <div bo-if="userArr.length == 1" style="font-size: 15px">\n                    <cnv-user-profile-image user-id="userArr[0].userId" size="48" width="40" height="40"\n                                            profileType="userArr[0].profileImageType"\n                                            profileVersion="userArr[0].profileImageVersion" full-name="userArr[0].firstName+\' \'+userArr[0].lastName"></cnv-user-profile-image>\n                </div>\n                <div bo-if="emptyChatUser" style="font-size: 15px">\n                    <cnv-user-profile-image user-id="emptyChatUser.userId" size="48" width="40" height="40"\n                                            profileType="emptyChatUser.profileImageType"\n                                            profileVersion="emptyChatUser.profileImageVersion"></cnv-user-profile-image>\n                </div>\n            </cnv-group-chat-avatar>\n\n            <div class="chatListInfo">\n                <div class="chatListTitle" bo-bind="chat.getTitle()" bo-class="{\'boldChatTitle\' : chat.unreadCount && chat.unreadCount > 0}"></div>\n                <div class="chatListDate"\n                     bo-date="chat.lastMessageTimestamp | dateAgo : null : true : true"></div>\n                <div class="listUnreadCountCont">\n                    <i bo-show="chat.isMuted" class="cnv-icons-20 icons2_Mute-lightgray"></i>\n                    <div class="listUnreadCount" bo-show="chat.unreadCount && chat.unreadCount > 0"\n                         bo-bind="chat.unreadCount > 20 ? \'20+\': chat.unreadCount"></div>\n                </div>\n                <div class="chatListMsg" bo-bind="chat.getSummeryText()"></div>\n            </div>\n            <div style=" position: absolute;left: 42px;margin-top: 28px;display: inline-block;">\n                <div bo-if="chat._user.presenceStatus == 1  && chat._user.getDevice() !=2"\n                     class="listUserStatusOnline"></div>\n                <div bo-if="chat._user.presenceStatus == 2  && chat._user.getDevice() !=2"\n                     class="listUserStatusBusy"></div>\n                <div bo-if="chat._user.presenceStatus == 3  && chat._user.getDevice() !=2"\n                     class="listUserStatusIdle"></div>\n                <div bo-if="chat._user.presenceStatus == 4  && chat._user.getDevice() !=2 && !chat._user.getHasMobile()"\n                     class="listUserStatusOffline"></div>\n                <div bo-if="(chat._user.getDevice() ==2) || (chat._user.presenceStatus == 4 && chat._user.getHasMobile())"\n                     class="listUserStatusMobile"></div>\n            </div>\n        </div>\n    </div>\n    <div bo-show="chat.userId">\n        <div class="listItem" bo-mousedown="openChatWindow($event,chat)">\n            <div style="width:100%; height: 10px;"></div>\n            <div class="user-img-48">\n                <cnv-user-profile-image user-id="chat.userId" size="48" width="40" height="40"\n                                        profileType="chat.profileImageType"\n                                        profileVersion="chat.profileImageVersion"></cnv-user-profile-image>\n            </div>\n            <div class="listUserName" bo-bind="chat.getDisplayName()">\n            </div>\n            <div style=" position: absolute;left: 41px;margin-top: 27px;display: inline-block;">\n                <div bo-if="chat.presenceStatus == 1  && chat.getDevice() !=2" class="listUserStatusOnline"></div>\n                <div bo-if="chat.presenceStatus == 2  && chat.getDevice() !=2" class="listUserStatusBusy"></div>\n                <div bo-if="chat.presenceStatus == 3  && chat.getDevice() !=2" class="listUserStatusIdle"></div>\n                <div bo-if="chat.presenceStatus == 4  && chat.getDevice() !=2 && !chat.getHasMobile()"\n                     class="listUserStatusOffline"></div>\n                <div bo-if="(chat.getDevice() ==2) || (chat.presenceStatus == 4 && chat.getHasMobile())"\n                     class="listUserStatusMobile"></div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!-- <div bo-if="!chatList.length && !showTeammates">\n    <!-- <div class="listItem"> -->\n        <!-- <div style="width:100%; height: 10px;"></div> -->\n        <!-- <span style="margin-left: 5%;color: #868e8e;">No chats yet...</span> -->\n    <!-- </div> -->\n<!-- </div> -->')
    }
    ]),
    b.module("chat/client/chatUsersWindow/templates/cnvChatUsersWindow.tpl.html", []).run(["$templateCache", function(a) {
        a.put("chat/client/chatUsersWindow/templates/cnvChatUsersWindow.tpl.html", '<div id="chatUserListMainWindow" class="chatUserListMainStyl" tabindex="0" bindonce>\n    <a id="intercom-io-btn" bo-href="intercomIOBtnHref" style="visibility: hidden"></a>\n    <div class="content-resizer" cnv-resizer="vertical" resizer-bottom="chatUserListMainWindow"></div>\n    <div class="chatUserListHeader" cnv-minimizer>\n        <div class="chatsIcon"></div>\n        <div class="chatHeaderText">\n            <span>Chats</span>\n\n            <div style="display: inline-block;margin-bottom: -2px;margin-left: 5px;">\n                <div bo-if="thisUser.presenceStatus == 1  && thisUser.getDevice() !=2"\n                class="listUserStatusOnline"></div>\n                <div bo-if="thisUser.presenceStatus == 2  && thisUser.getDevice() !=2"\n                class="listUserStatusBusy"></div>\n                <div bo-if="thisUser.presenceStatus == 3  && thisUser.getDevice() !=2"\n                class="listUserStatusIdle"></div>\n                <div bo-if="thisUser.presenceStatus == 4  && thisUser.getDevice() !=2 && !thisUser.getHasMobile()"\n                class="listUserStatusOffline"></div>\n                <div bo-if="(thisUser.getDevice() == 2) || (thisUser.presenceStatus == 4 && thisUser.getHasMobile())"\n                class="listUserStatusMobileWhite"></div>\n            </div>\n        </div>\n        <div class="btnMinimize" style="right: 10px;"></div>\n\n    </div>\n    <div bo-if="showingSettingPanel">\n        <div ng-include src="\'chat/client/chatSettings/templates/cnvChatSettingsPanel.tpl.html\'"></div>\n    </div>\n    <div class="chatSearchBar">\n        <div class="searchChatIcon"></div>\n        <input class="inputSearchBar" placeholder="FIND TEAMMATES TO CHAT" bo-keydown="removeText($event)"/>\n\n        <div class="settingsChatIcon" bo-show="!isSearchView" ng-click="showSettingsPanel()"></div>\n        <div class="closeTeammateIcon" bo-show="isSearchView" ng-click="closeTeammatesView($event)"></div>\n    </div>\n\n    <cnv-chat-user-list id="chatUserList" class="chatUserList" bindonce>\n        <div id="chatsView"\n        style="overflow: hidden;position: relative;flex: 1;-webkit-flex:1;-ms-flex: 1; height: inherit;width: inherit;"\n        bo-show="showTeammates==false" ng-include src="\'chat/client/chatUsersWindow/templates/chatList.tpl.html\'"></div>\n        <div id="TeammatesView" style="overflow: hidden;position: relative;flex: 1;-webkit-flex:1;-ms-flex: 1;height: inherit;width: inherit;" bo-show="showTeammates==true" ng-include src="\'chat/client/chatUsersWindow/templates/userList.tpl.html\'">\n        </div>\n        <div class="chat-blank-state-wrapper" bo-show="users.length == 0">\n            <i class="cnv-icons-40 icons2_Chats-lightgray"></i>\n            <p>Send chats to your teammates,<br />one-on-one or in groups.<br /></p>\n        </div>\n        <div class="list-end-placeholder" bo-show="showInviteTeamMateLink && !isThisUserGuestUser">\n            <div style="width:100%; height: 10px;"></div>\n            <a ng-click="openInviteTeammatesModal()">INVITE TEAMMATES</a>\n            <div style="width:100%; height: 10px;"></div>\n        </div>\n        <div class="spinner-container" bo-show="chatUserListSpinner">\n            <i class="cnv-circle-spinner-small"></i>\n        </div>\n    </cnv-chat-user-list>\n</div>')
    }
    ]),
    b.module("chat/client/chatUsersWindow/templates/userList.tpl.html", []).run(["$templateCache", function(a) {
        a.put("chat/client/chatUsersWindow/templates/userList.tpl.html", '<div ng-repeat="user in users | limitTo:showingList track by getIdForTrackBy(user)"\n     bo-class="{selected : $index == userSelectedIndex }"\n     onmouseover="mouseOnItem(this)">\n    <div class="listItem" bo-mousedown="openChatWindow($event,user)">\n        <div style="width:100%; height: 10px;"></div>\n        <div class="user-img-48">\n            <cnv-user-profile-image user-id="user.userId" size="48" width="40" height="40"\n                                    profileType="user.profileImageType"\n                                    profileVersion="user.profileImageVersion"></cnv-user-profile-image>\n        </div>\n        <div class="listUserName" bo-bind="user.getDisplayName()">\n        </div>\n        <div style=" position: absolute;left: 41px;margin-top: 27px;display: inline-block;">\n            <div bo-if="user.presenceStatus == 1  && user.getDevice() !=2" class="listUserStatusOnline"></div>\n            <div bo-if="user.presenceStatus == 2  && user.getDevice() !=2" class="listUserStatusBusy"></div>\n            <div bo-if="user.presenceStatus == 3  && user.getDevice() !=2" class="listUserStatusIdle"></div>\n            <div bo-if="user.presenceStatus == 4  && user.getDevice() !=2 && !user.getHasMobile()"\n                 class="listUserStatusOffline"></div>\n            <div bo-if="(user.getDevice() ==2) || (user.presenceStatus == 4 && user.getHasMobile())"\n                 class="listUserStatusMobile"></div>\n        </div>\n    </div>\n</div>')
    }
    ]),
    b.module("chat/client/chatWindow/templates/chatActionBar.tpl.html", []).run(["$templateCache", function(a) {
        a.put("chat/client/chatWindow/templates/chatActionBar.tpl.html", '<cnv-chat-action-bar bindonce>\n    <div class="statusMessage" bo-if="chatObj.chatType == 1 && !chatService.isAdminModeONAndThisUserIsNotInChatParticipantsAndIsP2PChat(chatObj)">\n\n        <div bo-if="chatObj._user.presenceStatus == 1"\n             bo-bind="chatObj._user.firstName + \' is online\' "></div>\n        <div bo-if="chatObj._user.presenceStatus == 2"\n             bo-bind="chatObj._user.firstName + \' is busy\' "></div>\n        <div bo-if="chatObj._user.presenceStatus == 3"\n             bo-bind="chatObj._user.firstName + \' is idle\' "></div>\n        <div bo-if="chatObj._user.presenceStatus == 4  && chatObj._user.getDevice() !=2 && !chatObj._user.getHasMobile()"\n             bo-bind="chatObj._user.firstName + \' is offline\' "></div>\n        <div bo-if="(chatObj._user.presenceStatus == 4 && chatObj._user.getHasMobile())"\n             bo-bind="\'Active \' + (chatObj._user.lastPingTime | dateAgo: null : true : true :true :true )"></div>\n    </div>\n    <div class="participantsList" bo-if="chatObj.chatType == 2 || chatService.isAdminModeONAndThisUserIsNotInChatParticipantsAndIsP2PChat(chatObj)">\n        <cnv-participant-list bindonce>\n            <div ng-repeat="userAvatar in usersAvatar"\n                 style=" vertical-align:middle;display:inline-block; font-size: 12px; margin-left: 2px;margin-top: 1px;">\n                <cnv-user-profile-image cnv-popover cnv-popover-ctrl="userAvatar.displayName"\n                                        user-id="userAvatar.userId" size="32" width="30" height="30"\n                                        profile-type="userAvatar.profileImageType" full-name="userAvatar.displayName"\n                                        profile-version="userAvatar.profileImageVersion">\n                </cnv-user-profile-image>\n                <div style="display: inline-block;margin-left: -11px;margin-bottom: -14px;">\n                    <div bo-if="userAvatar.presenceStatus == 1  && userAvatar.getDevice() !=2"\n                         class="listUserStatusOnline"></div>\n                    <div bo-if="userAvatar.presenceStatus == 2  && userAvatar.getDevice() !=2"\n                         class="listUserStatusBusy"></div>\n                    <div bo-if="userAvatar.presenceStatus == 3  && userAvatar.getDevice() !=2"\n                         class="listUserStatusIdle"></div>\n                    <div bo-if="userAvatar.presenceStatus == 4  && userAvatar.getDevice() !=2 && !userAvatar.getHasMobile()"\n                         class="listUserStatusOffline"></div>\n                    <div bo-if="(userAvatar.getDevice() ==2) || (userAvatar.presenceStatus == 4 && userAvatar.getHasMobile())"\n                         class="listUserStatusMobile"></div>\n                </div>\n            </div>\n            <a bo-if="participantsList.length > 5" bo-bind="\'+\'+(participantsList.length-4)"\n               ng-click="showParticipantsList()" style="cursor: pointer;vertical-align: middle;">\n            </a>\n            <!-- <div class="dropdownBtn" >\n             </div>-->\n            <div class="participantList" tabindex="0" bo-show="showingParticipantList">\n                <div ng-repeat="user in participantsList">\n                    <div class="participantUserName" bo-bind="user.displayName">\n                    </div>\n                    <div style="display: inline-block;">\n                        <div bo-if="user.presenceStatus == 1  && user.getDevice() !=2"\n                             class="listUserStatusOnline"></div>\n                        <div bo-if="user.presenceStatus == 2  && user.getDevice() !=2"\n                             class="listUserStatusBusy"></div>\n                        <div bo-if="user.presenceStatus == 3  && user.getDevice() !=2"\n                             class="listUserStatusIdle"></div>\n                        <div bo-if="user.presenceStatus == 4  && user.getDevice() !=2 && !user.getHasMobile()"\n                             class="listUserStatusOffline"></div>\n                        <div bo-if="(user.getDevice() ==2) || (user.presenceStatus == 4 && user.getHasMobile())"\n                             class="listUserStatusMobile"></div>\n                    </div>\n                </div>\n            </div>\n        </cnv-participant-list>\n    </div>\n\n    <div class="vidCamera-lightgray cnv-icons-20 videoCallCamera" ng-mouseup="showVideoCallOptions()"></div>\n    <cnv-video-call-options-in-chat bo-if="showVidCallDropdown" class="vidCallOptionsDropdown"></cnv-video-call-options-in-chat>\n\n    <div class="addToChat" ng-click="showUserList()"></div>\n    <cnv-add-user-in-chat class="addParticipantList" bo-show="showUserListToAdd">\n        <div class="userSearchBarContainer">\n            <input class="userSearchBar" ng-keydown="userSearchBarKeyDown($event)"/>\n\n            <div class="searchChatIcon"></div>\n        </div>\n        <div class="addUserList">\n            <div ng-repeat="user in users | limitTo : addListShowingUsers"\n                 bo-class="{selected : $index == addUserSelectedIndex }" ng-mouseover="mouseOnItem($index)">\n                <div class="addListUserName" bo-bind="user.getDisplayName()"\n                     ng-mousedown="inviteThisUserToChat(user)">\n                </div>\n                <div style="display: inline-block;">\n                    <div bo-if="user.presenceStatus == 1  && user.getDevice() !=2" class="listUserStatusOnline"></div>\n                    <div bo-if="user.presenceStatus == 2  && user.getDevice() !=2" class="listUserStatusBusy"></div>\n                    <div bo-if="user.presenceStatus == 3  && user.getDevice() !=2" class="listUserStatusIdle"></div>\n                    <div bo-if="user.presenceStatus == 4  && user.getDevice() !=2 && !user.getHasMobile()"\n                         class="listUserStatusOffline"></div>\n                    <div bo-if="(user.getDevice() ==2) || (user.presenceStatus == 4 && user.getHasMobile())"\n                         style="margin-left: 2px;" class="listUserStatusMobile"></div>\n                </div>\n            </div>\n        </div>\n    </cnv-add-user-in-chat>\n\n    <!--  <div class="settingsChatWindowIcon" ng-click="showChatOptions(chatObj.chatType)"> -->\n\n    </div>\n    <div style="float: right;margin-top: 5px;">\n\n        <cnv-dropdowns cnv-dropdown-ctrl="chatOptions" ng-disabled="disabledChat && !canShareChat()"></cnv-dropdowns>\n    </div>\n    <!-- <cnv-chat-options class="chatOptionList" tabindex="0" bo-show="showingChatOption">\n         <div class="participantUserName">Share this chat</div>\n         <div class="participantUserName" ng-click="leaveChat(chatObj)">Leave Chat</div>\n     </cnv-chat-options> -->\n</cnv-chat-action-bar>')
    }
    ]),
    b.module("chat/client/chatWindow/templates/chatWindow.tpl.html", []).run(["$templateCache", function(a) {
        a.put("chat/client/chatWindow/templates/chatWindow.tpl.html", '<div>\n    <cnv-chat-window bo-id="chatId" tabindex="0" class="chatWindow" bo-show="!dntShow" bo-style="{right:xPosition}"\n                     bindonce>\n        <!--	<div class="content-resizer-horizontal" cnv-resizer="horizontal" resizer-left="{{::chatId}}">\n            </div> -->\n        <!-- Window Header-->\n        <div class="content-resizer" cnv-resizer="vertical" resizer-bottom="{{::chatId}}"></div>\n        <div class="chatWindowHeader" cnv-minimizer>\n\n            <div class="unreadCount" bo-bind="chatObj.unreadCount > 20 ? \'20+\': chatObj.unreadCount"\n                 bo-if="chatObj.unreadCount > 0 && showUnread"></div>\n            <div class="userProfileImg" bo-show="chatObj.chatType == 1 && !chatService.isAdminModeONAndThisUserIsNotInChatParticipantsAndIsP2PChat(chatObj)">\n                <cnv-user-profile-image user-id="chatObj._user.userId" size="28" width="27" height="27"\n                                        profile-type="chatObj._user.profileImageType" full-name="chatObj.getOtherParticipant().name"\n                                        profile-version="chatObj._user.profileImageVersion"></cnv-user-profile-image>\n            </div>\n            <div style="margin-left: 34px;margin-bottom: -6px;display: inline-block;" bo-if="chatObj.chatType == 1 && !chatService.isAdminModeONAndThisUserIsNotInChatParticipantsAndIsP2PChat(chatObj)">\n                <div bo-if="chatObj._user.presenceStatus == 1  && chatObj._user.getDevice() !=2"\n                     class="listUserStatusOnline"></div>\n                <div bo-if="chatObj._user.presenceStatus == 2  && chatObj._user.getDevice() !=2"\n                     class="listUserStatusBusy"></div>\n                <div bo-if="chatObj._user.presenceStatus == 3  && chatObj._user.getDevice() !=2"\n                     class="listUserStatusIdle"></div>\n                <div bo-if="chatObj._user.presenceStatus == 4  && chatObj._user.getDevice() !=2 && !chatObj._user.getHasMobile()"\n\n                     class="listUserStatusOffline"></div>\n                <div bo-if="(chatObj._user.getDevice() ==2) || (chatObj._user.presenceStatus == 4 && chatObj._user.getHasMobile())"\n\n                     class="listUserStatusMobileWhite"></div>\n            </div>\n            <div class="group-title-img" bo-show="chatObj.chatType == 2">\n            </div>\n\n            <span class="userProfileName" bo-class="{leftTitleForGrpChat : chatObj.chatType == 2, \'move-to-extreme-left\' : chatService.isAdminModeONAndThisUserIsNotInChatParticipantsAndIsP2PChat(chatObj)}"\n                  bo-bind="chatService.isAdminModeONAndThisUserIsNotInChatParticipantsAndIsP2PChat(chatObj) ? getPrivateP2PChatTitle() : chatObj.getTitle()"></span>\n\n            <div class="btnMinimize" bo-show="!isMinimized">\n            </div>\n            <div class="btnClose"\n                 cnv-chat-close-click="{{::chatId}}">\n            </div>\n\n            <div style="width: 85%;height: 100%;position: absolute" bo-show="isMinimized" cnv-popover\n                 cnv-popover-ctrl="chatService.isAdminModeONAndThisUserIsNotInChatParticipantsAndIsP2PChat(chatObj) ? getPrivateP2PChatTitle() : chatObj.getTitle()"></div>\n            <!--bo-show="(!isMinimized && !isMinimizedToAvatar) || showCloseBtn"-->\n        </div>\n        <!-- Window ActionBar-->\n        <div class="chatActionBar" ng-include="\'chat/client/chatWindow/templates/chatActionBar.tpl.html\'">\n        </div>\n\n        <!--search match bar-->\n        <div bo-if="isSearch" class="chatActionBar">\n            <div class="searchcountandtext"\n                 style="margin: 4px 0px 5px 10px;height: 30px;border: 1px solid #e0e0e0;padding: 3px;  width: 260px;display: inline-block;">\n                <div style="display: inline-block;text-overflow: ellipsis;white-space: nowrap;width: 55%;overflow: hidden;"\n                     bo-bind="chatObj.searchInfo.searchText"></div>\n                <div class="dropdownBtn" style="float: right;margin-right: 2px;"\n                     ng-click="moveToNextSearch(false)" ng-disabled="disableChatSearchControls"></div>\n                <div class="dropdownBtn"\n                     style="float: right;transform: rotate(180deg);-ms-transform: rotate(1800deg);-webkit-transform: rotate(180deg);margin-top: 3px;margin-right: 4px;"\n                     ng-click="moveToNextSearch(true)" ng-disabled="disableChatSearchControls"></div>\n                <div style="display: inline-block;float: right;  margin-right: 6px;color: #7b8386;"\n                     bo-bind="searchCountStr"></div>\n            </div>\n            <div class="closeSettingsButton" style="margin-top: 12px; margin-right: 8px;height: 13px;width: 13px;"\n                 ng-click="closeSearch()" ng-disabled="disableChatSearchControls"></div>\n        </div>\n\n        <!--Message List Window -->\n\n        <div bo-id="msgWinId" class="chatMessageWindow" cnv-upload-files-ui-manager\n             cnv-upload-files-ui-manager-ctrl="filesUploadManagerCtrl"\n             cnv-insert-add-item-options-ctrl="insertOptionsCtrl"\n             ng-include="\'chat/client/chatWindow/templates/messageList.tpl.html\'">\n        </div>\n\n        <cnv-dropzone bo-show="!disabledChat" dropzone-id="{{\'_\' + msgWinId}}"></cnv-dropzone>\n\n        <!--Write Message Field-->\n\n        <div style="border-style: none solid;border-width: 1px;border-color: #ced5da;">\n            <div class="newMsgReceived" ng-click="showNewMessagesReceived()">\n                <span style="font-size: 14px;margin-left: 5px;color: white;position: absolute;top: 5px;left: 2px;">New Message</span>\n\n                <div class="newMessageIcon"></div>\n            </div>\n\n\n            <div class="messageInputBar">\n                <div style="  height: 1px;background: #edeef0;"></div>\n                <div style="width: 73%; display: inline-block;  padding-top: 4px;">\n                    <cnv-editor cnv-text-editor-mode="minimal"\n                                cnv-text-editor-ctrl="textEditorCtrl"\n                                cnv-hashtags="getHashtags($query)"\n                                cnv-text-editor-on-focus-out="onFocusOut(event)"\n                                cnv-at-mentions="getShareWithDropdownItems($query, delimiter)"\n                                cnv-on-command-executed="OnCommandExecuted(item, search)"\n                                cnv-at-mentions-suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html"\n                                cnv-text-editor-on-esc-key-press="onEscKeyPressInTextEditor()"\n                                cnv-text-editor-submit-on-enter="onTextEditorSubmitOnEnter()"\n                                cnv-focus-on-load="false"\n                                cnv-editor-source="Chat"></cnv-editor>\n                </div>\n                <cnv-emoji-popover cnv-editor-name="editorCtrl" cnv-emoji-fixed-on-scroll= "true" class="attachmentButton emoji"></cnv-emoji-popover>\n                <cnv-giphy-popover cnv-chat-window-id="chatId" cnv-file-context="fileInputContext" cnv-giphy-information="giphyObject" cnv-giphy-icon-class="attachmentButton giphy" cnv-giphy-mixpanel-info="Chat" cnv-giphy-relative-to-body="true"></cnv-giphy-popover>\n                <div class="attachmentButton photo icons2_Attach-darkgray" ng-click=\'onAttachFileBtnClick()\'></div>\n' + "                <input name='file' id=\"chatAttachment\" class='inputHide' type='file' multiple='multiple'></input>\n            </div>\n        </div>\n    </cnv-chat-window>\n</div>\n");
    }
    ]),
    b.module("chat/client/chatWindow/templates/cnvVideoCallOptionsInChat.tpl.html", []).run(["$templateCache", function(a) {
        a.put("chat/client/chatWindow/templates/cnvVideoCallOptionsInChat.tpl.html", '<div class="video-call-dropdown" bindonce>\n\n    <span class="header">Start a video call</span>\n    \n    <div class="option" ng-click="startGoogleHangouts()">\n        <i class="hangouts cnv-icons-20" style=" margin-left: -2px; margin-top: 1px;">\n        </i>\n        <div class="vid-call-details">\n        	<span class="header-txt">\n				Google+ Hangouts\n			</span>\n			<span class="meta-txt">\n				Share a link to start a Hangout.\n			</span>\n        </div>\n	</div>\n\n	<div class="option" ng-click="startAppearin()">\n        <i class="appearin cnv-icons-20" style="margin-top: 2px;">\n        </i>\n        <div class="vid-call-details">\n    		<span class="header-txt">\n				Appear.in\n			</span>\n			<span class="meta-txt">\n				Supports up to 8 participants. Also available on mobile with Appear.in for iOS & Android.\n			</span>\n		</div>\n	</div>\n\n	<div class="option" ng-click="startRoom($event)">\n        <i class="roomco cnv-icons-20" style="margin-top: 1px;">\n        </i>\n        <div class="vid-call-details">\n    		<span class="header-txt">\n				Room\n			</span>\n			<span class="meta-txt">\n				Supports up to 4 participants. Also available on mobile with Room for iOS & Android.\n			</span>\n		</div>\n	</div>\n    \n</div>')
    }
    ]),
    b.module("chat/client/chatWindow/templates/messageList.tpl.html", []).run(["$templateCache", function(a) {
        a.put("chat/client/chatWindow/templates/messageList.tpl.html", '<div bo-if="!isSearch">\n    <div class="spinner-container" bo-show="messageListSpinner">\n        <i class="cnv-circle-spinner-small"></i>\n    </div>\n    <div bo-repeat="message in chatObj.messages" class="chat-message-bubble">\n\n        <!-- Other User message Templ-->\n        <div bo-if="message._view.otherUserWithImg == 1 && !message.fileInfo.fileId">\n            <div bo-if="message._view.showDate == 1" class="dateChatSeparator">\n                <span bo-bind="message._view.dateToShow"></span>\n            </div>\n            <div style="display:inline-block">\n                <div class="otherUserImg">\n                    <cnv-user-profile-image user-id="message._view._user.userId" size="48" width="40" height="40"\n                                            profile-type="message._view._user.profileImageType"\n                                            full-name="message._view._user.displayName"\n                                            profile-version="message._view._user.profileImageVersion"></cnv-user-profile-image>\n                </div>\n                <div class="messageFromOtherUser" style="padding: 4px 7px;">\n                    <span bo-html="message._view.messageText" class="chat-msg-cont" style="white-space: pre-wrap;"></span>\n\n                    <div style="font-size: 14px;color: #7b8386;font-weight: 100;" class="notSelectable"\n                         bo-bind="message._view.time"></div>\n                </div>\n            </div>\n            <div style="font-size: 14px;width: 100%;margin-bottom: 5px;margin-left: 60px;width: 180px;text-overflow: ellipsis;white-space: nowrap;overflow: hidden;color: #7b8386;"\n                 bo-if="chatObj.chatType == 2 && message._view.showUserName == 1 "\n                 bo-bind="message._view._user.displayName"></div>\n        </div>\n\n        <!-- Other User message Templ without profile image-->\n        <div bo-if="message._view.otherUserWithoutImg == 1 && !message.fileInfo.fileId">\n            <div bo-if="message._view.showDate == 1" class="dateChatSeparator">\n                <span bo-bind="message._view.dateToShow" style="white-space: pre-wrap;"></span>\n            </div>\n            <div style="display:inline-block; margin-left:50px">\n                <div class="messageFromOtherUserWithoutImg" style="padding: 4px 7px;">\n                    <span bo-html="message._view.messageText" class="chat-msg-cont" style="white-space: pre-wrap;"></span>\n\n                    <div style="font-size: 14px;color: #7b8386;font-weight: 100;" class="notSelectable"\n                         bo-bind="message._view.time"></div>\n                </div>\n            </div>\n            <div style="font-size: 14px;width: 100%;margin-bottom: 5px;margin-left: 60px;width: 180px;text-overflow: ellipsis;white-space: nowrap;overflow: hidden;color: #7b8386;"\n                 bo-if="chatObj.chatType == 2 && message._view.showUserName == 1"\n                 bo-bind="message._view._user.displayName"></div>\n        </div>\n\n        <!-- This User message Templ-->\n        <div bo-if="message._view.thisUserWithoutImg == 1 && !message.fileInfo">\n            <div bo-if="message._view.showDate == 1" class="dateChatSeparator">\n                <span bo-bind="message._view.dateToShow" style="white-space: pre-wrap;"></span>\n            </div>\n            <div style="width:100%;display: inline-block;">\n                <div bo-if="message._sequenceNumber == 0 && !message.isRetrying"\n                     style="float: right;margin-right: 10px;color: #df0000;margin-top: 8px;">\n                    <div class="glyphicon glyphicon-warning-sign"></div>\n                </div>\n                <div class="messageFromMe" bo-class="{\'messageFromMeAckn\': message._sequenceNumber > 0}"\n                     style="padding: 4px 7px;">\n                    <span bo-html="message._view.messageText" class="chat-msg-cont" style="white-space: pre-wrap;"></span>\n\n                    <div style="font-size: 14px;color: #ffffff;font-weight: 100;" class="notSelectable"\n                         bo-bind="message._view.time"></div>\n                </div>\n\n                <div bo-if="message._sequenceNumber == 0 && !message.isRetrying"\n                     style="float: left;right: 6px;font-size: 14px;color: #df0000;text-align: right;width: 97%;">\n                    <div>Not delivered.<a href="javascript:void(0);" style="color: #df0000;text-decoration: underline;"\n                                          bo-click="resendMessage(message)">Try Again.</a>\n                    </div>\n                </div>\n\n                <div bo-if="message._view.seen == 1 && chatObj.chatType == 1" class="seen">\n                    <span> seen</span>\n                </div>\n            </div>\n        </div>\n        <!--bo-if="message.retryAllowed"-->\n        <!-- Left Message -->\n        <div bo-if="message._view.left == 1">\n            <div bo-if="message._view.showDate == 1" class="dateChatSeparator">\n                <span bo-bind="message._view.dateToShow"></span>\n            </div>\n            <div class="invite-left-msg">\n                <span bo-bind="message._view.messageToDisplay" style="white-space: pre-wrap;"></span>\n            </div>\n        </div>\n\n        <!-- Invite Message -->\n        <div bo-if="message._view.invite == 1">\n            <div bo-if="message._view.showDate == 1" class="dateChatSeparator">\n                <span bo-bind="message._view.dateToShow"></span>\n            </div>\n            <div class="invite-left-msg">\n                <span bo-bind="message._view.messageToDisplay" style="white-space: pre-wrap;"></span>\n            </div>\n        </div>\n        <!--File/Image Template for Sending -->\n        <div bo-if="message.fileInfo.file && message._view.thisUserWithoutImg == 1 && !message.fileInfo.fileId">\n            <div bo-if="message._view.showDate == 1" class="dateChatSeparator">\n                <span bo-bind="message._view.dateToShow"></span>\n            </div>\n            <div style="width:100%;display: inline-block;">\n                <div class="messageFromMe" bo-class="{\'messageFromMeAckn\': message._sequenceNumber > 0}">\n                    <!--   <a bo-href="message.fileInfo.fileId |getFileResourceLinkUrl :message.fileInfo.fileFormat:\'6\':\'6\':chatObj.chatId:message.fileInfo.name:\'21\'">-->\n                    <div cnv-upload-file-ui class=\'attachment-box\' cnv-popover cnv-popover-ctrl="file.name">\n                        <div cnv-popover cnv-popover-ctrl="file.name" class="attachment-box-background"></div>\n                        <img ng-src="{{file.localUrl}}" ng-class="{\'file-converted\': completed()}"\n                             onError="this.onerror=null;this.src=\'assets/img/chat/fileplainlarge.png\';"/>\n\n                        <div class="upload-state-message" ng-if="failed()">\n                            <div class="upload-failed-icon"></div>\n                            <div>\n                                <span class="text">Couldn\'t upload this file.</span>\n                                <span class="action" ng-if="file.retryAllowed" href ng-mousedown="retry()">Retry</span>\n                            </div>\n                        </div>\n\n                        <div ng-show="isInProgress()" class=\'progress-bar\'>\n                            <div class=\'bar-internal\' ng-style="{width: file.progress+\'%\'}"></div>\n                        </div>\n                        <div ng-click="remove()" class="remove-file" bo-if="!file.fileUploaded"></div>\n                        <br>\n                        <span ng-if="!file.noTitle && !failed()" class="fileNames">{{file.name}}</span>\n                    </div>\n                    <!-- </a>-->\n\n                    <div style="font-size: 14px;color: #ffffff;font-weight: 100;margin-top: 5px;" class="notSelectable"\n                         bo-bind="message._view.time"></div>\n                </div>\n                <div bo-if="message._view.seen == 1 && chatObj.chatType == 1" class="seen">\n                    <span> seen</span>\n                </div>\n            </div>\n        </div>\n\n        <!--File/Image Template for sent Messages -->\n        <div bo-if="message._view.thisUserWithoutImg == 1 && message.fileInfo.fileId">\n            <div bo-if="message._view.showDate == 1" class="dateChatSeparator">\n                <span bo-bind="message._view.dateToShow"></span>\n            </div>\n            <div style="width:100%;display: inline-block;">\n                <div class="messageFromMe" bo-class="{\'messageFromMeAckn\': message._sequenceNumber > 0}">\n                    <a bo-href="message.fileInfo.fileId |getFileResourceLinkUrl :message.fileInfo.fileFormat:\'6\':\'6\':chatObj.chatId:message.fileInfo.name:\'21\'">\n                        <div bo-if="message.fileInfo.fileFormat!=\'VIDEO\' && message.fileInfo.fileFormat!=\'OTHER\' && message.fileInfo.thumbnail_name"\n                             style="height: 100px;min-width: 155px;display: table-cell;vertical-align: middle;background-color: white;text-align: center;cursor: pointer ">\n\n                            <i bo-if="message.fileInfo.type == \'gif\'" class="gif-badge">GIF</i>\n                            <i bo-if="message.fileInfo.type == \'gif\'" class="cnv-spinner"></i>\n\n                            <img bo-if="message.fileInfo.type == \'gif\'" class="original-gif" cnv-popover cnv-popover-ctrl="message.fileInfo.name"\n                                 onError="this.onerror=null;this.src=\'assets/img/chat/fileplainlarge.png\';"\n                                 ng-src="{{message.fileInfo.originalName | getOriginalImagePath: chatObj.chatId}}"\n                                 style="display: none; max-width: 172px;max-height: 100px;"/>\n\n                            <!-- gif placeholder in case of type = gif -->        \n                            <img bo-class="{\'gif-placeholder\': message.fileInfo.type == \'gif\'}" cnv-popover cnv-popover-ctrl="message.fileInfo.name"\n                                 onError="this.onerror=null;this.src=\'assets/img/chat/fileplainlarge.png\';"\n                                 ng-src="{{message.fileInfo | getNoteThumbnailPath: chatObj.chatId}}"\n                                 style="max-width: 172px;max-height: 100px; "/>\n\n                        </div>\n\n                        <div bo-if="message.fileInfo.fileFormat==\'VIDEO\'" class=\'video{{::message.fileInfo.fileId}}\'\n                             style="height: 100px;min-width: 155px;display: table-cell;vertical-align: middle;background-color: white;text-align: center;cursor: pointer ">\n                             <cnv-video-thumbnail  cnv-video-thumbnail-data-format="CHAT" cnv-video-thumbnail-lazy-load="true"  cnv-video-thumbnail-file=\'message.fileInfo\' cnv-video-thumbnail-show-preview="true" cnv-video-thumbnail-lazy-load-id="{{::message.fileInfo.fileId}}"></cnv-video-thumbnail>\n                        </div>\n\n                        \n                        <div style="height: 100px; min-width: 155px; max-width: 180px;background-color: white;text-align: center;text-align: center;cursor: pointer"\n                             bo-if="message.fileInfo.fileFormat!=\'VIDEO\' &&  (message.fileInfo.fileFormat==\'OTHER\' || !message.fileInfo.thumbnail_name)">\n                            <img cnv-popover cnv-popover-ctrl="message.fileInfo.name"\n                                 onError="this.onerror=null;this.src=\'assets/img/chat/fileplainlarge.png\';"\n                                 ng-src="{{message.fileInfo.type | getFileIconByType: 32}}" style="margin-top: 30px; width: 32px; height: 32px;"/>\n                            <br>\n                            <span class="fileNames" ng-bind="message.fileInfo.getName()"></span>\n                        </div>\n                    </a>\n\n                    <div style="font-size: 14px;color: #ffffff;font-weight: 100;margin-top: 5px;" class="notSelectable"\n                         bo-bind="message._view.time"></div>\n\n                </div>\n                <div bo-if="message._view.seen == 1 && chatObj.chatType == 1" class="seen">\n                    <span> seen</span>\n                </div>\n            </div>\n        </div>\n\n        <!--File/Image Template for Receiving -->\n\n        <!-- Other User message Templ-->\n        <div bo-if="message._view.otherUserWithImg == 1 && message.fileInfo.fileId">\n            <div bo-if="message._view.showDate == 1" class="dateChatSeparator">\n                <span bo-bind="message._view.dateToShow"></span>\n            </div>\n            <div style="display:inline-block">\n                <div class="otherUserImg">\n                    <cnv-user-profile-image user-id="message._view._user.userId" size="48" width="40" height="40"\n                                            profileType="message._view._user.profileImageType"\n                                            profileVersion="message._view._user.profileImageVersion"></cnv-user-profile-image>\n                </div>\n                <div class="messageFromOtherUser">\n                    <a bo-href="message.fileInfo.fileId |getFileResourceLinkUrl :message.fileInfo.fileFormat:\'6\':\'6\':chatObj.chatId:message.fileInfo.name:\'21\'">\n                        <div bo-if="message.fileInfo.fileFormat!=\'VIDEO\' && message.fileInfo.fileFormat != \'OTHER\' && message.fileInfo.thumbnail_name"\n                             style="height: 100px;min-width: 155px;display: table-cell;vertical-align: middle;background-color: white;text-align: center;cursor: pointer ">\n\n                            <i bo-if="message.fileInfo.type == \'gif\'" class="gif-badge">GIF</i>\n                            <i bo-if="message.fileInfo.type == \'gif\'" class="cnv-spinner"></i>\n\n                            <img bo-if="message.fileInfo.type == \'gif\'" class="original-gif" cnv-popover cnv-popover-ctrl="message.fileInfo.name"\n                                 onError="this.onerror=null;this.src=\'assets/img/chat/fileplainlarge.png\';"\n                                 ng-src="{{message.fileInfo.originalName | getOriginalImagePath: chatObj.chatId}}"\n                                 style="display: none; max-width: 172px;max-height: 100px;"/>\n\n                            <!-- gif placeholder in case of type = gif -->     \n                            <img bo-class="{\'gif-placeholder\': message.fileInfo.type == \'gif\'}" cnv-popover cnv-popover-ctrl="message.fileInfo.name"\n                                 onError="this.onerror=null;this.src=\'assets/img/chat/fileplainlarge.png\';"\n                                 ng-src="{{message.fileInfo | getNoteThumbnailPath: chatObj.chatId}}"\n                                 style="max-width: 172px;max-height: 100px; "/>\n\n                        </div>\n\n                         <div bo-if=" message.fileInfo.fileFormat==\'VIDEO\'" class=\'video{{::message.fileInfo.fileId}}\'\n                             style="height: 100px;min-width: 155px;display: table-cell;vertical-align: middle;background-color: white;text-align: center;cursor: pointer ">\n                             <cnv-video-thumbnail  cnv-video-thumbnail-data-format="CHAT" cnv-video-thumbnail-lazy-load="true"  cnv-video-thumbnail-file=\'message.fileInfo\' cnv-video-thumbnail-show-preview="true" cnv-video-thumbnail-lazy-load-id="{{::message.fileInfo.fileId}}"></cnv-video-thumbnail>\n                        </div>\n\n                        <div style="height: 100px; min-width: 155px; max-width: 180px;background-color: white;text-align: center;text-align: center;cursor: pointer"\n                             bo-if="message.fileInfo.fileFormat!=\'VIDEO\' && (message.fileInfo.fileFormat==\'OTHER\' || !message.fileInfo.thumbnail_name)">\n                            <img cnv-popover cnv-popover-ctrl="message.fileInfo.name"\n                                 onError="this.onerror=null;this.src=\'assets/img/chat/fileplainlarge.png\';"\n                                 ng-src="{{message.fileInfo.type | getFileIconByType: 32}}" style="margin-top: 30px; width: 32px; height: 32px;"/>\n                            <br>\n                            <span class="fileNames" ng-bind="message.fileInfo.getName()"></span>\n                        </div>\n                    </a>\n\n                    <div style="font-size: 14px;color: #7b8386;font-weight: 100;margin-top: 5px;" class="notSelectable"\n                         bo-bind="message._view.time"></div>\n\n                </div>\n            </div>\n            <div style="font-size: 14px;width: 100%;margin-bottom: 5px;margin-left: 60px;width: 180px;text-overflow: ellipsis;white-space: nowrap;overflow: hidden;color: #7b8386;"\n                 bo-if="chatObj.chatType == 2 && message._view.showUserName == 1 "\n                 bo-bind="message._view._user.displayName"></div>\n        </div>\n\n        <!-- Other User message Templ without profile image-->\n        <div bo-if="message._view.otherUserWithoutImg == 1 && message.fileInfo.fileId">\n            <div bo-if="message._view.showDate == 1" class="dateChatSeparator">\n                <span bo-bind="message._view.dateToShow" style="white-space: pre-wrap;"></span>\n            </div>\n            <div style="display:inline-block; margin-left:50px">\n                <div class="messageFromOtherUserWithoutImg">\n                    <a bo-href="message.fileInfo.fileId |getFileResourceLinkUrl :message.fileInfo.fileFormat:\'6\':\'6\':chatObj.chatId:message.fileInfo.name:\'21\'">\n                        <div bo-if="message.fileInfo.fileFormat!=\'VIDEO\' && message.fileInfo.fileFormat!=\'OTHER\' && message.fileInfo.thumbnail_name"\n                             style="height: 100px;min-width: 155px;display: table-cell;vertical-align: middle;background-color: white;text-align: center;cursor: pointer ">\n\n                            <i bo-if="message.fileInfo.type == \'gif\'" class="gif-badge">GIF</i>\n                            <i bo-if="message.fileInfo.type == \'gif\'" class="cnv-spinner"></i>\n\n                            <img bo-if="message.fileInfo.type == \'gif\'" class="original-gif" cnv-popover cnv-popover-ctrl="message.fileInfo.name"\n                                 onError="this.onerror=null;this.src=\'assets/img/chat/fileplainlarge.png\';"\n                                 ng-src="{{message.fileInfo.originalName | getOriginalImagePath: chatObj.chatId}}"\n                                 style="display: none; max-width: 172px;max-height: 100px;"/>\n\n                            <!-- gif placeholder in case of type = gif -->     \n                            <img bo-class="{\'gif-placeholder\': message.fileInfo.type == \'gif\'}" cnv-popover cnv-popover-ctrl="message.fileInfo.name"\n                                 onError="this.onerror=null;this.src=\'assets/img/chat/fileplainlarge.png\';"\n                                 ng-src="{{message.fileInfo | getNoteThumbnailPath: chatObj.chatId}}"\n                                 style="max-width: 172px;max-height: 100px; "/>\n\n                        </div>\n\n                        <div bo-if="message.fileInfo.fileFormat==\'VIDEO\'" class=\'video{{::message.fileInfo.fileId}}\'\n                             style="height: 100px;min-width: 155px;display: table-cell;vertical-align: middle;background-color: white;text-align: center;cursor: pointer ">\n                             <cnv-video-thumbnail  cnv-video-thumbnail-data-format="CHAT" cnv-video-thumbnail-lazy-load="true"  cnv-video-thumbnail-file=\'message.fileInfo\' cnv-video-thumbnail-show-preview="true" cnv-video-thumbnail-lazy-load-id="{{::message.fileInfo.fileId}}"></cnv-video-thumbnail>\n                        </div>\n\n                        <div style="height: 100px; min-width: 155px; max-width: 180px;background-color: white;text-align: center;text-align: center;cursor: pointer"\n                             bo-if="message.fileInfo.fileFormat==\'OTHER\' || !message.fileInfo.thumbnail_name">\n                            <img cnv-popover cnv-popover-ctrl="message.fileInfo.name"\n                                 onError="this.onerror=null;this.src=\'assets/img/chat/fileplainlarge.png\';"\n                                 ng-src="{{message.fileInfo.type | getFileIconByType: 32}}" style="margin-top: 30px; width: 32px; height: 32px;"/>\n                            <br>\n                            <span class="fileNames" ng-bind="message.fileInfo.getName()"></span>\n                        </div>\n                    </a>\n\n                    <div style="font-size: 14px;color: #7b8386;font-weight: 100;margin-top: 5px;" class="notSelectable"\n                         bo-bind="message._view.time"></div>\n\n                </div>\n            </div>\n            <div style="font-size:14px;width: 100%;margin-bottom: 5px;margin-left: 60px;width: 180px;text-overflow: ellipsis;white-space: nowrap;overflow: hidden;color: #7b8386;"\n                 bo-if="chatObj.chatType == 2 && message._view.showUserName == 1"\n                 bo-bind="message._view._user.displayName"></div>\n        </div>\n    </div>\n    <!--Composing Message-->\n    <div id="composingMessage">\n        <!-- FIXED: Chat Window, sometimes typing notification bubble does not show anything. So caching img/chat/TypingNotification.gif instead of waiting for the composing message -->\n        <div style="display:none" class="composingMessageFromOtherUser">\n        </div>\n\n        <div bo-repeat="composingUser in composingUsers">\n            <div bo-if="chatObj.participants[chatObj.thisUser.userId].status != \'left\'" style="display:inline-block">\n                <div class="otherUserImg">\n                    <cnv-user-profile-image user-id="composingUser.userId" size="48" width="40" height="40"\n                                            profileType="composingUser.profileImageType"\n                                            full-name="composingUser.displayName"\n                                            profileVersion="composingUser.profileImageVersion"></cnv-user-profile-image>\n                </div>\n                <div class="composingMessageFromOtherUser">\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>\n\n<!--////////////////////////////////////////////////////Search///////////////////////////////////-->\n<div bo-if="isSearch">\n    <div bo-repeat="message in chatObj.searchInfo.messages" class="chat-message-bubble">\n\n        <div bo-if="message._view.showLoadMoreMessages" class="loadMoreMessageBar"\n             bo-click="loadMoreMessages(message._view.fromSeqNo,message._view.toSeqNo)">\n            <span style="color: #ffffff;margin-left: 4px;">Load more messages</span>\n\n            <div class="loadMoreMessageImg"></div>\n        </div>\n        <!-- Other User message Templ-->\n        <div bo-if="message._view.otherUserWithImg == 1 && !message.fileInfo.fileId">\n            <div bo-if="message._view.showDate == 1" class="dateChatSeparator">\n                <span bo-bind="message._view.dateToShow"></span>\n            </div>\n            <div style="display:inline-block">\n                <div class="otherUserImg">\n                    <cnv-user-profile-image user-id="message._view._user.userId" size="48" width="40" height="40"\n                                            profile-type="message._view._user.profileImageType"\n                                            full-name="message._view._user.displayName"\n                                            profile-version="message._view._user.profileImageVersion"></cnv-user-profile-image>\n                </div>\n                <div class="messageFromOtherUser" style="padding: 4px 7px;"\n                     bo-class="{\' highlight highlightedOtherImg\': chatObj.searchInfo.isCurrentMatch(message)}">\n                    <span bo-html="message._view.messageText" class="chat-msg-cont" style="white-space: pre-wrap;"></span>\n\n                    <div style="font-size: 14px;color: #7b8386;font-weight: 100;" class="notSelectable"\n                         bo-bind="message._view.time"></div>\n                </div>\n            </div>\n            <div style="font-size: 14px;width: 100%;margin-bottom: 5px;margin-left: 60px;width: 180px;text-overflow: ellipsis;white-space: nowrap;overflow: hidden;color: #7b8386;"\n                 bo-if="chatObj.chatType == 2 && message._view.showUserName == 1 "\n                 bo-bind="message._view._user.displayName"></div>\n        </div>\n\n        <!-- Other User message Templ without profile image-->\n        <div bo-if="message._view.otherUserWithoutImg == 1 && !message.fileInfo.fileId">\n            <div bo-if="message._view.showDate == 1" class="dateChatSeparator">\n                <span bo-bind="message._view.dateToShow" style="white-space: pre-wrap;"></span>\n            </div>\n            <div style="display:inline-block; margin-left:50px">\n                <div class="messageFromOtherUserWithoutImg" style="padding: 4px 7px;"\n                     bo-class="{\'highlight highlightedOther\': chatObj.searchInfo.isCurrentMatch(message)}">\n                    <span bo-html="message._view.messageText" class="chat-msg-cont" style="white-space: pre-wrap;"></span>\n\n                    <div style="font-size: 14px;color: #7b8386;font-weight: 100;" class="notSelectable"\n                         bo-bind="message._view.time"></div>\n                </div>\n            </div>\n            <div style="font-size: 14px;width: 100%;margin-bottom: 5px;margin-left: 60px;width: 180px;text-overflow: ellipsis;white-space: nowrap;overflow: hidden;color: #7b8386;"\n                 bo-if="chatObj.chatType == 2 && message._view.showUserName == 1"\n                 bo-bind="message._view._user.displayName"></div>\n        </div>\n\n        <!-- This User message Templ-->\n        <div bo-if="message._view.thisUserWithoutImg == 1 && !message.fileInfo">\n            <div bo-if="message._view.showDate == 1" class="dateChatSeparator">\n                <span bo-bind="message._view.dateToShow" style="white-space: pre-wrap;"></span>\n            </div>\n            <div style="width:100%;display: inline-block;">\n                <div bo-if="message._sequenceNumber == 0 && !message.isRetrying"\n                     style="float: right;margin-right: 10px;color: #df0000;margin-top: 8px;">\n                    <div class="glyphicon glyphicon-warning-sign"></div>\n                </div>\n                <div class="messageFromMeSearch"\n                     bo-class="{\'highlight highlightedMe\': chatObj.searchInfo.isCurrentMatch(message)}"\n                     style="padding: 4px 7px;">\n                    <span bo-html="message._view.messageText" class="chat-msg-cont" style="white-space: pre-wrap;"></span>\n\n                    <div style="font-size: 14px;color: #ffffff;font-weight: 100;" class="notSelectable"\n                         bo-bind="message._view.time"></div>\n                </div>\n\n                <div bo-if="message._sequenceNumber == 0 && !message.isRetrying"\n                     style="float: left;right: 6px;font-size: 14px;color: #df0000;text-align: right;width: 97%;">\n                    <div>Not delivered.<a href="javascript:void(0);" style="color: #df0000;text-decoration: underline;"\n                                          bo-click="resendMessage(message)">Try Again.</a>\n                    </div>\n                </div>\n\n                <div bo-if="message._view.seen == 1 && chatObj.chatType == 1" class="seen">\n                    <span> seen</span>\n                </div>\n            </div>\n        </div>\n        <!--bo-if="message.retryAllowed"-->\n        <!-- Left Message -->\n        <div bo-if="message._view.left == 1">\n            <div bo-if="message._view.showDate == 1" class="dateChatSeparator">\n                <span bo-bind="message._view.dateToShow"></span>\n            </div>\n            <div class="invite-left-msg">\n                <span bo-bind="message._view.messageToDisplay" style="white-space: pre-wrap;"></span>\n            </div>\n        </div>\n\n        <!-- Invite Message -->\n        <div bo-if="message._view.invite == 1">\n            <div bo-if="message._view.showDate == 1" class="dateChatSeparator">\n                <span bo-bind="message._view.dateToShow"></span>\n            </div>\n            <div class="invite-left-msg">\n                <span bo-bind="message._view.messageToDisplay" style="white-space: pre-wrap;"></span>\n            </div>\n        </div>\n\n        <!--File/Image Template for sent Messages -->\n        <div bo-if="!message.fileInfo.file && message._view.thisUserWithoutImg == 1 && message.fileInfo.fileId">\n            <div bo-if="message._view.showDate == 1" class="dateChatSeparator">\n                <span bo-bind="message._view.dateToShow"></span>\n            </div>\n            <div style="width:100%;display: inline-block;">\n                <div class="messageFromMeSearch"\n                     bo-class="{\'highlight highlightedMe\': chatObj.searchInfo.isCurrentMatch(message)}">\n                    <a bo-href="message.fileInfo.fileId |getFileResourceLinkUrl :message.fileInfo.fileFormat:\'6\':\'6\':chatObj.chatId:message.fileInfo.name:\'21\'">\n                        <div bo-if="message.fileInfo.fileFormat!=\'VIDEO\' && message.fileInfo.fileFormat!=\'OTHER\' && message.fileInfo.thumbnail_name"\n                             style="height: 100px;min-width: 155px;display: table-cell;vertical-align: middle;background-color: white;text-align: center;cursor: pointer ">\n\n                            <i bo-if="message.fileInfo.type == \'gif\'" class="gif-badge">GIF</i>\n                            <i bo-if="message.fileInfo.type == \'gif\'" class="cnv-spinner"></i>\n\n                            <img bo-if="message.fileInfo.type == \'gif\'" class="original-gif" cnv-popover cnv-popover-ctrl="message.fileInfo.name"\n                                 onError="this.onerror=null;this.src=\'assets/img/chat/fileplainlarge.png\';"\n                                 ng-src="{{message.fileInfo.originalName | getOriginalImagePath: chatObj.chatId}}"\n                                 style="display: none; max-width: 172px;max-height: 100px;"/>\n\n                            <!-- gif placeholder in case of type = gif -->     \n                            <img bo-class="{\'gif-placeholder\': message.fileInfo.type == \'gif\'}" cnv-popover cnv-popover-ctrl="message.fileInfo.name"\n                                 onError="this.onerror=null;this.src=\'assets/img/chat/fileplainlarge.png\';"\n                                 ng-src="{{message.fileInfo | getNoteThumbnailPath: chatObj.chatId}}"\n                                 style="max-width: 172px;max-height: 100px; "/>\n\n                        </div>\n\n                        <div bo-if="message.fileInfo.fileFormat==\'VIDEO\'" class=\'video{{::message.fileInfo.fileId}}\'\n                             style="height: 100px;min-width: 155px;display: table-cell;vertical-align: middle;background-color: white;text-align: center;cursor: pointer ">\n                             <cnv-video-thumbnail  cnv-video-thumbnail-data-format="CHAT" cnv-video-thumbnail-lazy-load="true"  cnv-video-thumbnail-file=\'message.fileInfo\' cnv-video-thumbnail-show-preview="true" cnv-video-thumbnail-lazy-load-id="{{::message.fileInfo.fileId}}"></cnv-video-thumbnail>\n                        </div>\n\n                        <div style="height: 100px; min-width: 155px; max-width: 180px;background-color: white;text-align: center;text-align: center;cursor: pointer"\n                             bo-if="message.fileInfo.fileFormat==\'OTHER\' || !message.fileInfo.thumbnail_name">\n                            <img cnv-popover cnv-popover-ctrl="message.fileInfo.name"\n                                 onError="this.onerror=null;this.src=\'assets/img/chat/fileplainlarge.png\';"\n                                 ng-src="{{message.fileInfo.type | getFileIconByType: 32}}" style="margin-top: 30px; width: 32px; height: 32px;"/>\n                            <br>\n                            <span class="fileNames" ng-bind="message.fileInfo.getName()"></span>\n                        </div>\n                    </a>\n\n                    <div style="font-size: 14px;color: #ffffff;font-weight: 100;margin-top: 5px;" class="notSelectable"\n                         bo-bind="message._view.time"></div>\n\n                </div>\n                <div bo-if="message._view.seen == 1 && chatObj.chatType == 1" class="seen">\n                    <span> seen</span>\n                </div>\n            </div>\n        </div>\n\n        <!--File/Image Template for Receiving -->\n\n        <!-- Other User message Templ-->\n        <div bo-if="message._view.otherUserWithImg == 1 && message.fileInfo.fileId">\n            <div bo-if="message._view.showDate == 1" class="dateChatSeparator">\n                <span bo-bind="message._view.dateToShow"></span>\n            </div>\n            <div style="display:inline-block">\n                <div class="otherUserImg">\n                    <cnv-user-profile-image user-id="message._view._user.userId" size="48" width="40" height="40"\n                                            profile-type="message._view._user.profileImageType"\n                                            full-name="message._view._user.displayName"\n                                            profile-version="message._view._user.profileImageVersion"></cnv-user-profile-image>\n                </div>\n                <div class="messageFromOtherUser"\n                     bo-class="{\'highlight highlightedOtherImg\': chatObj.searchInfo.isCurrentMatch(message)}">\n                    <a bo-href="message.fileInfo.fileId |getFileResourceLinkUrl :message.fileInfo.fileFormat:\'6\':\'6\':chatObj.chatId:message.fileInfo.name:\'21\'">\n                        <div bo-if="message.fileInfo.fileFormat!=\'VIDEO\' && message.fileInfo.fileFormat!=\'OTHER\' && message.fileInfo.thumbnail_name"\n                             style="height: 100px;min-width: 155px;display: table-cell;vertical-align: middle;background-color: white;text-align: center;cursor: pointer ">\n\n                            <i bo-if="message.fileInfo.type == \'gif\'" class="gif-badge">GIF</i>\n                            <i bo-if="message.fileInfo.type == \'gif\'" class="cnv-spinner"></i>\n\n                            <img bo-if="message.fileInfo.type == \'gif\'" class="original-gif" cnv-popover cnv-popover-ctrl="message.fileInfo.name"\n                                 onError="this.onerror=null;this.src=\'assets/img/chat/fileplainlarge.png\';"\n                                 ng-src="{{message.fileInfo.originalName | getOriginalImagePath: chatObj.chatId}}"\n                                 style="display: none; max-width: 172px;max-height: 100px;"/>\n\n                            <!-- gif placeholder in case of type = gif -->     \n                            <img bo-class="{\'gif-placeholder\': message.fileInfo.type == \'gif\'}" cnv-popover cnv-popover-ctrl="message.fileInfo.name"\n                                 onError="this.onerror=null;this.src=\'assets/img/chat/fileplainlarge.png\';"\n                                 ng-src="{{message.fileInfo | getNoteThumbnailPath: chatObj.chatId}}"\n                                 style="max-width: 172px;max-height: 100px; "/> \n\n                        </div>\n                        \n                        <div bo-if="message.fileInfo.fileFormat==\'VIDEO\'" class=\'video{{::message.fileInfo.fileId}}\'\n                             style="height: 100px;min-width: 155px;display: table-cell;vertical-align: middle;background-color: white;text-align: center;cursor: pointer ">\n                             <cnv-video-thumbnail  cnv-video-thumbnail-data-format="CHAT" cnv-video-thumbnail-lazy-load="true"  cnv-video-thumbnail-file=\'message.fileInfo\' cnv-video-thumbnail-show-preview="true" cnv-video-thumbnail-lazy-load-id="{{::message.fileInfo.fileId}}"></cnv-video-thumbnail>\n                        </div>\n\n                        <div style="height: 100px; min-width: 155px; max-width: 180px;background-color: white;text-align: center;text-align: center;cursor: pointer"\n                             bo-if="message.fileInfo.fileFormat==\'OTHER\' || !message.fileInfo.thumbnail_name">\n                            <img cnv-popover cnv-popover-ctrl="message.fileInfo.name"\n                                 onError="this.onerror=null;this.src=\'assets/img/chat/fileplainlarge.png\';"\n                                 ng-src="{{message.fileInfo.type | getFileIconByType: 32}}" style="margin-top: 30px; width: 32px; height: 32px;"/>\n                            <br>\n                            <span class="fileNames" ng-bind="message.fileInfo.getName()"></span>\n                        </div>\n                    </a>\n\n                    <div style="font-size: 14px;color: #7b8386;font-weight: 100;margin-top: 5px;" class="notSelectable"\n                         bo-bind="message._view.time"></div>\n\n                </div>\n            </div>\n            <div style="font-size: 14px;width: 100%;margin-bottom: 5px;margin-left: 60px;width: 180px;text-overflow: ellipsis;white-space: nowrap;overflow: hidden;color: #7b8386;"\n                 bo-if="chatObj.chatType == 2 && message._view.showUserName == 1 "\n                 bo-bind="message._view._user.displayName"></div>\n        </div>\n\n        <!-- Other User message Templ without profile image-->\n        <div bo-if="message._view.otherUserWithoutImg == 1 && message.fileInfo.fileId">\n            <div bo-if="message._view.showDate == 1" class="dateChatSeparator">\n                <span bo-bind="message._view.dateToShow" style="white-space: pre-wrap;"></span>\n            </div>\n            <div style="display:inline-block; margin-left:50px">\n                <div class="messageFromOtherUserWithoutImg"\n                     bo-class="{\'highlight highlightedOther\': chatObj.searchInfo.isCurrentMatch(message)}">\n                    <a bo-href="message.fileInfo.fileId |getFileResourceLinkUrl :message.fileInfo.fileFormat:\'6\':\'6\':chatObj.chatId:message.fileInfo.name:\'21\'">\n                        <div bo-if="message.fileInfo.fileFormat!=\'VIDEO\' && message.fileInfo.fileFormat!=\'OTHER\' && message.fileInfo.thumbnail_name"\n                             style="height: 100px;min-width: 155px;display: table-cell;vertical-align: middle;background-color: white;text-align: center;cursor: pointer ">\n\n                            <i bo-if="message.fileInfo.type == \'gif\'" class="gif-badge">GIF</i>\n                            <i bo-if="message.fileInfo.type == \'gif\'" class="cnv-spinner"></i>\n\n                            <img bo-if="message.fileInfo.type == \'gif\'" class="original-gif" cnv-popover cnv-popover-ctrl="message.fileInfo.name"\n                                 onError="this.onerror=null;this.src=\'assets/img/chat/fileplainlarge.png\';"\n                                 ng-src="{{message.fileInfo.originalName | getOriginalImagePath: chatObj.chatId}}"\n                                 style="display: none; max-width: 172px;max-height: 100px;"/>\n\n                            <!-- gif placeholder in case of type = gif -->     \n                            <img bo-class="{\'gif-placeholder\': message.fileInfo.type == \'gif\'}" cnv-popover cnv-popover-ctrl="message.fileInfo.name"\n                                 onError="this.onerror=null;this.src=\'assets/img/chat/fileplainlarge.png\';"\n                                 ng-src="{{message.fileInfo | getNoteThumbnailPath: chatObj.chatId}}"\n                                 style="max-width: 172px;max-height: 100px; "/> \n\n                        </div>\n\n                        <div bo-if="message.fileInfo.fileFormat==\'VIDEO\'" class=\'video{{::message.fileInfo.fileId}}\'\n                             style="height: 100px;min-width: 155px;display: table-cell;vertical-align: middle;background-color: white;text-align: center;cursor: pointer ">\n                             <cnv-video-thumbnail  cnv-video-thumbnail-data-format="CHAT" cnv-video-thumbnail-lazy-load="true"  cnv-video-thumbnail-file=\'message.fileInfo\' cnv-video-thumbnail-show-preview="true" cnv-video-thumbnail-lazy-load-id="{{::message.fileInfo.fileId}}"></cnv-video-thumbnail>\n                        </div>\n\n                        <div style="height: 100px; min-width: 155px; max-width: 180px;background-color: white;text-align: center;text-align: center;cursor: pointer"\n                             bo-if="message.fileInfo.fileFormat==\'OTHER\' || !message.fileInfo.thumbnail_name">\n                            <img cnv-popover cnv-popover-ctrl="message.fileInfo.name"\n                                 onError="this.onerror=null;this.src=\'assets/img/chat/fileplainlarge.png\';"\n                                 ng-src="{{message.fileInfo.type | getFileIconByType: 32}}" style="margin-top: 30px; width: 32px; height: 32px;"/>\n                            <br>\n                            <span class="fileNames" ng-bind="message.fileInfo.getName()"></span>\n                        </div>\n                    </a>\n\n                    <div style="font-size: 14px;color: #7b8386;font-weight: 100;margin-top: 5px;" class="notSelectable"\n                         bo-bind="message._view.time"></div>\n\n                </div>\n            </div>\n            <div style="font-size:14px;width: 100%;margin-bottom: 5px;margin-left: 60px;width: 180px;text-overflow: ellipsis;white-space: nowrap;overflow: hidden;color: #7b8386;"\n                 bo-if="chatObj.chatType == 2 && message._view.showUserName == 1"\n                 bo-bind="message._view._user.displayName"></div>\n        </div>\n    </div>\n</div>');
    }
    ]),
    b.module("chat/client/cnvChatApp.tpl.html", []).run(["$templateCache", function(a) {
        a.put("chat/client/cnvChatApp.tpl.html", '<cnv-chat-manager id="ChatDiv" cnv-closer bindonce>\n    <cnv-chat-users-window></cnv-chat-users-window>\n    <cnv-docked-chat-windows></cnv-docked-chat-windows>\n</cnv-chat-manager>')
    }
    ]),
    b.module("chat/client/dockedChatWindows/templates/cnvDockedChatWindows.tpl.html", []).run(["$templateCache", function(a) {
        a.put("chat/client/dockedChatWindows/templates/cnvDockedChatWindows.tpl.html", '<div bindonce>\n    <div class="multipleDockedWind" bo-show="dockedWind.length" bo-style="{\'right\' : multiDockPos}"\n         ng-click="showChatListDocked()">\n        <div class="unreadCountDocked" bo-bind="unreadCounts > 20 ? \'20+\': unreadCounts"\n             bo-show="unreadCounts > 0 && !showingChatListDocked"></div>\n        <div bo-if="dockedChatObj.chatType == 1" ng-click="showDockedChat($event,dockedChatObj.chatId)"\n             style="margin:auto;padding: 0px 1px 1px 0px;font-size: 12px; ">\n            <cnv-user-profile-image user-id="dockedChatObj._user.userId" size="28" width="27" height="27"\n                                    profile-type="dockedChatObj._user.profileImageType" full-name="dockedChatObj.getOtherParticipant().name"\n                                    profile-version="dockedChatObj._user.profileImageVersion"></cnv-user-profile-image>\n        </div>\n        <div style="width: 32px; height: 32px;padding-right: 40px;margin-left: -3px;"\n             bo-if="dockedChatObj.chatType == 2"\n             ng-click="showDockedChat($event,dockedChatObj.chatId)">\n            <div class="group-title-img" style="left:8px"></div>\n        </div>\n        <div class="dockedWindowCounter" bo-bind="\'+\'+(dockedWind.length-1)" bo-if="dockedWind.length > 1"></div>\n        <div class="chatListDocked" tabindex="0" bo-show="showingChatListDocked">\n            <div ng-repeat="dockedWindObj in dockedWind">\n                <div class="dockListContent">\n                    <div bo-if="dockedWindObj.childScope.chatObj.chatType == 1"\n                         style="display: inline-block;margin-bottom: 2px;margin-left: 5px;"\n                         ng-mousedown="showDockedChat($event,dockedWindObj.chatId)">\n                        <div bo-if="dockedWindObj.childScope.chatObj._user.presenceStatus == 1  && dockedWindObj.childScope.chatObj._user.getDevice()  != 2"\n                             class="listUserStatusOnline"></div>\n                        <div bo-if="dockedWindObj.childScope.chatObj._user.presenceStatus == 2  && dockedWindObj.childScope.chatObj._user.getDevice()  != 2"\n                             class="listUserStatusBusy"></div>\n                        <div bo-if="dockedWindObj.childScope.chatObj._user.presenceStatus == 3  && dockedWindObj.childScope.chatObj._user.getDevice() !=2"\n                             class="listUserStatusIdle" bo-show="!isMinimizedToAvatar"></div>\n                        <div bo-if="dockedWindObj.childScope.chatObj._user.presenceStatus == 4  && dockedWindObj.childScope.chatObj._user.getDevice() !=2 && !dockedWindObj.childScope.chatObj._user.getHasMobile()"\n                             class="listUserStatusOffline"></div>\n                        <div bo-if="(dockedWindObj.childScope.chatObj._user.getDevice()  == 2) || (dockedWindObj.childScope.chatObj._user.presenceStatus == 4 && dockedWindObj.childScope.chatObj._user.getHasMobile())"\n                             class="listUserStatusMobile"></div>\n\n                    </div>\n                    <div bo-if="dockedWindObj.childScope.chatObj.chatType == 2"\n                         style="display: inline-block;margin-bottom: 2px;"\n                         ng-mousedown="showDockedChat($event,dockedWindObj.chatId)">\n                        <i class="cnv-icons-20 icons_Group_Icon-darkgray"></i>\n                    </div>\n                    <div class="dockedChatListTitle" bo-bind="dockedWindObj.childScope.chatObj.getTitle()"\n                         ng-mousedown="showDockedChat($event,dockedWindObj.chatId)">\n                    </div>\n                    <div class="unreadCountDockedList" bo-bind="dockedWindObj.childScope.chatObj.unreadCount > 20 ? \'20+\': dockedWindObj.childScope.chatObj.unreadCount"\n                         bo-show="dockedWindObj.childScope.chatObj.unreadCount > 0"></div>\n                    <div class="closeChatFromList" ng-click="closeDockedChat($event,dockedWindObj.id)">\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>')
    }
    ]),
    b.module("comments/commentEditor/cnvCommentEditor.tpl.html", []).run(["$templateCache", function(a) {
        a.put("comments/commentEditor/cnvCommentEditor.tpl.html", '<div cnv-clicked-outside-this="onClickedOutsideWhenActive(event)" bindonce>\n    <div bo-hide="checkIfCommentingClosed()" class="feed-comment-editor-cont" bo-class="{\'highlight\': active && focused, \'highlight-red\': commentsHasBeenBlocked, \'disabled\': commentEditorCtrl.permissions.disable}">\n        <input name=\'file\' class=\'comment-file-input\' type=\'file\' style="display: none;"></input>\n        <cnv-dropzone class="attachment-drop-zone" dropzone-id="{{::dropZone.id}}"></cnv-dropzone>\n        \n        <div class="dummy-text-area" bo-if="!active" ng-click="onDummyTextAreaClick()">Add a comment...</div>\n\n        <div class="feed-comment-editor-active-cont edit-mode" bo-if="active">\n            \n            <div class="dummy-sharing-overlay" ng-show="commentEditorCtrl.waiting">\n                <span class="cnv-spinner"></span>\n            </div>\n\n            <div ng-if="commentEditorCtrl.snippetData" class="note-snippet">\n                <div class="content" ng-class="commentEditorCtrl.snippetData.classes">\n                    <span ng-if="commentEditorCtrl.snippetData.fileViewerTextAnnotation" ng-bind="commentEditorCtrl.snippetData.snippetData.data.text | limitToWithEllipsis: true: 100"></span>\n                    <img ng-if="!commentEditorCtrl.snippetData.fileViewerTextAnnotation" ng-src="{{getEditCommentSnippetImage()}}"></img>\n                    <i class="cross" ng-click="removeCommentEditorSnippetData()"></i>\n                </div>\n            </div>\n\n            <cnv-editor cnv-text-editor-mode="basic"\n                        cnv-text-editor-ctrl="textEditorCtrl" \n                        cnv-hashtags="getHashtags($query)" \n                        cnv-at-mentions="getShareWithDropdownItems($query, delimiter, 0)"\n                        cnv-at-mentions-suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html"\n                        cnv-text-editor-on-esc-key-press="onEscKeyPressInTextEditor()"\n                        cnv-text-editor-submit-on-enter="onTextEditorSubmitOnEnter()"\n                        cnv-on-at-mention-added="onAtMentionAdded(item)"\n                        cnv-on-command-executed="onCommandExecuted(item, search)"\n                        cnv-on-at-mention-removed="onAtMentionRemoved(item)"\n                        cnv-text-selection-removed="onSelectionRemoved($atMentionNodes)"\n                        cnv-text-editor-on-focus-out="onFocusOut()"\n                        cnv-editor-source="Comment">\n            </cnv-editor>\n\n            <div ng-if="commentEditorCtrl.attachments.initialized" \n                 cnv-upload-files-ui-manager \n                 cnv-upload-files-ui-manager-ctrl="commentEditorCtrl.attachments.controllers.manager_controller" \n                 cnv-insert-add-item-options-ctrl="commentEditorCtrl.attachments.controllers.file_input_controller" \n                 class="filesUploadContainer">\n            </div>\n        </div>\n\n        <div class="comment-action-bar" bo-if="!onBoardingEnabled && (active || alwaysActiveActionbar)">\n            <cnv-emoji-popover bo-if="enableEmoji" cnv-emoji-fixed-on-scroll="false" cnv-editor-name="editorCtrl" class="comment-action cnv-icons-18"></cnv-emoji-popover>\n            <span ng-class="{\'disabled\': !commentEditorCtrl.allowAttachments}" class="comment-action anim file-chooser icons2_Attach-darkgray cnv-icons-18" ng-click="openFileChooser()"></span>\n            <span ng-class="{\'disabled\': !commentEditorCtrl.allowAttachments}" class="comment-action anim gif-attachment cnv-icons-18">\n                <cnv-giphy-popover cnv-file-context="commentEditorCtrl.attachments.file_input_upload_context.context" cnv-giphy-information="giphyObject" cnv-giphy-icon-class="giphy" cnv-giphy-custom-classes="\'comment-editor\'" cnv-giphy-relative-to-body="true" cnv-giphy-mixpanel-info="RightCommentsPanel"></cnv-giphy-popover>\n            </span>\n        </div>\n    </div>\n\n    <!-- <div class="attach-context" bo-if="commentEditorCtrl.commentEdit && commentEditorCtrl.snippetData.classes==\'detail_snippet\'">\n        <input type="checkbox" ng-click="onAttachContextChanged();" checked> <span>Attach context</span>\n    </div> -->\n\n    <div class="editor-at-mention-alert" bo-if="!commentEditorCtrl.permissions.block && commentEditorCtrl.showAtMentionAlert">\n        <i class="flag"></i>\n        <span bo-show="!commentEditorCtrl.permissions.allowLegitAtMentions" >This post will be shared with anyone tagged in your comment</span>\n        <span bo-show="commentEditorCtrl.permissions.allowLegitAtMentions" >You\'re only allowed to @mention those this post is already shared with</span>\n    </div>\n\n    <div class="meta comments-closed-alert" bo-class="{\'t-padding\': (commentsHasBeenBlocked && active)}" bo-if="commentEditorCtrl.permissions.block">\n        <i bo-if="commentsHasBeenBlocked" class="flag"></i>\n        <span bo-if="!commentsHasBeenBlocked" bo-html="commentEditorCtrl.permissions.message"></span>\n        <span bo-if="commentsHasBeenBlocked">You no longer have permissions to comment on this post</span>\n    </div>\n</div>\n')
    }
    ]),
    b.module("common/alerts/templates/alertModal.tpl.html", []).run(["$templateCache", function(a) {
        a.put("common/alerts/templates/alertModal.tpl.html", '<div class="modal-header">\n    <h4><span class="glyphicon glyphicon-check"></span> {{title}}</h4>\n    <button ng-if="!dontShowCloseBtn" type="button" class="close" ng-click="close()">×</button>\n</div>\n<div class="modal-body">\n    <p ng-bind-html="text"></p>\n</div>\n<div class="modal-footer">\n    <button type="button" class="btn btn-primary" ng-click="ok()" autofocus>{{okBtnLabel}}</button>\n</div>\n')
    }
    ]),
    b.module("common/alerts/templates/errorModal.tpl.html", []).run(["$templateCache", function(a) {
        a.put("common/alerts/templates/errorModal.tpl.html", '<div class="modal-header">\n    <h4><span class="glyphicon glyphicon-warning-sign"></span> {{title}}</h4>\n    <button type="button" class="close" ng-click="close()">×</button>\n</div>\n<div class="modal-body">\n    <p>{{text}}</p>\n</div>\n<div class="modal-footer">\n    <button type="button" class="btn btn-primary" ng-click="ok()" autofocus>{{okBtnLabel}}</button>\n</div>')
    }
    ]),
    b.module("common/alerts/templates/promptModal.tpl.html", []).run(["$templateCache", function(a) {
        a.put("common/alerts/templates/promptModal.tpl.html", '<div class="modal-header">\n    <h4><span ng-if="showHeaderIcon" class="glyphicon glyphicon-info-sign"></span> {{title}}</h4>\n    <button ng-if="!dontShowCloseBtn" type="button" class="close" ng-click="close()">×</button>\n</div>\n<div class="modal-body" bindonce>\n    <p bo-html="text"></p>\n</div>\n<div class="modal-footer">\n    <button type="button" class="btn btn-primary" ng-click="ok()" autofocus>{{okBtnLabel}}</button>\n    <button type="button" class="btn btn-default" ng-click="cancel()">{{cancelBtnLabel}}</button>\n</div>')
    }
    ]),
    b.module("common/cnvInviteTeammates/templates/cnvFindContactsPermissionDenied.tpl.html", []).run(["$templateCache", function(a) {
        a.put("common/cnvInviteTeammates/templates/cnvFindContactsPermissionDenied.tpl.html", '<div class="modal-header">\n    <h4>Convo does not have permission  to access your contacts</h4>\n    <button type="button" class="close" ng-click="dismiss()">×</button>\n</div>\n<div class="modal-body">\n	<div ng-if="VIEW === VIEWS.MAC" class="error-message">\n    	<div>Open <strong>System Preferences</strong> and select the <strong>Security & Privacy</strong> pane, then the <strong>Privacy tab</strong>.<br>Select <strong>Contacts</strong> and <strong>check Convo</strong> to allow permissions.</div>\n\n    	<div class="help-image">\n    		<img src=\'assets/img/contacts/mac-contacts-no-permission.png\'/>\n    	</div>\n    </div>\n</div>\n<div class="modal-footer">\n    <button type="button" class="btn btn-primary" ng-click="dismiss()">Got it</button>\n</div>\n')
    }
    ]),
    b.module("common/cnvInviteTeammates/templates/cnvFindTeammatesBasicSplash.tpl.html", []).run(["$templateCache", function(a) {
        a.put("common/cnvInviteTeammates/templates/cnvFindTeammatesBasicSplash.tpl.html", '<div class="find-teammates" suppress-scroll-propagation>\n    <section ng-if="VIEW === VIEWS.PERMISSION" 	ng-include="\'common/cnvInviteTeammates/templates/cnvFindTeammatesPermissionView.tpl.html\'"></section>\n    <section ng-if="VIEW === VIEWS.PROCESSING" 	ng-include="\'common/cnvInviteTeammates/templates/cnvFindTeammatesWaitingView.tpl.html\'"></section>\n    <section ng-if="VIEW === VIEWS.COMPLETE" 	ng-include="\'common/cnvInviteTeammates/templates/cnvInviteTeammatesResponseView.tpl.html\'"></section>\n    <section ng-if="VIEW === VIEWS.VANITY_URL" 	ng-include="\'common/cnvInviteTeammates/templates/cnvInviteTeammatesVaniyUrlView.tpl.html\'"></section>\n</div>\n')
    }
    ]),
    b.module("common/cnvInviteTeammates/templates/cnvFindTeammatesPermissionView.tpl.html", []).run(["$templateCache", function(a) {
        a.put("common/cnvInviteTeammates/templates/cnvFindTeammatesPermissionView.tpl.html", '<div class="find-mac-contacts-container">\n    <div class="modal-body">\n        <div class="heading">Convo works better with your team</div>\n        <div class="description">See teammates who aren\'t on<br>the <span ng-bind="accountInfo.getPrimaryAccountDomain().user_email_domain"></span> network yet.</div>\n\n        <div class="actions">\n            <div><button class="btn btn-default" ng-click="continue()">Import contacts from your Mac</button></div>\n            <div><a class="dismiss" href="javascript:void(0);" ng-click="dismiss()">Not now</a></div>\n        </div>\n    </div>\n    <div class="modal-footer">\n        Convo is committed to protecting your privacy and has world-class data protection.<br>\n        Read more about how your data is protected in our <a>Privacy</a> and <a>Security</a> Policy.\n    </div>\n</div>\n')
    }
    ]),
    b.module("common/cnvInviteTeammates/templates/cnvFindTeammatesWaitingView.tpl.html", []).run(["$templateCache", function(a) {
        a.put("common/cnvInviteTeammates/templates/cnvFindTeammatesWaitingView.tpl.html", '<div class="find-mac-contacts-container">\n    <div class="modal-body" ng-class="{\'low-padding\': longProcessing}">\n        <div class="heading">Finding teammates...</div>\n        <div class="waiting" ng-class="{\'low-padding\': longProcessing}">\n            <img src="assets/img/common/preloader.gif"/>\n        </div>\n\n        <div ng-if="longProcessing" class="actions animate">\n            <div>\n                <a href="javascript:void(0);" ng-click="hide()"><strong>Hide this</strong></a>\n            </div>\n            <div class="blue dismiss-message">\n                <span><strong>This can take a few minutes if you have many contacts.<br>We\'ll let you know when we\'re done.</strong></span>\n            </div>\n        </div>\n    </div>\n    <div class="modal-footer">\n        Convo is committed to protecting your privacy and has world-class data protection.<br>\n        Read more about how your data is protected in our <a style="text-decoration: underline;">Privacy</a> and <a style="text-decoration: underline;">Security</a> Policy.\n    </div>\n</div>\n')
    }
    ]),
    b.module("common/cnvInviteTeammates/templates/cnvInviteTeammates.tpl.html", []).run(["$templateCache", function(a) {
        a.put("common/cnvInviteTeammates/templates/cnvInviteTeammates.tpl.html", '<div class="inv-teammates">\n    <input bo-if="invtTeammtCtrl.isNotShowingAutoComplete" class="email" type="email" ng-model="invtDetails.email" placeholder="{{placeholderText}}"/>\n    <div bo-if="!invtTeammtCtrl.isNotShowingAutoComplete" class="to-field-cont">\n        <tags-input ng-model="invitedTo"\n                    placeholder="{{placeholderText}}"\n                    add-on-comma="true"\n                    add-on-blur="true"\n                    horizontal-flow = "true"\n                    add-from-autocomplete-only="false"\n                    display-property="label"\n                    replace-spaces-with-dashes="false"\n                    allowed-tags-pattern="^[+a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$"\n                    on-tag-added="onItemAddedInToField($tag)">\n            <auto-complete\n                    source="getAutoCompleteUserItemsToInvite($query, numSelected)"\n                    load-history-on-focus="true"\n                    delimiter="@"\n                    min-length="1"\n                    auto-select-first-suggestion="true"\n                    suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html">\n            </auto-complete>\n        </tags-input>\n    </div>\n    \n    <button class="btn btn-primary" ng-click="inviteTeammate()">Invite</button>\n    <span ng-if="!invtTeammtCtrl.group">\n        <span class="meta" style="margin: 0px 20px">or</span>\n        <button class="btn btn-default" ng-click="shareableInviteLink()">Get shareable invite link</button>\n    </span>\n    \n    <div class="inv-options">\n        <!-- <a href="javascript:void(0)" ng-click="openInviteTeammatesModal()">Add message</a>\n        <span class="dot">&nbsp;&nbsp;&#8226;&nbsp;&nbsp;</span> -->\n        <a href="javascript:void(0)" ng-click="inviteFromAddressBk()">Invite from address book</a>\n        <!-- <span class="dot">&nbsp;&nbsp;&#8226;&nbsp;&nbsp;</span>\n        <a href="javascript:void(0)" ng-click="openInviteTeammatesModal()">Add in bulk</a> -->\n    </div>\n</div>')
    }
    ]),
    b.module("common/cnvInviteTeammates/templates/cnvInviteTeammatesResponseView.tpl.html", []).run(["$templateCache", function(a) {
        a.put("common/cnvInviteTeammates/templates/cnvInviteTeammatesResponseView.tpl.html", '<div class="find-mac-contacts-container">\n    <div class="modal-body">\n        <span class="cross" ng-click="dismiss()">×</span>\n        <div class="complete-status">\n            <div class="complete-status-icon"><span class="check-white"></span></div>\n            <div class="message">{{inviteResult.totalInvitesSent}} invitations sent!</div>\n            <!-- <div class="error-message" ng-show="inviteResult.users_not_invited.length">{{inviteResult.users_not_invited.length}} invitations could<br>not be sent.\n                <span class="details" ng-click="showErrorPopup()">See Details</span>\n                <span class="message-popup" ng-show="showErrorDetails">\n                    <span class="popup-text">The following people could<br>not be invited. Please try again.<br><br>\n                        <span ng-repeat="user in inviteResult.users_not_invited">\n                            <span ng-bind="user.invitee_email"></span><br>\n                        </span>\n                    </span>\n                </span>\n            </div> -->\n        </div>\n\n        <div class="actions lower-margin" ng-show="inviteResult.invitedTo == \'NETWORK\'">\n            <div class="md-action-title">Copy and share this invite link to get<br>your team in faster</div>\n            <div class="sticky-input-button">\n                <input cnv-auto-selected ng-keydown="onInputKeyDown($event)" tabindex="0" ng-model="vanityURL"/>\n                <span class="message-popup">Press {{commandSymbol}} - C to copy</span>\n            </div>\n        </div>\n    </div>\n    <div class="modal-footer"></div>\n</div>\n')
    }
    ]),
    b.module("common/cnvInviteTeammates/templates/cnvInviteTeammatesVaniyUrlView.tpl.html", []).run(["$templateCache", function(a) {
        a.put("common/cnvInviteTeammates/templates/cnvInviteTeammatesVaniyUrlView.tpl.html", '<div class="find-mac-contacts-container vanity-url-wrapper">\n    <div class="modal-body">\n        <span class="cross" ng-click="dismiss()">×</span>\n        <div class="item-container">\n            \n            <div class="network-heading">\n                <span>{{::accountInfo.getAccountName()}}\'s Invite Link</span>\n            </div>\n            \n            <div class="network-help-text">\n                <span>Your teammates will use this link to sign up to your company\'s network.<br />Copy the link below and send it over via text message, chat or email.</span>\n            </div>\n            \n            <div class="actions">\n                <div class="sticky-input-button">\n                    <input cnv-auto-selected onClick="this.select();" ng-keydown="onInputKeyDown($event)" tabindex="0" ng-model="vanityURL" />\n                    <span ng-if="isNative" class="message-popup native" ng-click="copyToClipboardNatively($event)">Press {{commandSymbol}} - C to copy</span>\n                    <span ng-if="!isNative" class="message-popup">Press {{commandSymbol}} - C to copy</span>\n                </div>\n            </div>\n\n            <hr />\n\n            <a ng-if="isNative" class="email-btn" href="mailto:?subject={{::inviteEmailSubject}}&body={{::inviteEmailBody}}" target="_blank">\n                <button class="btn btn-default"><i class="cnv-icons-20 icons_Email-blue"></i>Send an email with this link</button>\n            </a>\n\n            <a ng-if="!isNative" class="email-btn" href="mailto:?subject={{::inviteEmailSubject}}&body={{::inviteEmailBody}}">\n                <button class="btn btn-default"><i class="cnv-icons-20 icons_Email-blue"></i>Send an email with this link</button>\n            </a>\n\n        </div>\n\n        <!-- <div class="actions lower-margin"> -->\n            <!-- <div class="md-action-title">Copy this link and share with your team\n                <br>via chat or email\n            </div> -->\n            \n        <!-- </div> -->\n    </div>\n    <div class="modal-footer"></div>\n</div>\n')
    }
    ]),
    b.module("common/dialogBox.tpl.html", []).run(["$templateCache", function(a) {
        a.put("common/dialogBox.tpl.html", "<div class='dialog-title'>{{dialogTitleText}}</div>\n<div class=\"dialog-message\">{{dialogMessageText}}</div>\n<div class=\"dialog-button\">\n  <input type='button' value='OK' ng-Click='onOK();'/>\n  <input type='button' value='Cancel' ng-Click='onCancel();'/>\n</div>")
    }
    ]),
    b.module("common/dialogs/templates/cnvResolveLinkModal.tpl.html", []).run(["$templateCache", function(a) {
        a.put("common/dialogs/templates/cnvResolveLinkModal.tpl.html", '<div class="modal-header">\n    <h4>Insert link</h4>\n    <button type="button" class="close" ng-click="dismiss()">×</button>\n</div>\n\n<form name="addPinContent" ng-submit="onSubmit()" role="form">\n\n	<div class="modal-body">\n	    <div class="form-group">\n	      <span>Link (url)</span>\n	      <input class="form-control" name="url" ng-model="data.url" ng-change="onChange()" ng-paste="onPaste()" ng-class="{\'ng-invalid-url\': !validateUrl(), \'ng-invalid-required\': !data.url }" cnv-autofocus=".modal-dialog" required>\n	    </div>\n	    <div class="form-group">\n	      <span>Text to display</span>\n	      <input type="text" class="form-control" name="resource_name" ng-model="data.resource_name" maxlength="255">\n	    </div>\n\n\n	    <div  class="suggestion-link" ng-show="suggestedTitle != data.resource_name && suggestedTitle!=\'\' && !resolving">\n	    	<a href="javascript:void(0)" ng-click="setSuggestedTitle()">Display this: </a>\n	    	<span  class="suggestion-text" ng-bind="suggestedTitle"></span>\n	    </div>\n\n	    <div class="suggestion-link" ng-show="resolving">\n	    	<span ng-show="resolving" class="suggestion-text">Resolving...</span>\n	    </div>\n\n	    <a class="test-link" href="javascript:void(0);" ng-disabled="!data.url" ng-click="test()">Test Link</a>\n\n	</div>\n	\n	<div class="modal-footer">\n	    <button type="submit" class="btn btn-primary" ng-disabled="!data.url">Insert</button>\n	</div>\n\n</form>')
    }
    ]),
    b.module("common/dialogs/templates/dialogFooter.tpl.html", []).run(["$templateCache", function(a) {
        a.put("common/dialogs/templates/dialogFooter.tpl.html", '</div>\n		<div class="modal-footer">\n			\n			<button type="button" class="btn btn-warning" ng-show="cancelBtn" ng-click="cancel()">\n				<span ng-if="cancelBtnText">{{cancelBtnText}}</span>\n				<span ng-if="!cancelBtnText">Cancel</span>\n			</button>\n		    \n		    <button type="button" class="btn btn-primary" ng-show="okBtn" ng-click="ok()" autofocus>\n		    	<span ng-if="okBtnText">{{okBtnText}}</span>\n		    	<span ng-if="!okBtnText">Ok</span>\n		    </button>\n\n		    <button type="submit" class="btn btn-primary" ng-show="submitBtn">\n		    	<span ng-if="submitBtnText">{{submitBtnText}}</span>\n		    	<span ng-if="!submitBtnText">Submit</span>\n		    </button>\n		</div>\n	</form>\n</div>')
    }
    ]),
    b.module("common/dialogs/templates/dialogHeader.tpl.html", []).run(["$templateCache", function(a) {
        a.put("common/dialogs/templates/dialogHeader.tpl.html", '<div class="dialog-modal">\n	<div class="modal-header">\n	    <h4>{{title}}</h4>\n	    <button type="button" class="close" ng-click="cancel()">×</button>\n	</div>\n	<form ng-submit="submit()">\n		<div class="modal-body">')
    }
    ]),
    b.module("common/listItemRenderers/contactListItem.tpl.html", []).run(["$templateCache", function(a) {
        a.put("common/listItemRenderers/contactListItem.tpl.html", '<div class="img-label-list-item contact" ng-class="{\'img-label-list-item-tags\': !item.type}" ng-style="{\'line-height\': item.formatteddesclabel ? \'normal\' : \'35px\'}">\n	<cnv-user-profile-image ng-if="item.type == \'USER\'" classes="item.classes" img-url="item.imgurl" user-id="item.id" size="\'32\'"></cnv-user-profile-image>\n	<i ng-if="item.type && item.type != \'USER\'" ng-class="item.classes"></i>\n	<!-- <img ng-if="item.type!=\'USER\'" ng-src="{{item.imgurl}}" class="usr-img-32"/> -->\n	<span ng-bind-html="item.formattedlabel"></span>\n	<span ng-show="item.formatteddesclabel" ng-bind-html="item.formatteddesclabel"></span>\n</div>\n')
    }
    ]),
    b.module("common/listItemRenderers/imgLabelListItem.tpl.html", []).run(["$templateCache", function(a) {
        a.put("common/listItemRenderers/imgLabelListItem.tpl.html", "<div class=\"img-label-list-item\" ng-class=\"{'img-label-list-item-tags': !item.type, 'removed': (item.invited || item.removed)}\" ng-style=\"{'line-height': item.formatteddesclabel ? 'normal' : '35px'}\">\n	<cnv-user-profile-image ng-if=\"item.type == 'USER' || item.type === 'LINK' || item.type === 'POST' || item.type === 'CHAT' || (item.type === 'recentSearches' && item.id)\" classes=\"item.classes\" img-url=\"item.imgurl\" user-id=\"item.id\" size=\"'32'\"></cnv-user-profile-image>\n" + '	<!-- <cnv-user-profile-image ng-if="item.type == \'CONTACT\'" classes="item.classes" full-name="item.label" size="\'32\'"></cnv-user-profile-image> -->\n	<i ng-if="item.type && item.type != \'USER\'&& (item.classes || item.secondaryIconClass)" ng-class="item.classes || item.secondaryIconClass"></i>\n	<!-- <img ng-if="item.type!=\'USER\'" ng-src="{{item.imgurl}}" class="usr-img-32"/> -->\n	<span ng-bind-html="(item.formattedlabel + (item.invited ? \' (Invited)\' : \'\') + (item.removed ? \' (Removed)\' : \'\')) | escapeHtmlXSS" ></span>\n	<span ng-show="item.formatteddesclabel" ng-bind-html="item.formatteddesclabel | escapeHtmlXSS" class="sec-label"></span>\n	<span ng-if="item.labelbadge" ng-bind-html="item.labelbadge" class="label-badge"></span>\n</div>\n')
    }
    ]),
    b.module("common/templates/threeDotSpinner.tpl.html", []).run(["$templateCache", function(a) {
        a.put("common/templates/threeDotSpinner.tpl.html", '<div class="spinner">\n    <div class="bounce1"></div>\n    <div class="bounce2"></div>\n    <div class="bounce3"></div>\n</div>')
    }
    ]),
    b.module("common/userProfileImage/cnvUserProfileImage.tpl.html", []).run(["$templateCache", function(a) {
        a.put("common/userProfileImage/cnvUserProfileImage.tpl.html", '<div class="user-profile-image img-circle" ng-bind="initials" ng-style="{ \'background-color\': colorScheme }"></div>')
    }
    ]),
    b.module("common/videoPlayer/cnvVideoPlayer.tpl.html", []).run(["$templateCache", function(a) {
        a.put("common/videoPlayer/cnvVideoPlayer.tpl.html", '<div class="holderDiv" tabindex="-1" id=\'videoPlayer{{::file.id}}\'>\n		<input type="text" class="activeElem ignore-key-down" style="width:0px; height:0px; position:absolute; opacity:0.01" />\n		<video bo-show="videoURL" bindonce class="feedVideoPlayer">\n		  <source type="video/mp4">\n		Your browser does not support the video tag.\n		</video>\n		<canvas class=\'videoPreview\'></canvas>\n		<div bo-show="videoURL" class="feedVideoPlayerControls">\n			<div class="feedVideoPlayerHeader" ng-show="playerOptions.showHeader && !isFullScreen">\n				<div class="headerNameHolder">{{::file.name}}</div>\n				<div class="headerClose">\n					<span class="cnv-icons-12 icons2_Close-white"></span>\n				</div>\n			</div>\n			\n			<div class=\'spinerHolder\'>\n				<span class="cnv-spinner light"></span>\n			</div>\n			<div class="feedVideoPlayerBody">\n				\n			</div>\n			<div class="closeFullScreen"> \n				<span class="cnv-icons-12 icons2_Close-white" ng-show="isFullScreen"></span>\n			</div>\n			<div class="feedVideoPlayerFooter">\n				<div class="pauseBtn">\n					<!-- <span class="pause_icon"></span> -->\n					<span class="pause_icon" ng-hide="videoPlayerIsPaused"></span>\n					<span class="play_icon" ng-show="videoPlayerIsPaused"></span>\n				</div>\n				<div class="seekbarHolder">\n					<div class="seekbar">\n						<div class="seekbarBufferHolder">\n							<div class="seekbarBuffer"></div>\n						</div>\n						<div class="seekbarCurrent"></div>\n					</div>	\n				</div>\n				<div class="time">\n					{{showCurrentTime}}/{{showDuration}}\n				</div>\n				<div style="position:relative;float: left;">\n					<div class="volumeBarHolder">\n						<div class="volumeBar">\n							<div class="volumeBarBase"><div class="volumeBarTop"></div></div>\n						</div>\n					</div>\n				</div>\n				<div class="volume">\n					<!-- <span class="volume_icon" ng-hide="isMuted && videoVolume > 0"></span>\n					<span class="mute_icon" ng-show="isMuted && videoVolume == 0"></span> -->\n					<span class="volume_icon" ng-show="(!isMuted && videoVolume >= 0.5) || (!videoVolume && !videoLoaded)"></span>\n					<span class="volume_mid_icon" ng-show="!isMuted && videoVolume > 0 && videoVolume < 0.5"></span>\n					<span class="mute_icon" ng-show="isMuted || videoVolume <= 0"></span>\n				</div>\n					\n				\n\n					<div class=\'hdPannel\'>\n' + "						<div class='option' ng-class=\"{'active': resolutionPlaying===1080}\" ng-click='changeQuality(1080)' ng-show='canPlayVideoType.canPlay1080'>\n							<span class='circle'></span>\n							1080p <span class='hd'>HD</span>\n						</div>\n						<div class='option' ng-class=\"{'active': resolutionPlaying===720}\" ng-click='changeQuality(720)' ng-show='canPlayVideoType.canPlay720'>\n							<span class='circle'></span>\n							720p <span class='hd'>HD</span>\n						</div>\n						<div class='option' ng-class=\"{'active': resolutionPlaying===480}\" ng-click='changeQuality(480)' ng-show='canPlayVideoType.canPlay480'>\n							<span class='circle'></span>\n							480p\n						</div>\n					</div>\n\n				<div class=\"hdplay\">\n					<span class=\"hd_icon\" ng-class=\"{'hd_on_icon':resolutionPlaying>=720,'hd_off_icon':resolutionPlaying==480, 'hd_off_icon_hover': (resolutionPlaying===480 && (canPlayVideoType.canPlay1080 || canPlayVideoType.canPlay720))}\"></span>\n				</div>\n\n				<div class=\"menuBar\" bo-if=\"playerOptions.showControlsMenu\">\n					<cnv-dropdowns bo-if=\"dropdownCtrl.options.length > 0\" cnv-dropdown-ctrl=\"dropdownCtrl\"></cnv-dropdowns>\n				</div>\n\n				\n				<div class=\"resize\">\n					<span class=\"collapse_icon\" ng-show='isFullScreen'></span>\n					<span class=\"expand_icon\" ng-hide='isFullScreen'></span>\n				</div>\n\n			</div>\n		</div>\n\n		<div bo-hide=\"videoURL\" bindonce class=\"previewNotAvailable\">\n			<center>No preview available</center>\n		</div>\n</div>");
    }
    ]),
    b.module("common/videoThumbnail/cnvVideoThumbnail.tpl.html", []).run(["$templateCache", function(a) {
        a.put("common/videoThumbnail/cnvVideoThumbnail.tpl.html", '<div class="videoThumbnailHolder" cnv-popover cnv-popover-ctrl="file.tooltip" popover-data-id="cnv-13" style=\'width: {{::file.thumbWidth}}px; height: {{::file.thumbHeight}}px;\'>\n    <img bo-style="file.thumbStyle" bo-src="file.thumbnail_image" style=\'display:none;\'>\n    <i class="cnv-icons-64 icons_Video-darkgray" bo-style=\'file.iconStyle\'></i>\n    <video style="background:#000; display:none;" width="{{::file.thumbWidth}}" height="{{::file.thumbHeight}}" autoplay loop>\n      <source  type="video/mp4">\n        Your browser does not support the video tag.\n    </video>\n    <div class="videoHoverIcon" style=\'display:none;\'></div>\n</div>')
    }
    ]),
    b.module("components/cnvBanners/cnvBanners.tpl.html", []).run(["$templateCache", function(a) {
        a.put("components/cnvBanners/cnvBanners.tpl.html", '<div bindonce class="banners-cont" bo-show="bannersStack.length > 0">\n\n    <div bo-repeat="b in bannersStack" class="banner">\n     <span style="float: right;cursor: pointer;  padding-top: 3px;" bo-if="b.showCloseBtn"\n           ng-click="onBannerCloseBtnClick(b.id)">\n     <i class="cnv-icons-12 icons2_Close-darkgray"></i>\n  </span>\n        <span bo-html="b.displayText" ng-click="onBannerTextClick($event, b.id)"></span>\n    </div>\n</div>\n')
    }
    ]),
    b.module("components/cnvInviteFromAddressBookWidget/cnvInviteFromAddressBookModal.tpl.html", []).run(["$templateCache", function(a) {
        a.put("components/cnvInviteFromAddressBookWidget/cnvInviteFromAddressBookModal.tpl.html", '<div bindonce>\n    <div class="modal-header">\n        <h4 bo-bind="title"></h4>\n        <button type="button" class="close" ng-click="cancel()">×</button>\n    </div>\n    <!-- <div bo-show="modalDetails.isProcessing"\n          style="width: 100%;height: 390px;opacity: 0.7;background: #ffffff;z-index: 101;position: absolute;">\n         <div class="loading-spinner">\n             <img src="assets/img/feed/loading-spin.svg" alt="Loading icon"/>\n         </div>\n     </div>-->\n    <div class="modal-body">\n\n        <div class="app-sub-header">\n            <a bo-class="{active: selectedView==FILE_VIEW}" href="javascript:void(0)" style="margin-right: 20px;"\n               ng-click="toggleSelectedView(FILE_VIEW)">File</a>\n            <a bo-class="{active: selectedView==EMAIL_VIEW}" href="javascript:void(0)"\n               ng-click="toggleSelectedView(EMAIL_VIEW)">Email</a>\n        </div>\n\n\n        <div style="height: 360px;border: 1px solid #e0e0e0;margin-top: 20px;border-radius: 6px;">\n            <!--File View-->\n            <div bo-if="selectedView == FILE_VIEW">\n                <div style="  display: inline-block;margin-left: 20px;margin-top: 20px;">\n                    Upload a csv contacts file :\n                </div>\n                <div style="position: absolute;  display: inline-block;margin-top: 12px;margin-left: 5px;">\n\n                    <div class="btn btn-default" style="overflow: hidden;position: relative;cursor: pointer;">Choose\n                        File\n                        <input style="cursor: pointer;height: 100%;position:absolute;top: 0;right: 0;font-size:50px;opacity:0;-moz-opacity: 0;filter:progid:DXImageTransform.Microsoft.Alpha(opacity=0)"\n                               type="file" name="file2" id="importCntctDialog"/>\n                    </div>\n\n                </div>\n                <div style="display: inline-block;margin-top: 18px;margin-left: 155px;color: #7b8386;"\n                     bo-bind="fileName">no file selected\n                </div>\n            </div>\n\n            <!--Email View-->\n            <div bo-if="selectedView == EMAIL_VIEW">\n                <!-- <div bo-if="importingFromIframe">\n                     <iframe id="imprtCntctFrame" src="" width="100%" height="360px">\n                     </iframe>\n                 </div>-->\n\n            </div>\n\n            <div class="contactsView" bo-if="contactList.length" style="margin-left: 20px">\n\n                <hr bo-if="selectedView != EMAIL_VIEW"/>\n                <div style="margin-bottom: 10px">\n                    We found {{contactList.length}} people in your contact list. Select contacts you\'d like to invite.\n                </div>\n                <div style="margin-bottom: 10px">\n                    <a href="javascript:void(0)" ng-click="unCheckAll()">Clear all</a>\n                </div>\n                <perfect-scrollbar class="scrollable" wheel-propagation="false" wheel-speed="50">\n                    <div ng-repeat="contact in contactList" style="margin-left: 20px;margin-bottom: 5px;"\n                         ng-click="checkedChanged($index)">\n                        <input type="checkbox" class="cnv-checkbox" checked="checked" id="{{\'cb\'+$index}}"/>\n                        <label for="{{\'cb\'+$index}}"></label>\n\n                        <div bo-bind="contact.email" style="  display: inline-block;margin-left: 10px;"></div>\n                    </div>\n                </perfect-scrollbar>\n            </div>\n            <div bo-if="!contactList.length && showNoContactMessage" style="margin-left: 20px">\n                <hr bo-if="selectedView != EMAIL_VIEW"/>\n                <div style="margin-top: 20px;" bo-bind="noContactMessage">\n                    No contacts found.\n                </div>\n            </div>\n\n        </div>\n        <div class="footer-content">\n            <button class="btn btn-primary" ng-disabled="!contactList.length" ng-click="inviteTeammates()">Invite\n            </button>\n            <a href="javascript:void(0)" ng-click="cancel()">Cancel</a>\n        </div>\n    </div>\n</div>')
    }
    ]),
    b.module("components/cnvLogoWithFeedDirtyIndicator/cnvLogoWithFeedDirtyIndicator.tpl.html", []).run(["$templateCache", function(a) {
        a.put("components/cnvLogoWithFeedDirtyIndicator/cnvLogoWithFeedDirtyIndicator.tpl.html", '<a href="#/feed" ng-click="$emit(\'networkLogoClicked\', $event)" class="inline-control company-logo">\n			<span class="logo-bound">\n				<img class="logo" bo-src="networkLogo" />\n				<span ng-class="{\'red-dot\': feedDirty}"></span>\n			</span>\n</a>')
    }
    ]),
    b.module("components/combinedSetProfilePictureModal/combinedSetProfilePictureModal.tpl.html", []).run(["$templateCache", function(a) {
        a.put("components/combinedSetProfilePictureModal/combinedSetProfilePictureModal.tpl.html", '<section bindonce cnv-combined-set-profile-picture-modal>\n	<input id="combinedProfileUploadInput" type="file" name="headerDpUploadInput" style="width: 1px; height: 1px; display: block; position: absolute; z-index: 19999; top: -1000px; left: -1000px;" />\n	<div class="modal-header">\n		<h4>Add your photo</h4>\n		<button type="button" class="close" ng-click="dismiss()"><i class="cnv-icons-15 icons2_Close-darkgray"></i></button>\n	</div>\n	<div class="modal-body">\n		<div class="row">\n			<div class="col-xs-10">\n				<div class="blue-circle" bo-if="thisUser.profile_image_type == 0" ng-click="openFilePicker()">\n					<i class="cnv-icons-110 icon2__Following-lightblue"></i>\n					<i class="cnv-icons-30 icons_Camera-white"></i>\n					<i class="plus">+</i>\n					<i class="small-blue-bg"></i>\n				</div>\n				<div class="" bo-if="thisUser.profile_image_type != 0">\n					<cnv-user-profile-image size="\'184\'" width="\'184\'" height="\'184\'" user-id="thisUser.user_id" profile-type="thisUser.profile_image_type" profile-version="thisUser.profile_image_version" full-name="thisUser.first_name + \' \' + thisUser.last_name"></cnv-user-profile-image>\n				</div>\n			</div>\n			<div class="col-xs-11 col-xs-offset-3">\n				<button class="btn btn-default btn-block" ng-click="openFilePicker()">Upload Picture</button>\n				<button ng-if="!utils.isIE() && !utils.isSafari() && !config.IS_NATIVE" class="btn btn-default btn-block" ng-click="setProfilePictureViaWebcam()">Take a Photo</button>\n				<span class="help-txt">You can also upload from your social network profiles.</span>\n				<div class="social-btns linkedin" ng-click="uploadViaLinkedIn()">\n					<div class="left"><i class="cnv-icons-25 linkedin-white"></i></div>\n					<div class="right">Upload</div>\n				</div>\n				<div class="social-btns facebook" ng-click="uploadViaFb()">\n					<div class="left"><i class="cnv-icons-25 Icon1_facebook-white"></i></div>\n					<div class="right">Upload</div>\n				</div>\n				<div class="social-btns twitter" ng-click="uploadViaTwitter()">\n					<div class="left"><i class="cnv-icons-25 twitter-white"></i></div>\n					<div class="right">Upload</div>\n				</div>\n			</div>\n		</div>\n		<div class="row" ng-show="alerts">\n	      <div class="alert alert-success" ng-show="alerts.success" ng-bind="alerts.success" role="alert"></div>\n	      <div class="alert alert-danger" ng-show="alerts.error" ng-bind="alerts.error" role="alert"></div>\n	    </div>\n	</div>\n</section>')
    }
    ]),
    b.module("components/dialog/cnvInFeedModal.tpl.html", []).run(["$templateCache", function(a) {
        a.put("components/dialog/cnvInFeedModal.tpl.html", '<div class="modal-header">\n    <h4> {{title}}</h4>\n    <button type="button" class="close" ng-click="close()">×</button>\n</div>\n<div class="modal-body">\n    <label style="font-weight:bold" >{{text}}</label>\n    <div cnv-tag-input action=\'{{title}}\' data = \'{{data}}\'id="taginput" style="width:95%;"  ></div>\n</div>\n<div class="modal-footer">\n    <button type="button" class="btn btn-primary" ng-click="ok()" >{{okBtnLabel}}</button>\n    <button type="button" class="btn btn-default" ng-click="cancel()">{{cancelBtnLabel}}</button>\n</div>')
    }
    ]),
    b.module("components/dropdown/cnvDropdown.tpl.html", []).run(["$templateCache", function(a) {
        a.put("components/dropdown/cnvDropdown.tpl.html", '<span class="dropdown cnv-custom-dropdown" dropdown on-toggle="toggled(open)" is-open="isopen" bindonce>\n    <a href class="dropdown-toggle" dropdown-toggle aria-haspopup="true" aria-expanded="false">\n' + "        <i bo-class=\"{'cnv-icons-16 icons_Dropdown_incircle-lightgray' : !ddType, 'settingsChatWindowIcon': ddType && ddType == 'chat', 'cnv-icons-12 icons2_Dropdown-darkgray': ddType && ddType == 'circleLessChevron', 'cnv-icons-16 icons_Dropdown_incircle-cccecf' : ddType && ddType == 'note_editor_file', 'cnv-icons-20  icons_Dropdown_incircle-cccecf': ddType && ddType == 'header-network-menu', 'videoPlayer_menu_icon': ddType && ddType == 'video_player','cnv-icons-12 icons2_Dropdown-lightgray': ddType && ddType == 'inline_insert_permissions', 'cnv-icons-10 icons2_Dropdown-white': ddType && ddType == 'header-network-menu-slim'}\"></i>\n    </a>\n    <ul class=\"dropdown-menu dropdown-main-menu\" bo-class=\"{'dropdown-menu-right'  : ddAlign =='right'}\">\n\n    </ul>\n</span>")
    }
    ]),
    b.module("components/dropdown/cnvFeedItemDropdown.tpl.html", []).run(["$templateCache", function(a) {
        a.put("components/dropdown/cnvFeedItemDropdown.tpl.html", '<span class="dropdown">\n    <img class="dropdown-toggle" style="margin-top: -10px;"/>\n    <ul class="dropdown-menu">\n        <li><a ng-click="editProfile()">Edit</a></li>\n        <li><a ng-click="manageGroups()">Mute post</a></li>\n        <li><a ng-click="notificationPrefs()">Pin post to group -- only when on a group filter</a></li>\n        <li><a ng-click="settings()">Add tags</a></li>\n        <li><a ng-click="settings()">Star this post</a></li>\n        <li><a ng-click="settings()">Share with others</a></li>\n        <li><a ng-click="settings()">Copy post link</a></li>\n        <li><a ng-click="settings()">Move to Trash -- only on your own posts</a></li>\n    </ul>\n</span>')
    }
    ]),
    b.module("components/dropdown/cnvJoinedGroupDropdown.tpl.html", []).run(["$templateCache", function(a) {
        a.put("components/dropdown/cnvJoinedGroupDropdown.tpl.html", '<span class="dropdown" on-toggle="toggled(open)">\n    <img class="dropdown-toggle" style="margin-top: -10px;"/>\n    <ul class="dropdown-menu">\n        <li><a ng-click="manageGroupSettings()">Manage group settings</a></li>\n        <li><a ng-click="notificationPreferences()">Notification preferences</a></li>\n        <li><a ng-click="inviteUsers()" bo-if="ctrl.membersCanInvite">Invite users to group</a></li>\n        <li><a ng-click="viewMembers()" bo-if="!ctrl.membersCanInvite">View members</a></li>\n        <li><a ng-click="addIntegration()">Add an integration [only those with permission]</a></li>\n        <li><a ng-click="addPostsOrLinks()">Add important posts or links</a></li>\n        <li><a ng-click="togglePostsInFeed()">Show posts in my feed / Hide posts from my feed</a></li>\n        <li><a ng-click="leaveGroup()">Leave group</a></li>\n    </ul>\n</span>\n')
    }
    ]),
    b.module("components/dropdown/cnvNetworkDropdown.tpl.html", []).run(["$templateCache", function(a) {
        a.put("components/dropdown/cnvNetworkDropdown.tpl.html", '<span class="dropdown">\n    <img class="dropdown-toggle"/>\n    <ul class="dropdown-menu">\n        <li><a ng-click="toggleFollow()">Network settings</a></li>\n        <li><a ng-click="call()">Manage integrations </a></li>\n        <li><a ng-click="inviteToGroups()">Manage users</a></li>\n        <li><a ng-click="share()">Change your network logo [admin only]</a></li>\n        <li><a ng-click="startChat">Get apps</a></li>\n        <li><a ng-click="startChat">Support & feedback</a></li>\n        \n        <li><a ng-click="startChat">Switch network list</a></li>\n        \n        <li><a ng-click="startChat">Sign out</a></li>\n    </ul>\n</span>\n')
    }
    ]),
    b.module("components/dropdown/cnvOtherProfileDropdown.tpl.html", []).run(["$templateCache", function(a) {
        a.put("components/dropdown/cnvOtherProfileDropdown.tpl.html", '<span class="dropdown" on-toggle="toggled(open)">\n    <img class="dropdown-toggle" style="margin-top: -10px;"/>\n    <ul class="dropdown-menu">\n        <li><a ng-click="toggleFollow()" bo-bind="getFollowStatus()"></a></li>\n        <li><a ng-click="call()">Call [first name] [only if phone number exists]</a></li>\n        <li><a ng-click="inviteToGroups()">Invite [first name] to groups</a></li>\n        <li><a ng-click="share()">Share a post with [first name]</a></li>\n        <li><a ng-click="startChat">Start a chat with [first name]</a></li>\n    </ul>\n</span>\n')
    }
    ]),
    b.module("components/dropdown/cnvPublicGroupTypeDropdown.tpl.html", []).run(["$templateCache", function(a) {
        a.put("components/dropdown/cnvPublicGroupTypeDropdown.tpl.html", '<span class="dropdown">\n    <span class="dropdown-toggle text-placeholder" ng-bind="selected.label"></span>\n    <ul class="dropdown-menu">\n        <li ng-repeat="option in options" ng-click="clicked(option)"><a ng-bind="option.label"></a></li>\n    </ul>\n</span>\n')
    }
    ]),
    b.module("components/dropdown/cnvSelfProfileDropdown.tpl.html", []).run(["$templateCache", function(a) {
        a.put("components/dropdown/cnvSelfProfileDropdown.tpl.html", '<span class="dropdown">\n    <img class="dropdown-toggle" style="margin-top: -10px;"/>\n    <ul class="dropdown-menu">\n        <li><a ng-click="editProfile()">Edit profile</a></li>\n        <li><a ng-click="manageGroups()">Manage groups</a></li>\n        <li><a ng-click="notificationPrefs()">Notification preferences</a></li>\n        <li><a ng-click="settings()">Settings</a></li>\n        <li><a ng-click="settings()" bo-bind="ctrl.name"></a></li>\n    </ul>\n</span>')
    }
    ]),
    b.module("components/dropdown/cnvUnjoinedGroupDropdown.tpl.html", []).run(["$templateCache", function(a) {
        a.put("components/dropdown/cnvUnjoinedGroupDropdown.tpl.html", '<span class="dropdown" on-toggle="toggled(open)">\n    <img class="dropdown-toggle" style="margin-top: -10px;"/>\n    <ul class="dropdown-menu">\n        <li><a ng-click="joinGroup()">Join group / Request access</a></li>\n        <li><a ng-click="viewGroupSettings()">View group settings</a></li>\n        <li><a ng-click="viewMembers()">View members</a></li>\n    </ul>\n</span>\n')
    }
    ]),
    b.module("components/dropdown/labelListItem.tpl.html", []).run(["$templateCache", function(a) {
        a.put("components/dropdown/labelListItem.tpl.html", "<div>{{ item.label }}</div>")
    }
    ]),
    b.module("components/dropdown/separatorListItem.tpl.html", []).run(["$templateCache", function(a) {
        a.put("components/dropdown/separatorListItem.tpl.html", '<hr class="separator full_width">')
    }
    ]),
    b.module("components/groupInvtStatusDialog/templates/groupInvtStatusDialog.tpl.html", []).run(["$templateCache", function(a) {
        a.put("components/groupInvtStatusDialog/templates/groupInvtStatusDialog.tpl.html", '<div class="invt-status-modal">\n    <div class="modal-body">\n        <b>Invitation to your teammates</b>\n        <br/>\n        <br/>\n\n        <p ng-if="inviteSuccessEmails.length==1">Your invitation has been sent to <b>{{inviteSuccessEmails[0].invitee_global_profile.email}}</b>.</p>\n        <p ng-if="inviteSuccessEmails.length==2">Your invitation has been sent to <b>{{inviteSuccessEmails[0].invitee_global_profile.email}}</b>, <b>{{inviteSuccessEmails[1].invitee_global_profile.email}}</b>.</p>\n        <p ng-if="inviteSuccessEmails.length>2">Your invitation has been sent to <b>{{inviteSuccessEmails[0].invitee_global_profile.email}}</b>, <b>{{inviteSuccessEmails[1].invitee_global_profile.email}}</b> and <a href="javascript:void(0)" cnv-popover cnv-popover-ctrl="successEmailsTooltip.text">{{inviteSuccessEmails.length-2}}</a> <b><span ng-if="inviteSuccessEmails.length>3">others</span><span ng-if="inviteSuccessEmails.length==3">other</span></b>.</p>\n\n        <br/>\n\n        <p ng-if="inviteFailEmails[0].error_message && inviteFailEmails.length==1" ng-bind-html="inviteFailEmails[0].error_message"></p>\n        <p ng-if="!inviteFailEmails[0].error_message && inviteFailEmails.length==1"><b>{{inviteFailEmails[0].invitee_email}}</b> couldn\'t be invited.</p>\n        <p ng-if="inviteFailEmails.length==2"><b>{{inviteFailEmails[0].invitee_email}}</b>, <b>{{inviteFailEmails[1].invitee_email}}</b> couldn\'t be invited.</p>\n        <p ng-if="inviteFailEmails.length>2"><b>{{inviteFailEmails[0].invitee_email}}</b>, <b>{{inviteFailEmails[1].invitee_email}}</b> and <a href="javascript:void(0)" cnv-popover cnv-popover-ctrl="FailEmailsTooltip.text">{{inviteFailEmails.length-2}}</a> <b><span ng-if="inviteFailEmails.length>3">others</span><span ng-if="inviteFailEmails.length==3">other</span></b> couldn\'t be invited.</p>\n        <div>\n            <button type="button" class="btn btn-primary" ng-click="ok()" autofocus>{{okBtnLabel}}</button>\n        </div>\n    </div>\n</div>')
    }
    ]),
    b.module("feed/components/cnvFeedInviteWidget/cnvFeedInviteWidget.tpl.html", []).run(["$templateCache", function(a) {
        a.put("feed/components/cnvFeedInviteWidget/cnvFeedInviteWidget.tpl.html", '<div class="row no-margin feed-invite-widget" ng-if="!isGuest">\n	<!-- <span ng-controller="ImportMacContactsCtrl"><span> -->\n\n	<button class="btn btn-primary" ng-click="inviteContacts()">Invite your teammates</button>\n	\n	<div class="separator">or</div>\n\n	<div class="vanity-help-txt">\n		<span>Get your company\'s exclusive invite link. Your teammates can use this link to sign up to Convo.</span>\n	</div>\n\n	<button class="btn btn-default" ng-click="onShareableLinkClick()">Invite via email or chat</button>\n	\n	<!-- <span class="heading">Find your teammates</span>\n	<span>See teammates who aren\'t on the<br><span ng-bind="networkPrimaryDomain"></span> network yet. Or <a href="javascript:void(0);">invite by email</a> instead.</span>\n\n	<div class="widget-body-wrapper">\n		<span ng-controller="ImportMacContactsCtrl" ng-if="config.IS_NATIVE">\n			<span class="cont" ng-click="findMacContacts()">\n				<i class="img mac-contacts"></i>\n				<div>MAC</div>\n			</span>\n		</span>\n		<span ng-controller=" ImportGoogleContactsCtrl">\n			<span class="cont" ng-click="findGoogleContacts()">\n				<i class="img google-contacts"></i>\n				<div>GOOGLE</div>\n			</span>\n		</span>\n		<span ng-controller="ImportCSVContactsCtrl" class="invite-CSV-contacts">\n			<input name=\'file\' class=\'file-input\' style="display: none;" onclick="this.value=null;" onchange="angular.element(this).scope().CSVFileInputChange(this)" type=\'file\'></input>\n			<span class="cont" ng-click="findCSVFileContacts($event)">\n				<i class="img csv-contacts"></i>\n				<div>CSV FILE</div>\n			</span>\n		</span>\n	</div>\n\n	<div class="widget-footer-wrapper">\n		<span>\n			Generate a special invite link for<br><span ng-bind="networkPrimaryDomain"></span>. <a href="javascript:void(0);">Get link</a>.\n		</span>\n	</div> -->\n</div>\n')
    }
    ]),
    b.module("feed/components/cnvNoteSnippetPlaybackBanner/cnvNoteSnippetPlaybackBanner.tpl.html", []).run(["$templateCache", function(a) {
        a.put("feed/components/cnvNoteSnippetPlaybackBanner/cnvNoteSnippetPlaybackBanner.tpl.html", '<div class="note-snippet-playback-banner-wrapper" bindonce>\n	<div class="banner-container">\n		<i class="cnv-icons-10 icons2_Close-darkgray" ng-click="dismissBanner()"></i>\n		<a href="javascript:void(0)" class="back-btn" ng-click="backToComments()">Back to comments</a>\n		<div class="dp-cont" bo-if="commentData">\n			<a bo-href="commentData.from_user | idToFilterUrl: \'USER\'">\n				<cnv-user-profile-image user-id="commentData.from_user" source="\'Feed\'"></cnv-user-profile-image>\n			</a>\n		</div>\n		<div class="comment-body" bo-show="commentData">\n		</div>\n	</div>\n</div>')
    }
    ]),
    b.module("feed/renderers/cnvFeedItem.tpl.html", []).run(["$templateCache", function(a) {
        a.put("feed/renderers/cnvFeedItem.tpl.html", '<div bo-if="itemData.app_instance_id == 6 || itemData.app_instance_id == 4" class="feed-item-container row">\n    \n    <cnv-note-snippet-playback-banner></cnv-note-snippet-playback-banner>\n    \n    <div class="dp-container" bo-class="{edited: itemData.created_by !== itemData.updated_by, normal: itemData.created_by == itemData.updated_by, \'dim-feed-item\': itemData.action == \'DOUBLE_DELETED\' || itemData.deleted == \'2\'}">\n        <a class="dp-wrapper created-by" bo-href="itemData.created_by | idToFilterUrl:\'USER\'" cnv-popover cnv-popover-ctrl="itemData.created_by | idToName" cnv-popover-display-as-text="true">\n            <!-- <img bo-src="itemData.created_by | userIdToImgUrlForFeed" /> -->\n\n            <cnv-user-profile-image user-id="itemData.created_by" size="\'184\'" source="\'Feed\'"></cnv-user-profile-image>\n        </a>\n        <a class="dp-wrapper edited-by" bo-if="itemData.created_by !== itemData.updated_by" bo-href="itemData.updated_by | idToFilterUrl:\'USER\'" cnv-popover cnv-popover-ctrl="itemData.updated_by | idToName" cnv-popover-display-as-text="true">\n            <cnv-user-profile-image user-id="itemData.updated_by" source="\'Feed\'"></cnv-user-profile-image>\n            <!-- <img bo-src="itemData.updated_by | userIdToImgUrlForFeed" /> -->\n        </a>\n    </div>\n    <div class="feed-item-content-right">\n\n        <div class="action-items-wrapper">\n            <i bo-if="itemData.starred == 1" class="cnv-icons-20 icons_Star-blue" bo-class="{\'dim-feed-item\': itemData.action == \'DOUBLE_DELETED\' || itemData.deleted == \'2\'}"></i>\n            <i bo-if="itemData.muted == 1" class="cnv-icons-20 icons2_Mute-lightgray" bo-class="{\'dim-feed-item\': itemData.action == \'DOUBLE_DELETED\' || itemData.deleted == \'2\'}"></i>\n            <!-- <a bo-href="itemData.app_instance_id | getResourceLinkUrl: [{ type: itemData.resource_type, uid: itemData.resource_id, title: itemData.hierarchy[0].title }]: null: itemData.hierarchy[0].title">\n                <i bo-if="itemData.app_instance_id != \'4\'" class="cnv-icons-20 icons_Post-lightgray"></i>\n                <i bo-if="itemData.app_instance_id == \'4\'" class="cnv-icons-20 icons2_Expand-lightgray"></i>\n            </a> -->\n            <cnv-dropdowns bo-if="dropdownCtrl.options.length > 0" cnv-dropdown-ctrl="dropdownCtrl" condition=\'permissionsDropdownIconConditions\'></cnv-dropdowns>\n        </div>\n\n        <div class="shared-with-container" bo-class="{\'dim-feed-item\': itemData.action == \'DOUBLE_DELETED\' || itemData.deleted == \'2\'}">\n            <a bo-href="itemData.created_by | idToFilterUrl:\'USER\'"\n                   bo-class="{\'in-accessible-user\': isUserOrGroupNotAccessible({type: \'USER\', published_to: itemData.created_by})}"\n                   bo-bind="itemData.created_by | idToName | limitText:80"></a>\n            <br>\n            <snap class="grey-txt">To</snap>\n            <span bo-repeat="shareInfo in itemData.sharing_info | limitTo:2" bo-repeat-render-id="feedItemSharingInfo">\n                <!--<a bo-if="shareInfo.published_to != user_info.user_id" bo-class="{\'in-accessible\': isUserOrGroupNotAccessible(shareInfo)}" bo-href="shareInfo.published_to | idToFilterUrl:shareInfo.type" bo-bind="(shareInfo.published_to | idToName | limitText:80)"></a>-->\n                <a bo-if="shareInfo.published_to != user_info.user_id"\n                      bo-href="(shareInfo.type === \'GROUP\' && isUserOrGroupNotAccessible(shareInfo)) && !isAdminMode ? \'javascript:void\' : (shareInfo.published_to | idToFilterUrl:shareInfo.type) "\n                      bo-class="{\'in-accessible\': (shareInfo.type === \'GROUP\' && isUserOrGroupNotAccessible(shareInfo)) && !isAdminMode, \'in-accessible-user\': (isAdminMode && isUserOrGroupNotAccessible(shareInfo)) || (shareInfo.type === \'USER\' && isUserOrGroupNotAccessible(shareInfo))}"\n                      bo-bind="(shareInfo.published_to | idToName | limitText:80)"></a>\n                <a bo-if="shareInfo.published_to == user_info.user_id" bo-href="shareInfo.published_to | idToFilterUrl:shareInfo.type">Me</a>\n                <span bo-if="(!$last | iif:\', \')" style="color: #959595">,</span>\n            </span>\n            <span bo-if="itemData.sharing_info.length > 2" class="more-sharing-info"><span style="color: #959595">&nbsp;, </span>\n            <a href="javascript:void(0)" cnv-popover cnv-popover-ctrl="itemData.sharing_info | sharingInfoTooltipText:2" bo-bind="\'+\' + (itemData.sharing_info.length - 2) + \' more\'" ng-click="openSharedInfoModal()"></a>\n            </span>\n            <span class="dot">&nbsp;&nbsp;&#8226;&nbsp;&nbsp;</span>\n            <ul bo-class="{\'highlight\': itemData._actions.updatedByOtherUser}">\n                <li class="nobullet" bo-if="itemData.created_date != itemData.last_modified_date">\n                        <!-- <a class="meta" bo-if="itemData.created_by != itemData.updated_by" bo-href="itemData.updated_by | idToFilterUrl:\'USER\'" bo-bind="itemData.updated_by | idToName | limitText:80"></a> -->\n                    <a class="meta" bo-href="itemData.app_instance_id | getResourceLinkUrl: [{ type: itemData.resource_type, uid: itemData.resource_id, title: itemData.hierarchy[0].title}]: null: itemData.hierarchy[0].title"><span class="meta" bo-bind="\' Edited&nbsp;\'" style="margin-left: 0px !important"></span></a>\n                </li>\n                <li>\n                    <a class="meta open-in-detail-view" cnv-popover cnv-popover-ctrl="itemData.last_modified_date | localize" bo-date="itemData.last_modified_date | dateAgo:server_now_timestamp : true" bo-href="itemData.app_instance_id | getResourceLinkUrl: [{ type: itemData.resource_type, uid: itemData.resource_id, title: itemData.hierarchy[0].title}]: null: itemData.hierarchy[0].title">\n                    </a>\n                </li>\n            </ul>\n            <!-- <span class="grey-txt"><font color="#959595">&nbsp;&middot;&nbsp;</font></span> -->\n            <!-- <ul> -->\n\n            <!-- <li class="nobullet" bo-class="{\'bullet-before\':(itemData.data | hasFiles) == true}">\n                        <a class="meta" bo-bind="itemData.data | getFeedItemFilesCount" bo-href="itemData.app_instance_id | getResourceLinkUrl: [{ type: itemData.resource_type, uid: itemData.resource_id, title: itemData.hierarchy[0].title}]: null: itemData.hierarchy[0].title"></a>\n                    </li> -->\n            <!-- <li class="nobullet" bo-class="{\'bullet-before\': (itemData | hasTags) == true}">\n                    <span class="meta" bo-if="(itemData.tags.split(\',\')).length === 1" bo-bind=" itemData.tags.split(\',\')[0] + \' \'"></span>\n                    <span class="meta" bo-if="(itemData.tags.split(\',\')).length > 1"  cnv-popover cnv-popover-ctrl="itemData.tags | break" bo-bind=" itemData.tags.split(\',\').length + \' tags\'"></span>\n                </li>\n            </ul> -->\n\n            <!--<img src=\'./assets/img/feed/expand_list.png\' class="infeedItembtn" ng-click="infeedbuttonclick()"/>\n            <cnv-option-list cnv-clicked-outside-this="closepanel()" style-class="infeedItemList" items="infeed_menu_items" show=Show_infeed_menu source="infeedItembtn" returnfun="actionOnFeed(item,itemData)"  item-template="components/cnvOptionListItem.tpl.html"></cnv-option-list>-->\n        </div>\n\n        <cnv-app-feed-item></cnv-app-feed-item>\n\n        <div class="feed-info-container" bo-class="{\'dim-feed-item\': itemData.action == \'DOUBLE_DELETED\' || itemData.deleted == \'2\'}">\n            <ul>\n                \n                \n                <li>\n                    <a href="javascript:void(0);" bo-class="{\'disabled meta\': (!relatedPermissions.canComment && (itemData.conversations_count > 0 || (itemData.like_info.likes_count + itemData.like_info.sub_res_like_count > 0)))}" ng-click="onCommentButtonClick()">Comment</a>\n                    <!-- <span class="badge" bo-if="itemData.conversations_count > 0" bo-bind="itemData.conversations_count"></span> -->\n                </li>\n                <span class="dot">&nbsp;&nbsp;&#8226;&nbsp;&nbsp;</span>\n                <li class="nobullet">\n                    <!-- <span><font color="#959595">&nbsp;&middot;&nbsp;</font></span> -->\n                    <span cnv-like-button like-info="itemData.like_info" like-handler="onLikeClick(action)"></span>\n                </li>\n\n                <li class="pull-right tags nobullet dropdown" bo-if="itemData.tags.trim().length" dropdown>\n                    <a bo-if="itemData.tags.split(\',\')[0]" bo-href="itemData.tags.split(\',\')[0] | hashtagToFilterLink" bo-bind="itemData.tags.split(\',\')[0] | labelToHashtag" bo-class="{\'add-comma\': (itemData.tags.trim().split(\',\') | listCount) > 1 }"></a>\n                    <!-- <span bo-if="itemData.tags.split(\',\').length > 1">-</span> -->\n                    <a class="dropdown-toggle" is-open="isopen" dropdown-toggle bo-if="(itemData.tags.trim().split(\',\') | listCount) > 1" bo-bind="\'+\' + ((itemData.tags.trim().split(\',\') | listCount) - 1) + \' more\'"></a>\n                    <ul class="dropdown-menu">\n                        <a bo-repeat="tag in itemData.tags.trim().split(\',\') | shift track by $index" bo-href="tag | hashtagToFilterLink">\n                            <li bo-if="tag" class="nobullet" bo-bind="tag | labelToHashtag"></li>\n                        </a>\n                    </ul>\n                </li>\n            </ul>\n        </div>\n\n        <div class="comments-panel-wrapper tmp-hide" bo-show="itemData.conversations_count > 0 || (itemData.like_info.likes_count + itemData.like_info.sub_res_like_count > 0) || showCommentsPanel" bo-class="{\'dim-feed-item\': itemData.action == \'DOUBLE_DELETED\' || itemData.deleted == \'2\'}">\n\n            <div class="likes-count-container" bo-if="itemData.like_info.likes_count + itemData.like_info.sub_res_like_count > 0">\n                <i class="cnv-icons-20 icons2_Like-darkgray" style="opacity: 0.5"></i>\n                <a bo-href="itemData.like_info.liked_by | idToFilterUrl:\'USER\'" bo-bind="itemData.like_info.liked_by | idToName"></a>\n                <span bo-if="itemData.like_info.likes_count + itemData.like_info.sub_res_like_count > 1">, </span>\n                <a href="javascript:void(0)" bo-if="itemData.like_info.likes_count + itemData.like_info.sub_res_like_count > 1" bo-bind="\'+\' + (itemData.like_info.likes_count + itemData.like_info.sub_res_like_count - 1) + \' more\'" ng-click="openLikeInfoModal()" cnv-popover cnv-popover-ctrl="likeInfoTooltipText"></a>\n            </div>\n\n\n            <!-- <div bo-class="{\'expand-bar\': itemData._actions.firstLike, \'highlight-bar\': itemData._actions.liked}" class="likes-comments-count-container" bo-show="itemData.conversations_count > 0 || itemData.like_info.likes_count > 0">\n                <div class="pull-left">\n                    <i class="cnv-icons-20 icons_Comments-lightgray"></i>\n                    <a bo-if="itemData.conversations_count > 0" bo-bind="itemData.conversations_count + \' comments\'"></a>\n                    <span bo-if="itemData.conversations_count == 0">Be the first one to comment</span>\n                </div>\n                <div class="pull-right" bo-if="itemData.like_info.likes_count + itemData.like_info.sub_res_like_count > 0">\n                    <i class="cnv-icons-20 icons2_Like-lightgray"></i>\n                    <a bo-href="itemData.like_info.liked_by | idToFilterUrl:\'USER\'">\n                        <cnv-user-profile-image user-id="itemData.like_info.liked_by" size="32" source="\'Feed\'" cnv-popover cnv-popover-ctrl="itemData.like_info.liked_by | idToName"></cnv-user-profile-image>\n                    </a>\n\n                    <a class="badge" bo-show="itemData.like_info.likes_count + itemData.like_info.sub_res_like_count > 1" bo-bind="\'+\' + (itemData.like_info.likes_count + itemData.like_info.sub_res_like_count - 1)" ng-click="openLikeInfoModal()" cnv-popover cnv-popover-ctrl="likeInfoTooltipText"></a>\n                </div>\n            </div>\n -->\n        <!-- <div class="likes-container" bo-if="itemData.like_info.likes_count + itemData.like_info.sub_res_like_count > 0">\n            <i class="cnv-icons-20 icons2_Like-lightgray"></i>\n            <a bo-href="itemData.like_info.liked_by | idToFilterUrl:\'USER\'">\n                <cnv-user-profile-image user-id="itemData.like_info.liked_by" size="32" source="\'Feed\'"></cnv-user-profile-image>\n            </a>\n\n            <span class="badge" bo-if="itemData.like_info.likes_count + itemData.like_info.sub_res_like_count > 1" bo-bind="\'+\' + (itemData.like_info.likes_count + itemData.like_info.sub_res_like_count - 1)" ng-click="openLikeInfoModal()"></span>\n        </div> -->\n\n        <!--         <hr bo-show="itemData.like_info.likes_count < 1 && itemData.conversations_count < 4 && itemData.conversations_count != 0" style="margin-top: 8px;" /> -->\n\n            <!-- feed-id="itemData.feed_id" resource-id="itemData.resource_id" app-instance-id="itemData.app_instance_id" available-comments="itemData.conversations" total-comments="itemData.conversations_count" server-now-timestamp="server_now_timestamp" is-text-search="feed_data.isTextSearch" highlight-words="search_words" resource-type="itemData.resource_type" feed-item="itemData" post-title="itemData.hierarchy[0].title" -->\n            <div cnv-comments-panel></div>\n            <div bo-class="{\'closed-top-border\': (commentEditorCtrl.permissions.block && itemData.conversations_count)}">\n                <cnv-comment-editor tabindex="1" enable-emoji="true"></cnv-comment-editor>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div bo-if="itemData.app_instance_id == 21 || itemData.app_instance_id == 18 || itemData.app_instance_id == 9" class="feed-item-container row" bo-class="{\'dim-feed-item\': itemData.action == \'DOUBLE_DELETED\' || itemData.deleted == \'2\'}">\n\n    <div bo-if="itemData.app_instance_id == 21 && itemData.data.chatType != \'chat\' && itemData.data.chatType != \'groupchat\'" class="dp-container edited">\n        <a class="dp-wrapper created-by" bo-href="itemData.sharing_info[0].published_to | idToFilterUrl:\'USER\'" cnv-popover cnv-popover-ctrl="itemData.sharing_info[0].published_to | idToName" cnv-popover-display-as-text="true">\n            <cnv-user-profile-image user-id="itemData.sharing_info[0].published_to" source="\'Feed\'"></cnv-user-profile-image>\n        </a>\n\n        <a class="dp-wrapper edited-by" bo-href="itemData.sharing_info[1].published_to | idToFilterUrl:\'USER\'" cnv-popover cnv-popover-ctrl="itemData.sharing_info[1].published_to | idToName" cnv-popover-display-as-text="true">\n            <cnv-user-profile-image user-id="itemData.sharing_info[1].published_to" source="\'Feed\'"></cnv-user-profile-image>\n        </a>\n    </div>\n\n    <div bo-if="itemData.app_instance_id == 21 && itemData.data.chatType == \'chat\'" class="dp-container">\n        <a class="dp-wrapper created-by" bo-href="itemData.sharing_info[1].published_to | idToFilterUrl:\'USER\'" cnv-popover cnv-popover-ctrl="itemData.sharing_info[1].published_to | idToName" cnv-popover-display-as-text="true">\n            <cnv-user-profile-image user-id="itemData.sharing_info[1].published_to" source="\'Feed\'"></cnv-user-profile-image>\n        </a>\n    </div>\n\n    <div bo-if="itemData.app_instance_id == 21 && itemData.data.chatType == \'groupchat\'" class="dp-container chat">\n        <cnv-group-chat-avatar participants="itemData.sharing_info" source="\'Feed\'" bindonce style="width: 60px;height: 60px;margin-left: 5%;font-size: 9px; display: inline-block; ">\n            <div class="topList" style="display: flex;" bo-if="!emptyChatUser && userArr.length > 1" bo-style="{\'padding-left\': userArr.length == 3 ? \'5px\' : 0}">\n                <a class="dp-wrapper" bo-href="userArr[0].userId | idToFilterUrl:\'USER\'" cnv-popover cnv-popover-ctrl="userArr[0].userId | idToName" cnv-popover-display-as-text="true">\n                    <cnv-user-profile-image user-id="userArr[0].userId" size="22" width="20" height="20" bo-class="{\'showing3GroupUsersTop\' : show3images,\'showing2GroupUsersTop\' : show2images}" profileType="userArr[0].profileImageType" profileVersion="userArr[0].profileImageVersion"></cnv-user-profile-image>\n                </a>\n\n                <a class="dp-wrapper" bo-href="userArr[3].userId | idToFilterUrl:\'USER\'" cnv-popover cnv-popover-ctrl="userArr[3].userId | idToName" cnv-popover-display-as-text="true">\n                    <cnv-user-profile-image user-id="userArr[3].userId" size="22" width="20" height="20" bo-show="!show2images && !show3images" profileType="userArr[3].profileImageType" profileVersion="userArr[3].profileImageVersion"></cnv-user-profile-image>\n                </a>\n\n            </div>\n            <div class="botList" style="display: flex" bo-if="!emptyChatUser && userArr.length >1" bo-class="{\'showing3GroupUsersBot\' : show3images}">\n                <a class="dp-wrapper" bo-href="userArr[2].userId | idToFilterUrl:\'USER\'" cnv-popover cnv-popover-ctrl="userArr[2].userId | idToName" cnv-popover-display-as-text="true">\n                    <cnv-user-profile-image user-id="userArr[2].userId" size="22" width="20" height="20" bo-show="!show2images" profileType="userArr[2].profileImageType" profileVersion="userArr[2].profileImageVersion"></cnv-user-profile-image>\n                </a>\n\n                <a class="dp-wrapper" bo-href="userArr[1].userId | idToFilterUrl:\'USER\'" cnv-popover cnv-popover-ctrl="userArr[1].userId | idToName" cnv-popover-display-as-text="true">\n                    <cnv-user-profile-image user-id="userArr[1].userId" size="22" width="20" height="20" bo-class="{showing2GroupUsersBot : show2images }" bo-show="userArr.length <= 4" profileType="userArr[1].profileImageType" profileVersion="userArr[1].profileImageVersion"></cnv-user-profile-image>\n                </a>\n                <div class="groupAvatarCounter" bo-show="showCounter" bo-bind="\'+\'+(userArr.length-3)"></div>\n            </div>\n            <div bo-if="userArr.length == 1" style="font-size: 15px">\n                <a class="dp-wrapper" bo-href="userArr[0].userId | idToFilterUrl:\'USER\'" cnv-popover cnv-popover-ctrl="userArr[0].userId | idToName" cnv-popover-display-as-text="true">\n                    <cnv-user-profile-image user-id="userArr[0].userId" size="48" width="40" height="40" profileType="userArr[0].profileImageType" profileVersion="userArr[0].profileImageVersion"></cnv-user-profile-image>\n                </a>\n            </div>\n            <div bo-if="emptyChatUser" style="font-size: 15px">\n                <a class="dp-wrapper" bo-href="emptyChatUser.userId | idToFilterUrl:\'USER\'" cnv-popover cnv-popover-ctrl="emptyChatUser.userId | idToName" cnv-popover-display-as-text="true">\n                    <cnv-user-profile-image user-id="emptyChatUser.userId" size="48" width="40" height="40" profileType="emptyChatUser.profileImageType" profileVersion="emptyChatUser.profileImageVersion"></cnv-user-profile-image>\n                </a>\n            </div>\n        </cnv-group-chat-avatar>\n    </div>\n\n    <div bo-if="itemData.app_instance_id == 18 || itemData.app_instance_id == 9" class="dp-container">\n        <a class="dp-wrapper" bo-href="itemData.created_by | idToFilterUrl:\'USER\'" cnv-popover cnv-popover-ctrl="itemData.created_by | idToName" cnv-popover-display-as-text="true">\n            <cnv-user-profile-image user-id="itemData.created_by" source="\'Feed\'"></cnv-user-profile-image>\n        </a>\n    </div>\n\n    <div class="feed-item-content-right">\n        <div class="shared-with-container">\n            <a bo-href="itemData.created_by | idToFilterUrl:\'USER\'"\n                  bo-bind="itemData.created_by | idToName | limitText:80"\n                  bo-class="{\'in-accessible-user\': isUserOrGroupNotAccessible({type: \'USER\', published_to: itemData.created_by})}"></a>\n            <br>\n            <snap class="grey-txt">To</snap>\n            <span bo-repeat="shareInfo in itemData.sharing_info | limitTo:2" bo-repeat-render-id="feedItemSharingInfo">\n                <a bo-if="shareInfo.published_to != user_info.user_id"\n                      bo-href="(shareInfo.type === \'GROUP\' && isUserOrGroupNotAccessible(shareInfo)) ? \'javascript:void\' : (shareInfo.published_to | idToFilterUrl:shareInfo.type) "\n                      bo-class="{\'in-accessible\': (shareInfo.type === \'GROUP\' && isUserOrGroupNotAccessible(shareInfo)), \'in-accessible-user\': (shareInfo.type === \'USER\' && isUserOrGroupNotAccessible(shareInfo))}"\n                      bo-bind="(shareInfo.published_to | idToName | limitText:80)"></a>\n                <a bo-if="shareInfo.published_to == user_info.user_id" bo-href="shareInfo.published_to | idToFilterUrl:shareInfo.type">Me</a>\n                <span bo-if="!$last" style="color: #959595">,</span>\n            </span>\n            <span bo-if="itemData.sharing_info.length > 2" class="more-sharing-info"><span style="color: #959595">&nbsp;, </span>\n            <a bo-href cnv-popover cnv-popover-ctrl="itemData.sharing_info | sharingInfoTooltipText:2" bo-bind="\'+\' + (itemData.sharing_info.length - 2)"></a>\n            </span>\n        </div>\n\n        <div bo-if="itemData.app_instance_id == 21">\n            <a href="javascript:void(0)" ng-click="openChatDetails()"><span bo-if="itemData.data.chatType == \'groupchat\'">Group </span>Chat view details</a>\n        </div>\n\n        <div class="note desc" bo-html="itemData.app_instance_id == 18 || itemData.app_instance_id == 9 ? (feed_data.isTextSearch ? itemData.search_fragment : itemData.details) : (itemData.app_instance_id == 21 && feed_data.isTextSearch ? itemData.search_fragment : \'\')"></div>\n\n        <span class="meta" cnv-popover cnv-popover-ctrl="itemData.last_modified_date | localize" bo-date="itemData.last_modified_date | dateAgo:server_now_timestamp"></span>\n    </div>\n\n</div>\n\n<hr class="feed-divider" ng-hide="!hideFeedEndPlaceholder && $last" />\n');
    }
    ]),
    b.module("feed/renderers/comment/cnvComment.tpl.html", []).run(["$templateCache", function(a) {
        a.put("feed/renderers/comment/cnvComment.tpl.html", '<div class="comment {{::commentData.uid}}">\n\n    <div class="source-comment-pointer"></div>\n    <div class="replied-comment-pointer"></div>\n\n    <div class="comment_highlighter"></div>\n    <div class="_container">\n        <span class="pic_container">\n            <a bo-href="commentData.from_user | idToFilterUrl:\'USER\'">\n                <cnv-user-profile-image user-id="commentData.from_user" source="\'Feed\'" size="\'81\'"></cnv-user-profile-image>\n            </a>\n        </span>\n\n        <cnv-dropdowns class="comment-drop-down" bo-if="!commentData.is_posting && !commentData.posting_failed && !editCommentEditorCtrl" cnv-dropdown-ctrl="cmmtDropdownCtrl"></cnv-dropdowns>\n\n        <div class="comment_body" bo-if="!editCommentEditorCtrl">\n            <div bo-if="commentData.resource_link.resource_path.hierarchy.length > 1" class="img-snippet">\n                <i bo-if="commentData.resource_link.resource_path.hierarchy[1].title" class="ext_holder cnv-small-file-ico" bo-class="commentData.resource_link.resource_path.hierarchy[1].title | getFileExtension" bo-bind="commentData.resource_link.resource_path.hierarchy[1].title | getFileExtension"></i>\n                <a class="snippet-file-name" bo-href="commentData | getCommentUrl" bo-bind="commentData.resource_link.resource_path.hierarchy[1].title | limitTo: 72"></a>\n            </div>\n\n            <div class="comment_txt">\n                <span bo-if="commentData.resource_link.collaboration_info.replied_to_user_id" class="reply-arrow"></span>\n                <div bo-show="!showMore" class="comment-inner comment-inner-less less" class="text"></div>\n                <div bo-show="showMore" class="comment-inner comment-inner-full full" class="text"></div>\n            </div>\n\n            <a class="comment-snippet-attachment" bo-if="commentData.resource_link.collaboration_info.snippet_data.data.text && !commentData.resource_link.collaboration_info.snippet_data.data.source && commentData.resource_link.resource_path.hierarchy.length < 2 && appInstanceId != 4"\n               bo-href="commentData | getCommentUrl" ng-click="selectText(commentData)">\n                <div class="snippet-wrapper note-file-snippet">\n                    <div class="textSnippet">\n                        <span bo-bind="commentData.resource_link.collaboration_info.snippet_data.data.text | limitToWithEllipsis: true : 100"></span>\n                    </div>\n                </div>\n            </a>\n\n            <a bo-if="commentData.resource_link.collaboration_info.snippet_data.data.text && !commentData.resource_link.collaboration_info.snippet_data.data.source && (commentData.resource_link.resource_path.hierarchy.length > 1 || appInstanceId == 4)"\n               bo-href="commentData | getCommentUrl" bo-href="commentData | getCommentUrl"\n               ng-click="selectText(commentData)">\n                <div class="snippet-wrapper note-file-snippet">\n                    <div class="textSnippet">\n                        <span bo-bind="commentData.resource_link.collaboration_info.snippet_data.data.text | limitToWithEllipsis: true : 100"></span>\n                    </div>\n                </div>\n            </a>\n\n            <a bo-if="commentData.resource_link.collaboration_info.snippet_data.data.text && commentData.resource_link.collaboration_info.snippet_data.data.source == \'comment\'"\n               ng-click="commentReplyPlayback()">\n                <div class="snippet-wrapper comment-snippet">\n                    <div class="textSnippet">\n                        <span bo-bind="commentData.resource_link.collaboration_info.snippet_data.data.text | limitToWithEllipsis: true : 100"></span>\n                    </div>\n                </div>\n            </a>\n\n            <!-- && !commentData.is_posting -->\n            <div bo-if="commentData.resource_link.collaboration_info.snippet_data.data.fileName" class="img-snippet-wrapper">\n                <a bo-if="commentData.resource_link.collaboration_info.snippet_data.data.fileName" bo-href="commentData | getCommentUrl" ng-click="$emit(\'drawSnippetOnCanvas\', commentData.resource_link.collaboration_info.snippet_data.data, commentData.uid)">\n                    <img bo-src="loadAndDisplayImage()">\n                </a>\n            </div>\n\n            <div bo-if="commentData.is_posting && commentData.resource_link.collaboration_info.snippet_data.fileViewerTextAnnotation" class="snippet-wrapper note-file-snippet" bo-style="{\'max-width\': commentData.from_user == thisUserInfo.user_id ? \'375px\' : \'auto\'}">\n                <div class="textSnippet">\n                    <a bo-bind="commentData.resource_link.collaboration_info.snippet_data.snippetData.data.text | limitToWithEllipsis: true : 100"></a>\n                </div>\n            </div>\n\n            <div bo-if="commentData.files && commentData.files.length" bo-class="{\'ng-hide\': hideAttachments}" class="comment-attachments" cnv-popover cnv-popover-ctrl="commentData.files[0].name" bindonce>\n                <a bo-href="commentData | getCommentAttachmentUrl:commentData.files[0].file_id:commentData.files[0].file_format.toLowerCase() : commentData.files[0].name" class="comment-attachment-navigate">\n                    <span class="attachment-cont">\n                        <span bo-if="commentData.files[0].type == \'gif\'" class="cnv-spinner ng-hide"></span>\n                        <img bo-if="!commentData.files[0].preLocalData && commentData.files[0].thumbnail_name" class="comment-attachment" src="{{loadAttachment && loadAttachment(commentData.files[0])}}" ng-style="attachmentStyles"/>\n\n                        <img bo-if="commentData.files[0].preLocalData && !commentData.files[0].isDefaultThumbnail" bo-src="commentData.files[0].preLocalData" ng-style="attachmentStyles"/>\n\n                        <span class="icon-cont" bo-if="!commentData.files[0].thumbnail_name || commentData.files[0].isDefaultThumbnail">\n                            <span class="cnv-icons-36 fileplainlarge-darkgray file-icon"></span>\n                        </span>\n\n                        <div class=\'attachment-play-overlay videoHoverIcon\' bo-if="commentData.files[0].file_format==\'VIDEO\' && commentData.files[0].thumbnail_name"></div>\n\n                        <span class="file-info" bo-if="commentData.files[0].file_format == \'DOC\' || commentData.files[0].file_format == \'OTHER\' || commentData.files[0].file_format == \'VIDEO\'">\n                            <i class="ext_holder cnv-small-file-ico" ng-class="commentData.files[0].name | getFileExtension">\n                                <span ng-bind="commentData.files[0].name | getFileExtension"></span>\n                            </i>\n                            <span class="attachment-title">{{::commentData.files[0].name}}</span>\n                        </span>\n                    </span>\n                </a>\n            </div>\n\n            <div class="action_line" bo-show="!commentData.posting_failed">\n                <span class="meta comment_info">\n                    <a class="meta" bo-href="commentData.from_user | idToFilterUrl:\'USER\'" bo-bind="commentData.from_user | getUserName | limitText:80"></a>\n                    <span bo-if="!commentData.is_posting"><font color="#959595">&nbsp;&nbsp;&#8226;&nbsp;&nbsp;</font>\n\n                        <span bo-if="commentData.update_kind == 2">deleted&nbsp;&nbsp;&#8226;</span>\n\n                        <a class="meta" bo-if="commentData.update_kind != 2 && !commentData.resource_link.collaboration_info.snippet_data.data.fileName && !commentData.resource_link.collaboration_info.snippet_data.data.text && commentData.resource_link.resource_path.hierarchy.length < 2" bo-href="appInstanceId | getCommentResourceLinkUrl: [{ type: resourceType, uid: resourceId, title: postTitle}]: commentData"><span bo-bind="commentData.update_timestamp > commentData.creation_timestamp | iif: \'Edited\'"></span></a>\n\n                        <a class="meta" bo-if="commentData.update_kind != 2 && commentData.resource_link.collaboration_info.snippet_data.data.fileName || commentData.resource_link.collaboration_info.snippet_data.data.text || commentData.resource_link.resource_path.hierarchy.length > 1" bo-href="commentData | getCommentUrl"><span bo-bind="commentData.update_timestamp > commentData.creation_timestamp | iif: \'Edited\'"></span></a>\n\n                        <span bo-bind="commentData.update_kind === 3 && commentData.update_timestamp === commentData.creation_timestamp | iif: \'replied\'"></span>\n\n                        <a class="time hover_underline meta" bo-if="!commentData.resource_link.collaboration_info.snippet_data.data.fileName && !commentData.resource_link.collaboration_info.snippet_data.data.text && commentData.resource_link.resource_path.hierarchy.length < 2" cnv-popover cnv-popover-ctrl="commentData.update_timestamp | localize" bo-date="commentData.update_timestamp | dateAgo:server_now_timestamp : true : true" bo-href="appInstanceId | getCommentResourceLinkUrl: [{ type: resourceType, uid: resourceId, title: postTitle}]: commentData"></a>\n\n                        <a class="time hover_underline meta" bo-if="commentData.resource_link.collaboration_info.snippet_data.data.fileName || commentData.resource_link.collaboration_info.snippet_data.data.text || commentData.resource_link.resource_path.hierarchy.length > 1" cnv-popover cnv-popover-ctrl="commentData.update_timestamp | localize" bo-date="commentData.update_timestamp | dateAgo:server_now_timestamp : true : true" bo-href="commentData | getCommentUrl"></a>\n                    </span>\n                </span>\n                <span bo-if="relatedPermissions.canComment && commentData.update_kind != 2">\n                    <span><font color="#959595">&nbsp;&nbsp;&#8226;&nbsp;&nbsp;</font></span>\n                    <span>\n                        <a href="javascript:void(0)" ng-click="$emit(\'commentReplyButtonClick\', {event: $event, from: commentData.from_user, commentId: commentData.uid})" class="reply-btn hover_underline">Reply</a>\n                    </span>\n                </span>\n                <span bo-if="!commentData.is_posting && commentData.update_kind != 2"><font color="#959595">&nbsp;&nbsp;&#8226;&nbsp;&nbsp;</font>\n                    <span cnv-like-button like-info="commentData.like_info" like-handler="onLikeClick(action)" bo-if="commentData.update_kind != 2"></span>\n                    <span class="likes" bo-if="commentData.like_info.likes_count > 0" >\n                        <span><font color="#959595">&nbsp;&nbsp;&#8226;&nbsp;&nbsp;</font></span>\n                        <span class="likes_count" cnv-popover cnv-popover-ctrl="likeInfoTooltipText" ng-click="openLikeInfoModal()">\n                            <i class="cnv-icons-15 icons2_Like-darkgray" style="opacity: 0.5"></i>\n                            <span class="count" bo-bind="commentData.like_info.likes_count"></span>\n                        </span>\n                    </span>\n                </span>\n                <span bo-if="commentData.resource_link.collaboration_info.replied_to_user_id && !currentlyPlayingCommentSnippet" ng-click="commentReplyPlayback()">\n                    <font color="#959595">&nbsp;&nbsp;&#8226;&nbsp;&nbsp;</font>\n                    <span class="reply-btn hover_underline thread-control">View Thread</span>\n                </span>\n                <span bo-if="commentData.resource_link.collaboration_info.replied_to_user_id && currentlyPlayingCommentSnippet" ng-click="$emit(\'Comments:unHideAll\', commentData.uid)">\n                    <font color="#959595">&nbsp;&nbsp;&#8226;&nbsp;&nbsp;</font>\n                    <span class="reply-btn hover_underline thread-control">Hide Thread</span>\n                </span>\n            </div>\n            <div class="action_line" bo-show="commentData.posting_failed">\n                <span class="glyphicon glyphicon-warning-sign color-red-error"></span> Unable to post comment. &nbsp;<a href="javascript:void(0)" ng-click="retryFailedPostComment()">Retry</a>&nbsp;&nbsp;&#8226;&nbsp;&nbsp;<a href="javascript:void(0)" ng-click="discardFailedPostComment()">Delete</a>\n            </div>\n\n        </div>\n\n        <div bo-if="editCommentEditorCtrl" style="margin-left: 50px;">\n            <cnv-comment-editor enable-emoji="true"></cnv-comment-editor>\n        </div>\n\n        <div style="clear: both;"></div>\n    </div>\n\n    <div class="show-all-cont" ng-click="$emit(\'Comments:unHideAll\')">\n        <span class="left"></span>\n        <a href="javascript:void(0)">View all comments</a>\n        <span class="right"></span>\n    </div>\n    <div style="clear: both;"></div>\n    <hr bo-if="!$last" class="separator">\n</div>\n')
    }
    ]),
    b.module("feed/renderers/comment/cnvCommentsPanel.tpl.html", []).run(["$templateCache", function(a) {
        a.put("feed/renderers/comment/cnvCommentsPanel.tpl.html", '<div class="collapse-badge" style="display: none;" bo-show="comments_data.total_comments > LATEST_COMMENTS_ONLY_COUNT && loadedCommentsCount > LATEST_COMMENTS_ONLY_COUNT" ng-click="showLatestCommentsOnly()" bo-style="{\'top\': itemData.like_info.likes_count + itemData.like_info.sub_res_like_count > 0 ? \'-50px\' : \'-10px\', \'right\': itemData.like_info.likes_count + itemData.like_info.sub_res_like_count > 0 ? \'-45px\' : \'-43px\'}">\n    <i class="cnv-icons-12 icons2_Dropdown-darkgray" style="opacity: 0.6"></i>\n</div>\n\n<div class="bar comments_info" bo-if="comments_data.total_comments > LATEST_COMMENTS_ONLY_COUNT || comments_data.comments.length < comments_data.total_comments">\n    <!-- <div class="_container">\n        <div class="comments_count">\n            <i class="cnv-icons-20 icons_Comments-lightgray" ng-click="toggleComments()"></i>\n            \n            \n            <a bo-bind="comments_data.total_comments + \' comments\'" ng-click="loadedCommentsCount < comments_data.total_comments ? loadMoreComments() : showLatestCommentsOnly()">\n            </a>\n            \n            <i bo-show="loadedCommentsCount < comments_data.total_comments" class="cnv-icons-20 icons2_Dropdown-lightgray"></i>\n            \n            <i class="cnv-circle-spinner-small pull-right" bo-show="loadingComments"></i>\n            \n        </div>\n    </div> -->\n    <div class="comments-nav-ctrl">\n        <i class="cnv-icons-20 icons_Comments-darkgray" style="opacity: 0.5"></i>\n        <a ng-click="loadAllComments(); trackExpandComments();" bo-show="loadedCommentsCount <= LATEST_COMMENTS_ONLY_COUNT" href="javascript:void(0)" bo-bind="comments_data.total_comments + \' \' + \' comments\'"></a>\n        <!-- <span bo-show="comments_data.total_comments > LATEST_COMMENTS_ONLY_COUNT && loadedCommentsCount > LATEST_COMMENTS_ONLY_COUNT">&nbsp;&nbsp;&#8226;&nbsp;&nbsp;</span> -->\n        <a ng-click="showLatestCommentsOnly(); trackCollapseComments();" bo-show="loadedCommentsCount > LATEST_COMMENTS_ONLY_COUNT" href="javascript:void(0)">Hide comments</a>\n    </div>\n</div>\n\n<div class="new-comments-badge" ng-click="scrollToBottom(true)">\n    <span>New Comments</span>\n</div>\n\n<div class="expanded-panel-shadow" bo-show="comments_expanded && checkIfCommentsPanelIsScrollable()" style="display: none;"></div>\n\n<div style=\'position:relative;\'>\n    <div class="comments-collection comments-scrollable-panel" bo-class="{ \'expanded\': comments_expanded }">\n        <div cnv-comment ng-repeat="commentData in comments_data.comments | limitTo:-loadedCommentsCount track by commentData.uid" id="{{::commentData.uid}}" class="comment-cont"></div>\n    </div>\n</div>\n\n    <!-- <div class="comments expanded" bo-if="comments_expanded">\n        <div cnv-comment ng-repeat="commentData in comments_data.comments | orderBy:\'creation_timestamp\'" data="commentData" server-now-timestamp="server_now_timestamp" highlight-words="highlight_words" resource-id="resourceId" app-instance-id=\'appInstanceId\' resource-type=\'resourceType\' post-title=\'postTitle\' last="$last" class="comment-cont"></div>\n    </div>\n    <div class="comments collapsed" bo-if="!comments_expanded">\n        <div cnv-comment ng-repeat="commentData in comments_data.comments | orderBy:\'creation_timestamp\' | limitTo:-LATEST_COMMENTS_ONLY_COUNT" data="commentData" server-now-timestamp="server_now_timestamp" highlight-words="highlight_words" resource-id="resourceId" app-instance-id=\'appInstanceId\' resource-type=\'resourceType\' post-title=\'postTitle\' last="$last" class="comment-cont"></div>\n    </div> -->')
    }
    ]),
    b.module("feed/renderers/gallery/cnvFeedVideoPlayerWrapper.tpl.html", []).run(["$templateCache", function(a) {
        a.put("feed/renderers/gallery/cnvFeedVideoPlayerWrapper.tpl.html", '<cnv-video-player \ncnv-video-player-on-file-deleted="onFileDeleted()" \ncnv-video-player-options="playerOptions" \ncnv-video-player-file=\'file\' \n></cnv-video-player>')
    }
    ]),
    b.module("feed/renderers/gallery/cnvNoteGallery.tpl.html", []).run(["$templateCache", function(a) {
        a.put("feed/renderers/gallery/cnvNoteGallery.tpl.html", '<div class="cnv-note-gallery-container">\n	<div class="overlay"></div>\n    <div class="feedGalleryContainer scrollable">\n        <ul class="mainUl">\n            \n        </ul>\n    </div>\n</div>')
    }
    ]),
    b.module("feed/renderers/gallery/thumbnail-with-count.tpl.html", []).run(["$templateCache", function(a) {
        a.put("feed/renderers/gallery/thumbnail-with-count.tpl.html", '<li class="thumb-count" bindonce>\n    <a bo-href="getFileResourceLinkUrl(nextFileToLoad.id)">\n        <span>+{{moreFilesToLoad}} Files</span>\n    </a>\n</li>')
    }
    ]),
    b.module("feed/renderers/gallery/thumbnail-with-lazyload.tpl.html", []).run(["$templateCache", function(a) {
        a.put("feed/renderers/gallery/thumbnail-with-lazyload.tpl.html", '<li bindonce bo-style="{\'width\': file.containerWidth, \'min-width\': file.containerWidth < 180 ? 180 : file.containerWidth}" class="mainLi" id="mainLi{{::file.id}}" ><!-- ng-click="openFile(file.id, file.file_format, file.name)" -->\n	<i bo-if="latestRevisionNumber == file.insert_revision && latestRevisionNumber > 1 && latestFilesCount > 0 && file.showBanner" class="latest-files-badge">{{::latestFilesCount}} new</i>\n    <i bo-if="file.type == \'gif\'" class="gif-badge">GIF</i>\n    <i bo-if="file.type == \'gif\'" class="cnv-spinner light"></i>\n    <a bo-href="getFileResourceLinkUrl(file.id, file.file_format, file.name)" bo-show="file.file_format!=\'VIDEO\'" class="thumb-wrapper">\n    	<!-- <img class="thumbnail-file-icon"  bo-src="file.type | getFileIconByType : FILE_ICONS_SIZE" bo-show="file.file_format != \'IMAGE\' && file.thumbnail_name" /> -->\n        <img bo-if="file.thumbnail_image" id="{{::file.id}}" bo-href="getFileResourceLinkUrl(file.id)" class="lazy" type="{{::file.type}}" data-original="{{::file.thumbnail_image}}" data-gif="{{::file.original_name | getOriginalImagePath : file.noteId}}" bo-style="{\'width\': file.thumbWidth, \'height\': file.thumbHeight}" bo-class="{\'middle-align\': file.height < 250}"/>\n        <i bo-if="file.thumbnail_class" class="{{::file.thumbnail_class}}"></i>\n        \n    </a>\n    <div class=\'feedVideoHolder\'  bo-if="file.file_format==\'VIDEO\'">\n        <div style="position:relative; width:0px; height:0px; left:-1px;">\n            <div class="sizeable" id="sizeable{{::file.id}}">\n                <!-- <cnv-feed-video-player-wrapper></cnv-feed-video-player-wrapper> -->\n            </div>\n        </div>\n        <a class="thumb-wrapper video-thumb-wrapper" bo-href="getFileResourceLinkUrl(file.id, file.file_format, file.name)">\n            <!-- <cnv-video-player cnv-video-player-feed-item-data="itemData" cnv-video-player-file=\'file\' ></cnv-video-player> -->\n            <cnv-video-thumbnail  cnv-video-thumbnail-data-format="FEED" cnv-video-thumbnail-lazy-load="true" cnv-video-thumbnail-lazy-load-id="{{::itemData.feed_id}}" cnv-video-thumbnail-file=\'file\' cnv-video-thumbnail-scrolling-holder="feedGalleryContainer" cnv-video-thumbnail-show-preview="true"></cnv-video-thumbnail>\n\n        </a>\n    </div>\n    <!-- (file.file_format == \'VIDEO\' && file.canPlayVideoType==0) -->\n    <div bo-if="file.file_format == \'DOC\' || file.file_format == \'OTHER\' || file.file_format == \'VIDEO\'"  class="file-detail-tab">\n        <a bo-href="getFileResourceLinkUrl(file.id, file.file_format, file.name)">\n            <i class="ext_holder cnv-small-file-ico" bo-class="file.name | getFileExtension">\n                <span bo-bind="file.name | getFileExtension"></span>\n            </i>\n            <!-- <i class="{{::file.thumbnail_icon_class}}"></i> -->\n            <span class="filename">{{::file.name}}</span>\n        </a>\n    </div>\n</li>')
    }
    ]),
    b.module("feed/renderers/gallery/thumbnail-without-lazyload.tpl.html", []).run(["$templateCache", function(a) {
        a.put("feed/renderers/gallery/thumbnail-without-lazyload.tpl.html", '<li bindonce bo-class="{\'first-item\': index == 0}" bo-style="{\'width\': file.containerWidth, \'min-width\': file.containerWidth < 180 ? 180 : file.containerWidth, \'position\': relative}" ng-click="file.file_format != \'VIDEO\' && openFile(file.id, file.file_format, file.name)" class="mainLi" id="mainLi{{::file.id}}">\n	<i bo-if="latestRevisionNumber == file.insert_revision && latestRevisionNumber > 1 && latestFilesCount > 0 && file.showBanner" class="latest-files-badge">{{::latestFilesCount}} new</i>\n    <i bo-if="file.type == \'gif\'" class="gif-badge">GIF</i>\n    <i bo-if="file.type == \'gif\'" class="cnv-spinner light"></i>\n    <a bo-href="getFileResourceLinkUrl(file.id, file.file_format, file.name)" bo-show="file.file_format!=\'VIDEO\'" class="thumb-wrapper">\n    	<!-- <img class="thumbnail-file-icon"  bo-src="file.type | getFileIconByType : FILE_ICONS_SIZE"  bo-show="file.file_format != \'IMAGE\' && file.thumbnail_name" /> -->\n        <img  bo-if="file.thumbnail_image && file.type != \'gif\'" bo-src="file.thumbnail_image" bo-style="{\'width\': file.thumbWidth, \'height\': file.thumbHeight}" bo-class="{\'middle-align\': file.height < 250 }" />\n        <img  bo-if="file.thumbnail_image && file.type == \'gif\'" id="{{::file.id}}" class="lazy" type="{{::file.type}}"  data-original="{{::file.thumbnail_image}}" data-gif="{{::file.original_name | getOriginalImagePath : file.noteId}}" bo-style="{\'width\': file.thumbWidth, \'height\': file.thumbHeight}" bo-class="{\'middle-align\': file.height < 250 }" />\n        <i bo-if="file.thumbnail_class" class="{{::file.thumbnail_class}}"></i>\n    </a>\n\n    <div class=\'feedVideoHolder\' bo-if="file.file_format==\'VIDEO\'">\n        <div style="position:relative; width:0px; height:0px;">\n            <div class="sizeable" id="sizeable{{::file.id}}">\n                <!-- <cnv-feed-video-player-wrapper></cnv-feed-video-player-wrapper> -->\n            </div>\n        </div>\n        <a class="thumb-wrapper video-thumb-wrapper" bo-href="getFileResourceLinkUrl(file.id, file.file_format, file.name)">\n            <!-- <cnv-video-player cnv-video-player-feed-item-data="itemData" cnv-video-player-file=\'file\' ></cnv-video-player> -->\n            <cnv-video-thumbnail  cnv-video-thumbnail-data-format="FEED" cnv-video-thumbnail-lazy-load="true" cnv-video-thumbnail-lazy-load-id="{{::itemData.feed_id}}" cnv-video-thumbnail-file=\'file\'  cnv-video-thumbnail-scrolling-holder="feedGalleryContainer" cnv-video-thumbnail-show-preview="true"></cnv-video-thumbnail>\n\n        </a>\n    </div>\n    <div bo-if="file.file_format == \'DOC\' || file.file_format == \'OTHER\' || file.file_format == \'VIDEO\'" class="file-detail-tab">\n        <a bo-href="getFileResourceLinkUrl(file.id, file.file_format, file.name)">\n            <i class="ext_holder cnv-small-file-ico" bo-class="file.name | getFileExtension">\n                <span bo-bind="file.name | getFileExtension"></span>\n            </i>\n            <!-- <i class="{{::file.thumbnail_icon_class}}"></i> -->\n            <span class="filename">{{::file.name}}</span>\n        </a>\n    </div>\n</li>')
    }
    ]),
    b.module("feed/renderers/gallery/thumbnail.tpl.html", []).run(["$templateCache", function(a) {
        a.put("feed/renderers/gallery/thumbnail.tpl.html", '<li ng-if="index <= initialFilesToLoad && index <= MAXIMUM_THUMBS_TO_SHOW && !showMoreFilesThumb">             \n    <a ng-href="getFileResourceLinkUrl(file.id)">\n        <img ng-src="{{file | getNoteThumbnailPath: noteId}}" ng-style="{\'width\': {{file.thumbWidth}}, height: \'250px\'}" />\n    </a>\n</li>\n\n<li ng-if="index > initialFilesToLoad && index <= MAXIMUM_THUMBS_TO_SHOW && !showMoreFilesThumb">\n    <a ng-href="getFileResourceLinkUrl(file.id)">\n        <img ng-href="getFileResourceLinkUrl(file.id)" class="lazy" data-original="{{file | getNoteThumbnailPath: noteId}}" ng-style="{\'width\': {{file.thumbWidth}}, height: \'250px\'}" />\n    </a>\n</li>\n\n<li ng-if="showMoreFilesThumb" class="thumb-count">\n    <a ng-href="getFileResourceLinkUrl(nextFileToLoad.id)">\n        <span>+{{moreFilesToLoad}} Files</span>\n    </a>\n</li>')
    }
    ]),
    b.module("feed/renderers/link/cnvLinkFeedItem.tpl.html", []).run(["$templateCache", function(a) {
        a.put("feed/renderers/link/cnvLinkFeedItem.tpl.html", '<div>\n  <div class="title">\n    <img class="title-icon" bo-click="onItemClicked()" width="16" height="16" bo-src="itemData.data | getFaviconIconPath">\n    <div class="title-text"><a bo-href="itemData.data.source" bo-html="itemData.hierarchy[0].searched_title" target="_blank"></a></div>\n  </div>\n  	<div class="no-text-padding"></div>\n    <div class="link-feed-thumbnail-wrapper" bo-if="linkThumbnailUrl">\n      <div class="link-feed-thumbnail" bo-click="onItemClicked()" bo-style="{\'background-image\': \'url(\' + linkThumbnailUrl + \')\' }"></div>\n      <div class="videoHoverIcon" bo-click="onItemClicked()" bo-show="isYTURL || isVimeoURL"></div>\n    </div>\n  	<div class="link-feed-description" bo-style="{\'width\': linkThumbnailUrl ? \'290px\' : \'100%\' }" bo-html="(itemData.details | limitHtmlText:250) + (itemData.details ? \'<br />\' : \'\') + \'<span class=\\\'domain\\\'>\' + (itemData.data.source | getDomainNameFormUrl) + \'</span>\'" ></div>\n\n  	<div style="display:none;" class="feedExternalVideoHolder">\n  		<!-- <iframe bo-show="isYTURL" class="youtubeIframe" width="495" height="278" bo-src="YTLink" frameborder="0" allowfullscreen></iframe> -->\n  		<div bo-show="isYTURL" class="youtubeIframe"></div>\n      <iframe bo-show="isVimeoURL" class="viemoIframe" bo-src="vimeoLink" width="495" height="278" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>	\n' + "      <div class=\"link-feed-description player\" bo-style=\"{'width': '100%' }\" bo-bind=\"(itemData.details | limitHtmlText:250) + (itemData.details ? '<br />' : '') + '<span class=\\'domain\\'>' + (itemData.data.source | getDomainNameFormUrl) + '</span>'\"></div>\n  	</div>\n  	\n</div>\n")
    }
    ]),
    b.module("feed/renderers/note/cnvNoteFeedItem.tpl.html", []).run(["$templateCache", function(a) {
        a.put("feed/renderers/note/cnvNoteFeedItem.tpl.html", '<div class="note" bo-class="{\'dim-feed-item\': itemData.action == \'DOUBLE_DELETED\' || itemData.deleted == \'2\'}">\n  <div class="title" bo-if="(itemData.data.show_title === undefined && itemData.data.note_type.indexOf(\'IMAGES\') !== -1) || itemData.data.show_title == 1">\n  <!--$scope.appId, [{type: $scope.resourceType, uid: $scope.itemId, title: $scope.postTitle}], null, $scope.postTitle-->\n    <div class="title-text">\n      <a bo-href="itemData.app_instance_id | getResourceLinkUrl: [{type: itemData.resource_type, uid: itemData.resource_id, title: itemData.hierarchy[0].title}]: null: itemData.hierarchy[0].title" bo-html="itemData.hierarchy[0].searched_title" class="open-in-detail-view"></a>\n    </div>\n  </div>\n  <div class="note_text"><div class="desc feed-text-inner"></div></div>\n  <!-- Images -->\n  <div bo-if="itemData.data.files.length > 0" class="images">\n    \n    <cnv-note-gallery files-list="itemData.data.files" note-id="itemData.resource_id" resource-type="itemData.resource_type" app-id="itemData.app_instance_id"></cnv-note-gallery>\n    <!-- <div ng-repeat="file in data.files | filter: {file_format: \'IMAGE\'} | limitTo:2" class="thumbnail_container"  ng-class="{first:$first}">\n      <a ng-href="{{ getFileResourceLinkUrl(file.id) }}">\n        <div class="thumbnail" style="background-image: url(\'{{ file.thumbnail_name | getNoteThumbnailPath:itemId }}\')"></div>\n      </a>\n    </div> -->\n  </div>\n  <!-- Other files -->\n  <!-- <div class="files">\n    <div ng-repeat="file in data.files | filter: {file_format: \'!IMAGE\'} | feedItemFilesLimit" class="file">\n      <div ng-if="file.file_format !== \'IMAGE\'" class="file_name">\n        <span cnv-popover cnv-popover-ctrl="file.name">\n          <div class="icon" style="background-image: url(\'{{file.type | getFileIconByType}}\')"></div>\n          <span>{{ file.name | limitTo:72 }}</span>\n        </span>\n      </div>\n    </div>\n  </div> -->\n  <span bo-if="itemData.attachment_count" bo-bind="\'Contains \' + (itemData.attachment_count | subject:\'file\') + \' matching your search\'" class="text-highlight"></span>\n</div>\n')
    }
    ]),
    b.module("fileUpload/cnvUploadFilesUiManager.tpl.html", []).run(["$templateCache", function(a) {
        a.put("fileUpload/cnvUploadFilesUiManager.tpl.html", "<ng-include ng-if=\"type == 'inlineinsert'\" src=\"'fileUpload/templates/cnvInlineInsertUploadFiles.tpl.html'\"></ng-include>\n<ng-include ng-if=\"type == 'notes'\" src=\"'fileUpload/templates/cnvNotesAppUploadFiles.tpl.html'\"></ng-include>\n<ng-include ng-if=\"type == 'comment-attachment'\" src=\"'fileUpload/templates/cnvCommentsUploadFiles.tpl.html'\"></ng-include>")
    }
    ]),
    b.module("fileUpload/templates/cnvCommentsUploadFiles.tpl.html", []).run(["$templateCache", function(a) {
        a.put("fileUpload/templates/cnvCommentsUploadFiles.tpl.html", '<ul class="upload-files-reel">\n    <li cnv-upload-file-ui ng-repeat=\'file in files\' ng-class="{\'no-animation\': file.inEdit}" class=\'attachment-box\' cnv-popover cnv-popover-ctrl="file.name">\n            <div class="attachment-box-background"></div>\n            <img ng-src="{{file.localUrl}}" ng-class="{\'file-converted\': completed()}"/>\n\n            <div ng-if="failed()">\n                <div class="upload-failed-icon"></div>\n                <div>Couldn\'t upload this file.<a ng-if="file.retryAllowed" href="javascript:void(0);" ng-click="retry()">Retry</a></div>\n            </div>\n            \n            <div ng-show="isInProgress()" class=\'progress-bar\'>\n                <div class=\'bar-internal\' ng-style="{width: file.progress+\'%\'}" ></div>\n            </div>\n            <span ng-if="!file.noTitle && !failed()" class="fileNames">{{file.name}}</span>\n    </li>\n\n\n    <div ng-click="ctrl.removeAllFiles()" class="remove-attachment">\n        <span class="icons2_Close-white cnv-icons-18"></span>\n    </div>\n</ul>\n')
    }
    ]),
    b.module("fileUpload/templates/cnvInlineInsertUploadFiles.tpl.html", []).run(["$templateCache", function(a) {
        a.put("fileUpload/templates/cnvInlineInsertUploadFiles.tpl.html", '<perfect-scrollbar ng-if="files.length > 0" class="scrollable" wheel-propagation="true" wheel-speed="50" refresh-on-change="files.length" suppress-scroll-y="true">\n<ul class="upload-files-reel">\n	<li cnv-upload-file-ui ng-repeat=\'file in files\' class=\'attachment-box\' cnv-popover cnv-popover-ctrl="file.name">\n			<div class="attachment-box-background"></div>\n			<img ng-src="{{file.localUrl}}" ng-class="{\'file-converted\': completed()}"/>\n\n			<div ng-if="failed()">\n				<div class="upload-failed-icon"></div>\n				<div>Couldn\'t upload this file.<a ng-if="file.retryAllowed" href="javascript:void(0);" ng-click="retry()">Retry</a></div>\n			</div>\n		    \n		    <div ng-show="isInProgress()" class=\'progress-bar\'>\n		    	<div class=\'bar-internal\' ng-style="{width: file.progress+\'%\'}" ></div>\n		    </div>\n\n			<div ng-click="remove()" class="remove-file"></div>\n			<span ng-if="!file.noTitle && !failed()" class="fileNames">{{file.name}}</span>\n	</li>\n	<li class="attachment-box chooser">\n		<div class="plus-icon" cnv-popover cnv-popover-ctrl="\'Attach more files\'" ng-click="openFileChooser()"></div>\n		<!-- <img src="assets/img/inlineInsert/add-more.jpg" cnv-popover cnv-popover-ctrl="\'Attach more files\'" ng-click="openFileChooser()"/> -->\n	</li>\n</ul>\n<img src="assets/img/common/webapp_upload_error.png" class="ng-hide" /> <!--- To preload the icon in case of network disconnection-->\n</perfect-scrollbar>\n');
    }
    ]),
    b.module("fileUpload/templates/cnvNotesAppUploadFiles.tpl.html", []).run(["$templateCache", function(a) {
        a.put("fileUpload/templates/cnvNotesAppUploadFiles.tpl.html", '\n\n\n<div cnv-upload-file-ui class="file upload-box attachment-box" ng-repeat="file in files">\n    <div class="file_holder" cnv-popover cnv-popover-ctrl="file.name">\n\n        <img ng-src="{{file.localUrl}}" ng-class="{\'file-converted\': completed()}" oncontextmenu="return false" onselectstart="return false" ondragstart="return false"/>\n\n        <div ng-if="failed()">\n			<div class="upload-failed-icon"></div>\n			<div class="file_failed_text">Couldn\'t upload this file.<a ng-if="file.retryAllowed" href="javascript:void(0);" ng-click="retry()">Retry</a></div>\n		</div>\n\n		<div ng-show="isInProgress()" class=\'progress-bar\'>\n	    	<div class=\'bar-internal\' ng-style="{width: file.progress+\'%\'}"></div>\n	    </div>\n\n        <div ng-click="remove()" class="remove-file"></div>\n	\n		<span ng-if="!file.noTitle && !failed()" class="fileNames">{{file.name}}</span>\n    </div>\n</div>\n\n\n<div class=\'file upload-box attachment-box file chooser\'>\n	<div class="file_holder" ng-click="openFileChooser()" style="cursor: pointer;">\n		<img src="assets/img/inlineInsert/add-more.jpg" cnv-popover cnv-popover-ctrl="(ctrl.getSharedFilesLength() + files.length) && \'Attach more files\' || \'Attach files\'"/>\n    </div>\n</div>\n')
    }
    ]),
    b.module("groups/groupActionBtns/templates/cnvJoinedBtn.tpl.html", []).run(["$templateCache", function(a) {
        a.put("groups/groupActionBtns/templates/cnvJoinedBtn.tpl.html", '<div bindonce>\n    <button class="btn btn-default" bo-show="showBtn == \'leave\'" ng-click="leaveGroup()">\n        <i class="cnv-icons-20 icons_Minimize-blue"></i> Leave\n    </button>\n    <button class="btn btn-default" bo-show="showBtn == \'joined\'">\n        <i class="cnv-icons-20 check-blue"></i> Joined\n    </button>\n</div>')
    }
    ]),
    b.module("groups/groupSettings/templates/cnvGroupSettings.tpl.html", []).run(["$templateCache", function(a) {
        a.put("groups/groupSettings/templates/cnvGroupSettings.tpl.html", '<div class="group-settings-container" bindonce>\n\n    <cnv-advanced-search></cnv-advanced-search>\n    \n    <div bo-if="!initialized" class="loading-spinner">\n        <img src="assets/img/feed/loading-spin.svg" alt="Loading icon" />\n    </div>\n    <div bo-if="initialized">\n        <div class="app-header">\n            <div class="group-details">\n                <div bo-if="group.get(\'access\')==PUBLIC_GROUP_TYPE" class="group-dp cnv-icons-30 Icon1_PublicChannel-01-darkgray"></div>\n                <div bo-if="group.get(\'access\')==PRIVATE_GROUP_TYPE || group.get(\'access\')==SECRET_GROUP_TYPE" class="group-dp cnv-icons-30 privateGroup_icon-darkgray"></div>\n                <div class="group-desc">\n                    <span class="heading-txt"><a class="underline-link" bo-href="group.get(\'id\') | idToFilterUrl:\'GROUP\'" bo-bind="group.get(\'title\') | limitText:40"></a></span>\n                    <span class="meta-txt-gray-base">\n                        By: <span><a class="underline-link" bo-href="group.get(\'createdBy\') | idToFilterUrl:\'USER\'" bo-bind="group.get(\'creator\').first_name+\' \'+group.get(\'creator\').last_name"></a></span>\n                    </span>\n                    <span class="meta-txt-gray-base" bo-if="group.get(\'email\')">\n                        Email: <span style="margin-right: 10px;" bo-bind="group.get(\'email\')"></span>\n                        <a class="meta-txt-gray-light" href="javascript:void(0)" ng-click="copyGroupEmail()">COPY&nbsp;&nbsp;&#8226;&nbsp;&nbsp;</a><a class="meta-txt-gray-light" bo-href="vcfUrl" download>DOWNLOAD CONTACT CARD</a>\n                    </span>\n                </div>\n            </div>\n            <!-- <cnv-invite-teammates bo-if="isGroupAdminOrNetworkAdminMode() || groupSettings.membersCanInvite" class="invite-teammate"></cnv-invite-teammates> -->\n        </div>\n        <div class="app-sub-header">\n            <a style="margin-left: 30px;" bo-class="{active: selectedView==SETTINGS_VIEW}" bo-href="tab.appInstanceId | getResourceLinkUrl:[{uid: group.get(\'id\'), type: \'22\'}, {uid: \'2\', type: \'GroupSettings\'}]:null:group.get(\'title\')+\' (Settings)\'">Settings</a>\n            <a bo-class="{active: selectedView==MEMBERS_VIEW}" bo-href="tab.appInstanceId | getResourceLinkUrl:[{uid: group.get(\'id\'), type: \'22\'}, {uid: \'2\', type: \'GroupMembers\'}]:null:group.get(\'title\')+\' (Members)\'">Members (<span bo-bind="groupMembers.length"></span>)</a>\n            <a bo-if="canThisUserAcceptGroupJoinRequests()" bo-class="{active: selectedView==REQUESTS_VIEW}" bo-href="tab.appInstanceId | getResourceLinkUrl:[{uid: group.get(\'id\'), type: \'22\'}, {uid: \'2\', type: \'GroupRequests\'}]:null:group.get(\'title\')+\' (Requests)\'">Requests<span bo-if="groupJoinReqs.length"> (<span bo-bind="groupJoinReqs.length"></span>)</span></a>\n            <a bo-if="(isGroupAdminOrNetworkAdminMode() || (groupSettings.membersCanSetupIntegrations && thisUserRole != \'GUEST\'))" bo-class="{active: selectedView==INTEGRATIONS_VIEW}" bo-href="tab.appInstanceId | getResourceLinkUrl:[{uid: group.get(\'id\'), type: \'22\'}, {uid: \'2\', type: \'GroupIntegrations\'}]:null:\'Group Integrations\'">Integrations (<span bo-bind="groupIntegrations.length"></span>)</a>\n\n            <div bo-if="selectedView==MEMBERS_VIEW" class="search-field">\n                <i class="icons2_Search-lightgray cnv-icons-25 search-icon"></i>\n                <input type="text" ng-model="searchGrpMemCtrl.searchFragment" ng-keyup="searchGrpMemCtrl.onSearchFragmentChanged()" placeholder="Search for group members"/>\n            </div>\n        </div>\n        <div class="view-content">\n            <div bo-if="(selectedView==SETTINGS_VIEW || selectedView==MEMBERS_VIEW || selectedView==REQUESTS_VIEW) && (isGroupAdminOrNetworkAdminMode() || groupSettings.membersCanInvite)" class="invt-container">\n                <cnv-invite-teammates></cnv-invite-teammates>\n                <hr/>\n            </div>\n            <div bo-if="selectedView==SETTINGS_VIEW">\n                <div ng-include="\'groups/groupSettings/templates/settings.tpl.html\'"></div>\n            </div>\n            <div bo-if="selectedView==MEMBERS_VIEW">\n                <div ng-include="\'groups/groupSettings/templates/members.tpl.html\'"></div>\n            </div>\n            <div bo-if="selectedView==REQUESTS_VIEW">\n                <div ng-include="\'groups/groupSettings/templates/requests.tpl.html\'"></div>\n            </div>\n            <div bo-if="selectedView==INTEGRATIONS_VIEW || selectedView==ADD_INTEGRATIONS_VIEW">\n                <div ng-include="\'groups/groupSettings/templates/integrations.tpl.html\'"></div>\n            </div>\n        </div>\n    </div>\n</div>')
    }
    ]),
    b.module("groups/groupSettings/templates/integrations.tpl.html", []).run(["$templateCache", function(a) {
        a.put("groups/groupSettings/templates/integrations.tpl.html", '<div class="integrations">\n    <a id="integrations-page-start" style="position:absolute; top: 0px;"></a>\n    <div class="search-bar" bo-show="!addIntegrationView && !integrationPreview">\n        <div class="section-separator">\n            <span>Convo is most useful when you can see everything your team is doing - that includes all the tools you use outside of Convo! </span>\n            <input type="text" ng-model="searchGrpIntegrationCtrl.searchFragment" ng-keyup="searchGrpIntegrationCtrl.onSearchFragmentChanged()" placeholder="Search for integrations"/>\n            <hr>\n        </div>\n        \n        \n    </div>\n    \n    <div class="conf-integrations" bo-show="!addIntegrationView && !integrationPreview">\n            <p bo-if="!searchGrpIntegrationCtrl.inSearchMode && groupIntegrations.length == 0">You do not have any configured integrations in this group right now.</p>\n            <p bo-if="searchGrpIntegrationCtrl.inSearchMode && filteredGroupIntegrations.length == 0">No record matches your search.</p>\n            <div bo-show="!searchGrpIntegrationCtrl.inSearchMode" class="user-info-wrapper"\n                 bo-repeat="integration in groupIntegrations">\n\n\n                <div class="details-wrapper">\n\n                    <div style="display:block;">\n                        <div class="details-wrapper-content">\n                            <div class="details-wrapper-content-left">\n                                <div class="integration-img">\n                                    <a bo-if="integration.status==\'ACTIVE\' || integration.status==\'INACTIVE\'" bo-href="integration.integration_user_id | idToFilterUrl:\'USER\'">\n                                           <cnv-user-profile-image user-id="integration.integration_user_id" profile-type="integration.profile_image_type"\n                                                    profile-version="integration.profile_image_version"\n                                                    full-name="integration.display_name">\n                                           </cnv-user-profile-image>\n                                    </a>\n                                </div>\n                                <div class="integration-details">\n                                    <span class="meta-txt">\n                                        <a bo-if="integration.status==\'ACTIVE\' || integration.status==\'INACTIVE\'" bo-href="integration.integration_user_id | idToFilterUrl:\'USER\'">\n                                            <span bo-bind="integration.display_name"></span>\n                                        </a>\n                                    </span>\n                                    <p class="meta-description" ng-bind-html="integration.description"></p>\n                                    <p bo-show="integration.status == \'INACTIVE\'" class="disabled-text meta-description" ng-bind-html="integration.modified_desc"></p>\n                                </div>\n                            </div>\n                            <div class="details-wrapper-content-right" ng-class="getIntegrationStatusClassForActionsContainer(integration.status)">\n                                <a bo-if="true" class="cnv-icons-20" ng-class="getIntegrationStatusClass(integration.status)" ng-click="toggleIntegrationStatus(integration)" href="javascript:void(0);"></a>\n                                <cnv-dropdowns class="integrationsDropdown" bo-if="dropdownCtrl.options.length > 0" bo-show="integration.is_author" cnv-dropdown-ctrl="dropdownCtrl" cnv-dropdown-callback-params="integration"></cnv-dropdowns>\n                                <cnv-dropdowns class="integrationsDropdown" bo-if="dropdownCtrlAdmin.options.length > 0" bo-show="!integration.is_author && integration.is_admin" cnv-dropdown-ctrl="dropdownCtrlAdmin" cnv-dropdown-callback-params="integration"></cnv-dropdowns>\n                            </div>\n\n                        </div>\n\n\n                    </div>\n                </div>\n\n                <div class="clear-fix"></div>\n                <hr/>\n            </div>\n\n            <div bo-show="searchGrpIntegrationCtrl.inSearchMode" class="user-info-wrapper"\n                 bo-repeat="integration in filteredGroupIntegrations">\n\n\n                <div class="details-wrapper">\n\n                    <div style="display:block;">\n                        <div class="details-wrapper-content">\n                            <div class="details-wrapper-content-left">\n                                <div class="integration-img">\n                                    <a bo-if="integration.status==\'ACTIVE\' || integration.status==\'INACTIVE\'" bo-href="integration.integration_user_id | idToFilterUrl:\'USER\'">\n                                                                                <cnv-user-profile-image user-id="integration.integration_user_id" profile-type="integration.profile_image_type"\n                                                                                        profile-version="integration.profile_image_version"\n                                                                                        full-name="integration.display_name"></cnv-user-profile-image>\n                                    </a>\n                                </div>\n                                <div class="integration-details">\n                                    <span class="meta-txt">\n                                        <a bo-if="integration.status==\'ACTIVE\' || integration.status==\'INACTIVE\'" bo-href="integration.integration_user_id | idToFilterUrl:\'USER\'">\n                                            <span bo-bind="integration.display_name"></span>\n                                        </a> \n                                    </span>\n                                    <p class="meta-description" ng-bind-html="integration.description"></p>\n                                    <p bo-show="integration.status == \'INACTIVE\'" class="disabled-text meta-description" ng-bind-html="integration.modified_desc"></p>\n                                </div>\n                            </div>\n                            <div class="details-wrapper-content-right" ng-class="getIntegrationStatusClassForActionsContainer(integration.status)">\n                                <a bo-if="true" class="cnv-icons-20" ng-class="getIntegrationStatusClass(integration.status)" ng-click="toggleIntegrationStatus(integration)" href="javascript:void(0);"></a>\n                                <cnv-dropdowns class="integrationsDropdown" bo-if="dropdownCtrl.options.length > 0" bo-show="integration.is_author" cnv-dropdown-ctrl="dropdownCtrl" cnv-dropdown-callback-params="integration"></cnv-dropdowns>\n                                <cnv-dropdowns class="integrationsDropdown" bo-if="dropdownCtrlAdmin.options.length > 0" bo-show="!integration.is_author && integration.is_admin" cnv-dropdown-ctrl="dropdownCtrlAdmin" cnv-dropdown-callback-params="integration"></cnv-dropdowns>\n                            </div>\n\n                        </div>\n\n                    </div>\n                </div>\n\n                <div class="clear-fix"></div>\n                <hr/>\n            </div>\n        <div class="details-wrapper details-wrapper-group">\n\n            <div style="display:block;">\n                <div class="details-wrapper-content">\n                    <div class="details-wrapper-content-left">\n                        \n                        <div class="integration-details">\n                            <p class="meta-description" style="font-size: 16px;">Create a new integration on <span ng-bind=\'groupSettings.title\'></span>.</p>\n                        </div>\n                    </div>\n                    <div class="details-wrapper-content-right">\n                        <button class=\'add-group-integration btn btn-primary\' ng-click="createWebhookIntegration()" >Add</button>\n                    </div>\n\n                </div>\n\n\n            </div>\n        </div>\n        \n        </div>\n    \n</div>')
    }
    ]),
    b.module("groups/groupSettings/templates/members.tpl.html", []).run(["$templateCache", function(a) {
        a.put("groups/groupSettings/templates/members.tpl.html", '<div class="members">\n    <div bo-show="searchGrpMemCtrl.inSearchMode" class="member-info-wrapper" bo-repeat="member in searchGrpMemCtrl.filteredMembers | limitTo:lazyLoadMembersShowLimit track by member.user_id" bo-repeat-render-id="GroupSettingsList">\n        <div bo-if="member.user_status==\'ACTIVE\'" class="drop-down">\n            <cnv-dropdowns bo-if="isThisUser(member.user_id) && (isGroupAdminOrNetworkAdminMode() || groupSettings.membersCanInvite)" cnv-dropdown-ctrl="selfMemDrpDwnCtrl" cnv-dropdown-callback-params="member.user_id"></cnv-dropdowns>\n            <cnv-dropdowns bo-if="!isThisUser(member.user_id) && !isGrpAdmin(member.user_id) && !isGroupAdminOrNetworkAdminMode() && groupSettings.membersCanInvite" cnv-dropdown-ctrl="memDrpDwnCtrl" cnv-dropdown-callback-params="member.user_id"></cnv-dropdowns>\n            <cnv-dropdowns bo-if="!isThisUser(member.user_id) && isGroupAdminOrNetworkAdminMode() && member.user_role==\'ADMINISTRATOR\'" cnv-dropdown-ctrl="rmAdmRmMemDrpDwnCtrl" cnv-dropdown-callback-params="member.user_id"></cnv-dropdowns>\n            <cnv-dropdowns bo-if="!isThisUser(member.user_id) && isGroupAdminOrNetworkAdminMode() && member.user_role==\'USER\'" cnv-dropdown-ctrl="mkAdmRmMemDrpDwnCtrl" cnv-dropdown-callback-params="member.user_id"></cnv-dropdowns>\n        </div>\n        <div class="dp-wrapper">\n            <a bo-if="member.user_status==\'ACTIVE\'" bo-href="member.user_id | idToFilterUrl:\'USER\'">\n                <cnv-user-profile-image user-id="member.user_id" full-name="member.first_name+\' \'+member.last_name" profile-type="member.profile_image_type" profile-version="member.profile_image_version"></cnv-user-profile-image>\n            </a>\n            <div bo-if="member.user_status==\'INVITED\'" class="invited-user-dp">\n                <i class="cnv-icons-25 icons_Email-darkgray"></i>\n            </div>\n        </div>\n        <div class="details-wrapper">\n            <span bo-if="member.user_status==\'ACTIVE\'">\n                <a bo-href="member.user_id | idToFilterUrl:\'USER\'" bo-bind="member.first_name+\' \'+member.last_name | limitText:30"></a>\n                <span bo-if="isThisUser(member.user_id)" class="member-badge meta-txt">Me</span>\n                <span bo-if="!isThisUser(member.user_id) && isGrpOwner(member.user_id)" class="member-badge meta-txt">Owner</span>\n                <span bo-if="!isThisUser(member.user_id) && !isGrpOwner(member.user_id) && member.user_role==\'ADMINISTRATOR\'" class="member-badge meta-txt">Admin</span>\n                <span bo-if="!isThisUser(member.user_id) && member.user_role!=\'ADMINISTRATOR\' && member.is_guest" class="member-badge meta-txt">Guest</span>\n            </span>\n            <span bo-class="{middle: member.user_status==\'INVITED\'}" class="meta-txt email">\n                &#60;<span bo-bind="member.user_email_id"></span>&#62;\n                <span bo-if="member.user_status==\'INVITED\'" class="member-badge meta-txt">Invited</span>\n            </span>\n        </div>\n        <button bo-if="member.user_status==\'INVITED\' && (groupSettings.membersCanInvite || isGroupAdminOrNetworkAdminMode())" class="btn btn-block" ng-click="inviteTeammateAgain(member.user_email_id)">\n            <i class="cnv-icons-20 icons_Email-lightblue normal"></i><i class="cnv-icons-20 icons_Email-blue hover"></i>Invite again\n        </button>\n        <div class="clear-fix"></div>\n        <hr/>\n    </div>\n    <div bo-show="!searchGrpMemCtrl.inSearchMode" class="member-info-wrapper" bo-repeat="member in groupMembers | limitTo:lazyLoadMembersShowLimit track by member.user_id" bo-repeat-render-id="GroupSettingsList">\n        <div bo-if="member.user_status==\'ACTIVE\'" class="drop-down">\n            <cnv-dropdowns bo-if="isThisUser(member.user_id) && (isGroupAdminOrNetworkAdminMode() || groupSettings.membersCanInvite)" cnv-dropdown-ctrl="selfMemDrpDwnCtrl" cnv-dropdown-callback-params="member.user_id"></cnv-dropdowns>\n            <cnv-dropdowns bo-if="!isThisUser(member.user_id) && !isGrpAdmin(member.user_id) && !isGroupAdminOrNetworkAdminMode() && groupSettings.membersCanInvite" cnv-dropdown-ctrl="memDrpDwnCtrl" cnv-dropdown-callback-params="member.user_id"></cnv-dropdowns>\n            <cnv-dropdowns bo-if="!isThisUser(member.user_id) && isGroupAdminOrNetworkAdminMode() && member.user_role==\'ADMINISTRATOR\'" cnv-dropdown-ctrl="rmAdmRmMemDrpDwnCtrl" cnv-dropdown-callback-params="member.user_id"></cnv-dropdowns>\n            <cnv-dropdowns bo-if="!isThisUser(member.user_id) && isGroupAdminOrNetworkAdminMode() && member.user_role==\'USER\'" cnv-dropdown-ctrl="mkAdmRmMemDrpDwnCtrl" cnv-dropdown-callback-params="member.user_id"></cnv-dropdowns>\n        </div>\n        <div class="dp-wrapper">\n            <a bo-if="member.user_status==\'ACTIVE\'" bo-href="member.user_id | idToFilterUrl:\'USER\'">\n                <cnv-user-profile-image user-id="member.user_id" full-name="member.first_name+\' \'+member.last_name" profile-type="member.profile_image_type" profile-version="member.profile_image_version"></cnv-user-profile-image>\n            </a>\n            <div bo-if="member.user_status==\'INVITED\'" class="invited-user-dp">\n                <i class="cnv-icons-25 icons_Email-darkgray"></i>\n            </div>\n        </div>\n        <div class="details-wrapper">\n            <span bo-if="member.user_status==\'ACTIVE\'">\n                <a bo-href="member.user_id | idToFilterUrl:\'USER\'" bo-bind="member.first_name+\' \'+member.last_name | limitText:30"></a>\n                <span bo-if="isThisUser(member.user_id)" class="member-badge meta-txt">Me</span>\n                <span bo-if="!isThisUser(member.user_id) && isGrpOwner(member.user_id)" class="member-badge meta-txt">Owner</span>\n                <span bo-if="!isThisUser(member.user_id) && !isGrpOwner(member.user_id) && member.user_role==\'ADMINISTRATOR\'" class="member-badge meta-txt">Admin</span>\n                <span bo-if="!isThisUser(member.user_id) && member.user_role!=\'ADMINISTRATOR\' && member.is_guest" class="member-badge meta-txt">Guest</span>\n            </span>\n            <span bo-class="{middle: member.user_status==\'INVITED\'}" class="meta-txt email">\n                &#60;<span bo-bind="member.user_email_id"></span>&#62;\n                <span bo-if="member.user_status==\'INVITED\'" class="member-badge meta-txt">Invited</span>\n            </span>\n        </div>\n        <button bo-if="member.user_status==\'INVITED\' && (groupSettings.membersCanInvite || isGroupAdminOrNetworkAdminMode())" class="btn btn-default" ng-click="inviteTeammateAgain(member.user_email_id)">\n            <i class="cnv-icons-20 icons_Email-lightblue normal"></i><i class="cnv-icons-20 icons_Email-blue hover"></i>Invite again\n        </button>\n        <div class="clear-fix"></div>\n        <hr/>\n    </div>\n</div>')
    }
    ]),
    b.module("groups/groupSettings/templates/requests.tpl.html", []).run(["$templateCache", function(a) {
        a.put("groups/groupSettings/templates/requests.tpl.html", '<div class="members">\n    <div class="member-info-wrapper" bo-repeat="req in groupJoinReqs | limitTo:lazyLoadMembersShowLimit track by req.user_id">\n        <div class="dp-wrapper">\n            <a bo-href="req.user_id | idToFilterUrl:\'USER\'">\n                <cnv-user-profile-image user-id="req.user_id" full-name="req.name" profile-type="req.profile_image_type" profile-version="req.profile_image_version"></cnv-user-profile-image>\n            </a>\n        </div>\n        <div class="details-wrapper">\n            <span class="middle">\n                <a bo-href="req.user_id | idToFilterUrl:\'USER\'" bo-bind="req.name | limitText:30"></a> has requested to join group.\n            </span>\n        </div>\n        <button class="btn btn-default" ng-click="updateGroupJoinReqStatus(req.group_join_req_id, \'ACCEPTED\', req)">\n            Approve\n        </button>\n        <button class="btn btn-default" ng-click="updateGroupJoinReqStatus(req.group_join_req_id, \'REJECTED\', req)">\n            Decline\n        </button>\n        <div class="clear-fix"></div>\n        <hr/>\n    </div>\n    <div bo-if="!groupJoinReqs || groupJoinReqs.length==0" class="alert-message">\n        <span class="meta-txt">There are no pending requests at this moment.</span>\n    </div>\n</div>')
    }
    ]),
    b.module("groups/groupSettings/templates/settings.tpl.html", []).run(["$templateCache", function(a) {
        a.put("groups/groupSettings/templates/settings.tpl.html", '<div class="settings">\n\n    <div class="form-group">\n        <span bo-class="{normal_lineHeight: (isAccountAnnouncementsGroup() || !isGroupAdminOrNetworkAdminMode())}">Name</span>\n        <div class="setting-controls">\n            <input maxlength="255" bo-if="!isAccountAnnouncementsGroup() && isGroupAdminOrNetworkAdminMode()" class="form-input" bo-class="{\'error\': isRenamedGroupTitleAlreadyExists || isGroupTitleEmpty}" ng-model="groupSettings.title" type="text" ng-disabled="isUpdatingGrpSettings"/>\n            <span bo-if="isAccountAnnouncementsGroup() || !isGroupAdminOrNetworkAdminMode()" bo-bind="groupSettings.title | limitText:100"></span>\n            <span bo-if="isRenamedGroupTitleAlreadyExists" class="alert-banner">A group with that name already exists. Try another name.</span>\n            <span bo-if="isGroupTitleEmpty" class="alert-banner">Group name is required.</span>\n        </div>\n        <div class="clear-fix"></div>\n    </div>\n    <div class="form-group">\n        <span bo-if="!isAccountAnnouncementsGroup()" bo-class="{normal_lineHeight: isAccountAnnouncementsGroup() ||  !isGroupAdminOrNetworkAdminMode() || !groupSettings.description}">Description</span>\n        <span bo-if="isAccountAnnouncementsGroup()" bo-class="{normal_lineHeight: isAccountAnnouncementsGroup() || !isGroupAdminOrNetworkAdminMode() || !groupSettings.description}">Purpose</span>\n        <div class="setting-controls">\n            <textarea bo-if="!isAccountAnnouncementsGroup() && isGroupAdminOrNetworkAdminMode()" maxlength="250" placeholder="Add some more information about your group. This description will help others when they search for the group or need more detail about what it contains." ng-model="groupSettings.description" ng-trim="false" ng-disabled="isUpdatingGrpSettings"/>\n            <span bo-if="!isAccountAnnouncementsGroup() && isGroupAdminOrNetworkAdminMode()" class="pull-right meta-txt">{{250-groupSettings.description.length}} characters left</span>\n            <span bo-if="(isAccountAnnouncementsGroup() || !isGroupAdminOrNetworkAdminMode()) && groupSettings.description" bo-bind="groupSettings.description | limitText:200"></span>\n            <span bo-if="(isAccountAnnouncementsGroup() || !isGroupAdminOrNetworkAdminMode()) && !groupSettings.description" class="meta-txt">There is no group description available.</span>\n        </div>\n        <div class="clear-fix"></div>\n    </div>\n    <div class="form-group">\n        <span class="multi-line">Who can access this group?</span>\n        <div class="setting-controls">\n            <div class="groupType" ng-click="toggleGroupType(PUBLIC_GROUP_TYPE)">\n                <div bo-class="{selected: groupSettings.access==PUBLIC_GROUP_TYPE && !isUpdatingGrpSettings && isGroupAdminOrNetworkAdminMode(), disabledSelected: groupSettings.access==PUBLIC_GROUP_TYPE && (isUpdatingGrpSettings || !isGroupAdminOrNetworkAdminMode()), disabled: isUpdatingGrpSettings || isAccountAnnouncementsGroup() || !isGroupAdminOrNetworkAdminMode()}">\n                    <div><i class="cnv-icons-20 Icon1_PublicChannel-01-darkgray"></i>Public</div>\n                    <span class="meta-txt">Anyone in your network can access. You like transparency and open discussions.</span>\n                </div>\n            </div>\n            <div class="groupType" ng-click="toggleGroupType(PRIVATE_GROUP_TYPE)">\n                <div bo-class="{selected: (groupSettings.access==PRIVATE_GROUP_TYPE || groupSettings.access==SECRET_GROUP_TYPE) && !isUpdatingGrpSettings && isGroupAdminOrNetworkAdminMode(), disabledSelected: (groupSettings.access==PRIVATE_GROUP_TYPE || groupSettings.access==SECRET_GROUP_TYPE) && (isUpdatingGrpSettings || !isGroupAdminOrNetworkAdminMode()), disabled: isUpdatingGrpSettings || isAccountAnnouncementsGroup() || !isGroupAdminOrNetworkAdminMode()}">\n                    <div><i class="cnv-icons-20 privateGroup_icon-darkgray"></i>Private</div>\n                    <span class="meta-txt">You control who has access. This stuff is need-to-know only.</span>\n                </div>\n            </div>\n        </div>\n        <div class="clear-fix"></div>\n    </div>\n    <div class="form-group">\n        <span bo-if="groupSettings.access!=PUBLIC_GROUP_TYPE" class="multi-line">Group discovery</span>\n        <span bo-if="groupSettings.access==PUBLIC_GROUP_TYPE" class="multi-line">Group sharing settings</span>\n        <div class="setting-controls">\n            <div bo-if="groupSettings.access==PRIVATE_GROUP_TYPE || groupSettings.access==SECRET_GROUP_TYPE">\n                <input class="cnv-checkbox" id="cbGrpStng1" type="checkbox" ng-model="grpSettingsExProperts.listInDirectory" ng-click="onToggleListInDirectory()" ng-disabled="isUpdatingGrpSettings || !isGroupAdminOrNetworkAdminMode() || groupSettings.access==PUBLIC_GROUP_TYPE"/><label for="cbGrpStng1"></label>\n                <span class="labelText">List this group in directory</span>\n                <span class="meta-txt inline-block" style="margin-left: 37px;">Others can find this group and send a request to join group</span>\n            </div>\n            <div bo-if="groupSettings.access==PUBLIC_GROUP_TYPE">\n                <input class="cnv-checkbox" id="cbGrpStng2" type="checkbox" ng-true-value="1" ng-false-value="0" ng-model="groupSettings.autoFollowEnabled" ng-disabled="isUpdatingGrpSettings || isAccountAnnouncementsGroup() || !isGroupAdminOrNetworkAdminMode()"/><label for="cbGrpStng2"></label>\n                <span class="labelText">Add everyone in your company automatically</span>\n            </div>\n        </div>\n        <div class="clear-fix"></div>\n    </div>\n    <div class="section-separator">\n        <span>MANAGEMENT</span>\n        <hr/>\n    </div>\n    <div class="form-group" bo-if="isGroupAdminOrNetworkAdminMode() && !isAccountAnnouncementsGroup()">\n        <span bo-class="{normal_lineHeight: !isGroupAdminOrNetworkAdminMode()}">Group admins</span>\n        <div class="setting-controls">\n            <div bo-if="isGroupAdminOrNetworkAdminMode()" class="to-field-cont">\n                <tags-input ng-model="groupAdmins"\n                            placeholder="Make group members as admin"\n                            add-on-comma="false"\n                            add-on-blur="false"\n                            horizontal-flow = "false"\n                            add-from-autocomplete-only="true"\n                            display-property="label"\n                            replace-spaces-with-dashes="false"\n                            on-esc-key-press="onEscKeyPressInToField()"\n                            on-tag-added="onItemAddedInToAdminField($tag)"\n                            on-tag-removed="onItemRemovedFromToAdminField($tag)">\n                    <auto-complete\n                            source="getGroupMembersDropDownItems($query, numSelected)"\n                            load-history-on-focus="true"\n                            auto-select-first-suggestion="true"\n                            delimiter="@"\n                            min-length="1"\n                            max-results-to-show="4"\n                            suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html">\n                    </auto-complete>\n                </tags-input>\n            </div>\n            <div bo-if="!isGroupAdminOrNetworkAdminMode() && groupSettings.groupAdmins.length!=0">\n                <span ng-repeat="grpAdmin in groupSettings.groupAdmins track by grpAdmin.user_id">\n                    <a bo-href="grpAdmin.user_id | idToFilterUrl:\'USER\'" bo-bind="grpAdmin.first_name+\' \'+grpAdmin.last_name"></a><span bo-if="!$last">, </span>\n                </span>\n            </div>\n            <div bo-if="!isGroupAdminOrNetworkAdminMode() && groupSettings.groupAdmins.length==0">\n                <span class="meta-txt">No one is authorized to manage this group.</span>\n            </div>\n            <div>\n                <span class="meta-txt">Group admins can manage and invite users, edit group settings and set up integrations.</span>\n            </div>\n        </div>\n        <div class="clear-fix"></div>\n    </div>\n    <div class="form-group">\n        <span class="multi-line">Member privileges</span>\n        <div class="setting-controls">\n            <div class="memberPrivileges">\n                <input class="cnv-checkbox" id="cbGrpStng3" type="checkbox" ng-true-value="1" ng-false-value="0" ng-model="groupSettings.membersCanInvite" ng-disabled="isUpdatingGrpSettings || !isGroupAdminOrNetworkAdminMode() || isAccountAnnouncementsGroup()"/><label for="cbGrpStng3"></label>\n                <span class="labelText">Allow group members to add and remove users</span>\n            </div>\n            <div class="memberPrivileges">\n                <input class="cnv-checkbox" id="cbGrpStng4" type="checkbox" ng-true-value="1" ng-false-value="0" ng-model="groupSettings.membersCanPinContent" ng-disabled="isUpdatingGrpSettings || !isGroupAdminOrNetworkAdminMode() || isAccountAnnouncementsGroup()"/><label for="cbGrpStng4"></label>\n                <span class="labelText">Allow group members to pin important content</span>\n            </div>\n            <div class="memberPrivileges">\n                <input class="cnv-checkbox" id="cbGrpStng5" type="checkbox" ng-true-value="1" ng-false-value="0" ng-model="groupSettings.membersCanSetupIntegrations" ng-disabled="isUpdatingGrpSettings || !isGroupAdminOrNetworkAdminMode() || isAccountAnnouncementsGroup()"/><label for="cbGrpStng5"></label>\n                <span class="labelText">Allow group members to set up integrations</span>\n            </div>\n        </div>\n        <div class="clear-fix"></div>\n    </div>\n    <div bo-if="isGroupAdminOrNetworkAdminMode() || groupSettings.membersCanPinContent || grpSettingsExProperts.pinnedContent.length>1">\n        <div class="section-separator">\n            <span>PIN IMPORTANT CONTENT</span>\n            <hr/>\n        </div>\n        <div class="form-group">\n            <span class="multi-line">Pinned content</span>\n            <div class="setting-controls">\n                <div>\n                    <span class="meta-txt">Pinned posts appear as links on top of group feed for all members.<br/>These can be frequently accessed posts, important alerts or external links.</span>\n                </div>\n                <div ng-repeat="pinCont in grpSettingsExProperts.pinnedContent | limitTo:pinnedContentsToShow track by pinCont.id">\n                    <div class="grey-block pinned-content">\n                        <i class="cnv-icons-20 icons_Links-darkgray"></i>\n                        <a bo-if="pinCont.type==\'WEB\'" target="_blank" bo-href="pinCont.url" class="pinned-link" bo-bind="pinCont.resource_name | limitText:50"></a>\n                        <a bo-if="pinCont.type==\'SCRYBE\'" target="_blank" bo-href="pinCont.app_instance_id | getResourceLinkUrl: [{ type: pinCont.resource_type, uid: pinCont.resource_id}]: null: pinCont.resource_name" class="pinned-link" bo-bind="pinCont.resource_name| limitText:50"></a>\n                        <div bo-if="isGroupAdminOrNetworkAdminMode() || groupSettings.membersCanPinContent" class="edit-remove-link"><a href="javascript:void(0)" ng-click="editPinnedContent(pinCont.id)">Edit</a> | <a href="javascript:void(0)" ng-click="removePinnedContent(pinCont.id)">Remove</a></div>\n                    </div>\n                </div>\n                <div class="pinned-link">\n                    <a bo-if="grpSettingsExProperts.pinnedContent.length > pinnedContentLimit && pinnedContentsToShow==pinnedContentLimit" href="javascript:void(0)" ng-click="showMoreOrLessPinnedCont(\'MORE\')">Show more</a>\n                    <a bo-if="grpSettingsExProperts.pinnedContent.length > pinnedContentLimit && pinnedContentsToShow>pinnedContentLimit" href="javascript:void(0)" ng-click="showMoreOrLessPinnedCont(\'LESS\')">Show less</a>\n                </div>\n                <div bo-if="isGroupAdminOrNetworkAdminMode() || groupSettings.membersCanPinContent" class="pinned-link">\n                    <a href="javascript:void(0)" ng-click="openPinnedContentModal()">Add important posts or links</a>\n                </div>\n            </div>\n            <div class="clear-fix"></div>\n        </div>\n    </div>\n    <div class="section-separator">\n        <span>MY PREFERENCES</span>\n        <hr/>\n    </div>\n    <div class="form-group">\n        <span>Notifications</span>\n        <div class="setting-controls">\n            <div class="grey-block" ng-class="{\'grayout-div\': !group.get(\'isMember\')}">\n                <span class="block">Send me notifications for this group</span>\n                <input class="cnv-checkbox" id="cbGrpStng6" type="checkbox" ng-true-value="1" ng-false-value="0" ng-model="groupSettings.notificationSettings.desktop" ng-disabled="isUpdatingGrpSettings || !group.get(\'isMember\')"/><label for="cbGrpStng6"></label><span class="labelText">Desktop</span>\n                <span class="dummy-block"></span>\n                <input class="cnv-checkbox" id="cbGrpStng7" type="checkbox" ng-true-value="1" ng-false-value="0" ng-model="groupSettings.notificationSettings.in_app" ng-disabled="isUpdatingGrpSettings || !group.get(\'isMember\')"/><label for="cbGrpStng7"></label><span class="labelText">Notification center</span>\n                <span class="dummy-block"></span>\n                <input class="cnv-checkbox" id="cbGrpStng8" type="checkbox" ng-true-value="1" ng-false-value="0" ng-model="groupSettings.notificationSettings.mobile" ng-disabled="isUpdatingGrpSettings || !group.get(\'isMember\')"/><label for="cbGrpStng8"></label><span class="labelText">Mobile</span>\n                <span class="dummy-block"></span>\n                <input class="cnv-checkbox" id="cbGrpStng9" type="checkbox" ng-true-value="1" ng-false-value="0" ng-model="groupSettings.notificationSettings.email" ng-disabled="isUpdatingGrpSettings || !group.get(\'isMember\')"/><label for="cbGrpStng9"></label><span class="labelText">Email</span>\n            </div>\n        </div>\n        <div class="clear-fix"></div>\n    </div>\n    <div class="form-group">\n        <span>Feed</span>\n        <div class="setting-controls">\n            <div class="grey-block" ng-class="{\'grayout-div\': !group.get(\'isMember\')}">\n                <input class="cnv-checkbox" id="cbGrpStng10" type="checkbox" ng-true-value="1" ng-false-value="0" ng-model="groupSettings.hideFromFeedForThisUser" ng-disabled="isUpdatingGrpSettings || !group.get(\'isMember\')"/><label for="cbGrpStng10"></label><span class="labelText">Don\'t show posts to this group in My Feed</span>\n            </div>\n        </div>\n        <div class="clear-fix"></div>\n    </div>\n    <hr/>\n    <div class="settings-footer">\n        <a class="pull-left" bo-if="group.get(\'isMember\') && (isGroupAdminOrNetworkAdminMode() || groupSettings.membersCanInvite)" href="javascript:void(0)" ng-click="leaveGroup()">Leave group</a>\n        <span class="pull-left" bo-if="group.get(\'isMember\') && (!isAccountAnnouncementsGroup() && isGroupAdminOrNetworkAdminMode())">&nbsp;&nbsp;&#8226;&nbsp;&nbsp;</span>\n        <a class="pull-left" bo-if="!isAccountAnnouncementsGroup() && isGroupAdminOrNetworkAdminMode()" href="javascript:void(0)" bo-click="deleteGroup()">Delete group</a>\n        <button class="btn btn-primary" ng-click="updateGroupSettings()" ng-disabled="isUpdatingGrpSettings || !isAnySettingUpdated()">Save Changes</button>\n        <a class="pull-right margRight" href="javascript:void(0)" ng-click="closeTab()">Cancel</a>\n    </div>\n</div>');
    }
    ]),
    b.module("groups/groupsDirectory/templates/cnvAllGroups.tpl.html", []).run(["$templateCache", function(a) {
        a.put("groups/groupsDirectory/templates/cnvAllGroups.tpl.html", '<div class="all-groups">\n    <div class="header-section">\n        <div class="first-header">\n            <span class="header-text">GROUPS</span>\n            <cnv-dropdowns bo-if="!isAllGroupsInSearchMode" class="drop-down" cnv-dropdown-ctrl="allGrpsSrtngDrpDwnCtrl" condition="allGroupsLabelIconConditions"></cnv-dropdowns>\n        </div>\n        <div class="second-header">\n            <span>MEMBERS</span>\n        </div>\n        <input class="form-control" bo-show="sortedAllGroups.length>10" placeholder="Search for groups" type="text"/>\n        <hr/>\n    </div>\n    <div bo-repeat="group in groups | limitTo:lazyLoadShowLimit track by group.group_id" bo-repeat-render-id="GroupsDirectoryList">\n        <div class="group-detail-container">\n            <div class="dp-wrapper">\n                <i bo-if="group.access==\'PUBLIC\'" class="group-dp cnv-icons-20 Icon1_PublicChannel-01-lightgray"></i>\n                <i bo-if="group.access!=\'PUBLIC\'" class="group-dp cnv-icons-20 privateGroup_icon-lightgray"></i>\n            </div>\n            <div class="group-details">\n                <div>\n                    <a bo-href="group.group_id | idToFilterUrlForApp:\'GROUP\':false:group.title" bo-bind="group.title | limitText:30"></a><span class="meta-txt"> by <a class="admin-name" bo-href="group.created_by | idToFilterUrlForApp:\'USER\'" bo-bind="group.created_by_name | limitText:20"></a></span>\n                </div>\n                <span bo-if="group.description" class="desc" bo-bind="group.description"></span>\n            </div>\n            <div class="group-members">\n                <div class="members-req-count">\n                    <span bo-if="group.user_status==\'ACTIVE\' || userInfo.isAdminMode()"><a bo-bind="group.members_count" bo-href="9 | getResourceLinkUrl:[{uid: group.group_id, type: \'22\'}, {uid: \'2\', type: \'GroupMembers\'}]:null:group.title+\' (Members)\'"></a></span>\n                    <span bo-if="group.user_status!=\'ACTIVE\' && !userInfo.isAdminMode()" bo-bind="group.members_count"></span>\n                    <div bo-if="group.join_requests_count>0">\n                        <span>(<a bo-href="9 | getResourceLinkUrl:[{uid: group.group_id, type: \'22\'}, {uid: \'2\', type: \'GroupRequests\'}]:null:group.title+\' (Requests)\'"><span bo-if="group.join_requests_count==1" bo-bind="group.join_requests_count+\' pending request\'"></span><span bo-if="group.join_requests_count!=1" bo-bind="group.join_requests_count+\' pending requests\'"></span></a>)</span>\n                    </div>\n                </div>\n            </div>\n            <cnv-dropdowns ng-click="getGroupDetails(group)" class="drop-down" bo-if="group.user_status==\'ACTIVE\' || userInfo.isAdminMode()" cnv-dropdown-ctrl="generateGroupDropdownCtrl(group)" cnv-dropdown-callback-params="{group: group, ccGrpMobile: group.notification_settings.mobile, ccGrpEmail: group.notification_settings.email}" condition="{cLeaveGrp: group._hint_this_user_can_leave, cHideFromFeed: !group.hide_from_feed}"></cnv-dropdowns>\n            <div class="btn-container">\n                <button bo-if="group._hint_this_user_action==HINT_JOINED_ACTION" class="btn btn-block btn-disabled" disabled>\n                    <i class="cnv-icons-15 check-darkgray"></i>Joined\n                </button>\n                <button bo-if="group._hint_this_user_action==HINT_JOIN_ACTION" ng-click="joinGroup(group)" class="btn btn-block">\n                    <i class="cnv-icons-15 add-1-darkblue hover"></i><i class="cnv-icons-15 add-1-lightblue normal"></i>Join\n                </button>\n                <button bo-if="group._hint_this_user_action==HINT_REQ_ACTION && group.access !== \'SECRET\'" ng-click="joinGroup(group)" class="btn btn-block">\n                    <i class="cnv-icons-15 add-1-darkblue hover"></i><i class="cnv-icons-15 add-1-lightblue normal"></i>Request to join\n                </button>\n                <button bo-if="group._hint_this_user_action==HINT_REQ_ACTION && group.access === \'SECRET\'" class="btn btn-block btn-disabled" disabled>\n                    Private group\n                </button>\n                <button bo-if="group._hint_this_user_action==HINT_PENDING_ACTION" class="btn btn-block btn-disabled" disabled>\n                    <i class="cnv-icons-15 Icon1__Time-darkgray"></i>Pending\n                </button>\n                <button bo-if="group._hint_this_user_action==HINT_INVITE_ACTION" ng-disabled="group.showSpinner" ng-click="inviteUsers(group)" class="btn btn-block invite">\n                    Invite members\n                </button>\n            </div>\n            <i ng-if="group.showSpinner" class="cnv-circle-spinner-small spinner"></i>\n        </div>\n        <div class="clear-fix"></div>\n        <hr/>\n    </div>\n\n    <span class="alert-message few-groups" bo-if="!isAllGroupsInSearchMode && sortedGroups.length<3">\n        <span>Groups in your company will show up here.</span>\n        <span>There aren\'t many groups to show right now. why<br/> don\'t you <a ng-click="openCreateGroupModal()" href="javascript:void(0)">create</a> one?</span>\n    </span>\n\n    <span class="alert-message" bo-if="isAllGroupsInSearchMode && groups.length==0">\n        <span>There are no groups matching your search.</span>\n        <span>\n            You can <a ng-click="openCreateGroupModal()" href="javascript:void(0)">create a new group</a> by that name.\n        </span>\n    </span>\n</div>')
    }
    ]),
    b.module("groups/groupsDirectory/templates/cnvGroupsDirectory.tpl.html", []).run(["$templateCache", function(a) {
        a.put("groups/groupsDirectory/templates/cnvGroupsDirectory.tpl.html", '<div class="groups-directory-container" bindonce>\n    \n\n    <cnv-advanced-search></cnv-advanced-search>\n    \n    <div bo-show="!initialized" class="loading-spinner">\n        <img src="assets/img/feed/loading-spin.svg" alt="Loading icon" />\n    </div>\n    <div bo-show="initialized">\n        <div class="app-header">\n            <div class="app-header-left-content">\n                <span class="heading-txt">Groups Directory</span>\n            </div>\n            <div class="app-header-right-content">\n                <button class="btn btn-primary" ng-click="openCreateGroupModal()">Create Group</button>\n            </div>\n        </div>\n        <div class="app-sub-header">\n            <a bo-class="{active: selectedView==ALL_GROUPS_VIEW}" bo-href="tab.appInstanceId | getResourceLinkUrl:[{uid: \'1\', type: \'26\'}, {uid: \'2\', type: \'AllGroups\'}]:null:\'Groups Directory (All Groups)\'">All Groups<span bo-if="originalGroups.length>0"> (<span bo-bind="originalGroups.length"></span>)</span></a>\n            <a bo-class="{active: selectedView==MY_GROUPS_VIEW}" bo-href="tab.appInstanceId | getResourceLinkUrl:[{uid: \'1\', type: \'26\'}, {uid: \'2\', type: \'MyGroups\'}]:null:\'Groups Directory (My Groups)\'">My Groups<span bo-if="myGroupsCount>0"> (<span bo-bind="myGroupsCount"></span>)</span></a>\n            <a bo-if="groupsJoinReqs.length>0" bo-class="{active: selectedView==GROUPS_REQUESTS_VIEW}" bo-href="tab.appInstanceId | getResourceLinkUrl:[{uid: \'1\', type: \'26\'}, {uid: \'2\', type: \'GroupsRequests\'}]:null:\'Groups Directory (Requests)\'">Requests (<span bo-bind="groupsJoinReqs.length"></span>)</a>\n        </div>\n        <div class="view-content">\n            <div bo-if="selectedView==ALL_GROUPS_VIEW">\n                <div ng-include="\'groups/groupsDirectory/templates/cnvAllGroups.tpl.html\'"></div>\n            </div>\n            <div bo-if="selectedView==MY_GROUPS_VIEW">\n                <div ng-include="\'groups/groupsDirectory/templates/cnvMyGroups.tpl.html\'"></div>\n            </div>\n            <div bo-if="selectedView==GROUPS_REQUESTS_VIEW">\n                <div ng-include="\'groups/groupsDirectory/templates/cnvGroupsRequests.tpl.html\'"></div>\n            </div>\n        </div>\n    </div>\n</div>')
    }
    ]),
    b.module("groups/groupsDirectory/templates/cnvGroupsRequests.tpl.html", []).run(["$templateCache", function(a) {
        a.put("groups/groupsDirectory/templates/cnvGroupsRequests.tpl.html", '<div class="groups-requests">\n    <div class="req-info-container" bo-repeat="req in groupsJoinReqs | limitTo:lazyLoadShowLimit track by req.req_id" bo-repeat-render-id="GroupsDirectoryList">\n        <div class="req-info-wrapper">\n            <div class="dp-wrapper">\n                <a bo-href="req.user_id | idToFilterUrlForApp:\'USER\'">\n                    <cnv-user-profile-image user-id="req.user_id" full-name="req.user_name" profile-type="req.user_profile_image_type" profile-version="req.user_profile_image_version"></cnv-user-profile-image>\n                </a>\n            </div>\n            <div class="details-wrapper">\n                <span class="middle">\n                    <a bo-href="req.user_id | idToFilterUrlForApp:\'USER\'" bo-bind="req.user_name | limitText:30"></a> has requested to join <a bo-href="req.group_id | idToFilterUrlForApp:\'GROUP\'" bo-bind="req.group_name | limitText:40"></a> group.\n                </span>\n            </div>\n            <div class="btn-container">\n                <button class="btn btn-block approve" ng-click="updateGroupJoinReqStatus(req.group_id, req.req_id, \'ACCEPTED\')">\n                    <i class="cnv-icons-15 check-white"></i> Approve\n                </button>\n            </div>\n            <div class="btn-container">\n                <button class="btn btn-block decline" ng-click="updateGroupJoinReqStatus(req.group_id, req.req_id, \'REJECTED\')">\n                    <i class="cnv-icons-15 icon1_remove-01-blue normal"></i><i class="cnv-icons-15 icon1-remove-red hover"></i> Decline\n                </button>\n            </div>\n            <div class="clear-fix"></div>\n            <hr/>\n        </div>\n    </div>\n</div>')
    }
    ]),
    b.module("groups/groupsDirectory/templates/cnvMyGroups.tpl.html", []).run(["$templateCache", function(a) {
        a.put("groups/groupsDirectory/templates/cnvMyGroups.tpl.html", '<div class="all-groups my-groups">\n    <div class="header-section">\n        <div class="first-header">\n            <span class="header-text">GROUPS</span>\n            <cnv-dropdowns bo-if="!isMyGroupsInSearchMode" class="drop-down" cnv-dropdown-ctrl="myGrpsSrtngDrpDwnCtrl" condition="myGroupsLabelIconConditions"></cnv-dropdowns>\n        </div>\n        <div class="second-header">\n            <span>MEMBERS</span>\n        </div>\n        <input class="form-control" bo-show="sortedManageGroups.length+sortedMemberGroups.length>10" placeholder="Search for groups" type="text"/>\n    </div>\n    <span bo-if="manageGroups.length>0" class="group-separator">GROUPS YOU MANAGE</span>\n    <div bo-repeat="group in manageGroups | limitTo:lazyLoadShowLimit/2 track by group.group_id" bo-repeat-render-id="GroupsDirectoryList">\n        <div class="group-detail-container">\n            <div class="dp-wrapper">\n                <i bo-show="group.access==\'PUBLIC\'" class="group-dp cnv-icons-20 Icon1_PublicChannel-01-lightgray"></i>\n                <i bo-show="group.access!=\'PUBLIC\'" class="group-dp cnv-icons-20 privateGroup_icon-lightgray"></i>\n            </div>\n            <div class="group-details">\n                <div>\n                    <a bo-href="group.group_id | idToFilterUrlForApp:\'GROUP\'" bo-bind="group.title | limitText:30"></a><span class="meta-txt"> by <a class="admin-name" bo-href="group.created_by | idToFilterUrlForApp:\'USER\'" bo-bind="group.created_by_name | limitText:20"></a></span>\n                </div>\n                <span class="desc" bo-bind="group.description"></span>\n            </div>\n            <div class="group-members">\n                <div class="members-req-count">\n                    <span bo-if="group.user_status==\'ACTIVE\'"><a bo-bind="group.members_count" bo-href="9 | getResourceLinkUrl:[{uid: group.group_id, type: \'22\'}, {uid: \'2\', type: \'GroupMembers\'}]:null:group.title+\' (Members)\'"></a></span>\n                    <span bo-if="group.user_status!=\'ACTIVE\'" bo-bind="group.members_count"></span>\n                    <div bo-if="group.join_requests_count>0">\n                        <span>(<a bo-href="9 | getResourceLinkUrl:[{uid: group.group_id, type: \'22\'}, {uid: \'2\', type: \'GroupRequests\'}]:null:group.title+\' (Requests)\'"><span bo-if="group.join_requests_count==1" bo-bind="group.join_requests_count+\' pending request\'"></span><span bo-if="group.join_requests_count!=1" bo-bind="group.join_requests_count+\' pending requests\'"></span></a>)</span>\n                    </div>\n                </div>\n            </div>\n            <cnv-dropdowns ng-click="getGroupDetails(group)" class="drop-down" cnv-dropdown-ctrl="generateGroupDropdownCtrl(group)" cnv-dropdown-callback-params="{group: group, ccGrpMobile: group.notification_settings.mobile, ccGrpEmail: group.notification_settings.email}" condition="{cLeaveGrp: group._hint_this_user_can_leave, cHideFromFeed: !group.hide_from_feed}"></cnv-dropdowns>\n            <div class="btn-container">\n                <button bo-if="group._hint_this_user_action==HINT_JOINED_ACTION" class="btn btn-block btn-disabled" disabled>\n                    <i class="cnv-icons-15 check-darkgray"></i>Joined\n                </button>\n                <button bo-if="group._hint_this_user_action==HINT_JOIN_ACTION" ng-click="joinGroup(group)" class="btn btn-block">\n                    <i class="cnv-icons-15 icons2_Add-blue hover"></i><i class="cnv-icons-15 icons2_Add-lightblue normal"></i>Join\n                </button>\n                <button bo-if="group._hint_this_user_action==HINT_REQ_ACTION" ng-click="joinGroup(group)" class="btn btn-block">\n                    <i class="cnv-icons-15 icons2_Add-blue hover"></i><i class="cnv-icons-15 icons2_Add-lightblue normal"></i>Request to join\n                </button>\n                <button bo-if="group._hint_this_user_action==HINT_PENDING_ACTION" class="btn btn-block btn-disabled" disabled>\n                    Pending\n                </button>\n                <button bo-if="group._hint_this_user_action==HINT_INVITE_ACTION" ng-disabled="group.showSpinner" ng-click="inviteUsers(group)" class="btn btn-block invite">\n                    Invite members\n                </button>\n            </div>\n            <i ng-if="group.showSpinner" class="cnv-circle-spinner-small spinner"></i>\n        </div>\n        <div class="clear-fix"></div>\n        <hr bo-if="$index+1 < lazyLoadShowLimit/2 && !$last"/>\n    </div>\n\n    <span bo-if="memberGroups.length>0" class="group-separator">GROUPS YOU\'RE IN</span>\n    <div bo-repeat="group in memberGroups | limitTo:lazyLoadShowLimit/2 track by group.group_id" bo-repeat-render-id="GroupsDirectoryList">\n        <div class="group-detail-container">\n            <div class="dp-wrapper">\n                <i bo-if="group.access==\'PUBLIC\'" class="group-dp cnv-icons-20 Icon1_PublicChannel-01-lightgray"></i>\n                <i bo-if="group.access!=\'PUBLIC\'" class="group-dp cnv-icons-20 privateGroup_icon-lightgray"></i>\n            </div>\n            <div class="group-details">\n                <div>\n                    <a bo-href="group.group_id | idToFilterUrlForApp:\'GROUP\'" bo-bind="group.title | limitText:30"></a><span class="meta-txt"> by <a class="admin-name" bo-href="group.created_by | idToFilterUrlForApp:\'USER\'" bo-bind="group.created_by_name | limitText:20"></a></span>\n                </div>\n                <span class="desc" bo-bind="group.description"></span>\n            </div>\n            <div class="group-members">\n                <div class="members-req-count">\n                    <span bo-if="group.user_status==\'ACTIVE\'"><a bo-bind="group.members_count" bo-href="9 | getResourceLinkUrl:[{uid: group.group_id, type: \'22\'}, {uid: \'2\', type: \'GroupMembers\'}]:null:group.title+\' (Members)\'"></a></span>\n                    <span bo-if="group.user_status!=\'ACTIVE\'" bo-bind="group.members_count"></span>\n                    <div bo-if="group.join_requests_count>0">\n                        <span>(<a bo-href="9 | getResourceLinkUrl:[{uid: group.group_id, type: \'22\'}, {uid: \'2\', type: \'GroupRequests\'}]:null:group.title+\' (Requests)\'"><span bo-if="group.join_requests_count==1" bo-bind="group.join_requests_count+\' pending request\'"></span><span bo-if="group.join_requests_count!=1" bo-bind="group.join_requests_count+\' pending requests\'"></span></a>)</span>\n                    </div>\n                </div>\n            </div>\n            <cnv-dropdowns ng-click="getGroupDetails(group)" class="drop-down" cnv-dropdown-ctrl="generateGroupDropdownCtrl(group)" cnv-dropdown-callback-params="{group: group, ccGrpMobile: group.notification_settings.mobile, ccGrpEmail: group.notification_settings.email}" condition="{cLeaveGrp: group._hint_this_user_can_leave, cHideFromFeed: !group.hide_from_feed}"></cnv-dropdowns>\n            <div class="btn-container">\n                <button bo-if="group._hint_this_user_action==HINT_JOINED_ACTION" class="btn btn-block btn-disabled" disabled>\n                    <i class="cnv-icons-15 check-darkgray"></i>Joined\n                </button>\n                <button bo-if="group._hint_this_user_action==HINT_JOIN_ACTION" ng-click="joinGroup(group)" class="btn btn-block">\n                    <i class="cnv-icons-15 icons2_Add-blue hover"></i><i class="cnv-icons-15 icons2_Add-lightblue normal"></i>Join\n                </button>\n                <button bo-if="group._hint_this_user_action==HINT_REQ_ACTION" ng-click="joinGroup(group)" class="btn btn-block">\n                    <i class="cnv-icons-15 icons2_Add-blue hover"></i><i class="cnv-icons-15 icons2_Add-lightblue normal"></i>Request to join\n                </button>\n                <button bo-if="group._hint_this_user_action==HINT_PENDING_ACTION" class="btn btn-block btn-disabled" disabled>\n                    Pending\n                </button>\n                <button bo-if="group._hint_this_user_action==HINT_INVITE_ACTION" ng-disabled="group.showSpinner" ng-click="inviteUsers(group)" class="btn btn-block invite">\n                    Invite members\n                </button>\n            </div>\n            <i ng-if="group.showSpinner" class="cnv-circle-spinner-small spinner"></i>\n        </div>\n        <div class="clear-fix"></div>\n        <hr/>\n    </div>\n\n    <span class="alert-message" bo-if="isMyGroupsInSearchMode && manageGroups.length==0 && memberGroups.length==0">\n        <span>There are no groups matching your search.</span>\n        <span>\n            You can <a ng-click="openCreateGroupModal()" href="javascript:void(0)">create a new group</a> by that name.\n        </span>\n    </span>\n\n</div>')
    }
    ]),
    b.module("home/components/cnvAddTagsWidget/cnvAddTagsWidget.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/components/cnvAddTagsWidget/cnvAddTagsWidget.tpl.html", '<div class="modal-header">\n    <h4>Tag this post</h4>\n    <button type="button" class="close" ng-click="dismiss()">×</button>\n</div>\n\n<form name="shareWithOthers" ng-submit="onSubmit()" role="form">\n\n	<div class="modal-body sharepost">\n		<p>Add tags to make your post easier to find.</p><br />\n    <tags-input class="to-field"\n          ng-model="tags"\n          placeholder="+Add more"\n          no-tags-indicator="false" \n          add-on-comma="true"\n          add-on-blur="true"\n          horizontal-flow = "false"\n          add-from-autocomplete-only="false"\n          display-property="label"\n          replace-spaces-with-dashes="true"\n          prefix-delimiter="#"\n          allowed-tags-pattern="^#[a-zA-Z_-]+.*$" \n          on-esc-key-press="onEscKeyPressInToField()"\n          on-tag-added="onItemAddedInToField($tag)">\n      <auto-complete\n          source="getHashtags($query)"\n          load-history-on-focus="false"\n          auto-select-first-suggestion="false" \n          delimiter="#"\n          min-length="1"\n          suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html">\n      </auto-complete>\n    </tags-input>\n    <br />\n    <p>Separate tags with commas</p>\n\n	    <!-- <div class="form-group">\n	      <span>Link to</span>\n	      <input type="url" class="form-control" name="url" ng-model="data.url" ng-change="onChange()" ng-paste="onPaste()" maxlength="255" required>\n	    </div>\n	    <div class="form-group">\n	      <span ng-class="{\'resolving\': resolving}">Text to display</span>\n	      <input type="text" class="form-control" name="resource_name" ng-model="data.resource_name" maxlength="255">\n	    </div>\n\n	    <a class="test-link" href="javascript:void(0);" ng-disabled="!data.url" >Test Link</a> -->\n\n	</div>\n	\n	<div class="modal-footer">\n	    <button type="submit" class="btn btn-primary">Done</button>\n	</div>\n\n</form>')
    }
    ]),
    b.module("home/components/cnvFeedLinkThis/cnvFeedLinkThis.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/components/cnvFeedLinkThis/cnvFeedLinkThis.tpl.html", '<div class="modal-header">\n    <h4 style="width: 95%">More-Like<div class="fetchHeading"><strong>Top Search Terms:</strong> [<span ng-bind-html="top_terms_sec"></span>]</div></h4>\n\n    <button type="button" class="close" ng-click="dismiss()">×</button>\n\n    <button type="button" class="close" ng-click="showBody = !showBody" style="margin: 0px 5px;">-</button>\n</div>\n\n<div class="modal-body sharepost" style="max-height: 500px; overflow-y: auto" ng-show="showBody">\n\n    <div ng-show="processing" class="feed-item-container row align-center">\n        Please wait! Getting data for you...\n    </div>\n\n    <div ng-show="!processing && feedLikeThisData.errorMsg==null" >\n        <!--<input type="text" class="form-control" ng-model="keywords">-->\n        <div class="restTermsDiv"><strong>Other Search Terms:</strong> [<span ng-bind-html="rest_terms_sec"></span>]</div>\n\n\n        <tags-input class="to-field"\n                    ng-model="keywords"\n                    placeholder="+Add keyword"\n                    no-tags-indicator="true"\n                    add-on-comma="true"\n                    add-on-blur="true"\n                    horizontal-flow = "false"\n                    add-from-autocomplete-only="false"\n                    display-property="label"\n                    replace-spaces-with-dashes="true"\n                    on-esc-key-press="onEscKeyPressInToField()"\n                    on-tag-added="onItemAddedInToField($tag)"\n                    on-tag-removed="onItemRemovedInToField($tag)"\n                    on-ctrl-cmd-enter="onCtrlOrCmdEnterPressInTextEditor()">\n            <auto-complete\n                    source="getShareWithDropdownItems($query)"\n                    load-history-on-focus="false"\n                    auto-select-first-suggestion="false"\n                    delimiter="@"\n                    min-length="1"\n                    suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html">\n            </auto-complete>\n        </tags-input>\n        <input type="button" class="btn btn-info btn-block" value="Resend Fetch Call" ng-click="loadData(keywords, feed, true, true)" />\n\n    </div>\n\n    <div class="feed-item-container row" ng-repeat="feedData in feedLikeThisSuggestions" ng-show="!processing && feedLikeThisData.errorMsg==null">\n        <div class="shared-with-container">\n            <a ng-href="{{feedData.created_by | idToFilterUrl:\'USER\'}}" ng-bind="feedData.created_by | idToName | limitText:80"></a>\n            <br>\n            <snap class="grey-txt">To</snap>\n\n            <span ng-repeat="shareInfo in feedData.published_to | sharedToOrderByCurrentUser | limitTo:2" class="ng-scope">\n                <a ng-if="shareInfo.published_to != user_info.user_id" ng-href="{{shareInfo.published_to | idToFilterUrl:shareInfo.type}}" ng-bind="(shareInfo.published_to | idToName | limitText:80)" ></a>\n                <span ng-if="(!$last | iif:\', \')" style="color: #959595" class="ng-scope">,</span>\n            </span>\n\n            <span ng-if="feedData.published_to.length > 2" class="more-sharing-info ng-scope"><span style="color: #959595">&nbsp;, </span>\n            <a href="javascript:void(0)" cnv-popover="" cnv-popover-ctrl="feedData.published_to | sharingInfoTooltipText:2" ng-bind="\'+\' + ({{feedData.published_to.length - 2}})" ng-click="openSharedInfoModal()" popover-data-id="cnv-1">+2</a>\n            </span>\n        </div>\n        <div class="fetchMore title-text" highlight-text="search_words">\n            <a href="#{{feedData.resource_link}}">{{feedData.resource_name}}</a>\n            <br />\n            <strong>Score:</strong> {{feedData.score}}\n        </div>\n        <div class="note_text fetchMoreBody" >\n            <div class="fetchMore desc feed-text-inner" highlight-text="search_words">\n                {{feedData.body }}\n            </div>\n        </div>\n        <div>\n            <strong>Dated:</strong> {{feedData.time_stamp | date:\'medium\'}}\n        </div>\n\n\n    </div>\n    <div ng-show="!processing && feedLikeThisData.errorMsg==null">\n        <center><a href="void:javascript()" ng-click="loadData(currentKeywords, feed, false, false)" ng-class="{\'disabled\':loadMore==\'Please Wait\'}">{{loadMore}}</a></center>\n    </div>\n    <div class="feed-item-container row" ng-show="!processing && feedLikeThisData.errorMsg!=null">\n        {{feedLikeThisData.errorMsg}}\n    </div>\n</div>\n\n<div class="modal-footer" ng-show="showBody">\n    <button type="button" class="close" ng-click="dismiss()">Close</button>\n</div>')
    }
    ]),
    b.module("home/components/cnvGroupsFilterList/cnvGroupsFilterExpandList.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/components/cnvGroupsFilterList/cnvGroupsFilterExpandList.tpl.html", '<table>\n  <tr><td><input width="60%" ng-model="searchGroupText" type="text" ng-keyup="highlightItemOnKeyup($event);" ng-keypress="highlightItemOnKeypress($event);" ng-keydown="highlightItemOnKeydown($event);" ng-trim="false"></input></td></tr>\n  <tr ng-repeat="group in groups | searchGroupUser:searchGroupText:true"><td><a ng-Click="applyFilter($event,this);" ng-href="{{group.id | idToFilterUrl:\'GROUP\'}}" ng-class="{list_item_selected: (group.id == filtered_group_id)}">{{group.title}}</a></td></tr>\n</table>')
    }
    ]),
    b.module("home/components/cnvGroupsFilterList/cnvGroupsFilterList.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/components/cnvGroupsFilterList/cnvGroupsFilterList.tpl.html", '<!-- <div> -->\n<div style="display:inline;margin-right:10px;"><a href="#/feed">All</a></div>\n\n<div style="display:inline; margin-right:17px;" ng-repeat="group in groups | limitTo:3" ng-Click="applyFilterToTop3($event,this);"><a href="{{group.id | idToFilterUrl:\'GROUP\'}}" ng-class="{list_item_selected: (group.id == filtered_group_id)}">{{group.title | limitText:18}}</a></div>\n<div class="expand" style="display:inline;margin-right:10px;">\n  <span class="glyphicon glyphicon-chevron-down" ng-click="expandGroupList();"></span>\n</div>\n<!-- </div> -->\n')
    }
    ]),
    b.module("home/components/cnvHomeCenterPanelFeedPinnedPostWidget/cnvHomeCenterPanelFeedPinnedPostWidget.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/components/cnvHomeCenterPanelFeedPinnedPostWidget/cnvHomeCenterPanelFeedPinnedPostWidget.tpl.html", '<div class="feed-post-pinning-widget" bindonce ng-if="pinnedFeedItems.length > 0 && !userInfo.isGuestUser()">\n	<ul>\n		<li ng-repeat="pin in pinnedFeedItems | limitTo: MAXIMUM_PINS_TO_SHOW" class="pin">\n			<i class="cnv-icons-15 Icon1_Thumbtack-01"></i>\n			<!-- <a bo-href="pin.url" target="_blank" bo-bind="pin.display_name"></a> -->\n			<a bo-if="pin.type == \'WEB\'" bo-href="pin.url" target="_blank" bo-bind="pin.resource_name"></a>\n			<a bo-if="pin.type == \'SCRYBE\'" bo-href="pin.url" bo-bind="pin.resource_name"></a>\n			<span class="dim-text" bo-if="pin.user_id">by</span>\n			<a bo-if="pin.user_id" bo-href="pin.user_id | idToFilterUrl:\'USER\'" bo-bind="pin.user_id | idToName"></a>\n			<!-- <span bo-if="pin.user_id && pin.time_stamp">,&nbsp</span> -->\n			<!-- <span class="dim-text" bo-if="pin.time_stamp" cnv-popover cnv-popover-ctrl="pin.time_stamp | localize" bo-date="pin.time_stamp | dateAgo: server_now_timestamp : true"></span> -->\n		</li>\n		<!-- <li>\n			<span>iconset: ios-7-icons</span>\n			<span>iconfinder.com<br />Sabika N, Apr 2, 2013\n			</span>\n		</li> -->\n		<li bo-if="pinnedFeedItems.length > MINIMUM_PINS_TO_SHOW && showAll" class="action-btn">\n			<span ng-click="showAllPins()">{{\'+\' + (pinnedFeedItems.length - MINIMUM_PINS_TO_SHOW) + \' more\'}}</span>\n		</li>\n		<li bo-if="!showAll" class="action-btn">\n			<span ng-click="showFewerPins()">Less</span>\n		</li>\n	</ul>\n	<hr />\n</div>')
    }
    ]),
    b.module("home/components/cnvHomeLeftPanel/cnvHomeLeftPanel.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/components/cnvHomeLeftPanel/cnvHomeLeftPanel.tpl.html", '<div class="wrapper-parent" cnv-home-left-panel-scroll-handler bindonce>\n    <div class="hidden-xs hidden-sm left-panel-wrapper-full cnv-onboarding-overlay">\n        <!-- left menu items code -->\n        <div class="row no-margin menuItemsContainer" >\n            <ul>\n                <li>\n                    <i class="cnv-icons-20 icons_Home-darkgray"></i>\n                    <span class="unread-bubble" bo-if="showFeedDirtyDot">&middot;</span>\n                    <a bo-href="newsFeedFilter.url" ng-class="{active: (activeFilter == newsFeedFilter)}" ng-mousedown="trackClick(\'My Feed\'); scrollTop(); onNewsFeedFilterMouseDown()">My feed</a>\n                </li>\n                <li class="clearfix mentions">\n                    <i class="cnv-icons-20 icons2_mention-darkgray pull-left"></i>\n                    <span class="unread-bubble" bo-if="directsUnreadCount > 0">&middot;</span>\n                    <a bo-href="mentionsFilter.url" ng-click="resetDirectsCount(); trackClick(\'@Mentions\')" class="pull-left" ng-class="{active: (activeFilter == mentionsFilter)}">Mentions </a>\n                    <!-- <span class="badge pull-right" bo-if="directsUnreadCount > 0" bo-bind="directsUnreadCount"></span> -->\n                </li>\n                <li>\n                    <i class="cnv-icons-20 icons_Star-darkgray"></i>\n                    <a bo-href="starredFilter.url" ng-class="{active: (activeFilter == starredFilter)}" ng-click="trackClick(\'Starred\')">Starred</a>\n                </li>\n                <li>\n                    <i class="cnv-icons-20 icons_Drafts-darkgray"></i>\n                    <a bo-href="draftsFilter.url" class="draft-label" ng-class="{active: (activeFilter == draftsFilter)}" ng-click="trackClick(\'Drafts\')">Drafts</a>\n                </li>\n                <li bo-if="thisUserRole!=\'GUEST\'">\n                    <i class="cnv-icons-20 icons_Integrations_Left"></i>\n                    <a href="javascript:void(0)" ng-click="openIntegrationsPage(); trackClick(\'Integrations\')" class="draft-label">Integrations</a>\n                </li>\n                <li ng-show="expandMenu">\n                    <i class="cnv-icons-20 icons2_Trash-darkgray"></i>\n                    <a bo-href="trashFilter.url" class="trash-label" ng-class="{active: (activeFilter == trashFilter)}" ng-click="trackClick(\'Trash\')">Trash</a>\n                </li>\n                <li class="action-link" ng-show="!expandMenu" ng-click="expandMenu = !expandMenu"><a href="javascript:void(0)">See more...</a>\n                </li>\n                <li class="action-link" ng-show="expandMenu" ng-click="expandMenu = false"><a href="javascript:void(0)">Less</a>\n                </li>\n            </ul>\n        </div>\n\n        <div class="row no-margin groupsItemsContainer">\n            <div class="heading">\n                <span>Groups</span>\n                <i bo-if="thisUserRole!=\'GUEST\'" class="cnv-icons-20 icons2_Add-lightgray onboarding-add-group-tooltip" ng-click="createGroup(); trackClick(\'New Group\')"></i>\n                <!-- <span class="new-label" ng-click="createGroup()">New</span> -->\n            </div>\n            \n            <cnv-left-panel-groups-list></cnv-left-panel-groups-list>\n        </div>\n\n        <div bo-if="thisUserRole!=\'GUEST\'" class="row no-margin groupsControlsContainer">\n            <span><a bo-href=\'22 | getResourceLinkUrl : [{uid: "1", type: "26"}, {uid: "2", type: "AllGroups"}] : false : "Groups Directory (All Groups)"\' ng-click="trackClick(\'Browse Group Directory\')">Groups Directory</a></span>\n            <a bo-href=\'22 | getResourceLinkUrl : [{uid: "1", type: "26"}, {uid: "2", type: "AllGroups"}] : false : "Groups Directory (All Groups)"\' ng-click="trackClick(\'Browse Group Directory\')" class="directory-icon"><i class="cnv-icons-25 icon1_directory"></i></a>\n            <a bo-href=\'22 | getResourceLinkUrl : [{uid: "1", type: "26"}, {uid: "2", type: "AllGroups"}] : false : "Groups Directory (All Groups)"\' ng-click="trackClick(\'Browse Group Directory\')" class="help-text">Find groups in your company to join</a>\n            <!-- <span><a href="javascript:void(0)" ng-click="createGroup()">Create a group</a></span> -->\n\n            <!-- <div class="createGroupWidgetContainer" ng-controller="CreateGroupWidgetCtrl">\n                <h4><span class="glyphicon glyphicon-group"></span> Create private groups</h4>\n                <span>Create a public or private group to communicate about shared interests, topics, projects or teams.</span>\n                <button class="btn btn-default btn-block" >New Group</button> -->\n        </div>\n\n        <!--\n            This is a hack to fix overflow hidden issues on the menus.\n            By increasing the width and adding padding we\'re allowing\n            space for news to be visible\n\n            However we cannot limit background with background-size property (incase\n            of solid color) so this div will act as a dummy bg div\n        -->\n        <div class="background-div"></div>\n    </div>\n    <div class="visible-xs visible-sm left-panel-wrapper-slim cnv-onboarding-overlay">\n        <ul>\n            <a bo-href="newsFeedFilter.url">\n                <li>\n                    <i class="cnv-icons-20 icons_Home-darkgray" ng-mousedown="trackClick(\'My Feed\'); scrollTop(); onNewsFeedFilterMouseDown()"><span class="unread-bubble" bo-if="showFeedDirtyDot">&middot;</span></i>\n                    <div class="tooltip right" role="tooltip">\n                      <div class="tooltip-arrow"></div>\n                      <div class="tooltip-inner">\n                        My Feed\n                      </div>\n                    </div>\n                </li>\n            </a>\n            <a bo-href="mentionsFilter.url">\n                <li>\n                    <i class="cnv-icons-20 icons2_mention-darkgray" ng-click="resetDirectsCount(); trackClick(\'@Mentions\')"><span class="unread-bubble" bo-if="directsUnreadCount > 0">&middot;</span></i>\n                    <div class="tooltip right" role="tooltip">\n                      <div class="tooltip-arrow"></div>\n                      <div class="tooltip-inner">\n                        Mentions\n                      </div>\n                    </div>\n                </li>\n            </a>\n            <a bo-href="starredFilter.url">\n                <li>\n                    <i class="cnv-icons-20 icons_Star-darkgray" ng-click="trackClick(\'Starred\')"></i>\n                    <div class="tooltip right" role="tooltip">\n                      <div class="tooltip-arrow"></div>\n                      <div class="tooltip-inner">\n                        Starred\n                      </div>\n                    </div>\n                </li>\n            </a>\n            <a bo-href="draftsFilter.url">\n                <li>\n                    <i class="cnv-icons-20 icons_Drafts-darkgray" ng-click="trackClick(\'Drafts\')"></i>\n                    <div class="tooltip right" role="tooltip">\n                      <div class="tooltip-arrow"></div>\n                      <div class="tooltip-inner">\n                        Drafts\n                      </div>\n                    </div>\n                </li>\n            </a>\n            <li ng-click="openIntegrationsPage(); trackClick(\'Integrations\')">\n                <i class="cnv-icons-20 Icon1_Integrations-01-darkgray"></i>\n                <div class="tooltip right" role="tooltip">\n                  <div class="tooltip-arrow"></div>\n                  <div class="tooltip-inner">\n                    Integrations\n                  </div>\n                </div>\n            </li>\n            <a bo-href="trashFilter.url">\n                <li>\n                    <i class="cnv-icons-20 icons2_Trash-darkgray" ng-click="trackClick(\'Trash\')"></i>\n                    <div class="tooltip right" role="tooltip">\n                      <div class="tooltip-arrow"></div>\n                      <div class="tooltip-inner">\n                        Trash\n                      </div>\n                    </div>\n                </li>\n            </a>\n        </ul>\n        <hr />\n        <ul>\n            <li tabindex="1">\n                <i class="cnv-icons-20 privateGroup_icon-darkgray onboarding-private-grp-tooltip-slim"></i>\n                <ul class="group-popover-menus private-grps-list">\n                    <li bo-class="{\'ie-shorten\': privateGroupsArray.models.length > 5 }">Private Groups</li>\n                    <ul>\n                        <li bo-show="privateGroupsArray && privateGroupsArray.models.length < 1">\n                            <span bo-if="!userInfo.isGuestUser()" ng-click="createGroup(true)">+ Create a private group</span>\n                            <span bo-if="userInfo.isGuestUser()">No private groups available</span>\n                        </li>\n                        <a bo-href="group.get(\'id\') | idToFilterUrlForApp:\'GROUP\'" bo-click="resetUnreadCount(group.get(\'id\')); trackClick(\'Any Group\')" bo-bind="group.get(\'title\')" bo-repeat="group in privateGroupsArray.models track by group.id" bo-repeat-render-id="leftPanelGroupsList">\n                        </a>\n                    </ul>\n                </ul>\n                <!-- <div class="tooltip right" role="tooltip">\n                  <div class="tooltip-arrow"></div>\n                  <div class="tooltip-inner">\n                    Private Groups\n                  </div>\n                </div> -->\n            </li>\n            <li>\n                <i class="cnv-icons-20 Icon1_PublicChannel-01-darkgray onboarding-public-grp-tooltip-slim"></i>\n                <ul class="group-popover-menus public-grps-list">\n                    <li bo-class="{\'ie-shorten\': publicGroupsArray.models.length > 5 }">Public Groups</li>\n                    <ul>\n                        <li bo-show="publicGroupsArray && publicGroupsArray.models.length < 1">\n                            <span bo-if="!userInfo.isGuestUser()" ng-click="createGroup(false, true)">+ Create a public group</span>\n                            <span bo-if="userInfo.isGuestUser()">No public groups available</span>\n                        </li>\n                         <a bo-href="group.get(\'id\') | idToFilterUrlForApp:\'GROUP\'" bo-click="resetUnreadCount(group.get(\'id\')); trackClick(\'Any Group\');" bo-bind="group.get(\'title\')" bo-repeat="group in publicGroupsArray.models track by group.id" bo-repeat-render-id="leftPanelGroupsList">\n                        </a>\n                    </ul>\n                </ul>\n                <!-- <div class="tooltip right" role="tooltip">\n                  <div class="tooltip-arrow"></div>\n                  <div class="tooltip-inner">\n                    Public Groups\n                  </div>\n                </div> -->\n            </li>\n            <a  bo-if="thisUserRole!=\'GUEST\'" bo-href=\'22 | getResourceLinkUrl : [{uid: "1", type: "26"}, {uid: "2", type: "AllGroups"}] : false : "Groups Directory (All Groups)"\' ng-click="trackClick(\'Browse Group Directory\')">\n                <li>\n                    <i class="cnv-icons-20 icon1_directory"></i>\n                    <div class="tooltip right" role="tooltip">\n                      <div class="tooltip-arrow"></div>\n                      <div class="tooltip-inner">\n                        Groups Directory\n                      </div>\n                    </div>\n                </li>\n            </a>\n            <li bo-if="thisUserRole!=\'GUEST\'" ng-click="createGroup(); trackClick(\'New Group\')">\n                <i class="cnv-icons-20 icons2_Add-white onboarding-add-group-tooltip-slim"></i>\n                <div class="tooltip right" role="tooltip">\n                  <div class="tooltip-arrow"></div>\n                  <div class="tooltip-inner">\n                    Create a new group\n                  </div>\n                </div>\n            </li>\n        </ul>\n    </div>\n    <div>\n');
    }
    ]),
    b.module("home/components/cnvInFeedFilterWidget/cnvInFeedFilterWidget.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/components/cnvInFeedFilterWidget/cnvInFeedFilterWidget.tpl.html", '<div ng-if="active" class="filter-bar-wrapper">\n	<div class="dummy-btn"></div><a ng-href="{{filterLinkWithAll}}" ng-class="{active: activeFilter === FILTER_TYPE_ALL}">Posts</a><div class="dummy-btn"></div><a ng-href="{{filterLinkWithFiles}}" ng-class="{active: activeFilter === FILTER_TYPE_FILES}" role="button">Files</a><div class="dummy-btn"></div><a ng-href="{{filterLinkWithImages}}" ng-class="{active: activeFilter === FILTER_TYPE_IMAGES}">Images</a><div class="dummy-btn"></div>\n</div>\n')
    }
    ]),
    b.module("home/components/cnvInviteTeammatesWidget/templates/cnvInviteTeammatesModal.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/components/cnvInviteTeammatesWidget/templates/cnvInviteTeammatesModal.tpl.html", '<div bindonce>\n    <div class="modal-header">\n        <h4 ng-bind="title"></h4>\n        <button type="button" class="close" ng-click="cancel()">×</button>\n    </div>\n    <div class="modal-body">\n        <div>\n            <span bo-bind="autoCompleteFieldLabelText"></span>\n        </div>\n        <div class="to-field-cont">\n            <tags-input ng-model="inviteTo"\n                        placeholder="Invite teammates by adding their comma separated emails"\n                        add-on-comma="true"\n                        add-on-blur="true"\n                        horizontal-flow = "false"\n                        add-from-autocomplete-only="false"\n                        display-property="label"\n                        replace-spaces-with-dashes="false"\n                        allowed-tags-pattern="^[+a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$"\n                        on-esc-key-press="onEscKeyPressInToField()"\n                        on-tag-added="onItemAddedInToField($tag)">\n                <auto-complete\n                        source="getAutoCompleteUserItems($query, numSelected)"\n                        load-history-on-focus="true"\n                        auto-select-first-suggestion="true"\n                        delimiter="@"\n                        min-length="1"\n                        max-results-to-show="4"\n                        suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html">\n                </auto-complete>\n            </tags-input>\n        </div>\n        <div class="add-msg-txt">\n            <span>Add a message</span>\n        </div>\n        <textarea ng-model="messageTxt"/>\n        <div class="footer-content">\n            <button class="btn btn-primary" ng-disabled="inviteTo.length==0" ng-click="inviteTeammates()">Invite</button>\n            <a href="javascript:void(0)" ng-click="cancel()">Cancel</a>\n        </div>\n    </div>\n</div>')
    }
    ]),
    b.module("home/components/cnvLeftPanelGroupsList/cnvLeftPanelGroupsList.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/components/cnvLeftPanelGroupsList/cnvLeftPanelGroupsList.tpl.html", '<ul bindonce class="on-boarding-public-private-group-placeholder-in-panel">\n    <li bo-if="!groupsArray">Loading\n        <label class=\'cnv-spinner spinner-bar\'></label>\n    </li>\n\n    <!-- PRIVATE GROUPS -->\n\n    <li class="section-heading" bo-click="togglePrivateGroupsView()"><span class="onboarding-private-grp-tooltip">PRIVATE</span></li>\n    <li bo-show="privateGroupsArray && privateGroupsArray.models.length < 1" class="group-intro-item">\n        <i style="display:none;" class="cnv-icons-40 privateGroup_icon-darkgray on-boarding-private-group-placeholder-in-panel"></i>\n        <span bo-if="!userInfo.isGuestUser()" ng-click="createGroup(true)">+ Create a private group</span>\n        <span bo-if="userInfo.isGuestUser()">No private groups available</span>\n        <!-- <span>Private groups are for stuff that is need-to-know only</span> -->\n    </li>\n    <li bo-repeat="group in privateGroupsArray.models | limitTo: MAX_PRIVATE_GROUPS_TO_DISPLAY track by group.id" bo-repeat-render-id="leftPanelGroupsList" class="clearfix parent on-boarding-private-group">\n        <div class="pull-left">\n            <i class="cnv-icons-20" bo-class="{\'privateGroup_icon-darkgray\': group.get(\'access\') == \'PRIVATE\' || group.get(\'access\') == \'SECRET\', \'Icon1_PublicChannel-01-darkgray\': group.get(\'access\') == \'PUBLIC\'}"></i>\n            <span class="unread-bubble" bo-if="group.get(\'unreadCount\') > 0">&middot;</span>\n            <a bo-href="group.get(\'id\') | idToFilterUrlForApp:\'GROUP\'" bo-class="{active: group.get(\'id\') == filteredGroupId}" bo-click="resetUnreadCount(group.get(\'id\')); trackClick(\'Any Group\')" bo-bind="group.get(\'title\')">\n        	</a>\n        </div>\n        <div class="pull-right">\n            <div class="wrapper">\n                <cnv-dropdowns cnv-dropdown-ctrl="menuOptions[group.get(\'id\')]"></cnv-dropdowns>\n            </div>\n           <!--  <span class="badge pull-right" bo-if="group.get(\'unreadCount\') > 0" bo-bind="group.get(\'unreadCount\')"></span> -->\n        </div>\n    </li>\n    <li bo-show="privateGroupsCollapsed && privateGroupsArray && privateGroupsArray.models.length > 5"><a href="javascript:void(0)" class="moreButton" bo-click="togglePrivateGroupsView(); trackClick(\'See More Groups\')">See more...</a>\n    </li>\n    <li bo-show="!privateGroupsCollapsed && privateGroupsArray && privateGroupsArray.models.length > 5"><a href="javascript:void(0)" class="moreButton" bo-click="togglePrivateGroupsView(); trackClick(\'Less\')">Less</a>\n    </li>\n\n\n    <!-- PUBLIC GROUPS -->\n\n    <li class="section-heading" bo-click="togglePublicGroupsView()"><span class="onboarding-public-grp-tooltip">PUBLIC</span></li>\n    \n    <li bo-show="publicGroupsArray && publicGroupsArray.models.length < 1" class="group-intro-item">\n        <i style="display:none;" class="cnv-icons-40 Icon1_PublicChannel-01-darkgray on-boarding-public-group-placeholder-in-panel"></i>\n        <!-- <span>Public groups are for company wide discussions</span> -->\n        <span bo-if="!userInfo.isGuestUser()" ng-click="createGroup(false, true)">+ Create a public group</span>\n        <span bo-if="userInfo.isGuestUser()">No public groups available</span>\n    </li>\n    \n    <li bo-repeat="group in publicGroupsArray.models | limitTo: MAX_PUBLIC_GROUPS_TO_DISPLAY track by group.id" bo-repeat-render-id="leftPanelGroupsList" class="clearfix parent on-boarding-public-group">\n        <div class="pull-left">\n            <i class="cnv-icons-20" bo-class="{\'privateGroup_icon-darkgray\': group.get(\'access\') == \'PRIVATE\' || group.get(\'access\') == \'SECRET\', \'Icon1_PublicChannel-01-darkgray\': group.get(\'access\') == \'PUBLIC\'}"></i>\n            <span class="unread-bubble" bo-if="group.get(\'unreadCount\') > 0">&middot;</span>\n            <a bo-href="group.get(\'id\') | idToFilterUrlForApp:\'GROUP\'" bo-class="{active: group.get(\'id\') == filteredGroupId}" bo-click="resetUnreadCount(group.get(\'id\')); trackClick(\'Any Group\')" bo-bind="group.get(\'title\')">\n            </a>\n        </div>\n        <div class="pull-right">\n            <div class="wrapper">\n                <cnv-dropdowns cnv-dropdown-ctrl="menuOptions[group.get(\'id\')]"></cnv-dropdowns>\n            </div>\n           <!--  <span class="badge pull-right" bo-if="group.get(\'unreadCount\') > 0" bo-bind="group.get(\'unreadCount\')"></span> -->\n        </div>\n    </li>\n    <li bo-show="publicGroupsCollapsed && publicGroupsArray && publicGroupsArray.models.length > 5"><a href="javascript:void(0)" class="moreButton" bo-click="togglePublicGroupsView(); trackClick(\'See More Groups\')">See more...</a>\n    </li>\n    <li bo-show="!publicGroupsCollapsed && publicGroupsArray && publicGroupsArray.models.length > 5"><a href="javascript:void(0)" class="moreButton" bo-click="togglePublicGroupsView(); trackClick(\'Less\')">Less</a>\n    </li>\n\n</ul>\n')
    }
    ]),
    b.module("home/components/cnvSharePostWidget/cnvSharePostWidget.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/components/cnvSharePostWidget/cnvSharePostWidget.tpl.html", '<div class="modal-header">\n    <h4>Share with others</h4>\n    <button type="button" class="close" ng-click="dismiss()">×</button>\n</div>\n\n<form name="shareWithOthers" ng-submit="onSubmit()" role="form">\n\n	<div class="modal-body sharepost">\n		<p>Enter names of people or groups that you want to share this post with.</p><br />\n		<p><b>People and Groups</b></p>\n	    <tags-input class="to-field"\n            ng-model="sharingInfo"\n            placeholder="+Add more"\n            no-tags-indicator="false" \n            add-on-comma="false"\n            add-on-blur="false"\n            horizontal-flow = "false"\n            add-from-autocomplete-only="true"\n            display-property="label"\n            replace-spaces-with-dashes="false"\n            on-esc-key-press="onEscKeyPressInToField()"\n            on-tag-added="onItemAddedInToField($tag)"\n            on-tag-removed="onItemRemovedInToField($tag)"\n            on-ctrl-cmd-enter="onCtrlOrCmdEnterPressInTextEditor()">\n          <auto-complete\n              source="getShareWithDropdownItems($query)"\n              load-history-on-focus="true"\n              auto-select-first-suggestion="true" \n              delimiter="@"\n              min-length="1"\n              suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html">\n          </auto-complete>\n        </tags-input>\n\n	    <!-- <div class="form-group">\n	      <span>Link to</span>\n	      <input type="url" class="form-control" name="url" ng-model="data.url" ng-change="onChange()" ng-paste="onPaste()" maxlength="255" required>\n	    </div>\n	    <div class="form-group">\n	      <span ng-class="{\'resolving\': resolving}">Text to display</span>\n	      <input type="text" class="form-control" name="resource_name" ng-model="data.resource_name" maxlength="255">\n	    </div>\n\n	    <a class="test-link" href="javascript:void(0);" ng-disabled="!data.url" >Test Link</a> -->\n\n	</div>\n	\n	<div class="modal-footer">\n	    <button type="submit" ng-disabled="(!submitAnyway && !dirty) || (submitAnyway && sharingInfo.length==0)" class="btn btn-primary">Publish</button>\n	</div>\n\n</form>')
    }
    ]),
    b.module("home/components/createGroupWidget/createGroupModal.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/components/createGroupWidget/createGroupModal.tpl.html", '<div bindonce>\n	<div class="modal-header">\n		<!--<i></i>-->\n		<h4 bo-bind="title"></h4>\n		<button type="button" class="close" ng-click="cancel()">×</button>\n	</div>\n\n	<div class="modal-body">\n\n		<div bo-if="STATE==CREATE_GROUP_STEP1" style="padding: 15px 30px;">\n			<div ng-include="\'home/components/createGroupWidget/templates/createGroupType.tpl.html\'"></div>\n		</div>\n\n		<div bo-if="STATE==CREATE_GROUP_STEP2" style="padding: 15px 30px;">\n			<div ng-include="\'home/components/createGroupWidget/templates/createGroupDetails.tpl.html\'"></div>\n		</div>\n\n		<div bo-if="STATE==CREATE_GROUP_STEP3" style="padding: 0px;">\n			<div ng-include="\'home/components/createGroupWidget/templates/createGroupInviteMembers2.tpl.html\'"></div>\n		</div>\n\n	</div>\n</div>\n')
    }
    ]),
    b.module("home/components/createGroupWidget/templates/body.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/components/createGroupWidget/templates/body.tpl.html", '<!-- code for create a group forms -->\n<h6>Group Name</h6>\n<input type="text" class="form-control" ng-model="createGroupData.name" required />\n<h6>Description</h6>\n<textarea class="form-control" ng-model="createGroupData.description" required></textarea>\n\n<div class="radio">\n  <label>\n    <input type="radio" name="groupOptions" value="1" checked>\n    Public - all network members\n  </label>\n</div>\n\n<div class="radio">\n	<label>\n		<input type="radio" name="groupOptions" value="2">\n		Private - only invited members\n	</label>\n</div>')
    }
    ]),
    b.module("home/components/createGroupWidget/templates/createGroupDetails.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/components/createGroupWidget/templates/createGroupDetails.tpl.html", '<div class="group-create-details">\n\n	<cnv-create-group-dom-manpltr></cnv-create-group-dom-manpltr>\n\n	<div class="">\n		<div class="form-group">\n			<span>Name</span>\n			<input class="group-name" maxlength="255" placeholder="e.g Marketing" ng-model="groupValidator.groupName" autofocus>\n\n			<div class="group-alert-banner group-alert-slideDown" bo-if="showGrpAlreadyExistsAlert && existedGroupDetails.groupAccess==\'PUBLIC\'">\n				<span bo-if="existedGroupDetails.is_Member">\n					You\'re already a member of that group. <a href="javascript:void(0)" ng-click="resetGroupName()">Try another name</a> to continue or <a bo-href="existedGroupDetails.groupId | idToFilterUrl:\'GROUP\'" ng-click="cancel()">go to group.</a>\n				</span>\n				<span bo-if="!existedGroupDetails.is_Member">\n					A group with that name already exists. <a href="javascript:void(0)" ng-click="resetGroupName()">Try another name</a> to continue or <a href="javascript:void(0)" ng-click="joinGroup(existedGroupDetails.groupId)">join group.</a>\n				</span>\n			</div>\n			<div class="group-alert-banner group-alert-slideDown" bo-if="showGrpAlreadyExistsAlert && (existedGroupDetails.groupAccess==\'PRIVATE\' || existedGroupDetails.groupAccess==\'SECRET\')">\n				<span bo-if="existedGroupDetails.is_Member">\n					You\'re already a member of that group. <a href="javascript:void(0)" ng-click="resetGroupName()">Try another name</a> to continue or <a bo-href="existedGroupDetails.groupId | idToFilterUrl:\'GROUP\'" ng-click="cancel()">go to group.</a>\n				</span>\n				<span bo-if="!existedGroupDetails.is_Member && existedGroupDetails.groupAccess==\'PRIVATE\'">\n					A group with that name already exists. <a href="javascript:void(0)" ng-click="resetGroupName()">Try another name</a> to continue or <a bo-href="existedGroupDetails.groupId | idToFilterUrl:\'GROUP\'" ng-click="cancel()">request to join group.</a>\n				</span>\n				<span bo-if="!existedGroupDetails.is_Member && existedGroupDetails.groupAccess==\'SECRET\'">\n					A group with that name already exists. <a href="javascript:void(0)" ng-click="resetGroupName()">Try another name</a> to continue.\n				</span>\n			</div>\n			<div class="clear-fix"></div>\n		</div>\n\n		<div class="form-group">\n			<span class="optional-placeholder">Description</span>\n			<textarea cnv-handle-placeholder class="group-desc" rows="3" maxlength="250" placeholder="Add some more information about your group. This description will help others when they search for the group or need more detail about what it contains."></textarea>\n			<div class="clear-fix"></div>\n		</div>\n	</div>\n\n	<hr>\n\n	<div class="form-group" bo-if="GROUP_TYPE==GROUP_TYPE_PRIVATE">\n		<span class="checkBoxLabel">List in group directory</span>\n		<input id="CrtGrp1" class="group-vis cnv-checkbox" type="checkbox" value="" ng-click="toggleGroupVisibility()"><label for="CrtGrp1"></label>\n		<div>\n			<span class="meta-info">This lets others in your company request access</span>\n		</div>\n		<div class="clear-fix"></div>\n	</div>\n\n	<div class="form-group" bo-if="GROUP_TYPE==GROUP_TYPE_PUBLIC">\n		<span class="checkBoxLabel">Add everyone in your company automatically</span>\n		<input id="CrtGrp2" class="group-auto-follow cnv-checkbox" type="checkbox" value="" ng-click="toggleAutoFollowEnabled()"><label for="CrtGrp2"></label>\n		<div>\n			<span class="meta-info">Good for company-wide news or discussions</span>\n		</div>\n		<div class="clear-fix"></div>\n	</div>\n\n	<div class="form-group">\n		<span class="checkBoxLabel">Allow group members to add and remove users</span>\n		<input id="CrtGrp3" class="group-edit-settings cnv-checkbox" type="checkbox" value="" ng-click="toggleEditGroupSettings()"><label for="CrtGrp3"></label>\n		<div class="clear-fix"></div>\n	</div>\n\n</div>\n\n<section class="submit">\n	<span bo-if="GROUP_TYPE==GROUP_TYPE_PUBLIC" class="info">\n		To restrict access to group content, <a href="javascript:void(0);" ng-click="switchViewTo(GROUP_TYPE_PRIVATE)">create a private group</a> instead.\n	</span>\n	<span bo-if="GROUP_TYPE==GROUP_TYPE_PRIVATE" class="info">\n		If you want to share with a wider audience, <a href="javascript:void(0);" ng-click="switchViewTo(GROUP_TYPE_PUBLIC)">create a public group</a> instead.\n	</span>\n\n	<button ng-if="GROUP_TYPE==GROUP_TYPE_PUBLIC && GROUP_EXTENDED_PROPERTIES.AUTO_FOLLOW_ENABLED==true && groupValidator.groupName.length>0" class="btn btn-primary" ng-click="showAlertIfGroupExists(true)" ng-disabled="isGrpNameEmptyAndGrpNameExists() || isCreateGroupAlreadyInProgress">Create group</button>\n	<button id="crtGrpNxtBtn" ng-if="!(GROUP_TYPE==GROUP_TYPE_PUBLIC && GROUP_EXTENDED_PROPERTIES.AUTO_FOLLOW_ENABLED==true && groupValidator.groupName.length>0)" class="btn btn-primary" ng-click="updateCreateGroupState(CREATE_GROUP_STEP3)" ng-disabled="isGrpNameEmptyAndGrpNameExists()">Next</button>\n\n	<div class="clear-fix"></div>\n</section>\n')
    }
    ]),
    b.module("home/components/createGroupWidget/templates/createGroupInviteMembers.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/components/createGroupWidget/templates/createGroupInviteMembers.tpl.html", '<div class="invite-members">\n    <div class="suggestions-list">\n        <span class="multi-line">Invite members<br>or <a href="javascript:void(0)" bo-click="importFromAdrsbk()">import from<br>address book</a></span>\n\n        <div class="to-field-cont" ng-class="{\'no-placeholder\': inviteTo.length>0}">\n            <tags-input class="to-field"\n                        ng-model="inviteTo"\n                        placeholder="Add members by name or comma separated emails"\n                        add-on-comma="true"\n                        add-on-blur="true"\n                        horizontal-flow = "false"\n                        add-from-autocomplete-only="false"\n                        display-property="label"\n                        replace-spaces-with-dashes="false"\n                        allowed-tags-pattern="^[+a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$"\n                        on-esc-key-press="onEscKeyPressInToField()"\n                        on-tag-added="onItemAddedInToField($tag)">\n                <auto-complete\n                        source="getInviteToDropdownItems($query, numSelected)"\n                        load-history-on-focus="true"\n                        auto-select-first-suggestion="true"\n                        delimiter="@"\n                        min-length="1"\n                        max-results-to-show="4"\n                        suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html">\n                </auto-complete>\n            </tags-input>\n        </div>\n\n        <div class="clear-fix"></div>\n    </div>\n\n    <section class="submit">\n        <button class="btn btn-primary" ng-disabled="isCreateGroupAlreadyInProgress" ng-click="submit()">Create group</button>\n        <a href="javascript:void(0)" ng-click="updateCreateGroupState(CREATE_GROUP_STEP2, true)">Back</a>\n    </section>\n\n</div>')
    }
    ]),
    b.module("home/components/createGroupWidget/templates/createGroupInviteMembers2.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/components/createGroupWidget/templates/createGroupInviteMembers2.tpl.html", '<cnv-invites></cnv-invites>\n\n<section class="footer submit">\n    <button class="btn btn-primary" ng-disabled="isCreateGroupAlreadyInProgress" ng-click="submit()">Create group</button>\n    <a href="javascript:void(0)" style="float: right;" ng-click="updateCreateGroupState(CREATE_GROUP_STEP2, true)">Back</a>\n\n    <a class="import-widgets-reveal-action" ng-if="!invitesCtrl.widgets.isEnable && invitesCtrl.masterList.length" ng-click="invitesCtrl.widgets.enable()">Import</a>\n    <ng-include ng-if="invitesCtrl.masterList.length" src="\'invites/templates/cnvInvitesInlineWidgets.tpl.html\'"></ng-include>\n    <div class="clear"></div>\n</section>\n')
    }
    ]),
    b.module("home/components/createGroupWidget/templates/createGroupType.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/components/createGroupWidget/templates/createGroupType.tpl.html", '<div class="group-create-type">\n	<div>\n		<div bo-class="{selected: GROUP_TYPE==GROUP_TYPE_PUBLIC}" ng-click="toggleGroupType(GROUP_TYPE_PUBLIC)">\n			<div><i class="cnv-icons-20 Icon1_PublicChannel-01-darkgray" style="margin-right: 14px;"></i>Public</div>\n			<span class="meta">Anyone in your network can access. You like transparency and open discussions.</span>\n		</div>\n	</div>\n\n	<div>\n		<div bo-class="{selected: GROUP_TYPE==GROUP_TYPE_PRIVATE}" ng-click="toggleGroupType(GROUP_TYPE_PRIVATE)">\n			<div><i class="cnv-icons-20 privateGroup_icon-darkgray" style="margin-right: 14px;"></i>Private</div>\n			<span class="meta">You control who has access. This stuff is need-to-know only.</span>\n		</div>\n	</div>\n</div>\n\n<section class="submit">\n	<button class="btn btn-primary" ng-click="updateCreateGroupState(CREATE_GROUP_STEP2)">Next</button>\n	<div class="clear-fix"></div>\n</section>')
    }
    ]),
    b.module("home/components/createGroupWidget/templates/dialog.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/components/createGroupWidget/templates/dialog.tpl.html", '<div cnv-load-template template1="{{headerTemplate}}" template2="{{bodyTemplate}}" template3="{{footerTemplate}}"></div>')
    }
    ]),
    b.module("home/components/downloadAppsModal/downloadAppsModal.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/components/downloadAppsModal/downloadAppsModal.tpl.html", '<div class="modal-body">\n    <i class="cnv-icons-10 icons2_Close-white" ng-click="dismissModal()"></i> \n    <div class="before-mobile-apps-download" ng-if="!MobileDownloadFlag">\n        <div class="upper-blue-half-modal">\n            <div ng-show="!isNative" class="btn-group">\n                <label class="btn btn-primary download-apps-widget-toggle-btn" ng-click="desktopTabClicked($event)" ng-model="models.radioModel" btn-radio="\'Desktop\'">Desktop</label>\n                <label class="btn btn-primary download-apps-widget-toggle-btn" ng-click="mobileTabClicked($event)" ng-model="models.radioModel" btn-radio="\'Mobile\'" >Mobile</label>\n            </div>\n\n            <!-- use ng-show for this div. because in IE and Safari images get requests got failed due to convo-app downlaod url is in process. -->\n            <div class="Desktop-upper-half" ng-show="models.radioModel === MODES.DESKTOP">\n                <div class="convo-app-icon desktop" ></div> \n                <p class="install-text">Install the desktop app</p>\n            </div>\n            <!-- use ng-show for this div. because in IE and Safari images get requests got failed due to convo-app downlaod url is in process. -->\n            <div class="Mobile-upper-half" ng-show="models.radioModel === MODES.MOBILE">\n                <p class="text-after-desktop-download" ng-if="DesktopDownloadFlag">Great! Downloading now...</p>\n                <div class="convo-app-icon mobile" ng-style="{\'margin-top\': DesktopDownloadFlag ? 27 : 100 }"></div> \n                <p class="install-text" ng-bind-html="mobileInstallText" ></p>\n            </div>\n        </div>\n        \n        <div class="lower-white-half-modal">\n                <a class="download-apps-widget-btn-wrapper" href="{{::HTML_APP_DOWNLOAD_URL}}" ng-click="downloadNativeApp($event)" ng-if="models.radioModel === MODES.DESKTOP">\n                    <button class="btn btn-lg btn-inline btn-primary download-apps-widget-btn">Download Now</button>\n                </a>\n                <!-- use ng-show for this div. because in IE and Safari images get requests got failed due to convo-app downlaod url is in process. -->\n                <div class="btn-downlpad-mobile-apps" ng-show="models.radioModel === MODES.MOBILE">\n                    <div class="download-app-store" ng-click="sendInvitation(\'ios\')" > </div>\n                    <div class="download-play-store" ng-click="sendInvitation(\'android\')"></div>\n                </div>\n        </div>\n        <!-- use ng-show for this div. because in IE and Safari images get requests got failed due to convo-app downlaod url is in process. -->\n        <div class="overlay-icon-downlod laptop" ng-show="models.radioModel === MODES.DESKTOP"></div>\n        <!-- use ng-show for this div. because in IE and Safari images get requests got failed due to convo-app downlaod url is in process. -->\n        <div class="overlay-icon-downlod mobile" ng-show="models.radioModel === MODES.MOBILE"></div>\n    </div>\n    <div class="after-mobile-apps-download" ng-if="MobileDownloadFlag">\n        <div class="upper-blue-half-modal">\n             <i class="cnv-icons-10 icons2_Close-white" ng-click="dismissModal()"></i>\n             <div class="mobile-apps-download-content" ng-style="{\'padding\': DesktopDownloadFlag || isNative ? \'145px 0px\' : \'55px 0px\' }">\n                <div class="email-icon"></div>\n                <p class="mobile-apps-download-semibold-text">Please check your email <br />from your mobile device.</p>\n                <p class="mobile-apps-download-regular-text">We\'ve sent a download link to: <br /> {{::userInfo.getEmail()}}</p>\n             </div>\n        </div>\n        <div class="lower-white-half-modal" ng-if="!DesktopDownloadFlag && !isNative">\n            <p class="mobile-apps-download-desktop-text">Don\'t forget to install <br /> the desktop app.</p>\n            <a class="download-apps-widget-btn-wrapper in-mob-wrap" href="{{::HTML_APP_DOWNLOAD_URL}}" ng-click="downloadNativeApp($event)">\n                <button class="btn btn-md btn-inline btn-primary download-apps-widget-btn in-mobile">Download Now</button>\n            </a>\n            <div class="overlay-icon-downlod laptop in-mobile"></div>\n        </div>\n    </div>\n</div>')
    }
    ]),
    b.module("home/components/groupNotificationsWidget/templates/groupNotificationsModal.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/components/groupNotificationsWidget/templates/groupNotificationsModal.tpl.html", '<div bindonce>\n    <div class="modal-header">\n        <h4 ng-bind="title"></h4>\n        <button type="button" class="close" ng-click="cancel()">×</button>\n    </div>\n    <div class="modal-body">\n        <div bo-if="!initialized" class="loading-spinner">\n            <img src="assets/img/feed/loading-spin.svg" alt="Loading icon" />\n        </div>\n        <div bo-if="initialized">\n            <span>These are your notification settings for the <b bo-bind="group.get(\'title\')"></b> group. To change your default notification settings, go to <a bo-href="12 | getResourceLinkUrl:[{uid: 0, type: \'9\'}, {uid: \'0\', type: \'notificationsSettings\'}]:null:\'Notification Settings\'" ng-click="cancel()">Notifications</a>.</span>\n            <div class="notif-controls">\n                <div>\n                    <span>Desktop</span><input id="GrpNtf1" ng-true-value="1" ng-false-value="0" ng-model="groupNotifications.desktop" ng-click="onEnableDisableNotification()" ng-disabled="isUpdatingSettings" class="cnv-checkbox" type="checkbox"/><label for="GrpNtf1"></label>\n                </div>\n                <div>\n                    <span>Notification center</span><input id="GrpNtf2" ng-true-value="1" ng-false-value="0" ng-model="groupNotifications.in_app" ng-click="onEnableDisableNotification()" ng-disabled="isUpdatingSettings" class="cnv-checkbox" type="checkbox"/><label for="GrpNtf2"></label>\n                </div>\n                <div>\n                    <span>Mobile</span><input id="GrpNtf3" ng-true-value="1" ng-false-value="0" ng-model="groupNotifications.mobile" ng-click="onEnableDisableNotification()" ng-disabled="isUpdatingSettings" class="cnv-checkbox" type="checkbox"/><label for="GrpNtf3"></label>\n                </div>\n                <div>\n                    <span>Email</span><input id="GrpNtf4" ng-true-value="1" ng-false-value="0" ng-model="groupNotifications.email" ng-click="onEnableDisableNotification()" ng-disabled="isUpdatingSettings" class="cnv-checkbox" type="checkbox"/><label for="GrpNtf4"></label>\n                </div>\n            </div>\n            <div class="footer-content">\n                <button class="btn btn-primary" bo-click="saveNotificationSettings()" ng-disabled="!isAnySettingUpdated()">Save Changes</button>\n                <a href="javascript:void(0)" ng-click="cancel()">Cancel</a>\n            </div>\n        </div>\n    </div>\n</div>')
    }
    ]),
    b.module("home/components/resourceLikeInfoWidget/templates/multipleResourceLikeInfoModal.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/components/resourceLikeInfoWidget/templates/multipleResourceLikeInfoModal.tpl.html", '<perfect-scrollbar class="scrollable" wheel-propagation="false" wheel-speed="50" refresh-on-change="likeDetails.resources">\n    <div ng-repeat="rsc in likeDetails.resources track by $index">\n        <div class="modal-header sub-header attch" bo-if="$index == 1"><b>People who like attachments</b></div>\n        <div class="modal-header sub-header sbrsc" bo-if="$index >= 1">\n            <a bo-href="rsc.rscLink" bo-bind="rsc.rscName | limitText:30" ng-click="cancel()"></a>\n        </div>\n        <div class="like-info-wrapper" ng-repeat="likedByUser in rsc.users track by $index">\n            <div class="dp-wrapper">\n                <a bo-href="likedByUser.id | idToFilterUrl:\'USER\'" ng-click="cancel()">\n                    <cnv-user-profile-image user-id="likedByUser.id" fullName="likedByUser.name" profileType="likedByUser.profile_image_type" profileVersion="likedByUser.profile_image_version"></cnv-user-profile-image>\n                </a>\n            </div>\n            <div class="details-wrapper">\n                <span>\n                    <a bo-href="likedByUser.id | idToFilterUrl:\'USER\'" ng-click="cancel()">\n                        <b bo-bind="likedByUser.name | limitText:30"></b>\n                    </a>\n                </span>\n                <span class="secondary-text" bo-bind="likedByUser.email"></span>\n            </div>\n            <hr/>\n        </div>\n    </div>\n</perfect-scrollbar>')
    }
    ]),
    b.module("home/components/resourceLikeInfoWidget/templates/resourceLikeInfoModal.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/components/resourceLikeInfoWidget/templates/resourceLikeInfoModal.tpl.html", '<div bindonce>\n    <div class="modal-header">\n        <h4 ng-bind="title"></h4>\n        <button type="button" class="close" ng-click="cancel()">×</button>\n    </div>\n    <div class="modal-body">\n        <div class="spinner-container" bo-if="modalDetails.state == \'wait\'">\n            <i class="cnv-circle-spinner-small"></i> Loading\n        </div>\n        <div bo-if="modalDetails.state == \'active\'">\n            <div bo-if="modalDetails.modalId == \'pstMd\'">\n                <div ng-include="\'home/components/resourceLikeInfoWidget/templates/multipleResourceLikeInfoModal.tpl.html\'"></div>\n            </div>\n            <div bo-if="modalDetails.modalId == \'cmmMd\' || modalDetails.modalId == \'pstSbRscMd\'">\n                <div ng-include="\'home/components/resourceLikeInfoWidget/templates/singleResourceLikeInfoModal.tpl.html\'"></div>\n            </div>\n        </div>\n    </div>\n    <!--<div class="modal-footer">-->\n    <!--</div>-->\n</div>')
    }
    ]),
    b.module("home/components/resourceLikeInfoWidget/templates/singleResourceLikeInfoModal.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/components/resourceLikeInfoWidget/templates/singleResourceLikeInfoModal.tpl.html", '<perfect-scrollbar class="scrollable" wheel-propagation="false" wheel-speed="50" refresh-on-change="likeDetails.users">\n    <div class="like-info-wrapper" ng-repeat="likedByUser in likeDetails.users track by $index">\n        <div class="dp-wrapper">\n            <a bo-href="likedByUser.id | idToFilterUrl:\'USER\'" ng-click="cancel()">\n                <cnv-user-profile-image user-id="likedByUser.id" fullName="likedByUser.name" profileType="likedByUser.profile_image_type" profileVersion="likedByUser.profile_image_version"></cnv-user-profile-image>\n            </a>\n        </div>\n        <div class="details-wrapper">\n            <span>\n                <a bo-href="likedByUser.id | idToFilterUrl:\'USER\'" ng-click="cancel()">\n                    <b bo-bind="likedByUser.name | limitText:30"></b>\n                </a>\n            </span>\n            <span class="secondary-text"  bo-bind="likedByUser.email"></span>\n        </div>\n        <hr/>\n    </div>\n</perfect-scrollbar>');
    }
    ]),
    b.module("home/components/selectFolderWidget/templates/selectFolderModal.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/components/selectFolderWidget/templates/selectFolderModal.tpl.html", '<div bindonce>\n    <div class="modal-header">\n        <h4 ng-bind="title"></h4>\n        <button type="button" class="close" ng-click="cancel()">×</button>\n    </div>\n    <div class="modal-body" >\n        <span ng-show="isDirectoryEmpty">This folder does not have any folders</span>\n        <ul ng-show="!fetchingDirectory" class="folder-list">\n            <li ng-repeat="directory in directoryList" value="{{directory.path}}" >\n                <a ng-click="getChildren(directory.name, directory.path);" href="javascript:void(0);">{{directory.name}}</a>\n            </li>\n        </ul>\n        \n    </div>\n    <div class="modal-footer">\n        <button class="integration-action-finish btn btn-primary" type=\'button\' ng-click="selectFolder();" ng-bind-html="selectButtonText" ng-disabled="fetchingDirectory"></button>\n        <button class="integration-action-finish btn btn-primary" type=\'button\' ng-click="getParent();" ng-bind-html="backButtonText" ng-show="canGoBack" ng-disabled="fetchingDirectory"></button>\n    </div>\n</div>')
    }
    ]),
    b.module("home/components/sharedInfoWidget/templates/sharedInfoModal.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/components/sharedInfoWidget/templates/sharedInfoModal.tpl.html", '<div bindonce>\n    <div class="modal-header">\n        <h4 ng-bind="title"></h4>\n        <button type="button" class="close" ng-click="cancel()">×</button>\n    </div>\n    <div class="modal-body">\n        <perfect-scrollbar class="scrollable" wheel-propagation="false" wheel-speed="50" refresh-on-change="sharedInfo">\n            <div class="share-info-wrapper" ng-repeat="shareInfo in sharedInfo track by $index">\n                <span class="dp-wrapper">\n                    <a bo-if="shareInfo.typ == \'USER\'" bo-href="shareInfo.id | idToFilterUrl:\'USER\'" ng-click="cancel()">\n                        <cnv-user-profile-image user-id="shareInfo.id" source="\'Feed\'"></cnv-user-profile-image>\n                    </a>\n                    <a bo-if="shareInfo.typ == \'GROUP\'" bo-href="shareInfo.id | idToFilterUrl:\'GROUP\'" ng-click="cancel()">\n                        <span bo-if="shareInfo.access == \'PUBLIC\'" class="Icon1_PublicChannel-01-lightgray"></span>\n                        <span bo-if="shareInfo.access == \'PRIVATE\' || shareInfo.access == \'SECRET\'" class="privateGroup_icon-lightgray"></span>\n                    </a>\n                </span>\n                <span class="details-wrapper">\n                    <span>\n                        <a bo-if="shareInfo.typ == \'USER\'" bo-href="shareInfo.id | idToFilterUrl:\'USER\'" ng-click="cancel()">\n                            <b bo-bind="shareInfo.name | limitText:30"></b>\n                        </a>\n                        <a bo-if="shareInfo.typ == \'GROUP\'" bo-href="shareInfo.id | idToFilterUrl:\'GROUP\'" ng-click="cancel()">\n                            <b bo-bind="shareInfo.name | limitText:30"></b>\n                        </a>\n                    </span>\n                    <span bo-if="shareInfo.typ == \'USER\'">&nbsp;</span>\n                </span>\n                <hr/>\n            </div>\n        </perfect-scrollbar>\n    </div>\n    <!--<div class="modal-footer"></div>-->\n</div>')
    }
    ]),
    b.module("home/groupView/centerPanelWidgets/cnvHomeCenterPanelGroupPinnedPostWidget/cnvHomeCenterPanelGroupPinnedPostWidget.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/groupView/centerPanelWidgets/cnvHomeCenterPanelGroupPinnedPostWidget/cnvHomeCenterPanelGroupPinnedPostWidget.tpl.html", '<ul class="pinned-post-center-widget-wrapper" style="list-style: none; margin: 0; text-align: left" bo-show="pinnedContents.length > 0"  bindonce>\n	<li ng-repeat="pin in pinnedContents | limitTo: MAXIMUM_PINS_TO_SHOW">\n		<i class="cnv-icons-12 Icon1_Thumbtack-01" style="opacity: .5;"></i>\n		<a bo-if="pin.type == \'WEB\'" bo-href="pin.url" target="_blank" bo-bind="pin.resource_name"></a>\n		<a bo-if="pin.type == \'SCRYBE\'" bo-href="pin.app_instance_id | getResourceLinkUrl: [{ type: pin.resource_type, uid: pin.resource_id, title: pin.resource_name }]" bo-bind="pin.resource_name"></a>\n		<span class="dim-text" bo-if="pin.user_id">by</span>\n		<a bo-href="pin.user_id | idToFilterUrl : \'USER\'" bo-if="pin.user_id" bo-bind="pin.user_id | idToName"></a>\n		<!-- <span class="dim-text" bo-if="pin.user_id" bo-bind="pin.user_id | idToName"></span> -->\n	</li>\n	<li bo-if="pinnedContents.length > 3 && !expand" style="padding-left: 20px;">\n		<a href="javascript:void(0)" bo-bind="(\'+\') + (pinnedContents.length - 3) + \' more\'" ng-click="showAll()"></a>\n	</li>\n	<li bo-if="expand" style="padding-left: 20px;">\n		<a href="javascript:void(0)" ng-click="showLess()">Less</a>\n	</li>\n</ul>\n')
    }
    ]),
    b.module("home/groupView/cnvHomeCenterPanelGroupHeader.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/groupView/cnvHomeCenterPanelGroupHeader.tpl.html", '<div class="floated-left">\n	<span id="feed_title">\n		<strong><span ng-bind="feed_title"></span></strong>\n        <cnv-dropdowns ng-if="showGroupDropdown && (isAdminMode || (!group.isNonMemberPrivateGroup() && !group.isNonMemberPublicGroup()))" cnv-dropdown-ctrl="groupDropdownCtrl"></cnv-dropdowns>\n    </span>\n</div>\n\n<div class="clear-fix"></div>\n\n<div class="feed-filter-description" ng-if="isAdminMode || (!group.isNonMemberPrivateGroup() && !group.isNonMemberPublicGroup())">\n\n	<!-- <div bo-if="model.state == STATE_WAITING">\n		...\n	</div> -->\n\n	<div bo-if="model.state == STATE_NORMAL">\n		<span class="description-text" bo-if="item.description">\n			<span bo-if="model.truncated" bo-text="item.description | limitText:150"></span>\n			<span bo-if="!model.truncated" bo-text="item.description"></span>\n			<a bo-if="model.truncated && item.description.length > 150" href="javascript:void(0);" ng-click="toggle()">See More</a>\n			<a bo-if="!model.truncated" href="javascript:void(0);" ng-click="toggle()">Less</a>\n			<!-- <span class="edit-placeholder" bo-show="isGroupAdminOrNetworkAdminMode()" ng-click="enableEdit()"></span> -->\n			<i class="description-edit-pencil" bo-show="!isAccountAnnouncementsGroup() && isGroupAdminOrNetworkAdminMode()" ng-click="enableEdit()"></i>\n			<span bo-if="model.error" class="glyphicon glyphicon-warning-sign error" cnv-popover cnv-popover-ctrl="\'There seems to be some problem reaching server, Try again.\'"></span>\n		</span>\n\n		<span class="add-description" bo-show="isGroupAdminOrNetworkAdminMode() && !item.description" ng-click="enableEdit()">Add a description</span>\n	</div>\n\n	<div bo-if="model.state == STATE_ERROR">\n		<span bo-if="model.error" class="glyphicon glyphicon-warning-sign error" cnv-popover cnv-popover-ctrl="\'There seems to be some problem reaching server, Try again.\'"></span>\n	</div>\n\n	\n	<div bo-if="model.state == STATE_EDIT">\n		<textarea rows="2" ng-model="item.description" maxlength="250" ng-disabled="model.saving" ng-blur="initSubmit()" ng-keydown="onKeydown($event)" onfocus="this.value = this.value;" autofocus></textarea>\n	</div>\n</div>\n')
    }
    ]),
    b.module("home/groupView/groupsRightPanel.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/groupView/groupsRightPanel.tpl.html", '<div class="group-right-panel-wrapper" ng-controller="GroupsRightPanelCtrl" bindonce>\n	\n	<cnv-group-members-list-widget bo-if="group"></cnv-group-members-list-widget>\n\n' + "	<hr ng-if=\"group.get('group_status') != 'DELETED' && (isAdminMode || (!group.isNonMemberPrivateGroup() && !group.isNonMemberPublicGroup() && (isGroupAdminOrNetworkAdminMode() || group.get('membersCanInvite'))))\" />\n\n	<cnv-group-invite-widget ng-if=\"group.get('group_status') != 'DELETED' && (isAdminMode || (!group.isNonMemberPrivateGroup() && !group.isNonMemberPublicGroup() && (isGroupAdminOrNetworkAdminMode() || group.get('membersCanInvite'))))\"></cnv-group-invite-widget>\n\n	<!-- <hr bo-if=\"isGroupAdminOrNetworkAdminMode() || group.get('membersCanSetupIntegrations')\"/> -->\n\n	<!-- <cnv-group-integrations-widget bo-if=\"isGroupAdminOrNetworkAdminMode() || group.get('membersCanSetupIntegrations')\"></cnv-group-integrations-widget> -->\n\n	<!-- <hr bo-if=\"isGroupAdminOrNetworkAdminMode() || group.get('membersCanPinContent')\"/> -->\n\n	<!-- <cnv-group-pinned-posts-widget bo-if=\"isGroupAdminOrNetworkAdminMode() || group.get('membersCanPinContent')\"></cnv-group-pinned-posts-widget> -->\n\n	<hr ng-if=\"isAdminMode || (!group.isNonMemberPrivateGroup() && !group.isNonMemberPublicGroup())\"/>\n	\n	<cnv-group-email-sharing-widget ng-if=\"group && group.get('groupEmail') && (isAdminMode || (!group.isNonMemberPrivateGroup() && !group.isNonMemberPublicGroup()))\"></cnv-group-email-sharing-widget>\n	\n</div>")
    }
    ]),
    b.module("home/groupView/rightPanelWidgets/cnvAddPinContentModal.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/groupView/rightPanelWidgets/cnvAddPinContentModal.tpl.html", '<div class="modal-header">\n    <h4 ng-bind="(title ? title : \'Add pinned content to this group\')"></h4>\n    <button type="button" class="close" ng-click="dismiss()">×</button>\n</div>\n\n<form name="addPinContent" ng-submit="onSubmit()" role="form">\n\n	<div class="modal-body">\n\n		<div ng-if="!providedDesc">\n			<p><b>Not sure what to put in this box?</b></p>\n			<p>Pin a post or website that your team needs to reference frequently and find it easily<br>on the right of your group. These can be specs, resources or a how-to doc.</p>\n		</div>\n\n		<div ng-if="providedDesc">\n			<span>{{::providedDesc}}</span>\n		</div>\n\n	    <div class="form-group">\n	      <span>Link to</span>\n	      <input class="form-control" name="url" ng-model="data.url" ng-change="onChange()" ng-paste="onPaste()" ng-class="{\'ng-invalid-url\': !validateUrl() && hasUserTyped, \'ng-invalid-required\': !data.url && hasUserTyped}" cnv-autofocus=".modal-dialog">\n	    </div>\n	    <div class="form-group">\n	      <span ng-class="{\'resolving\': resolving}">Text to display</span>\n	      <input type="text" class="form-control" name="resource_name" ng-model="data.resource_name" maxlength="255">\n	    </div>\n\n	    <a class="test-link" href="javascript:void(0);" ng-disabled="!validateUrl()" ng-click="test()">Test Link</a>\n\n	</div>\n	\n	<div class="modal-footer">\n	    <button type="submit" class="btn btn-primary" ng-disabled="!validateUrl()" ng-bind="(btnTitle ? btnTitle : \'Pin to group\')"></button>\n	</div>\n\n</form>\n')
    }
    ]),
    b.module("home/groupView/rightPanelWidgets/cnvGroupEmailSharingWidget.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/groupView/rightPanelWidgets/cnvGroupEmailSharingWidget.tpl.html", '<div class="group-email-sharing-widget" bindonce>\n	<span class="heading">Group email</span>\n	<a bo-href="\'mailto:\' + group.get(\'groupEmail\')" bo-bind="group.get(\'groupEmail\')"></a>\n	<!-- <span bo-bind="group.get(\'groupEmail\')"></span>"</span> -->\n	<button class="btn btn-default btn-block" ng-click="copyEmailPopup()">Copy Email Address</button>\n	<span class="dim-text">Forward emails to this address to share them with this group.</span>\n</div>')
    }
    ]),
    b.module("home/groupView/rightPanelWidgets/cnvGroupIntegrationsWidget.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/groupView/rightPanelWidgets/cnvGroupIntegrationsWidget.tpl.html", '<div class="group-integrations-widget">\n	<span>Add an integration</span>\n</div>')
    }
    ]),
    b.module("home/groupView/rightPanelWidgets/cnvGroupInviteWidget.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/groupView/rightPanelWidgets/cnvGroupInviteWidget.tpl.html", '<div class="group-invite-widget" bindonce>\n	<span>Invite teammates to group</span>\n	<form name="inviteUserToGroup" ng-submit="inviteUser()">\n		<!-- <input class="form-control" type="email" placeholder="{{placeholderText}}"/> -->\n        <div class="to-field-cont" ng-class="{\'hide-placeholder\': invitedTo.length >= 1}">\n            <tags-input ng-model="invitedTo"\n                        placeholder="{{placeholderText}}"\n                        add-on-comma="true"\n                        add-on-blur="true"\n                        horizontal-flow = "false"\n                        on-tag-added="onItemAddedInToField($tag)"\n                        on-tag-removed="onItemRemovedInToField($tag)"\n                        add-from-autocomplete-only="false"\n                        display-property="label"\n                        allowed-tags-pattern="^[+a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$"\n                        replace-spaces-with-dashes="false">\n                <auto-complete\n                        source="getAutoCompleteUserItemsToInvite($query, numSelected)"\n                        load-history-on-focus="true"\n                        delimiter="@"\n                        min-length="1"\n                        auto-select-first-suggestion="true"\n                        suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html">\n                </auto-complete>\n            </tags-input>\n        </div>\n        <button bo-if="!inviting" class="btn btn-primary btn-block" ng-click="inviteUser()">Invite</button>\n        <button bo-if="inviting" class="btn btn-disabled btn-block">Invite</button>\n		<span class="dim-text">People outside your network can be invited as guests.</span>\n	</form>\n</div>')
    }
    ]),
    b.module("home/groupView/rightPanelWidgets/cnvGroupMembersListWidget.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/groupView/rightPanelWidgets/cnvGroupMembersListWidget.tpl.html", '<div class="group-members-widget-wrapper" bindonce>\n\n	<div class="row no-margin btn-wrapper">\n\n		<button ng-if="!group.isNonMemberPrivateGroup() && !group.isNonMemberPublicGroup()" class="btn btn-warning btn-block btn-leave" bo-show="showBtn == \'leave\' && group.get(\'thisUserCanLeave\')" ng-mouseleave="showHideBtn(\'joined\')" ng-click="leaveGroup()">\n			<i class="cnv-icons-20 icon1-remove-red hover"></i> Leave\n		</button>\n\n		<button ng-if="!group.isNonMemberPrivateGroup() && !group.isNonMemberPublicGroup()" class="btn btn-default btn-block btn-joined" bo-show="showBtn == \'joined\' || !group.get(\'thisUserCanLeave\')" ng-mouseenter="showHideBtn(\'leave\')">\n			<i class="cnv-icons-20 check-blue"></i>Joined\n		</button>\n\n		<button ng-if="group.isNonMemberPrivateGroup() && !reqToJoinGroupSuccessful && group.get(\'_hint_this_user_action\') == \'request_to_join\'" class="btn btn-default btn-block btn-joined" ng-click="reqToJoinGroup()">\n			<i class="cnv-icons-20 icons_Email-lightblue"></i>Request to join\n		</button>\n\n		<button ng-if="group.isNonMemberPrivateGroup() && !group.get(\'isMember\') && group.get(\'access\') === \'SECRET\'" class="btn btn-block btn-disabled">Private group</button>\n\n		<!-- <button ng-if="group.isNonMemberPrivateGroup() && group.get(\'_hint_this_user_action\') == \'request_to_join\' && reqToJoinGroupSuccessful" class="btn btn-disabled btn-block">\n				<i class="cnv-icons-20 icons_Email-darkgray"></i>Request sent\n		</button> -->\n\n		<button ng-if="group.isNonMemberPrivateGroup() && (group.get(\'_hint_this_user_action\') == \'pending\' || reqToJoinGroupSuccessful)" class="btn btn-disabled btn-block">\n			<i class="cnv-icons-20 Icon1__Time-darkgray"></i>Pending\n		</button>\n\n		<button ng-if="group.isNonMemberPublicGroup()" class="btn btn-default btn-block btn-joined" ng-click="reqToJoinGroup()">\n			<i class="cnv-icons-20 add-1-lightblue"></i>Join\n		</button>\n\n	</div>\n	<div class="row no-margin">\n		<span>\n			<i bo-if="group.get(\'access\') == \'PUBLIC\'" class="cnv-icons-20 Icon1_PublicChannel-01-darkgray"></i>\n			<i bo-if="group.get(\'access\') == \'PRIVATE\' || group.get(\'access\') == \'SECRET\'" class="cnv-icons-20 privateGroup_icon-darkgray"></i>\n			<a ng-if="userInfo.isAdminMode() || (!group.isNonMemberPrivateGroup() && !group.isNonMemberPublicGroup())" bo-href="groupMembersViewUrl"><span ng-bind="groupMembers.length"></span> Members</a>\n			<span ng-if="!userInfo.isAdminMode() && (group.isNonMemberPrivateGroup() || group.isNonMemberPublicGroup())"><span ng-bind="groupMembers.length"></span> Members</span>\n		</span>\n		<span class="dot">&nbsp;&#8226;&nbsp;</span>\n		<span bo-if="group.get(\'access\') == \'PUBLIC\'">Public Group</span>\n		<span bo-if="group.get(\'access\') == \'PRIVATE\'">Private Group</span>\n		<span bo-if="group.get(\'access\') == \'SECRET\'">Private Group</span>\n	</div>\n	<div class="row no-margin">\n		<ul>\n			<li ng-repeat="user in groupMembers | limitTo: MAXIMUM_USERS_IN_LIST track by user.user_id" cnv-popover cnv-popover-ctrl="user.first_name && user.last_name ? user.first_name + \' \' + user.last_name : user.user_email_id" cnv-popover-display-as-text="true">\n					<a bo-href="user.user_id | idToFilterUrl:\'USER\'">\n						<cnv-user-profile-image user-id="user.user_id" size="\'48\'" profile-type="user.profile_image_type" profile-version="user.profile_image_version" full-name="user.first_name && user.last_name ? user.first_name + \' \' + user.last_name : user.user_email_id"></cnv-user-profile-image>\n					</a>\n				<!-- <img bo-src="user.user_id | userImgUrl: user.profile_image_type : user.profile_image_version" /> -->\n			</li>\n			<li bo-if="additionalGroupMembers > 0" class="count-thumb-container">\n				<a ng-if="!group.isNonMemberPrivateGroup() && !group.isNonMemberPublicGroup()" href="javascript:void(0)" bo-href="groupMembersViewUrl">\n					<span class="count-thumbnail">+<span bo-bind="additionalGroupMembers"></span>\n					</span>\n				</a>\n				<span ng-if="group.isNonMemberPrivateGroup() || group.isNonMemberPublicGroup()" class="count-thumbnail plain-text">+<span bo-bind="additionalGroupMembers"></span>\n				</span>\n			</li>\n		</ul>\n	</div>\n	<div class="row no-margin" bo-if="group.get(\'pendingInviteCount\') != \'0\'">\n		<span class="meta pending-invites" bo-bind="\'Pending Invites \' + group.get(\'pendingInviteCount\')"></span>\n	</div>\n\n</div>\n')
    }
    ]),
    b.module("home/groupView/rightPanelWidgets/cnvGroupPinnedPostsWidget.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/groupView/rightPanelWidgets/cnvGroupPinnedPostsWidget.tpl.html", '<div class="group-post-pinning-widget" bindonce>\n	<span>Pinned Content</span>\n	<ul>\n		<li ng-repeat="pin in pinnedContents | limitTo: MAXIMUM_PINS_TO_SHOW" ng-mouseover="removeBtn = true; reRender();" ng-mouseout="removeBtn = false; reRender();" class="pin">\n			<a bo-if="pin.type == \'WEB\'" bo-href="pin.url" target="_blank" bo-bind="pin.resource_name"></a>\n			<a bo-if="pin.type == \'SCRYBE\'" bo-href="pin.app_instance_id | getResourceLinkUrl: [{ type: pin.resource_type, uid: pin.resource_id, title: pin.resource_name }]" bo-bind="pin.resource_name"></a>\n			<i bo-if="pin.is_posting" class="posting"></i>\n			<i bo-if="pin.error" class="glyphicon glyphicon-warning-sign error" cnv-popover cnv-popover-ctrl="\'Error while saving content, Try again.\'"></i>\n			<i bo-show="removeBtn" ng-click="removePin(pin.id)" class="glyphicon glyphicon-remove"></i>\n			<br />\n			<span class="dim-text" bo-if="pin.user_id" bo-bind="pin.user_id | idToName"></span>\n			<span bo-if="pin.user_id && pin.time_stamp">,&nbsp</span>\n			<span class="dim-text" bo-if="pin.time_stamp" cnv-popover cnv-popover-ctrl="pin.time_stamp | localize" bo-date="pin.time_stamp | dateAgo: server_now_timestamp : true"></span>\n			\n		</li>\n		<!-- <li>\n			<span>iconset: ios-7-icons</span>\n			<span>iconfinder.com<br />Sabika N, Apr 2, 2013\n			</span>\n		</li> -->\n		<li bo-if="pinnedContents.length > MINIMUM_PINS_TO_SHOW && showAll" class="action-btn">\n			<span ng-click="showAllPins()">More</span>\n		</li>\n		<li bo-if="showLess" class="action-btn">\n			<span ng-click="showFewerPins()">Less</span>\n		</li>\n	</ul>\n	<a href="javascript:void(0);" ng-click="addPinnedContent()">Add important posts or links</a>\n</div>')
    }
    ]),
    b.module("home/home.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/home.tpl.html", '<div class="homeContainer" cnv-onboarding-pilot-intro>\n  <div class="row no-margin homeBody">\n\n    <!-- Advanced search panel -->\n    <cnv-advanced-search type="feed"></cnv-advanced-search>\n\n    <!-- home left panel -->\n    <div class="col-xs-2 col-sm-1 col-md-5 col-lg-5 leftPanelContainer" ng-controller="HomeLeftPanelCtrl" cnv-onboarding-home-left>\n      <cnv-home-left-panel></cnv-home-left-panel>\n      <!-- <div ng-include="\'home/templates/homeLeftPanel.tpl.html\'"></div> -->\n    </div>\n\n    <!-- home center panel -->\n    <div class="col-xs-22 col-sm-23 col-md-19 col-lg-14 centerPanelContainer">\n      <div ng-include="\'home/templates/homeCenterPanel.tpl.html\'"></div>\n    </div>\n\n    <!-- home right panel -->\n    <div class="hidden-xs hidden-sm hidden-md col-lg-5 rightPanelContainer" ng-controller="HomeRightPanelCtrl">\n      <div ng-include="\'home/templates/homeRightPanel.tpl.html\'"></div>\n    </div>\n  </div>\n\n<!-- <cnv-home-onboarding ></cnv-home-onboarding> -->\n</div>\n')
    }
    ]),
    b.module("home/templates/cnvHomeCenterPanelDefaultHeader.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/templates/cnvHomeCenterPanelDefaultHeader.tpl.html", '<!-- <div class="floated-left">\n	<span id="feed_title" ng-if="feed_title != \'My Feed\'">\n		{{ feed_title }}\n	</span>\n</div>\n\n<div class="clear-fix"></div>\n -->')
    }
    ]),
    b.module("home/templates/homeCenterPanel.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/templates/homeCenterPanel.tpl.html", '<div id="home-center-panel" ng-controller="HomeCenterPanelCtrl">  \n  <div class="feed-head" cnv-home-center-panel-header-manager>\n    <section ng-if="STATE==\'DEFAULT\'"\n      ng-include="\'home/templates/cnvHomeCenterPanelDefaultHeader.tpl.html\'">\n    </section>\n\n    <cnv-home-center-panel-group-header ng-if="STATE==\'GROUP\' && !is_search" bindonce></cnv-home-center-panel-group-header>\n    <cnv-home-center-panel-user-header ng-if="STATE==\'USER\' && !is_search" bindonce></cnv-home-center-panel-user-header>\n  </div>\n\n  <div ng-if="isNonMemberPrivateGroupFilterAppliedAndNotAdminMode()" class="group-join-request-block">\n    <span>You don\'t have access to this group.</span>\n    <button ng-click="reqToJoinGroup()" ng-if="!reqJoinGrpSuccess && group.get(\'_hint_this_user_action\') == \'request_to_join\'" class="btn">\n      <i class="cnv-icons-15 icons_Email-lightblue"></i>Request to join\n    </button>\n    <!-- <button ng-if="reqJoinGrpSuccess && group.get(\'_hint_this_user_action\') == \'request_to_join\'" class="btn">\n      <i class="cnv-icons-15 Icon1__Time-darkgray"></i>Request pending\n    </button> -->\n    <button ng-if="group.get(\'_hint_this_user_action\') == \'pending\' || reqJoinGrpSuccess" class="btn btn-disabled" style="background: #ebebeb !important;">\n      <i class="cnv-icons-15 Icon1__Time-darkgray"></i>Pending\n    </button>\n  </div>\n\n  <!--<div class="feed_note_cnt">\n    <div class="sharingState"></div>\n    <textarea class="feed_note_editor" id="noteEditor" cnv-insert-note placeholder=" post questions, ideas or status updates"></textarea>\n  </div>-->\n\n  <!-- RELATED SEARCH IMPLEMENTATION -->\n  <div class="related-searches-wrapper" ng-if="feedRelatedSuggestions.length > 0">\n    <div class="heading">Search instead for:</div>\n    <div class="tags">\n      <ul>\n        <li ng-repeat="search in feedRelatedSuggestions | limitTo: MAX_RELATED_TAGS">\n          <a href="javascript:void(0)" ng-click="openUrl(search.url)">{{::search.title}}</a></li>\n      </ul>\n    </div>\n  </div>\n\n  <!-- RELATED TAGS IMPLEMENTATION -->\n  <div class="related-tags-wrapper" ng-if="relatedTags.length > 0">\n    <div class="heading">Related tags:</div>\n    <div class="tags">\n      <ul>\n        <li ng-repeat="tag in relatedTags | limitTo: MAX_RELATED_TAGS">\n          <a href="{{::tag.name | hashtagToFilterLink}}">#{{::tag.name}}</a></li>\n      </ul>\n    </div>\n  </div>\n\n  <div ng-if="!isNonMemberPrivateGroupFilterAppliedAndNotAdminMode() && !isNonMemberPublicGroupFilterAppliedAndNotAdminMode() && activeFilter !== postFilter" ng-hide="is_search" class="inline-insert-wrapper">\n    <cnv-inline-insert></cnv-inline-insert>\n  </div>\n\n  <div ng-if="activeFilter === postFilter" class="back-to-feed-top-cont">\n    <a href="#/feed">Back to News Feed</a>\n  </div>\n\n  <hr ng-if="(!isNonMemberPrivateGroupFilterAppliedAndNotAdminMode() && !isNonMemberPublicGroupFilterAppliedAndNotAdminMode() && !is_search) || relatedTags.length > 0 || feedRelatedSuggestions.length > 0" ng-style="{\'margin-bottom\': STATE == \'GROUP\' ? \'10px\': \'8px\'}" style="margin-top: 13px;" />\n\n  <div ng-if="STATE==\'GROUP\' && !isNonMemberPrivateGroupFilterAppliedAndNotAdminMode() && !isNonMemberPublicGroupFilterAppliedAndNotAdminMode() && !is_search">\n    <cnv-home-center-panel-group-pinned-post-widget></cnv-home-center-panel-group-pinned-post-widget>\n  </div>\n\n  <div ng-if="STATE === \'DEFAULT\' && !is_search">\n    <cnv-home-center-panel-feed-pinned-post-widget></cnv-home-center-panel-feed-pinned-post-widget>\n  </div>\n\n\n  <!-- <cnv-in-feed-filter-widget></cnv-in-feed-filter-widget> -->\n\n  <cnv-feed ng-if="!isNonMemberPrivateGroupFilterAppliedAndNotAdminMode()" class="feed" on-feed-scrolled-bottom="loadMoreFeed()">\n    <div id="feed-updates-available-notif" ng-class="{\'in-view\': feed_data.feedItemsUpdatesAvailable}">\n      <div class="btn-cont" ng-click="onFeedItemsUpdatesAvailableNotifClick()"><i class="cnv-icons-20 Icon1__UpArrow-blue"></i><span>New Posts</span></div>\n    </div>\n    <div ng-show="isMyFeed()" class="my-feed-cont">\n      <cnv-feed-item class="feed-item-wrapper" ng-repeat="itemData in my_feed_data.feed_items track by itemData.feed_id" ng-if="!itemData._hide && itemData.app_instance_id != 3 && itemData.app_instance_id != 14" id="{{::itemData.feed_id}}" bindonce></cnv-feed-item>\n    </div>\n    <div ng-if="!isMyFeed()" class="filtered-feed-cont">\n      <cnv-feed-item class="feed-item-wrapper" ng-repeat="itemData in feed_data.feed_items track by itemData.feed_id" ng-if="!itemData._hide && itemData.app_instance_id != 3 && itemData.app_instance_id != 14" id="{{::itemData.feed_id}}" bindonce></cnv-feed-item>\n    </div>\n    <div class="feed_load_status" ng-show="feed_data.fetching"><div class="cnv-spinner light"></div></div>\n    <div class="feed_load_status" ng-show="!feed_data.fetching && feed_data.feed_items.length == 0 && activeFilter != starredFilter && activeFilter != draftsFilter && activeFilter != trashFilter && !hideFeedEndPlaceholder">There is no feed to display.</div>\n\n    <div class="blank-state-placeholder" ng-show="!feed_data.fetching && feed_data.feed_items.length == 0 && activeFilter == starredFilter">\n      <i class="cnv-icons-64 icons_Star-lightgray"></i>\n      <p>Add a star to important posts and they\'ll appear here.<br />A VIP list, if you will.</p>\n    </div>\n\n    <div class="blank-state-placeholder" ng-show="!feed_data.fetching && feed_data.feed_items.length == 0 && activeFilter == draftsFilter">\n      <i class="cnv-icons-64 icons_Drafts-lightgray"></i>\n      <p>Your unshared masterpieces will appear here, awaiting your final touches.</p>\n    </div>\n\n    <div class="blank-state-placeholder" ng-show="!feed_data.fetching && feed_data.feed_items.length == 0 && activeFilter == trashFilter">\n      <i class="cnv-icons-64 icons2_Trash-lightgray"></i>\n      <p>Deleted posts will appear here.<br />You can delete them for good, or restore them to glorious new life.</p>\n    </div>\n\n    <div ng-show="!feed_data.fetching && activeFilter != starredFilter && activeFilter != draftsFilter && activeFilter != trashFilter && activeFilter !== postFilter && !hideFeedEndPlaceholder" class="feed-end-placeholder"></div>\n\n    <div ng-if="activeFilter === postFilter" class="back-to-feed-bottom-cont">\n      <hr>\n      <p>\n        <span class="meta">Nothing more to see here. Want to view more posts?</span><br>\n        <a href="#/feed">Back to News Feed</a>\n      </p>\n    </div>\n\n    <!-- <hr class="feed-end-divider" ng-if="hideFeedEndPlaceholder && feed_data.feed_items.length > 0" /> -->\n  </cnv-feed>\n</div>\n')
    }
    ]),
    b.module("home/templates/homeLeftPanel.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/templates/homeLeftPanel.tpl.html", '<!-- THIS FILE IS NOW REDUNDANT, CODE MOVED TO DIRECTIVE TEMPLATE -> CNVHOMELEFTPANEL.TPL.HTML -->\n\n<div class="wrapper-parent cnv-onboarding-overlay" cnv-home-left-panel-scroll-handler bindonce>\n    <div class="left-panel-wrapper">\n        <!-- left menu items code -->\n        <div class="row no-margin menuItemsContainer" >\n            <ul>\n                <li>\n                	<i class="cnv-icons-20 icons_Home-darkgray"></i>\n                    <span class="unread-bubble" bo-if="showFeedDirtyDot">&middot;</span>\n                	<a bo-href="newsFeedFilter.url" ng-class="{active: (activeFilter == newsFeedFilter)}" ng-mousedown="trackClick(\'My Feed\'); scrollTop(); onNewsFeedFilterMouseDown()">My feed</a>\n                </li>\n                <li class="clearfix mentions">\n                    <i class="cnv-icons-20 icons2_mention-darkgray pull-left"></i>\n                    <span class="unread-bubble" bo-if="directsUnreadCount > 0">&middot;</span>\n                	<a bo-href="mentionsFilter.url" ng-click="resetDirectsCount(); trackClick(\'@Mentions\')" class="pull-left" ng-class="{active: (activeFilter == mentionsFilter)}">Mentions </a>\n                    <!-- <span class="badge pull-right" bo-if="directsUnreadCount > 0" bo-bind="directsUnreadCount"></span> -->\n                </li>\n                <li>\n                	<i class="cnv-icons-20 icons_Star-darkgray"></i>\n                	<a bo-href="starredFilter.url" ng-class="{active: (activeFilter == starredFilter)}" ng-click="trackClick(\'Starred\')">Starred</a>\n                </li>\n                <li>\n                	<i class="cnv-icons-20 icons_Drafts-darkgray"></i>\n                	<a bo-href="draftsFilter.url" class="draft-label" ng-class="{active: (activeFilter == draftsFilter)}" ng-click="trackClick(\'Drafts\')">Drafts</a>\n                </li>\n                <li bo-if="thisUserRole!=\'GUEST\'">\n                    <i class="cnv-icons-20 icons_Integrations_Left"></i>\n                    <a href="javascript:void(0)" ng-click="openIntegrationsPage(); trackClick(\'Integrations\')" class="draft-label">Integrations</a>\n                </li>\n                <li ng-show="expandMenu">\n                    <i class="cnv-icons-20 icons2_Trash-darkgray"></i>\n                    <a bo-href="trashFilter.url" class="trash-label" ng-class="{active: (activeFilter == trashFilter)}" ng-click="trackClick(\'Trash\')">Trash</a>\n                </li>\n                <li class="action-link" ng-show="!expandMenu" ng-click="expandMenu = !expandMenu"><a href="javascript:void(0)">See more...</a>\n                </li>\n                <li class="action-link" ng-show="expandMenu" ng-click="expandMenu = false"><a href="javascript:void(0)">Less</a>\n                </li>\n            </ul>\n        </div>\n\n        <div class="row no-margin groupsItemsContainer">\n            <div class="heading">\n                <span>Groups</span>\n                <i bo-if="thisUserRole!=\'GUEST\'" class="cnv-icons-20 icons2_Add-lightgray onboarding-add-group-tooltip" ng-click="createGroup(); trackClick(\'New Group\')"></i>\n                <!-- <span class="new-label" ng-click="createGroup()">New</span> -->\n            </div>\n            \n            <cnv-left-panel-groups-list></cnv-left-panel-groups-list>\n        </div>\n\n        <div bo-if="thisUserRole!=\'GUEST\'" class="row no-margin groupsControlsContainer">\n            <span><a bo-href=\'22 | getResourceLinkUrl : [{uid: "1", type: "26"}, {uid: "2", type: "AllGroups"}] : false : "Groups Directory (All Groups)"\' ng-click="trackClick(\'Browse Group Directory\')">Groups Directory</a></span>\n            <a bo-href=\'22 | getResourceLinkUrl : [{uid: "1", type: "26"}, {uid: "2", type: "AllGroups"}] : false : "Groups Directory (All Groups)"\' ng-click="trackClick(\'Browse Group Directory\')" class="directory-icon"><i class="cnv-icons-25 icon1_directory"></i></a>\n            <a bo-href=\'22 | getResourceLinkUrl : [{uid: "1", type: "26"}, {uid: "2", type: "AllGroups"}] : false : "Groups Directory (All Groups)"\' ng-click="trackClick(\'Browse Group Directory\')" class="help-text">Find groups in your company to join</a>\n            <!-- <span><a href="javascript:void(0)" ng-click="createGroup()">Create a group</a></span> -->\n\n            <!-- <div class="createGroupWidgetContainer" ng-controller="CreateGroupWidgetCtrl">\n                <h4><span class="glyphicon glyphicon-group"></span> Create private groups</h4>\n                <span>Create a public or private group to communicate about shared interests, topics, projects or teams.</span>\n                <button class="btn btn-default btn-block" >New Group</button> -->\n        </div>\n\n        <!--\n            This is a hack to fix overflow hidden issues on the menus.\n            By increasing the width and adding padding we\'re allowing\n            space for news to be visible\n\n            However we cannot limit background with background-size property (incase\n            of solid color) so this div will act as a dummy bg div\n        -->\n        <div class="background-div"></div>\n    </div>\n<div>');
    }
    ]),
    b.module("home/templates/homeRightPanel.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/templates/homeRightPanel.tpl.html", '<div ng-if="viewState == \'DEFAULT\'">\n	<div ng-include="\'home/templates/rightPanels/feedRightPanel.tpl.html\'"></div>\n</div>\n\n<div ng-include="\'home/groupView/groupsRightPanel.tpl.html\'" ng-if="viewState == \'GROUP\' && !is_search"></div>\n\n<div ng-include="\'home/userView/usersRightPanel.tpl.html\'" ng-if="viewState == \'USER\' && !is_search" ng-controller="UsersRightPanelCtrl"></div>')
    }
    ]),
    b.module("home/templates/rightPanels/feedRightPanel.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/templates/rightPanels/feedRightPanel.tpl.html", '<div class="feed-right-panel-wrapper" ng-controller="FeedRightPanelCtrl">\n	\n\n	<div ng-if="onboardingStateActive" class="onboarding-right-panel">\n		<cnv-onboarding-checklist></cnv-onboarding-checklist>\n	</div>\n\n	<div ng-if="!onboardingStateActive">\n		<!-- Invite teammates -->\n		<cnv-feed-invite-widget bo-if="!userInfo.isGuestUser()"></cnv-feed-invite-widget>\n		<hr bo-if="!userInfo.isGuestUser()" />\n		\n		<!-- Set up integrations -->\n		<div bo-if="thisUserRole!=\'GUEST\'" class="row no-margin">\n			<span class="heading">Integrate with other tools</span>\n			<span>Use other tools? Have them post to Convo!</span>\n			<div class="icons-wrapper">\n				<a bo-href="twitterIntegrationsLink"><i class="cnv-icons-25 twitter_2"></i></a>\n                                <a bo-href="gmailIntegrationsLink"><i class="cnv-icons-25 gmail"></i></a>\n				<a bo-href="dropboxIntegrationsLink"><i class="cnv-icons-25 dropbox"></i></a>\n				<a bo-href="salesForceIntegrationsLink" target="_blank"><i class="cnv-icons-25 salesforce"></i></a>\n                                <a bo-href="boxIntegrationsLink"><i class="cnv-icons-25 box"></i></a>\n				<a bo-href="gDriveIntegrationsLink"><i class="cnv-icons-25 gdrive"></i></a>\n			</div>\n			<button class="btn btn-block btn-default" ng-click="openIntegrationsPage()">Add an integration</button>\n		</div>\n\n		<hr bo-if="thisUserRole!=\'GUEST\'" />\n\n		<!-- Download apps -->\n		<div class="row no-margin downloadDesktopApp">\n			<span class="heading">Take Convo everywhere</span>\n			<span>Install Convo to stay connected on the go. Get notifications, review documents, and send messages.</span>\n			<div class="small-app-btns">\n				<i class="cnv-icons-20 Icon1_apple-01"></i>\n				<i class="cnv-icons-20 google_play"></i>\n				<i class="cnv-icons-20 Icon1_Desktop-01"></i>\n			</div>\n			<button class="btn btn-block btn-default" ng-click="openDownloadAppsModal()">Get apps</button>\n		</div>\n\n		<!-- <div class="row no-margin admin-banner-wrapper" ng-if="userInfo.isAdmin()">\n			All new admin tools are coming soon. In the meantime, <a href="{{::adminSettingsFlexURL}}" target="_blank">click here to manage your network</a> in the previous version of the app.\n		</div> -->\n	</div>\n</div>\n\n<!-- <cnv-onboarding-checklist></cnv-onboarding-checklist> -->')
    }
    ]),
    b.module("home/userView/centerPanelWidgets/profilePictureModal.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/userView/centerPanelWidgets/profilePictureModal.tpl.html", '<section cnv-profile-picture-widget bindonce>\n  <!-- <div class="modal-header">\n      <h4 bo-show="currentStep == \'profilePic:enableCamera\' || currentStep == \'profilePic:showVideoFeed\'">Smile!</h4>\n      <h4 bo-show="currentStep == \'profilePic:adjustImage\'">Position & size your photo</h4>\n      <h4 bo-show="currentStep == \'profilePic:stepsComplete\'">You\'re done.</h4>\n      <h4 bo-show="currentStep == \'profilePic:selectFile\'">Select image</h4>\n      <button type="button" class="close" ng-click="dismiss()">×</button>\n  </div>\n -->\n  <div class="modal-body">\n    <div class="row" style="text-align: center;">\n      <h3 bo-show="currentStep == \'profilePic:showVideoFeed\'"><strong>Smile!</strong></h3>\n      <h3 bo-show="currentStep == \'profilePic:adjustImage\'"><strong>Looks great! Any adjustments?</strong></h3>\n      <h3 bo-show="currentStep == \'profilePic:stepsComplete\'"><strong>You\'re done.</strong></h3>\n      <h3 bo-show="currentStep == \'profilePic:selectFile\'"><strong>Select image</strong></h3>\n      <button type="button" class="close" ng-click="dismiss()">×</button>\n    </div>\n   \n    <div class="step0" bo-show="currentStep == \'profilePic:enableCamera\'">\n      <h3><strong>Starting webcam...</strong></h3>\n      <p>Choose "allow" or "accept" in your browser to continue\n      taking a photo for your Convo profile.</p>\n      <i class="cnv-icons-60 Icon1_arrow-01"></i>\n    </div>\n\n    <div class="step0" bo-show="currentStep == \'profilePic:selectFile\'">\n      <input type="file" id="profileImageUpload" name="profileImageUpload" style="display: inline-block;" />\n    </div>\n\n    <div class="error" ng-show="currentStep == \'profilePic:errorCamera\'">\n      <p>Error accessing camera. <a href="javascript:void(0)" ng-click="initializeCam()">Try again.</a></p>\n    </div>\n    \n    <div class="step1" bo-show="currentStep == \'profilePic:showVideoFeed\'">\n      <video autoplay="true" style="background-color: #666; display: block; margin: 0 auto;"></video>\n      <div class="video-overlay"></div>\n    </div>\n    \n    <div class="step2" bo-show="currentStep == \'profilePic:adjustImage\' || currentStep == \'profilePic:stepsComplete\'" bo-class="{\'uploading\': isUploading}">\n      \n      <!-- <div class="overlay"> \n        <div class="topMask"></div>\n        \n        <div class="mask"></div>\n        \n        <div class="selectionRect">\n        </div>\n        \n        <div class="mask"></div>\n        \n        <div class="bottomMask"></div>\n      </div> -->\n\n      <i class="cnv-circle-spinner-small" bo-show="isUploading"></i>\n\n      <!-- <canvas id="webcamCanvas" bo-if="startWebcam" style="display: block; margin: 0 auto;"></canvas> -->\n      \n      <img id="nativeUserUploadPhoto" style="position: absolute;" src="" />\n\n    </div>\n\n    <div class="row" bo-show="alerts">\n      <div class="alert alert-success" bo-show="alerts.success" bo-bind="alerts.success" role="alert"></div>\n      <div class="alert alert-danger" bo-show="alerts.error" bo-bind="alerts.error" role="alert"></div>\n    </div>\n\n    <input bo-show="currentStep == \'profilePic:adjustImage\'" type="range" min="1" max="5" value="1" id="profileZoomSlider" step="0.25" />\n\n    <div class="row" style="margin-top: 20px;">\n      <!-- <button bo-show="currentStep == \'profilePic:showVideoFeed\' || currentStep == \'" class="btn btn-default pull-left" ng-click="cancelPicture()">Cancel</button> -->\n      <button bo-show="currentStep == \'profilePic:adjustImage\' && startWebcam" class="btn btn-default pull-left" ng-click="initializeCam()">Retake</button>\n      <button bo-show="currentStep == \'profilePic:showVideoFeed\'" type="submit" class="btn btn-primary take-photo" ng-click="takePicture()">Take Photo</button>\n      <button bo-show="currentStep == \'profilePic:adjustImage\'" type="submit" class="btn btn-primary pull-right" ng-click="submitPhoto()">Apply Photo</button>\n    </div>\n    \n  </div>\n\n  <!-- <div class="modal-footer">\n      <a href="javascript:void(0)" ng-click="cancelPicture()">Cancel</a>\n      <button bo-show="currentStep == \'profilePic:showVideoFeed\'" type="submit" class="btn btn-primary" ng-click="takePicture()">Take Photo</button>\n      <button bo-show="currentStep == \'profilePic:adjustImage\'" type="submit" class="btn btn-primary" ng-click="submitPhoto()">Apply Photo</button>\n  </div> -->\n</section>\n')
    }
    ]),
    b.module("home/userView/cnvHomeCenterPanelUserHeader.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/userView/cnvHomeCenterPanelUserHeader.tpl.html", '<span style="float: left; margin-right: 8px;" class="userview-dp-overlay">\n    <i bo-show="item.thisUser" class="camera-icon cnv-icons-17 icons_Camera-white"></i>\n    <div bo-show="item.thisUser" class="txt-btn" ng-click="openProfilePictureModal()"><i class="cnv-icons-15 icons_Camera-white"></i>&nbsp;Update</div>\n    <cnv-user-profile-image user-id="filter.value" size="\'84\'" profile=true></cnv-user-profile-image>\n    <!-- <div bo-show="item.thisUser" class="dropdown">\n        <ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu1">\n            <li role="presentation" bo-if="!utils.isIE() && !utils.isSafari() && !IS_NATIVE"><a role="menuitem" tabindex="-1" href="javascript:void(0)" ng-click="setProfilePictureViaWebcam()">Set profile picture</a></li>\n            <li role="presentation"><a role="menuitem" tabindex="-1" ng-click="openFilePicker();">Upload profile picture</a></li>\n        </ul>\n    </div> -->\n</span>\n<!-- <div class="user-profile-image" bo-bind="item.initials" bo-style="{ \'background-color\': item.colorScheme }"></div> -->\n<div style="display: inline-block; max-width: 470px;" class="userview-header-content-wrapper">\n    <span id="feed_title">\n        <strong><span bo-bind="item.feedTitle" class="truncate"></span></strong>\n    <input type="file" id="userProfileImage" name="userProfileImage" style="width: 1px; height: 1px; display: block; position: absolute; z-index: 19999; top: -1000px; left: -1000px;" />\n    <cnv-dropdowns bo-if="showUserDropdown" style="display: inline-block; vertical-align: top;" cnv-dropdown-ctrl="dropdownCtrl"></cnv-dropdowns>\n    <input type="file" id="profileImageUpload" name="profileImageUpload" style="width: 1px; height: 1px; display: block; position: absolute; z-index: 19999; top: -1000px; left: -1000px;" />\n    </span>\n    <div ng-if="item.user_id">\n        <div bo-if="item.designation || item.thisUser">\n            <span bo-bind="item.formattedDesignation" class="truncate"></span>\n            <a href="javascript:void(0);" bo-if="item.thisUser && !item.designation" ng-click="openEditProfileWidget(true, \'designation\')" class="truncate">Add</a>\n        </div>\n        <div>\n            <span bo-bind="item.formattedAboutMe" bo-class="{\'truncate-upto-3-lines\': item.about_me}"></span>\n            <a bo-if="item.thisUser && !item.about_me" href="javascript:void(0);" ng-click="openEditProfileWidget(true, \'bio\')">Fix it</a>\n        </div>\n    </div>\n    <div ng-if="!item.user_id">...</div>\n</div>\n<div class="clear-fix"></div>\n<cnv-user-profile-edit-widget bo-if="showEditProfileModal"></cnv-user-profile-edit-widget>\n')
    }
    ]),
    b.module("home/userView/rightPanelWidgets/cnvUserProfileDetailsWidget.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/userView/rightPanelWidgets/cnvUserProfileDetailsWidget.tpl.html", '<div class="profile-details-wrapper" bindonce>\n	<button class="btn btn-default btn-block top-btn-margin" bo-if="thisUser" ng-click="openEditProfileWidget()">Edit Profile</button>\n\n	<!-- follow/unfollow buttons -->\n	<button bo-if="!thisUser && user.logged_in_user_follows && user.user_role != \'GUEST\'" class="btn btn-default btn-block" ng-mouseenter="showUnfollowBtn(true)" bo-show="!unfollowBtn">\n		<i class="cnv-icons-20 check-blue" bo-show="!showSpinner"></i>\n		<i class="cnv-circle-spinner-small" bo-show="showSpinner"></i>\n		Following\n	</button>\n	<button bo-if="!thisUser && user.logged_in_user_follows  && user.user_role != \'GUEST\'" bo-show="unfollowBtn" class="btn btn-warning btn-block" ng-mouseleave="showUnfollowBtn(false)" ng-click="unfollowUser()">\n		<i class="cnv-icons-20 icon1-remove-red hover" bo-show="!showSpinner"></i>\n		<i class="cnv-circle-spinner-small" bo-show="showSpinner"></i>\n		Unfollow\n	</button>\n	<button bo-if="!thisUser && !user.logged_in_user_follows && user.user_role != \'GUEST\' && user.user_status != \'REMOVED\' && user.user_type != \'SYSTEM\' && user.user_status != \'INVITED\'" class="btn btn-default btn-block" ng-click="followUser()"><i class="cnv-circle-spinner-small" bo-show="showSpinner"></i>Follow\n	</button>\n	\n	<!-- end - follow/unfollow buttons -->\n	<span bo-if="user.email">\n		<i class="cnv-icons-20 icons_Email-darkgray"></i>\n		<a bo-href="\'mailto:\' + user.email" bo-bind="user.email"></a>\n	</span>\n	<span bo-if="user.location && !thisUser || thisUser">\n		<i class="cnv-icons-20 icons_Location-darkgray"></i>\n		<span bo-if="user.location" bo-bind="user.location"></span>\n		<span bo-if="!user.location && thisUser" class="text-link" ng-click="openEditProfileWidget(\'location\')"> Add Location</span>\n	</span>\n	<span bo-if="user.phone_no && !thisUser || thisUser">\n		<i class="cnv-icons-20 icons_Phone-darkgray"></i>\n		<span bo-if="user.phone_no"><span bo-repeat="phone_no in getPhoneNumbers(user.phone_no)"><a bo-bind="phone_no" bo-href="\'tel:\'+phone_no"></a><span bo-show="!$last">, </span></span></span>\n		<span bo-if="!user.phone_no && thisUser" class="text-link" ng-click="openEditProfileWidget(\'phone\')">Add Phone Number</span>\n	</span>\n	\n	<span bo-if="user.linked_in_link">\n		<i class="cnv-icons-20 linkedin-darkgray"></i>\n		<a bo-href="user.linked_in_link" target="_blank" bo-bind=\'user.first_name + "&#39;s LinkedIn"\'></a>\n	</span>\n\n	<span bo-if="user.twitter_link">\n		<i class="cnv-icons-20 twitter-darkgray"></i>\n		<a bo-href="user.twitter_link" target="_blank" style="width: 180px; line-height: normal;" bo-bind="user.twitter_link"></a>\n	</span>\n\n\n	<!-- <span class="text-center">\n\n		<a bo-if="user.email" bo-href="\'mailto:\' + user.email">\n			<i class="feed-sprite sprite-email"></i>\n		</a>\n		<a bo-if="!user.email" href="javascript:void(0)" class="default-cursor">\n			<i class="feed-sprite sprite-email-dim"></i>\n		</a>\n		\n		<a bo-if="user.linked_in_link" target="_blank" bo-href="user.linked_in_link">\n			<i class="feed-sprite sprite-linkedin"></i>\n		</a>\n		<a bo-if="!user.linked_in_link" href="javascript:void(0)" class="default-cursor">\n			<i class="feed-sprite sprite-linkedin-dim"></i>\n		</a>\n		\n		<a bo-if="user.twitter_link" target="_blank" bo-href="user.twitter_link">\n			<i class="feed-sprite sprite-twitter"></i>\n		</a>\n		<a bo-if="!user.twitter_link" href="javascript:void(0)" class="default-cursor">\n			<i class="feed-sprite sprite-twitter-dim"></i>\n		</a>\n\n	</span> -->\n	\n</div>')
    }
    ]),
    b.module("home/userView/rightPanelWidgets/cnvUserProfileDiscussionsWidget.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/userView/rightPanelWidgets/cnvUserProfileDiscussionsWidget.tpl.html", '<div class="my-discussions-wrapper">\n	<a href="#">My discussions with Professor Dr. Eric</a>\n</div>')
    }
    ]),
    b.module("home/userView/rightPanelWidgets/cnvUserProfileEditWidget.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/userView/rightPanelWidgets/cnvUserProfileEditWidget.tpl.html", '<div class="users-profile-edit-overlay" bindonce>\n	<div class="container">\n		<div class="row no-margin">\n			<div class="pull-left dp-container">\n				<cnv-user-profile-image user-id="item.user_id" profile-type="item.profile_image_type" profile-version="profile_image_version" size="\'184\'"></cnv-user-profile-image>\n				<!-- <div class="add-photo-overlay">\n					<span>+ Photo</span>\n				</div> -->\n				<i class="camera-icon cnv-icons-17 icons_Camera-white"></i>\n				<div class="txt-btn" ng-click="openProfilePictureModal()">Update</div>\n				<!-- <div class="dropdown">\n			        <ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu1">\n			            <li role="presentation" bo-if="!utils.isIE() && !utils.isSafari() && !IS_NATIVE"><a role="menuitem" tabindex="-1" href="javascript:void(0)" ng-click="setDpFromEditProfileWidget()">Set profile picture</a></li>\n			            <li role="presentation"><a role="menuitem" tabindex="-1" href="javascript:void(0)" ng-click="uploadDpFromEditProfileWidget()">Upload profile picture</a></li>\n			        </ul>\n			    </div> -->\n			</div>\n			<div class="pull-left form-container">\n				<form name="updateDetails" ng-submit="submitUserDetails()" role="form">\n					<div class="row form-inline" bo-class="{\'has-error\': updateDetails.firstname.$error.maxlength}" class="name-field">\n						<span class="help-block" bo-if="updateDetails.firstname.$error.maxlength">Max limit is 255 characters.</span>\n						<input id="name" type="text" name="firstname" class="form-control user_profile_edit_input" placeholder="First Name" ng-maxlength="255" ng-model="user.first_name" />\n						<input id="lastname" type="text" name="lastname" class="form-control no_right_margin user_profile_edit_input" placeholder="Last Name" ng-maxlength="255" ng-model="user.last_name" />\n					</div>\n					\n					<div class="row input" bo-class="{\'has-error\': updateDetails.designation.$error.maxlength}">\n						<span class="help-block" bo-if="updateDetails.designation.$error.maxlength">Max limit is 255 characters.</span>\n						<input id="designation" name="designation" type="text" class="form-control" placeholder="Enter your job title" ng-maxlength="255" ng-model="user.designation" />\n					</div>\n\n					<div class="row textbox" bo-class="{\'has-error\': updateDetails.bio.$error.maxlength}">\n						<span class="help-block" bo-if="updateDetails.bio.$error.maxlength">Max limit is 255 characters.</span>\n						<textarea id="bio" name="bio" type="text" class="form-control" placeholder="Enter a short bio" ng-maxlength="255" ng-model="user.about_me"></textarea>\n					</div>\n\n					<hr />\n\n					<div class="row" bo-class="{\'has-error\': updateDetails.location.$error.maxlength}">\n						<span class="help-block" bo-if="updateDetails.location.$error.maxlength">Max limit is 255 characters.</span>\n						<i class="cnv-icons-20 icons_Location-lightgray"></i>\n						<div class="input">\n							<input id="location" name="location" type="text" class="form-control" placeholder="Enter your location" ng-maxlength="255" ng-model="user.location" />\n						</div>\n					</div>\n\n					<div class="row" bo-class="{\'has-error\': updateDetails.phone.$error.maxlength}">\n						<span class="help-block" bo-if="updateDetails.phone.$error.maxlength">Max limit is 255 characters.</span>\n						<i class="cnv-icons-20  icons_Phone-lightgray"></i>\n						<div class="input">\n							<input id="phone" type="text" name="phone" class="form-control ng-pristine ng-valid ng-valid-parse ng-valid-maxlength ng-touched" placeholder="Enter your phone number" ng-maxlength="255" ng-model="user.phone_no">\n						</div>\n					</div>\n\n					<div class="row" bo-class="{\'has-error\': updateDetails.linkedin.$error.maxlength || updateDetails.linkedin.$error.pattern}">\n						<i class="cnv-icons-20 linkedin-lightgray"></i>\n						<span class="help-block" bo-if="updateDetails.linkedin.$error.maxlength">Max limit is 255 characters.</span>\n						<span class="help-block" bo-if="updateDetails.linkedin.$error.pattern">This is not a valid link</span>\n						<div class="input">\n							<input id="linkedin" height="39" type="text" name="linkedin" class="form-control" placeholder="linkedin.com/pub/user" ng-pattern="/linkedin\\.com\\/[a-zA-Z0-9_]+/" ng-maxlength="255" ng-model="user.linked_in_link" />\n						</div>\n					</div>\n\n					<div class="row" bo-class="{\'has-error\': updateDetails.twitter.$error.maxlength || updateDetails.twitter.$error.pattern}">\n						<i class="cnv-icons-20 twitter-lightgray"></i>\n						<span class="help-block" bo-if="updateDetails.twitter.$error.maxlength">Max limit is 255 characters.</span>\n						<span class="help-block" bo-if="updateDetails.twitter.$error.pattern">This is not a valid link</span>\n						<div class="input">\n							<input id="twitter" height="39" type="text" name="twitter" class="form-control" placeholder="twitter.com/user" ng-pattern="/twitter\\.com\\/(#!\\/)?[a-zA-Z0-9_]+/" ng-maxlength="255" ng-model="user.twitter_link"  onfocus="this.value = this.value;" />\n						</div>\n					</div>\n\n					<div class="row pull-right">\n						<button ype="button" class="btn btn-default" ng-click="openEditProfileWidget(false)">Cancel</button> \n						<button type="submit" class="btn btn-primary pull-right btn-submit" tabindex="-1">Save</button>\n					</div>\n\n				</form>\n			</div>\n		</div>\n	</div>\n\n	<!-- <div class="user-profile-edit-widget-wrapper">\n		<form name="updateDetails" ng-submit="submitUserDetails()" role="form">\n			<div class="widget-container-left">\n				<div class="profile-pic-placeholder">\n					<cnv-user-profile-image user-id="item.user_id" profile-type="item.profile_image_type" profile-version="profile_image_version" size="\'78\'"></cnv-user-profile-image>\n					<div class="add-photo-overlay">\n						<span>+ Photo</span>\n					</div>\n				</div>\n				\n				<ul>\n					<li bo-class="{\'has-error\': updateDetails.firstname.$error.maxlength}" class="name-field">\n						<span class="help-block" bo-if="updateDetails.firstname.$error.maxlength">Max limit is 255 characters.</span>\n						<input id="name" type="text" name="firstname" class="form-control" placeholder="First Name" ng-maxlength="255" ng-model="user.first_name" />\n						<input id="lastname" type="text" name="lastname" class="form-control" placeholder="Last Name" ng-maxlength="255" ng-model="user.last_name" />\n					</li>\n					<li bo-class="{\'has-error\': updateDetails.designation.$error.maxlength}">\n						<span class="help-block" bo-if="updateDetails.designation.$error.maxlength">Max limit is 255 characters.</span>\n						<input id="designation" name="designation" type="text" class="form-control" placeholder="Enter your job title" ng-maxlength="255" ng-model="user.designation" />\n					</li>\n					<li bo-class="{\'has-error\': updateDetails.bio.$error.maxlength}">\n						<span class="help-block" bo-if="updateDetails.bio.$error.maxlength">Max limit is 255 characters.</span>\n						<textarea id="bio" name="bio" type="text" class="form-control" placeholder="Enter a short bio" ng-maxlength="255" ng-model="user.about_me"></textarea>\n					</li>\n				</ul>\n			</div>\n			<div class="widget-container-right-wrapper">\n				<div class="widget-container-right">\n					<div>\n						<i class="cnv-circle-spinner-small" bo-show="showSpinner"></i>\n						<button type="button" class="btn btn-default" ng-click="openEditProfileWidget(false)">Cancel</button>\n						<button type="submit" class="btn btn-primary" tabindex="-1">Save</button>\n					</div>\n				</div>\n				<div class="widget-container-right social-fields">\n					\n					<ul>\n						<li bo-class="{\'has-error\': updateDetails.location.$error.maxlength}">\n							<span class="help-block" bo-if="updateDetails.location.$error.maxlength">Max limit is 255 characters.</span>\n							<i class="feed-sprite sprite-location"></i>\n							<input id="location" name="location" type="text" class="form-control" placeholder="Enter your location" ng-maxlength="255" ng-model="user.location" />\n						</li>\n						<li bo-class="{\'has-error\': updateDetails.phone.$error.maxlength}">\n							<span class="help-block" bo-if="updateDetails.phone.$error.maxlength">Max limit is 255 characters.</span>\n						</li>\n						<li bo-class="{\'has-error\': updateDetails.email.$error.maxlength}">\n							<span class="help-block" bo-if="updateDetails.email.$error.maxlength">Max limit is 255 characters.</span>\n							<input id="email" type="email" name="email" class="form-control" placeholder="Enter your email" ng-maxlength="255" ng-model="user.email"/>\n						</li>\n						<li bo-class="{\'has-error\': updateDetails.twitter.$error.maxlength || updateDetails.twitter.$error.pattern}">\n							<span class="help-block" bo-if="updateDetails.twitter.$error.maxlength">Max limit is 255 characters.</span>\n							<span class="help-block" bo-if="updateDetails.twitter.$error.pattern">This is not a valid link</span>\n							<input id="twitter" height="39" type="text" name="twitter" class="form-control" placeholder="twitter.com/user" ng-pattern="/twitter\\.com\\/(#!\\/)?[a-zA-Z0-9_]+/" ng-maxlength="255" ng-model="user.twitter_link"  onfocus="this.value = this.value;" />\n						</li>\n						<li bo-class="{\'has-error\': updateDetails.linkedin.$error.maxlength || updateDetails.linkedin.$error.pattern}">\n							<span class="help-block" bo-if="updateDetails.linkedin.$error.maxlength">Max limit is 255 characters.</span>\n							<span class="help-block" bo-if="updateDetails.linkedin.$error.pattern">This is not a valid link</span>\n							<input id="linkedin" height="39" type="text" name="linkedin" class="form-control" placeholder="linkedin.com/pub/user" ng-pattern="/linkedin\\.com\\/[a-zA-Z0-9_]+/" ng-maxlength="255" ng-model="user.linked_in_link" />\n						</li>\n						\n					</ul>\n				</div>\n			</div>\n		</form>\n	</div> -->\n</div>\n\n')
    }
    ]),
    b.module("home/userView/rightPanelWidgets/cnvUserProfileTopGroupsWidget.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/userView/rightPanelWidgets/cnvUserProfileTopGroupsWidget.tpl.html", '<div class="user-top-groups-wrapper" bo-show="topGroups" bindonce>\n	<span bo-show="user">{{user.first_name}}\'s top groups</span>\n	<ul>\n		<li ng-repeat="group in topGroups" bo-href="group.group_id | idToFilterUrlForApp:\'Group\'">\n' + "			<i class=\"cnv-icons-20\" bo-class=\"{'privateGroup_icon-darkgray': group.access == 'PRIVATE' || group.access == 'SECRET', 'Icon1_PublicChannel-01-darkgray': group.access == 'PUBLIC'}\"></i>\n			<a bo-href=\"group.group_id | idToFilterUrlForApp:'Group'\" bo-bind=\"group.title\"></a>\n		</li>\n	</ul>\n</div>")
    }
    ]),
    b.module("home/userView/usersRightPanel.tpl.html", []).run(["$templateCache", function(a) {
        a.put("home/userView/usersRightPanel.tpl.html", '<div class="user-right-panel-wrapper" bindonce>\n	\n	<!-- User\'s profile details widget -->\n	<cnv-user-profile-details-widget></cnv-user-profile-details-widget>\n\n	<hr bo-if="user.user_role != \'GUEST\'" />\n\n	<!-- My Discussions widget -->\n	<!-- <cnv-user-profile-discussions-widget></cnv-user-profile-discussions-widget> -->\n\n	<!-- <hr /> -->\n\n	<!-- User\'s Top Groups widget -->\n	<cnv-user-profile-top-groups-widget></cnv-user-profile-top-groups-widget>\n\n	<hr bo-if="thisUser" />\n\n	<div class="user-emails" bo-if="thisUser">\n		<span>Forward emails to:</span>\n		<ul>\n' + "			<a bo-href=\"'mailto:myfollowers@' + accountInfo.getPrimaryAccountDomain().account_domain + '.convo.com'\"><li bo-bind=\"'myfollowers@' + accountInfo.getPrimaryAccountDomain().account_domain + '.convo.com'\"></li></a>\n			<a bo-href=\"'mailto:me@' + accountInfo.getPrimaryAccountDomain().account_domain + '.convo.com'\"><li bo-bind=\"'me@' + accountInfo.getPrimaryAccountDomain().account_domain + '.convo.com'\"></li></a>\n		</ul>\n	</div>\n\n	\n</div>")
    }
    ]),
    b.module("inlineInsert/cnvInlineInsert.tpl.html", []).run(["$templateCache", function(a) {
        a.put("inlineInsert/cnvInlineInsert.tpl.html", '<div id="inline-insert-files-paste-target" class="inline-insert-cont cnv-onboarding-overlay" ng-class="{active: active}">\n\n  <cnv-dropzone dropzone-id="\'inline-insert-files-drop-target\'"></cnv-dropzone>\n  \n  <div class="dummy-text-area" ng-show="!active" ng-click="onDummyTextAreaClick()">\n    <div class="dummy-area-cont">\n      <i class="cnv-icons-20 icons2_Compose-lightgray"></i>\n      <span>What are you working on?</span>\n    </div>\n  </div>\n  \n  <div class="sharing-state-overlay" ng-show="sharing">\n    <div class="cnv-spinner inline-insert-spinner"></div>\n  </div>\n\n\n  <div class="inline-insert-active-cont-wrapper" cnv-clicked-outside-this="onClickedOutsideInlineInsert(target)">\n    <div class="inline-insert-active-cont" ng-if="active">\n      <div class="to-field-cont" ng-class="{\'valid\': validSharingInfo, \'invalid\': !validSharingInfo}">\n        <tags-input class="to-field"\n            ng-model="shareWith"\n            placeholder="+Add user or group"\n            pre-placeholder="To:"\n            no-tags-indicator="true" \n            add-on-comma="false"\n            add-on-blur="false"\n            horizontal-flow = "false"\n            add-from-autocomplete-only="true"\n            display-property="label"\n            replace-spaces-with-dashes="false"\n            on-esc-key-press="onEscKeyPressInToField()"\n            on-tag-added="onItemAddedInToField($tag)"\n            on-tag-removed="onItemRemovedInToField($tag)"\n            on-ctrl-cmd-enter="onCtrlOrCmdEnterPressInTextEditor()"\n            on-ctrl-cmd-save="onCtrlOrCmdSavePressInTextEditor()">\n          <auto-complete\n              source="getShareWithDropdownItemsWithoutCommands($query, numSelected)"\n              load-history-on-focus="true"\n              auto-select-first-suggestion="true" \n              delimiter="@"\n              min-length="1"\n              suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html">\n          </auto-complete>\n        </tags-input>\n\n        <div class="post-permission-options" ng-hide="starter_network && isGuest">\n          <cnv-dropdowns cnv-dropdown-ctrl="dropdownCtrl" condition=\'iconCondtions\'></cnv-dropdowns>\n        </div>\n      </div>\n\n      <div class="rich-note-insert edit-mode no-padding" ng-if="mode == RICH_NOTE_MODE">\n        <input id="noteTitleField" class="note-title-field" ng-model="model.noteTitleText" placeholder="Add a title (optional)" type="text" maxlength="1000" ng-keydown="onTitleKeydown($event)"/>\n        <a href="javascript:void(0);" class="Icon1_expand-01-lightgray req-full-screen" target="{{::maximizeButtonTarget}}" ng-click="openWithDetailsView($event)" ng-hide="IS_NATIVE_MENULET" tabindex="-1">\n        </a>\n\n        <cnv-editor cnv-text-editor-mode="full"\n            cnv-text-editor-ctrl="noteEditorCtrl"\n            cnv-at-mentions="getShareWithDropdownItems($query, delimiter, 0)"\n            cnv-hashtags="getHashtagDropdownItems($query)" \n            cnv-placeholder="{{::cnv_mainPlaceholder}}"\n            toolbar-id="inline-insert-toolbar" \n            cnv-at-mentions-suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html"\n            cnv-text-editor-on-url-added="onUrlAddedInNoteEditor(url)"\n            cnv-on-at-mention-added="onAtMentionAdded(item)"\n            cnv-on-command-executed="OnCommandExecuted(item, search)"\n            cnv-on-hash-tag-added="onHashTagAdded(item)"\n            cnv-on-at-mention-removed="onAtMentionRemoved(item)" \n            cnv-text-selection-removed="onTextSelectionRemoved($atMentionNodes)" \n            cnv-text-editor-on-esc-key-press="onEscKeyPressInTextEditor()"\n            cnv-text-editor-on-ctrl-or-cmd-enter-press="onCtrlOrCmdEnterPressInTextEditor()"\n            cnv-text-editor-on-ctrl-or-cmd-save-press="onCtrlOrCmdSavePressInTextEditor()"\n            cnv-text-editor-on-shift-tab-press="onShiftTabPressInTextEditor()"\n            cnv-editor-source="Compose">\n        </cnv-editor>\n        \n        <div class="inlineInsertEmojiHolder"><cnv-emoji-popover cnv-emoji-fixed-on-scroll= "false" cnv-editor-ctrl="noteEditorCtrl" class="emojiInlineInsert"></cnv-emoji-popover></div>\n\n        <div  cnv-upload-files-ui-manager \n              cnv-upload-files-ui-manager-ctrl="filesUploadManagerCtrl" \n              cnv-insert-add-item-options-ctrl="insertOptionsCtrl" \n              class="filesUploadContainer">\n        </div>\n        \n      </div>\n\n      <div class="link-insert edit-mode" ng-if="mode == LINK_MODE">\n        <cnv-editor cnv-text-editor-mode="basic"\n            cnv-text-editor-ctrl="linkCommentEditorCtrl"\n            cnv-at-mentions="getShareWithDropdownItems($query, delimiter ,0)"\n            cnv-hashtags="getHashtagDropdownItems($query)" \n            cnv-at-mentions-suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html"\n            cnv-on-command-executed="OnCommandExecuted(item, search)"\n            cnv-on-at-mention-added="onAtMentionAdded(item)"\n            cnv-on-at-mention-removed="onAtMentionRemoved(item)" \n            cnv-on-hash-tag-added="onHashTagAdded(item)"\n            cnv-text-selection-removed="onTextSelectionRemoved($atMentionNodes)" \n            cnv-text-editor-on-esc-key-press="onEscKeyPressInTextEditor()"\n            cnv-placeholder="Add a comment..."\n            cnv-text-editor-on-ctrl-or-cmd-enter-press="onCtrlOrCmdEnterPressInTextEditor()"\n            cnv-editor-source="Compose">\n        </cnv-editor>\n        <div cnv-share-link cnv-link-resolver-ctrl="linkResolveCtrl" class=\'link-insert-container\'></div>\n      </div>\n\n\n      <div ng-if="tagField" class="tags-field-cont">\n        <tags-input\n            ng-model="tagList"\n            pre-placeholder="Add tags: "\n            placeholder="start typing..."\n            no-tags-indicator="false" \n            add-on-comma="true"\n            add-on-blur="true"\n            add-from-autocomplete-only="false"\n            display-property="label"\n            replace-spaces-with-dashes="true"\n            prefix-delimiter="#"\n            on-esc-key-press="onEscKeyPressInToField()"\n            allowed-tags-pattern="^#[a-zA-Z_-]+.*$" \n            on-tag-added="onItemAddedInTagField($tag)"\n            on-tag-removed="onItemRemovedInTagField($tag)"\n            on-ctrl-cmd-enter="onCtrlOrCmdEnterPressInTextEditor()">\n          <auto-complete\n              source="getHashtagDropdownItems($query)"\n              load-history-on-focus="false"\n              auto-select-first-suggestion="false" \n              delimiter="#"\n              min-length="1"\n              suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html">\n          </auto-complete>\n        </tags-input>\n      </div>\n    </div>\n\n    <div id="inline-insert-toolbar" ng-if="active" ng-show="toolbarActive" class="inline-insert-toolbar-placeholder">\n\n      <span class="ql-format-group">\n        <span class="ql-format-button ql-bold icons3_Bold-{{::nativeIconColor}}"></span>\n        <span class="ql-format-button ql-italic italic-{{::nativeIconColor}}"></span>\n        <span class="ql-format-button ql-underline underline-{{::nativeIconColor}}"></span>\n        <span class="ql-format-button ql-strike strikethrough-{{::nativeIconColor}}"></span>\n        <select title="Text Color" class="ql-color">\n          <option value="#000000" selected></option><option value="#444444"></option>\n          <option value="#666666"></option><option value="#999999"></option>\n          <option value="#cccccc"></option><option value="#eeeeee"></option>\n          <option value="#f3f3f3"></option><option value="#fcfcfc"></option>\n          <option value="#ed462e"></option><option value="#f39e30"></option>\n          <option value="#fef936"></option><option value="#75f012"></option>\n          <option value="#6cf9fb"></option><option value="#0049fb"></option>\n          <option value="#8553fb"></option><option value="#e865fe"></option>\n          <option value="#eed0cd"></option><option value="#f9e7ce"></option>\n          <option value="#fcf1ce"></option><option value="#dce8d3"></option>\n          <option value="#d2e0e3"></option><option value="#d0e4f2"></option>\n          <option value="#d7d4e8"></option><option value="#e6d4db"></option>\n          <option value="#dfa29b"></option><option value="#f4cc9f"></option>\n          <option value="#fde49d"></option><option value="#bed3a9"></option>\n          <option value="#a8c4c8"></option><option value="#a2c7e5"></option>\n          <option value="#b0add5"></option><option value="#ceacbd"></option>\n          <option value="#d3746d"></option><option value="#edb573"></option>\n          <option value="#fad66e"></option><option value="#9dbe7e"></option>\n          <option value="#7fa5ad"></option><option value="#78abdb"></option>\n          <option value="#8984c1"></option><option value="#b884a1"></option>\n          <option value="#bc3723"></option><option value="#de9647"></option>\n          <option value="#ebc144"></option><option value="#78a150"></option>\n          <option value="#51818b"></option><option value="#4887c3"></option>\n          <option value="#5f5ba5"></option><option value="#9b5b79"></option>\n          <option value="#8e2819"></option><option value="#ab6520"></option>\n          <option value="#bb9223"></option><option value="#487120"></option>\n          <option value="#214f5a"></option><option value="#185891"></option>\n          <option value="#2e2b73"></option><option value="#6a2d49"></option>\n          <option value="#5e170c"></option><option value="#704314"></option>\n          <option value="#7c6014"></option><option value="#304a15"></option>\n          <option value="#16343d"></option><option value="#103b61"></option>\n          <option value="#1b1c4b"></option><option value="#461b2f"></option>\n        </select>\n      </span>\n      <span class="ql-format-separator"></span>\n      <span class="ql-format-group">\n        <span class="ql-format-button ql-list numberedlist-{{::nativeIconColor}}"></span>\n        <span class="ql-format-button ql-bullet orderedlist-{{::nativeIconColor}}"></span>\n      </span>\n      <span class="ql-format-separator" ng-hide="IS_NATIVE_MENULET"></span>\n      <span class="ql-format-group" ng-hide="IS_NATIVE_MENULET">\n        <span class="ql-inline-link ql-format-button ql-link icons_Links-{{::nativeIconColor}}"></span>\n      </span>\n    </div>\n    \n    <div class="bottom-bar-cont" ng-show="active">\n      <cnv-insert-add-item-options ng-if="mode != LINK_MODE" cnv-insert-add-item-options-ctrl="insertOptionsCtrl" class=\'add-controls pull-left\'></cnv-insert-add-item-options>\n      <button  ng-if="active" class="btn btn-primary" type="button" ng-click="onShareBtnClick()" style="-webkit-font-smoothing: subpixel-antialiased;">Share</button>\n      <label ng-hide="IS_NATIVE_MENULET">{{noteSaveText}}</label>\n      <div class="clear"></div>\n    </div>\n  </div>\n</div>\n');
    }
    ]),
    b.module("inlineInsert/cnvInsertAddItemOptions.tpl.html", []).run(["$templateCache", function(a) {
        a.put("inlineInsert/cnvInsertAddItemOptions.tpl.html", '<div class="editor-toolbar texttoolbar-{{::nativeIconColor}}" ng-class="{\'pressed\': textToolbar.active}" ng-click="textToolbar.toggle()"></div>\n\n<label class="separator"></label>\n\n<div class="icons2_Attach-{{::nativeIconColor}} attachIconInlineInsert" ><!--ng-hide="IS_NATIVE_MENULET"-->\n	<input name=\'file\' id="sharing" class=\'file-input\' type=\'file\' multiple=\'multiple\'></input>\n</div>\n<div class="icons3_Dropbox-{{::nativeIconColor}}" cnv-drop-box-files-integrator cnv-file-input-service-context="fileInputContext"></div>\n<div class="Icon2__Box-15-{{::nativeIconColor}}" cnv-box-files-integrator cnv-file-input-service-context="fileInputContext"></div>\n<div class="icons3_Google_Drive-{{::nativeIconColor}}" cnv-google-drive-files-integrator cnv-file-input-service-context="fileInputContext" ng-hide="IS_NATIVE_MENULET"></div>\n <cnv-giphy-popover cnv-file-context="fileInputContext" cnv-giphy-information="giphyObject" cnv-giphy-icon-class="giphy" cnv-giphy-mixpanel-info="Compose"></cnv-giphy-popover>\n<label class="separator"></label>\n\n<div class="icon_tag-01-01-darkgray" ng-click="toggleTagsField()"></div>\n')
    }
    ]),
    b.module("inlineInsert/dropzone/cnvDropzone.tpl.html", []).run(["$templateCache", function(a) {
        a.put("inlineInsert/dropzone/cnvDropzone.tpl.html", '<div class="dropzone" ng-show="activated" ng-class="{\'dropzone-expand\': expand, \'dropzone-collapse\': !expand}">\n	<div>\n		<div class="dropzone-target" ng-class="messageClass" ng-bind="dropzoneMessage"></div>\n	</div>\n</div>\n')
    }
    ]),
    b.module("inlineInsert/shareLink/cnvShareLink.tpl.html", []).run(["$templateCache", function(a) {
        a.put("inlineInsert/shareLink/cnvShareLink.tpl.html", "<span class='close-share-link' ng-Click='remove();'></span>\n\n\n" + '<div ng-if="state === LINK_STATE_PROCESSING" class="spinner">\n    <!-- <div class="bounce1"></div>\n    <div class="bounce2"></div>\n    <div class="bounce3"></div> -->\n    <div class="cnv-spinner light"></div>\n </div>\n\n\n\n<div class="link-container-wrapper" ng-if="state === LINK_STATE_PROCESSED || state === LINK_RESOLVE_STATE_SUCCESS || state === LINK_RESOLVE_STATE_FAILED">\n	\n	<div ng-if=\'state === LINK_RESOLVE_STATE_SUCCESS\'>\n		<div ng-if="thumbnails" class="link-share-thumbnail" style="background-image: url(\'{{ relativeToAbsolute( thumbnails[data.selectedIndex] ) }}\');">\n			<div ng-if=\'navigation == true\' class="navigation">\n				<div ng-class="{\'navigation-disable\': prevNavigation == false}" class=\'navigation-prev\'><i class="glyphicon glyphicon-chevron-left" ng-Click=\'showPrevIcon()\'></i></div>\n				<div ng-class="{\'navigation-disable\': nextNavigation == false}" class=\'navigation-next\'><i class="glyphicon glyphicon-chevron-right" ng-Click=\'showNextIcon()\'></i></div>\n			</div>\n		</div>\n	</div>\n\n	<div class="link-info" ng-if=\'state === LINK_RESOLVE_STATE_SUCCESS\'>\n		<div ng-if="!editTitleMode" class="title-text">\n			<span ng-click="editTitle($event)" ng-bind-html="data.title | limitTo:45"></span>\n		</div>\n		<textarea ng-blur="onBlur($event)" ng-if="editTitleMode" ng-model="data.title" class="title"></textarea>\n\n		<div ng-if=\'data.preview_text.length && !editDescMode\' class="link-share-description">\n			<span ng-click="editDesc($event)" ng-bind-html="data.preview_text | removeTags"></span>\n		</div>\n		<textarea ng-blur="onBlur($event)" ng-if="editDescMode" class="desc" ng-model="data.preview_text"></textarea>\n		<div class="link-share-address">{{data.domain | uppercase}}</div>\n	</div>\n\n	<a ng-if=\'state === LINK_RESOLVE_STATE_FAILED\' class="title-text" href={{::url}}>{{::url}}</a>\n	<div class="clear"></div>\n</div>\n')
    }
    ]),
    b.module("integrations/emoji/cnvEmoji.tpl.html", []).run(["$templateCache", function(a) {
        a.put("integrations/emoji/cnvEmoji.tpl.html", '<div class="cnv-emoji-popout-inner">\n	<div class="emojiSearchBar">\n            <div class="searchEmojiIcon" style="height:16px; width:16px"></div>\n            <input class="cnv-emoji-search-field" type="text" placeholder="Search" ng-model="emojiSearchText" ng-change="searchChanged()" />\n            <a ng-click="clearSearch()" ng-show="clearSearchButton"class="clear-search-button icons2_Close-lightgray"></a>\n    </div>\n	<!-- <div id = "current-category-label"></div> -->\n	<div class="cnv-emoji-container">\n		<!-- <h4>Emoji popup</h4> -->\n		<ul class="emoji-categories-list"></ul>\n	</div>\n	<div class="categories-icon-list-container">\n		<ul class="categorires-icon-list"></ul>\n	</div>\n</div>')
    }
    ]),
    b.module("integrations/emoji/cnvEmojiPopover.tpl.html", []).run(["$templateCache", function(a) {
        a.put("integrations/emoji/cnvEmojiPopover.tpl.html", '<cnv-emoji cnv-chat-window-id-for-emoji="{{mixpanelSource}}"></cnv-emoji>')
    }
    ]),
    b.module("integrations/giphy/templates/cnv-giphy.tpl.html", []).run(["$templateCache", function(a) {
        a.put("integrations/giphy/templates/cnv-giphy.tpl.html", '<div class="cnv-giphy-container">\n\n        <div class="chatSearchBar">\n                <div class="searchChatIcon"></div>\n                <input class="cnv-giphy-search-field" type="text" placeholder="Find the right GIF for any situation" ng-change="searchChanged()" ng-model="giphySearchText" ng-model-options="{ debounce: 500 }"/>\n        </div>\n        <div class="cnv-giphy-gallary">\n                <ul ng-if="!searchingGifs">\n                        <li ng-repeat=\'img in images\' style="display:inline">\n                                <img class="lazy" data-original="{{img.src}}" data-thumbnail="{{img.thumbnail}}" ng-if="images.length > 0"  bo-click="gifSelected(img)" />\n                        </li>\n\n                        <li class="not-found" ng-if="images.length === 0"></li>\n                </ul>\n                <div ng-if="searchingGifs" class="cnv-spinner light"></div>\n        </div>\n        <div class="cnv-giphy-branding"></div>\n</div>\n')
    }
    ]),
    b.module("integrations/giphy/templates/giphyDirective.tpl.html", []).run(["$templateCache", function(a) {
        a.put("integrations/giphy/templates/giphyDirective.tpl.html", '<cnv-giphy cnv-chat-window-id-for-giphy="cnvChatWindowId" cnv-file-context-of-parent-scope="cnvFileContext" cnv-giphy-rating="\'pg\'" cnv-giphy-search-text="cnvGiphyInformation.searchText" cnv-giphy-action-type="cnvGiphyInformation.actionType" cnv-update-parent-scope="getGiphySearchText(cnvGiphyInformation.searchText)" mixpanel-info="mixpanelInfo"></cnv-giphy>')
    }
    ]),
    b.module("integrations/integrationsDirectory/templates/cnvAddBoxIntegration.tpl.html", []).run(["$templateCache", function(a) {
        a.put("integrations/integrationsDirectory/templates/cnvAddBoxIntegration.tpl.html", '<p><a href="javascript:void(0)" ng-click="cancelAddIntegration()">&lt; Back to Integrations</a></p>\n<h3><span ng-bind-html="form.box_status_text"></span>Box Integration</h3>\n<div class="form-container">\n    <form>\n        <div class="connect-btn-wrapper">\n            <a class="integration-action-upload btn btn-default" onclick="angular.element(this).scope().oauth2Redirect(\'box\');\n                    return false;" href="javascript:void(0)" ng-bind-html=\'boxConnectionText\'></a>\n        </div>\n        <div bo-show=\'oauth2.box_status\'>\n            <div class="field-item">\n                <div class="field-item-left middled">\n                    <label>Select folder</label>\n                </div>\n                <div class="field-item-right">\n                    <div class="col-xs-24 col-sm-24 col-md-24 col-lg-24 no-padding">\n                        <div id="feed_search_bar" ng-click="selectBoxFolder()">\n                                <input class="pull-left" id="feed_search_input" type="text" ng-model="boxFolder" readonly="readonly" \n                                       placeholder="Search for box folders to integrate with Convo"\n                                       />\n                                <div class="search-icon"><i class="glyphicon glyphicon-search"></i></div>\n                        </div>\n                    </div>\n                    \n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">\n                    <label>Name your integration</label>\n                </div>\n                <div class="field-item-right">\n                    <input maxlength="200" type="text" name="display_name" ng-model="form.display_name" placeholder="What name should this post appear from?" required />\n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">\n                    <label>Select an icon</label>\n                    <br>\n                </div>\n                <div class="field-item-right full-width">\n                    <div class="default-icons">\n                        <img src="assets/img/integrations/box.png" ng-click="toggleDefaultIconSelection(\'box.png\')" ng-class="{\'selected\':selectedDefaultIcon == \'box.png\'}" />\n                    </div>\n                    <span class="or-container small">or</span>\n                    <div class="custom-file">\n                        <input name=\'file\' id="profile-picture-box" class=\'webhook-file-input\' type=\'file\' multiple=\'multiple\' onchange="angular.element(this).scope().onFileSelectionChanged(this, \'custom-selected-image-box\')" />\n                        <a class="integration-action-upload btn btn-default" onclick="document.getElementById(\'profile-picture-box\').click();\n                                return false;" href="javascript:void(0)">Upload Image</a>\n                        <div class="integration-user-profile-pic" bo-if="isUpdatingBox && showIntegrationProfileImage" class="user-info-wrapper">\n                            <cnv-user-profile-image user-id="updatingIntegrationUser.integration_user_id" profile-type="updatingIntegrationUser.profile_image_type"\n                                                    profile-version="updatingIntegrationUser.profile_image_version"\n                                                    full-name="updatingIntegrationUser.display_name"></cnv-user-profile-image>\n                        </div>\n                        <img class="hidden" id="custom-selected-image-box" ng-click="toggleDefaultIconSelection(\'custom\')" ng-class="{\'selected\':selectedDefaultIcon == \'custom\'}" />\n                        <div class="row file-upload-progress-container" ng-show="alerts">\n                            <div class="alert alert-success" ng-show="alerts.success" ng-bind-html="alerts.success" role="alert"></div>\n                            <div class="alert alert-danger" ng-show="alerts.error" ng-bind-html="alerts.error" role="alert"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">\n                    <label>Recipients</label>\n\n                </div>\n                <div class="field-item-right">\n                    <div class="to-field-cont">\n                        <tags-input class="to-field"\n                                    ng-model="shareWith"\n                                    placeholder="Add Recipients"\n                                    no-tags-indicator="true" \n                                    add-on-comma="false"\n                                    add-on-blur="false"\n                                    add-from-autocomplete-only="true"\n                                    display-property="label"\n                                    replace-spaces-with-dashes="false"\n                                    on-esc-key-press="onEscKeyPressInToField()"\n                                    on-tag-added="onItemAddedInToField($tag)">\n                            <auto-complete\n                                source="getShareWithDropdownItems($query)"\n                                load-history-on-focus="true"\n                                auto-select-first-suggestion="true" \n                                delimiter="@"\n                                min-length="1"\n                                suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html">\n                            </auto-complete>\n                        </tags-input>\n                    </div>\n                    <div><span class="meta-txt">Add groups, teammates or both</span></div>\n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">&nbsp;</div>\n                <div class="field-item-right action-btns-width">\n                    <button class="integration-action-finish btn btn-primary" type=\'submit\' ng-click="saveBoxIntegration();" ng-bind-html="saveButtonText" ng-disabled="uploadingFile"></button>\n                </div>\n            </div>\n        </div>\n    </form>\n</div>')
    }
    ]),
    b.module("integrations/integrationsDirectory/templates/cnvAddDropboxIntegration.tpl.html", []).run(["$templateCache", function(a) {
        a.put("integrations/integrationsDirectory/templates/cnvAddDropboxIntegration.tpl.html", '<p><a href="javascript:void(0)" ng-click="cancelAddIntegration()">&lt; Back to Integrations</a></p>\n<h3><span ng-bind-html="form.dropbox_status_text"></span> Dropbox Integration</h3>\n<div class="form-container">\n    <form>\n        <div class="connect-btn-wrapper">\n            <a class="integration-action-upload btn btn-default" onclick="angular.element(this).scope().oauth2Redirect(\'dropbox\');\n                    return false;" href="javascript:void(0)" ng-bind-html=\'dropboxConnectionText\'></a>\n        </div>\n        <div bo-show=\'oauth2.dropbox_status\'>\n            <div class="field-item">\n                <div class="field-item-left middled">\n                    <label>Select folder</label>\n                </div>\n                <div class="field-item-right">\n                    <div class="col-xs-24 col-sm-24 col-md-24 col-lg-24 no-padding">\n                        <div id="feed_search_bar" ng-click="selectDropboxDirectory()">\n                                <input class="pull-left" id="feed_search_input" type="text" ng-model="dropboxDirectory" readonly="readonly" \n                                       placeholder="Search for dropbox folders to integrate with Convo"\n                                       />\n                                <div class="search-icon"><i class="glyphicon glyphicon-search"></i></div>\n                        </div>\n                    </div>\n                    \n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">\n                    <label>Name your integration</label>\n                </div>\n                <div class="field-item-right">\n                    <input maxlength="200" type="text" name="display_name" ng-model="form.display_name" placeholder="What name should this post appear from?" required />\n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">\n                    <label>Select an icon</label>\n                    <br>\n                </div>\n                <div class="field-item-right full-width">\n                    <div class="default-icons">\n                        <img src="assets/img/integrations/dropbox.png" ng-click="toggleDefaultIconSelection(\'dropbox.png\')" ng-class="{\'selected\':selectedDefaultIcon == \'dropbox.png\'}" />\n                    </div>\n                    <span class="or-container small">or</span>\n                    <div class="custom-file">\n                        <input name=\'file\' id="profile-picture-dropbox" class=\'webhook-file-input\' type=\'file\' multiple=\'multiple\' onchange="angular.element(this).scope().onFileSelectionChanged(this, \'custom-selected-image-dropbox\')" />\n                        <a class="integration-action-upload btn btn-default" onclick="document.getElementById(\'profile-picture-dropbox\').click();\n                                return false;" href="javascript:void(0)">Upload Image</a>\n                        <div class="integration-user-profile-pic" bo-if="isUpdatingDropbox && showIntegrationProfileImage" class="user-info-wrapper">\n                            <cnv-user-profile-image user-id="updatingIntegrationUser.integration_user_id" profile-type="updatingIntegrationUser.profile_image_type"\n                                                    profile-version="updatingIntegrationUser.profile_image_version"\n                                                    full-name="updatingIntegrationUser.display_name"></cnv-user-profile-image>\n                        </div>\n                        <img class="hidden" id="custom-selected-image-dropbox" ng-click="toggleDefaultIconSelection(\'custom\')" ng-class="{\'selected\':selectedDefaultIcon == \'custom\'}" />\n                        <div class="row file-upload-progress-container" ng-show="alerts">\n                            <div class="alert alert-success" ng-show="alerts.success" ng-bind-html="alerts.success" role="alert"></div>\n                            <div class="alert alert-danger" ng-show="alerts.error" ng-bind-html="alerts.error" role="alert"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">\n                    <label>Recipients</label>\n\n                </div>\n                <div class="field-item-right">\n                    <div class="to-field-cont">\n                        <tags-input class="to-field"\n                                    ng-model="shareWith"\n                                    placeholder="Add Recipients"\n                                    no-tags-indicator="true" \n                                    add-on-comma="false"\n                                    add-on-blur="false"\n                                    add-from-autocomplete-only="true"\n                                    display-property="label"\n                                    replace-spaces-with-dashes="false"\n                                    on-esc-key-press="onEscKeyPressInToField()"\n                                    on-tag-added="onItemAddedInToField($tag)">\n                            <auto-complete\n                                source="getShareWithDropdownItems($query)"\n                                load-history-on-focus="true"\n                                auto-select-first-suggestion="true" \n                                delimiter="@"\n                                min-length="1"\n                                suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html">\n                            </auto-complete>\n                        </tags-input>\n                    </div>\n                    <div><span class="meta-txt">Add groups, teammates or both</span></div>\n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">&nbsp;</div>\n                <div class="field-item-right action-btns-width">\n                    <button class="integration-action-finish btn btn-primary" type=\'submit\' ng-click="saveDropboxIntegration();" ng-bind-html="saveButtonText" ng-disabled="uploadingFile"></button>\n                </div>\n            </div>\n        </div>\n    </form>\n</div>')
    }
    ]),
    b.module("integrations/integrationsDirectory/templates/cnvAddFacebookIntegration.tpl.html", []).run(["$templateCache", function(a) {
        a.put("integrations/integrationsDirectory/templates/cnvAddFacebookIntegration.tpl.html", '<p><a href="javascript:void(0)" ng-click="cancelAddIntegration()">&lt; Back to Integrations</a></p>\n<h3><span ng-bind-html="form.facebook_status_text"></span> Facebook Integration</h3>\n<div class="form-container">\n    <form>\n        <div class="connect-btn-wrapper">\n            <a class="integration-action-upload btn btn-default" onclick="angular.element(this).scope().oauth2Redirect(\'facebook\');\n                    return false;" href="javascript:void(0)" ng-bind-html=\'facebookConnectionText\'></a>\n        </div>\n        <div bo-show=\'oauth2.facebook_status\'>\n            <div class="field-item" bo-if="fbPageList.length > 0">\n                <div class="field-item-left">\n                    <label>Select Facebook Page</label>\n                </div>\n                <div class="field-item-right">\n                    <select bo-show=\'fbPageList.length > 0\' ng-model="form.fbPage" ng-options="fbPageItem.name for fbPageItem in fbPageList">\n\n                    </select>\n                    <span bo-show=\'fbPageList.length == 0\'>You don\'t have any Facebook pages.</span>\n                </div>\n            </div>\n            \n            <div class="field-item">\n                <div class="field-item-left">\n                    <label>Name your integration</label>\n                </div>\n                <div class="field-item-right">\n                    <input maxlength="200" type="text" name="display_name" ng-model="form.display_name" placeholder="What name should this post appear from?" required />\n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">\n                    <label>Select an icon</label>\n                    <br>\n                </div>\n                <div class="field-item-right full-width">\n                    <div class="default-icons">\n                        <img src="assets/img/integrations/facebook.png" ng-click="toggleDefaultIconSelection(\'facebook.png\')" ng-class="{\'selected\':selectedDefaultIcon == \'facebook.png\'}" />\n                    </div>\n                    <span class="or-container small">or</span>\n                    <div class="custom-file">\n                        <input name=\'file\' id="profile-picture-facebook" class=\'webhook-file-input\' type=\'file\' multiple=\'multiple\' onchange="angular.element(this).scope().onFileSelectionChanged(this, \'custom-selected-image-facebook\')" />\n                        <a class="integration-action-upload btn btn-default" onclick="document.getElementById(\'profile-picture-facebook\').click();\n                                return false;" href="javascript:void(0)">Upload Image</a>\n                        <div class="integration-user-profile-pic" bo-if="isUpdatingFacebook && showIntegrationProfileImage" class="user-info-wrapper">\n                            <cnv-user-profile-image user-id="updatingIntegrationUser.integration_user_id" profile-type="updatingIntegrationUser.profile_image_type"\n                                                    profile-version="updatingIntegrationUser.profile_image_version"\n                                                    full-name="updatingIntegrationUser.display_name"></cnv-user-profile-image>\n                        </div>\n                        <img class="hidden" id="custom-selected-image-facebook" ng-click="toggleDefaultIconSelection(\'custom\')" ng-class="{\'selected\':selectedDefaultIcon == \'custom\'}" />\n                        <div class="row file-upload-progress-container" ng-show="alerts">\n                            <div class="alert alert-success" ng-show="alerts.success" ng-bind-html="alerts.success" role="alert"></div>\n                            <div class="alert alert-danger" ng-show="alerts.error" ng-bind-html="alerts.error" role="alert"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">\n                    <label>Recipients</label>\n\n                </div>\n                <div class="field-item-right">\n                    <div class="to-field-cont">\n                        <tags-input class="to-field"\n                                    ng-model="shareWith"\n                                    placeholder="Add Recipients"\n                                    no-tags-indicator="true" \n                                    add-on-comma="false"\n                                    add-on-blur="false"\n                                    horizontal-flow = "false"\n                                    add-from-autocomplete-only="true"\n                                    display-property="label"\n                                    replace-spaces-with-dashes="false"\n                                    on-esc-key-press="onEscKeyPressInToField()"\n                                    on-tag-added="onItemAddedInToField($tag)">\n                            <auto-complete\n                                source="getShareWithDropdownItems($query)"\n                                load-history-on-focus="true"\n                                auto-select-first-suggestion="true" \n                                delimiter="@"\n                                min-length="1"\n                                suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html">\n                            </auto-complete>\n                        </tags-input>\n                    </div>\n                    <div><span class="meta-txt">Add groups, teammates or both</span></div>\n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">&nbsp;</div>\n                <div class="field-item-right action-btns-width">\n                    <button class="integration-action-finish btn btn-primary" type=\'submit\' ng-click="saveFacebookIntegration();" ng-bind-html="saveButtonText" ng-disabled="uploadingFile"></button>\n                </div>\n            </div>\n        </div>\n    </form>\n</div>')
    }
    ]),
    b.module("integrations/integrationsDirectory/templates/cnvAddGcalIntegration.tpl.html", []).run(["$templateCache", function(a) {
        a.put("integrations/integrationsDirectory/templates/cnvAddGcalIntegration.tpl.html", '<p><a href="javascript:void(0)" ng-click="cancelAddIntegration()">&lt; Back to Integrations</a></p>\n<h3><span ng-bind-html="form.gcal_status_text"></span> Google Calendar Integration</h3>\n<div class="form-container">\n    <form>\n        <div class="connect-btn-wrapper">\n            <a class="integration-action-upload btn btn-default" onclick="angular.element(this).scope().oauth2Redirect(\'gcal\');\n                    return false;" href="javascript:void(0)" ng-bind-html=\'gcalConnectionText\'></a>\n        </div>\n        <div bo-show=\'oauth2.gcal_status\'>\n            <div class="field-item" bo-if="calendarList.length > 0">\n                <div class="field-item-left">\n                    <label>Select Google Calendar</label>\n                </div>\n                <div class="field-item-right">\n                    <select ng-model="form.calendar" ng-options="calendarItem.summary for calendarItem in calendarList">\n\n                    </select>\n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">\n                    <label>Remind me</label>\n                </div>\n                <div class="field-item-right">\n                    <select ng-model="form.gcal_time_before">\n                        <option value="-1">Don\'t remind me</option>\n                        <option value="10">10 minutes</option>\n                        <option value="20">20 minutes</option>\n                        <option value="30">30 minutes</option>\n                    </select>\n                    <div><span class="meta-txt">How long before the event do you want a reminder?</span></div>\n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">\n                    <label>Name your integration</label>\n                </div>\n                <div class="field-item-right">\n                    <input maxlength="200" type="text" name="display_name" ng-model="form.display_name" placeholder="What name should this post appear from?" required />\n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">\n                    <label>Select an icon</label>\n                    <br>\n                </div>\n                <div class="field-item-right full-width">\n                    <div class="default-icons">\n                        <img src="assets/img/integrations/calendar.png" ng-click="toggleDefaultIconSelection(\'gcaladd.png\')" ng-class="{\'selected\':selectedDefaultIcon == \'gcaladd.png\'}" />\n                    </div>\n                    <span class="or-container small">or</span>\n                    <div class="custom-file">\n                        <input name=\'file\' id="profile-picture-gcal" class=\'webhook-file-input\' type=\'file\' multiple=\'multiple\' onchange="angular.element(this).scope().onFileSelectionChanged(this, \'custom-selected-image-gcal\')" />\n                        <a class="integration-action-upload btn btn-default" onclick="document.getElementById(\'profile-picture-gcal\').click();\n                                return false;" href="javascript:void(0)">Upload Image</a>\n                        <div class="integration-user-profile-pic" bo-if="isUpdatingGcal && showIntegrationProfileImage" class="user-info-wrapper">\n                            <cnv-user-profile-image user-id="updatingIntegrationUser.integration_user_id" profile-type="updatingIntegrationUser.profile_image_type"\n                                                    profile-version="updatingIntegrationUser.profile_image_version"\n                                                    full-name="updatingIntegrationUser.display_name"></cnv-user-profile-image>\n                        </div>\n                        <img class="hidden" id="custom-selected-image-gcal" ng-click="toggleDefaultIconSelection(\'custom\')" ng-class="{\'selected\':selectedDefaultIcon == \'custom\'}" />\n                        <div class="row file-upload-progress-container" ng-show="alerts">\n                            <div class="alert alert-success" ng-show="alerts.success" ng-bind-html="alerts.success" role="alert"></div>\n                            <div class="alert alert-danger" ng-show="alerts.error" ng-bind-html="alerts.error" role="alert"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">\n                    <label>Recipients</label>\n\n                </div>\n                <div class="field-item-right">\n                    <div class="to-field-cont">\n                        <tags-input class="to-field"\n                                    ng-model="shareWith"\n                                    placeholder="Add Recipients"\n                                    no-tags-indicator="true" \n                                    add-on-comma="false"\n                                    add-on-blur="false"\n                                    horizontal-flow = "false"\n                                    add-from-autocomplete-only="true"\n                                    display-property="label"\n                                    replace-spaces-with-dashes="false"\n                                    on-esc-key-press="onEscKeyPressInToField()"\n                                    on-tag-added="onItemAddedInToField($tag)">\n                            <auto-complete\n                                source="getShareWithDropdownItems($query)"\n                                load-history-on-focus="true"\n                                auto-select-first-suggestion="true" \n                                delimiter="@"\n                                min-length="1"\n                                suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html">\n                            </auto-complete>\n                        </tags-input>\n                    </div>\n                    <div><span class="meta-txt">Add groups, teammates or both</span></div>\n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">&nbsp;</div>\n                <div class="field-item-right action-btns-width">\n                    <button class="integration-action-finish btn btn-primary" type=\'submit\' ng-click="saveGcalIntegration();" ng-bind-html="saveButtonText" ng-disabled="uploadingFile"></button>\n                </div>\n            </div>\n        </div>\n    </form>\n</div>');
    }
    ]),
    b.module("integrations/integrationsDirectory/templates/cnvAddGdriveIntegration.tpl.html", []).run(["$templateCache", function(a) {
        a.put("integrations/integrationsDirectory/templates/cnvAddGdriveIntegration.tpl.html", '<p><a href="javascript:void(0)" ng-click="cancelAddIntegration()">&lt; Back to Integrations</a></p>\n<h3><span ng-bind-html="form.gdrive_status_text"></span> Google Drive Integration</h3>\n<div class="form-container">\n    <form>\n        <div class="connect-btn-wrapper">\n            <a class="integration-action-upload btn btn-default" onclick="angular.element(this).scope().oauth2Redirect(\'gdrive\');\n                    return false;" href="javascript:void(0)" ng-bind-html=\'gdriveConnectionText\'></a>\n        </div>\n        <div bo-show=\'oauth2.gdrive_status\'>\n            <div class="field-item">\n                <div class="field-item-left middled">\n                    <label>Select folder</label>\n                </div>\n                <div class="field-item-right">\n                    <div class="col-xs-24 col-sm-24 col-md-24 col-lg-24 no-padding">\n                        <div id="feed_search_bar" ng-click="selectGDriveFolder()">\n                                <input class="pull-left" id="feed_search_input" type="text" ng-model="gdriveFolder" readonly="readonly" \n                                       placeholder="Search for Google Drive folders to integrate with Convo"\n                                       />\n                                <div class="search-icon"><i class="glyphicon glyphicon-search"></i></div>\n                        </div>\n                    </div>\n                    \n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">\n                    <label>Name your integration</label>\n                </div>\n                <div class="field-item-right">\n                    <input maxlength="200" type="text" name="display_name" ng-model="form.display_name" placeholder="What name should this post appear from?" required />\n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">\n                    <label>Select an icon</label>\n                    <br>\n                </div>\n                <div class="field-item-right full-width">\n                    <div class="default-icons">\n                        <img src="assets/img/integrations/googledrive.png" ng-click="toggleDefaultIconSelection(\'gdrive.png\')" ng-class="{\'selected\':selectedDefaultIcon == \'gdrive.png\'}" />\n                    </div>\n                    <span class="or-container small">or</span>\n                    <div class="custom-file">\n                        <input name=\'file\' id="profile-picture-gdrive" class=\'webhook-file-input\' type=\'file\' multiple=\'multiple\' onchange="angular.element(this).scope().onFileSelectionChanged(this, \'custom-selected-image-gdrive\')" />\n                        <a class="integration-action-upload btn btn-default" onclick="document.getElementById(\'profile-picture-gdrive\').click();\n                                return false;" href="javascript:void(0)">Upload Image</a>\n                        <div class="integration-user-profile-pic" bo-if="isUpdatingGdrive && showIntegrationProfileImage" class="user-info-wrapper">\n                            <cnv-user-profile-image user-id="updatingIntegrationUser.integration_user_id" profile-type="updatingIntegrationUser.profile_image_type"\n                                                    profile-version="updatingIntegrationUser.profile_image_version"\n                                                    full-name="updatingIntegrationUser.display_name"></cnv-user-profile-image>\n                        </div>\n                        <img class="hidden" id="custom-selected-image-gdrive" ng-click="toggleDefaultIconSelection(\'custom\')" ng-class="{\'selected\':selectedDefaultIcon == \'custom\'}" />\n                        <div class="row file-upload-progress-container" ng-show="alerts">\n                            <div class="alert alert-success" ng-show="alerts.success" ng-bind-html="alerts.success" role="alert"></div>\n                            <div class="alert alert-danger" ng-show="alerts.error" ng-bind-html="alerts.error" role="alert"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">\n                    <label>Recipients</label>\n\n                </div>\n                <div class="field-item-right">\n                    <div class="to-field-cont">\n                        <tags-input class="to-field"\n                                    ng-model="shareWith"\n                                    placeholder="Add Recipients"\n                                    no-tags-indicator="true" \n                                    add-on-comma="false"\n                                    add-on-blur="false"\n                                    add-from-autocomplete-only="true"\n                                    display-property="label"\n                                    replace-spaces-with-dashes="false"\n                                    on-esc-key-press="onEscKeyPressInToField()"\n                                    on-tag-added="onItemAddedInToField($tag)">\n                            <auto-complete\n                                source="getShareWithDropdownItems($query)"\n                                load-history-on-focus="true"\n                                auto-select-first-suggestion="true" \n                                delimiter="@"\n                                min-length="1"\n                                suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html">\n                            </auto-complete>\n                        </tags-input>\n                    </div>\n                    <div><span class="meta-txt">Add groups, teammates or both</span></div>\n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">&nbsp;</div>\n                <div class="field-item-right action-btns-width">\n                    <button class="integration-action-finish btn btn-primary" type=\'submit\' ng-click="saveGdriveIntegration();" ng-bind-html="saveButtonText" ng-disabled="uploadingFile"></button>\n                </div>\n            </div>\n        </div>\n    </form>\n</div>')
    }
    ]),
    b.module("integrations/integrationsDirectory/templates/cnvAddGmailIntegration.tpl.html", []).run(["$templateCache", function(a) {
        a.put("integrations/integrationsDirectory/templates/cnvAddGmailIntegration.tpl.html", '<p><a href="javascript:void(0)" ng-click="cancelAddIntegration()">&lt; Back to Integrations</a></p>\n<h3><span ng-bind-html="form.gmail_status_text"></span> Gmail Integration</h3>\n<div class="form-container">\n    <form>\n        <div class="connect-btn-wrapper">\n            <a class="integration-action-upload btn btn-default" onclick="angular.element(this).scope().oauth2Redirect(\'gmail\');\n                    return false;" href="javascript:void(0)" ng-bind-html=\'gmailConnectionText\'></a>\n        </div>\n        <div bo-show=\'oauth2.gmail_status\'>\n            <div class="field-item" bo-if="gmailLabelList.length > 0">\n                <div class="field-item-left">\n                    <label>Label/Mailbox</label>\n                </div>\n                <div class="field-item-right">\n                    <select ng-model="form.gmailLabel" ng-options="label.name for label in gmailLabelList track by label.id">\n\n                    </select>\n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">\n                    <label>Name your integration</label>\n                </div>\n                <div class="field-item-right">\n                    <input maxlength="200" type="text" name="display_name" ng-model="form.display_name" placeholder="What name should this post appear from?" required />\n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">\n                    <label>Select an icon</label>\n                    <br>\n                </div>\n                <div class="field-item-right full-width">\n                    <div class="default-icons">\n                        <img src="assets/img/integrations/gmail.png" ng-click="toggleDefaultIconSelection(\'gmail.png\')" ng-class="{\'selected\':selectedDefaultIcon == \'gmail.png\'}" />\n                    </div>\n                    <span class="or-container small">or</span>\n                    <div class="custom-file">\n                        <input name=\'file\' id="profile-picture-gmail" class=\'webhook-file-input\' type=\'file\' multiple=\'multiple\' onchange="angular.element(this).scope().onFileSelectionChanged(this, \'custom-selected-image-gmail\')" />\n                        <a class="integration-action-upload btn btn-default" onclick="document.getElementById(\'profile-picture-gmail\').click();\n                                return false;" href="javascript:void(0)">Upload Image</a>\n                        <div class="integration-user-profile-pic" bo-if="isUpdatingGmail && showIntegrationProfileImage" class="user-info-wrapper">\n                            <cnv-user-profile-image user-id="updatingIntegrationUser.integration_user_id" profile-type="updatingIntegrationUser.profile_image_type"\n                                                    profile-version="updatingIntegrationUser.profile_image_version"\n                                                    full-name="updatingIntegrationUser.display_name"></cnv-user-profile-image>\n                        </div>\n                        <img class="hidden" id="custom-selected-image-gmail" ng-click="toggleDefaultIconSelection(\'custom\')" ng-class="{\'selected\':selectedDefaultIcon == \'custom\'}" />\n                        <div class="row file-upload-progress-container" ng-show="alerts">\n                            <div class="alert alert-success" ng-show="alerts.success" ng-bind-html="alerts.success" role="alert"></div>\n                            <div class="alert alert-danger" ng-show="alerts.error" ng-bind-html="alerts.error" role="alert"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">\n                    <label>Recipients</label>\n\n                </div>\n                <div class="field-item-right">\n                    <div class="to-field-cont">\n                        <tags-input class="to-field"\n                                    ng-model="shareWith"\n                                    placeholder="Add Recipients"\n                                    no-tags-indicator="true" \n                                    add-on-comma="false"\n                                    add-on-blur="false"\n                                    horizontal-flow = "false"\n                                    add-from-autocomplete-only="true"\n                                    display-property="label"\n                                    replace-spaces-with-dashes="false"\n                                    on-esc-key-press="onEscKeyPressInToField()"\n                                    on-tag-added="onItemAddedInToField($tag)">\n                            <auto-complete\n                                source="getShareWithDropdownItems($query)"\n                                load-history-on-focus="true"\n                                auto-select-first-suggestion="true" \n                                delimiter="@"\n                                min-length="1"\n                                suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html">\n                            </auto-complete>\n                        </tags-input>\n                    </div>\n                    <div><span class="meta-txt">Add groups, teammates or both</span></div>\n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">&nbsp;</div>\n                <div class="field-item-right action-btns-width">\n                    <button class="integration-action-finish btn btn-primary" type=\'submit\' ng-click="saveGmailIntegration();" ng-bind-html="saveButtonText" ng-disabled="uploadingFile"></button>\n                </div>\n            </div>\n        </div>\n    </form>\n</div>')
    }
    ]),
    b.module("integrations/integrationsDirectory/templates/cnvAddO365CalendarIntegration.tpl.html", []).run(["$templateCache", function(a) {
        a.put("integrations/integrationsDirectory/templates/cnvAddO365CalendarIntegration.tpl.html", '<p><a href="javascript:void(0)" ng-click="cancelAddIntegration()">&lt; Back to Integrations</a></p>\n<h3><span ng-bind-html="form.o365calendar_status_text"></span> Office 365 Calendar Integration</h3>\n<div class="form-container">\n    <form>\n        <div class="connect-btn-wrapper">\n            <a class="integration-action-upload btn btn-default" onclick="angular.element(this).scope().oauth2Redirect(\'o365\');\n                    return false;" href="javascript:void(0)" ng-bind-html=\'O365ConnectionText\'></a>\n        </div>\n        <div bo-show=\'oauth2.o365_status\'>\n            <div class="field-item" bo-if="o365CalendarsList.length > 0">\n                <div class="field-item-left">\n                    <label>Calendar</label>\n                </div>\n                <div class="field-item-right">\n                    <select ng-model="form.o365Calendar" ng-options="calendar.title for calendar in o365CalendarsList track by calendar.id">\n\n                    </select>\n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">\n                    <label>Remind me</label>\n                </div>\n                <div class="field-item-right">\n                    <select ng-model="form.ocal_time_before">\n                        <option value="-1">Don\'t remind me</option>\n                        <option value="10">10 minutes</option>\n                        <option value="20">20 minutes</option>\n                        <option value="30">30 minutes</option>\n                    </select>\n                    <div><span class="meta-txt">How long before the event do you want a reminder?</span></div>\n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">\n                    <label>Name your integration</label>\n                </div>\n                <div class="field-item-right">\n                    <input maxlength="200" type="text" name="display_name" ng-model="form.display_name" placeholder="What name should this post appear from?" required />\n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">\n                    <label>Select an icon</label>\n                    <br>\n                </div>\n                <div class="field-item-right full-width">\n                    <div class="default-icons">\n                        <img src="assets/img/integrations/o365_calendar.png" ng-click="toggleDefaultIconSelection(\'o365_calendar.png\')" ng-class="{\'selected\':selectedDefaultIcon == \'o365_calendar.png\'}" />\n                    </div>\n                    <span class="or-container small">or</span>\n                    <div class="custom-file">\n                        <input name=\'file\' id="profile-picture-o365calendar" class=\'webhook-file-input\' type=\'file\' multiple=\'multiple\' onchange="angular.element(this).scope().onFileSelectionChanged(this, \'custom-selected-image-o365calendar\')" />\n                        <a class="integration-action-upload btn btn-default" onclick="document.getElementById(\'profile-picture-o365calendar\').click();\n                                return false;" href="javascript:void(0)">Upload Image</a>\n                        <div class="integration-user-profile-pic" bo-if="isUpdatingGmail && showIntegrationProfileImage" class="user-info-wrapper">\n                            <cnv-user-profile-image user-id="updatingIntegrationUser.integration_user_id" profile-type="updatingIntegrationUser.profile_image_type"\n                                                    profile-version="updatingIntegrationUser.profile_image_version"\n                                                    full-name="updatingIntegrationUser.display_name"></cnv-user-profile-image>\n                        </div>\n                        <img class="hidden" id="custom-selected-image-gmail" ng-click="toggleDefaultIconSelection(\'custom\')" ng-class="{\'selected\':selectedDefaultIcon == \'custom\'}" />\n                        <div class="row file-upload-progress-container" ng-show="alerts">\n                            <div class="alert alert-success" ng-show="alerts.success" ng-bind-html="alerts.success" role="alert"></div>\n                            <div class="alert alert-danger" ng-show="alerts.error" ng-bind-html="alerts.error" role="alert"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">\n                    <label>Recipients</label>\n\n                </div>\n                <div class="field-item-right">\n                    <div class="to-field-cont">\n                        <tags-input class="to-field"\n                                    ng-model="shareWith"\n                                    placeholder="Add Recipients"\n                                    no-tags-indicator="true" \n                                    add-on-comma="false"\n                                    add-on-blur="false"\n                                    horizontal-flow = "false"\n                                    add-from-autocomplete-only="true"\n                                    display-property="label"\n                                    replace-spaces-with-dashes="false"\n                                    on-esc-key-press="onEscKeyPressInToField()"\n                                    on-tag-added="onItemAddedInToField($tag)">\n                            <auto-complete\n                                source="getShareWithDropdownItems($query)"\n                                load-history-on-focus="true"\n                                auto-select-first-suggestion="true" \n                                delimiter="@"\n                                min-length="1"\n                                suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html">\n                            </auto-complete>\n                        </tags-input>\n                    </div>\n                    <div><span class="meta-txt">Add groups, teammates or both</span></div>\n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">&nbsp;</div>\n                <div class="field-item-right action-btns-width">\n                    <button class="integration-action-finish btn btn-primary" type=\'submit\' ng-click="saveO365Integration(\'calendar\');" ng-bind-html="saveButtonText" ng-disabled="uploadingFile"></button>\n                </div>\n            </div>\n        </div>\n    </form>\n</div>')
    }
    ]),
    b.module("integrations/integrationsDirectory/templates/cnvAddO365DriveIntegration.tpl.html", []).run(["$templateCache", function(a) {
        a.put("integrations/integrationsDirectory/templates/cnvAddO365DriveIntegration.tpl.html", '<p><a href="javascript:void(0)" ng-click="cancelAddIntegration()">&lt; Back to Integrations</a></p>\n<h3><span ng-bind-html="form.o365drive_status_text"></span> Office 365 OneDrive Integration</h3>\n<div class="form-container">\n    <form>\n        <div class="connect-btn-wrapper">\n            <a class="integration-action-upload btn btn-default" onclick="angular.element(this).scope().oauth2Redirect(\'o365\');\n                    return false;" href="javascript:void(0)" ng-bind-html=\'O365ConnectionText\'></a>\n        </div>\n        <div bo-show=\'oauth2.o365_status\'>\n            <div class="field-item">\n                <div class="field-item-left middled">\n                    <label>Select folder</label>\n                </div>\n                <div class="field-item-right">\n                    <div class="col-xs-24 col-sm-24 col-md-24 col-lg-24 no-padding">\n                        <div id="feed_search_bar" ng-click="selectODriveFolder()">\n                                <input class="pull-left" id="feed_search_input" type="text" ng-model="odriveFolder" readonly="readonly" \n                                       placeholder="Search for OneDrive folders to integrate with Convo"\n                                       />\n                                <div class="search-icon"><i class="glyphicon glyphicon-search"></i></div>\n                        </div>\n                    </div>\n                    \n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">\n                    <label>Name your integration</label>\n                </div>\n                <div class="field-item-right">\n                    <input maxlength="200" type="text" name="display_name" ng-model="form.display_name" placeholder="What name should this post appear from?" required />\n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">\n                    <label>Select an icon</label>\n                    <br>\n                </div>\n                <div class="field-item-right full-width">\n                    <div class="default-icons">\n                        <img src="assets/img/integrations/onedrive.png" ng-click="toggleDefaultIconSelection(\'onedrive.png\')" ng-class="{\'selected\':selectedDefaultIcon == \'onedrive.png\'}" />\n                    </div>\n                    <span class="or-container small">or</span>\n                    <div class="custom-file">\n                        <input name=\'file\' id="profile-picture-o365drive" class=\'webhook-file-input\' type=\'file\' multiple=\'multiple\' onchange="angular.element(this).scope().onFileSelectionChanged(this, \'custom-selected-image-gmail\')" />\n                        <a class="integration-action-upload btn btn-default" onclick="document.getElementById(\'profile-picture-o365drive\').click();\n                                return false;" href="javascript:void(0)">Upload Image</a>\n                        <div class="integration-user-profile-pic" bo-if="isUpdatingGmail && showIntegrationProfileImage" class="user-info-wrapper">\n                            <cnv-user-profile-image user-id="updatingIntegrationUser.integration_user_id" profile-type="updatingIntegrationUser.profile_image_type"\n                                                    profile-version="updatingIntegrationUser.profile_image_version"\n                                                    full-name="updatingIntegrationUser.display_name"></cnv-user-profile-image>\n                        </div>\n                        <img class="hidden" id="custom-selected-image-gmail" ng-click="toggleDefaultIconSelection(\'custom\')" ng-class="{\'selected\':selectedDefaultIcon == \'custom\'}" />\n                        <div class="row file-upload-progress-container" ng-show="alerts">\n                            <div class="alert alert-success" ng-show="alerts.success" ng-bind-html="alerts.success" role="alert"></div>\n                            <div class="alert alert-danger" ng-show="alerts.error" ng-bind-html="alerts.error" role="alert"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">\n                    <label>Recipients</label>\n\n                </div>\n                <div class="field-item-right">\n                    <div class="to-field-cont">\n                        <tags-input class="to-field"\n                                    ng-model="shareWith"\n                                    placeholder="Add Recipients"\n                                    no-tags-indicator="true" \n                                    add-on-comma="false"\n                                    add-on-blur="false"\n                                    horizontal-flow = "false"\n                                    add-from-autocomplete-only="true"\n                                    display-property="label"\n                                    replace-spaces-with-dashes="false"\n                                    on-esc-key-press="onEscKeyPressInToField()"\n                                    on-tag-added="onItemAddedInToField($tag)">\n                            <auto-complete\n                                source="getShareWithDropdownItems($query)"\n                                load-history-on-focus="true"\n                                auto-select-first-suggestion="true" \n                                delimiter="@"\n                                min-length="1"\n                                suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html">\n                            </auto-complete>\n                        </tags-input>\n                    </div>\n                    <div><span class="meta-txt">Add groups, teammates or both</span></div>\n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">&nbsp;</div>\n                <div class="field-item-right action-btns-width">\n                    <button class="integration-action-finish btn btn-primary" type=\'submit\' ng-click="saveO365Integration(\'drive\');" ng-bind-html="saveButtonText" ng-disabled="uploadingFile"></button>\n                </div>\n            </div>\n        </div>\n    </form>\n</div>')
    }
    ]),
    b.module("integrations/integrationsDirectory/templates/cnvAddO365MailIntegration.tpl.html", []).run(["$templateCache", function(a) {
        a.put("integrations/integrationsDirectory/templates/cnvAddO365MailIntegration.tpl.html", '<p><a href="javascript:void(0)" ng-click="cancelAddIntegration()">&lt; Back to Integrations</a></p>\n<h3><span ng-bind-html="form.o365mail_status_text"></span> Office 365 Mail Integration</h3>\n<div class="form-container">\n    <form>\n        <div class="connect-btn-wrapper">\n            <a class="integration-action-upload btn btn-default" onclick="angular.element(this).scope().oauth2Redirect(\'o365\');\n                    return false;" href="javascript:void(0)" ng-bind-html=\'O365ConnectionText\'></a>\n        </div>\n        <div bo-show=\'oauth2.o365_status\'>\n            <div class="field-item" bo-if="o365MailFolderList.length > 0">\n                <div class="field-item-left">\n                    <label>Folder</label>\n                </div>\n                <div class="field-item-right">\n                    <select ng-model="form.o365MailFolder" ng-options="folder.title for folder in o365MailFolderList track by folder.folder_id">\n\n                    </select>\n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">\n                    <label>Name your integration</label>\n                </div>\n                <div class="field-item-right">\n                    <input maxlength="200" type="text" name="display_name" ng-model="form.display_name" placeholder="What name should this post appear from?" required />\n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">\n                    <label>Select an icon</label>\n                    <br>\n                </div>\n                <div class="field-item-right full-width">\n                    <div class="default-icons">\n                        <img src="assets/img/integrations/o365_mail.png" ng-click="toggleDefaultIconSelection(\'o365_mail.png\')" ng-class="{\'selected\':selectedDefaultIcon == \'o365_mail.png\'}" />\n                    </div>\n                    <span class="or-container small">or</span>\n                    <div class="custom-file">\n                        <input name=\'file\' id="profile-picture-o365mail" class=\'webhook-file-input\' type=\'file\' multiple=\'multiple\' onchange="angular.element(this).scope().onFileSelectionChanged(this, \'custom-selected-image-gmail\')" />\n                        <a class="integration-action-upload btn btn-default" onclick="document.getElementById(\'profile-picture-o365mail\').click();\n                                return false;" href="javascript:void(0)">Upload Image</a>\n                        <div class="integration-user-profile-pic" bo-if="isUpdatingGmail && showIntegrationProfileImage" class="user-info-wrapper">\n                            <cnv-user-profile-image user-id="updatingIntegrationUser.integration_user_id" profile-type="updatingIntegrationUser.profile_image_type"\n                                                    profile-version="updatingIntegrationUser.profile_image_version"\n                                                    full-name="updatingIntegrationUser.display_name"></cnv-user-profile-image>\n                        </div>\n                        <img class="hidden" id="custom-selected-image-gmail" ng-click="toggleDefaultIconSelection(\'custom\')" ng-class="{\'selected\':selectedDefaultIcon == \'custom\'}" />\n                        <div class="row file-upload-progress-container" ng-show="alerts">\n                            <div class="alert alert-success" ng-show="alerts.success" ng-bind-html="alerts.success" role="alert"></div>\n                            <div class="alert alert-danger" ng-show="alerts.error" ng-bind-html="alerts.error" role="alert"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">\n                    <label>Recipients</label>\n\n                </div>\n                <div class="field-item-right">\n                    <div class="to-field-cont">\n                        <tags-input class="to-field"\n                                    ng-model="shareWith"\n                                    placeholder="Add Recipients"\n                                    no-tags-indicator="true" \n                                    add-on-comma="false"\n                                    add-on-blur="false"\n                                    horizontal-flow = "false"\n                                    add-from-autocomplete-only="true"\n                                    display-property="label"\n                                    replace-spaces-with-dashes="false"\n                                    on-esc-key-press="onEscKeyPressInToField()"\n                                    on-tag-added="onItemAddedInToField($tag)">\n                            <auto-complete\n                                source="getShareWithDropdownItems($query)"\n                                load-history-on-focus="true"\n                                auto-select-first-suggestion="true" \n                                delimiter="@"\n                                min-length="1"\n                                suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html">\n                            </auto-complete>\n                        </tags-input>\n                    </div>\n                    <div><span class="meta-txt">Add groups, teammates or both</span></div>\n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">&nbsp;</div>\n                <div class="field-item-right action-btns-width">\n                    <button class="integration-action-finish btn btn-primary" type=\'submit\' ng-click="saveO365Integration(\'mail\');" ng-bind-html="saveButtonText" ng-disabled="uploadingFile"></button>\n                </div>\n            </div>\n        </div>\n    </form>\n</div>');
    }
    ]),
    b.module("integrations/integrationsDirectory/templates/cnvAddTwitterIntegration.tpl.html", []).run(["$templateCache", function(a) {
        a.put("integrations/integrationsDirectory/templates/cnvAddTwitterIntegration.tpl.html", '<p><a href="javascript:void(0)" ng-click="cancelAddIntegration()">&lt; Back to Integrations</a></p>\n<h3><span ng-bind-html="form.twitter_status_text"></span> Twitter Integration</h3>\n<p class="meta-top-description">This integration will automatically share tweets matching your search criteria on groups in Convo.</p>\n<div class="form-container">\n    \n        <div class="section-separator">\n            <span>AUTHENTICATION</span>\n            <hr>\n        </div>\n        <div class="field-item">\n            <div class="field-item-left">\n                <label bo-show="!oauth2.twitter_status">You need to authenticate your Twitter account</label>\n                <label bo-show="oauth2.twitter_status">Your Twitter account</label>\n            </div>\n            <div class="field-item-right">\n                <button bo-show="!oauth2.twitter_status" class="btn btn-primary" onclick="angular.element(this).scope().oauth2Redirect(\'twitter\');\n                    return false;" href="javascript:void(0)" ng-bind-html=\'twitterConnectionText\'></button>\n                <label class="auth-in-label" bo-show="oauth2.twitter_status" class="twitter-loggedin-text" ng-bind-html=\'twitterLoggedinText\'></label>\n                <a class="auth-disconnect-link" bo-show="oauth2.twitter_status" onclick="angular.element(this).scope().oauth2Redirect(\'twitter\');\n                    return false;" href="javascript:void(0)">Disconnect this account</a>\n            </div>\n        </div>\n        <form>\n        <div bo-show=\'oauth2.twitter_status\'>\n            <div class="section-separator">\n                <a id="hash_twitter_triggers"></a><span>SELECT A TRIGGER</span>\n                <hr>\n            </div>\n            <p style="position: relative; top:-15px; clear: both;">Get tweets in real time by choosing an option below. You can track @handles, #hashtags, lists or search terms on Twitter. If you\'re a power user, you can even select multiple options.</p>\n\n            <div class="field-item">\n                <div class="field-item-left">\n                    <div class="cb-container">\n                        <input name=\'cb_twitter_handles\' class="cnv-checkbox" id="cbtwtstng1" type="checkbox" ng-true-value="1" ng-false-value="0" ng-model="twitterIntegration.enableHandles" /><label for="cbtwtstng1"></label>\n                        <span class="labelText1">Get tweets by this user</span>\n                        <span class="labelText2">Separate multiple handles with comma</span>\n                    </div>\n                    \n                </div>\n                <div class="field-item-right">\n                    <input class=\'integration-form-text-field\' id="twitter_handles" ng-keyup="validateTwitterHandles(event=$event)" ng-blur="validateTwitterHandles(event=$event)" type="text" name="twitter_handles" ng-model="twitterIntegration.handles" placeholder="@name, @anothername" ng-disabled="twitterIntegration.enableHandles==0 || twitterIntegration.verifyingHandles == 0" /> <a ng-click="openTwitterHandlesConfig();" href="javascript:void(0)">Choose the kind of tweets you want to post</a>\n                    <div class=\'twitter-handles-process-fail\' bo-show=\'twitterIntegration.invalidHandles.length > 2\'>\n                        <span ng-bind-html="twitterIntegration.twitter_handles_process_text_1"></span>\n                        <span class="likes_count" cnv-popover cnv-popover-ctrl="likeInfoTooltipText">\n                            <span class="count" bo-bind="twitterIntegration.invalidHandlesCount"></span>\n                        </span>\n                        <span> others on Twitter.</span>\n                    </div>\n                    <span id="twitter-handles-process-text"></span>\n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">\n                    <div class="cb-container">\n                        <input name=\'cb_twitter_search\' class="cnv-checkbox" id="cbtwtstng2" type="checkbox" ng-true-value="1" ng-false-value="0" ng-model="twitterIntegration.enableSearch" /><label for="cbtwtstng2"></label>\n                        <span class="labelText1">Get tweets that match this search</span>\n                        <span class="labelText2">Separate multiple keywords with comma, or search for an exact phrase.</span>\n                    </div>\n                    \n                </div>\n                <div class="field-item-right">\n                    <input id="twitter_search_term" ng-keyup="validateTwitterSearchTerm(event=$event)" type="text" class=\'twitter-search-term integration-form-text-field\'  name="twitter_search_term" ng-model="twitterIntegration.searchTerm" placeholder="happy hour" ng-disabled="twitterIntegration.enableSearch==0" />\n                    <span bo-show="twitterIntegration.twitter_search_process_text.length > 0" class="twitter-search-process-fail" ng-bind-html="twitterIntegration.twitter_search_process_text"></span>\n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">\n                    <div class="cb-container">\n                        <input name=\'cb_twitter_hashtags\' class="cnv-checkbox" id="cbtwtstng3" type="checkbox" ng-true-value="1" ng-false-value="0" ng-model="twitterIntegration.enableHashtags" /><label for="cbtwtstng3"></label>\n                        <span class="labelText1">Get tweets that contain this #hashtag</span>\n                        <span class="labelText2">e.g tweets containing the hashtag #haiku</span>\n                    </div>\n                    \n                </div>\n                <div class="field-item-right">\n                    <input class=\'integration-form-text-field\' id="twitter_hashtags" ng-keyup="validateTwitterHashtags(event=$event)" ng-blur="validateTwitterHashtags(event=$event)" type="text" name="twitter_hashtags" ng-model="twitterIntegration.hashtags" placeholder="#haiku" ng-disabled="twitterIntegration.enableHashtags==0" />\n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">\n                    <div class="cb-container">\n                        <input name=\'cb_twitter_list\' class="cnv-checkbox" id="cbtwtstng4" type="checkbox" ng-true-value="1" ng-false-value="0" ng-model="twitterIntegration.enableList" /><label for="cbtwtstng4"></label>\n                        <span class="labelText1">Get tweets from this list</span>\n                        <span class="labelText2">When there\'s a new tweet in a specific list you choose</span>\n                    </div>\n                    \n                </div>\n                <div class="field-item-right">\n                    <select bo-show=\'twitterIntegration.twitterLists.length > 0\' id="twitter_list" ng-model="twitterIntegration.list" ng-options="twitterListItem.name for twitterListItem in twitterIntegration.twitterLists" ng-disabled="twitterIntegration.enableList==0">\n\n                    </select>\n                    <span class="integration-label-light-grey" bo-show=\'twitterIntegration.twitterLists.length == 0 && !twitterIntegration.twitterListsError\'>You aren\'t subscribed to any lists.</span>\n                    <span class="integration-label-light-grey" bo-show=\'twitterIntegration.twitterListsError\' ng-bind-html="twitterIntegration.twitterListsErrorMessage"></span>\n                </div>\n            </div>\n            <div class="section-separator">\n                <span>WHO DO YOU WANT TO POST TO?</span>\n                <hr>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">\n                    <label>Choose groups</label>\n                    <span class="labelText2">This is where the tweets will be posted in Convo</span>\n                </div>\n                <div class="field-item-right">\n                    <div class="to-field-cont">\n                        <tags-input class="to-field"\n                                    ng-model="shareWith"\n                                    placeholder="Add at least one group"\n                                    no-tags-indicator="false" \n                                    add-on-comma="false"\n                                    add-on-blur="false"\n                                    add-from-autocomplete-only="true"\n                                    display-property="label"\n                                    replace-spaces-with-dashes="false"\n                                    on-esc-key-press="onEscKeyPressInToField()"\n                                    on-tag-added="onItemAddedInToField($tag)">\n                            <auto-complete\n                                source="getShareWithDropdownItems($query)"\n                                load-history-on-focus="true"\n                                auto-select-first-suggestion="true" \n                                delimiter="@"\n                                min-length="1"\n                                suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html">\n                            </auto-complete>\n                        </tags-input>\n                    </div>\n                    <div class="integration-create-new-group-link">or <a ng-click="createGroup();" href="javascript:void(0)">create a new group</a></div>\n                </div>\n            </div>\n            <div class="section-separator">\n                <span>SET UP YOUR INTEGRATION</span>\n                <hr>\n            </div>\n            \n            <div class="field-item">\n                <div class="field-item-left">\n                    <label>Name your integration</label>\n                </div>\n                <div class="field-item-right">\n                    <input class=\'integration-form-text-field\' type="text" name="display_name" ng-model="form.display_name" placeholder="What name should this post appear from?" required />\n                </div>\n            </div>\n            <div class="field-item">\n                <div class="field-item-left">\n                    <label>Select a display image</label>\n                    <br>\n                </div>\n                <div class="field-item-right">\n                    <div class="default-icons">\n                        <img src="assets/img/integrations/twitter.png" ng-click="toggleDefaultIconSelection(\'twitter.png\')" ng-class="{\'selected\':selectedDefaultIcon == \'twitter.png\'}" />\n                    </div>\n                    <span class="or-container small">or</span>\n                    <div class="custom-file">\n                        <input name=\'file\' id="profile-picture-twitter" class=\'webhook-file-input\' type=\'file\' multiple=\'multiple\' onchange="angular.element(this).scope().onFileSelectionChanged(this, \'custom-selected-image-twitter\')" />\n                        <a class="integration-action-upload btn btn-default" onclick="document.getElementById(\'profile-picture-twitter\').click();\n                                return false;" href="javascript:void(0)">Upload Image</a>\n                        <div class="integration-user-profile-pic" bo-if="isUpdatingTwitter && showIntegrationProfileImage" class="user-info-wrapper">\n                            <cnv-user-profile-image user-id="updatingIntegrationUser.integration_user_id" profile-type="updatingIntegrationUser.profile_image_type"\n                                                    profile-version="updatingIntegrationUser.profile_image_version"\n                                                    full-name="updatingIntegrationUser.display_name"></cnv-user-profile-image>\n                        </div>\n                        <img class="hidden" id="custom-selected-image-twitter" ng-click="toggleDefaultIconSelection(\'custom\')" ng-class="{\'selected\':selectedDefaultIcon == \'custom\'}" />\n                        <div class="row file-upload-progress-container" ng-show="alerts">\n                            <div class="alert alert-success" ng-show="alerts.success" ng-bind-html="alerts.success" role="alert"></div>\n                            <div class="alert alert-danger" ng-show="alerts.error" ng-bind-html="alerts.error" role="alert"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            <div class="field-item">\n                <div class="field-item-left">&nbsp;</div>\n                <div class="field-item-right action-btns-width">\n                    <button class="integration-action-finish btn btn-primary" type=\'submit\' ng-click="saveTwitterIntegration();" ng-bind-html="saveButtonText" ng-disabled="uploadingFile || twitterIntegration.verifyingHandles == 0"></button>\n                    <a class=\'integration-cancel-btn\' href="javascript:void(0)" ng-click="cancelAddIntegration()">Cancel</a>\n                </div>\n            </div>\n        </div>\n    </form>\n</div>')
    }
    ]),
    b.module("integrations/integrationsDirectory/templates/cnvAddWebhookIntegration.tpl.html", []).run(["$templateCache", function(a) {
        a.put("integrations/integrationsDirectory/templates/cnvAddWebhookIntegration.tpl.html", '<p><a href="javascript:void(0)" ng-click="cancelAddIntegration()">&lt; Back to Integrations</a></p>\n<h3><span ng-bind-html="form.webhook_status_text"></span> Webhook Integration</h3>\n<div class="form-container">\n    <form>\n        <div class="create-webhook-form-err">\n            <p ng-bind-html="errMessage"></p>\n        </div>\n        <div class="create-webhook-form-success">\n            <p ng-bind-html="successMessage"></p>\n        </div>\n\n        <div class="field-item">\n            <div class="show-webhook-integration" bo-show="isUpdatingWebhook">\n                <div class="content">\n                    <div class="url-info">\n                        <p>Paste this URL into any App that supports sending data to a webhook.</p>\n                        <input ng-readonly="true" id="webhook_url" type="text" ng-model="form.webhook_url" />\n                        <a class="copy" href="javascript:void(0)">Press Ctrl+C (or &#8984;+C on Mac) to copy the text</a>\n                    </div>\n                    <a href="javascript:void(0)" ng-model="showWebhookInstructions" ng-click="toggleInstructionsView()" ng-bind-html="showWebhookInstrucitonsLinText"></a>\n                    <div ng-show="showWebhookInstructions" class="show-hide-instructions">\n                        <p>Just a few things to keep in mind:</p>\n                        <p>Use HTTP method POST with types (JSON/x-www-form-urlencoded). If you are also sending files with your HTTP request, use enctype="multipart/form-data".</p>\n                        <p>You can send the following parameters:</p>\n                        <ul>\n                            <li><b>title </b>(optional): The title of the post.</li>\n                            <li><b>body </b>(required): The body of the post.</li>\n                            <li><b>tags </b>(optional): Comma separated list of tags you want the post to have.</li>\n                            <li><b>attachments </b>(optional): You can attach one or multiple files with your post.</li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class="field-item">\n            <div class="field-item-left">\n                <label>Name your integration</label>\n            </div>\n            <div class="field-item-right">\n                <input maxlength="200" type="text" name="display_name" ng-model="form.display_name" placeholder="e.g: Marketing, Sales or funnycatvideos" required />\n            </div>\n        </div>\n        <div class="field-item">\n            <div class="field-item-left">\n                <label>Select an icon</label>\n                <br>\n            </div>\n            <div class="field-item-right full-width">\n                <div class="default-icons">\n                    <img src="assets/img/integrations/direct.png" ng-click="toggleDefaultIconSelection(\'direct.png\')" ng-class="{\'selected\':selectedDefaultIcon == \'direct.png\'}" />\n                    <img src="assets/img/integrations/gmail.png" ng-click="toggleDefaultIconSelection(\'gmail.png\')" ng-class="{\'selected\':selectedDefaultIcon == \'gmail.png\'}" />\n                    <img src="assets/img/integrations/twitter.png" ng-click="toggleDefaultIconSelection(\'twitter.png\')" ng-class="{\'selected\':selectedDefaultIcon == \'twitter.png\'}" />\n                    <img src="assets/img/integrations/calendar.png" ng-click="toggleDefaultIconSelection(\'gcaladd.png\')" ng-class="{\'selected\':selectedDefaultIcon == \'gcaladd.png\'}" />\n                </div>\n                <span class="or-container">or</span>\n                <div class="custom-file">\n                    <input name=\'file\' id="profile-picture" class=\'webhook-file-input\' type=\'file\' multiple=\'multiple\' onchange="angular.element(this).scope().onFileSelectionChanged(this, \'custom-selected-image\')" />\n                    <a class="integration-action-upload btn btn-default" onclick="document.getElementById(\'profile-picture\').click();\n                            return false;" href="javascript:void(0)">Upload Image</a>\n                    <div ng-click="toggleDefaultIconSelection(\'custom\')" class="integration-user-profile-pic" ng-class="{\'selected\':selectedDefaultIcon == \'custom\'}" bo-if="isUpdatingWebhook && showIntegrationProfileImage" class="user-info-wrapper">\n                        <cnv-user-profile-image user-id="updatingIntegrationUser.integration_user_id" profile-type="updatingIntegrationUser.profile_image_type"\n                                                profile-version="updatingIntegrationUser.profile_image_version"\n                                                full-name="updatingIntegrationUser.display_name"></cnv-user-profile-image>\n                    </div>\n                    <img class="hidden" ng-class="{\'selected\':selectedDefaultIcon == \'custom\'}" ng-click="toggleDefaultIconSelection(\'custom\')" id="custom-selected-image" />\n                    <div class="row file-upload-progress-container" ng-show="alerts">\n                        <div class="alert alert-success" ng-show="alerts.success" ng-bind-html="alerts.success" role="alert"></div>\n                        <div class="alert alert-danger" ng-show="alerts.error" ng-bind-html="alerts.error" role="alert"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class="field-item">\n            <div class="field-item-left">\n                <label>Recipients</label>\n            </div>\n            <div class="field-item-right">\n                <div class="to-field-cont">\n                    <tags-input class="to-field"\n                                ng-model="shareWith"\n                                placeholder="Add Recipients"\n                                no-tags-indicator="true" \n                                add-on-comma="false"\n                                add-on-blur="false"\n                                horizontal-flow = "false"\n                                add-from-autocomplete-only="true"\n                                display-property="label"\n                                replace-spaces-with-dashes="false"\n                                on-esc-key-press="onEscKeyPressInToField()"\n                                on-tag-added="onItemAddedInToField($tag)">\n                        <auto-complete\n                            source="getShareWithDropdownItems($query)"\n                            load-history-on-focus="true"\n                            auto-select-first-suggestion="true" \n                            delimiter="@"\n                            min-length="1"\n                            suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html">\n                        </auto-complete>\n                    </tags-input>\n                </div>\n                <div><span class="meta-txt">Add groups, teammates or both</span></div>\n            </div>\n        </div>\n        <div class="field-item">\n            <div class="field-item-left">&nbsp;</div>\n            <div class="field-item-right action-btns-width">\n                <button class="integration-action-finish btn btn-primary" type=\'submit\' ng-click="createWebhook();" ng-bind-html="saveButtonText" ng-disabled="uploadingFile"></button>\n            </div>\n        </div>\n    </form>\n</div>')
    }
    ]),
    b.module("integrations/integrationsDirectory/templates/cnvAllIntegrations.tpl.html", []).run(["$templateCache", function(a) {
        a.put("integrations/integrationsDirectory/templates/cnvAllIntegrations.tpl.html", '<div class=\'search-bar direct-integrations\'>\n    <div class="section-separator">\n        <span bo-show="!isConfiguredIntegrationsView && !isConnectedAccountsView">Set up an integration</span>\n        <p style="width: 75%; color: #7b8386;" bo-show="!isConfiguredIntegrationsView && !isConnectedAccountsView">Integrations let you automatically pull information and activity from outside tools into your Convo network. Get real time updates of everything your team is working on, and use Convo\'s collaboration.</p>\n        <input bo-if="(users.length > 1 || isFilteredView)" ng-keyup="filerListViews(event=$event)" type="text" placeholder="Search for {{searchPlaceHolder}}"/>\n        <hr>\n    </div>\n    \n</div>\n\n<p bo-if="isFilteredView && filteredDirectIntegrations.length == 0">No record matches your search.</p>\n<div bo-show="!isFilteredView" class="user-info-wrapper"\n         bo-repeat="integration in directIntegrationsList">\n\n\n        <div class="details-wrapper">\n\n            <div style="display:block;">\n                <div class="details-wrapper-content">\n                    <div class="details-wrapper-content-left">\n                        <div class="integration-img">\n                            <img ng-src="assets/img/integrations/{{integration.image}}" />\n                        </div>\n                        <div class="integration-details">\n                            <span class="meta-txt">\n                                <span bo-bind="integration.title"></span>\n                            </span>\n                            <p class="meta-description" ng-bind-html="integration.description"></p>\n                        </div>\n                    </div>\n                    <div class="details-wrapper-content-right">\n                        <a  class="btn btn-default btn-block" ng-click="createDirectIntegration(integration.type)" bo-href="{{integration.link}}">Add</a>\n                    </div>\n\n                </div>\n\n\n            </div>\n        </div>\n\n        <div class="clear-fix"></div>\n        <hr/>\n    </div>\n\n<div bo-show="isFilteredView" class="user-info-wrapper"\n         bo-repeat="integration in filteredDirectIntegrations">\n\n\n        <div class="details-wrapper">\n\n            <div style="display:block;">\n                <div class="details-wrapper-content">\n                    <div class="details-wrapper-content-left">\n                        <div class="integration-img">\n                            <img ng-src="assets/img/integrations/{{integration.image}}" />\n                        </div>\n                        <div class="integration-details">\n                            <span class="meta-txt">\n                                <span bo-bind="integration.title"></span>\n                            </span>\n                            <p class="meta-description" ng-bind-html="integration.description"></p>\n                        </div>\n                    </div>\n                    <div class="details-wrapper-content-right">\n                        <a  class="btn btn-default btn-block" ng-click="createDirectIntegration(integration.type)" bo-href="{{integration.link}}">Add</a>\n                    </div>\n\n                </div>\n\n            </div>\n        </div>\n\n        <div class="clear-fix"></div>\n        <hr/>\n    </div>\n\n\n<div class=\'search-bar\' bo-show="!addIntegrationView  && !integrationPreview && !addGcalIntegrationView && !addTwitterIntegrationView && !addGmailIntegrationView && !addGdriveIntegrationView && !addDropboxIntegrationView && !addFacebookIntegrationView && !addO365MailIntegrationView && !addO365CalendarIntegrationView && !addO365DriveIntegrationView">\n    <div class="section-separator">\n        <span bo-show="!isConfiguredIntegrationsView && !isConnectedAccountsView">Set up a Zapier Integration</span>\n        <p style="width: 75%; color: #7b8386;" bo-show="!isConfiguredIntegrationsView && !isConnectedAccountsView">Choose from a list of these available Zapier integrations. Zapier integrations let you automatically pull information and activity from outside tools into Convo in a way that\'s timely, relevant and searchable.</p>\n        <hr>\n    </div>\n    <div class="clear-fix"></div>\n</div>\n\n<p bo-if="isFilteredView && filteredUsers.length == 0">No record matches your search.</p>\n<div bo-show="!isFilteredView" class="user-info-wrapper"\n     bo-repeat="user in users">\n\n\n    <div class="details-wrapper">\n\n        <div style="display:block;">\n            <div class="details-wrapper-content">\n                <div class="details-wrapper-content-left">\n                    <div class="integration-img">\n                        <img ng-src="assets/img/integrations/{{user.image}}" />\n                    </div>\n                    <div class="integration-details">\n                        <span class="meta-txt">\n                            <span bo-bind="user.title"></span>\n                        </span>\n                        <p class="meta-description" ng-bind-html="user.description"></p>\n                    </div>\n                </div>\n                <div class="details-wrapper-content-right">\n                    <a class="btn btn-default btn-block" ng-click="createZapierIntegration(user)" ng-href="{{user.link}}">Add</a>\n                </div>\n\n            </div>\n\n\n        </div>\n    </div>\n\n    <div class="clear-fix"></div>\n    <hr/>\n</div>\n\n<div bo-show="isFilteredView" class="user-info-wrapper"\n     bo-repeat="user in filteredUsers">\n\n\n    <div class="details-wrapper">\n\n        <div style="display:block;">\n            <div class="details-wrapper-content">\n                <div class="details-wrapper-content-left">\n                    <div class="integration-img">\n                        <img ng-src="assets/img/integrations/{{user.image}}" />\n                    </div>\n                    <div class="integration-details">\n                        <span class="meta-txt">\n                            <span bo-bind="user.title"></span>\n                        </span>\n                        <p class="meta-description" ng-bind-html="user.description"></p>\n                    </div>\n                </div>\n                <div class="details-wrapper-content-right">\n                    <a  class="btn btn-default btn-block" ng-click="createZapierIntegration(user)" ng-href="{{user.link}}">Add</a>\n                </div>\n\n            </div>\n\n        </div>\n    </div>\n\n    <div class="clear-fix"></div>\n    <hr/>\n</div>')
    }
    ]),
    b.module("integrations/integrationsDirectory/templates/cnvConfiguredIntegrations.tpl.html", []).run(["$templateCache", function(a) {
        a.put("integrations/integrationsDirectory/templates/cnvConfiguredIntegrations.tpl.html", '<p bo-if="!isFilteredView && configuredIntegrations.length == 0">You do not have any configured integrations right now.</p>\n<p bo-if="isFilteredView && filteredConfiguredIntegrations.length == 0">No record matches your search.</p>\n<div bo-show="!isFilteredView" class="user-info-wrapper"\n     bo-repeat="configuredIntegration in configuredIntegrations">\n\n\n    <div class="details-wrapper">\n        <div style="display:block;">\n            <div class="details-wrapper-content">\n                <div class="details-wrapper-content-left">\n                    <div class="integration-img">\n                        <a bo-if="configuredIntegration.status==\'ACTIVE\' || configuredIntegration.status==\'INACTIVE\'" bo-href="configuredIntegration.integration_user_id | idToFilterUrl:\'USER\'">\n                            <cnv-user-profile-image user-id="configuredIntegration.integration_user_id" profile-type="configuredIntegration.profile_image_type"\n                                                profile-version="configuredIntegration.profile_image_version"\n                                                full-name="configuredIntegration.display_name">\n                            </cnv-user-profile-image>\n                        </a>\n                    </div>\n                    <div class="integration-details">\n                        <span class="meta-txt">\n                            <a bo-if="configuredIntegration.status==\'ACTIVE\' || configuredIntegration.status==\'INACTIVE\'" bo-href="configuredIntegration.integration_user_id | idToFilterUrl:\'USER\'">\n                                <span bo-bind="configuredIntegration.display_name"></span>\n                            </a>\n                        </span>\n                        <p class="meta-description" ng-class="configuredIntegration.status" ng-bind-html="configuredIntegration.description"></p>\n                        <p bo-show="configuredIntegration.status == \'INACTIVE\'" class="disabled-text meta-description" ng-bind-html="configuredIntegration.modified_desc"></p>\n                    </div>\n                </div>\n                <div class="details-wrapper-content-right" ng-class="getIntegrationStatusClassForActionsContainer(configuredIntegration.status)">\n                    <a bo-if="true" class="cnv-icons-20" ng-class="getIntegrationStatusClass(configuredIntegration.status)" ng-click="toggleIntegrationStatus(configuredIntegration)" href="javascript:void(0);"></a>\n                    <cnv-dropdowns class="integrationsDropdown" bo-if="dropdownCtrl.options.length > 0" bo-show="configuredIntegration.is_author" cnv-dropdown-ctrl="dropdownCtrl" cnv-dropdown-callback-params="configuredIntegration"></cnv-dropdowns>\n                    <cnv-dropdowns class="integrationsDropdown" bo-if="dropdownCtrlAdmin.options.length > 0" bo-show="!configuredIntegration.is_author && configuredIntegration.is_admin" cnv-dropdown-ctrl="dropdownCtrlAdmin" cnv-dropdown-callback-params="configuredIntegration"></cnv-dropdowns>\n                </div>\n\n            </div>\n\n        </div>\n    </div>\n\n    <div class="clear-fix"></div>\n    <hr/>\n</div>\n\n<div bo-show="isFilteredView" class="user-info-wrapper"\n     bo-repeat="configuredIntegration in filteredConfiguredIntegrations">\n\n\n    <div class="details-wrapper">\n\n        <div style="display:block;">\n            <div class="details-wrapper-content">\n                <div class="details-wrapper-content-left">\n                    <div class="integration-img">\n                        <a bo-if="configuredIntegration.status==\'ACTIVE\' || configuredIntegration.status==\'INACTIVE\'" bo-href="configuredIntegration.integration_user_id | idToFilterUrl:\'USER\'">\n                            <cnv-user-profile-image user-id="configuredIntegration.integration_user_id" profile-type="configuredIntegration.profile_image_type"\n                                                profile-version="configuredIntegration.profile_image_version"\n                                                full-name="configuredIntegration.display_name"></cnv-user-profile-image>\n                        </a>\n                    </div>\n                    <div class="integration-details">\n                        <span class="meta-txt">\n                            <a bo-if="configuredIntegration.status==\'ACTIVE\' || configuredIntegration.status==\'INACTIVE\'" bo-href="configuredIntegration.integration_user_id | idToFilterUrl:\'USER\'">\n                                <span bo-bind="configuredIntegration.display_name"></span>\n                            </a>\n                        </span>\n                        <p class="meta-description" ng-bind-html="configuredIntegration.description"></p>\n                        <p bo-show="configuredIntegration.status == \'INACTIVE\'" class="disabled-text meta-description" ng-bind-html="configuredIntegration.modified_desc"></p>\n                    </div>\n                </div>\n                <div class="details-wrapper-content-right" ng-class="getIntegrationStatusClassForActionsContainer(configuredIntegration.status)">\n                    <a bo-if="true" class="cnv-icons-20" ng-class="getIntegrationStatusClass(configuredIntegration.status)" ng-click="toggleIntegrationStatus(configuredIntegration)" href="javascript:void(0);"></a>\n                    <cnv-dropdowns class="integrationsDropdown" bo-if="dropdownCtrl.options.length > 0" bo-show="configuredIntegration.is_author" cnv-dropdown-ctrl="dropdownCtrl" cnv-dropdown-callback-params="configuredIntegration"></cnv-dropdowns>\n                    <cnv-dropdowns class="integrationsDropdown" bo-if="dropdownCtrlAdmin.options.length > 0" bo-show="!configuredIntegration.is_author && configuredIntegration.is_admin" cnv-dropdown-ctrl="dropdownCtrlAdmin" cnv-dropdown-callback-params="configuredIntegration"></cnv-dropdowns>\n                </div>\n\n            </div>\n\n        </div>\n    </div>\n\n    <div class="clear-fix"></div>\n    <hr/>\n</div>');
    }
    ]),
    b.module("integrations/integrationsDirectory/templates/cnvConnectedAccounts.tpl.html", []).run(["$templateCache", function(a) {
        a.put("integrations/integrationsDirectory/templates/cnvConnectedAccounts.tpl.html", '<p bo-if="!isFilteredView && connectedAccounts.length == 0">You do not have any connected accounts right now.</p>\n<p bo-if="isFilteredView && filteredConnectedAccounts.length == 0">No record matches your search.</p>\n<div bo-show="!isFilteredView" class="user-info-wrapper"\n     bo-repeat="connectedAccount in connectedAccounts">\n\n    <div class="details-wrapper">\n\n        <div style="display:block;">\n            <div class="details-wrapper-content">\n                <div class="details-wrapper-content-left">\n                    <div class="integration-img">\n                        <img ng-src="assets/img/integrations/{{connectedAccount.image}}" />\n                    </div>\n                    <div class="integration-details">\n                        <span class="meta-txt">\n                            <span bo-bind="connectedAccount.client_name"></span>\n                        </span>\n                        <p class="meta-description" ng-bind-html="connectedAccount.description"></p>\n                    </div>\n                </div>\n                <div class="details-wrapper-content-right">\n                    <a class="integration-action-remove" ng-click="deleteConnectedAccount(connectedAccount.client_id, connectedAccount.type)" href="javascript:void(0)">x Remove</a>\n                </div>\n\n            </div>\n\n        </div>\n    </div>\n\n    <div class="clear-fix"></div>\n    <hr/>\n</div>\n\n<div bo-show="isFilteredView" class="user-info-wrapper"\n     bo-repeat="filteredConnectedAccount in filteredConnectedAccounts">\n\n    <div class="details-wrapper">\n\n        <div style="display:block;">\n            <div class="details-wrapper-content">\n                <div class="details-wrapper-content-left">\n                    <div class="integration-img">\n                        <img ng-src="assets/img/integrations/{{filteredConnectedAccount.image}}" />\n                    </div>\n                    <div class="integration-details">\n                        <span class="meta-txt">\n                            <span bo-bind="filteredConnectedAccount.client_name"></span>\n                        </span>\n                        <p class="meta-description" ng-bind-html="filteredConnectedAccount.description"></p>\n                    </div>\n                </div>\n                <div class="details-wrapper-content-right">\n                    <a class="integration-action-remove" ng-click="deleteConnectedAccount(filteredConnectedAccount.client_id)" href="javascript:void(0)">x Remove</a>\n                </div>\n\n            </div>\n\n        </div>\n    </div>\n\n    <div class="clear-fix"></div>\n    <hr/>\n</div>')
    }
    ]),
    b.module("integrations/integrationsDirectory/templates/cnvIntegrationsDirectoryMain.tpl.html", []).run(["$templateCache", function(a) {
        a.put("integrations/integrationsDirectory/templates/cnvIntegrationsDirectoryMain.tpl.html", '<div class="user-dir-container integrations-dir-container" bindonce>\n    <!-- Advanced Search Panel -->\n    <cnv-advanced-search></cnv-advanced-search>\n\n    <a id="integrations-page-start" style="position:absolute; top: 0px;"></a>\n    <div class="app-header">\n        <div class="integrations-details">\n            <div class="integrations-dp group-dp cnv-icons-30 icons_Integrations ng-scope"></div>\n            <div class="integrations-desc">\n                <span class="heading-txt">Integrations</span>\n                <p>Supercharge your team\'s collaboration by connecting to your most frequently used apps.</p>\n            </div>\n        </div>\n        \n    </div>\n\n    <div class="app-sub-header" bo-show="!addIntegrationView && !addGcalIntegrationView && !addTwitterIntegrationView && !addGmailIntegrationView && !addGdriveIntegrationView && !addDropboxIntegrationView && !addBoxIntegrationView && !addFacebookIntegrationView && !addO365MailIntegrationView && !addO365CalendarIntegrationView && !addO365DriveIntegrationView">\n        <a bo-href="tab.appInstanceId | getResourceLinkUrl:[{uid: 0, type: \'100\'}, {uid: \'2\', type: \'AllIntegrations\'}]:null:\'All Integrations\'" bo-class="{active: selectedView==ALL_INTEGRATIONS}" style="margin-left: 40px;"\n           bo-click="toggleSelectedView(ALL_INTEGRATIONS)" bo-bind="titleAllIntegrations"></a>\n        <a bo-href="tab.appInstanceId | getResourceLinkUrl:[{uid: 0, type: \'100\'}, {uid: \'2\', type: \'ConfiguredIntegrations\'}]:null:\'Configured Integrations\'" bo-class="{active: selectedView==CONFIGURED_INTEGRATIONS}" \n            bo-bind="titleConfiguredIntegrations"></a>\n        <a bo-href="tab.appInstanceId | getResourceLinkUrl:[{uid: 0, type: \'100\'}, {uid: \'2\', type: \'ConnectedAccounts\'}]:null:\'Connected Accounts\'" bo-class="{active: selectedView==CONNECTED_ACCOUNTS}" \n           bo-click="toggleSelectedView(CONNECTED_ACCOUNTS)" bo-bind="titleConnectedAccounts"></a>\n        \n    </div>\n\n    <div bo-if="!initialized" class="loading-spinner">\n        <img src="assets/img/feed/loading-spin.svg" alt="Loading icon"/>\n    </div>\n\n\n    <div bo-if="initialized">\n        <div class="view-content">\n            <div class="users">\n                <div class=\'search-bar\' bo-show="!addIntegrationView  && !integrationPreview && !addGcalIntegrationView && !addTwitterIntegrationView && !addGmailIntegrationView && !addGdriveIntegrationView && !addDropboxIntegrationView && !addBoxIntegrationView && selectedView!=ALL_INTEGRATIONS  && !addFacebookIntegrationView && !addO365MailIntegrationView && !addO365CalendarIntegrationView && !addO365DriveIntegrationView">\n                    <div class="section-separator">\n                        <span bo-show="!isConfiguredIntegrationsView && !isConnectedAccountsView">Create a Zapier Integration</span>\n                        <p style="width: 75%; color: #7b8386;" bo-show="!isConfiguredIntegrationsView && !isConnectedAccountsView">Choose from a list of these available Zapier integrations. Zapier integrations let you automatically pull information and activity from outside tools into Convo in a way that\'s timely, relevant and searchable.</p>\n                        <input bo-if="(users.length > 1 || isFilteredView)" ng-keyup="filerListViews(event=$event)" type="text" placeholder="Search for {{searchPlaceHolder}}"/>\n                        <hr>\n                    </div>\n                    <div class="clear-fix"></div>\n                </div>\n                \n                <!-- All Integrations -->\n                <div class="all-integrations" bo-show="!isConfiguredIntegrationsView && !isConnectedAccountsView && !addIntegrationView && !integrationPreview && !addGcalIntegrationView  && !addTwitterIntegrationView && !addGmailIntegrationView && !addGdriveIntegrationView && !addDropboxIntegrationView && !addBoxIntegrationView  && !addFacebookIntegrationView  && !addO365MailIntegrationView && !addO365CalendarIntegrationView && !addO365DriveIntegrationView">\n                    <div ng-include="\'integrations/integrationsDirectory/templates/cnvAllIntegrations.tpl.html\'"></div>\n                </div>\n                \n                <!-- Configured Integrations -->\n                <div class="conf-integrations" bo-show="isConfiguredIntegrationsView && !addIntegrationView && !addGcalIntegrationView  && !addTwitterIntegrationView  && !addGmailIntegrationView && !addGdriveIntegrationView && !addDropboxIntegrationView && !addBoxIntegrationView  && !addFacebookIntegrationView  && !addO365MailIntegrationView && !addO365CalendarIntegrationView && !addO365DriveIntegrationView">\n                    <div ng-include="\'integrations/integrationsDirectory/templates/cnvConfiguredIntegrations.tpl.html\'"></div>\n                </div>\n                \n                <!-- Connected Accounts -->\n                <div class="conf-integrations connected-accounts" bo-show="isConnectedAccountsView && !addIntegrationView && !addGcalIntegrationView  && !addTwitterIntegrationView  && !addGmailIntegrationView && !addGdriveIntegrationView && !addDropboxIntegrationView && !addBoxIntegrationView  && !addFacebookIntegrationView   && !addO365MailIntegrationView && !addO365CalendarIntegrationView && !addO365DriveIntegrationView">\n                    <div ng-include="\'integrations/integrationsDirectory/templates/cnvConnectedAccounts.tpl.html\'"></div>\n                </div>\n                \n                <!-- Add new webhook integration -->\n                <div class="add-webhook-integration" bo-show="addIntegrationView && !integrationPreview">\n                    <div ng-include="\'integrations/integrationsDirectory/templates/cnvAddWebhookIntegration.tpl.html\'"></div>\n                </div>\n                \n                <!-- Webhook instructions -->\n                <div class="show-webhook-integration" bo-show="integrationPreview">\n                    <div ng-include="\'integrations/integrationsDirectory/templates/cnvWebhookInstructions.tpl.html\'"></div>\n                </div>\n                \n                <!-- Add new google calendar integration -->\n                <div class="add-webhook-integration add-gcal-integration" bo-show="addGcalIntegrationView">\n                    <div ng-include="\'integrations/integrationsDirectory/templates/cnvAddGcalIntegration.tpl.html\'"></div>\n                </div>\n                \n                <!-- Add new twitter integration -->\n                <div class="add-webhook-integration add-twitter-integration" bo-show="addTwitterIntegrationView">\n                    <div ng-include="\'integrations/integrationsDirectory/templates/cnvAddTwitterIntegration.tpl.html\'"></div>\n                </div>\n                \n                <!-- Add new gmail integration -->\n                <div class="add-webhook-integration add-gmail-integration" bo-show="addGmailIntegrationView">\n                    <div ng-include="\'integrations/integrationsDirectory/templates/cnvAddGmailIntegration.tpl.html\'"></div>\n                </div>\n                \n                <!-- Add new gdrive integration -->\n                <div class="add-webhook-integration add-gdrive-integration" bo-show="addGdriveIntegrationView">\n                    <div ng-include="\'integrations/integrationsDirectory/templates/cnvAddGdriveIntegration.tpl.html\'"></div>\n                </div>\n                \n                <!-- Add new dropbox integration -->\n                <div class="add-webhook-integration add-dropbox-integration" bo-show="addDropboxIntegrationView">\n                    <div ng-include="\'integrations/integrationsDirectory/templates/cnvAddDropboxIntegration.tpl.html\'"></div>\n                </div>\n\n                <!-- Add new box integration -->\n                <div class="add-webhook-integration add-box-integration" bo-show="addBoxIntegrationView">\n                    <div ng-include="\'integrations/integrationsDirectory/templates/cnvAddBoxIntegration.tpl.html\'"></div>\n                </div>\n                \n                <!-- Add new facebook integration -->\n                <div class="add-webhook-integration add-facebook-integration" bo-show="addFacebookIntegrationView">\n                    <div ng-include="\'integrations/integrationsDirectory/templates/cnvAddFacebookIntegration.tpl.html\'"></div>\n                </div>\n                \n                <!-- Add new office 365 mail integration -->\n                <div class="add-webhook-integration add-o365mail-integration" bo-show="addO365MailIntegrationView">\n                    <div ng-include="\'integrations/integrationsDirectory/templates/cnvAddO365MailIntegration.tpl.html\'"></div>\n                </div>\n                \n                <!-- Add new office 365 calendar integration -->\n                <div class="add-webhook-integration add-o365calendar-integration" bo-show="addO365CalendarIntegrationView">\n                    <div ng-include="\'integrations/integrationsDirectory/templates/cnvAddO365CalendarIntegration.tpl.html\'"></div>\n                </div>\n                \n                <!-- Add new office 365 onedrive integration -->\n                <div class="add-webhook-integration add-o365drive-integration" bo-show="addO365DriveIntegrationView">\n                    <div ng-include="\'integrations/integrationsDirectory/templates/cnvAddO365DriveIntegration.tpl.html\'"></div>\n                </div>\n                \n            </div>\n\n        </div>\n    </div>\n</div>')
    }
    ]),
    b.module("integrations/integrationsDirectory/templates/cnvTwitterHandlesConfigModal.tpl.html", []).run(["$templateCache", function(a) {
        a.put("integrations/integrationsDirectory/templates/cnvTwitterHandlesConfigModal.tpl.html", '<div bindonce>\n    <div class="modal-header">\n        <h4>Choose the kind of tweets you want to post</h4>\n        <button type="button" class="close" ng-click="cancel()">×</button>\n    </div>\n    <div class="modal-body add-twitter-integration-config" >\n        <span bo-show="modalError" style="color: #BF705C;">You should select at least one of the options, otherwise no Tweets will be posted.</span>\n        <div class="field-item">\n            <div class="field-item-left">\n                &nbsp;\n            </div>\n            <div class="field-item-right">\n                <div class="cb-container twitter-config-cb">\n                    <input name=\'cb_twitter_handles_to\' class="cnv-checkbox" id="cbtwtstng5" type="checkbox" ng-true-value="1" ng-false-value="0" ng-model="enableHandlesTo" /><label for="cbtwtstng5"></label>\n                    <span style="position: relative; top: -2px; left: 8px;" class="labelText1">Post tweets sent <b>To</b> this @handle</span>\n                </div>\n            </div>\n        </div>\n        <div class="field-item">\n            <div class="field-item-left">\n                &nbsp;\n            </div>\n            <div class="field-item-right">\n                <div class="cb-container twitter-config-cb">\n                    <input name=\'cb_twitter_handles_from\' ng-click="twitterIntegrationConfigChanged(\'from\');" class="cnv-checkbox" id="cbtwtstng6" type="checkbox" ng-true-value="1" ng-false-value="0" ng-model="enableHandlesFrom" /><label for="cbtwtstng6"></label>\n                    <span style="position: relative; top: -2px; left: 8px;" class="labelText1">Post tweets sent <b>From</b> this @handle</span>\n                </div>\n            </div>\n        </div>\n        <div class="field-item">\n            <div class="field-item-left">\n                &nbsp;\n            </div>\n            <div class="field-item-right">\n                <div class="cb-container twitter-config-cb-padded" style="position: relative; left: 35px;">\n                    <input name=\'cb_twitter_handles_reply\' ng-click="twitterIntegrationConfigChanged(\'reply\');" class="cnv-checkbox" id="cbtwtstng7" type="checkbox" ng-true-value="1" ng-false-value="0" ng-model="enableHandlesReply" /><label for="cbtwtstng7"></label>\n                    <span style="position: relative; top: -2px; left: 8px;" class="labelText1">Include replies sent from this @handle</span>\n                </div>\n            </div>\n        </div>\n        <div class="field-item">\n            <div class="field-item-left">\n                &nbsp;\n            </div>\n            <div class="field-item-right">\n                <div class="cb-container twitter-config-cb-padded" style="position: relative; left: 35px;">\n                    <input name=\'cb_twitter_handles_retweet\' ng-click="twitterIntegrationConfigChanged(\'retweet\');" class="cnv-checkbox" id="cbtwtstng8" type="checkbox" ng-true-value="1" ng-false-value="0" ng-model="enableHandlesRetweet" /><label for="cbtwtstng8"></label>\n                    <span style="position: relative; top: -2px; left: 8px;" class="labelText1">Show retweets sent from this @handle</span>\n                </div>\n            </div>\n        </div>\n        \n    </div>\n    <div class="modal-footer">\n        <a href="javascript:void(0)" style="float: inherit; margin-right: 25px;" ng-click="cancel();">Cancel</a>\n        <button class="integration-action-finish btn btn-primary" type=\'button\' ng-click="saveConfig();">Save</button>\n    </div>\n</div>')
    }
    ]),
    b.module("integrations/integrationsDirectory/templates/cnvWebhookInstructions.tpl.html", []).run(["$templateCache", function(a) {
        a.put("integrations/integrationsDirectory/templates/cnvWebhookInstructions.tpl.html", '<h3>How to use this integration</h3>\n<div class="content">\n    <div class="url-info">\n        <p>Paste this URL into any App that supports sending data to a webhook.</p>\n        <input ng-readonly="true" id="webhook_url" type="text" ng-model="form.webhook_url" />\n        <a class="copy" href="javascript:void(0)">Press Ctrl+C (or &#8984;+C on Mac) to copy the text</a>\n    </div>\n    <p>Just a few things to keep in mind:</p>\n    <p>Use HTTP method POST with types (JSON/x-www-form-urlencoded). If you are also sending files with your HTTP request, use enctype="multipart/form-data".</p>\n    <p>You can send the following parameters:</p>\n    <ul>\n        <li><b>title </b>(optional): The title of the post.</li>\n        <li><b>body </b>(required): The body of the post.</li>\n        <li><b>tags </b>(optional): Comma separated list of tags you want the post to have.</li>\n        <li><b>attachments </b>(optional): You can attach one or multiple files with your post.</li>\n    </ul>\n</div>\n<p class="integration-preview-finish"><a class="integration-action-finish btn btn-primary" ng-click="finishWebhookCreation()">Finish</a></p>')
    }
    ]),
    b.module("invites/cnvSelectedUsersBox/cnvSelectedUsersBox.tpl.html", []).run(["$templateCache", function(a) {
        a.put("invites/cnvSelectedUsersBox/cnvSelectedUsersBox.tpl.html", '<div class="selected-users-box-area">\n	<div class="addedUsers" suppress-scroll-propagation on-scrolled-bottom="onScrolledBottom(e)" trigger-before="30">\n	    <ul class="added-users-list">\n	        <li class="added-users-list-item" ng-class="{\'highlight\': tag.highlight}" ng-repeat="tag in cnvAddedUsers | limitTo:addedUsersDisplayLimit track by tag.id">\n	        	<cnv-user-profile-image ng-if="tag.type == \'USER\'" classes="tag.classes" user-id="tag.id" size="32" full-name="tag.label"></cnv-user-profile-image>\n	        	<span style="width: 18px; height: 18px; vertical-align: middle;" ng-if="tag.type != \'USER\'" ng-class="tag.classes"></span>\n	    		<span class=\'selcted-text\'> {{tag.label}}</span>\n	    		<a ng-click="delete(tag.id)" class="remove-selected-user-button icons2_Close-darkgray"></a>\n	        </li>\n	    </ul>\n	</div>\n</div>\n\n')
    }
    ]),
    b.module("invites/templates/cnvBasicInviteModal.tpl.html", []).run(["$templateCache", function(a) {
        a.put("invites/templates/cnvBasicInviteModal.tpl.html", '<div class="invite-people" suppress-scroll-propagation>\n	<div class="modal-header">\n	    <h4 ng-bind="modalTitle"></h4>\n	    <button type="button" class="close" ng-click="dismiss()">×</button>\n	</div>\n	<div class="modal-body">\n		<cnv-invites></cnv-invites>\n	</div>\n\n	<div class="modal-footer">\n\n		<a href="javascript:void(0);" class="import-widgets-reveal-action" ng-if="!invitesCtrl.widgets.isEnable && invitesCtrl.masterList.length" ng-click="invitesCtrl.widgets.enable()">Import</a>\n		<ng-include ng-if="invitesCtrl.masterList.length" src="\'invites/templates/cnvInvitesInlineWidgets.tpl.html\'"></ng-include>\n\n		<span style="float: left;margin: 8px 0px;">&nbsp;&nbsp;&nbsp;•&nbsp;&nbsp;&nbsp;</span>\n\n		<a ng-if="isNative" href="mailto:?subject={{::inviteEmailSubject}}&body={{::inviteEmailBody}}" target="_blank">Send email with invite link</a>\n        <a ng-if="!isNative" href="mailto:?subject={{::inviteEmailSubject}}&body={{::inviteEmailBody}}">Send email with invite link</a>\n\n\n	    <button type="submit" class="btn btn-primary" ng-click="invite()" ng-disabled="!invitesCtrl.addedList.length">Invite</button>\n	</div>\n</div>\n')
    }
    ]),
    b.module("invites/templates/cnvInvites.tpl.html", []).run(["$templateCache", function(a) {
        a.put("invites/templates/cnvInvites.tpl.html", '<form class="invite-people-form" name="invitePeople" ng-submit="onSubmit()" role="form" >\n	<div class="inline-layout wide">\n		<div class="l-padding r-padding"><strong ng-bind="emailInputTitle"></strong></div>\n		<div class="l-padding r-padding">\n			<tags-input class="email-to-field"\n			            ng-model="inviteTo"\n			            placeholder=name@{{::accountInfo.getPrimaryAccountDomain().user_email_domain}}\n			            no-tags-indicator="false"\n			            add-on-comma="false"\n			            add-on-blur="false"\n			            add-from-autocomplete-only="true"\n			            display-property="label"\n			            replace-spaces-with-dashes="false"\n			            on-esc-key-press="onEscKeyPressInEmailField()"\n			            on-tag-added="onItemAddedInEmailField($tag)"\n			            on-tag-removed="onItemRemovedInEmailField($tag)"\n			            on-ctrl-cmd-enter="onCtrlOrCmdEnterPressInEmailField()"\n			            on-ctrl-cmd-save="onCtrlOrCmdSavePressInEmailField()">\n				<auto-complete\n			            source="getInviteToDropdownItems($query, numSelected)"\n			            load-history-on-focus="true"\n			            auto-select-first-suggestion="true"\n			            delimiter="@"\n			            min-length="1"\n			            suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html">\n			    </auto-complete>\n			</tags-input>\n		</div>\n\n\n		<i class="cnv-spinner" ng-if="waiting"></i>\n\n\n		<div class="user-master-list-cont" ng-if="contacts.length" suppress-scroll-propagation>\n		\n			<div ng-if="noRecentContactFound" ng-click="dismissNoRecentContactFound()" class="no-contacts-found recent l-padding r-padding">\n				<div>\n					<strong>We didn\'t find new teammates in your contacts.</strong>\n					<span class="cross">×</span>\n				</div>\n				<div>\n					<span class="meta">You still have some great options!<br>Add a teammate\'s email above.<br>Or import contacts from another source below.</span>\n				</div>\n			</div>\n\n			<div class="l-padding r-padding"><strong>People you may know</strong>\n				<a class="list-actions" href="javascript:void(0);" ng-click="selectAllItems()" ng-if="!allSelected">Add all {{contacts.length}}</a>\n				<a class="list-actions" href="javascript:void(0);" ng-click="deSelectAllItems()" ng-if="allSelected">Clear all {{contacts.length}}</a>\n			</div>\n\n			<div class="user-master-list" on-scrolled-bottom="onScrolledBottom(e)" trigger-before="50">\n				<ul>\n					<li class="img-label-contact-list-item l-padding r-padding" ng-repeat="item in contacts | limitTo: contactsDisplayLimit track by item.id" ng-click="toggleItemSelection($event, item)" ng-class="{ \'selected\': item.selected }">\n						<span class="img">\n							<cnv-user-profile-image ng-if="item.type == \'USER\'" classes="item.classes" user-id="item.id" size="32" full-name="item.label"></cnv-user-profile-image>\n							<i ng-if="item.type != \'USER\'" ng-class="item.classes"></i>\n						</span>\n						<span class="c-label" ng-bind="item.label"></span>\n						<span class="actions" ng-class="{\'check-white\': item.selected, \'icons2_Add-blue\': !item.selected}"></span>\n\n\n\n					</li>\n\n				</ul>\n			</div>\n		</div>\n\n\n		<div ng-if="noContactFound" class="no-contacts-found l-padding r-padding">\n			<div>\n				<strong>We didn\'t find new teammates in your contacts.</strong>\n			</div>\n			<div>\n				<span class="meta">You still have some great options!<br>Add a teammate\'s email above.<br>Or import contacts from another source below.</span>\n			</div>\n		</div>\n\n		<div class="body-invite-widgets l-padding r-padding" ng-if="!contacts.length">\n			<div class="heading"><strong>Import your contacts</strong></div>\n			<ng-include src="\'invites/templates/cnvInvitesInlineWidgets.tpl.html\'"></ng-include>\n		</div>\n\n	</div><!--\n	Removing this comment will disturb the layout. its basically removing the bogus-space between two inline-block tags.\n	--><div class="inline-layout narrow" ng-class="{\'slide-out\': !inviteListPanel}">\n		<div class="added-teammates-cont">\n			<div><strong>Selected ({{addedList.length}})</strong></div>\n			<div class="added-teammates" ng-class="{\'highlight\': itemAddedIndicator}">\n				<cnv-selected-users-box> </cnv-selected-users-box>\n			</div>\n		</div>\n\n		<div class="message-box-cont">\n			<div><strong>Your message</strong></div>\n			<div class="message-box">\n				<textarea class="text-box" ng-model="inputObj.inviteMessage" suppress-scroll-propagation></textarea>\n			</div>\n		</div>\n	</div>\n</form>\n')
    }
    ]),
    b.module("invites/templates/cnvInvitesInlineWidgets.tpl.html", []).run(["$templateCache", function(a) {
        a.put("invites/templates/cnvInvitesInlineWidgets.tpl.html", '<div class="pull-left import-widgets-wrapper" ng-class="{\'widgets-empty-space\': !invitesCtrl.widgets.isEnable}">\n	<div class="widgets-cont" ng-class="{\'in-view\': invitesCtrl.widgets.isEnable}">\n		<span class="widget-cont" ng-click="invitesCtrl.find_googleContacts()">\n			<i class="img google-contacts"></i>\n			<div class="widget-name"><a href="javascript:void(0);">Google</a></div>\n		</span>\n\n		<span class="widget-cont" ng-click="invitesCtrl.find_macContacts()" ng-if="isMac">\n			<i class="img mac-contacts"></i>\n			<div class="widget-name"><a href="javascript:void(0);">Mac</a></div>\n		</span>\n\n		<span class="widget-cont" ng-click="invitesCtrl.find_csvContacts($event)">\n			<input name=\'file\' class=\'file-input\' style="display: none;" onclick="this.value=null;" onchange="angular.element(this).scope().onCSVInputFileChange(this)" type=\'file\'></input>\n			<i class="img csv-contacts"></i>\n			<div class="widget-name"><a href="javascript:void(0);">CSV File</a></div>\n		</span>\n	</div>\n</div>\n')
    }
    ]),
    b.module("links/cnvLinksApp.tpl.html", []).run(["$templateCache", function(a) {
        a.put("links/cnvLinksApp.tpl.html", '<div class="cnvLinksApp" style="max-width: 1440px">\n\n	<ng-include src="\'apps/headers/basicAppHeader.tpl.html\'"></ng-include>\n	\n	<div class="links-app-webview no-padding" ng-if="openWebview" ng-style="{\'width\': enableCommentsPanel.active ? \'calc(100% - 384px)\' : \'100%\'}">\n    	<ng-include src="\'links/webview/webview.tpl.html\'"></ng-include>\n	</div>\n\n\n    <div class="galleryTplContainer" ng-style="{\'width\': !enableCommentsPanel.active ? \'100%\' : \'calc(100% - 384px)\'}" ng-if="galleryCtrl.active">\n        <cnv-gallery></cnv-gallery>\n    </div>\n\n    <!-- Moved from ng-if to ng-show to maintain the previous states -->\n    <div class="no-padding comments-panel-container" ng-class="{\'slide-to-left\': slideCommentsToLeft, \'slide-to-right\': slideCommentsToRight}" ng-show="enableCommentsPanel.active">\n        <cnv-in-app-comments-panel></cnv-in-app-comments-panel>\n    </div>\n\n    <div class="snippet-arrow" style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; pointer-events: none; z-index: 3; display: none;">\n    	<!-- <canvas id="snippet-arrow-canvas"></canvas> -->\n    </div>\n</div>\n')
    }
    ]),
    b.module("links/webview/templates/header.tpl.html", []).run(["$templateCache", function(a) {
        a.put("links/webview/templates/header.tpl.html", '<ul class="sub-app-header-controls link">\n  <li ng-if="relatedPermissions.canEdit" ng-click="currentAppCtrl.addMoreSharingInfo()" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}">\n  	<i class="cnv-icons-16 icons2_Share-lightgray"></i>\n  	<div class="format-label">Share post</div>\n  </li>\n  \n  <li ng-if="relatedPermissions.canEdit" ng-click="currentAppCtrl.addMoreTags()" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}">\n    <i class="cnv-icons-16 icon_tag-01-01-lightgray"></i>\n    <div class="format-label">Tag post</div>\n  </li>\n\n  <li ng-if="!currentAppCtrl.headerData.starred" ng-click="currentAppCtrl.starPost()" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}">\n    <i class="cnv-icons-16 icons_Star-lightgray"></i>\n    <div class="format-label">Star post</div>\n  </li>\n\n  <li ng-if="currentAppCtrl.headerData.starred" ng-click="currentAppCtrl.unstarPost()" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}">\n    <i class="cnv-icons-16 icons_Star-blue"></i>\n    <div class="format-label">Unstar post</div>\n  </li>\n\n\n  <li class="more-options">\n\n    <div>\n      <span class="dropdown" dropdown>\n          <a href class="dropdown-toggle" dropdown-toggle aria-haspopup="true" aria-expanded="false" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}">\n              <i class="placeholder-icon cnv-icons-16 icon1_more-01-lightgray" style="display: block; margin: auto;" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}"></i>\n              <span>More</span>\n          </a>\n          <ul class="customized dropdown-menu dropdown-menu">\n\n              <li ng-show=\'relatedPermissions.canChangePermissions && !IS_STARTER_NETWORK\' class=\'sharing_preferences pseudo-submenu-arrow menu-item-height\' style=\'min-width: 190px;\' ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}"><a><i class="cnv-icons-16 icons_Lock-lightblue"></i>Permissions</a>\n                <ul class="submenu2 customized dropdown-menu" style="position: absolute; top: -8px; left: 186px; display: none; min-width: 200px;">\n                  <li class="menu-item-height">\n                      <a href="javascript:void(0)" oncontextmenu="event.preventDefault();" ng-click="changePermissions(7)" class="menu-item-wrapper">\n                        <i class="cnv-icons-14 cnv-tick v-align-m" ng-show="relatedPermissions.permissions==7"></i>\n                        <span class="dummy-block-14" ng-show="relatedPermissions.permissions!=7"></span>\n                        <span>Can edit and comment</span>\n                      </a>\n                    </li>\n                    <li class="menu-item-height">\n                      <a href="javascript:void(0)" oncontextmenu="event.preventDefault();" ng-click="changePermissions(3)" class="menu-item-wrapper">\n                        <i class="cnv-icons-14 cnv-tick v-align-m" ng-show="relatedPermissions.permissions==3"></i>\n                        <span class="dummy-block-14" ng-show="relatedPermissions.permissions!=3"></span>\n                        <span>Comment only</span>\n                      </a>\n                    </li>\n                    <li class="menu-item-height"><a href="javascript:void(0)" oncontextmenu="event.preventDefault();" ng-click="changePermissions(1)" class="menu-item-wrapper" >\n                      <i class="cnv-icons-14 cnv-tick v-align-m" ng-show="relatedPermissions.permissions==1"></i>\n                      <span class="dummy-block-14" ng-show="relatedPermissions.permissions!=1"></span>\n                      <span>View only</span>\n                    </a>\n                  </li>\n                </ul>\n\n              </li>\n\n              <li ng-if="IS_STARTER_NETWORK && !isGuest" ng-click="$emit(\'upgrade-to-permium\')" class=\'sharing_preferences menu-item-height\' style=\'min-width: 190px;\' ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}">\n              <a><i class="cnv-icons-16 icons_Lock-lightblue"></i>Permissions (Upgrade)</a>\n              </li>\n\n              <li ng-show=\'relatedPermissions.canChangePermissions || IS_STARTER_NETWORK\' class="divider"></li>\n\n              <li class="menu-item-height" ng-if="!currentAppCtrl.headerData.muted" ng-click="currentAppCtrl.mutePost()" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}"><a><i class="cnv-icons-16 icons2_Mute-lightblue"></i>Mute this post</a></li>\n              <li class="menu-item-height" ng-if="currentAppCtrl.headerData.muted" ng-click="currentAppCtrl.unmutePost()" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}"><a><i class="cnv-icons-16 icons2_Mute-lightblue"></i>Unmute this post</a></li>\n              \n              <li class="divider"></li>\n              \n              <li class="menu-item-height" ng-click="currentAppCtrl.copyLink()"><a><i class="cnv-icons-16 linkhorizontal-lightblue"></i></i>Copy link</a></li>\n              \n              <li class="menu-item-height" ng-if="currentAppCtrl.headerData.deletable && currentAppCtrl.headerData.deleted == \'0\'" ng-click="currentAppCtrl.moveToTrash()" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}"><a><i class="cnv-icons-16 icons2_Trash-lightblue"></i>Delete post</a></li>\n              <li class="menu-item-height" ng-if="currentAppCtrl.headerData.restorable" ng-click="currentAppCtrl.restorePost()" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}"><a><i class="cnv-icons-16 icons2_Trash-lightblue"></i>Restore post</a></li>\n              <li class="menu-item-height" ng-if="currentAppCtrl.headerData.deletable && currentAppCtrl.headerData.deleted == \'1\'" ng-click="currentAppCtrl.deletePostPermanently()" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}"><a><i class="cnv-icons-16 icons2_Trash-lightblue"></i>Delete permanantly</a></li>\n          </ul>\n      </span>\n    </div>\n  </li>\n\n  <li class="compact-view-more-options more-options">\n    \n    <div>\n      <span class="dropdown" dropdown>\n          <a href class="dropdown-toggle" dropdown-toggle aria-haspopup="true" aria-expanded="false"  ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}">\n              <i class="placeholder-icon cnv-icons-16 icon1_more-01-lightgray" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}"></i>\n              <span>More</span>\n          </a>\n          <ul class="customized dropdown-menu dropdown-menu">\n\n              <li class="menu-item-height" ng-if="!currentAppCtrl.headerData.muted" ng-click="currentAppCtrl.mutePost()" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}"><a><i class="cnv-icons-16 icons2_Mute-lightblue"></i>Mute this post</a></li>\n              <li class="menu-item-height" ng-if="currentAppCtrl.headerData.muted" ng-click="currentAppCtrl.unmutePost()" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}"><a><i class="cnv-icons-16 icons2_Mute-lightblue"></i>Unmute this post</a></li>\n              \n              <li class="menu-item-height" ng-if="relatedPermissions.canEdit" ng-click="currentAppCtrl.addMoreTags()" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}"><a><i class="cnv-icons-16 icon_tag-01-01-lightblue"></i></i>Add tags</a></li>\n              <li class="menu-item-height" ng-if="!currentAppCtrl.headerData.starred" ng-click="currentAppCtrl.starPost()" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}"><a><i class="cnv-icons-16 icons_Star-lightblue"></i></i>Start this post</a></li>\n              <li class="menu-item-height" ng-if="currentAppCtrl.headerData.starred" ng-click="currentAppCtrl.unstarPost()" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}"><a><i class="cnv-icons-16 icons_Star-lightblue"></i></i>Unstar post</a></li>\n\n              <li class="divider"></li>\n              <li class="menu-item-height" ng-if="relatedPermissions.canEdit" ng-click="currentAppCtrl.addMoreSharingInfo()" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}"><a><i class="cnv-icons-16 icons2_Share-lightgray"></i></i>Share with others</a></li>\n              <li class="menu-item-height" ng-click="currentAppCtrl.copyLink()"><a><i class="cnv-icons-16 linkhorizontal-lightblue"></i></i>Copy link</a></li>\n\n              <li class="divider" ng-if="currentAppCtrl.headerData.deletable || currentAppCtrl.headerData.restorable"></li>\n              <li class="menu-item-height" ng-if="currentAppCtrl.headerData.deletable && currentAppCtrl.headerData.deleted == \'0\'" ng-click="currentAppCtrl.moveToTrash()" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}"><a><i class="cnv-icons-16 icons2_Trash-lightblue"></i>Delete post</a></li>\n              <li class="menu-item-height" ng-if="currentAppCtrl.headerData.restorable" ng-click="currentAppCtrl.restorePost()" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}"><a><i class="cnv-icons-16 icons2_Trash-lightblue"></i>Restore post</a></li>\n              <li class="menu-item-height" ng-if="currentAppCtrl.headerData.deletable && currentAppCtrl.headerData.deleted == \'1\'" ng-click="currentAppCtrl.deletePostPermanently()" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}"><a><i class="cnv-icons-16 icons2_Trash-lightblue"></i>Delete permanantly</a></li>\n          </ul>\n      </span>\n    </div>\n  </li> \n</ul>');
    }
    ]),
    b.module("links/webview/webview.tpl.html", []).run(["$templateCache", function(a) {
        a.put("links/webview/webview.tpl.html", '<div cnv-web-view class="cnv-note-editor" bindonce>\n    <div class="notesAppContainer note-container link-container">\n\n        <div class="note-wrapper">\n\n            <div ng-if="!active" class="loading-spinner">\n                <img src="assets/img/feed/loading-spin.svg" alt="Loading icon" />\n            </div>\n\n            <a title="Close Editor" class="close icons2_Close-darkgray" href ng-click="$emit(\'gotoParentResourceInHistory\', tab)" target="_blank"></a>\n\n            <div class="note-resize-wrapper">\n                <div class="active-container" ng-if="active">\n                    <div class="inline-message-box l-padding" bo-if="linkData.item.deleted">\n                        <div class="message-container">\n                            <table>\n                                <tr>\n                                    <td class="message l-align">\n                                        <span bo-if="linkData.item.deletable || linkData.item.restorable">This post was moved to Trash.<br>What would you like to do with it?</span>\n                                        <span bo-if="!linkData.item.deletable && !linkData.item.restorable">This post is in trash.<br>It can be restored by its author or an administrator.</span>\n                                    </td>\n\n                                    <td class="actions r-align" bo-if="linkData.item.deletable || linkData.item.restorable">\n                                        <span ng-if="linkData.item.deletable" ng-click="deletePostPermanently()">\n                                            <button class="btn btn-primary p-1">Delete forever</button>\n                                        </span>\n                                        <span ng-if="linkData.item.restorable" ng-click="restorePost()">\n                                            <button class="btn btn-primary p-0">Restore</button>\n                                        </span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n\n                    <section class="note-info l-gutter r-gutter">\n                        <span class="share-with-wrapper">\n\n                            <span>\n                                <span class="dp">\n                                    <cnv-user-profile-image user-id="linkData.item.created_by_object.id" full-name="linkData.item.created_by_object.label" profile-type="linkData.item.created_by_object.profile_image_type" profile-version="linkData.item.created_by_object.profile_image_version" size="184" height="60" width="60"></cnv-user-profile-image>\n                                </span>\n                                <span class="readonly">\n                                    <div>\n                                        <a bo-href="linkData.item.created_by | idToFilterUrlForLinksApp"\n                                              bo-bind="linkData.item.created_by | idToNameForLinksApp"\n                                              bo-class="{\'in-accessible-user\': !(linkData.item.created_by | isUserGroupAssessibleForLinksApp)}"></a>\n                                        <span bo-if="linkData.item.deleted" class="delete indicator">Trash</span>\n                                    </div>\n\n                                    <div>\n                                        <snap class="pre-placeholder">To</snap>\n                                        <span ng-repeat="shareInfo in linkData.sharing_info | sharedToOrderByCurrentUser | limitTo:5">\n                                            <a bo-if="shareInfo.published_to != this_user"\n                                                  bo-class="{\'in-accessible\': !isAdminMode && (shareInfo.type === \'GROUP\' && !(shareInfo.published_to | isUserGroupAssessibleForLinksApp)), \'in-accessible-user\': (isAdminMode && !(shareInfo.published_to | isUserGroupAssessibleForLinksApp)) || (shareInfo.type === \'USER\' && !(shareInfo.published_to | isUserGroupAssessibleForLinksApp))}"\n                                                  bo-href="shareInfo.published_to | idToFilterUrlForLinksApp"\n                                                  bo-bind="(shareInfo.published_to | idToNameForLinksApp)"></a>\n                                            <a bo-if="shareInfo.published_to == this_user" bo-href="shareInfo.published_to | idToFilterUrlForLinksApp">Me</a>\n                                            <span class="meta supress-space" bo-if="!$last">,&nbsp;</span>\n                                        </span>\n                                        <a href bo-if="linkData.sharing_info.length > 5" bo-bind="\'+\' + (linkData.sharing_info.length - 5)" cnv-popover cnv-popover-ctrl="linkData.sharing_info | sharingInfoTooltipText:5"></a>\n                                        <span class="middot">&nbsp;&nbsp;•&nbsp;&nbsp;</span>\n                                        <a class="meta relative" cnv-popover cnv-popover-ctrl="linkData.item.last_edit_date | localize" bo-date="linkData.item.last_edit_date | dateAgo:server_now_timestamp" bo-href="appInstanceId | getResourceLinkUrl: [{ type: linkData.item.type, uid: resourceId, title: linkData.item.title}]: null: linkData.item.title"></a>\n                                        <a class="meta absolute" style="display: none;" bo-date="linkData.item.last_edit_date | localize" bo-href="appInstanceId | getResourceLinkUrl: [{ type: linkData.item.type, uid: resourceId, title: linkData.item.title}]: null: linkData.item.title"></a>\n                                        <!-- <span class="meta" ng-click="onAddMoreSharingInfoClick()">+ Add more</span> -->\n                                    </div>\n                                </span>\n\n\n                            </span>\n                            <div class="clear-fix"></div>\n                        </span>\n                    </section>\n\n                    <section class="content l-gutter r-gutter">\n                        <div class="link-src">\n                            <img bo-src="linkData.item | getFaviconIconPath">\n                            <span bo-bind="linkData.item.source | getDomainNameFormUrl"></span>\n                        </div>\n\n                        <div class="title">\n                            <a target="_blank" bo-href="linkData.item.source">\n                                {{linkData.item.title}}\n                                <i class="cnv-icons-20 icons_Links-blue" style="margin-left: 4px; vertical-align: middle;"></i>\n                            </a>\n                        </div>\n\n                        <div class="body">\n                            <span bo-if="!isYTURL && !isVimeoURL" bo-html="linkData.item.complete_text || linkData.item.preview_text"></span>\n                            <span bo-if="isYTURL" >\n                                <iframe bo-src=\'YTLink\' frameborder="0" allowfullscreen="1" style=\'border:none; width:100%; height:395px;\'></iframe>\n                            </span>\n                            <span bo-if="isVimeoURL" >\n                                <iframe bo-src=\'vimeoLink\' frameborder="0" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\'border:none; width:100%; height:395px;\'></iframe>\n                            </span>\n                        </div>\n                        <div bo-if="!noteData.item.deleted && relatedPermissions.canEdit">\n                            <div class="note-tags gutter-margin">\n                                <div class="readonly" style="border-top: 1px solid #e0e0e0;">\n                                    <ul class="">\n                                        <li ng-repeat="tag in linkData.item.tags.split(\',\')">\n                                            <a href="javascript:void(0);" bo-href="tag | hashtagToFilterLink" bo-bind="tag | labelToHashtag"></a>\n                                            <span class="meta supress-space" bo-if="!$last">,&nbsp;</span>\n                                        </li>\n                                        <span class="meta" style="cursor: pointer;" ng-click="onAddMoreTagsClick()">+ Add tags</span>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n')
    }
    ]),
    b.module("login/login.tpl.html", []).run(["$templateCache", function(a) {
        a.put("login/login.tpl.html", '<div id="login-box">\n	<h2>Sign In</h2>\n	<form name="loginForm" ng-submit="onSubmit()" role="form">\n\n    <div class="form-group">\n      <input type="email" class="form-control" name="username" id="username" ng-disabled="signing_in" placeholder="Enter Username" ng-model="user.email" required>\n    </div>\n    <div class="form-group">\n      <input type="password" class="form-control" name="password" id="password" ng-disabled="signing_in" placeholder="Password" ng-model="user.password" required>\n    </div>\n    <div class="checkbox">\n      <label>\n        <input type="checkbox" id="savePassword" name="savePassword" value="true" checked=""> Save Password\n      </label>\n    </div>\n\n		<input type="submit" value="Sign In" class="btn btn-primary" style="width: 284px" ng-disabled="signing_in"/>\n	</form>\n	<p ng-show="signing_in">Signing in...</p>\n	<p ng-show="sign_in_failed">Incorrect username or password. Please try again.</p>\n</div>\n')
    }
    ]),
    b.module("main/components/cnvInAppNotificationsDropdown/cnvInAppNotificationsDropdown.tpl.html", []).run(["$templateCache", function(a) {
        a.put("main/components/cnvInAppNotificationsDropdown/cnvInAppNotificationsDropdown.tpl.html", '<div class="cnv-notif-container" bindonce>\n	<div class="bell-wrapper">\n		<span class="bell-hit-area" ng-click="showHideDropdown()">\n			<i class="cnv-icons-16 icons_Notifications-lightgray"></i>\n		</span>\n\n		<!-- <button ng-click="showHideDropdown()"></button> -->\n		<span class="badge" ng-show="sharedNotificationsContext.unreadNotificationsCount > 0 && sharedNotificationsContext.unreadNotificationsCount <= 20" ng-bind="sharedNotificationsContext.unreadNotificationsCount" ng-click="showHideDropdown()"></span>\n		<span class="badge" ng-show="sharedNotificationsContext.unreadNotificationsCount > 20" ng-click="showHideDropdown()">20+</span>\n		<!-- <span class="badge">12</span> -->\n	</div>\n\n	<div class="cnv-notif-dropdown" ng-show="showNotificationDropdown">\n		\n		<div class="top">\n			<div class="top-arrow"></div>\n			<div class="pull-left">Notifications</div>\n			<div class="pull-right" bo-show="showMarkAllAsReadLink"><a href="javascript:void(0)" ng-click="markAllAsRead()">Mark all as read</a></div>\n		</div>\n\n		<div style="position: relative; overflow: hidden;">\n			<div class="docked-date-separator" bo-bind="notifications[0].template.timeSeparator"></div>\n			<perfect-scrollbar class="scrollable" wheel-propagation="true" wheel-speed="5" refresh-on-change="notifications">\n				<div class="notifications-container" ng-repeat="notification in notifications track by notification.original.notificationId" ng-class="{\'unread\': notification.original.isRead == 0}">\n					<div bo-if="$index > 0 && notification.template.timeSeparator != notifications[$index-1].template.timeSeparator" class="date-separator" bo-bind="notification.template.timeSeparator"></div>\n					<div class="notification">\n						<a bo-href="notification.template.link" ng-click="markAsRead(notification.original.notificationId)" class="open-in-compact-view">\n							<div class="pull-left dp-wrapper">\n								<cnv-user-profile-image user-id="notification.original.actionBy[0]" full-name="notification.template.latestActionByUser.name" profile-type="notification.template.latestActionByUser.profile_image_type" profile-version="notification.template.latestActionByUser.profile_image_version" profile=true></cnv-user-profile-image>\n							</div>\n							<div class="details-wrapper">\n								<div class="pull-right user-like-image-wrapper" bo-if="notification.template.pImageLikeData || notification.template.imageLikeData || notification.template.commentImageData">\n									<img bo-if="notification.template.pImageLikeData" bo-src="notification.original.forUser | userImgUrl:notification.template.pImageLikeData.type:notification.template.pImageLikeData.version" />\n									<img class="note-like-image" bo-if="notification.template.imageLikeData" bo-src="notification.template.imageLikeData.preview_name | getPreviewImageThumbnailPath:notification.template.imageLikeData.noteId"/>\n									<img class="note-like-image" bo-if="notification.template.commentImageData" bo-src="notification.template.commentImageData.preview_name | getCommentAttachmentThumbnailPathDefaultSize:notification.original.appInstanceId:notification.template.commentImageData.itemId:0"/>\n								</div>\n								<span class="heading" bo-html="notification.template.text"></span>\n							<span class="meta">\n								<i bo-class="notification.template.actionRelationship | inAppNotificationsActionIconClassFilter"></i>\n								<span bo-date="notification.original.timestamp | dateAgo:server_now_timestamp"></span>\n							</span>\n							</div>\n						</a>\n					</div>\n				</div>\n				<div class="spinner-container" bo-show="showSpinner">\n					<i class="cnv-circle-spinner-small"></i> Loading\n				</div>\n			</perfect-scrollbar>\n		</div>\n	</div>\n</div>')
    }
    ]),
    b.module("main/components/cnvNetworkLogoAndName/cnvNetworkLogoAndName.tpl.html", []).run(["$templateCache", function(a) {
        a.put("main/components/cnvNetworkLogoAndName/cnvNetworkLogoAndName.tpl.html", '<div class="network-logo-container" bindonce>\n	<a href="#/feed" ng-click="$emit(\'networkLogoClicked\', $event)">\n		<img class="logo" bo-src="networkLogo" />\n	</a>\n	<a href="#/feed" ng-click="$emit(\'networkLogoClicked\', $event)" bo-bind="accountInfo.getAccountName() | limitTo: 20" class="name"></a>\n</div>')
    }
    ]),
    b.module("main/main.tpl.html", []).run(["$templateCache", function(a) {
        a.put("main/main.tpl.html", '<!-- <div id="main_tab_bar" class="tab_bar">\n  <ul ui-sortable="tabsSortableOptions" ng-model="tabs" style="list-style: none; margin-bottom: 0px;">\n    <li ng-repeat="tab in tabs track by tab.id" class="tab_btn" ng-class="{tab_btn_selected: tab.selected}"><a ng-href="{{ tab.url }}">{{ tab.title }}</a> <span ng-click="onTabCloseBtnClick($event, tab)" ng-show="!tab.fixed" class="glyphicon glyphicon-remove"></span></li>\n  </ul>\n</div> -->\n<cnv-overlay></cnv-overlay>\n<cnv-app-state-info></cnv-app-state-info>\n<cnv-onboarding-manager></cnv-onboarding-manager>\n<div class="row no-margin">\n    <!-- main header panel -->\n    <div ng-include="\'main/templates/header/mainHeaderPanel.tpl.html\'" ng-show="!selectedTab.fullViewRequested"></div>\n</div>\n<div cnv-banners id="bannersCont"></div>\n<input id="bogus-element" style="" />\n<div id=\'cnv-popover\' class=\'cnv-popover\'>\n    <div class=\'cnv-popover-content\'></div>\n</div>\n<cnv-app-cont ng-repeat="tab in tabs track by tab.id" class="cnv-app-cont" ng-show="tab.selected"></cnv-app-cont>\n<div ng-include="\'chat/client/cnvChatApp.tpl.html\'"></div>\n')
    }
    ]),
    b.module("main/templates/header/mainHeaderPanel.tpl.html", []).run(["$templateCache", function(a) {
        a.put("main/templates/header/mainHeaderPanel.tpl.html", '<div class="row no-margin header-bar-container" cnv-onboarding-main-header cnv-home-header-panel>\n  <div class="header-content-wrapper cnv-onboarding-overlay">\n\n    <!-- Network logo + network menu options dropdown -->\n    <div class="col-xs-2 col-sm-1 col-md-5 col-lg-5 no-padding">\n      <div class="network-logo-wrapper">\n        <cnv-network-logo-and-name></cnv-network-logo-and-name>\n        <cnv-dropdowns class="hidden-xs header-dropdown" cnv-dropdown-ctrl="dropdownCtrl" condition="isLoggedIntoAccountCondition"></cnv-dropdowns>\n        <cnv-dropdowns class="slim-header-dropdown" cnv-dropdown-ctrl="dropdownCtrlSlim" condition="isLoggedIntoAccountCondition" ng-show="showSlimNetworkMenuDropdown()"></cnv-dropdowns>\n        <!-- <div class="pull-left">\n          <a href="javascript:void(0);" ng-click="$emit(\'goHome\')"><img style="max-width: 39px; margin-top: 20px; margin-left: 30px; max-height: 30px; opacity: 0.5" src="assets/img/common/convo_icon_78x40.png" /></a>\n        </div>\n        <div class="pull-left" style="margin-top: 10px; margin-left: 15px;">\n          <span class="network-name" ng-click="$emit(\'goHome\')" ng-bind="account_info.getAccountName() | limitTo: 8"></span>\n        </div> -->\n        <!-- <span class="main-header-account-img" ng-show="!compact_view"> -->\n          <!-- <span> -->\n            <!-- <a href="#feed"><img ng-src="{{account_info.getAccountImageUrl()}}"/></a> -->\n            <!-- <cnv-dropdowns cnv-dropdown-ctrl="dropdownCtrl"></cnv-dropdowns> -->\n          <!-- </span> -->\n          <!-- <span class="cnv-tour-txt">Convo Tour</span> -->\n          <!-- <span class="cnv-tour-skip" ng-click="skipTour()">Skip</span> -->\n        <!-- </span> -->\n      </div>\n    </div>\n\n    <!-- search bar -->\n    <div class="col-xs-22 col-sm-23 col-md-19 col-lg-14 no-padding" style="position: static;">\n    <!-- <div class="col-xs-14 col-sm-14 col-md-12 col-lg-14 no-padding"> -->\n      <div class="top-search-wrapper">\n        <div id="feed_search_bar" cnv-feed-search-bar ng-class="{\'feed_search_bar_override_upgrade_premium_enterprise\':addEnterpriseClass,\'feed_search_bar_override_upgrade_premium_upgrade\':addUpgradeClass, \'admin-mode-search-width\': addAdminModeClass}">\n          <form ng-submit="onFeedSearchFormSubmit()">\n            <input id="feed_search_input" type="text" ng-model="feed_search_text"\n                    ng-change="onFeedSearchInputChange()"\n                    placeholder="Search for people, posts or groups"\n                    popover="{{searchQueryInvalid}}"\n                    popover-enable="searchQueryInvalid"\n                    popover-placement="bottom"\n                    popover-trigger="showTooltip"\n                    ng-trim="false"\n                    autocomplete="off" />\n            <div class="dropdown-ico-wrapper">\n              <i class="cnv-icons-15 icons2_Dropdown-lightgray" data-toggle="tooltip" data-placement="bottom" title="Show search options" ng-click="toggleAdvancedSearch()"></i>\n              <i class="cnv-icons-15 icons2_Dropdown-darkgray" data-toggle="tooltip" data-placement="bottom" title="Show search options" ng-click="toggleAdvancedSearch()"></i>\n            </div>\n            <div class="search-icon" ng-click="onFeedSearchFormSubmit()"><i class="glyphicon glyphicon-search"></i></div>\n          </form>\n          <cnv-dropdown\n              ng-if="state.show_feed_search_dropdown"\n              items="feed_search_dropdown_items"\n              show="state.show_feed_search_dropdown"\n              watch-on-length-only="true"\n              item-select-callback="onFeedSearchDropdownItemSelected(item, withTabKey)"\n              nav-source-elem-id="feed_search_input"\n              item-template="common/listItemRenderers/imgLabelListItem.tpl.html"\n              dropdown-class="feed_search_dropdown">\n          </cnv-dropdown>\n          <div class="recent-search-header" ng-if="state.show_recent_search_dropdown">\n            <span>Recent Searches</span>\n            <span class="clear-btn" ng-mousedown="clearRecentSearches($event)">Clear</span>\n          </div>\n          <cnv-dropdown\n              ng-if="state.show_recent_search_dropdown"\n              items="recent_search_dropdown_items"\n              show="state.show_recent_search_dropdown"\n              item-select-callback="onFeedRecentSearchDropdownItemSelected(item, withTabKey)"\n              nav-source-elem-id="feed_search_input"\n              item-template="common/listItemRenderers/imgLabelListItem.tpl.html"\n              dropdown-class="feed_search_dropdown"\n              class="recent-search-dropdown">\n          </cnv-dropdown>\n          <div class="onboardingToolTips bottom">\n              <div class=" blue-content"><i class="cnv-icons-10 icons2_Close-lightgray" ng-mousedown="closeRecentSearchTooltip($event);"></i>Narrow your search with these handy operators:\n                  <br><span class="tag-badge">has:</span> Search for attachments, e.g has:pdf\n                  <br><span class="tag-badge">tag:</span> Discover posts by tag, e.g tag:launch\n                  <br><span class="tag-badge">is:</span> View specific post types, e.g is:link\n                  <br>Or click <i class="cnv-icons-15 icons2_Dropdown-lightgray"></i> for advanced search options.</div>\n              <div class="paddingTop20 center"><a class="btn btn-primary width190" ng-mousedown="closeRecentSearchTooltip($event);">Got it</a></div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Right User Panel -->\n      <div class="rightColumn">\n\n        <!-- Premium Upgrade -->\n        <cnv-premium-upgrade-btn></cnv-premium-upgrade-btn>\n        <!-- Premium Upgrade -->\n\n        <div class="admin-panel-exit-btn" ng-if="isAdminMode" ng-click="exitAdminMode();">\n          Exit admin mode\n        </div>\n\n        <cnv-user-profile-image width="\'32\'" height="\'32\'" user-id="user_info.user_id" profile-type="user_info.profile_image_type" profile-version="user_info.profile_image_version" full-name="user_info.first_name + \' \' + user_info.last_name" ng-click="toggleDropdown()" class="profilePictureHeader"></cnv-user-profile-image>\n\n        <cnv-dropdowns cnv-dropdown-ctrl="userMenuDropdownCtrl"></cnv-dropdowns>\n\n        <span class="separator visible-lg-inline-block"></span>\n        <span class="separator hidden-lg" style="right: 86px;"></span>\n\n        <cnv-in-app-notifications-dropdown></cnv-in-app-notifications-dropdown>\n\n\n\n        <div class="menu-icon hidden-lg">\n          <i class="cnv-icons-25 icons_Menu-darkgray onboarding_menu" ng-click="toggleFloatingColumn()"></i>\n        </div>\n\n        <div class="floating-panel-wrapper hidden-lg" ng-if="showFloatingColumn">\n          <div class="wrapper">\n            <div ng-include="\'home/templates/rightPanels/feedRightPanel.tpl.html\'"></div>\n          </div>\n        </div>\n\n        <input id="headerDpUploadInput" type="file" name="headerDpUploadInput" style="width: 1px; height: 1px; display: block; position: absolute; z-index: 19999; top: -1000px; left: -1000px;" />\n      </div>\n    </div>\n\n    <!-- notifications + dp + options dropdown -->\n    <div class="visible-lg col-lg-5">\n    <!-- <div class="col-xs-7 col-sm-7 col-md-5 col-lg-5 rightColumn"> -->\n      <!-- <cnv-user-profile-image width="\'32\'" height="\'32\'" user-id="user_info.user_id" profile-type="user_info.profile_image_type" profile-version="user_info.profile_image_version" full-name="user_info.first_name + \' \' + user_info.last_name" ng-click="toggleDropdown()" class="profilePictureHeader"></cnv-user-profile-image>\n\n      <cnv-dropdowns cnv-dropdown-ctrl="userMenuDropdownCtrl"></cnv-dropdowns>\n\n      <span class="separator visible-lg-inline-block"></span>\n      <span class="separator hidden-lg" style="right: 86px;"></span>\n\n      <cnv-in-app-notifications-dropdown></cnv-in-app-notifications-dropdown>\n\n      <div class="menu-icon hidden-lg">\n        <i class="cnv-icons-25 icons_Menu-darkgray onboarding_menu" ng-click="toggleFloatingColumn()"></i>\n      </div>\n\n      <div class="floating-panel-wrapper hidden-lg" ng-if="showFloatingColumn">\n        <div class="wrapper">\n          <div ng-include="\'home/templates/rightPanels/feedRightPanel.tpl.html\'"></div>\n        </div>\n      </div>\n\n      <input id="headerDpUploadInput" type="file" name="headerDpUploadInput" style="width: 1px; height: 1px; display: block; position: absolute; z-index: 19999; top: -1000px; left: -1000px;" />        -->\n    </div>\n\n  </div>\n</div>\n')
    }
    ]),
    b.module("notes/cnvNotesApp.tpl.html", []).run(["$templateCache", function(a) {
        a.put("notes/cnvNotesApp.tpl.html", '<div class="notes-app-bg-wrapper" bo-style="{\'background\': openEditor ? \'#f6f6f6\' : \'transparent\'}">\n	<div class="row cnvNotesApp" ng-style="{\'max-width\': openEditor ? \'1440px\' : \'none\' }">\n\n		<ng-include src="\'apps/headers/basicAppHeader.tpl.html\'"></ng-include>\n\n		<div class="galleryTplContainer" ng-style="{\'width\': !enableCommentsPanel.active ? \'100%\' : \'calc(100% - 384px)\'}" ng-if="galleryCtrl.active">\n\n			<cnv-gallery></cnv-gallery>\n	    	<!-- <ng-include src="\'notes/gallery/templates/galleryMain.tpl.html\'"></ng-include> -->\n		</div>\n\n		<div class="notes-app-editor no-padding" ng-style="{\'width\': enableCommentsPanel.active ? \'calc(100% - 384px)\' : \'100%\'}" ng-if="openEditor">\n	    	<ng-include src="\'notes/editor/templates/editorMain.tpl.html\'"></ng-include>\n		</div>\n\n		<!-- Moved from ng-if to ng-show to maintain the previous states -->\n	    <div class="no-padding comments-panel-container" ng-class="{\'slide-to-left\': slideCommentsToLeft, \'slide-to-right\': slideCommentsToRight}" ng-show="enableCommentsPanel.active">\n	        <cnv-in-app-comments-panel></cnv-in-app-comments-panel>\n	    </div>\n\n	    <div class="snippet-arrow" style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; pointer-events: none; z-index: 3; display: none;">\n	    	<!-- <canvas id="snippet-arrow-canvas"></canvas> -->\n	    </div>\n\n	</div>\n</div>\n')
    }
    ]),
    b.module("notes/commentsPanel/templates/cnvInAppComment.tpl.html", []).run(["$templateCache", function(a) {
        a.put("notes/commentsPanel/templates/cnvInAppComment.tpl.html", '<div class="row no-margin commentWrapper">\n	<div class="pull-left">\n		<img ng-src="{{ comment.from_user | userIdToImgUrlForFeed }}" />\n	</div>\n	<div class="pull-left" style="margin-left: 10px; max-width: 230px;" >\n		<div ng-bind-html="comment.comment_text | unsafe"></div>\n		<div class="meta comment_info">\n			{{ comment.from_user | getUserName | limitText: 80 }}\n		</div>\n		<div ng-if="comment.resource_link.collaboration_info.snippet_data.data">\n				<a ng-href="{{ comment | getFilePath }}"\n					ng-if="comment.resource_link.collaboration_info.snippet_data.data.fileName">\n\n					<img\n						ng-click="drawSnippetOnCanvas(comment.resource_link.collaboration_info.snippet_data.data)" ng-src="{{comment.resource_link.collaboration_info.snippet_data.data.fileName | getSnippetImagePath: comment.uid}}" style="max-width: 100px; max-height: 100px"\n					/>\n				</a>\n		</div>\n	</div>\n\n</div>\n')
    }
    ]),
    b.module("notes/commentsPanel/templates/cnvInAppCommentEditor.tpl.html", []).run(["$templateCache", function(a) {
        a.put("notes/commentsPanel/templates/cnvInAppCommentEditor.tpl.html", '<cnv-editor cnv-text-editor-mode="basic"\n    cnv-text-editor-ctrl="textEditorCtrl"\n    cnv-at-mentions="getSharedWithDropdownItems($query)" \n    cnv-hashtags="getHashtags($query)" \n    cnv-at-mentions-suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html"\n    cnv-text-editor-on-esc-key-press="onEscKeyPressInTextEditor()"\n    cnv-text-editor-submit-on-enter="onTextEditorSubmitOnEnter()"\n    cnv-editor-source="Comment">\n</cnv-editor>\n')
    }
    ]),
    b.module("notes/commentsPanel/templates/cnvInAppCommentsBox.tpl.html", []).run(["$templateCache", function(a) {
        a.put("notes/commentsPanel/templates/cnvInAppCommentsBox.tpl.html", '<div class="inAppCommentsPanelContainer">\n\n	<div class="topPanel">\n		<div class="row no-margin">\n			<ul class="no-padding">\n				<li>&#x2022; Like</li>\n				<li>&#x2022; Comment</li>\n				<li>&#x2022; Share</li>\n			</ul>\n		</div>\n\n		<div class="row likesContainer">\n			<span class="glyphicon glyphicon-thumbs-up"></span><!-- <span> Ryan McDonald, Sabika Nazim, +4</span>-->\n		</div>\n	</div>\n\n	<div class="bottomPanel">\n\n		<div class="row commentsCountsContainer">\n			<span class="glyphicon glyphicon-comment"></span><!-- <span> 12 Comments</span>-->\n		</div>\n\n		<cnv-in-app-comments-panel></cnv-in-app-comments-panel>\n\n	</div>\n\n</div>\n')
    }
    ]),
    b.module("notes/commentsPanel/templates/cnvInAppCommentsPanel.tpl.html", []).run(["$templateCache", function(a) {
        a.put("notes/commentsPanel/templates/cnvInAppCommentsPanel.tpl.html", '<div class="inAppCommentsPanelContainer" bindonce>\n\n	<div class="row top-bar no-margin">\n\n		<div class="row no-margin likes-container" bo-if="likesInfo.last_liked_by">\n			<i class="cnv-icons-20 icons2_Like-lightgray"></i>\n\n			<a bo-href="likesInfo.last_liked_by | idToFilterUrl:\'USER\'" bo-bind="likesInfo.users[likesInfo.last_liked_by].name"></a>\n			<span bo-if="likesInfo.like_count > 1" class="meta">,&nbsp;</span>\n            <a href bo-if="likesInfo.like_count > 1" bo-bind="\'+\' + (likesInfo.like_count - 1) + \' more\'" cnv-popover cnv-popover-ctrl="likeInfoTooltipText" ng-click="openLikeInfoModal()"></a>\n		</div>\n\n		<div class="comments-info" ng-hide="!commentsData.total_comments && commentEditorCtrl.permissions.block">\n			<i class="cnv-icons-20 icons_Comments-lightgray"></i>\n			<a ng-if="!commentsData.total_comments" ng-class="{\'disabled meta\': commentEditorCtrl.permissions.disable}" href="javascript:void(0)" class="comments-count" ng-click="focusOnCommentsEditor()">Be the first to comment!</a>\n			<a ng-if="commentsData.total_comments && !comments_expanded" href="javascript:void(0)" class="comments-count" ng-click="loadAllComments(); trackExpandComments()" ng-bind="(commentsData.total_comments + \' comment\') + (commentsData.total_comments > 1 ? \'s\': \'\')" ng-class="{\'disabled meta\': commentsData.total_comments < 4}"></a>\n			<a ng-if="comments_expanded" class="comments-count" ng-click="showLatestCommentsOnly(); trackCollapseComments()">Hide comments</a>\n		</div>\n	</div>\n\n	\n	<div class="bottom-bar comments-collection comments-scrollable-panel" ng-style="{\'margin-top\': (!likesInfo.like_count) || (!commentsData.total_comments && commentEditorCtrl.permissions.block) ? (!likesInfo.like_count && !commentsData.total_comments && commentEditorCtrl.permissions.block ? -84 : -42) : 0 }">\n		<div ng-if="commentsData.comments.length" class="row comments-container no-margin">\n			<div class="comments-loading" ng-show="loadingComments">\n				<span>Loading comments</span> <i class="cnv-circle-spinner-small" ></i>\n			</div>\n			\n			<div cnv-comment ng-repeat="commentData in commentsData.comments | limitTo:-loadedCommentsCount track by commentData.uid" id="{{::commentData.uid}}" data="commentData" server-now-timestamp="server_now_timestamp" highlight-words="highlight_words" resource-id="resourceId" app-instance-id=\'appInstanceId\' resource-type=\'resourceType\' post-title=\'postTitle\' last="$last" align-drop-downs="right" comment-edit-mode-handler="commentInEditMode(edMode, uid)" get-opened-resource="getOpenedResource()" class="comment-cont"></div>\n		</div>\n\n		<div class="row comment-editor-container" ng-class="{\'closed-top-border\': (commentEditorCtrl.permissions.block && commentsData.total_comments)}">\n			<cnv-comment-editor enable-emoji="true"></cnv-comment-editor>\n		</div>\n\n		<div class="footer-dead-space"></div>\n	</div>\n\n	<div class="new-comments-badge" style="position: absolute; bottom: 50px; display: none; box-shadow: 0px 2px 10px -1px rgba(0, 0, 0, 0.5); background: #035376; border-radius: 3px; color: #fff; left: 50%; margin-left: -55px; z-index: 3; padding: 3px 5px; cursor: pointer; font-size: 14px; opacity: 0.8; height:24px; " ng-click="scrollToBottom()">\n	    <span>New Comments</span>\n	</div>\n</div>\n')
    }
    ]),
    b.module("notes/commentsPanel/templates/inAppComment.tpl.html", []).run(["$templateCache", function(a) {
        a.put("notes/commentsPanel/templates/inAppComment.tpl.html", '<div class="row no-margin commentWrapper">\n	<div class="pull-left">\n		<img ng-src="{{ comment.initiated_by | userIdToImgUrlForFeed }}" />\n	</div>\n	<div class="pull-left" style="margin-left: 10px; max-width: 230px;" >\n		<div ng-bind-html="comment.comments | unsafe"></div>\n		<div class="meta comment_info">\n			{{ comment.initiated_by | getUserName | limitText: 80 }}\n		</div>\n	</div>\n\n</div>');
    }
    ]),
    b.module("notes/editor/templates/editorMain.tpl.html", []).run(["$templateCache", function(a) {
        a.put("notes/editor/templates/editorMain.tpl.html", '<div id="note-editor-files-paste-target" cnv-note-editor class="cnv-note-editor" bindonce>\n    <div class="notesAppContainer note-container">\n	    <input name=\'file\' class=\'file-input\' style="opacity: 0 !important; width: 0px !important; height: 0px !important" type=\'file\' multiple=\'multiple\'></input>\n        <div class="note-wrapper">\n        	<div ng-if="!active" class="loading-spinner">\n        		<img src="assets/img/feed/loading-spin.svg" alt="Loading icon" />\n        	</div>\n        	<a title="Close Editor" class="close icons2_Close-darkgray" href ng-click="$emit(\'gotoParentResourceInHistory\', tab)" target="_blank"></a>\n            <div id="scrollable-content" class="note-resize-wrapper">\n	            <div class="active-container" bo-if="active">\n	            	<div class="inline-message-box" bo-if="noteData.item.deleted">\n                    	<div class="message-container">\n                    		<table>\n                        		<tr>\n	                        		<td class="message l-align">\n	                        			<span bo-if="noteData.item.deletable || noteData.item.restorable">This post was moved to Trash.<br>What would you like to do with it?</span>\n	                        			<span bo-if="!noteData.item.deletable && !noteData.item.restorable">This post is in trash.<br>It can be restored by its author or an administrator.</span>\n	                        		</td>\n	                        		<td class="actions r-align" bo-if="noteData.item.deletable || noteData.item.restorable">\n	                        			<span ng-if="noteData.item.deletable" ng-click="deletePostPermanently()">\n	                        				<button class="btn btn-primary p-1">Delete forever</button>\n	                        			</span>\n	                        			<span ng-if="noteData.item.restorable" ng-click="restorePost()">\n	                        				<button class="btn btn-primary p-0">Restore</button>\n	                        			</span>\n	                        		</td>\n                        		</tr>\n                        	</table>\n                    	</div>\n                    </div>\n                    <section class="note-info l-gutter r-gutter">\n                        <span class="share-with-wrapper">\n                        	<span bo-if="mode == NOTE_EDIT_MODE">\n                        		<div class="edit-from-block">\n	                        		<span class="dp edit">\n				                        <cnv-user-profile-image user-id="noteData.item.created_by_object.id" full-name="noteData.item.created_by_object.label" profile-type="noteData.item.created_by_object.profile_image_type" profile-version="noteData.item.created_by_object.profile_image_version" height="32" width="32"></cnv-user-profile-image>\n				                    </span>\n	                        		<a bo-href="noteData.item.created_by | idToFilterUrlForNotesApp" bo-bind="noteData.item.created_by | idToNameForNotesApp"></a>\n	                        		<span bo-if="noteData.item.draft" class="draft indicator">Draft</span>\n	                        		<div class="edit-submit">\n			                        	<span class="status-text" bo-bind="statusText"></span>\n			                        	<button bo-if="!RTC.CONNECTED" class="btn btn-primary" disabled=\'true\'>Connecting</button>\n			                        	<button bo-if="RTC.CONNECTED" class="btn btn-primary" ng-disabled="sharing" ng-click="onSubmitClick()" bo-bind="submitText"></button>\n			                        </div>\n	                        	</div>\n								<div ng-show="toggleExtendedToolbar" class="fake-extended-botton"></div>\n                        		<tags-input class="to-field"\n								            ng-model="noteData.sharedWithListItems"\n								            placeholder="+Add user or group"\n								            no-tags-indicator="true"\n								            pre-placeholder=""\n								            add-on-comma="false"\n								            add-on-blur="false"\n								            horizontal-flow = "false"\n								            add-from-autocomplete-only="true"\n								            display-property="label"\n								            replace-spaces-with-dashes="false"\n								            on-esc-key-press="onEscKeyPressInToField()"\n								            on-tag-added="onItemAddedInToField($tag)"\n								            on-tag-removed="onItemRemovedInToField($tag)"\n            								on-ctrl-cmd-enter="onCtrlOrCmdEnterPressInTextEditor()">\n								          <auto-complete\n								              source="getShareWithDropdownItemsForToField($query, numSelected)"\n								              load-history-on-focus="true"\n								              auto-select-first-suggestion="true"\n								              delimiter="@"\n								              min-length="1"\n								              suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html">\n								          </auto-complete>\n						        </tags-input>\n\n						        <!-- <div style=\'position:absolute; right: 30px; bottom: 12px;\'>\n							      <cnv-dropdowns cnv-dropdown-ctrl="dropdownCtrl" condition=\'iconCondtions\'></cnv-dropdowns>\n							    </div> -->\n\n                        	</span>\n                        	<span bo-if="mode == NOTE_READONLY_MODE">\n                        		<div class="docked ng-hide">\n			                        <cnv-user-profile-image user-id="noteData.item.created_by_object.id" full-name="noteData.item.created_by_object.label" profile-type="noteData.item.created_by_object.profile_image_type" profile-version="noteData.item.created_by_object.profile_image_version" height="32" width="32"></cnv-user-profile-image>\n			                        <span>\n					                    <a bo-href="noteData.item.created_by | idToFilterUrlForNotesApp"\n										      bo-class="{\'in-accessible-user\': !(noteData.item.created_by | isUserGroupAssessibleForNotesApp)}"\n										      bo-bind="noteData.item.created_by | idToShortNameForNotesApp" cnv-popover cnv-popover-ctrl="noteData.item.created_by | idToNameForNotesApp"></a>\n	                    				<snap class="pre-placeholder">To</snap>\n		                            	<span ng-repeat="shareInfo in noteData.sharing_info | sharedToOrderByCurrentUser | limitTo:3">\n		                                    <a bo-if="shareInfo.published_to != this_user"\n											      bo-class="{\'in-accessible\': (shareInfo.type === \'GROUP\' && !(shareInfo.published_to | isUserGroupAssessibleForNotesApp)), \'in-accessible-user\': (shareInfo.type === \'USER\' && !(shareInfo.published_to | isUserGroupAssessibleForNotesApp))}"\n											      bo-href="shareInfo.published_to | idToFilterUrlForNotesApp"\n											      bo-bind="(shareInfo.published_to | idToShortNameForNotesApp)" cnv-popover cnv-popover-ctrl="shareInfo.published_to | idToNameForNotesApp"></a>\n		                                    <a bo-if="shareInfo.published_to == this_user" bo-href="shareInfo.published_to | idToFilterUrlForNotesApp" cnv-popover cnv-popover-ctrl="shareInfo.published_to | idToNameForNotesApp">Me</a>\n		                                    <span class="meta supress-space" bo-if="!$last">,&nbsp;</span>\n		                                </span>\n	                                </span>\n	                                <a href ng-click="openSharedInfoModal()" bo-if="noteData.sharing_info.length > 3" bo-bind="\'+\' + (noteData.sharing_info.length - 3)" cnv-popover cnv-popover-ctrl="noteData.sharing_info | sharingInfoTooltipText:3"></a>\n	                                <span class="middot">&nbsp;&nbsp;•&nbsp;&nbsp;</span>\n	                                <a bo-href="appInstanceId | getResourceLinkUrl: [{ type: noteData.item.type, uid: resourceId, title: noteData.item.title}]: null: noteData.item.title"><span bo-if="noteData.item.created_date != noteData.item.last_edit_date" class="meta">Edited</span></a>\n	                                <a class="meta pointer" cnv-popover cnv-popover-ctrl="noteData.item.last_edit_date | localize" bo-date="noteData.item.last_edit_date | dateAgo:server_now_timestamp" bo-href="appInstanceId | getResourceLinkUrl: [{ type: noteData.item.type, uid: resourceId, title: noteData.item.title}]: null: noteData.item.title"></a>\n	                                <span bo-if="ACTIONS.EDIT && !RTC.LOCKED" class="pull-right request-edit">\n		                                <span>\n		                                	<button bo-if="!RTC.CONNECTED && relatedPermissions.canEdit" class="btn btn-primary" disabled=\'true\'>Connecting</button>\n		                                	<button bo-if="RTC.CONNECTED && RTC.ACQURING_LOCK && relatedPermissions.canEdit" class="btn btn-primary" disabled=\'true\'>Opening</button>\n		                                    <button bo-if="RTC.CONNECTED && !RTC.ACQURING_LOCK && relatedPermissions.canEdit" class="btn btn-primary" ng-click="onSubmitClick()">Edit</button>\n		                                    <button bo-if="!relatedPermissions.canEdit" class="btn edit-closed-btn" cnv-popover cnv-popover-ctrl="editClosedMessageHandler">\n                                                <i class="edit-closed-icon"></i>\n                                                <span class="edit-closed-btn-txt">Edit</span>\n                                            </button>\n		                                </span>\n		                            </span>\n		                            <span bo-if="RTC.LOCKED" class="pull-right locking-info">\n	                                	<span bo-if="RTC.currentEditingUser.user_id" class="lock" cnv-popover cnv-popover-ctrl="RTC.currentEditingUser.name">\n			                            	<cnv-user-profile-image height="32" width="32" user-id="RTC.currentEditingUser.user_id" full-name="RTC.currentEditingUser.name" profile-type="RTC.currentEditingUser.profile_image_type" profile-version="RTC.currentEditingUser.profile_image_version"></cnv-user-profile-image>\n			                            	<i class="cnv-icons-20 icons_Lock-lightgray"></i>\n		                            	</span>\n		                            	<button class="btn" disabled="true">Edit</button>\n			                        </span>\n	                            </div>\n                        		<span class="dp">\n			                        <cnv-user-profile-image user-id="noteData.item.created_by_object.id" full-name="noteData.item.created_by_object.label" profile-type="noteData.item.created_by_object.profile_image_type" profile-version="noteData.item.created_by_object.profile_image_version" size="184" height="60" width="60"></cnv-user-profile-image>\n			                        <cnv-user-profile-image class="sub-dp" bo-if="noteData.item.last_edit_by && noteData.item.created_by !== noteData.item.last_edit_by" user-id="noteData.item.last_edit_by_object.id" full-name="noteData.item.last_edit_by_object.label" profile-type="noteData.item.last_edit_by_object.profile_image_type" profile-version="noteData.item.last_edit_by_object.profile_image_version" height="48" width="48"></cnv-user-profile-image>\n			                    </span>\n	                        	<span class="readonly">\n	                        		<div>\n		                                <a bo-href="noteData.item.created_by | idToFilterUrlForNotesApp"\n										      bo-bind="noteData.item.created_by | idToNameForNotesApp"\n										      bo-class="{\'in-accessible-user\': !(noteData.item.created_by | isUserGroupAssessibleForNotesApp)}"></a>\n	                    				<span bo-if="noteData.item.deleted" class="delete indicator">Trash</span>\n		                            </div>\n		                            <div>\n		                            	<snap class="pre-placeholder">To</snap>\n		                            	<span ng-repeat="shareInfo in noteData.sharing_info | sharedToOrderByCurrentUser | limitTo:5">\n		                                    <a class="nowrap" bo-if="shareInfo.published_to != this_user"\n											      bo-class="{\'in-accessible\': (!isAdminMode && shareInfo.type === \'GROUP\' && !(shareInfo.published_to | isUserGroupAssessibleForNotesApp)), \'in-accessible-user\': ((isAdminMode && !(shareInfo.published_to | isUserGroupAssessibleForNotesApp)) || shareInfo.type === \'USER\' && !(shareInfo.published_to | isUserGroupAssessibleForNotesApp))}"\n											      bo-href="shareInfo.published_to | idToFilterUrlForNotesApp"\n											      bo-bind="(shareInfo.published_to | idToNameForNotesApp)"></a>\n		                                    <a bo-if="shareInfo.published_to == this_user" bo-href="shareInfo.published_to | idToFilterUrlForNotesApp">Me</a>\n		                                    <span class="meta supress-space" bo-if="!$last">,&nbsp;</span>\n		                                </span>\n		                                <span class="nowrap">\n			                                <a href ng-click="openSharedInfoModal()" bo-if="noteData.sharing_info.length > 5" bo-bind="\'+\' + (noteData.sharing_info.length - 5)" cnv-popover cnv-popover-ctrl="noteData.sharing_info | sharingInfoTooltipText:5"></a>\n			                                <span class="middot">&nbsp;&nbsp;•&nbsp;&nbsp;</span>\n			                                <a bo-href="appInstanceId | getResourceLinkUrl: [{ type: noteData.item.type, uid: resourceId, title: noteData.item.title}]: null: noteData.item.title"><span bo-if="noteData.item.created_date != noteData.item.last_edit_date" class="meta">Edited</span></a>\n		                                	<a class="meta relative" cnv-popover cnv-popover-ctrl="noteData.item.last_edit_date | localize" bo-date="noteData.item.last_edit_date | dateAgo:server_now_timestamp" bo-href="appInstanceId | getResourceLinkUrl: [{ type: noteData.item.type, uid: resourceId, title: noteData.item.title}]: null: noteData.item.title"></a>\n\n		                                	<a class="meta absolute" style="display: none;" bo-date="noteData.item.last_edit_date | localize" bo-href="appInstanceId | getResourceLinkUrl: [{ type: noteData.item.type, uid: resourceId, title: noteData.item.title}]: null: noteData.item.title"></a>\n\n	                                	</span>\n		                            </div>\n	                        	</span>\n	                        	<span bo-if="ACTIONS.EDIT && !RTC.LOCKED" class="pull-right request-edit" style="margin-top: 8px;">\n	                                <span>\n	                                	<button bo-if="!RTC.CONNECTED && relatedPermissions.canEdit" class="btn btn-primary" disabled=\'true\'>Connecting</button>\n	                                	<button bo-if="RTC.ACQURING_LOCK && RTC.CONNECTED" class="btn btn-primary" disabled=\'true\'>Opening</button>\n	                                    <button bo-if="RTC.CONNECTED && !RTC.ACQURING_LOCK && relatedPermissions.canEdit" class="btn btn-primary" ng-click="onSubmitClick()">Edit</button>\n	                                    <button bo-if="!relatedPermissions.canEdit" class="btn edit-closed-btn" disabled=\'true\'>\n                                            <i class="edit-closed-icon"></i>\n                                            <span class="edit-closed-btn-txt">Edit</span>\n                                        </button>\n	                                    <div bo-if=\'!relatedPermissions.canEdit\' class="meta edit-closed-message">\n                                            <span>This post is closed for editing.</span>\n                                            <br>\n                                            <a class="meta" bo-href="noteData.item.permissions_changed_by | idToFilterUrlForNotesApp" bo-bind="noteData.item.permissions_changed_by | idToNameForNotesApp"></a>\n                                            &nbsp;&nbsp;&#8226;&nbsp;&nbsp;\n                                            <a class="meta" cnv-popover cnv-popover-ctrl="noteData.item.permissions_change_date | localize" bo-date="noteData.item.permissions_change_date | dateAgo:server_now_timestamp" href="javascript:void(0);"></a>\n                                        </div>\n	                                </span>\n	                            </span>\n	                            <span bo-if="RTC.LOCKED" class="pull-right locking-info" style="margin-top: 8px;">\n                                	<span class="lock" bo-if="RTC.currentEditingUser.user_id" cnv-popover cnv-popover-ctrl="RTC.currentEditingUser.name">\n		                            	<cnv-user-profile-image height="32" width="32" user-id="RTC.currentEditingUser.user_id" full-name="RTC.currentEditingUser.name" profile-type="RTC.currentEditingUser.profile_image_type" profile-version="RTC.currentEditingUser.profile_image_version"></cnv-user-profile-image>\n		                            	<i class="cnv-icons-20 icons_Lock-lightgray"></i>\n	                            	</span>\n	                            	<button class="btn" disabled="true">Edit</button>\n		                        </span>\n	                        </span>\n	                        <div class="clear-fix"></div>\n                        </span>\n                    </section>\n                    <section class="content l-gutter r-gutter">\n                        <div ng-show="toggleExtendedToolbar" class="fake-extended-toolbar"></div>\n                        <div id="notes-app-editor-toolbar" bo-if="ACTIONS.EDIT" ng-show="toggleExtendedToolbar" class="extended-controls no-animate ng-hide">\n                            <span class="ql-format-group">\n                                <span class="ql-format-button ql-bold icons3_Bold-darkgray"></span>\n                                <span class="ql-format-button ql-italic italic-darkgray"></span>\n                                <span class="ql-format-button ql-underline underline-darkgray"></span>\n                                <span class="ql-format-button ql-strike strikethrough-darkgray"></span>\n                                <select title="Text Color" class="ql-color">\n									<option value="#000000" selected></option><option value="#444444"></option>\n									<option value="#666666"></option><option value="#999999"></option>\n									<option value="#cccccc"></option><option value="#eeeeee"></option>\n									<option value="#f3f3f3"></option><option value="#fcfcfc"></option>\n									<option value="#ed462e"></option><option value="#f39e30"></option>\n									<option value="#fef936"></option><option value="#75f012"></option>\n									<option value="#6cf9fb"></option><option value="#0049fb"></option>\n									<option value="#8553fb"></option><option value="#e865fe"></option>\n									<option value="#eed0cd"></option><option value="#f9e7ce"></option>\n									<option value="#fcf1ce"></option><option value="#dce8d3"></option>\n									<option value="#d2e0e3"></option><option value="#d0e4f2"></option>\n									<option value="#d7d4e8"></option><option value="#e6d4db"></option>\n									<option value="#dfa29b"></option><option value="#f4cc9f"></option>\n									<option value="#fde49d"></option><option value="#bed3a9"></option>\n									<option value="#a8c4c8"></option><option value="#a2c7e5"></option>\n									<option value="#b0add5"></option><option value="#ceacbd"></option>\n									<option value="#d3746d"></option><option value="#edb573"></option>\n									<option value="#fad66e"></option><option value="#9dbe7e"></option>\n									<option value="#7fa5ad"></option><option value="#78abdb"></option>\n									<option value="#8984c1"></option><option value="#b884a1"></option>\n									<option value="#bc3723"></option><option value="#de9647"></option>\n									<option value="#ebc144"></option><option value="#78a150"></option>\n									<option value="#51818b"></option><option value="#4887c3"></option>\n									<option value="#5f5ba5"></option><option value="#9b5b79"></option>\n									<option value="#8e2819"></option><option value="#ab6520"></option>\n									<option value="#bb9223"></option><option value="#487120"></option>\n									<option value="#214f5a"></option><option value="#185891"></option>\n									<option value="#2e2b73"></option><option value="#6a2d49"></option>\n									<option value="#5e170c"></option><option value="#704314"></option>\n									<option value="#7c6014"></option><option value="#304a15"></option>\n									<option value="#16343d"></option><option value="#103b61"></option>\n									<option value="#1b1c4b"></option><option value="#461b2f"></option>\n                                </select>\n                            </span>\n								<span class="ql-format-separator"></span>\n							<span class="ql-format-group">\n                                <span class="ql-format-button ql-list numberedlist-darkgray"></span>\n                                <span class="ql-format-button ql-bullet orderedlist-darkgray"></span>\n							</span>\n							<span class="ql-format-separator"></span>\n							<span class="ql-format-group">\n                                <span class="ql-inline-link ql-format-button ql-link icons_Links-darkgray"></span>\n							</span>\n							<div class="edit-submit" style="display:none;   margin: 2px 15px;">\n	                        	<span class="status-text" bo-bind="statusText"></span>\n	                        	<button bo-if="!RTC.CONNECTED" class="btn btn-primary" disabled=\'true\'>Connecting</button>\n	                        	<button bo-if="RTC.CONNECTED" class="btn btn-primary" ng-disabled="sharing" ng-click="onSubmitClick()" bo-bind="submitText"></button>\n	                        </div>\n                        </div>\n                        <div class="title">\n                            <input placeholder="Title" ng-model="NodeTitle.value" type="text" bo-if="mode == NOTE_EDIT_MODE" ng-keydown="onTitleKeydown($event)" maxlength="1000"/>\n                            <span bo-if="(mode == NOTE_READONLY_MODE) && noteData.item.hasTitle" bo-bind="noteData.item.title"></span>\n                        </div>\n                        <div bo-if="ACTIONS.BODY_CONTENT" class="body cnvNotesAppSpecific" bo-class="{\'edit-mode\': mode == NOTE_EDIT_MODE}">\n                            <cnv-editor cnv-text-editor-mode="full"\n                                cnv-read-only="mode == NOTE_READONLY_MODE"\n                                cnv-text-editor-ctrl="noteEditorCtrl"\n                                cnv-placeholder="Write something..."\n                                cnv-at-mentions="getShareWithDropdownItems($query, delimiter)"\n                                cnv-hashtags="getHashtags($query)"\n                                toolbar-id="notes-app-editor-toolbar"\n                                cnv-at-mentions-suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html"\n                                cnv-on-at-mention-added="onAtMentionAdded(item)"\n                                cnv-on-hash-tag-added="onHashTagAdded(item)"\n                                cnv-on-at-mention-removed="onAtMentionRemoved(item)"\n                                cnv-text-selection-removed="onTextSelectionRemoved($atMentionNodes)"\n                                cnv-text-editor-on-esc-key-press="onEscKeyPressInTextEditor()"\n                                cnv-text-editor-on-ctrl-or-cmd-enter-press="onCtrlOrCmdEnterPressInTextEditor()"\n                                cnv-text-editor-on-ctrl-or-cmd-save-press="onCtrlOrCmdSavePressInTextEditor()"\n                                cnv-editor-source="Compose">\n                            </cnv-editor>\n                        </div>\n                        <div bo-if="!noteData.item.deleted">\n	                    	<div class="note-tags" bo-class="{\'border-separator\': !ACTIONS.ATTACHMENTS}">\n	                    		<div bo-if="mode == NOTE_READONLY_MODE && noteData.item.tags" class="readonly">\n	                    			<!-- " -->\n	                    			<span>Tags: </span>\n		                            <ul class="">\n		                                <li ng-repeat="tag in noteData.item.tagList">\n		                                    <a href="javascript:void(0);" bo-href="tag.label | hashtagToFilterLink" bo-bind="tag.label | labelToHashtag"></a>\n		                                    <span class="meta supress-space" bo-if="!$last">,&nbsp;</span>\n		                                </li>\n		                            </ul>\n	                            </div>\n								<div class="" bo-if="mode == NOTE_EDIT_MODE">\n									<tags-input class="to-field"\n										ng-model="noteData.item.tagList"\n										pre-placeholder="Add tags:"\n										placeholder="start typing..."\n										no-tags-indicator="false"\n										add-on-comma="true"\n										add-on-blur="true"\n										add-from-autocomplete-only="false"\n										display-property="label"\n										replace-spaces-with-dashes="true"\n										prefix-delimiter="#"\n										allowed-tags-pattern="^#[a-zA-Z_-]+.*$"\n										on-esc-key-press="onEscKeyPressInTagsField()"\n										on-tag-added="onItemAddedInTagField($tag)">\n										<auto-complete\n											source="getHashtags($query)"\n											load-history-on-focus="false"\n											auto-select-first-suggestion="false"\n											delimiter="#"\n											min-length="1"\n											suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html">\n										</auto-complete>\n									</tags-input>\n								</div>\n	                        </div>\n                        </div>\n                    </section>\n                    <section class="attachments l-gutter r-gutter" bo-if="ACTIONS.ATTACHMENTS && active">\n                    	<div class="border-separator">\n	                        <table>\n	                        	<tbody>\n		                            <tr class="attachments-tools">\n		                                <td class="attachment-info l-align pull-left">\n		                                    <span bo-if="ACTIONS.EDIT && !noteData.item.deleted && relatedPermissions.canEdit" class="attachment-controls" bo-class="{\'disabled\':!RTC.CONNECTED || RTC.LOCKED}">\n			                                    <a href="javascript:void(0)" class="super" ng-click="triggerFileInputClick()">Upload</a>\n			                                    <div ng-click="triggerFileInputClick()" class="cnv-icons-20 icons2_Attach-blue attach-local">\n						                        </div>\n						                        <div class="cnv-icons-20 attach-drop-box icons3_Dropbox-blue" cnv-drop-box-files-integrator cnv-file-input-service-context="fileInputContext"></div>\n						                        <div class="cnv-icons-20 attach-drive icons3_Google_Drive-blue" cnv-google-drive-files-integrator cnv-file-input-service-context="fileInputContext"></div>\n						                        <div class="cnv-icons-20 attach-box Icon2__Box-15-blue" cnv-box-files-integrator cnv-file-input-service-context="fileInputContext"></div>\n 												<cnv-giphy-popover cnv-file-context="fileInputContext" cnv-giphy-information="giphyObject" cnv-giphy-icon-class="giphy" cnv-giphy-mixpanel-info="Editor"></cnv-giphy-popover>\n		                                    </span>\n		                                </td>\n		                                <td class="attachment-selection-controls r-align pull-right" >\n		                                	<a bo-if="multipleDownloadSupport && noteData.note_files.length" href ng-click="downloadAll()" bo-bind="(\'Download \' + noteData.note_files.length + \' file\') + (noteData.note_files.length > 1 ? \'s\': \'\')"></a>\n		                                </td>\n		                            </tr>\n		                        </tbody>\n	                        </table>\n                   			<div class="file shared" ng-repeat="file in noteData.note_files track by file.file_id">\n                                <div class="file_holder" cnv-popover cnv-popover-ctrl="file.name">\n                                    <a ng-href="#{{file.file_id | getFileResourceLinkUrl: file.file_format: appInstanceId: noteData.item.type: noteData.item.item_id: file.name: null | slice: 1}}">\n                                        <img class="thumbnail-file-preview" bo-if="file.thumbnail_name && file.file_format!=\'VIDEO\'" ng-src="{{file | getNoteThumbnailPath: noteData.item_id}}" />\n                                        <cnv-video-thumbnail cnv-video-thumbnail-file="file" cnv-video-thumbnail-lazy-load="false" cnv-video-thumbnail-data-format="NOTE" bo-if="file.file_format==\'VIDEO\'" cnv-video-thumbnail-show-preview="false"></cnv-video-thumbnail>\n                                        <!-- file.file_format != \'IMAGE\' -->\n                                        	<!-- <span class="cnv-icons-64 icons_Video-darkgray file_span" bo-if="!file.thumbnail_name && isFileVideo(file.type)" /></span> -->\n                                        	<span class="cnv-icons-64 fileplainlarge-darkgray file_span" bo-if="!file.thumbnail_name && !isFileVideo(file.type)" /></span>\n                                    </a>\n                                    <div class="file-info">\n			        						<span bo-if="file.file_format == \'DOC\' || file.file_format == \'OTHER\' || file.file_format == \'VIDEO\'" class="ext_holder_detail_view cnv-small-file-ico" bo-class="file.name | getFileExtension" bo-bind="file.name | getFileExtensionForIcon"></span>\n\n                                    	<span  class="label" bo-bind="file.name" ></span>\n\n                                    	<span class="pull-right">\n                                    		<cnv-dropdowns cnv-dropdown-ctrl="file.dropdownCtrl"></cnv-dropdowns>\n                                    	</span>\n\n                                    	<div class="clear"></div>\n                                    </div>\n                                    <div class="inline-options">\n	                                	<span class="pull-left" ng-click="downloadFile(file.file_id)">\n	                                		<i class="cnv-icons-20 icons2_Download-lightgray"></i>\n	                                		<a href=\'javascript:void(0);\'>Download</a>\n	                                	</span>\n\n	                                    <span class="pull-right" bo-if="ACTIONS.ATTACHMENTS_MUTATION && relatedPermissions.canEdit" ng-click="deleteFile(file.file_id)">\n	                                		<i class="cnv-icons-20 icons2_Trash-lightgray"></i>\n	                                		<a href>Delete</a>\n	                                	</span>\n	                                	<div class="clear"></div>\n	                                </div>\n                                </div>\n                            </div>\n                            <div bo-class="{\'disabled\':!RTC.CONNECTED || RTC.LOCKED}" bo-if="ACTIONS.EDIT && !noteData.item.deleted && relatedPermissions.canEdit" ng-class="{\'no-files\': (!noteData.note_files.length && !filesUploadManagerCtrl.filesUnderProcessCount)}"\n	                            cnv-upload-files-ui-manager\n	                            cnv-upload-files-ui-manager-ctrl="filesUploadManagerCtrl"\n	                            cnv-insert-add-item-options-ctrl="insertOptionsCtrl"\n	                            class="files-upload-container">\n	                        </div>\n	                        <div class="clear"></div>\n                    </section>\n                    <div class="footer-dead-space"></div>\n                </div>\n            </div>\n            <cnv-dropzone bo-show="uploadAcknowledgement()" dropzone-id="\'notes-app-files-drop-target\'"></cnv-dropzone>\n        </div>\n    </div>\n</div>\n')
    }
    ]),
    b.module("notes/editor/templates/header.tpl.html", []).run(["$templateCache", function(a) {
        a.put("notes/editor/templates/header.tpl.html", '<ul class="sub-app-header-controls editor">\n\n  <li ng-if="relatedPermissions.canEdit" ng-click="editorCtrl.addMoreSharingInfo()" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized || currentAppCtrl.headerData.isSystemMessage}">\n  	<i class="cnv-icons-16 icons2_Share-lightgray"></i>\n  	<div class="format-label">Share this</div>\n  </li>\n  \n  <li ng-if="relatedPermissions.canEdit && !editorCtrl.headerData.isSystemMessage" ng-click="editorCtrl.addMoreTags()" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}">\n    <i class="cnv-icons-16 icon_tag-01-01-lightgray"></i>\n    <div class="format-label">Add tags</div>\n  </li>\n\n  <li ng-if="!editorCtrl.headerData.starred" ng-click="editorCtrl.starPost()" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}">\n    <i class="cnv-icons-16 icons_Star-lightgray"></i>\n    <div class="format-label">Star post</div>\n  </li>\n\n  <li ng-if="editorCtrl.headerData.starred" ng-click="editorCtrl.unstarPost()" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}">\n    <i class="cnv-icons-16 icons_Star-blue"></i>\n    <div class="format-label">Unstar post</div>\n  </li>\n\n\n  <li class="more-options">\n    <div >\n      <span class="dropdown" dropdown>\n          <a href class="dropdown-toggle" dropdown-toggle aria-haspopup="true" aria-expanded="false"  ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}">\n              <i class="placeholder-icon cnv-icons-16 icon1_more-01-lightgray"></i>\n              <span>More</span>\n          </a>\n          <ul class="customized dropdown-menu dropdown-menu">\n              <!-- ng-if="!editorCtrl.headerData.muted" -->\n              <li ng-show="relatedPermissions.canChangePermissions && !IS_STARTER_NETWORK" class=\'sharing_preferences menu-item-height\' style=\'min-width: 190px;\' ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}"><a><i class="cnv-icons-16 icons_Lock-lightblue pseudo-submenu-arrow menu-item-height"></i>Permissions</a>\n                <ul class="submenu2 customized dropdown-menu" style="position: absolute; top: -8px; left: 186px; display: none;min-width:200px;">\n                    <li class="menu-item-height" ng-if="!currentAppCtrl.headerData.isSystemMessage">\n                      <a href="javascript:void(0)" oncontextmenu="event.preventDefault();" ng-click="changePermissions(7)" class="menu-item-wrapper">\n                        <i class="cnv-icons-14 cnv-tick v-align-m" ng-show="relatedPermissions.permissions==7"></i>\n                        <span class="dummy-block-14" ng-show="relatedPermissions.permissions!=7"></span>\n                        <span>Can edit and comment</span>\n                      </a>\n                    </li>\n                    <li class="menu-item-height">\n                      <a href="javascript:void(0)" oncontextmenu="event.preventDefault();" ng-click="changePermissions(3)" class="menu-item-wrapper">\n                        <i class="cnv-icons-14 cnv-tick v-align-m" ng-show="relatedPermissions.permissions==3"></i>\n                        <span class="dummy-block-14" ng-show="relatedPermissions.permissions!=3"></span>\n                        <span>Comment only</span>\n                      </a>\n                    </li>\n                    <li class="menu-item-height"><a href="javascript:void(0)" oncontextmenu="event.preventDefault();" ng-click="changePermissions(1)" class="menu-item-wrapper" >\n                      <i class="cnv-icons-14 cnv-tick v-align-m" ng-show="relatedPermissions.permissions==1"></i>\n                      <span class="dummy-block-14" ng-show="relatedPermissions.permissions!=1"></span>\n                      <span>View only</span>\n                    </a>\n                  </li>\n                </ul>\n\n              </li>\n\n              <li  class=\'sharing_preferences menu-item-height\' ng-if="IS_STARTER_NETWORK && !isGuest" ng-click="$emit(\'upgrade-to-permium\')" style=\'min-width: 190px;\' ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}">\n                <a><i class="cnv-icons-16 icons_Lock-lightblue"></i>Permissions (Upgrade)</a>\n              </li>\n\n              <li ng-if=\'relatedPermissions.canChangePermissions && !(isGuest && IS_STARTER_NETWORK)\' class="divider"></li>\n\n              <li ng-if="!editorCtrl.headerData.muted" ng-click="editorCtrl.mutePost()" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}"><a><i class="cnv-icons-16 icons2_Mute-lightblue"></i>Mute this post</a></li>\n\n              <li ng-if="editorCtrl.headerData.muted" ng-click="editorCtrl.unmutePost()" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}"><a><i class="cnv-icons-16 icons2_Mute-lightblue"></i>Unmute this post</a></li>\n              \n              <li class="divider"></li>\n\n              <li ng-click="editorCtrl.copyLink()" class="menu-item-height"><a><i class="cnv-icons-16 linkhorizontal-lightblue"></i></i>Copy link</a></li>\n              \n              <li ng-if="!editorCtrl.headerData.isSystemMessage && editorCtrl.headerData.deletable && editorCtrl.headerData.deleted == \'0\'" ng-click="editorCtrl.moveToTrash()" class="menu-item-height" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}"><a><i class="cnv-icons-16 icons2_Trash-lightblue"></i>Delete post</a></li>\n              \n              <li ng-if="!editorCtrl.headerData.isSystemMessage && editorCtrl.headerData.restorable" class="menu-item-height" ng-click="editorCtrl.restorePost()" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}"><a><i class="cnv-icons-16 icons2_Trash-lightblue"></i>Restore post</a></li>\n              \n              <li ng-if="!editorCtrl.headerData.isSystemMessage && editorCtrl.headerData.deletable && editorCtrl.headerData.deleted == \'1\'" class="menu-item-height" ng-click="editorCtrl.deletePostPermanently()" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}"><a><i class="cnv-icons-16 icons2_Trash-lightblue"></i>Delete permanantly</a></li>\n          </ul>\n      </span>\n    </div>\n  </li>\n\n  <li class="compact-view-more-options more-options">\n    <div>\n      <span class="dropdown" dropdown>\n          <a href class="dropdown-toggle" dropdown-toggle aria-haspopup="true" aria-expanded="false"  ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}">\n              <i class="placeholder-icon cnv-icons-16 icon1_more-01-lightgray"></i>\n              <span>More</span>\n          </a>\n          <ul class="customized dropdown-menu dropdown-menu">\n\n            <li ng-show=\'relatedPermissions.canChangePermissions && !IS_STARTER_NETWORK\' class=\'sharing_preferences menu-item-height\' style=\'min-width: 190px;\' ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}"><a><i class="cnv-icons-16 icons_Lock-lightblue pseudo-submenu-arrow menu-item-height"></i>Permissions</a>\n              <ul class="submenu2 customized dropdown-menu" style="position: absolute; top: -8px; left: 186px; display: none;min-width:200px;">\n                <li class="menu-item-height">\n                  <a href="javascript:void(0)" oncontextmenu="event.preventDefault();" ng-click="changePermissions(7)" class="menu-item-wrapper">\n                    <i class="cnv-icons-14 cnv-tick v-align-m" ng-show="relatedPermissions.permissions==7"></i>\n                    <span class="dummy-block-14" ng-show="relatedPermissions.permissions!=7"></span>\n                    <span>Can edit and comment</span>\n                  </a>\n                </li>\n                <li class="menu-item-height">\n                  <a href="javascript:void(0)" oncontextmenu="event.preventDefault();" ng-click="changePermissions(3)" class="menu-item-wrapper">\n                    <i class="cnv-icons-14 cnv-tick v-align-m" ng-show="relatedPermissions.permissions==3"></i>\n                    <span class="dummy-block-14" ng-show="relatedPermissions.permissions!=3"></span>\n                    <span>Comment only</span>\n                  </a>\n                </li>\n                <li class="menu-item-height">\n                  <a href="javascript:void(0)" oncontextmenu="event.preventDefault();" ng-click="changePermissions(1)" class="menu-item-wrapper" >\n                    <i class="cnv-icons-14 cnv-tick v-align-m" ng-show="relatedPermissions.permissions==1"></i>\n                    <span class="dummy-block-14" ng-show="relatedPermissions.permissions!=1"></span>\n                    <span>View only</span>\n                  </a>\n                </li>\n              </ul>\n            </li>\n\n            <li ng-if="IS_STARTER_NETWORK && !isGuest" ng-click="$emit(\'upgrade-to-permium\')" class=\'sharing_preferences menu-item-height\' style=\'min-width: 190px;\' ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}">\n              <a><i class="cnv-icons-16 icons_Lock-lightblue"></i>Permissions (Upgrade)</a>\n            </li>\n\n            <li ng-show=\'relatedPermissions.canChangePermissions && !(isGuest && IS_STARTER_NETWORK)\' class="divider"></li>\n\n            <li class="menu-item-height" ng-if="!editorCtrl.headerData.muted" ng-click="editorCtrl.mutePost()" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}"><a><i class="cnv-icons-16 icons2_Mute-lightblue"></i>Mute this post</a></li>\n            <li class="menu-item-height" ng-if="editorCtrl.headerData.muted" ng-click="editorCtrl.unmutePost()" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}"><a><i class="cnv-icons-16 icons2_Mute-lightblue"></i>Unmute this post</a></li>\n\n            <li class="menu-item-height" ng-if="relatedPermissions.canEdit && !currentAppCtrl.headerData.isSystemMessage" ng-click="editorCtrl.addMoreTags()" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}"><a><i class="cnv-icons-16 icon_tag-01-01-lightblue"></i></i>Add tags</a></li>\n            <li class="menu-item-height" ng-if="!editorCtrl.headerData.starred" ng-click="editorCtrl.starPost()" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}"><a><i class="cnv-icons-16 icons_Star-lightblue"></i></i>Star this post</a></li>\n            <li class="menu-item-height" ng-if="editorCtrl.headerData.starred" ng-click="editorCtrl.unstarPost()" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}"><a><i class="cnv-icons-16 icons_Star-lightblue"></i></i>Unstar post</a></li>\n\n            <li class="divider"></li>\n            <li class="menu-item-height" ng-if="relatedPermissions.canEdit" ng-click="editorCtrl.addMoreSharingInfo()" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized || currentAppCtrl.headerData.isSystemMessage}"><a><i class="cnv-icons-16 icons2_Share-lightgray"></i></i>Share with others</a></li>\n		  \n            <li class="menu-item-height" ng-click="editorCtrl.copyLink()"><a><i class="cnv-icons-16 linkhorizontal-lightblue"></i></i>Copy link</a></li>\n\n            <li class="divider" ng-if="!editorCtrl.headerData.isSystemMessage && (editorCtrl.headerData.deletable || editorCtrl.headerData.restorable)"></li>\n            <li class="menu-item-height" ng-if="!editorCtrl.headerData.isSystemMessage && editorCtrl.headerData.deletable && editorCtrl.headerData.deleted == \'0\'" ng-click="editorCtrl.moveToTrash()" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}"><a><i class="cnv-icons-16 icons2_Trash-lightblue"></i>Delete post</a></li>\n            <li class="menu-item-height" ng-if="!editorCtrl.headerData.isSystemMessage && editorCtrl.headerData.restorable" ng-click="editorCtrl.restorePost()" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}"><a><i class="cnv-icons-16 icons2_Trash-lightblue"></i>Restore post</a></li>\n            <li class="menu-item-height" ng-if="!editorCtrl.headerData.isSystemMessage && editorCtrl.headerData.deletable && editorCtrl.headerData.deleted == \'1\'" ng-click="editorCtrl.deletePostPermanently()" ng-class="{\'disabled\': !currentAppCtrl.headerData.initialized}"><a><i class="cnv-icons-16 icons2_Trash-lightblue"></i>Delete permanantly</a></li>\n          </ul>\n      </span>\n    </div>\n  </li>  \n</ul>');
    }
    ]),
    b.module("notes/gallery/components/cnvFileViewer/cnvFileViewer.tpl.html", []).run(["$templateCache", function(a) {
        a.put("notes/gallery/components/cnvFileViewer/cnvFileViewer.tpl.html", '<section id="outerContainer">\n\n  <div id="mainContainer">\n\n    <!-- <div class="spinner" ng-if="showSpinner">\n      <img src="assets/img/feed/loading-spin-white.svg" alt="Loading file..." />\n    </div> -->\n\n    <div id="loadingBar">\n      <div class="progress">\n        <div class="glimmer">\n        </div>\n      </div>\n    </div>\n\n    <div class="page-num-wrapper" style="display:none">\n      <!-- <span class="page-title">PAGE</span> -->\n      <span id="pageNumber"></span>\n    </div>\n\n    <div id="viewerContainer" tabindex="0">\n      <div id="viewer" class="pdfViewer"></div>\n    </div>\n\n    <div id="errorWrapper" hidden=\'true\'>\n      <div id="errorMessageLeft">\n        <span id="errorMessage"></span>\n        <button id="errorShowMore" data-l10n-id="error_more_info">\n          More Information\n        </button>\n        <button id="errorShowLess" data-l10n-id="error_less_info" hidden=\'true\'>\n          Less Information\n        </button>\n      </div>\n      <div id="errorMessageRight">\n        <button id="errorClose" data-l10n-id="error_close">\n          Close\n        </button>\n      </div>\n      <div class="clearBoth"></div>\n      <textarea id="errorMoreInfo" hidden=\'true\' readonly="readonly"></textarea>\n    </div>\n  </div> <!-- mainContainer -->\n\n</section>')
    }
    ]),
    b.module("notes/gallery/components/cnvGallerySnippetCommentBtn/cnvGallerySnippetCommentBtn.tpl.html", []).run(["$templateCache", function(a) {
        a.put("notes/gallery/components/cnvGallerySnippetCommentBtn/cnvGallerySnippetCommentBtn.tpl.html", '<div class="sel-open-comments gallery arrow-center" style="display: none;" ng-click="btnClicked()"><span class=\'cross cnv-icons-20 icons2_Close-darkgray\' ng-click="btnClose($event)"></span><i class="cnv-icons-20 icons_Comments-white"></i><span>Comment on this</span></div>\n')
    }
    ]),
    b.module("notes/gallery/components/cnvImageViewer/cnvImageViewer.tpl.html", []).run(["$templateCache", function(a) {
        a.put("notes/gallery/components/cnvImageViewer/cnvImageViewer.tpl.html", '<div class="row galleryImageContainer" ng-keypress="keyPressDetect($event)" style="overflow: hidden">\n\n    <div class="imageMapTest" style="position: absolute; bottom: 70px; left: 50px; width: auto; height: auto; z-index: 4; overflow: hidden;">\n    </div>\n\n    <div class="panzoom">\n        <img id="main-image" style="opacity: 0" crossOrigin="use-credentials">\n    </div>\n\n    <img id="thumb-image" style="display: none" crossOrigin="use-credentials">\n\n    <!-- copy of main-image used which fades out when user navigates between images  -->\n    <img id="old-image" style="display: none" crossOrigin="use-credentials">\n\n    <!-- canvas on which shape drawing is done by user -->\n    <canvas id="img-drawing-canvas" crossOrigin="anonymous"></canvas>\n\n    <!-- canvas where snippet image and shape(s) are pasted -->\n    <canvas id="dummyCanvas" style="display: none" crossOrigin="anonymous"></canvas>\n\n    <!-- canvas where content of #main-image and #img-drawing-canvas are merged before generating snippet image in #dummyCanvas -->\n    <canvas id="img-shape-canvas" style="display: none; top: 0; left: 0; position: absolute; z-index: 999; pointer-events: none" crossOrigin="anonymous"></canvas>\n\n    <ul id="image-context-menu" class="dropdown-menu ddl" style="display: none; position: fixed; width: 80px">\n        <li><a href class="copy-link">Copy link...</a></li>\n        <li><a href class="save-as">Save image</a></li>\n    </ul>\n\n    <div class="cnv-spinner" ng-show="showSpinner"><!-- <img src="assets/img/feed/loading-spin-white.svg" alt="Loading icon" /> --></div>\n\n</div>\n')
    }
    ]),
    b.module("notes/gallery/components/cnvToolSelected/cnvToolSelected.tpl.html", []).run(["$templateCache", function(a) {
        a.put("notes/gallery/components/cnvToolSelected/cnvToolSelected.tpl.html", '<ul class="toolSelected">\n    <li ng-show="toolSelected == \'rectangle\' || toolSelected == \'panzoom\' || toolSelected == \'text\'" ng-click="selectTool(\'rectangle\')" class="squareIcon"></li>\n    <li ng-show="toolSelected == \'ellipse\'" ng-click="selectTool(\'ellipse\')" class="ellipseIcon"></li>\n    <li ng-show="toolSelected == \'line\'" ng-click="selectTool(\'line\')" class="lineIcon"></li>\n    <li ng-show="toolSelected == \'pen\'" ng-click="selectTool(\'pen\')" class="penIcon"></li>\n    <li ng-show="toolSelected == \'eraser\'" ng-click="selectTool(\'eraser\')" class="eraseIcon"></li>\n</ul>\n')
    }
    ]),
    b.module("notes/gallery/components/cnvVideoViewer/cnvVideoViewer.tpl.html", []).run(["$templateCache", function(a) {
        a.put("notes/gallery/components/cnvVideoViewer/cnvVideoViewer.tpl.html", '<div ng-if="loadPlayer" class="galleryVideoView sizeableVideoView">\n	<cnv-video-player \n	cnv-video-player-options="playerOptions" \n	cnv-video-player-file=\'currentVideoFile\' \n	></cnv-video-player>\n</div>')
    }
    ]),
    b.module("notes/gallery/components/galleryFooter/galleryFooter.tpl.html", []).run(["$templateCache", function(a) {
        a.put("notes/gallery/components/galleryFooter/galleryFooter.tpl.html", '<!-- Gallery footer row -->\n<div class="row galleryFooterContainer no-margin" cnv-hide-timer time="7000">\n\n	<!-- Files tiles/thumbnails container -->\n	<div class="row tiles-cont-wrapper" ng-show="tiles.show">\n\n		<div class="tilesContainer"\n			cnv-tiles\n			ani-end-promise="tiles.aniEndPromise"\n			is-open="tiles.show"\n			animate="tiles.animate"\n			is-btn-hover="tiles.isBtnHover"\n			btn-clicked="tiles.btnClicked"\n			is-tiles-hover="tiles.isTilesHover"\n			current-file="currentlySelected.file_id">\n\n			<a class="prv cnv-icons-20 icons2_Back_Arrow_05-lightgray"></a>\n\n			<ul>\n				<li id="file-note" ng-if="noteTextPreview !== \'\'">\n					<a bo-click="reelItemClicked()"\n						bo-href="tab.appInstanceId | getResourceLinkUrl: [{ type: note.item.type, uid: note.item.item_id, title: note.item.title}]: null: note.item.title">\n						<strong class="title">Note:</strong>\n						{{noteTextPreview}}\n					</a>\n				</li>\n\n				<li id="file-{{key.file_id}}" ng-repeat="key in files track by key.file_id">\n					<a bo-click="reelItemClicked()"\n						ng-href="{{ key.file_id | getFileResourceLinkUrl: key.file_id : tab.appInstanceId: note.item.type: note.item.item_id: null }}">\n						<img ng-if="key.thumbnail_name" ng-src="{{ key | getNoteThumbnailPath: key.item_id: $index }}" />\n						<div ng-if="key.file_format !== \'IMAGE\' || !key.thumbnail_name" class="file-detail-tab">\n				        	<span class="ico cnv-icons-30 {{key.type | getSmallFileIconClassByTypeFromAssets}}"></span>\n				        	<span>{{::key.name}}</span>\n				        </div>\n					</a>\n				</li>\n			</ul>\n\n			<a class="nxt cnv-icons-20 icons2_Back_Arrow_05-lightgray"></a>\n\n			<div class="dummy-container" cnv-dummy-container style="display: none"></div>\n		</div>\n	</div>\n\n	<!-- Files navigation controls -->\n	<div class="row">\n		<div class="controlsContainer">\n			<div ng-if="!fileDeleted" class="file-meta-info">\n				<!-- This div is added to avoid UI jitter when ng-show changes state -->\n				<div ng-show="currentlySelected">\n					<strong class="title" title="{{currentlySelected.name}}">{{currentlySelected.name}}</strong>\n					<span class="user" title="{{createdBy.label}}">{{createdBy.label}}</span>, <span class="date">{{createdDate}}</span>\n				</div>\n			</div>\n\n			<ul cnv-ico-hover>\n\n				<li ng-if="!fileDeleted" class="download" title="Download">\n					<!-- Download Button -->\n					<a ng-click="downloadCurrentFile()"\n						data-class-name="icons2_Download-darkgray">\n						<span class="ico icons2_Download-darkgray cnv-icons-20"></span>\n					</a>\n				</li>\n\n				<li ng-if="!fileDeleted" class="dropdown opts gallery-dropdown" dropdown>\n					<a id="opts-menu"\n						dropdown-toggle\n						class="opts dropdown-toggle"\n						data-toggle="dropdown"\n						title="Options"\n						data-class-name="icon1_more-01-darkgray">\n						<span class="ico cnv-icons-20 icon1_more-01-darkgray"></span>\n						<!-- <span class="txt">Options</span>\n						<span class="caret"></span> -->\n					</a>\n					<ul class="dropdown-menu opts-ddl" bo-class="{\'opened-from-chat\': (postType === 21 || isCommentAttachment)}" aria-labelledby="opts-menu">\n						<li class="opts-download-item">\n							<a target="_blank"\n								download="{{ currentlySelected.name }}"\n								ng-href="{{ currentlySelected.name | getDownloadUrl: currentlySelected.original_name: currentlySelected.item_id : currentlySelected.app_instance_id }}">\n								<span class="ico icons2_Download-lightgray cnv-icons-18"></span>\n								Download\n							</a>\n						</li>\n						<li>\n							<a ng-click="promptCopyLink()">\n								<span class="ico icons2_Share-lightgray cnv-icons-18"></span>\n								Copy link\n							</a>\n						</li>\n						<li bo-if="postType !== 21 && !isCommentAttachment && galleryCtrl.relatedPermissions.canEdit">\n							<a ng-click="deleteFile(currentlySelected.file_id)">\n								<span class="ico icons2_Close-lightgray cnv-icons-16"></span>\n								Delete\n							</a>\n						</li>\n					</ul>\n				</li>\n\n				<li class="sep opts" ng-if="!fileDeleted"></li>\n\n				<li ng-if="!fileDeleted && postType !== 21">\n					<a class="goto-post"\n						bo-href="tab.appInstanceId | getResourceLinkUrl: [{ type: note.item.type, uid: note.item.item_id, title: note.item.title}]: null: note.item.title"\n						ng-click="goToParentHierarchy()"\n						title="Go to post"\n						data-class-name="icons_Post-darkgray">\n						<span class="ico cnv-icons-20 icons_Post-darkgray"></span>\n						<!-- <span class="txt">Go to post</span> -->\n					</a>\n				</li>\n\n				<li ng-if="!fileDeleted" class="files-count">\n					File <strong bo-bind="(currentlySelected.index + 1)"></strong> of <span bo-bind="files.length"></span>\n				</li>\n\n				<li class="btn-first-file" bo-class="{\'invisible\': isCommentAttachment}">\n					<a ng-disabled="currentlySelected.file_id === navigate.firstImage.file_id"\n						bo-click="arrowClicked()"\n						ng-href="{{ navigate.firstImage.file_id | getFileResourceLinkUrl: navigate.firstImage.file_format : tab.appInstanceId: note.item.type: note.item.item_id: navigate.firstImage.name }}"\n						title="First"\n						data-class-name="icon1_view_First_First-darkgray">\n						<span class="ico first-file cnv-icons-20 icon1_view_First_First-darkgray"></span>\n					</a>\n				</li>\n\n				<li bo-class="{\'invisible\': isCommentAttachment}">\n					<a ng-disabled="currentlySelected.file_id === navigate.firstImage.file_id"\n						bo-click="arrowClicked()"\n						ng-href="{{ navigate.previousImage.file_id | getFileResourceLinkUrl: navigate.previousImage.file_format : tab.appInstanceId: note.item.type: note.item.item_id: navigate.previousImage.name }}"\n						title="Previous"\n						data-class-name="icons2_Back_Arrow_13-darkgray">\n						<span class="ico cnv-icons-20 icons2_Back_Arrow_13-darkgray"></span>\n						<!-- <span class="txt">Previous</span> -->\n					</a>\n				</li>\n\n				<li bo-if="postType !== 21 && !isCommentAttachment"\n					class="show-tiles"\n					ng-click="tiles.viewAllClick()"\n					ng-mouseover="tiles.hover()"\n					ng-mouseout="tiles.blur()"\n					title="View All">\n					<div class="arrow" ng-show="tiles.show"></div>\n					<a data-class-name="Icon1_Gallery-01-01-darkgray">\n						<span class="ico cnv-icons-20 Icon1_Gallery-01-01-darkgray"></span>\n						<!-- <span class="txt">View All</span> -->\n					</a>\n				</li>\n\n				<li bo-class="{\'invisible\': isCommentAttachment}">\n					<a ng-disabled="currentlySelected.file_id === navigate.nextImage.file_id"\n						bo-click="arrowClicked()"\n						ng-href="{{ navigate.nextImage.file_id | getFileResourceLinkUrl: navigate.nextImage.file_format : tab.appInstanceId: note.item.type: note.item.item_id: navigate.nextImage.name }}"\n						title="Next"\n						data-class-name="icons2_Back_Arrow_13-darkgray">\n						<span class="ico next cnv-icons-20 icons2_Back_Arrow_13-darkgray"></span>\n						<!-- <span class="txt">Next</span> -->\n					</a>\n				</li>\n\n				<li class="btn-last-file" bo-class="{\'invisible\': isCommentAttachment}">\n					<a ng-disabled="currentlySelected.file_id === navigate.nextImage.file_id"\n						bo-click="arrowClicked()"\n						ng-href="{{ navigate.lastImage.file_id | getFileResourceLinkUrl: navigate.lastImage.file_format : tab.appInstanceId: note.item.type: note.item.item_id: navigate.lastImage.name }}"\n						title="Last"\n						data-class-name="icon1_view_Last_Last-darkgray">\n						<span class="ico last-file cnv-icons-20 icon1_view_Last_Last-darkgray"></span>\n					</a>\n				</li>\n\n			</ul>\n\n		</div>\n	</div>\n\n\n	<!-- <a class="btn-close-gallery" class="ico next cnv-icons-20 icons2_Close-white" href="javascript:void(0)" ng-click="$emit(\'gotoParentResourceInHistory\', tab)"></a> -->\n\n	<a class="btn-close-fullscreen icons2_Close-darkgray" ng-click="$emit(\'NotesApp:FullScreen\', {isFullScreen: false})" title="Exit fullscreen"></a>\n	<button id="gallery-bogus-anchor" style="position: fixed; left: -1000px"> </button>\n\n</div>\n<!-- Gallery footer row ends -->\n')
    }
    ]),
    b.module("notes/gallery/components/galleryHeader/galleryHeader.tpl.html", []).run(["$templateCache", function(a) {
        a.put("notes/gallery/components/galleryHeader/galleryHeader.tpl.html", '<!-- Gallery app top header -->\n<div class="row galleryHeaderContainer" ng-hide="galleryCtrl.fileFormat === \'Video\'" ng-mouseenter="onGalleryControlsPanelMouseEnter();" ng-mouseleave="onGalleryControlsPanelMouseLeave();">\n\n	<!-- right - attach more, options, and viewer container -->\n	<ul class="col-sm-24 reset-list headerMiddleControlsContainer align-center"\n		cnv-ico-hover>\n\n		<li ng-if="galleryCtrl.postType !== 21 && !galleryCtrl.isCommentAttachment"\n			ng-click="galleryCtrl.selectTool(\'rectangle\')"\n			ng-class="{\'selected-tool\':galleryCtrl.toolSelected === \'rectangle\', \'disable\': !galleryCtrl.isFileLoaded || !galleryCtrl.relatedPermissions.canComment}"\n			title="Rectangle"\n			data-class-name="icons2_Markup_18-darkgray">\n			<a class="cnv-icons-20 icons2_Markup_18-darkgray"></a>\n		</li>\n\n		<li ng-if="galleryCtrl.postType !== 21 && !galleryCtrl.isCommentAttachment" \n		    class="toolbox dropdown dropdown-toggle"\n			ng-class="{\'selected-tool\': galleryCtrl.toolSelected === \'pen\' || galleryCtrl.toolSelected === \'text\' || galleryCtrl.toolSelected === \'arrow\', \'disable\': !galleryCtrl.isFileLoaded || !galleryCtrl.relatedPermissions.canComment}">\n\n			<span class="tool-selected-ico cnv-icons-20"\n				ng-show="galleryCtrl.toolSelected === \'pen\' || galleryCtrl.toolSelected === \'arrow\' || galleryCtrl.toolSelected === \'text\'"\n				ng-class="{\'icon1_marker-01-darkgray\': galleryCtrl.toolSelected === \'pen\', \'icons2_Toolbar_Arrow-darkgray\': galleryCtrl.toolSelected === \'arrow\', \'Icon2__Highlight-darkgray\': galleryCtrl.toolSelected === \'text\'}"></span>\n\n			<a stop-event="click" ng-click="galleryCtrl.selectTool(\'text\')" class="cnv-icons-20 Icon2__Highlight-darkgray" title="Text" ng-show="galleryCtrl.fileFormat === \'Doc\' && galleryCtrl.toolSelected !== \'pen\' && galleryCtrl.toolSelected !== \'arrow\' && galleryCtrl.toolSelected !== \'text\'"\n				data-class-name="Icon2__Highlight-darkgray"\n				data-self-hover="true"></a>\n\n			<a stop-event="click" ng-click="galleryCtrl.selectTool(\'arrow\')" ng-show="galleryCtrl.fileFormat === \'Image\' && galleryCtrl.toolSelected !== \'arrow\' && galleryCtrl.toolSelected !== \'pen\'" class="cnv-icons-20 icons2_Toolbar_Arrow-darkgray" title="Arrow"\n				data-class-name="icons2_Toolbar_Arrow-darkgray"\n				data-self-hover="true"></a>\n\n			<span class="caret"></span>\n\n			<ul class="dropdown-menu">\n				<li stop-event="click"\n					ng-click="galleryCtrl.selectTool(\'text\')"\n					class="cnv-icons-20 Icon2__Highlight-darkgray"\n					title="Text"\n					data-class-name="Icon2__Highlight-darkgray"\n					data-self-hover="true"\n					ng-show="galleryCtrl.fileFormat === \'Doc\' && galleryCtrl.toolSelected !== \'text\' && (galleryCtrl.toolSelected === \'arrow\' || galleryCtrl.toolSelected === \'pen\')">\n					<!-- <a class="cnv-icons-20 Icon2__Highlight-darkgray"></a> -->\n				</li>\n\n				<li stop-event="click"\n					ng-click="galleryCtrl.selectTool(\'pen\')"\n					class="cnv-icons-20 icon1_marker-01-darkgray"\n					data-class-name="icon1_marker-01-darkgray"\n					data-self-hover="true"\n					ng-show="galleryCtrl.toolSelected !== \'pen\'"\n					title="Pencil">\n					<!-- <a class="cnv-icons-20 icon1_marker-01-darkgray" title="Pencil"></a> -->\n				</li>\n\n				<li stop-event="click"\n					ng-click="galleryCtrl.selectTool(\'arrow\')"\n					ng-show="(galleryCtrl.fileFormat === \'Doc\' && galleryCtrl.toolSelected !== \'arrow\') || (galleryCtrl.toolSelected !== \'arrow\' && galleryCtrl.toolSelected === \'pen\')"\n					class="cnv-icons-20 icons2_Toolbar_Arrow-darkgray"\n					data-class-name="icons2_Toolbar_Arrow-darkgray"\n					data-self-hover="true"\n					title="Arrow"></li>\n			</ul>\n		</li>\n\n		<li class="color-picker dropdown dropdown-toggle"\n			ng-if="galleryCtrl.postType !== 21 && !galleryCtrl.isCommentAttachment"\n			ng-class="{\'disable\': !galleryCtrl.relatedPermissions.canComment}"\n			title="Color Picker">\n			<span class="cnv-icons-20 ico-square"></span>\n			<span class="colored-bottom {{galleryCtrl.snippetColor}}"></span>\n			<span class="caret"></span>\n			<ul class="dropdown-menu dropdown-menu-left color-picker-list" cnv-hide-css-menu-on-click data-selector="li">\n				<li class="green" ng-click="galleryCtrl.setSnippetColor(\'#58dd3a\')"></li>\n				<li class="red" ng-click="galleryCtrl.setSnippetColor(\'#d10000\')"></li>\n				<li class="blue" ng-click="galleryCtrl.setSnippetColor(\'#20afc8\')"></li>\n				<li class="yellow" ng-click="galleryCtrl.setSnippetColor(\'#f0fc2e\')"></li>\n				<li class="black" ng-click="galleryCtrl.setSnippetColor(\'#000000\')"></li>\n				<li class="white" ng-click="galleryCtrl.setSnippetColor(\'#ffffff\')"></li>\n			</ul>\n		</li>\n\n		<li ng-if="galleryCtrl.postType !== 21 && !galleryCtrl.isCommentAttachment" class="noIcon">|</li>\n\n		<li ng-click="galleryCtrl.selectTool(\'panzoom\')"\n			title="Pan"\n			ng-class="{\'selected-tool\':galleryCtrl.toolSelected === \'panzoom\'}"\n			data-class-name="icons2_Hand-darkgray">\n			<a class="cnv-icons-20 icons2_Hand-darkgray"></a>\n		</li>\n\n		<li class="dropdown dropdown-toggle align-center zoom-ddl-container"\n			dropdown-toggle\n			dropdown\n			data-class-name="icons_Zoom_In-darkgray">\n			<a class="cnv-icons-20 icons_Zoom_In-darkgray" title="Zoom"></a>\n			<div class="dropdown-menu zoom-opts">\n				<div class="input-ctrls">\n					<input type="range" id="galleryZoomRange" min="1" max="10" value="1" step="1" stop-event="click" />\n\n					<span class="zoom-percent-container">\n						<input id="galleryZoomPercent" stop-event="click" class="form-control" type="number" value="100" min="1" max="500"> %\n					</span>\n				</div>\n\n				<div class="ctrls">\n					<button class="btn fit-screen">Fit to screen</button>\n					<button class="btn original">Original size</button>\n				</div>\n			</div>\n		</li>\n\n		<li title="Full Screen" data-class-name="Icon1_expand-01-darkgray">\n			<a class="cnv-icons-20 Icon1_expand-01-darkgray" ng-click="galleryCtrl.fullscreen(true)"></a>\n		</li>\n	</ul>\n\n	<div class="expand-arrow"></div>\n	<div class="collapse-arrow"></div>\n\n</div>\n<!-- Gallery top header ends\n')
    }
    ]),
    b.module("notes/gallery/templates/galleryMain.tpl.html", []).run(["$templateCache", function(a) {
        a.put("notes/gallery/templates/galleryMain.tpl.html", '<div ng-controller="GalleryCtrl" class="gallery-wrapper" bindonce>\n\n	<div class="notesAppContainer galleryAppContainer" tabindex="1">\n\n		<div ng-show="fileNotSupported && !fileDeleted" class="un-supported-file">\n			<span class="title">No preview is available for this file.</span>\n\n			<div class="ico-container">\n				<div class="ico cnv-icons-30 icons_File_Plain-blue"></div>\n\n				<div class="file-name">{{currentlySelected.name | limitText: 40}}</div>\n				<div class="size">{{currentlySelected.type.toUpperCase() + " File" + (currentlySelected.formatted_file_size ? (", " + currentlySelected.formatted_file_size) : "")}}</div>\n			</div>\n\n			<a class="btn btn-primary download" download="{{ currentlySelected.name }}" ng-href="{{ currentlySelected.name | getDownloadUrl: currentlySelected.original_name: currentlySelected.item_id : currentlySelected.app_instance_id }}" role="button">Download</a>\n		</div>\n\n		<ng-include ng-if="fileDeleted" src="\'apps/templates/resourceNotAvailable.tpl.html\'"></ng-include>\n\n		<!-- <div ng-show="fileDeleted" class="file-not-found">\n			<strong class="title">File not found.</strong>\n		</div> -->\n\n		<!-- Gallery Header -->\n		<!-- <ng-include src="\'notes/gallery/components/galleryHeader/galleryHeader.tpl.html\'"></ng-include> -->\n\n		<!-- Gallery Canvas -->\n		<cnv-image-viewer ng-show="fileNotSupported !== true && fileFormat === \'Image\'"></cnv-image-viewer>\n\n		<!-- File Viewer -->\n		<cnv-file-viewer ng-show="fileNotSupported !== true && fileFormat === \'Doc\'"></cnv-file-viewer>\n\n		<!-- Video Viewer -->\n		<cnv-video-viewer ng-show="fileNotSupported !== true && fileFormat === \'Video\'"></cnv-video-viewer>\n\n		<!-- Gallery Footer -->\n		<ng-include src="\'notes/gallery/components/galleryFooter/galleryFooter.tpl.html\'"></ng-include>\n\n		<a title="Close Gallery" class="btn-close-gallery ico next cnv-icons-20 icons2_Close-white" href="javascript:void(0)" ng-click="exitGalleryThenBack()"></a>\n\n	</div>\n\n	<cnv-gallery-snippet-comment-btn></cnv-gallery-snippet-comment-btn>\n</div>\n')
    }
    ]),
    b.module("onboarding/cnvOnboardingDownloadAppsAdvert/cnvOnboardingDownloadAppsAdvert.tpl.html", []).run(["$templateCache", function(a) {
        a.put("onboarding/cnvOnboardingDownloadAppsAdvert/cnvOnboardingDownloadAppsAdvert.tpl.html", '<div class="cnv-onboarding-download-apps-advert">\n	<div class="cross" ng-click="dismissAdvert();logDismissInMixpanel()"><i class="cnv-icons-10 icons2_Close-white"></i></div>\n	<div class="container-fluid">\n		<div class="row">\n			<div class="col-xs-24">\n				<div class="wrapper">\n					<div class="left">\n						<h3>Get the app</h3>\n						<span>Install the desktop app to get the most out of Convo.</span>\n						<span ng-if="platform == \'mac\'">Get instant notifications, \n						share faster with Quick Posts, and stay connected.</span>\n						<span ng-if="platform == \'win\'">Keep an eye on what\'s happening and get notifications on your desktop.</span>\n						<a class="dummy-click" href="{{::config.HTML_APP_DOWNLOAD_URL}}" ng-click="dismissAdvertWithDelay();markDownloadApp();logDownloadInMixpanel();">\n							<div class="download-desktop"></div>\n						</a>\n						<span class="dark" ng-click="dismissAdvert();logDismissInMixpanel();">Or continue in your browser instead</span>\n					</div>\n					<div class="right">\n						<a class="dummy-click" href="{{::config.HTML_APP_DOWNLOAD_URL}}" ng-click="dismissAdvertWithDelay();markDownloadApp();logDownloadInMixpanel();">\n							<div class="mac">\n							</div>\n						</a>\n					</div>\n				</div>\n			</div>\n		</div>\n	</div>\n</div>')
    }
    ]),
    b.module("onboarding/cnvOnboardingHomeRight/cnvOnboardingChecklist.tpl.html", []).run(["$templateCache", function(a) {
        a.put("onboarding/cnvOnboardingHomeRight/cnvOnboardingChecklist.tpl.html", '<div class="cnv-onboarding-checklist-container cnv-onboarding-overlay" bindonce>\n    <!-- <button bo-if="!userInfo.isGuestUser()" class="btn btn-primary btn-block" \n    ng-click="openInviteTeammatesModal()">Invite your teammates</button> -->\n    <button class="btn btn-primary btn-block" bo-if="!userInfo.isGuestUser()" ng-click="inviteContacts()">Invite your teammates</button>\n    \n    <div class="separator" bo-if="!userInfo.isGuestUser()">or</div>\n    \n    <div class="vanity-help-txt" style="margin: -5px 0 10px 0;" bo-if="!userInfo.isGuestUser()">\n        <span>Get your company\'s exclusive invite link. Your teammates can use this link to sign up to Convo.</span>\n    </div>\n    <button class="btn btn-default btn-block" bo-if="!userInfo.isGuestUser()" ng-click="onShareableLinkClick()" style="margin-bottom: 10px;">Invite via email or chat</button>\n    \n    <a href="{{::config.APP_DOMAIN + \'/app/signup\'}}" bo-if="userInfo.isGuestUser()" class="link-btn" target="_blank">\n        <button class="btn btn-primary btn-block">Create your own network</button>\n    </a>\n\n    <div class="checklist-wrapper">\n        <!-- headings -->\n        <span class="heading">Explore Convo</span>\n        <span class="heading-sub">Follow these tips to get started.</span>\n        <!-- progress bar -->\n        <div class="cnv-progress-bar">\n            <div class="green" ng-style="{\'width\': checklistProgress + \'%\'}"></div>\n            <span class="count" ng-if="checklistProgress !== 100">{{checklistProgress + \'%\'}}</span>\n        </div>\n        <hr />\n        <!-- onboarding checklist -->\n        <ul class="onboarding-checklist" bo-if="userInfo.isGuestUser()">\n            <li>\n            	<a href="javascript:void(0)" ng-click="$emit(\'cnvOnboarding:startFeedOnboarding\'); $emit(\'showHideHeaderFloatingColumn\', false)" ng-class="{\'strike-through\': checklist.learn_my_feed_done == 1}"><i class="glyphicon glyphicon-ok" ng-if="checklist.learn_my_feed_done == 1"></i>1. Learn about feed</a>\n        	</li>\n            <li class="onboarding-share-post-tooltip">\n            	<a href="javascript:void(0)" ng-click="$emit(\'cnvOnboarding:startSharePostOnboarding\')" ng-class="{\'strike-through\': checklist.share_a_post_done == 1}"><i class="glyphicon glyphicon-ok" ng-if="checklist.share_a_post_done == 1"></i>2. Share a post</a>\n        	</li>\n            <li class="onboarding-download-apps-tooltip" ng-class="{\'strike-through\': checklist.downloaded_apps == 1}">\n            	<a href="javascript:void(0)" ng-click="$emit(\'cnvOnboarding:startDownloadAppsOnboarding\')"><i class="glyphicon glyphicon-ok" ng-if="checklist.downloaded_apps == 1"></i>3. Download apps</a>\n        	</li>\n        </ul>\n        <ul class="onboarding-checklist" bo-if="!userInfo.isGuestUser()">\n            <li>\n                <a href="javascript:void(0)" ng-click="$emit(\'cnvOnboarding:startFeedOnboarding\'); $emit(\'showHideHeaderFloatingColumn\', false)" ng-class="{\'strike-through\': checklist.learn_my_feed_done == 1}">\n                    <i class="glyphicon glyphicon-ok" ng-if="checklist.learn_my_feed_done == 1"></i>1. Learn about feed\n                </a>\n            </li>\n            <li class="onboarding-create-group-tooltip-1">\n            	<a href="javascript:void(0)" ng-click="$emit(\'cnvOnboarding:startCreateGroupOnboarding\')" ng-class="{\'strike-through\': checklist.create_a_group_done == 1}"><i class="glyphicon glyphicon-ok" ng-if="checklist.create_a_group_done == 1"></i>2. Create a group</a>\n        	</li>\n            <li class="onboarding-share-post-tooltip">\n            	<a href="javascript:void(0)" ng-click="$emit(\'cnvOnboarding:startSharePostOnboarding\')" ng-class="{\'strike-through\': checklist.share_a_post_done == 1}">\n            		<i class="glyphicon glyphicon-ok" ng-if="checklist.share_a_post_done == 1"></i>3. Share a post</a>\n        	</li>\n            <li class="onboarding-download-apps-tooltip">\n            	<a href="javascript:void(0)" ng-click="$emit(\'cnvOnboarding:startDownloadAppsOnboarding\')" ng-class="{\'strike-through\': checklist.downloaded_apps == 1}">\n            		<i class="glyphicon glyphicon-ok" ng-if="checklist.downloaded_apps == 1"></i>4. Download apps</a>\n        	</li>\n            <li class="onboarding-integrations-tooltip">\n            	<a href="javascript:void(0)" ng-click="$emit(\'cnvOnboarding:startIntegrationsOnboarding\')" ng-class="{\'strike-through\': checklist.connect_to_other_tools_done == 1}"><i class="glyphicon glyphicon-ok" ng-if="checklist.connect_to_other_tools_done == 1"></i>5. Connect to other tools</a>\n        	</li>\n        </ul>\n    </div>\n</div>\n')
    }
    ]),
    b.module("onboarding/cnvOnboardingPilotIntro/cnvOnboardingPilotIntro.tpl.html", []).run(["$templateCache", function(a) {
        a.put("onboarding/cnvOnboardingPilotIntro/cnvOnboardingPilotIntro.tpl.html", '<div class="cnv-pilot-intro-wrapper">\n	<div class="pilot-logo">\n		<i class="cnv-icons-100 Convo_pilot-01"></i>\n\n	</div>\n	<div class="welcome-text">\n		<span>Welcome to Convo!</span>\n		<span>I have a few helpful tips to get you started.</span>\n	</div>\n	<div class="bottom-text">\n		<span>Starting in {{::countdownTimerStart}} seconds...</span>\n		<span><a href="javascript:void(0)" ng-click="completeIntroStep(true)">Skip</a> if you have already used Convo before.</span>\n	</div>\n</div>')
    }
    ]),
    b.module("onboarding/templates/cnvDemoPost.tpl.html", []).run(["$templateCache", function(a) {
        a.put("onboarding/templates/cnvDemoPost.tpl.html", '<div class="demoPost" bindonce>\n    <div class="demopost-overlay">\n        <!-- <div class="overlay"></div> -->\n\n        <!-- <div class="box-help" ng-show="showTooltip">\n        	<div class="right-aero"></div>\n        	By default, all your teammates will follow you.<br />\n        	Teammates can customize who they follow in the team directory.\n        </div> -->\n        <div class="box">\n        	<div class="heading">Share this example post with your team <button type="button" class="close pull-right" ng-click="close()">×</button></div>\n            <div class="subHeading">Just for fun, we\'ve attached a random GIF</div>\n        	<!-- <span class="grey">To</span> <span class="sharingOptions" ng-mouseover=\'enableTooltip()\' ng-mouseleave="disableTooltip()">My Followers</span> -->\n\n        	<div class="content" >\n             \n                <div class="left">\n                    <cnv-user-profile-image user-id="user.user_id" size="48" width="40" height="40"\n                                    profileType="user.profile_image_type"\n                                    profileVersion="user.profile_image_version"></cnv-user-profile-image>\n                </div>\n                <div class="right">\n                    <div>\n                        <a>{{::user.name}}</a>\n                    </div>\n                    <!-- <div ng-bind-html="postBody"></div>   -->\n                    <cnv-comment-editor></cnv-comment-editor>\n                    <div class="gifHolder">\n                        <!-- <button class="btn btn-primary btn-gif-selector" ng-hide="showGifContainer" ng-click="whichGifBtnClicked()">Which gif will you get?</button> -->\n                        <!-- <div ng-show="showGifContainer" class="showGifContainer"> -->\n                        <div class="showGifContainer">\n                            <div class="gifsContainer">\n                                <div class="gifsReal">\n                                    <div data-ng-repeat="gif in gifs" style="float: left"><div class="gifHolder" id="gifHolder{{::gif.id}}"><img  ng-src="{{::gif.url}}" id="{{::gif.id}}" bo-if="gif.bareId == selectedGif || gif.bareId == selectedGif+1"/></div>\n                                    <div class="gifHolder fakeGifHolder_blue"></div>\n                                    <div class="gifHolder fakeGifHolder_pink"></div>\n                                    <div class="gifHolder fakeGifHolder_orange"></div>\n                                    <div class="gifHolder fakeGifHolder_green"></div>\n                                    <div class="gifHolder fakeGifHolder_yellow"></div>\n                                    <div class="clear"></div>\n                                    </div>\n                                    <div class="clear"></div>\n                                </div>\n                            </div>\n                            <div class="textContainer" >\n                                <div style="display: table-cell; vertical-align: middle;">\n                                    <div ng-show="selectingGif" class="generating">Generating...</div>\n                                    <div ng-show="!selectingGif" class="dontlike">\n                                    <!-- <div ng-show="defaultSelectedGif">We\'ve chosen a random GIF for your welcome post.</div> -->\n                                    Don\'t like this?<br />\n                                    <a ng-click="selectRandomGif()" class="tryagain">Try another!</a>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class="clear"></div>\n                        </div>\n                    </div>  \n                </div>\n\n                <div class="clear"></div>\n                   \n            </div>\n\n        	<button class="btn pull-right btn-primary btn-share width190" ng-class="{\'disabled\':allowSharing==false}" ng-click="share()">{{shareBtnText}}</button>\n        </div>\n\n    </div>\n    <div class="ng-hide" >\n        <input name=\'file\' id="onboarding_sharing" type=\'file\'></input>\n    </div>\n</div>');
    }
    ]),
    b.module("onboarding/templates/cnvHomeOnboarding.tpl.html", []).run(["$templateCache", function(a) {
        a.put("onboarding/templates/cnvHomeOnboarding.tpl.html", '<div class="home-onboarding">\n	<div class="home-dim-overlay">\n		<div class="primary-message">\n			<div class="title">Welcome to Convo! <br /> A few tips to get you started.</div>\n			<div class="action"><button class="btn btn-primary width225" ng-click="continue()">Ok! What\'s next?</button></div>\n		</div>\n	</div>\n</div>\n')
    }
    ]),
    b.module("onboarding/templates/cnvOnBoardingManager.tpl.html", []).run(["$templateCache", function(a) {
        a.put("onboarding/templates/cnvOnBoardingManager.tpl.html", '<div>\n	<div id="cnvOnBoardingClonedDocument"></div>\n	<div id="cnvOnBoardingManager"></div>\n	<img ng-src="{{firstGifURL}}" class="ng-hide" />\n</div>')
    }
    ]),
    b.module("onboarding/templates/cnvOnboardingAddCommentTooltip.tpl.html", []).run(["$templateCache", function(a) {
        a.put("onboarding/templates/cnvOnboardingAddCommentTooltip.tpl.html", '<div class="cnv-onboarding-add-comment-tooltip">\n	<span>Type something here</span>\n	<div class="right-arrow"></div>\n</div>')
    }
    ]),
    b.module("onboarding/templates/cnvOnboardingAnnotationAddCommentTooltip.tpl.html", []).run(["$templateCache", function(a) {
        a.put("onboarding/templates/cnvOnboardingAnnotationAddCommentTooltip.tpl.html", '<div class="cnv-onboarding-add-comment-tooltip annotation">\n	<span>Type "got it" to finish your reply</span>\n	<div class="right-arrow"></div>\n</div>')
    }
    ]),
    b.module("onboarding/templates/cnvOnboardingDismissBanner.tpl.html", []).run(["$templateCache", function(a) {
        a.put("onboarding/templates/cnvOnboardingDismissBanner.tpl.html", '<div class="onboarding-dismiss-banner">\n	You can always skip onboarding. <a href="javascript:void(0)" ng-click="onDismissOnboardingClick()">Click here</a> to return to your Feed.\n</div>')
    }
    ]),
    b.module("onboarding/templates/cnvOnboardingPermissionsTooltip.tpl.html", []).run(["$templateCache", function(a) {
        a.put("onboarding/templates/cnvOnboardingPermissionsTooltip.tpl.html", '<div class="onboardingToolTips post-permissions-tooltip left-top animate-left-right" style="position: absolute;top: -26px;right: 32px;">\n    <div class="blue-content">\n        <b>Introducing Post Permissions!</b>\n        <br>\n        Set up permissions for your posts to restrict\n        <br>\n        people from editing or commenting.\n    </div>\n\n    <div class="paddingTop20 center">\n        <span class="btn btn-primary width190" ng-click="dismissPermissionsTooltip()">Got it!</span>\n    </div>\n</div>\n')
    }
    ]),
    b.module("onboarding/templates/cnvOnboardingTooltips.tpl.html", []).run(["$templateCache", function(a) {
        a.put("onboarding/templates/cnvOnboardingTooltips.tpl.html", '<div>\n	<input type="file" id="profileImageUpload_onboarding" name="profileImageUpload" style="width: 1px; height: 1px; display: block; position: absolute; z-index: 19999; top: -1000px; left: -1000px;" />\n	\n</div>')
    }
    ]),
    b.module("premiumUpgrade/chargify/cnvChargify.tpl.html", []).run(["$templateCache", function(a) {
        a.put("premiumUpgrade/chargify/cnvChargify.tpl.html", '<div class="cnv-chargify">\n    <div class="parent" ng-if="waiting">\n        <div class="child">\n            <div class="cnv-spinner light spinner"></div>\n        </div>\n    </div>\n    <div class="scroll-wrapper">\n        <iframe class="iframe" ng-show="!waiting" scrolling="yes">\n            Your browser doesn\'t support iframes. Please contact support@convo.com for more information.\n        </iframe>\n    </div>\n</div>')
    }
    ]),
    b.module("premiumUpgrade/cnvPremiumUpgrade.tpl.html", []).run(["$templateCache", function(a) {
        a.put("premiumUpgrade/cnvPremiumUpgrade.tpl.html", '<div class="cnv-premium-upgrade-inner" ng-class="{\'overflow-hidden\': cnvPremiumUpgrade.state.CHARGIFY || cnvPremiumUpgrade.state.REACTIVATE }" >\n	<div class="pricing-header app-header" ng-class="{\'chargify\': cnvPremiumUpgrade.state.CHARGIFY || cnvPremiumUpgrade.state.REACTIVATE }">\n		<div class="row">\n			<div class="col-xs-4">\n				<cnv-logo-with-feed-dirty-indicator></cnv-logo-with-feed-dirty-indicator>\n				<div class="clear"></div>\n			</div>\n			<div class="col-xs-16">\n				<div class="semi-bold">\n					<div ng-show="cnvPremiumUpgrade.state.FETCHING">\n\n					</div>\n					<div ng-show="cnvPremiumUpgrade.state.PLAN">\n						<div class="plan-change" ng-show="cnvPremiumUpgrade.state.PLAN">\n							Your team is on the <span class="plan">{{cnvPremiumUpgrade.currentAccountLevel.ALIAS}}</span>\n							<div class="upgrade">Upgrade to one of the plans below that\'s right for your team.</div>\n						</div>\n					</div>\n					<div class="checkout-header-text" ng-show="cnvPremiumUpgrade.state.CHECKOUT">\n						Checkout\n					</div>\n					<div class="chargify-header-text" ng-show="cnvPremiumUpgrade.state.CHARGIFY">\n						Review your billing plan\n					</div>\n					<div class="chargify-header-text" ng-show="cnvPremiumUpgrade.state.REACTIVATE">\n						Update your billing information to proceed\n					</div>\n				</div>\n			</div>\n			<div class="col-xs-4">\n				<div class="close-box" ng-click="goBack()">\n					<img src="assets/img/pricing/cross@2x.png" alt="Close">\n					<span ng-show="cnvPremiumUpgrade.state.PLAN || cnvPremiumUpgrade.state.CHECKOUT">Maybe later</span>\n				</div>\n				<div class="clear"></div>\n			</div>\n		</div>\n	</div>\n	<div class="wrapper" ng-show="cnvPremiumUpgrade.state.FETCHING || cnvPremiumUpgrade.state.PLAN  || cnvPremiumUpgrade.state.CHECKOUT || cnvPremiumUpgrade.state.ERROR">\n		<div class="pricing-view gradient">\n			<div ng-show="cnvPremiumUpgrade.state.FETCHING || cnvPremiumUpgrade.state.PLAN  || cnvPremiumUpgrade.state.CHECKOUT" class="container">\n				<div id="upgrade-spinner" ng-show="cnvPremiumUpgrade.state.FETCHING" class="cnv-spinner light spinner"></div>\n				<div class="pricing-models" ng-show="cnvPremiumUpgrade.state.PLAN">\n					<div class="row">\n						<div class="col-md-8 col-sm-8 extend-padding">\n							<div class="btn-href">\n								<div class="basic">\n									<h3>{{::cnvPremiumUpgrade.plans.STARTER.title | uppercase}}</h3>\n\n									<h2>Free</h2>\n\n									<button ng-if="cnvPremiumUpgrade.currentAccountLevel.STARTER" class="btn btn-default" disabled>Your Plan</button>\n									<div class="text">\n										1-{{::cnvPremiumUpgrade.plans.STARTER.users}} Users<br>{{::cnvPremiumUpgrade.plans.STARTER.integrations}} Integrations<br>{{::cnvPremiumUpgrade.plans.STARTER.groups}}\n										Groups\n									</div>\n								</div>\n							</div>\n						</div>\n						<div class="col-md-10 col-sm-10">\n							<div class="btn-href">\n								<div class="star">\n									<img src="assets/img/pricing/star.png" alt="Convo Star"/><span>MOST POPULAR!</span>\n								</div>\n								<div class="pro">\n									<h3>{{::cnvPremiumUpgrade.plans.PREMIUM.title | uppercase}}</h3>\n\n									<h2>${{::cnvPremiumUpgrade.plans.PREMIUM.perUserPerMonthCharge}}</h2>\n\n									<div class="user">per user / per month</div>\n									<button ng-if="cnvPremiumUpgrade.currentAccountLevel.STARTER" class="btn btn-danger" ng-click="changeView(\'CHECKOUT\')">Buy Now</button>\n									<button ng-if="cnvPremiumUpgrade.currentAccountLevel.PREMIUM" class="btn btn-default" disabled>Your Plan</button>\n									<div class="text">\n										{{cnvPremiumUpgrade.plans.STARTER.users + 1}}+ Users<br><span>{{::cnvPremiumUpgrade.plans.PREMIUM.integrations}}</span> Integrations<br><span>{{::cnvPremiumUpgrade.plans.PREMIUM.groups}}</span>\n										Groups\n										<div>\n											<div ng-repeat="data in ::cnvPremiumUpgrade.plans.PREMIUM.features">\n												+ {{data}}<br ng-if="!$last">\n											</div>\n										</div>\n									</div>\n								</div>\n							</div>\n						</div>\n						<div class="col-md-8 col-sm-8 extend-padding">\n							<div class="btn-href">\n								<div class="enterprise">\n									<h3>{{::cnvPremiumUpgrade.plans.ENTERPRISE.title | uppercase}}</h3>\n\n									<h2>Custom</h2>\n\n									<div class="user">pricing</div>\n									<button ng-if="!cnvPremiumUpgrade.currentAccountLevel.ENTERPRISE" class="btn btn-danger" ng-click="openContactSalesModal()">\n										Contact Us\n									</button>\n									<button ng-if="cnvPremiumUpgrade.currentAccountLevel.ENTERPRISE" class="btn btn-default" disabled>Your Plan</button>\n									<div class="text">\n										<span>{{::cnvPremiumUpgrade.plans.ENTERPRISE.users}}</span> Users<br><span>{{::cnvPremiumUpgrade.plans.ENTERPRISE.integrations}}</span>\n										Integrations<br><span>{{::cnvPremiumUpgrade.plans.ENTERPRISE.groups}}</span> Groups\n										<div>\n											<div ng-repeat="data in ::cnvPremiumUpgrade.plans.ENTERPRISE.features">\n												+ {{data}}<br ng-if="!$last">\n											</div>\n										</div>\n									</div>\n								</div>\n							</div>\n						</div>\n					</div>\n				</div>\n				<div class="start-checkout" ng-show="cnvPremiumUpgrade.state.CHECKOUT">\n					<div class="row">\n						<div class="col-xs-24">\n							<div class="chosen-plan-name">You chose the <span>Pro plan</span></div>\n						</div>\n					</div>\n					<div class="row">\n						<div class="col-xs-24">\n							<div class="styled-select">\n								<select ng-model="cnvPremiumUpgrade.statesData.CHECKOUT.dropdown" ng-change="selectedItemChanged()">\n									<option value="pro">Pro Plan</option>\n									<option value="enterprise">Enterprise Plan - Contact us!</option>\n								</select>\n							</div>\n							<div class="terms"><a target="_blank" ng-href="{{::cnvPremiumUpgrade.statesData.CHECKOUT.terms}}">Learn more about billing.</a></div>\n						</div>\n					</div>\n					<div class="row">\n						<div class="col-xs-24">\n							<div class="billing-period" ng-init="subscription = \'monthly\'">\n								<div>Choose how frequently you want to be billed</div>\n								<!--<div class="annual">\n									<div class="radio">\n										<label ng-class="{\'active\': subscription == \'annual\'}">\n											<input ng-model="subscription" type="radio" name="optionsRadios"\n											       value="annual">\n                                                    <span>\n                                                        Annual Billing - get 2 months free!\n                                                        <br>\n                                                        <span class="normal">\n                                                            $90 per user for 1 year\n                                                        </span>\n                                                    </span>\n                                                    <span class="cost">\n                                                        $7.50\n                                                        <span>\n                                                            per user/month\n                                                        </span>\n                                                    </span>\n											<span class="clear"></span>\n										</label>\n									</div>\n								</div>-->\n								<div class="monthly">\n									<div class="radio">\n										<label ng-class="{\'active\': subscription == \'monthly\'}">\n													<input ng-model="subscription" type="radio" name="optionsRadios"\n											       value="monthly">\n                                                    <span class="billing-h1">\n                                                        Monthly Billing\n                                                        <!--<br>\n                                                        <span class="normal">\n                                                            ${{cnvPremiumUpgrade.plans.PREMIUM.perUserPerMonthCharge * 12}} per user for 1 year\n                                                        </span>-->\n                                                    </span>\n                                                    <span class="cost">\n                                                        ${{::cnvPremiumUpgrade.plans.PREMIUM.perUserPerMonthCharge}}\n                                                        <span>\n                                                            per user/month\n                                                        </span>\n                                                    </span>\n											<span class="clear"></span>\n										</label>\n									</div>\n								</div>\n							</div>\n							<button class="btn btn-danger" ng-click="changeView(\'CHARGIFY\')">\n								Add a Payment Option\n							</button>\n						</div>\n					</div>\n				</div>\n				<!--<div class="reactivate" ng-show="cnvPremiumUpgrade.state.REACTIVATE">\n					<h1>Reactivate premium features</h1>\n					<h3>Please provide your credit card information with reactivation</h3>\n					<div class="updateCreditInfo">\n						<a ng-href="{{::cnvPremiumUpgrade.statesData.REACTIVATE.updateCreditCardInformationUrl}}">Set payment information</a>\n					</div>\n					<button class="btn btn-primary" ng-click="reactivatePremiumFeatures()">\n						Reactivate premium features\n					</button>\n				</div>-->\n			</div>\n			<div ng-show="cnvPremiumUpgrade.state.ERROR" class="container">\n				<div class="error" ng-bind-html="cnvPremiumUpgrade.statesData.ERROR.value"></div>\n			</div>\n		</div>\n	</div>\n    <!-- Chargify -->\n    <cnv-chargify ng-if="!cnvPremiumUpgrade.state.ERROR" ng-show="cnvPremiumUpgrade.state.CHARGIFY || cnvPremiumUpgrade.state.REACTIVATE"></cnv-chargify>\n    <!-- Chargify -->\n</div>')
    }
    ]),
    b.module("premiumUpgrade/contactSalesModal/contactSalesModal.tpl.html", []).run(["$templateCache", function(a) {
        a.put("premiumUpgrade/contactSalesModal/contactSalesModal.tpl.html", '<div id="contact-sales-container" class="anchor-contact-sales-submit" >\n		<!--<div class="container">\n			<div class="row top-row">\n				<div class="col-xs-24">\n					<div class="contact-form">\n						Contact form\n					</div>\n					<button type="button" class="close" ng-click="dismissModal()">×</button>\n					&lt;!&ndash;<div class="close-btn" ng-click="dismissModal()">\n						<img src="assets/img/contact-sales/close.png" alt="close">\n					</div>&ndash;&gt;\n					<div class="clear"></div>\n				</div>\n			</div>\n		</div>-->\n		<div class="modal-header">\n			<h4>Contact Us</h4>\n			<button type="button" class="close" ng-click="dismissModal()">×</button>\n		</div>\n		<form ng-show="!ContactSalesModalCtrl.stateSuccessfullySubmitted" name="userForm" ng-submit="submitForm(userForm.$valid)" novalidate> <!-- novalidate prevents HTML5 validation since we will be validating ourselves -->\n			<div class="container override-container">\n				<div class="row">\n					<div class="col-sm-12">\n						<div class="cs-first">\n							<div class="cs-text-style">JOB TITLE</div>\n							<input ng-class="{\'cs-error-text\': userForm.job.$invalid && submitted }" class="cstitle" name="job" type="text"  ng-maxlength="255" ng-model="ContactSalesModalCtrl.user.jobTitle" required >\n							<div ng-show="userForm.job.$invalid && submitted" class="cs-error"><sup>*</sup>Please enter job title</div>\n						</div>\n					</div>\n					<div class="col-sm-12">\n						<div  class="cs-second">\n							<div class="cs-text-style">COMPANY SIZE</div>\n							<div class="styled-select cs-company-size" ng-class="{\'cs-error-text\': userForm.company.$invalid && submitted}">\n								<select name="company" ng-model="ContactSalesModalCtrl.user.companySize" required>\n									<option value="">Please select one</option>\n									<option value="Under 50 employees">Under 50 employees</option>\n									<option value="51-200">51-200</option>\n									<option value="201-500">201-500</option>\n									<option value="501-1000">501-1000</option>\n									<option value="1001-5000">1001-5000</option>\n									<option value="Over 5000">Over 5000</option>\n								</select>\n							</div>\n							<div ng-show="submitted && userForm.company.$invalid" class="cs-error"><sup>*</sup>Please select company size</div>\n						</div>\n					</div>\n				</div>\n				<div class="row">\n					<div class="col-xs-24">\n						<div class="cs-text-style" style="margin-top: 10px;">HOW CAN WE HELP ?</div>\n						<div class="styled-select cs-contact-type">\n							<select name="inquiry" ng-model="ContactSalesModalCtrl.user.inquiry">\n								<option value="Inquire about Enterprise pricing">Inquire about Enterprise pricing</option>\n								<option value="Discuss payment options">Discuss payment options</option>\n								<option value="Request a demo">Request a demo</option>\n								<option value="Other (please describe below)">Other (please describe below)</option>\n							</select>\n						</div>\n\n						<div class="cs-text-style">MESSAGE</div>\n						<textarea ng-model="ContactSalesModalCtrl.user.comments" class="text-area message" name="message" data-resizable="true"  placeholder="Hello, I have some questions about your product" ng-maxlength="2000"></textarea>\n						<div id="responseDiv" class="contact-sales-status" ng-bind="ContactSalesModalCtrl.currentStatus"></div>\n						<button type="submit" class="contact-send btn btn-primary contact-send">\n							Send message\n						</button>\n						<div class="clearfix"></div>\n					</div>\n				</div>\n			</div>\n		</form>\n		<div ng-show="ContactSalesModalCtrl.stateSuccessfullySubmitted" class="success-state">\n			<div class="container override-container">\n				<div class="row">\n					<div class="col-sm-24 success">\n						<div>Thanks for reaching out!<div>We\'ll get in touch very soon.</div></div>\n						<button class="btn btn-primary" ng-click="dismissModal()">Got it</button>\n					</div>\n				</div>\n			</div>\n		</div>\n</div>')
    }
    ]),
    b.module("premiumUpgrade/premiumUpgradeBtn/cnvPremiumUpgradeBtn.tpl.html", []).run(["$templateCache", function(a) {
        a.put("premiumUpgrade/premiumUpgradeBtn/cnvPremiumUpgradeBtn.tpl.html", '<div bindonce ng-if="cnvPremiumUpgradeBtn.loadDirective" class="cnv-premium-upgrade-btn">\n	<span class="onboarding-upgrade-to-premium-tooltip" ng-click="openToolTipOrGoToPremiumUpgrade();">\n		<img src="assets/img/pricing/crown@2x.png" alt="Close">\n		<span class="premium-upgrade-title" bo-bind="cnvPremiumUpgradeBtn.label"></span>\n	</span>\n</div>')
    }
    ]),
    b.module("search/cnvAdvancedSearch/cnvAdvancedSearch.tpl.html", []).run(["$templateCache", function(a) {
        a.put("search/cnvAdvancedSearch/cnvAdvancedSearch.tpl.html", '<div class="row cnv-advanced-search" bindonce>\n	<!-- to float over feed the div below will be fixed -->\n	<div class="bar-wrapper-fixed">\n		<div class="bar-wrapper">\n			<i class="cnv-icons-10 icons2_Close-lightgray bar-close-ico" ng-click="toggleBar()"></i>\n			<div class="col-xs-4 col-xs-offset-2 from" ng-click="openFilterDropdown($event, \'from\')">\n				<span ng-bind="\'From: \' + getFullName(filters.from[0].value)" class="col-heading"></span>\n				<i class="cnv-icons-15 icons2_Dropdown-lightgray normal" style="top: -14px;"></i>\n				<i class="cnv-icons-15 icons2_Dropdown-darkgray hover" style="top: -14px;"></i>\n				<div class="from-filter-dropdown filter-dropdown" bo-show="activeFilterDropdown === \'from\'">\n					<i class="cnv-icons-10 icons2_Close-lightgray" ng-click="closeFilterDropdown($event)"></i>\n					<div>Include:</div>\n					<div class="to-field-cont" ng-class="{\'hide-placeholder\': fromUsers.length > 0}">\n			            <tags-input ng-model="fromUsers"\n			                        add-on-comma="false"\n			                        add-on-blur="true"\n			                        horizontal-flow = "false"\n			                        placeholder = "Search for people"\n			                        on-tag-added="onItemAddedInFromField($tag)"\n			                        on-tag-removed="onItemRemovedFromField($tag)"\n			                        add-from-autocomplete-only="true"\n			                        display-property="label"\n			                        allowed-tags-pattern="^[+a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$"\n			                        replace-spaces-with-dashes="false">\n			                <auto-complete\n			                        source="getAutoCompleteUserItemsForFrom($query, numSelected)"\n			                        load-history-on-focus="true"\n			                        delimiter="@"\n			                        min-length="1"\n			                        auto-select-first-suggestion="true"\n			                        suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html">\n			                </auto-complete>\n			            </tags-input>\n			        </div>\n				</div>\n			</div>\n			<div class="col-xs-4 to" ng-click="openFilterDropdown($event, \'to\')">\n				<span ng-bind="\'To: \' + getFullName(filters.to[0].value)" ng-blur="openFilterDropdown(null, null);" class="col-heading"></span>\n				<i class="cnv-icons-15 icons2_Dropdown-lightgray normal" style="top: -14px;"></i>\n				<i class="cnv-icons-15 icons2_Dropdown-darkgray hover" style="top: -14px;"></i>\n				<div class="to-filter-dropdown filter-dropdown" bo-show="activeFilterDropdown === \'to\'">\n					<i class="cnv-icons-10 icons2_Close-lightgray" ng-click="closeFilterDropdown($event)"></i>\n					<div>Include:</div>\n					<div class="to-field-cont" ng-class="{\'hide-placeholder\': t.length > 0}">\n			            <tags-input ng-model="toUsers"\n			                        add-on-comma="false"\n			                        add-on-blur="true"\n			                        horizontal-flow = "false"\n			                        placeholder = "Search for people & groups"\n			                        on-tag-added="onItemAddedInToField($tag)"\n			                        on-tag-removed="onItemRemovedToField($tag)"\n			                        add-from-autocomplete-only="true"\n			                        display-property="label"\n			                        allowed-tags-pattern="^[+a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$"\n			                        replace-spaces-with-dashes="false">\n			                <auto-complete\n			                        source="getAutoCompleteUserItemsForTo($query, numSelected)"\n			                        load-history-on-focus="true"\n			                        delimiter="@"\n			                        min-length="1"\n			                        auto-select-first-suggestion="true"\n			                        suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html">\n			                </auto-complete>\n			            </tags-input>\n			        </div>\n				</div>\n			</div>\n			<div class="col-xs-4 posts" ng-click="openFilterDropdown($event, \'posts_type\')">\n				<span bo-bind="getPostFilterTitle()" class="col-heading"></span>\n				<i class="cnv-icons-15 icons2_Dropdown-lightgray normal" style="top: -14px;"></i>\n				<i class="cnv-icons-15 icons2_Dropdown-darkgray hover" style="top: -14px;"></i>\n				<div class="post-filter-dropdown filter-dropdown" bo-show="activeFilterDropdown === \'posts_type\'">\n					<i class="cnv-icons-10 icons2_Close-lightgray" ng-click="closeFilterDropdown($event)"></i>\n					<ul>\n						<li ng-click="applyPostFilter($event, \'all_posts\')"><i class="cnv-icons-check-blue" bo-if="filters.has.length === 0 && filters.is.length === 0 && filters.discussions.length === 0"></i>All posts</li>\n						<li ng-click="applyPostFilter($event, \'link\')"><i class="cnv-icons-check-blue" bo-if="filters.is[0].description === \'link\'"></i>Links</li>\n						<li ng-click="applyPostFilter($event, \'comments\')"><i class="cnv-icons-check-blue" bo-if="filters.discussions.length > 0"></i>Comments</li>\n						<li ng-click="applyPostFilter($event, \'chat\')"><i class="cnv-icons-check-blue" bo-if="filters.is[0].description === \'chat\'"></i>Chats</li>\n						<hr />\n						<li ng-click="applyPostFilter($event, \'Files\')"><i class="cnv-icons-check-blue" bo-if="filters.has[0].description === \'Files\'"></i>Has attachments</li>\n						<li ng-click="applyPostFilter($event, \'Images\')"><i class="cnv-icons-check-blue" bo-if="filters.has[0].description === \'Images\'"></i>Images</li>\n						<li ng-click="applyPostFilter($event, \'Videos\')"><i class="cnv-icons-check-blue" bo-if="filters.has[0].description === \'Videos\'"></i>Videos</li>\n						<li ng-click="applyPostFilter($event, \'pdf\')"><i class="cnv-icons-check-blue" bo-if="filters.has[0].description === \'pdf\'"></i>PDFs</li>\n						<li ng-click="applyPostFilter($event, \'docx,doc\')"><i class="cnv-icons-check-blue" bo-if="filters.has[0].description === \'docx,doc\'"></i>Documents</li>\n						<li ng-click="applyPostFilter($event, \'pptx,ppt\')"><i class="cnv-icons-check-blue" bo-if="filters.has[0].description === \'pptx,ppt\'"></i>Presentations</li>\n						<li ng-click="applyPostFilter($event, \'xlsx,xls\')"><i class="cnv-icons-check-blue" bo-if="filters.has[0].description === \'xlsx,xls\'"></i>Spreadsheets</li>\n					</ul>\n				</div>\n			</div>\n			<div class="col-xs-4 date" datepicker-popup="{{dateOptions.formats[0]}}" ng-model="dateOptions.model" is-open="opened" datepicker-options="dateOptions" show-button-bar="false" show-weeks="false" close-text="Close" datepicker-popup-template-url="search/cnvAdvancedSearch/datepickerPopup.tpl.html" ng-click="open($event);">\n				<span bo-bind="dateOptions.model ? (\'On or Before: \' + (dateOptions.model | date : \'MM/dd/yyyy\' | limitTo: 30)) : \'Any Time\'" class="col-heading"></span>\n				<i class="cnv-icons-15 icons2_Dropdown-lightgray normal" style="top: -14px;"></i>\n				<i class="cnv-icons-15 icons2_Dropdown-darkgray hover" style="top: -14px;"></i>\n			</div>\n			<div class="col-xs-4 more-options" ng-click="openFilterDropdown($event, \'more_options\')">\n				<span class="col-heading">More options</span>\n				<i class="cnv-icons-15 icons2_Dropdown-lightgray normal" style="top: -14px;"></i>\n				<i class="cnv-icons-15 icons2_Dropdown-darkgray hover" style="top: -14px;"></i>\n				<div class="more-options-dropdown filter-dropdown" bo-show="activeFilterDropdown === \'more_options\'">\n					<i class="cnv-icons-10 icons2_Close-lightgray" ng-click="closeFilterDropdown($event)"></i>\n					<ul>\n						<li ng-click="applyMoreOptions($event, \'includeChats\')" ng-class="{\'bold\': moreOptions.includeChats}">\n							<input type="checkbox" class="cnv-checkbox" id="moreChats" ng-model="moreOptions.includeChats" ng-click="applyMoreOptions($event, \'includeChats\', true);" /><label for="moreChats" ng-click="applyMoreOptions($event, \'includeChats\', true);"></label>Include chats</li>\n						<!-- <li ng-click="applyMoreOptions($event, \'includeDrafts\')" bo-class="{\'bold\': moreOptions.includeDrafts}"><input type="checkbox" ng-model="moreOptions.includeDrafts" />Posts in Drafts</li> -->\n					</ul>\n				</div>\n			</div>\n		</div>\n	</div>\n</div>')
    }
    ]),
    b.module("search/cnvAdvancedSearch/datepickerPopup.tpl.html", []).run(["$templateCache", function(a) {
        a.put("search/cnvAdvancedSearch/datepickerPopup.tpl.html", '<ul class="dropdown-menu custom" ng-if="isOpen" style="display: block" ng-style="{top: position.top+\'px\', left: position.left+\'px\'}" ng-keydown="keydown($event)" ng-click="$event.stopPropagation()">\n	<i class="cnv-icons-10 icons2_Close-lightgray" ng-click="close()"></i>\n	<li ng-transclude></li>\n	<li ng-if="showButtonBar" style="padding:10px 9px 2px">\n		<span class="btn-group pull-left">\n		<button type="button" class="btn btn-sm btn-info" ng-click="select(\'today\')">{{ getText(\'current\') }}</button>\n		<button type="button" class="btn btn-sm btn-danger" ng-click="select(null)">{{ getText(\'clear\') }}</button>\n		</span>\n		<button type="button" class="btn btn-sm btn-success pull-right" ng-click="close()">{{ getText(\'close\') }}</button>\n	</li>\n</ul>')
    }
    ]),
    b.module("search/cnvFeedSearchBar/cnvFeedSearchBar.tpl.html", []).run(["$templateCache", function(a) {
        a.put("search/cnvFeedSearchBar/cnvFeedSearchBar.tpl.html", "")
    }
    ]),
    b.module("settings/hiddenGroupsAndTeammatesModal/cnvHiddenGroupsAndTeammatesModal.tpl.html", []).run(["$templateCache", function(a) {
        a.put("settings/hiddenGroupsAndTeammatesModal/cnvHiddenGroupsAndTeammatesModal.tpl.html", '<div bindonce>\n    <div class="modal-header">\n        <h4 bo-bind="title"></h4>\n        <button type="button" class="close" ng-click="cancel()">×</button>\n    </div>\n    <div class="modal-body">\n\n        <div style="margin-top: 10px;">\n            <!--Group View-->\n\n                <input bo-show="hiddenGroups.length > 10 || isFilteredView" type="text" placeholder="Search for groups"\n                       class="searchGroupInput"/>\n                <perfect-scrollbar class="scrollable" bo-class="{withSearchBarHeight:hiddenGroups.length > 10}" wheel-propagation="false" wheel-speed="50">\n                    <div bo-show="!isFilteredView" ng-repeat="group in hiddenGroups"\n                         style="padding:15px 15px 0px 15px;">\n                        <i style="vertical-align: middle;" class="cnv-icons-30" bo-class="group.classes"></i>\n\n                        <div bo-bind="group.formattedlabel" style="  display: inline-block;margin-left: 10px;"></div>\n                        <button style="float: right;margin-right: 15px;" type="button"\n                                bo-click="UnhideFromFeed(group.id)"\n                                class="btn btn-default">\n                            Unhide\n                        </button>\n                        <hr/>\n                    </div>\n                    <div bo-show="isFilteredView" ng-repeat="group in filteredList" style="padding:15px 15px 0px 15px;">\n                        <i style="vertical-align: middle;" class="cnv-icons-30" bo-class="group.classes"></i>\n\n                        <div bo-bind="group.formattedlabel" style="  display: inline-block;margin-left: 10px;"></div>\n                        <button style="float: right;margin-right: 15px;" type="button"\n                                bo-click="UnhideFromFeed(group.id)"\n                                class="btn btn-default">\n                            Unhide\n                        </button>\n                        <hr/>\n                    </div>\n                </perfect-scrollbar>\n\n                <div bo-if="!hiddenGroups.length" style="margin-left: 20px">\n                    <div style="margin-top: 20px;">\n                        No hidden groups.\n                    </div>\n                </div>\n        </div>\n    </div>\n</div>')
    }
    ]),
    b.module("settings/templates/accountSettingsView.tpl.html", []).run(["$templateCache", function(a) {
        a.put("settings/templates/accountSettingsView.tpl.html", '<div cnv-my-acc-settings bindonce>\n    <div style="padding-left: 120px">\n        <div class="header">My account</div>\n\n        <div style="margin-top: 20px;"></div>\n        <div class="subHeader">\n            CHANGE LOGIN EMAIL\n        </div>\n        <hr/>\n        <div style="margin-top: 20px;">\n            Your current login email: {{user_info.email}}\n            <div style="margin-top: 20px;"></div>\n            <div>\n                <div style="  display: inline-block;width: 120px;">\n                    New login email\n                </div>\n                <input id="newEmail" type="text" ng-disabled="settings.sso_settings.is_sso_optional == 0 && !userInfo.isAdmin() && !userInfo.isGuestUser()" class="settings-custom">\n            </div>\n            <button id="emailBtn" ng-click="changeEmail()" style="margin-left: 144px;margin-top: 20px;"\n                    type="button" class="btn btn-primary disabled">\n                Change email\n            </button>\n        </div>\n        <div style="margin-top: 20px;"></div>\n        <div class="subHeader">\n            CHANGE PASSWORD\n        </div>\n        <hr/>\n        <div style="margin-top: 20px;"></div>\n        <div>\n            <div style="display:inline-block;width: 120px;">\n                Current password\n            </div>\n            <input id="curPass" class="settings-custom" type="password" ng-disabled="settings.sso_settings.is_sso_optional == 0 && !userInfo.isAdmin() && !userInfo.isGuestUser()">\n\n            <div style="display:inline-block;margin-left: 30px;" ng-if="settings.sso_settings.is_sso_optional == 1 || userInfo.isAdmin() || userInfo.isGuestUser()">\n                <a href="/app/forgot_password.php" target="_blank">Forgot your password?</a>\n            </div>\n        </div>\n        <div style="margin-top: 20px;">\n            <div style="display: inline-block; width: 120px;">\n                New password\n            </div>\n            <input id="newPass" class="settings-custom" type="password" ng-disabled="settings.sso_settings.is_sso_optional == 0 && !userInfo.isAdmin() && !userInfo.isGuestUser()">\n        </div>\n\n        <button id="passBtn" style="margin-left: 144px;margin-top: 20px;" ng-click="resetPassword()"\n                type="button"\n                class="btn btn-primary disabled">\n            Change password\n        </button>\n        <div style="margin-top: 20px;"></div>\n        <hr/>\n        <div style="margin-top: 20px;"></div>\n        <a href="javascript:void(0)" bo-click="disableAccount()">Disable my account</a>\n\n        <div style="margin-top: 10px;color: #7b8386;">\n            You will be removed from this network and lose access to all of company discussion. Content shared by\n            you will not be automatically deleted.\n        </div>\n    </div>\n    <div style="margin-top: 60px">\n    </div>\n</div>');
    }
    ]),
    b.module("settings/templates/billingView.tpl.html", []).run(["$templateCache", function(a) {
        a.put("settings/templates/billingView.tpl.html", '<div cnv-settings-billing bindonce class="settings-billing-wrapper">\n  \n  <div class="heading">\n    <h4>Billing</h4>\n  </div>\n\n  <div class="tab-navigation-wrapper">\n    <ul>\n      <li bo-class="{\'active\': currentTab === GENERAL_TAB_VIEW}" ng-click="changeTab(GENERAL_TAB_VIEW)">Overview</li>\n      <li bo-class="{\'active\': currentTab === BILLING_HISTORY_TAB_VIEW}" ng-click="changeTab(BILLING_HISTORY_TAB_VIEW)">History</li>\n      <li bo-class="{\'active\': currentTab === UPDATE_PAYMENT_TAB_VIEW}" ng-click="changeTab(UPDATE_PAYMENT_TAB_VIEW)">Update payment information</li>\n    </ul>\n  </div>\n\n  <div class="tab-view-wrapper">\n    \n    <div class="general-tab" bo-show="currentTab === GENERAL_TAB_VIEW">\n    	<table class="details-table">\n    		<tr>\n    			<td width="250">Subscription Status</td>\n    			<td>{{billingInfo.subscription.state}}</td>\n    		</tr>\n    		<tr>\n    			<td width="250">Balance</td>\n    			<td>${{billingInfo.subscription.balance_in_cents}}</td>\n    		</tr>\n    		<tr>\n    			<td width="250">Subscribed plan</td>\n    			<td>{{billingInfo.subscription.product.name}} (${{billingInfo.per_user_per_month_charge}} per user per month)</td>\n    		</tr>\n    		<tr>\n    			<td width="250">Billing period start</td>\n    			<td>{{billingInfo.subscription.current_period_started_at | date: \'fullDate\'}}</td>\n    		</tr>\n    		<tr>\n    			<td width="250">Billing period end</td>\n    			<td>{{billingInfo.subscription.current_period_ends_at | date: \'fullDate\'}}</td>\n    		</tr>\n    		<tr>\n    			<td width="250">Number of activated users</td>\n    			<td bo-bind="activatedUsersNum"></td>\n    		</tr>\n    	</table>\n        <p ng-if="billingInfo && activatedUsersNum">You will be charged ${{billingInfo.per_user_per_month_charge * activatedUsersNum}} on the next assessment.</p>\n    </div>\n\n    <div class="history-tab" bo-show="currentTab === BILLING_HISTORY_TAB_VIEW">\n        <table class="table table-striped" ng-if="billingHistory">\n            <thead>\n                <tr>\n                    <th>Date</th>\n                    <th>Amount</th>\n                    <th>Balance</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr ng-repeat="bill in billingHistory">\n                    <td>{{::bill.transaction.created_at | date: \'fullDate\' }}</td>\n                    <td>$ {{::bill.transaction.amount_in_cents / 100}}</td>\n                    <td>$ {{::bill.transaction.ending_balance_in_cents / 100}}</td>\n                </tr>\n            </tbody>\n\n        </table>\n        <div>\n            <span class="pull-right"><a ng-if="billingInfo" ng-href="{{config.REST_URL}}billing?method=downloadTransactionsForSubscription&sub_id={{billingInfo.subscription_id}}">Download billing history as csv file</a></span>\n        </div>\n    </div>\n\n    <div class="update-payment-tab" bo-show="currentTab === UPDATE_PAYMENT_TAB_VIEW">\n    	<iframe ng-src="{{trustSrc(updatePaymentUrl.url)}}" width="800" height="1024"></iframe>\n    </div>\n\n  </div>\n\n</div>')
    }
    ]),
    b.module("settings/templates/cnvSettings.tpl.html", []).run(["$templateCache", function(a) {
        a.put("settings/templates/cnvSettings.tpl.html", '<div class="settings-container" bindonce>\n    <div class="leftPanelContainer">\n        <div ng-include="\'settings/templates/settingsLeftPanel.tpl.html\'"></div>\n    </div>\n\n    <div class="view-content">\n        <!-- Advanced Search Panel -->\n        <cnv-advanced-search type="feed"></cnv-advanced-search>\n\n        <div bo-if="selectedView == ACCOUNT_SETTINGS_VIEW">\n            <div ng-include="\'settings/templates/accountSettingsView.tpl.html\'"></div>\n        </div>\n\n        <div bo-if="selectedView == CUSTOMIZE_FEED_VIEW">\n            <div ng-include="\'settings/templates/customizeFeed.tpl.html\'"></div>\n        </div>\n        \n        <div bo-if="selectedView == NOTIFICATION_VIEW">\n            <div ng-include="\'settings/templates/notificationsView.tpl.html\'"></div>\n        </div>\n\n        <div bo-if="selectedView == NETWORK_INFO_VIEW">\n            <div ng-include="\'settings/templates/networkInformationView.tpl.html\'"></div>\n        </div>\n        \n        <div bo-if="selectedView == MANAGE_USERS_VIEW">\n            <div ng-include="\'settings/templates/manageUsersView.tpl.html\'"></div>\n        </div>\n\n        <div bo-if="selectedView == MANAGE_GROUPS_VIEW">\n            <div ng-include="\'settings/templates/manageGroupsView.tpl.html\'"></div>\n        </div>\n\n        <div bo-if="selectedView == BILLING_VIEW">\n            <div ng-include="\'settings/templates/billingView.tpl.html\'"></div>\n        </div>\n\n        <div bo-if="selectedView == MONITOR_CONTENT_VIEW">\n            <div ng-include="\'settings/templates/monitorContentView.tpl.html\'"></div>\n        </div>\n\n        <div bo-if="selectedView == SECURITY_VIEW">\n            <div ng-include="\'settings/templates/securityView.tpl.html\'"></div>\n        </div>\n\n        <div bo-if="selectedView == SSO_SETTINGS_VIEW">\n            <div ng-include="\'settings/templates/singleSignOnSettingsView.tpl.html\'"></div>\n        </div>\n    </div>\n</div>')
    }
    ]),
    b.module("settings/templates/cnvSingleSignOnSettings.tpl.html", []).run(["$templateCache", function(a) {
        a.put("settings/templates/cnvSingleSignOnSettings.tpl.html", '<div class="single-sign-on-settings-view" bindonce>\n    <div bo-if="!isInitialized" class="loading-spinner">\n        <img src="assets/img/feed/loading-spin.svg" alt="Loading icon"/>\n    </div>\n\n    <div bo-if="isInitialized">\n        <div class="header">Single Sign-On (SSO) Authentication via SAML 2.0</div>\n        <div class="meta-txt">\n            <p style="margin-bottom: 20px;">\n                As an administrator, you can enable and configure single sign-on (SSO) authentication for your team on Convo. This allows users to access their Convo account by signing in to a central identity provider without requiring a separate password. Their passwords can remain within your organization\'s Identity Provider (IdP). SSO authentication is not applicable on guest users.\n            </p>\n            <p style="margin-bottom: 14px;">\n                For more information, follow your identity provider\'s instructions to properly configure these settings.\n            </p>\n        </div>\n\n        <div class="form-group">\n            <span class="normal_lineHeight">Enable SSO</span>\n\n            <div class="setting-controls">\n                <div class="radioBtnBar">\n                    <input id="enable_sso" type="radio" class="cnv-radioButton" ng-click="updateSSO_settingOptions($event)">\n                    <label for="enable_sso" style="margin-left: 20px;">Yes</label>\n                    <input id="disable_sso" type="radio" class="cnv-radioButton"\n                       ng-click="updateSSO_settingOptions($event)">\n                    <label for="disable_sso" style="margin-left: 40px;">No</label>\n                </div>\n            </div>\n            \n        </div>\n\n        <div class="form-group">\n            <span class="multi-line">Choose whether SSO is optional or required</span>\n\n            <div class="setting-controls">\n                <div class="sso_type" bo-click="toggleSSOType(1)">\n                    <div bo-class="{selected: ssoSettings.is_sso_optional == 1, disabled: ssoSettings.is_sso_optional == 0}">\n                        <div>Optional</div>\n                        <span class="meta-txt">Users will be able to sign in with either their Convo or SSO credentials.</span>\n                    </div>\n                </div>\n                <div class="sso_type" bo-click="toggleSSOType(0)">\n                    <div bo-class="{selected: ssoSettings.is_sso_optional == 0, disabled: ssoSettings.is_sso_optional == 1}">\n                        <div>Required</div>\n                        <span class="meta-txt">Users will be required to sign in with their SSO credentials. Only admins can sign in with a Convo password.</span>\n                    </div>\n                </div>\n                <div class="dim-text">\n                    <span>Note: SSO authentication does not apply to guests. They will be able to sign in with their Convo password.</span>\n                </div>\n            </div>\n        \n            <div class="clear-fix"></div>\n        </div>\n\n        <div class="section-separator">\n            <span>SET UP SINGLE SIGN-ON</span>\n            <hr/>\n        </div>\n\n        <div class="form-group">\n            <span class="multi-line">STEP 1: Add your identity provider SAML 2.0 metadata xml</span>\n            <div class="setting-controls">\n                <textarea placeholder="<EntityConfig xmlns=\'urn:sun:fm:SAML:2.0:entityconfig\' xmlns:fm=\'urn:sun:fm:SAML:2.0:entityconfig\' hosted=\'1\' entityID=\'idp.example\'..." bo-class="{\'error\': showXMLReqAlert || showXmlValidAlert}" ng-model="ssoSettings.xml" ng-trim="false" />\n                <div bo-if="showXmlValidAlert" class="required-alert-banner">XML parsing failed.</div>\n                <div bo-if="showXMLReqAlert" class="required-alert-banner">This information is required.</div>\n            </div>\n\n        </div>\n\n        <div class="form-group">\n            <span class="multi-line">STEP 2: Provider SAML 2.0 metadata XML to your identity provider.</span>\n            <div class="setting-controls">\n                <a bo-href="ssoSettings.SP_META_DATA_URL"><button class="btn btn-default" style="margin-bottom: 10px;">Download metadata</button></a>\n                <div class="meta-txt">\n                    <p>\n                        If your identity provider supports metadata, you can upload this XML configuration file to automatically configure their settings.\n                    </p>\n                    <p style="font-weight: bold;">\n                        OR\n                    </p>\n                    <p>\n                        Copy these URLs that you will paste in your identity provider\n                    </p>\n                </div>\n\n                <div class="grey-block">\n                    <p>SAML Consumer URL/Postback URL</p>\n                    <p class="meta-txt link" bo-click="openCopyLinkField($event)" bo-bind="ssoSettings.ASSERTION_CONSUMER_SERVICE_URL | limitText:45"></p>\n                    <a href="javascript:void(0)" bo-click="copyLink(ssoSettings.ASSERTION_CONSUMER_SERVICE_URL);">Copy</a>\n                    <input ng-blur="closeCopyLinkField($event)" type="text" value="{{ssoSettings.ASSERTION_CONSUMER_SERVICE_URL}}" readonly/>\n                </div>\n\n                <div class="grey-block">\n                    <p>SAML Audience</p>\n                    <p class="meta-txt link" bo-click="openCopyLinkField($event)" bo-bind="ssoSettings.ENTITY_ID | limitText:45"></p>\n                    <a href="javascript:void(0)" bo-click="copyLink(ssoSettings.ENTITY_ID);">Copy</a>\n                    <input ng-blur="closeCopyLinkField($event)" type="text" value="{{ssoSettings.ENTITY_ID}}" readonly/>\n                </div>\n\n                <div class="grey-block">\n                    <p>SAML Recipient</p>\n                    <p class="meta-txt link" bo-click="openCopyLinkField($event)" bo-bind="ssoSettings.RECIPIENT_URL | limitText:45"></p>\n                    <a href="javascript:void(0)" bo-click="copyLink(ssoSettings.RECIPIENT_URL);">Copy</a>\n                    <input ng-blur="closeCopyLinkField($event)" type="text" value="{{ssoSettings.RECIPIENT_URL}}" readonly/>\n                </div>\n\n                <div class="grey-block">\n                    <p>Default Relay State</p>\n                    <p class="meta-txt link" bo-click="openCopyLinkField($event)" bo-bind="ssoSettings.RELAY_STATE_URL | limitText:45"></p>\n                    <a href="javascript:void(0)" bo-click="copyLink(ssoSettings.RELAY_STATE_URL);">Copy</a>\n                    <input ng-blur="closeCopyLinkField($event)" type="text" value="{{ssoSettings.RELAY_STATE_URL}}" readonly/>\n                </div>\n\n                <div class="grey-block">\n                    <p>SLO Service URL</p>\n                    <p class="meta-txt link" bo-click="openCopyLinkField($event)" bo-bind="ssoSettings.SINGLE_LOGOUT_SERVICE_URL | limitText:45"></p>\n                    <a href="javascript:void(0)" bo-click="copyLink(ssoSettings.SINGLE_LOGOUT_SERVICE_URL);">Copy</a>\n                    <input ng-blur="closeCopyLinkField($event)" type="text" value="{{ssoSettings.SINGLE_LOGOUT_SERVICE_URL}}" readonly/>\n                </div>\n\n                <div class="meta-txt">\n                    <p>\n                        Download certificate for SLO Configurations in Okta\n                    </p>\n                    <a href="{{::config.APP_DOMAIN}}/app/cert_download.php"><button class="btn btn-default" style="margin-bottom: 10px;">Download Certificate</button></a>\n                </div>\n\n            </div>\n\n        </div>\n\n        <div class="form-group" style="margin-bottom: 62px;">\n            <span class="normal_lineHeight">SAML identity location</span>\n\n            <div class="setting-controls">\n                <div class="radioBtnBar">\n                    <div style="margin-bottom: 10px;">\n                        <input id="identity_name" type="radio" class="cnv-radioButton"\n                       ng-click="updateSSO_settingOptions($event)">\n                        <label for="identity_name" style="margin-left: 20px;">Identity is in the NameIdentifier element</label>\n                    </div>\n                    <div>\n                        <input id="identity_attribute" type="radio" class="cnv-radioButton"\n                       ng-click="updateSSO_settingOptions($event)">\n                        <label for="identity_attribute" style="margin-left: 20px;">Identity is in an Attribute element</label>\n                    </div>\n                </div>\n\n\n                <div bo-if="samlIdentityLocationAttrElement" class="form-group" style="margin: 10px 0px 0px 20px; position: relative;">\n                    <span class="normal_lineHeight" style="width: 127px;">Attribute for email</span>\n\n                    <div class="setting-controls" style="width: 248px;">\n                        <input type="text" class="ident_email_attribute_name" bo-class="{\'error\': showIdentEmailAttrReqAlert}" placeholder="workEmail" ng-model="ssoSettings.email_attribute_name"/>\n                        <div bo-if="showIdentEmailAttrReqAlert" class="required-alert-banner">This information is required.</div>                    \n					</div>\n\n                    <span class="meta-txt info-text">Enter attribute name which identifies user\'s email address</span>\n                </div>\n\n            </div>\n\n        </div>\n\n        <!-- <div class="section-separator">\n            <span>JUST-IN-TIME(JIT) USER PROVISIONING</span>\n            <hr/>\n        </div>\n\n        <p class="meta-txt" style="margin-bottom: 14px;">\n            With Just-in-Time provisioning you can use a SAML assertion to create a user account on the fly the first time they try to log in Convo. For example, if you recently added an employee to your organization, you don\'t need to manually create the user in Convo. When they log in with single sign-on, their accounr is automatically created for them.\n        </p> -->\n\n        <!-- <div class="form-group">\n            <span class="normal_lineHeight">Enable Just-in-Time provisioning</span>        \n            <div class="setting-controls">\n                <div class="radioBtnBar">\n                    <input id="enable_jit" type="radio" class="cnv-radioButton"\n                       bo-click="updateSSO_settingOptions($event)">\n                    <label for="enable_jit" style="margin-left: 20px;">Yes</label>\n                    <input id="disable_jit" type="radio" class="cnv-radioButton"\n                       bo-click="updateSSO_settingOptions($event)">\n                    <label for="disable_jit" style="margin-left: 40px;">No</label>\n                </div>\n            </div>\n\n            <span class="meta-txt" style="margin-top: 2px;">Enabling this will disable users from creating accounts via Convo sign up</span>\n            <div class="clear-fix"></div>\n        </div> -->\n\n        <!-- <div bo-if="!ssoSettings.enableJITUserProvisioning">\n            <div class="form-group">\n            <span class="normal_lineHeight">Attribute for first name</span>        \n            <div class="setting-controls">\n                <input type="text" placeholder="firstName"/>\n            </div>\n\n            <span class="meta-txt" style="margin-top: -20px;">Enter attribute name that identifies each user\'s first name</span>\n\n            <div class="clear-fix"></div>\n            </div>\n\n            <div class="form-group">\n                <span class="normal_lineHeight">Attribute for last name</span>\n                <div class="setting-controls">\n                    <input type="text" placeholder="lastName"/>\n                </div>\n\n                <span class="meta-txt" style="margin-top: -20px;">Enter attribute name that identifies each user\'s last name</span>\n\n                <div class="clear-fix"></div>\n            </div>\n        </div> -->\n\n        <!-- <div class="form-group">\n            <span class="normal_lineHeight">Provision user based on authentication response</span>        \n            <div class="setting-controls">\n                 <div class="radioBtnBar">\n                    <input id="enable_pub" type="radio" class="cnv-radioButton"\n                       bo-click="updateSSO_settingOptions($event)">\n                    <label for="enable_pub" style="margin-left: 20px;">Yes</label>\n                    <input id="disable_pub" type="radio" class="cnv-radioButton"\n                       bo-click="updateSSO_settingOptions($event)">\n                    <label for="disable_pub" style="margin-left: 40px;">No</label>\n                </div>\n            </div>\n            <div class="clear-fix"></div>\n        </div> -->\n\n        <!-- <div bo-if="!ssoSettings.provisionUserBasedOnAuthenticationResp">\n            <div class="form-group">\n                <span class="normal_lineHeight">Attribute name</span>        \n                <div class="setting-controls">\n                    <input type="text" placeholder="canLogin"/>\n                </div>\n\n                <span class="meta-txt" style="margin-top: -20px;">Enter attribute name that indicates whether user account should be provisioned or not.</span>\n\n                <div class="clear-fix"></div>\n            </div>\n\n            <div class="form-group">\n                <span class="normal_lineHeight">Attribute value</span>\n                <div class="setting-controls">\n                    <input type="text" placeholder="true"/>\n                </div>\n\n                <span class="meta-txt" style="margin-top: -20px;">Enter attribute name that indicates whether user account should be provisioned or not.</span>\n\n                <div class="clear-fix"></div>\n            </div>\n        </di -->\n\n        <hr/>\n        <div class="settings-footer">        \n            <button class="btn btn-primary" ng-click="updateSSO_settings()" ng-disabled="!isAnySettingUpdated() || isUpdatingSettings">Save Changes</button>\n            <a class="pull-right margRight" href="javascript:void(0)" ng-click="closeTab()">Cancel</a>\n        </div>\n    </div>\n</div>')
    }
    ]),
    b.module("settings/templates/customizeFeed.tpl.html", []).run(["$templateCache", function(a) {
        a.put("settings/templates/customizeFeed.tpl.html", '<div cnv-customize-feed bindonce>\n    <div bo-if="!initialized" class="loading-spinner">\n        <img src="assets/img/feed/loading-spin.svg" alt="Loading icon"/>\n    </div>\n\n\n    <div bo-if="initialized">\n        <div style="padding-left: 120px">\n            <div class="header">Feed and sharing</div>\n            <div style="margin-top: 20px;"></div>\n            <div class="subHeader">\n                DEFAULT RECIPIENTS FOR MY POSTS\n            </div>\n            <hr/>\n            <div style="  margin-top: 10px;color: #7b8386;">\n                When you start a new post, we\'ll prefill the recipients with whoever is listed below.\n                <br>\n                Type the name of a group or teammate to set your own default recipient.\n            </div>\n            <div style="margin-top: 20px;">\n                <div style="display: inline-block; width: 40px;">\n                    To:\n                </div>\n                <div class="to-field-cont">\n                    <tags-input ng-model="userAndGroupList"\n                                placeholder="{{placeholderText}}"\n                                add-on-comma="true"\n                                add-on-blur="false"\n                                horizontal-flow = "false"\n                                add-from-autocomplete-only="false"\n                                display-property="label"\n                                on-tag-added="onSharingOptionAdded($tag)"\n                                on-tag-removed="onSharingOptionRemoved($tag)"\n                                replace-spaces-with-dashes="false">\n                        <auto-complete\n                                source="getAutoCompleteUserAndGroupsItems($query, numSelected)"\n                                load-history-on-focus="true"\n                                delimiter="@"\n                                min-length="1"\n                                auto-select-first-suggestion="true"\n                                suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html">\n                        </auto-complete>\n                    </tags-input>\n                </div>\n                <div style="display:inline-block;margin-left: 30px;">\n                    <a href="javascript:void(0)" bo-click="resetToDefaultSharingOption()">Restore defaults</a>\n                </div>\n            </div>\n\n            <div style="margin-top:20px;">\n                Also use these default recipients for:\n                <br>\n                <br>\n                <input type="checkbox" class="cnv-checkbox" id="settingMA"\n                       bo-click="updateChkSettings()"/>\n                <label for="settingMA"></label>\n\n                <div style="display:inline;margin-left: 5px;">\n                    Convo mobile apps.\n                </div>\n            </div>\n            <div style="margin-top: 10px;">\n                <input type="checkbox" class="cnv-checkbox" id="settingQA"\n                       bo-click="updateChkSettings()"/>\n                <label for="settingQA"></label>\n\n                <div style="display:inline;margin-left: 5px;">\n                    Convo desktop menulet.\n                </div>\n            </div>\n\n            <div class="subHeader">\n                HIDE POSTS FROM MY FEED\n            </div>\n            <hr/>\n            <div style="  margin-top: 10px;color: #7b8386;">\n                You can adjust what you see in your feed by hiding or unhiding groups.\n                <br>\n                You can still find hidden posts by searching or by visiting the group view.\n            </div>\n\n            <div style="margin-top: 20px;">\n                <div style="display: inline-block; width: 125px;vertical-align: middle;">\n                    Hide posts to these groups\n                </div>\n                <div class="to-field-cont">\n                    <tags-input ng-model="groupList"\n                                placeholder="{{placeholderText}}"\n                                add-on-comma="true"\n                                add-on-blur="false"\n                                add-from-autocomplete-only="false"\n                                display-property="label"\n                                on-tag-added="groupItemAdded($tag)"\n                                on-tag-removed="groupItemRemoved($tag)"\n                                replace-spaces-with-dashes="false">\n                        <auto-complete\n                                source="getAutoCompleteGroupsItems($query)"\n                                load-history-on-focus="true"\n                                delimiter="@"\n                                min-length="1"\n                                max-results-to-show="4"\n                                auto-select-first-suggestion="true"\n                                suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html">\n                        </auto-complete>\n                    </tags-input>\n                </div>\n                <button id="hideGroupsBtn" style="margin-left: 50px;" ng-click="hideGroupsFromFeed()" type="button"\n                        class="btn btn-primary disabled">\n                    Hide\n                </button>\n            </div>\n            <div style="  margin-left: 130px;margin-top: 10px;">\n                <a href="javascript:void(0)" id="hiddenGroups" bo-click="openHiddenGroupsAndTeammatesModal(\'Groups\')"\n                   bo-bind="viewHiddenGroupsText">View\n                    hidden groups</a>\n            </div>\n\n            <!--  <div style="margin-top: 20px;">\n                  <div style="display: inline-block; width: 125px;">\n                      Hide teammates\n                  </div>\n                  <div class="to-field-cont">\n                      <tags-input ng-model="userList"\n                                  placeholder="{{placeholderText}}"\n                                  add-on-comma="true"\n                                  add-on-blur="false"\n                                  add-from-autocomplete-only="false"\n                                  display-property="label"\n                                  on-tag-added="userItemAdded($tag)"\n                                  on-tag-removed="userItemRemoved($tag)"\n                                  replace-spaces-with-dashes="false">\n                          <auto-complete\n                                  source="getAutoCompleteUsersItems($query)"\n                                  load-history-on-focus="true"\n                                  delimiter="@"\n                                  min-length="1"\n                                  auto-select-first-suggestion="true"\n                                  suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html">\n                          </auto-complete>\n                      </tags-input>\n                  </div>\n                  <button id="hideUsersBtn" style="margin-left: 50px;" ng-click="hideUsersFromFeed()" type="button"\n                          class="btn btn-primary disabled">\n                      Hide\n                  </button>\n              </div>\n              <div style="margin-left: 130px;margin-top: 10px;">\n                  <a href="javascript:void(0)" id="hiddenTeammates"\n                     bo-click="openHiddenGroupsAndTeammatesModal(\'Teammates\')">View hidden teammates</a>\n              </div>\n          </div>-->\n            <div style="margin-top: 180px">\n            </div>\n        </div>\n    </div>\n')
    }
    ]),
    b.module("settings/templates/manageGroupsView.tpl.html", []).run(["$templateCache", function(a) {
        a.put("settings/templates/manageGroupsView.tpl.html", '<div cnv-settings-manage-groups bindonce class="settings-manage-groups-wrapper">\n  \n  <div class="heading">\n    <h4>Manage groups</h4>\n  </div>\n\n  <div class="tab-navigation-wrapper">\n    <ul>\n      <li bo-class="{\'active\': currentTab === GROUP_CREATION_TAB_VIEW}" ng-click="changeTab(GROUP_CREATION_TAB_VIEW)">Group creation</li>\n    </ul>\n  </div>\n\n  <div class="tab-view-wrapper">\n    \n    <div class="general-tab" bo-show="currentTab === GROUP_CREATION_TAB_VIEW">\n\n      <h4 class="summary-heading">Company Groups</h4>\n      <hr />\n\n      <div class="company-groups-wrapper">\n        <span>As an admin, you can set up company groups that new users will join automatically on sign up.</span>\n        <button class="btn btn-primary" ng-click="openCreateGroupModal()">Create company group</button>\n        <ul>\n          <li ng-repeat="group in companyGroups | limitTo: companyGroupsLimit"><a bo-href="group.id | idToFilterUrlForApp:\'GROUP\'">{{::group.name}}</a></li>\n          <li ng-if="companyGroups.length > 3 && companyGroupsLimit < companyGroups.length"><span ng-click="toggleCompanyGroupsList(true)" class="toggle-btn">Show more</span></li>\n          <li ng-if="companyGroups.length > 3 && companyGroupsLimit === companyGroups.length"><span ng-click="toggleCompanyGroupsList()" class="toggle-btn">Show less</span></li>\n        </ul>\n      </div>\n    </div>\n\n  </div>\n\n</div>')
    }
    ]),
    b.module("settings/templates/manageUsersView.tpl.html", []).run(["$templateCache", function(a) {
        a.put("settings/templates/manageUsersView.tpl.html", '<div cnv-settings-manage-users bindonce class="settings-manage-users-wrapper">\n  \n  <div class="heading">\n    <h4>Manage users</h4>\n  </div>\n\n  <div class="tab-navigation-wrapper">\n    <ul>\n      <li bo-class="{\'active\': currentTab === GENERAL_TAB_VIEW}" ng-click="changeTab(GENERAL_TAB_VIEW)">General</li>\n      <li bo-class="{\'active\': currentTab === USER_PRIVILEGES_TAB_VIEW}" bo-if="userInfo.isOwner()" ng-click="changeTab(USER_PRIVILEGES_TAB_VIEW)">Set user privileges</li>\n      <li bo-class="{\'active\': currentTab === BLOCK_USER_TAB_VIEW}" ng-click="changeTab(BLOCK_USER_TAB_VIEW)">Block users</li>\n    </ul>\n  </div>\n\n  <div class="tab-view-wrapper">\n    \n    <div class="general-tab" bo-show="currentTab === GENERAL_TAB_VIEW">\n      \n      <div class="checkbox-wrapper">\n        <input type="checkbox" class="cnv-checkbox" id="autoFollow" ng-click="followCheckboxChange()" />\n        <label for="autoFollow"></label>\n        <span>Auto-follow teammates when they join network</span>\n      </div>\n\n      <!-- <div class="checkbox-wrapper">\n        <input type="checkbox" class="cnv-checkbox" id="notifyUsers" />\n        <label for="notifyUsers"></label>\n        <span>Notify users when someone joins the network</span>\n      </div> -->\n\n      <h4 class="summary-heading">Limit Network Users</h4>\n      <hr />\n\n      <form name="networkCap" role="form" ng-submit="changeNetworkCap();">\n        <div> \n          If you want to add a limit to the number of users in this network, specify a cap limit below.\n        </div>\n\n        <div class="form">\n          <input type="text" class="form-control settings-custom" id="networkCapLimit" ng-model="networkCapLimit" ng-focus="showHideCapDropdown(true);" ng-blur="showHideCapDropdown(false);" onClick="this.select();" />\n          <div class="network-cap-dropdown" ng-if="showCapDropdown" ng-mousedown="changeNetworkCap(true);">Unlimited</div>\n          <button class="btn btn-primary" type="submit" ng-disabled="!(networkCapLimit != \'\' && originalNetworkCap != networkCapLimit)">Apply network cap</button>\n        </div>\n      </form>\n\n      <alert ng-repeat="alert in networkCapAlerts" type="{{alert.type}}" close="removeNetworkCapAlert($index)">{{alert.msg}}</alert>\n\n    </div>\n\n    <div class="privileges-tab" bo-show="currentTab === USER_PRIVILEGES_TAB_VIEW">\n      \n     <!--  <h4 class="summary-heading">Convert to Full User</h4>\n      <hr /> -->\n\n      <!-- <div>\n        You can convert to full network members. This will give them access to standard features like creating groups, joining public groups, user & group directory, and other abilities.\n      </div> -->\n\n      <!-- <div class="form">\n        <div class="to-field-cont">\n          <tags-input ng-model="usersArr"\n                      placeholder="\'Enter name or email\'"\n                      add-on-comma="true"\n                      add-on-blur="true"\n                      horizontal-flow = "false"\n                      on-tag-added="onItemAddedInToField($tag)"\n                      on-tag-removed="onItemRemovedInToField($tag)"\n                      add-from-autocomplete-only="false"\n                      display-property="label"\n                      allowed-tags-pattern="^[+a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$"\n                      replace-spaces-with-dashes="false">\n              <auto-complete\n                      source="getAutoCompleteUserItemsToUpdate($query, numSelected)"\n                      load-history-on-focus="true"\n                      delimiter="@"\n                      min-length="1"\n                      auto-select-first-suggestion="true"\n                      suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html">\n              </auto-complete>\n          </tags-input>\n        </div>\n        <button class="btn btn-primary">Make network user</button>\n      </div> -->\n\n      <!-- <h4 class="summary-heading">Convert to Guest User</h4>\n      <hr />\n\n      <div>\n        You can restrict network members to guest level privileges. This will restrict their access to groups that they are part of and prevent them from joining or creating new groups.\n      </div>\n\n      <div class="form">\n        <input type="text" class="form-control settings-custom" />\n        <button class="btn btn-primary" placeholder="Add name or email">Make guest user</button>\n      </div> -->\n\n      <div class="transfer-owner-wrapper" ng-if="userInfo.isOwner()">\n        <h4 class="summary-heading">Transfer Ownership</h4>\n        <hr />\n\n        <div class="dull-content">\n          By transferring ownership, you will no longer be able to manage this network. You will not be able to undo this transfer.\n        </div>\n\n        <form role="form" ng-submit="transferOwnership();">\n\n          <!-- fake fields are a workaround for chrome autofill getting the wrong fields -->\n          <input style="display:none" type="text" name="fakeusernameremembered"/>\n          <input style="display:none" type="password" name="fakepasswordremembered"/>\n\n          <div class="label-form">\n            <span class="label-text">Choose a teammate to become the new network owner</span>\n            <div class="to-field-cont">\n              <tags-input ng-model="transferUserArr"\n                          placeholder="Search by name or email"\n                          add-on-comma="true"\n                          add-on-blur="true"\n                          horizontal-flow = "false"\n                          on-tag-added="onItemAddedInTransferOwnership($tag)"\n                          on-tag-removed="onItemRemovedInTransferOwnership($tag)"\n                          add-from-autocomplete-only="true"\n                          display-property="label"\n                          allowed-tags-pattern="^[+a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$"\n                          replace-spaces-with-dashes="false">\n                  <auto-complete\n                          source="getAutoCompleteUserItemsForTransferOwnership($query, numSelected)"\n                          load-history-on-focus="false"\n                          delimiter="@"\n                          min-length="1"\n                          auto-select-first-suggestion="true"\n                          suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html">\n                  </auto-complete>\n              </tags-input>\n            </div>\n          </div>\n\n\n\n          <div class="label-form sec">\n            <span class="label-text">Enter your password to verify the transfer</span>\n            <input type="password" class="form-control settings-custom" id="userPass" ng-model="userPass" />\n          </div>\n\n          <alert ng-repeat="alert in ownershipAlerts" type="{{alert.type}}" close="removeOwnershipAlert($index)">{{alert.msg}}</alert>\n\n          <button class="btn btn-primary ownership" type="submit" ng-disabled="!(userPass.length > 3 && transferUserArr.length > 0)">Transfer Ownership</button>\n\n        </form>\n      </div>\n\n    </div>\n\n    <div class="block-users-tab" bo-show="currentTab === BLOCK_USER_TAB_VIEW">\n      <h4 class="summary-heading">Block users</h4>\n      <hr />\n      <div>People with blocked domains and email addresses will not be able to access the {{::accountInfo.getAccountName()}} network.</div>\n      <form name="bockUser" role="form" ng-submit="blockEmailOrDomain();">\n        <div class="form">\n          <input type="text" class="form-control settings-custom" placeholder="Add email or domain" ng-model="blockUsersDomainModel" />\n          <button class="btn btn-primary" type="submit" ng-disabled="!(blockUsersDomainModel.length > 0)">Block</button>\n        </div>\n        <alert ng-repeat="alert in blockDomainAlerts" type="{{alert.type}}" close="removeDomainAlert($index)">{{alert.msg}}</alert> \n      </form>\n      <div ng-if="blockedUsers.length > 0">The following users are blocked:</div>\n      <div class="blocked-users-list">\n        <ul>\n          <li ng-repeat="user in blockedUsers">\n            <span>{{::user}}</span><span ng-click="unblockEmailOrDomain(user);">Unblock</span>\n          </li>\n        </ul>\n      </div>\n    </div>\n\n  </div>\n\n</div>');
    }
    ]),
    b.module("settings/templates/monitorContentView.tpl.html", []).run(["$templateCache", function(a) {
        a.put("settings/templates/monitorContentView.tpl.html", '<div bindonce cnv-settings-monitor-content class="settings-monitor-content-wrapper">\n	\n	<div class="heading">\n		<h4>Manage content</h4>\n	</div>\n\n	<div class="tab-navigation-wrapper">\n		<ul>\n			<li bo-class="{\'active\': currentTab === GENERAL_TAB_VIEW}" ng-click="changeTab(GENERAL_TAB_VIEW)">Monitor content</li>\n			<li bo-class="{\'active\': currentTab === CONTENT_PREFERENCES_VIEW}" ng-click="changeTab(CONTENT_PREFERENCES_VIEW)">Content preferences</li>\n		</ul>\n	</div>\n\n	<div class="tab-view-wrapper">\n\n		<div class="general-tab" bo-if="currentTab === GENERAL_TAB_VIEW">\n\n			<h4 class="summary-heading">Switch to admin mode</h4>\n      		<hr />\n			\n			<div class="text-wrapper">\n				<div class="dim-text">\n					Switch to administrator mode to view all content, including private messages and chats and delete any post or comment. It is recommended that you do not collaborate and share new posts in administrator view, as you may accidentally update a post you don\'t have access to otherwise.\n				</div>\n			</div>\n			\n			<div class="btn-wrapper">\n				<button class="btn btn-primary" ng-click="switchToAdminMode();" ng-if="!isAdminMode">View content in admin mode</button>\n\n				<button class="btn btn-primary" ng-click="exitAdminMode();" ng-if="isAdminMode">Exit admin mode</button>\n			</div>\n			\n		</div>\n\n		<div class="content-preferences-tab" bo-if="currentTab === CONTENT_PREFERENCES_VIEW">\n			<h4 class="summary-heading">PIN CONTENT</h4>\n      		<hr />\n			\n			<div class="text-wrapper">\n				<div class="dim-text">\n					Pinned posts appear as links on top of Feed for everyone in this network. These can be frequently accessed posts, important posts or external links.\n				</div>\n				<div class="pinned-items">\n					<ul>\n						<li ng-repeat="item in pinItems"><i class="cnv-icons-20 icons_Links-darkgray"></i><a bo-href="item.url" target="_blank" class="link">{{::item.resource_name}}</a>\n						<div><span ng-click="pinContent(item);">Edit</span> <span class="danda">|</span> <span ng-click="removePinItem(item.id)"> Remove</span></div></li>\n					</ul>\n				</div>\n				<a href="javascript:void(0)" ng-click="pinContent()">Add important posts or links</a>\n			</div>\n		</div>\n\n	</div>\n\n</div>')
    }
    ]),
    b.module("settings/templates/networkInformationView.tpl.html", []).run(["$templateCache", function(a) {
        a.put("settings/templates/networkInformationView.tpl.html", '<div cnv-network-information bindonce class="networkinfo">\n    <div style="padding-left: 120px">\n        <div class="header">Network information</div>\n\n        <div style="margin-top: 20px;"></div>\n        \n        \n        <form class="form-horizontal">\n          <div class="form-group">\n            <label for="networkName" class="control-label">Network name</label>\n            <div class="control-content">\n              <input type="text" class="form-control settings-custom" id="networkName" ng-model="networkName" ng-blur="updateNetworkName()" />\n            </div>\n          </div>\n          \n          <div class="form-group">\n            <label class="control-label network_logo">Network logo</label>\n            <div class="control-content margin_left_20">\n              <div bo-show="networkImageUploadState==Uploader_Idle">\n                <img bo-src="accountImageUrl" bo-class="{defaultLogo:accountImageType==0}"/> \n                <a ng-click="openFilePicker()" class="upload_another">Upload another</a>\n              </div>\n\n              <div bo-show="networkImageUploadState==Uploader_Uploading">\n                <span  class="cnv-spinner light"></span>\n                <a class="upload_another disabled">Uploading...</a>\n              </div>\n              \n              <p class="dull-content">\n                For a great looking company logo use a 40x40 version.\n              </p>\n\n\n              \n            </div>\n          </div>\n\n          <div class="form-group">\n            <label class="control-label" style="padding-top: 0;">Created on</label>\n            <div class="control-content margin_left_20">\n                {{::createdOn}}\n            </div>\n          </div>\n\n          <div class="form-group" ng-if="accountInfo.getAccountLevel() != \'ENTERPRISE\'">\n            <label class="control-label" style="padding-top: 0;">Network creator</label>\n            <div class="control-content margin_left_20"><a bo-href="networkInfo.creator.user_id | idToFilterUrl: \'USER\'" bo-bind="networkInfo.creator.first_name + \' \' + networkInfo.creator.last_name"></a>\n            </div>\n          </div>\n\n          <div class="form-group admin-control" ng-if="accountInfo.getAccountLevel() !== \'STARTER\'">\n            <label class="control-label">Admins</label>\n            <div class="control-content margin_left_20">\n              <tags-input ng-model="adminUsersList"\n                        placeholder=""\n                        add-on-comma="true"\n                        add-on-blur="true"\n                        horizontal-flow = "false"\n                        on-tag-added="onItemAddedInAdminField($tag)"\n                        on-tag-removed="onItemRemovedInAdminField($tag)"\n                        add-from-autocomplete-only="true"\n                        display-property="label"\n                        allowed-tags-pattern="^[+a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$"\n                        replace-spaces-with-dashes="false">\n                <auto-complete\n                        source="getAutoCompleteUserItemsForAdminField($query, numSelected)"\n                        load-history-on-focus="false"\n                        delimiter="@"\n                        min-length="1"\n                        auto-select-first-suggestion="true"\n                        suggestion-item-template="common/listItemRenderers/imgLabelListItem.tpl.html">\n                </auto-complete>\n            </tags-input>\n            <p class="dull-content">Admins can control network settings, manage users and groups and handle other team maintenance tasks.</p>\n            </div>\n          </div>\n\n          <!-- <div class="form-group">\n            <label class="control-label">Plan</label>\n            <div class="control-content margin_left_20">\n                {{::plan}}\n            </div>\n          </div> -->\n          \n          \n        </form>\n\n        <div class="account-usage-wrapper" ng-if="accountInfo.getAccountLevel() === \'STARTER\' || accountInfo.getAccountLevel() === \'PREMIUM\'">\n          <h4 class="summary-heading">Account usage</h4>\n          <hr />\n          <div class="summary-wrapper">\n            <p ng-if="accountInfo.getAccountLevel() === \'STARTER\'">You are using Convo Basic. <a href="javascript:void(0)" ng-click="navigateToUpgradeView()">Upgrade your account</a></p>\n            <p ng-if="accountInfo.getAccountLevel() === \'PREMIUM\'">You are using Convo Pro. <a href="mailto:sales@convo.com">Contacts sales</a> to upgrade to enterprise package.</p>\n            <div class="stat-users">\n              <span class="heading">Users</span>\n              <span>\n                <i class="cnv-icons-15 icon2__Following-darkgray"></i>\n                <b bo-bind="networkInfo.users_statistics.TOTAL"></b>\n                <b bo-if="accountInfo.getAccountLevel() === \'STARTER\'"> of 20</b>\n                <b bo-if="accountInfo.getAccountLevel() === \'PREMIUM\' && usersCap"> of {{::usersCap}}</b>\n              </span>\n            </div>\n            <div class="stat-groups">\n              <span class="heading">Groups</span>\n              <span>\n                <i class="cnv-icons-20 icons_Group_Icon-darkgray"></i>\n                <b bo-bind="networkInfo.groups_statistics.TOTAL"></b>\n                <b bo-if="accountInfo.getAccountLevel() === \'STARTER\'"> of 3</b>\n              </span>\n            </div>\n            <!-- <div class="stat-storage">\n              <span class="heading">Storage</span>\n              <span><b>570MB</b> of <b>1GB</b> (56% used)</span>\n              <div class="custom-progress-bar">\n                <i class="filled"></i>\n              </div>\n            </div> -->\n          </div>\n          <div class="user-group-list" ng-if="accountInfo.getAccountLevel() === \'PREMIUM\'">\n            <p>Get activity reports for your network:</p>\n            <a ng-href="{{::config.REST_URL}}users?method=downloadAccountUsersData" target="_blank">Download users list</a>\n            <a ng-href="{{::config.REST_URL}}groups?method=downloadAccountGroupsData" target="_blank">Download groups list</a>\n          </div>\n        </div>\n\n    </div>\n    <input type="file" id="networkImageUpload" name="networkImageUpload" style="width: 1px; height: 1px; display: block; position: absolute; z-index: 19999; top: -1000px; left: -1000px;">\n</div>\n\n')
    }
    ]),
    b.module("settings/templates/notificationsView.tpl.html", []).run(["$templateCache", function(a) {
        a.put("settings/templates/notificationsView.tpl.html", '<div cnv-notification-settings bindonce>\n    <div bo-if="!initialized" class="loading-spinner">\n        <img src="assets/img/feed/loading-spin.svg" alt="Loading icon"/>\n    </div>\n\n\n    <div bo-if="initialized">\n\n        <div style="padding-left: 120px">\n            <div class="header">Notifications</div>\n\n            <!--Division 1-->\n            <div>\n                <div class="smartNoti">\n                    <input type="checkbox" class="cnv-checkbox" id="{{NOTIFY_ONLY_WHEN_AWAY}}"\n                           bo-click="updateSettings($event,NOTIFY_ONLY_WHEN_AWAY,true)"/>\n                    <label for="{{NOTIFY_ONLY_WHEN_AWAY}}"></label>\n\n                    <div style="display:inline;margin-left: 5px;">\n                        Turn on Smart Notifications\n                    </div>\n\n                    <div style="margin-left:28px;color: #7b8386;">\n                        Only send email and mobile notifications when I am away or offline on Convo.\n                    </div>\n                </div>\n                <div style="margin-top: 10px;">\n                    <input type="checkbox" class="cnv-checkbox" id="{{PLAY_CHAT_NOTIFICATION_SOUND}}"\n                           bo-click="updateSettings($event,PLAY_CHAT_NOTIFICATION_SOUND,true)"/>\n                    <label for="{{PLAY_CHAT_NOTIFICATION_SOUND}}"></label>\n\n                    <div style="display:inline;margin-left: 5px;">\n                        Enable sounds\n                    </div>\n                </div>\n\n                <div style="margin-top: 30px;">\n\n                    Send me desktop notifications for\n\n                    <div style="margin-left: 10px" class="btn-group" dropdown>\n                        <button type="button" class="btn btn-default dropdown-toggle" dropdown-toggle\n                                ng-bind-html="selectedActivityType">\n                            All activity <span class="caret"></span>\n                        </button>\n                        <ul class="dropdown-menu" role="menu">\n                            <li><a href="javascript:void(0)" bo-click="activityChanged(true)">All activity</a></li>\n                            <li><a href="javascript:void(0)" bo-click="activityChanged(false)">Specific\n                                activity (Customize)</a></li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n            <!--Division 2-->\n\n            <div>\n                <div class="subHeader">\n                    CUSTOMIZE YOUR NOTIFICATION SETTINGS\n                </div>\n                <hr/>\n                <div style="display: inline-block;">\n                    <div style="margin-bottom: 15px;text-align: center;display: block;padding-left: 322px;">\n                        <div style="display: inline-block;margin-left: 4px;">DESKTOP</div>\n                        <div style="display: inline-block;margin-left: 70px;">EMAIL</div>\n                        <div style="display: inline-block;margin-left: 76px;">MOBILE</div>\n                        <div style="display: inline-block;margin-left: 20px;;width: 145px;">NOTIFICATION CENTER</div>\n                    </div>\n                    <div style="color: #7b8386;display: inline-block;padding-left: 5px;">\n                        ENABLE NOTIFICATIONS FOR...\n                    </div>\n                    <div style="display: inline;margin-left:139px;">\n                        <div style="display: inline;">\n\n                            <div class="chkDesktop btn-group btn-toggle">\n                                <button class="btn btn-xs btn-primary active">ON\n                                </button>\n                                <button class="btn btn-xs btn-default-transparent-font">OFF</button>\n\n                            </div>\n\n                        </div>\n                        <div style="margin-left:60px; display: inline;">\n\n                            <div class="chkEmail btn-group btn-toggle">\n                                <button class="btn btn-xs btn-primary active">ON</button>\n                                <button class="btn btn-xs btn-default-transparent-font">OFF</button>\n\n                            </div>\n                        </div>\n                        <div style="margin-left:60px; display: inline;">\n\n                            <div class="chkMobile btn-group btn-toggle">\n                                <button class="btn btn-xs btn-primary active">ON</button>\n                                <button class="btn btn-xs btn-default-transparent-font">OFF</button>\n\n                            </div>\n                        </div>\n                        <div style="margin-left:60px; display: inline;">\n\n                            <div class="chkIPN btn-group btn-toggle">\n                                <button class="btn btn-xs btn-primary active">ON</button>\n                                <button class="btn btn-xs btn-default-transparent-font">OFF</button>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <hr/>\n\n                <div>\n                    <div style="background-color:#e0e0e0;padding: 5px;">\n                        <div style="display: inline-block;width: 260px;">\n                            @Mentions\n                        </div>\n                        <div style="display: inline;margin-left: 77px;">\n                            <div bo-if="showDesktopChk" style="display: inline;">\n\n                                <input type="checkbox" class="cnv-checkbox" id="{{NOTIFY_DIRECTS_AND_MENTIONS+\'D\'}}"\n                                       ng-disabled="disableAllDesktopChk"\n\n                                       bo-click="updateSettings($event,NOTIFY_DIRECTS_AND_MENTIONS+\'D\')"/>\n                                <label for="{{NOTIFY_DIRECTS_AND_MENTIONS+\'D\'}}" bo-class="{disableOverLay: disableAllDesktopChk}"></label>\n                            </div>\n                            <div bo-if="!showDesktopChk" class="dash">\n                                __\n                            </div>\n                            <div class="cbkCustomizeSettings">\n\n                                <input type="checkbox" class="cnv-checkbox" id="{{NOTIFY_DIRECTS_AND_MENTIONS+\'E\'}}"\n                                       ng-disabled="disableAllEmailChk"\n                                       bo-click="updateSettings($event,NOTIFY_DIRECTS_AND_MENTIONS+\'E\')"/>\n                                <label for="{{NOTIFY_DIRECTS_AND_MENTIONS+\'E\'}}"></label>\n                            </div>\n                            <div class="cbkCustomizeSettings">\n\n                                <input type="checkbox" class="cnv-checkbox" id="{{NOTIFY_DIRECTS_AND_MENTIONS+\'M\'}}"\n                                       ng-disabled="disableAllMobileChk"\n                                       bo-click="updateSettings($event,NOTIFY_DIRECTS_AND_MENTIONS+\'M\')"/>\n                                <label for="{{NOTIFY_DIRECTS_AND_MENTIONS+\'M\'}}"></label>\n                            </div>\n                            <div class="cbkCustomizeSettings">\n\n                                <input type="checkbox" class="cnv-checkbox" id="{{NOTIFY_DIRECTS_AND_MENTIONS+\'N\'}}"\n                                       ng-disabled="disableAllIPNChk"\n                                       bo-click="updateSettings($event,NOTIFY_DIRECTS_AND_MENTIONS+\'N\')"/>\n                                <label for="{{NOTIFY_DIRECTS_AND_MENTIONS+\'N\'}}"></label>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div style=";padding: 5px;">\n                        <div style="display: inline-block;width: 260px;">\n                            Comments on my posts\n                        </div>\n                        <div style="display: inline;margin-left: 77px;">\n                            <div bo-if="showDesktopChk" style="display: inline;">\n\n                                <input type="checkbox" class="cnv-checkbox" id="{{NOTIFY_COMMENTS_ON_MY_POSTS+\'D\'}}"\n                                       ng-disabled="disableAllDesktopChk"\n                                       bo-click="updateSettings($event,NOTIFY_COMMENTS_ON_MY_POSTS+\'D\')"/>\n                                <label for="{{NOTIFY_COMMENTS_ON_MY_POSTS+\'D\'}}"></label>\n                            </div>\n                            <div bo-if="!showDesktopChk" class="dash">\n                                __\n                            </div>\n                            <div class="cbkCustomizeSettings">\n\n                                <input type="checkbox" class="cnv-checkbox" id="{{NOTIFY_COMMENTS_ON_MY_POSTS+\'E\'}}"\n                                       ng-disabled="disableAllEmailChk"\n                                       bo-click="updateSettings($event,NOTIFY_COMMENTS_ON_MY_POSTS+\'E\')"/>\n                                <label for="{{NOTIFY_COMMENTS_ON_MY_POSTS+\'E\'}}"></label>\n                            </div>\n                            <div class="cbkCustomizeSettings">\n\n                                <input type="checkbox" class="cnv-checkbox" id="{{NOTIFY_COMMENTS_ON_MY_POSTS+\'M\'}}"\n                                       ng-disabled="disableAllMobileChk"\n                                       bo-click="updateSettings($event,NOTIFY_COMMENTS_ON_MY_POSTS+\'M\')"/>\n                                <label for="{{NOTIFY_COMMENTS_ON_MY_POSTS+\'M\'}}"></label>\n                            </div>\n                            <div class="cbkCustomizeSettings">\n\n                                <input type="checkbox" class="cnv-checkbox" id="{{NOTIFY_COMMENTS_ON_MY_POSTS+\'N\'}}"\n                                       ng-disabled="disableAllIPNChk"\n                                       bo-click="updateSettings($event,NOTIFY_COMMENTS_ON_MY_POSTS+\'N\')"/>\n                                <label for="{{NOTIFY_COMMENTS_ON_MY_POSTS+\'N\'}}"></label>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div style="background-color:#e0e0e0;padding: 5px;">\n                        <div style="display: inline-block;width: 260px;">\n                            Comments on post I have commented on\n                        </div>\n                        <div style="display: inline;margin-left: 77px;">\n                            <div bo-if="showDesktopChk" style="display: inline;">\n\n                                <input type="checkbox" class="cnv-checkbox"\n                                       id="{{NOTIFY_COMMENTS_ON_POSTS_I_COMMENT_ON+\'D\'}}"\n                                       ng-disabled="disableAllDesktopChk"\n                                       bo-click="updateSettings($event,NOTIFY_COMMENTS_ON_POSTS_I_COMMENT_ON+\'D\')"/>\n                                <label for="{{NOTIFY_COMMENTS_ON_POSTS_I_COMMENT_ON+\'D\'}}"></label>\n                            </div>\n                            <div bo-if="!showDesktopChk" class="dash">\n                                __\n                            </div>\n                            <div class="cbkCustomizeSettings">\n\n                                <input type="checkbox" class="cnv-checkbox"\n                                       id="{{NOTIFY_COMMENTS_ON_POSTS_I_COMMENT_ON+\'E\'}}"\n                                       ng-disabled="disableAllEmailChk"\n                                       bo-click="updateSettings($event,NOTIFY_COMMENTS_ON_POSTS_I_COMMENT_ON+\'E\')"/>\n                                <label for="{{NOTIFY_COMMENTS_ON_POSTS_I_COMMENT_ON+\'E\'}}"></label>\n                            </div>\n                            <div class="cbkCustomizeSettings">\n\n                                <input type="checkbox" class="cnv-checkbox"\n                                       id="{{NOTIFY_COMMENTS_ON_POSTS_I_COMMENT_ON+\'M\'}}"\n                                       ng-disabled="disableAllMobileChk"\n                                       bo-click="updateSettings($event,NOTIFY_COMMENTS_ON_POSTS_I_COMMENT_ON+\'M\')"/>\n                                <label for="{{NOTIFY_COMMENTS_ON_POSTS_I_COMMENT_ON+\'M\'}}"></label>\n                            </div>\n                            <div class="cbkCustomizeSettings">\n\n                                <input type="checkbox" class="cnv-checkbox"\n                                       id="{{NOTIFY_COMMENTS_ON_POSTS_I_COMMENT_ON+\'N\'}}" ng-disabled="disableAllIPNChk"\n                                       bo-click="updateSettings($event,NOTIFY_COMMENTS_ON_POSTS_I_COMMENT_ON+\'N\')"/>\n                                <label for="{{NOTIFY_COMMENTS_ON_POSTS_I_COMMENT_ON+\'N\'}}"></label>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div style="padding: 5px;">\n                        <div style="display: inline-block;width: 260px;">\n                            Comments on posts shared with me\n                        </div>\n                        <div style="display: inline;margin-left: 77px;">\n                            <div bo-if="showDesktopChk" style="display: inline;">\n\n                                <input type="checkbox" class="cnv-checkbox" id="{{NOTIFY_COMMENTS_ON_DIRECTS+\'D\'}}"\n                                       ng-disabled="disableAllDesktopChk"\n                                       bo-click="updateSettings($event,NOTIFY_COMMENTS_ON_DIRECTS+\'D\')"/>\n                                <label for="{{NOTIFY_COMMENTS_ON_DIRECTS+\'D\'}}"></label>\n                            </div>\n                            <div bo-if="!showDesktopChk" class="dash">\n                                __\n                            </div>\n                            <div class="cbkCustomizeSettings">\n\n                                <input type="checkbox" class="cnv-checkbox" id="{{NOTIFY_COMMENTS_ON_DIRECTS+\'E\'}}"\n                                       ng-disabled="disableAllEmailChk"\n                                       bo-click="updateSettings($event,NOTIFY_COMMENTS_ON_DIRECTS+\'E\')"/>\n                                <label for="{{NOTIFY_COMMENTS_ON_DIRECTS+\'E\'}}"></label>\n                            </div>\n                            <div class="cbkCustomizeSettings">\n\n                                <input type="checkbox" class="cnv-checkbox" id="{{NOTIFY_COMMENTS_ON_DIRECTS+\'M\'}}"\n                                       ng-disabled="disableAllMobileChk"\n                                       bo-click="updateSettings($event,NOTIFY_COMMENTS_ON_DIRECTS+\'M\')"/>\n                                <label for="{{NOTIFY_COMMENTS_ON_DIRECTS+\'M\'}}"></label>\n                            </div>\n                            <div class="cbkCustomizeSettings">\n\n                                <input type="checkbox" class="cnv-checkbox" id="{{NOTIFY_COMMENTS_ON_DIRECTS+\'N\'}}"\n                                       ng-disabled="disableAllIPNChk"\n                                       bo-click="updateSettings($event,NOTIFY_COMMENTS_ON_DIRECTS+\'N\')"/>\n                                <label for="{{NOTIFY_COMMENTS_ON_DIRECTS+\'N\'}}"></label>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div style="background-color:#e0e0e0;padding: 5px;">\n                        <div style="display: inline-block;width: 260px;">\n                            New groups shared with me\n                        </div>\n                        <div style="display: inline;margin-left: 77px;">\n\n                            <div bo-if="showDesktopChk" style="display: inline;">\n\n                                <input type="checkbox" class="cnv-checkbox" id="{{NOTIFY_NEW_GROUP_SHARE+\'D\'}}"\n                                       ng-disabled="disableAllDesktopChk"\n                                       bo-click="updateSettings($event,NOTIFY_NEW_GROUP_SHARE+\'D\')"/>\n                                <label for="{{NOTIFY_NEW_GROUP_SHARE+\'D\'}}"></label>\n                            </div>\n                            <div bo-if="!showDesktopChk" class="dash">\n                                __\n                            </div>\n                            <div class="cbkCustomizeSettings">\n\n                                <input type="checkbox" class="cnv-checkbox" id="{{NOTIFY_NEW_GROUP_SHARE+\'E\'}}"\n                                       ng-disabled="disableAllEmailChk"\n                                       bo-click="updateSettings($event,NOTIFY_NEW_GROUP_SHARE+\'E\')"/>\n                                <label for="{{NOTIFY_NEW_GROUP_SHARE+\'E\'}}"></label>\n                            </div>\n\n                            <div style="margin-left: 100px;" class="dash">\n                                __\n                            </div>\n                            <div class="cbkCustomizeSettings">\n\n                                <input type="checkbox" class="cnv-checkbox" id="{{NOTIFY_NEW_GROUP_SHARE+\'N\'}}"\n                                       ng-disabled="disableAllIPNChk"\n                                       bo-click="updateSettings($event,NOTIFY_NEW_GROUP_SHARE+\'N\')"/>\n                                <label for="{{NOTIFY_NEW_GROUP_SHARE+\'N\'}}"></label>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div style=";padding: 5px;">\n                        <div style="display: inline-block;width: 260px;">\n                            Someone accepting my invitation\n                        </div>\n                        <div style="display: inline;margin-left: 77px;">\n\n                            <div class="dash">\n                                __\n                            </div>\n                            <div class="cbkCustomizeSettings">\n\n                                <input type="checkbox" class="cnv-checkbox" id="{{NOTIFY_INVITES_ACCEPTANCES+\'E\'}}"\n                                       ng-disabled="disableAllEmailChk"\n                                       bo-click="updateSettings($event,NOTIFY_INVITES_ACCEPTANCES+\'E\')"/>\n                                <label for="{{NOTIFY_INVITES_ACCEPTANCES+\'E\'}}"></label>\n                            </div>\n                            <div style="margin-left: 100px;" class="dash">\n                                __\n                            </div>\n                            <div style="margin-left: 100px;" class="dash">\n                                __\n                            </div>\n                        </div>\n                    </div>\n\n                    <div style="background-color:#e0e0e0;padding: 5px;">\n                        <div style="display: inline-block;width: 260px;">\n                            Someone starts following me\n                        </div>\n                        <div style="display: inline;margin-left: 77px;">\n                            <div bo-if="showDesktopChk" style="display: inline;">\n\n                                <input type="checkbox" class="cnv-checkbox" id="{{NOTIFY_NEW_FOLLOWER+\'D\'}}"\n                                       ng-disabled="disableAllDesktopChk"\n                                       bo-click="updateSettings($event,NOTIFY_NEW_FOLLOWER+\'D\')"/>\n                                <label for="{{NOTIFY_NEW_FOLLOWER+\'D\'}}"></label>\n                            </div>\n                            <div bo-if="!showDesktopChk" class="dash">\n                                __\n                            </div>\n                            <div class="cbkCustomizeSettings">\n\n                                <input type="checkbox" class="cnv-checkbox" id="{{NOTIFY_NEW_FOLLOWER+\'E\'}}"\n                                       ng-disabled="disableAllEmailChk"\n                                       bo-click="updateSettings($event,NOTIFY_NEW_FOLLOWER+\'E\')"/>\n                                <label for="{{NOTIFY_NEW_FOLLOWER+\'E\'}}"></label>\n                            </div>\n                            <div style="margin-left: 100px;" class="dash">\n                                __\n                            </div>\n                            <div class="cbkCustomizeSettings">\n\n                                <input type="checkbox" class="cnv-checkbox" id="{{NOTIFY_NEW_FOLLOWER+\'N\'}}"\n                                       ng-disabled="disableAllIPNChk"\n                                       bo-click="updateSettings($event,NOTIFY_NEW_FOLLOWER+\'N\')"/>\n                                <label for="{{NOTIFY_NEW_FOLLOWER+\'N\'}}"></label>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div style="padding: 5px;">\n                        <div style="display: inline-block;width: 260px;">\n                            Chat messages\n                        </div>\n                        <div style="display: inline;margin-left: 77px;">\n                            <div style="display: inline;">\n\n                                <input type="checkbox" class="cnv-checkbox" id="{{NOTIFY_INCOMING_CHATS+\'D\'}}"\n                                       ng-disabled="disableAllDesktopChk"\n                                       bo-click="updateSettings($event,NOTIFY_INCOMING_CHATS+\'D\')"/>\n                                <label for="{{NOTIFY_INCOMING_CHATS+\'D\'}}"></label>\n                            </div>\n                            <div style="margin-left: 100px;" class="dash">\n                                __\n                            </div>\n                            <div class="cbkCustomizeSettings">\n\n                                <input type="checkbox" class="cnv-checkbox" id="{{NOTIFY_INCOMING_CHATS+\'M\'}}"\n                                       ng-disabled="disableAllMobileChk"\n                                       bo-click="updateSettings($event,NOTIFY_INCOMING_CHATS+\'M\')"/>\n                                <label for="{{NOTIFY_INCOMING_CHATS+\'M\'}}"></label>\n                            </div>\n                            <div style="margin-left: 100px;" class="dash">\n                                __\n                            </div>\n                        </div>\n                    </div>\n\n                    <div style="background-color:#e0e0e0;padding: 5px;">\n                        <div style="display: inline-block;width: 260px;">\n                            Someone coming online\n                        </div>\n                        <div style="display: inline;margin-left: 77px;">\n                            <div style="display: inline;">\n\n                                <input type="checkbox" class="cnv-checkbox" id="{{NOTIFY_USER_STATUS_UPDATES+\'D\'}}"\n                                       ng-disabled="disableAllDesktopChk"\n                                       bo-click="updateSettings($event,NOTIFY_USER_STATUS_UPDATES+\'D\')"/>\n                                <label for="{{NOTIFY_USER_STATUS_UPDATES+\'D\'}}"></label>\n                            </div>\n                            <div style="margin-left: 100px;" class="dash">\n                                __\n                            </div>\n                            <div style="margin-left: 100px;" class="dash">\n                                __\n                            </div>\n                            <div style="margin-left: 100px;" class="dash">\n                                __\n                            </div>\n                        </div>\n                    </div>\n\n                    <div style="padding: 5px;">\n                        <div style="display: inline-block;width: 260px;">\n                            Someone requesting to join group\n                        </div>\n                        <div style="display: inline;margin-left: 77px;">\n                            <div bo-if="showDesktopChk" style="display: inline;">\n\n                                <input type="checkbox" class="cnv-checkbox" id="{{REQUEST_TO_JOIN_GROUP+\'D\'}}"\n                                       ng-disabled="disableAllDesktopChk"\n                                       bo-click="updateSettings($event,REQUEST_TO_JOIN_GROUP+\'D\')"/>\n                                <label for="{{REQUEST_TO_JOIN_GROUP+\'D\'}}"></label>\n                            </div>\n                            <div bo-if="!showDesktopChk" class="dash">\n                                __\n                            </div>\n                            <div class="cbkCustomizeSettings">\n\n                                <input type="checkbox" class="cnv-checkbox" id="{{REQUEST_TO_JOIN_GROUP+\'E\'}}"\n                                       ng-disabled="disableAllEmailChk"\n                                       bo-click="updateSettings($event,REQUEST_TO_JOIN_GROUP+\'E\')"/>\n                                <label for="{{REQUEST_TO_JOIN_GROUP+\'E\'}}"></label>\n                            </div>\n                            <div style="margin-left: 100px;" class="dash">\n                                __\n                            </div>\n                            <div class="cbkCustomizeSettings">\n\n                                <input type="checkbox" class="cnv-checkbox" id="{{REQUEST_TO_JOIN_GROUP+\'N\'}}"\n                                       ng-disabled="disableAllIPNChk"\n                                       bo-click="updateSettings($event,REQUEST_TO_JOIN_GROUP+\'N\')"/>\n                                <label for="{{REQUEST_TO_JOIN_GROUP+\'N\'}}"></label>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div style="background-color:#e0e0e0;padding: 5px;">\n                        <div style="display: inline-block;width: 260px;">\n                            I share a post via email\n                        </div>\n                        <div style="display: inline;margin-left: 77px;">\n\n                            <div class="dash">\n                                __\n                            </div>\n                            <div class="cbkCustomizeSettings">\n\n                                <input type="checkbox" class="cnv-checkbox"\n                                       id="{{SEND_CONFIRMATION_FOR_EMAIL_POSTS+\'E\'}}" ng-disabled="disableAllEmailChk"\n                                       bo-click="updateSettings($event,SEND_CONFIRMATION_FOR_EMAIL_POSTS+\'E\')"/>\n                                <label for="{{SEND_CONFIRMATION_FOR_EMAIL_POSTS+\'E\'}}"></label>\n                            </div>\n                            <div style="margin-left: 100px;" class="dash">\n                                __\n                            </div>\n                            <div style="margin-left: 100px;" class="dash">\n                                __\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n\n                <div style="margin-top: 15px">\n                    <a bo-if="!showExpandGrpUsr" href="javascript:void(0)" bo-click="showGrpAndUserList()">Subscribe to\n                        groups and people...</a>\n\n                    <div bo-if="showExpandGrpUsr">\n                        <div>\n                            <div class="subHeader">\n                                NOTIFY ME ABOUT RECENT ACTIVITY IN THESE GROUPS\n                            </div>\n                            <hr/>\n                            <div bo-repeat="group in groupsListNotifications | limitTo:grpLimit">\n                                <div style="padding: 5px;" bo-class="{rowDarkBckColor : $even}">\n                                    <div style="display: inline-block;width: 260px;"\n                                         bo-bind="group.name">\n                                    </div>\n                                    <div style="display: inline;margin-left: 77px;">\n                                        <div bo-if="showDesktopChk" style="display: inline;">\n                                            <input type="checkbox" class="cnv-checkbox" bo-id="group.group_id+\'D\'"\n                                                   ng-disabled="disableAllDesktopChk"\n                                                   bo-click="updateUserAndGrpSettings($event,group.group_id+\'D\',true)"/>\n                                            <label bo-for="group.group_id+\'D\'"></label>\n                                        </div>\n                                        <div bo-if="!showDesktopChk" class="dash">\n                                            __\n                                        </div>\n                                        <div class="cbkCustomizeSettings">\n\n                                            <input type="checkbox" class="cnv-checkbox" bo-id="group.group_id+\'E\'"\n                                                   ng-disabled="disableAllEmailChk"\n                                                   bo-click="updateUserAndGrpSettings($event,group.group_id+\'E\',true)"/>\n                                            <label bo-for="group.group_id+\'E\'"></label>\n                                        </div>\n                                        <div class="cbkCustomizeSettings">\n\n                                            <input type="checkbox" class="cnv-checkbox" bo-id="group.group_id+\'M\'"\n                                                   ng-disabled="disableAllMobileChk"\n                                                   bo-click="updateUserAndGrpSettings($event,group.group_id+\'M\',true)"/>\n                                            <label bo-for="group.group_id+\'M\'"></label>\n                                        </div>\n                                        <div class="cbkCustomizeSettings">\n\n                                            <input type="checkbox" class="cnv-checkbox" bo-id="group.group_id+\'N\'"\n                                                   ng-disabled="disableAllIPNChk"\n                                                   bo-click="updateUserAndGrpSettings($event,group.group_id+\'N\',true)"/>\n                                            <label bo-for="group.group_id+\'N\'"></label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div style="margin-top: 10px"></div>\n                            <a href="javascript:void(0)" bo-bind="grpMoreLessLabel"\n                               bo-click="expandList(\'GROUP\')">More</a>\n                        </div>\n                        <div>\n                            <div class="subHeader">\n                                NOTIFY ME ABOUT THESE TEAMMATES\' ACTIVITY\n                            </div>\n                            <hr/>\n                            <div bo-repeat="user in usersListNotifications | limitTo:userLimit">\n                                <div style="padding: 5px;" bo-class="{rowDarkBckColor : $even}">\n                                    <div style="display: inline-block;width: 260px;"\n                                         bo-bind="user.name">\n                                    </div>\n                                    <div style="display: inline;margin-left: 77px;">\n                                        <div bo-if="showDesktopChk" style="display: inline;">\n\n                                            <input type="checkbox" class="cnv-checkbox" bo-id="user.user_id+\'D\'"\n                                                   ng-disabled="disableAllDesktopChk"\n                                                   bo-click="updateUserAndGrpSettings($event,user.group_id+\'D\')"/>\n                                            <label bo-for="user.user_id+\'D\'"></label>\n                                        </div>\n                                        <div bo-if="!showDesktopChk" class="dash">\n                                            __\n                                        </div>\n                                        <div class="cbkCustomizeSettings">\n\n                                            <input type="checkbox" class="cnv-checkbox" bo-id="user.user_id+\'E\'"\n                                                   ng-disabled="disableAllEmailChk"\n                                                   bo-click="updateUserAndGrpSettings($event,user.group_id+\'E\')"/>\n                                            <label bo-for="user.user_id+\'E\'"></label>\n                                        </div>\n                                        <div class="cbkCustomizeSettings">\n\n                                            <input type="checkbox" class="cnv-checkbox" bo-id="user.user_id+\'M\'"\n                                                   ng-disabled="disableAllMobileChk"\n                                                   bo-click="updateUserAndGrpSettings($event,user.group_id+\'M\')"/>\n                                            <label bo-for="user.user_id+\'M\'"></label>\n                                        </div>\n                                        <div class="cbkCustomizeSettings">\n\n                                            <input type="checkbox" class="cnv-checkbox" bo-id="user.user_id+\'N\'"\n                                                   ng-disabled="disableAllIPNChk"\n                                                   bo-click="updateUserAndGrpSettings($event,user.group_id+\'N\')"/>\n                                            <label bo-for="user.user_id+\'N\'"></label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div style="margin-top: 10px"></div>\n                            <a href="javascript:void(0)" bo-bind="userMoreLessLabel"\n                               bo-click="expandList(\'USER\')">More</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <!--Division 3-->\n            <div class="subHeader">\n                DIGEST\n            </div>\n            <hr/>\n            Email me a digest of the top content of my network.\n            <div class="radioBtnBar" style="margin-top: 10px;margin-bottom: 10px">\n                <input id="{{DIGEST_SEND_FREQUENCY+\'N\'}}" type="radio" class="cnv-radioButton"\n                       bo-click="updateDigestSetting($event)">\n                <label for="{{DIGEST_SEND_FREQUENCY+\'N\'}}" style="margin-left: 18px;">No digest</label>\n                <input id="{{DIGEST_SEND_FREQUENCY+\'D\'}}" type="radio" class="cnv-radioButton"\n                       bo-click="updateDigestSetting($event)">\n                <label for="{{DIGEST_SEND_FREQUENCY+\'D\'}}">Daily</label>\n                <input id="{{DIGEST_SEND_FREQUENCY+\'W\'}}" type="radio" class="cnv-radioButton"\n                       bo-click="updateDigestSetting($event)">\n                <label for="{{DIGEST_SEND_FREQUENCY+\'W\'}}">Weekly</label>\n            </div>\n            <hr/>\n            <div style="margin-top: 60px">\n            </div>\n        </div>\n    </div>\n</div>');
    }
    ]),
    b.module("settings/templates/securityView.tpl.html", []).run(["$templateCache", function(a) {
        a.put("settings/templates/securityView.tpl.html", '<div cnv-settings-security bindonce class="settings-security-wrapper">\n  \n  <div class="heading">\n    <h4>Security</h4>\n  </div>\n\n  <div class="tab-navigation-wrapper">\n    <ul>\n      <li bo-class="{\'active\': currentTab === GENERAL_TAB_VIEW}" ng-click="changeTab(GENERAL_TAB_VIEW)">IP Range Restrictions</li>\n      <li bo-class="{\'active\': currentTab === LEARN_MORE_TAB_VIEW}" ng-click="changeTab(LEARN_MORE_TAB_VIEW)">Learn more</li>\n    </ul>\n  </div>\n\n  <div class="tab-view-wrapper">\n    \n    <div class="general-tab" bo-if="currentTab === GENERAL_TAB_VIEW">\n      \n      <div class="dim-text">\n        Set an IP range for your network to allow it to be accessed from your office network or VPN. When someone tries to login to {{::accountInfo.getAccountName()}} network from outside this IP range, they will be denied login.\n      </div>\n      \n      <div class="dim-text">\n        IP restrictions are not applied to the mobile app.\n      </div>\n      \n      <form name="iprangeForm" ng-submit="addIpRange();">\n        <div class="form">\n          <span>From: </span><input type="text" id="fromIp" ng-model="ipInputs.fromIp" placeholder="125.12.3.0" class="form-control" />\n          <span>To: </span><input type="text" id="toIp" ng-model="ipInputs.toIp" placeholder="125.12.3.5" class="form-control" />\n        </div>\n\n        <alert ng-repeat="alert in alerts" type="{{alert.type}}" close="closeAlert($index)">{{alert.msg}}</alert>\n\n        <button class="btn btn-primary" ng-disabled="!(ipInputs.fromIp.length > 0)">Define range</button>\n      </form>\n\n      <h4 class="summary-heading" bo-if="ipRangeList.length > 0">Existing IP ranges</h4>\n      <hr bo-if="ipRangeList.length > 0" />\n\n      <div class="existing-table" bo-if="ipRangeList.length > 0">\n        <ul>\n          <li ng-repeat="ip in ipRangeList">\n            <span>{{::ip.ip_range_start}}</span>\n            <span>{{::ip.ip_range_end}}</span>\n            <span><i class="cnv-icons-10 icons2_Close-darkgray" ng-click="removeIpRange(ip)"></i></span>\n          </li>\n        </ul>\n      </div>\n\n    </div>\n\n    <div class="general-tab" bo-if="currentTab === LEARN_MORE_TAB_VIEW">\n      \n      <p>At Convo, the security and privacy of your data is our top priority. In addition to the security\naccess options that you can set to protect your network, key highlights of Convo’s security model include:</p>\n      <ul>\n        <li>Encryption at transfer with 256-bit SSL.</li>\n        <li>Encryption at rest with high-grade 256-bit AES.</li>\n        <li>Encryption keys are securely stored in separate locations and frequently rotated.</li>\n        <li>Uninterruptible power and backup systems, plus fire and flood prevention at storage sites.</li>\n        <li>Convo employs multiple data centers to host customer data. All data centers employ physical security, strict access policies and secure vault and cages.</li>\n      </ul>\n      <br />\n      <p>\n        At-rest Encryption<br />Convo uses the latest technology and the industry best practices for data encryption of sensitive customer data. All the  data and files are encrypted, in transit to and from the Convo cloud, as well as while stored within Convo. Even in the unlikely case that a server or hard drive is compromised, because of this added layer of security, intruders would only be able to see undecipherable messages that are garbled and unreadable.\n      </p>\n      <br />\n      <p>\n        e-Discovery<br />Convo does not delete your data any point in time. This is in compliance to certain regulatory or e-Discovery requirements that necessitate the retention of deleted data.\n      </p>\n\n    </div>\n\n  </div>\n\n</div>')
    }
    ]),
    b.module("settings/templates/settingsLeftPanel.tpl.html", []).run(["$templateCache", function(a) {
        a.put("settings/templates/settingsLeftPanel.tpl.html", '<div class="wrapper-parent" cnv-setting-left-panel bindonce>\n    <div class="left-panel-wrapper">\n        <!-- left menu items code -->\n        <div class="row no-margin menuItemsContainer">\n            <ul>\n                <li>\n                    <i class="cnv-icons-20 icons2_Settings-darkgray"></i>\n                    <a href="javascript:void(0)" bo-class="{active: (View == ACCOUNT_SETTINGS_VIEW)}"\n                       ng-click="toggleView(ACCOUNT_SETTINGS_VIEW)">My account</a>\n                </li>\n                <!--<li>\n                    <i class="cnv-icons-20 icons2_mention-darkgray pull-left"></i>\n                    <a bo-href="mentionsFilter.url" ng-click="resetDirectsCount()" class="pull-left"\n                       ng-class="{active: (activeFilter == mentionsFilter)}">Profile </a>\n                </li>-->\n                <li>\n                    <i class="cnv-icons-20 Icon1_customize-01-darkgray"></i>\n                    <a href="javascript:void(0)" bo-class="{active: (View == CUSTOMIZE_FEED_VIEW)}"\n                       ng-click="toggleView(CUSTOMIZE_FEED_VIEW)">Feed and sharing</a>\n                </li>\n                <li>\n                    <i class="cnv-icons-20 icons_Notifications-darkgray"></i>\n                    <a href="javascript:void(0)" ng-click="toggleView(NOTIFICATION_VIEW)"\n                       bo-class="{active: (View == NOTIFICATION_VIEW)}">Notifications</a>\n                </li>\n                <!-- <li>\n                     <i class="cnv-icons-20 icons_Drafts-darkgray"></i>\n                     <a href="javascript:void(0)" ng-click="openIntegrationsPage()">Integrations</a>\n                 </li>-->\n            </ul>\n        </div>\n\n        <div class="row no-margin groupsItemsContainer" bo-if="(!isGuest && (isAdmin || accountLevel === \'STARTER\')) || (accountLevel !== \'STARTER\' && isAdmin)">\n            <div class="heading">\n                <span>ADMINISTRATION</span>\n            </div>\n        </div>\n\n        <div class="row no-margin menuItemsContainer">\n            <ul>\n                <li bo-if="!isGuest && (isAdmin || accountLevel === \'STARTER\')">\n                    <i class="cnv-icons-20 Icon1_networkinformation-01-darkgray"></i>\n                    <a href="javascript:void(0)" ng-click="toggleView(NETWORK_INFO_VIEW)"\n                       bo-class="{active: (View == NETWORK_INFO_VIEW)}">Network information</a>\n                </li>\n                \n                <li bo-if="!isGuest && (isAdmin && accountLevel !== \'STARTER\')">\n                    <i class="cnv-icons-20 icon2__Following-darkgray"></i>\n                    <a href="javascript:void(0)" ng-click="toggleView(MANAGE_USERS_VIEW)"\n                       bo-class="{active: (View == MANAGE_USERS_VIEW)}">Manage users</a>\n                </li>\n\n                <li bo-if="!isGuest && (isAdmin && accountLevel !== \'STARTER\') && (billingInfo.subscription_exists == 1 && billingInfo.source === \'db\')">\n                    <i class="billing-ico"></i>\n                    <a href="javascript:void(0)" ng-click="toggleView(BILLING_VIEW)"\n                       bo-class="{active: (View == BILLING_VIEW)}">Billing</a>\n                </li>\n\n                <li bo-if="!isGuest && (isAdmin && accountLevel !== \'STARTER\')">\n                    <i class="manage-content-ico"></i>\n                    <a href="javascript:void(0)" ng-click="toggleView(MONITOR_CONTENT_VIEW)"\n                       bo-class="{active: (View == MONITOR_CONTENT_VIEW)}">Manage content</a>\n                </li>\n\n                <!-- <li bo-if="!isGuest && (isAdmin && accountLevel !== \'STARTER\')">\n                    <i class="cnv-icons-20 Icon1_networkinformation-01-darkgray"></i>\n                    <a href="javascript:void(0)" ng-click="toggleView(MANAGE_GROUPS_VIEW)"\n                       bo-class="{active: (View == MANAGE_GROUPS_VIEW)}">Manage groups</a>\n                </li> -->\n\n                <li bo-if="!isGuest && (isAdmin && accountLevel !== \'STARTER\')">\n                    <i class="cnv-icons-20 icons_Lock-darkgray"></i>\n                    <a href="javascript:void(0)" ng-click="toggleView(SECURITY_VIEW)"\n                       bo-class="{active: (View == SECURITY_VIEW)}">Security</a>\n                </li>\n\n                <!-- <li bo-if="!isGuest && (isAdmin || accountLevel!=\'PREMIUM\')">\n                    <i class="cnv-icons-20 Icon1_networkinformation-01-darkgray"></i>\n                    <a href="javascript:void(0)" ng-click="toggleView(NETWORK_INFO_VIEW)"\n                       bo-class="{active: (View == SIGN_UP_MODE_VIEW)}">Sign up mode</a>\n                </li> -->\n\n                <li bo-if="accountLevel !== \'STARTER\' && isAdmin">\n                    <i class="cnv-icons-20 sso"></i>\n                    <a href="javascript:void(0)" ng-click="toggleView(SSO_SETTINGS_VIEW)"\n                       bo-class="{active: (View == SSO_SETTINGS_VIEW)}">Single sign on</a>\n                </li>\n            </ul>\n        </div>\n\n        <!-- <div class="yellowAlert" bo-if="isAdmin && accountLevel !== \'STARTER\'">\n            All new admin tools are coming soon. In the meantime, <a href="{{::adminSettingsFlexURL}}" target="_blank">click here to manage your network</a> in the previous version of the app.\n        </div> -->\n\n        <div class="upgrade-banner" bo-if="!isGuest && accountLevel === \'STARTER\'">\n            <span>Get more admin controls</span>\n            <button class="btn btn-block btn-primary" ng-click="navigateToUpgradeView()">Upgrade now</button>\n        </div>\n\n\n        <div class="background-div"></div>\n    </div>\n</div>\n')
    }
    ]),
    b.module("settings/templates/singleSignOnSettingsView.tpl.html", []).run(["$templateCache", function(a) {
        a.put("settings/templates/singleSignOnSettingsView.tpl.html", "<cnv-single-sign-on-settings></cnv-single-sign-on-settings>")
    }
    ]),
    b.module("users/usersDirectory/cnvUserDirectoryMain.tpl.html", []).run(["$templateCache", function(a) {
        a.put("users/usersDirectory/cnvUserDirectoryMain.tpl.html", '<div class="user-dir-container" bindonce>\n    <!-- Advanced Search Panel -->\n    <cnv-advanced-search></cnv-advanced-search>\n    \n    <div class="app-header">\n        <div class="user-details">\n            <div class="user-desc">\n                <span class="heading-txt">Team Directory</span>\n            </div>\n        </div>\n        <!-- <cnv-invite-teammates class="invite-teammate"></cnv-invite-teammates> -->\n    </div>\n\n    <div class="app-sub-header">\n        <a bo-class="{active: selectedView==EVERY_ONE}" href="javascript:void(0)" style="margin-left: 80px;"\n           bo-click="toggleSelectedView(EVERY_ONE)" bo-bind="titleEveryOne"></a>\n        <a bo-class="{active: selectedView==FOLLOWING}" href="javascript:void(0)"\n           bo-click="toggleSelectedView(FOLLOWING)" bo-bind="titleFollowing"></a>\n        <a bo-class="{active: selectedView==FOLLOWERS}" href="javascript:void(0)"\n           bo-click="toggleSelectedView(FOLLOWERS)" bo-bind="titleFollowers"></a>\n        <a bo-class="{active: selectedView==GUESTS}" href="javascript:void(0)"\n           bo-click="toggleSelectedView(GUESTS)" bo-bind="titleGuests"></a>\n\n        <div bo-if="initialized" class="search-field">\n            <i bo-if="users.length > 10 || isFilteredView" class="icons2_Search-lightgray cnv-icons-25 search-icon"></i>\n            <input bo-if="users.length > 10 || isFilteredView" type="text" placeholder="Search for people"/>\n        </div>\n    </div>\n\n    <div bo-if="!initialized" class="loading-spinner">\n        <img src="assets/img/feed/loading-spin.svg" alt="Loading icon"/>\n    </div>\n\n    <div bo-if="initialized">\n        <div class="view-content">\n\n            <div class="invt-container">\n                <cnv-invite-teammates></cnv-invite-teammates>\n                <div class="filter-dropdown" bo-if="userInfo.isAdmin()">\n                    <i class="cnv-icons-20 icons2_Settings-lightgray" ng-click="toggleFilterDropdown()"></i>\n                    <div class="dropdown-wrapper">\n                        <span style="padding-bottom: 5px;">Sort by:</span>\n                        <ul>\n                            <li ng-click="sortUsersBy(\'name\');toggleFilterDropdown();"><i bo-if="sortFilter === \'name\'" class="cnv-icons-15 check-white"></i>Name</li>\n                            <li ng-click="sortUsersBy(\'pendingInvites\');toggleFilterDropdown();"><i bo-if="sortFilter === \'pendingInvites\'" class="cnv-icons-15 check-white"></i>Pending Invites</li>\n                            <li ng-click="sortUsersBy(\'loginType_SSO\');toggleFilterDropdown();"><i bo-if="sortFilter === \'loginType_SSO\'" class="cnv-icons-15 check-white"></i>Login Type</li>\n                            <li ng-click="sortUsersBy(\'last_sign_in\');toggleFilterDropdown();"><i bo-if="sortFilter === \'last_sign_in\'" class="cnv-icons-15 check-white"></i>Last Sign In</li>\n                        </ul>\n                        <hr />\n                        <a href="{{::config.REST_URL}}users?method=downloadAccountUsersData">Export user list</a>\n                    </div>\n                </div>\n                <hr/>\n            </div>\n\n            <div class="users">\n                <div bo-show="!isFilteredView" class="user-info-wrapper"\n                     bo-repeat="user in users| filter:filterFunction | limitTo:showingListLimit track by user.user_id">\n                    <cnv-dropdowns class="drop-down" cnv-dropdown-ctrl="returnUserDropdownCtrl(user)"\n                                   bo-show="user.user_id != user_info.user_id && user.user_status != \'INVITED\' && user.user_role!=\'GUEST\' && user.you_follow"\n                                   cnv-dropdown-callback-params="{userId:user.user_id,ccUsrEmail:user.notification_settings.email,ccUsrMobile:user.notification_settings.mobile}"></cnv-dropdowns>\n                    <cnv-dropdowns class="drop-down" cnv-dropdown-ctrl="thisUserDrpDwnCtrl"\n                                   bo-show="user.user_id == user_info.user_id && !userInfo.isOwner()"\n                                   cnv-dropdown-callback-params="{userId:user.user_id,ccUsrEmail:user.notification_settings.email,ccUsrMobile:user.notification_settings.mobile}"></cnv-dropdowns>\n                    <cnv-dropdowns class="drop-down" cnv-dropdown-ctrl="returnInvitedUserDropdownCtrl(user)"\n                                   bo-show="user.user_id != user_info.user_id && (user.user_status == \'INVITED\' || user.user_role == \'GUEST\' || !user.you_follow)"\n                                   cnv-dropdown-callback-params="{userId:user.user_id,ccUsrEmail:user.notification_settings.email,ccUsrMobile:user.notification_settings.mobile}"></cnv-dropdowns>\n                    <div class="dp-wrapper" bo-if="user.first_name || user.last_name">\n                        <a bo-if="user.user_role == \'GUEST\'" bo-href="user.user_id | idToFilterUrlForApp:\'USER\':false:user.first_name+\' \'+user.last_name">\n                            <cnv-user-profile-image user-id="user.user_id" profile-type="user.profile_image_type"\n                                                    profile-version="user.profile_image_version"\n                                                    full-name="user.first_name+\' \'+user.last_name"></cnv-user-profile-image>\n                        </a>\n\n                        <a bo-if="user.user_role != \'GUEST\'" bo-href="user.user_id | idToFilterUrl:\'USER\'">\n                            <cnv-user-profile-image user-id="user.user_id" profile-type="user.profile_image_type"\n                                                    profile-version="user.profile_image_version"\n                                                    full-name="user.first_name+\' \'+user.last_name"></cnv-user-profile-image>\n                        </a>\n                    </div>\n                    <div class="dp-wrapper" bo-if="!user.first_name && !user.last_name">\n                        <div style="height: 48px;width: 48px;font-style: normal;line-height: 62px;text-align: center;background-color: #e0e0e0;border-radius: 50%; -webkit-border-radius: 50%">\n                            <i class="cnv-icons-25 icons_Email-darkgray"></i>\n                        </div>\n                    </div>\n                    <div class="details-wrapper">\n                        <span>\n                            <a bo-if="user.user_role == \'GUEST\'" bo-href="user.user_id | idToFilterUrlForApp:\'USER\':false:user.first_name+\' \'+user.last_name" bo-bind="user.first_name+\' \'+user.last_name | limitText:30">\n\n                            <a bo-if="user.user_role != \'GUEST\'" bo-href="user.user_id | idToFilterUrl:\'USER\'"\n                               bo-bind="user.first_name+\' \'+user.last_name | limitText:30"></a>\n                            <span bo-if="userInfo.isAdmin() && user.created_through_ldap" class="sso-badge">LDAP</span>\n                            <span bo-if="userInfo.isAdmin() && user.login_type == \'SSO\'" class="sso-badge" style="margin-left: 2px;">SSO</span>\n                        </span>\n\n                        <div bo-if="user.user_status == \'INVITED\' && (user.first_name || user.last_name)"\n                             style="  display: inline-block;background: #e0e0e0;padding: 1px 3px;color: #7b8386;margin-left: 3px;">\n                            Invited\n                        </div>\n                        <div style="display:block;">\n                            <span class="meta-txt">\n                                &lt;<span bo-bind="user.email"></span>&gt;\n                            </span>\n\n                            <div bo-if="user.designation" style="display: inline;color: #7b8386;">\n                                <div class="dot" style="display: inline;">&nbsp;&nbsp;•&nbsp;&nbsp;</div>\n                                <div bo-bind="user.designation" style="display: inline;"></div>\n                            </div>\n                        </div>\n                        <div bo-if="userInfo.isAdmin() && user.last_login_date" bo-bind="\'Last Sign In: \' + user.last_login_date | limitTo: 30" style="color: #7b8386;"></div>\n                    </div>\n                    <div bo-if="user.user_status == \'INVITED\' && !(user.first_name || user.last_name)"\n                         style="  display: inline-block;background: #e0e0e0;padding: 1px 3px;color: #7b8386;margin-left: 3px;">\n                        Invited\n                    </div>\n\n                    <button bo-show="user.user_id != user_info.user_id && user.you_follow && !user.showUnfollow"\n                            class="btn btn-default"\n                            bo-mouseenter="showHideBtn(user.user_id,true)">\n                        <i class="cnv-icons-20 check-blue" bo-show="!user.showSpinner"></i>\n                        <i class="cnv-circle-spinner-small" bo-show="user.showSpinner"></i>\n                        Following\n                    </button>\n                    <button bo-show="user.showUnfollow" class="btn btn-warning"\n                            bo-click="followUnfollowUser(user.user_id,true)"\n                            bo-mouseleave="showHideBtn(user.user_id,false)">\n                        <i class="cnv-icons-20 icon1-remove-red" bo-show="!user.showSpinner"></i>\n                        <i class="cnv-circle-spinner-small" bo-show="user.showSpinner"></i>\n                        Unfollow\n                    </button>\n\n                    <button bo-show="!user.you_follow && user.user_role!=\'GUEST\' && user.user_id != user_info.user_id && user.user_status != \'INVITED\'"\n                            class="btn btn-primary" bo-click="followUnfollowUser(user.user_id,false)">\n                        <i class="cnv-circle-spinner-small" bo-show="user.showSpinner"></i>\n                        <i class="cnv-icons-20 icons2_Add-white" bo-show="!user.showSpinner"></i>Follow\n                    </button>\n\n                    <button bo-show="user.user_role == \'GUEST\' && user.user_status != \'INVITED\'" class="btn disabled">\n                        <i class="cnv-icons-20 Icon1_guest-01"></i>\n                        Guest\n                    </button>\n                    <button bo-show="user.user_status == \'INVITED\' && !user.invitedAgain" class="btn btn-default "\n                            bo-click="inviteTeammateAgain(user,$this)">\n                        <i class="cnv-icons-20 icons_Email-blue1 normal"></i>\n                        <i class="cnv-icons-20 icons_Email-darkblue hover"></i>\n                        Invite again\n                    </button>\n                    <button bo-show="user.user_status == \'INVITED\' && user.invitedAgain" class="btn disabled">\n                        <i class="cnv-icons-20 icons_Email-darkgray"></i>\n                        Invite again\n                    </button>\n                    <button bo-show="user.user_id == user_info.user_id" class="btn disabled">\n                        That\'s you!\n                    </button>\n\n                    <div class="clear-fix"></div>\n                    <hr/>\n                </div>\n\n                <div bo-show="isFilteredView" class="user-info-wrapper"\n                     bo-repeat="user in filteredUsers| filter:filterFunction | limitTo:showingListLimit track by user.user_id"> \n                    <cnv-dropdowns class="drop-down" cnv-dropdown-ctrl="returnUserDropdownCtrl(user)"\n                                   bo-show="user.user_id != user_info.user_id && user.user_status != \'INVITED\' && user.user_role !=\'GUEST\' && user.you_follow"\n                                   cnv-dropdown-callback-params="{userId:user.user_id,ccUsrEmail:user.notification_settings.email,ccUsrMobile:user.notification_settings.mobile}"></cnv-dropdowns>\n                    <cnv-dropdowns class="drop-down" cnv-dropdown-ctrl="thisUserDrpDwnCtrl"\n                                   bo-show="user.user_id == user_info.user_id && !userInfo.isOwner()"\n                                   cnv-dropdown-callback-params="{userId:user.user_id,ccUsrEmail:user.notification_settings.email,ccUsrMobile:user.notification_settings.mobile}"></cnv-dropdowns>\n                    <cnv-dropdowns class="drop-down" cnv-dropdown-ctrl="returnInvitedUserDropdownCtrl(user)"\n                                   bo-show="user.user_id != user_info.user_id && (user.user_status == \'INVITED\' || user.user_role==\'GUEST\' || !user.you_follow)"\n                                   cnv-dropdown-callback-params="{userId:user.user_id,ccUsrEmail:user.notification_settings.email,ccUsrMobile:user.notification_settings.mobile}"></cnv-dropdowns>\n                    <div class="dp-wrapper" bo-if="user.first_name || user.last_name">\n\n                        <a bo-if="user.user_role == \'GUEST\'" bo-href="user.user_id | idToFilterUrlForApp:\'USER\':false:user.first_name+\' \'+user.last_name">\n                            <cnv-user-profile-image user-id="user.user_id" profile-type="user.profile_image_type"\n                                                    profile-version="user.profile_image_version"\n                                                    full-name="user.first_name+\' \'+user.last_name"></cnv-user-profile-image>\n                        </a>\n\n                        <a bo-if="user.user_role != \'GUEST\'" bo-href="user.user_id | idToFilterUrl:\'USER\'">\n                            <cnv-user-profile-image user-id="user.user_id" profile-type="user.profile_image_type"\n                                                    profile-version="user.profile_image_version"\n                                                    full-name="user.first_name+\' \'+user.last_name"></cnv-user-profile-image>\n                        </a>\n                    </div>\n                    <div class="dp-wrapper" bo-if="!user.first_name && !user.last_name">\n                        <div style="height: 48px;width: 48px;font-style: normal;line-height: 62px;text-align: center;background-color: #e0e0e0;border-radius: 50%; -webkit-border-radius: 50%">\n                            <i class="cnv-icons-25 icons_Email-darkgray"></i>\n                        </div>\n                    </div>\n                    <div class="details-wrapper">\n                        <span>\n                            <a bo-if="user.user_role == \'GUEST\'" bo-href="user.user_id | idToFilterUrlForApp:\'USER\':false:user.first_name+\' \'+user.last_name" bo-bind="user.first_name+\' \'+user.last_name | limitText:30">\n\n                            <a bo-if="user.user_role != \'GUEST\'" bo-href="user.user_id | idToFilterUrl:\'USER\'"\n                               bo-bind="user.first_name+\' \'+user.last_name | limitText:30"></a>\n\n                            <span bo-if="userInfo.isAdmin() && user.created_through_ldap" class="sso-badge">LDAP</span>\n                            <span bo-if="userInfo.isAdmin() && user.login_type == \'SSO\'" class="sso-badge" style="margin-left: 2px;">SSO</span>\n                        </span>\n\n                        <div bo-if="user.user_status == \'INVITED\' && (user.first_name || user.last_name)"\n                             style="  display: inline-block;background: #e0e0e0;padding: 1px 3px;color: #7b8386;margin-left: 3px;">\n                            Invited\n                        </div>\n                        <div style="display:block;">\n                            <span class="meta-txt">\n                                &lt;<span bo-bind="user.email"></span>&gt;\n                            </span>\n\n                            <div bo-if="user.designation" style="display: inline;color: #7b8386;">\n                                <div class="dot" style="display: inline;">&nbsp;&nbsp;•&nbsp;&nbsp;</div>\n                                <div bo-bind="user.designation" style="display: inline;"></div>\n                            </div>\n                        </div>\n                        <div bo-if="userInfo.isAdmin() && user.last_login_date" bo-bind="\'Last Sign In: \' + user.last_login_date | limitTo: 30" style="color: #7b8386;"></div>\n                    </div>\n                    <div bo-if="user.user_status == \'INVITED\' && !(user.first_name || user.last_name)"\n                         style="  display: inline-block;background: #e0e0e0;padding: 1px 3px;color: #7b8386;margin-left: 3px;">\n                        Invited\n                    </div>\n\n                    <button bo-show="user.you_follow && !user.showUnfollow" class="btn btn-default"\n                            bo-mouseenter="showHideBtn(user.user_id,true)">\n                        <i class="cnv-icons-20 check-blue" bo-show="!user.showSpinner"></i>\n                        <i class="cnv-circle-spinner-small" bo-show="user.showSpinner"></i>\n                        Following\n                    </button>\n                    <button bo-show="user.showUnfollow" class="btn btn-warning"\n                            bo-click="followUnfollowUser(user.user_id,true)"\n                            bo-mouseleave="showHideBtn(user.user_id,false)">\n                        <i class="cnv-icons-20 icon1-remove-red" bo-show="!user.showSpinner"></i>\n                        <i class="cnv-circle-spinner-small" bo-show="user.showSpinner"></i>\n                        Unfollow\n                    </button>\n\n                    <button bo-show="!user.you_follow && user.user_role!=\'GUEST\' && user.user_id != user_info.user_id && user.user_status != \'INVITED\'"\n                            class="btn btn-default" bo-click="followUnfollowUser(user.user_id,false)">\n                        <i class="cnv-circle-spinner-small" bo-show="user.showSpinner"></i>\n                        <i class="cnv-icons-20 icons2_Add-darkgray" bo-show="!user.showSpinner"></i>Follow\n                    </button>\n\n                    <button bo-show="user.user_role == \'GUEST\' && user.user_status != \'INVITED\'" class="btn disabled">\n                        <i class="cnv-icons-20 Icon1_guest-01"></i>\n                        Guest\n                    </button>\n                    <button bo-show="user.user_status == \'INVITED\'&& !user.invitedAgain" class="btn btn-default "\n                            bo-click="inviteTeammateAgain(user,$this)">\n                        <i class="cnv-icons-20 icons_Email-blue1 normal"></i>\n                        <i class="cnv-icons-20 icons_Email-darkblue hover"></i>\n                        Invite again\n                    </button>\n                    <button bo-show="user.user_status == \'INVITED\' && user.invitedAgain" class="btn disabled">\n                        <i class="cnv-icons-20 icons_Email-white"></i>\n                        Invite again\n                    </button>\n                    <button bo-show="user.user_id == user_info.user_id" class="btn disabled">\n                        That\'s you!\n                    </button>\n\n                    <div class="clear-fix"></div>\n                    <hr/>\n                </div>\n            </div>\n\n            <div bo-show="show1UserMessage"\n                 style="text-align: center;margin-top: 100px;padding-bottom: 100px;color: #7b8386;">\n                It\'s just you here.\n                <br>\n                <a href="javascript:void(0)" bo-click="openInviteTeammatesDialog()">Invite your teammates</a>\n                to join you.\n            </div>\n            <div bo-show="show3UserMessage"\n                 style="text-align: center;margin-top: 80px;padding-bottom: 100px;color: #7b8386;">\n                Got more people on the team?\n                <br>\n                <a href="javascript:void(0)" bo-click="openInviteTeammatesDialog()">Invite</a>\n                them.\n            </div>\n\n        </div>\n    </div>\n</div>\n')
    }
    ]),
    b.module("users/usersDirectory/userDirModal/usrDirModal.tpl.html", []).run(["$templateCache", function(a) {
        a.put("users/usersDirectory/userDirModal/usrDirModal.tpl.html", '<div bindonce>\n    <div class="modal-header">\n        <h4 bo-bind="title1"></h4>\n        <button type="button" class="close" ng-click="cancel()">×</button>\n    </div>\n    <div bo-show="modalDetails.isProcessing"\n         style="width: 100%;height: 390px;opacity: 0.7;background: #ffffff;z-index: 101;position: absolute;">\n        <div class="loading-spinner">\n            <img src="assets/img/feed/loading-spin.svg" alt="Loading icon"/>\n        </div>\n    </div>\n    <div class="modal-body">\n        <div class="spinner-container" bo-if="modalDetails.state == \'wait\'">\n            <i class="cnv-circle-spinner-small"></i> Loading\n        </div>\n\n        <div bo-if="modalDetails.state == \'active\'">\n            <input bo-show="groups.length > 10 || isFilteredView" type="text" placeholder="Search for groups"\n                   class="searchGroupInput"/>\n\n            <!--   -->\n            <perfect-scrollbar class="scrollable" wheel-propagation="false" wheel-speed="50"\n                               bo-class="{\'scrollableHeight\': groups.length < 10 && !isFilteredView}"\n                               bo-show="!showNoGroupMessage && groups.length">\n                <div bo-show="groups.length < 10 && !isFilteredView" style="margin-top: 40px"></div>\n                <div bo-show="!isFilteredView" ng-repeat="group in groups track by $index">\n                    <div style="margin-left: 30px;position: relative;">\n                        <div bo-if="!group.can_add_user && group.buttonTitle==\'Add\'" class="disableButtonOverlay"\n                             cnv-popover cnv-popover-ctrl="group.cannot_add_reason"></div>\n                        <button bo-if="modalDetails.modalId == \'addMd\'" class="btn btn-default"\n                                bo-class="{\'disabled\' : !group.can_add_user ,\'btn-default\' : group.can_add_user}"\n                                bo-bind="group.buttonTitle"\n                                ng-click="addRemoveUserFromGroup($event,group.group_id,group.buttonTitle)"\n                                style="float: right;width: 100px; margin-right: 30px; margin-top: 10px">Add\n                        </button>\n                        <div bo-if="!group.can_remove_user && group.buttonTitle==\'Remove\'" class="disableButtonOverlay"\n                             cnv-popover cnv-popover-ctrl="group.cannot_remove_reason"></div>\n                        <button bo-if="modalDetails.modalId == \'rmvMd\'" class="btn btn-default"\n                                bo-class="{\'disabled\' :!group.can_remove_user ,\'btn-default\' :  group.can_remove_user}"\n                                bo-bind="group.buttonTitle"\n                                ng-click="addRemoveUserFromGroup($event,group.group_id,group.buttonTitle)"\n                                style="float: right;width: 100px;  margin-right: 30px; margin-top: 10px">Remove\n                        </button>\n                        <i class="cnv-icons-20"\n                           bo-class="{\'privateGroup_icon-lightgray\': group.access == \'PRIVATE\' || group.access == \'SECRET\', \'Icon1_PublicChannel-01-lightgray\': group.access == \'PUBLIC\'}"></i>\n                        <a style="margin-left: 10px;" bo-href="group.group_id | idToFilterUrlForApp:\'GROUP\'"\n                           bo-bind="group.title">\n                        </a>\n                        <br>\n\n                        <div style="margin-left: 35px;line-height: 35px;">\n                            by\n                            <a bo-href="group.created_by | idToFilterUrl:\'USER\'"\n                               bo-bind="users[group.created_by].name"></a>\n                        </div>\n                        <hr>\n                    </div>\n                </div>\n\n                <div bo-show="isFilteredView" ng-repeat="group in filteredGroups track by $index">\n                    <div style="margin-left: 30px;position: relative;">\n                        <div bo-if="!group.can_add_user && group.buttonTitle==\'Add\'" class="disableButtonOverlay"\n                             cnv-popover cnv-popover-ctrl="group.cannot_add_reason"></div>\n                        <button bo-if="modalDetails.modalId == \'addMd\'" class="btn btn-default" c\n                                bo-class="{\'disabled\' : !group.can_add_user ,\'btn-default\' : group.can_add_user}"\n                                bo-bind="group.buttonTitle"\n                                ng-click="addRemoveUserFromGroup($event,group.group_id,group.buttonTitle)"\n                                style="float: right;width: 100px; margin-right: 12px; margin-top: 10px">Add\n                        </button>\n                        <div bo-if="!group.can_remove_user && group.buttonTitle==\'Remove\'" class="disableButtonOverlay"\n                             cnv-popover cnv-popover-ctrl="group.cannot_remove_reason"></div>\n                        <button bo-if="modalDetails.modalId == \'rmvMd\'" class="btn btn-default"\n                                bo-class="{\'disabled\' :!group.can_remove_user ,\'btn-default\' :  group.can_remove_user}"\n                                bo-bind="group.buttonTitle"\n                                ng-click="addRemoveUserFromGroup($event,group.group_id,group.buttonTitle)"\n                                style="float: right;width: 100px;  margin-right: 12px; margin-top: 10px">Remove\n                        </button>\n                        <i class="cnv-icons-20"\n                           bo-class="{\'privateGroup_icon-lightgray\': group.access == \'PRIVATE\' || group.access == \'SECRET\', \'Icon1_PublicChannel-01-lightgray\': group.access == \'PUBLIC\'}"></i>\n                        <a bo-href="group.group_id | idToFilterUrlForApp:\'GROUP\'" bo-bind="group.title">\n                        </a>\n                        <br>\n\n                        <div style="margin-left: 25px;line-height: 35px;">\n                            by\n                            <a bo-href="group.created_by | idToFilterUrl:\'USER\'"\n                               bo-bind="users[group.created_by].name"></a>\n                        </div>\n                        <hr>\n                    </div>\n                </div>\n\n            </perfect-scrollbar>\n\n            <div bo-if="showNoGroupMessage" bo-bind="noGroupMessage"\n                 style="text-align: center;padding-top:160px;color: #7b8386;">\n            </div>\n            <div style="text-align: center;margin-top:10px;"\n                 bo-if="showNoGroupMessage && modalDetails.modalId == \'addMd\'">\n                <button class="btn btn-default" bo-click="createGroup()">Create a group\n                </button>\n            </div>\n\n        </div>\n    </div>\n    <div class="modal-footer">\n    </div>\n</div>');
    }
    ]),
    b.module("templates-common", [])
}(window, window.angular);
//# sourceMappingURL=convo-web-app-2016.04.12.03.js.map
